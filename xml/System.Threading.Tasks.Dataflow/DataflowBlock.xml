<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataflowBlock.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5363d80c93ed84b3be24a1ccc952c5fc0c4467af3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">363d80c93ed84b3be24a1ccc952c5fc0c4467af3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.Tasks.Dataflow.DataflowBlock">
          <source>Provides a set of static (Shared in Visual Basic) methods for working with dataflow blocks.</source>
          <target state="translated">Stellt einen Satz mit statischen (Shared in Visual Basic) Methoden für die Arbeit mit Datenflussblöcken bereit.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>Specifies the type of data contained in the source.</source>
          <target state="translated">Gibt den Datentyp an, der in der Quelle enthalten ist.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>The source to wrap.</source>
          <target state="translated">Die Quelle, die umschlossen werden soll.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.IObservable`1" /&gt;</ph> abstraction over the <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.IObservable`1" /&gt;</ph> Abstraktion über <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.IObservable`1" /&gt;</ph> that enables observers to be subscribed to the source.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IObservable`1" /&gt;</ph>, das Beobachtern erlaubt, die Quelle zu abonnieren.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0})">
          <source>Specifies the type of input accepted by the target block.</source>
          <target state="translated">Gibt den Typ der Eingabe an, die vom Zielblock akzeptiert wird.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0})">
          <source>The target to wrap.</source>
          <target state="translated">Das zu umschließende Ziel</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.IObserver`1" /&gt;</ph> abstraction over the  <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.IObserver`1" /&gt;</ph>-Abstraktion über <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0})">
          <source>An observer that wraps the target block.</source>
          <target state="translated">Ein Beobachter, der den Zielblock umschließt.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})">
          <source>Specifies type of data contained in the first source.</source>
          <target state="translated">Gibt den Typ der Daten an, die in der ersten Quelle enthalten sind.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})">
          <source>Specifies type of data contained in the second source.</source>
          <target state="translated">Gibt den Typ der Daten an, die in der zweiten Quelle enthalten sind.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})">
          <source>The first source.</source>
          <target state="translated">Die erste Quelle.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})">
          <source>The handler to execute on data from the first source.</source>
          <target state="translated">Der Handler zu Ausführen von Daten aus der ersten Quelle.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})">
          <source>The second source.</source>
          <target state="translated">Die zweite Quelle.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})">
          <source>The handler to execute on data from the second source.</source>
          <target state="translated">Der Handler zu Ausführen von Daten aus der zweiten Quelle.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})">
          <source>Monitors two dataflow sources, invoking the provided handler for whichever source makes data available first.</source>
          <target state="translated">Überwacht zwei Datenflussquellen, wobei der angegebene Handler für eine beliebige Quelle aufgerufen wird, die Daten zuerst verfügbar macht.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})">
          <source>A  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> that represents the asynchronous choice.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>, die die asynchrone Auswahl darstellt.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})">
          <source>If both sources are completed prior to the choice completing, the resulting task will be canceled.</source>
          <target state="translated">Wenn beide Quellen vor dem Abschluss der Auswahl beendet werden, wird die resultierende Aufgabe abgebrochen.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})">
          <source>When one of the sources has data available and successfully propagates it to the choice, the resulting task will complete when the handler completes; if the handler throws an exception, the task will end in the <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /&gt;</ph> state and will contain the unhandled exception.</source>
          <target state="translated">Wenn eine der Datenquellen verfügbare Daten hat und erfolgreich an die Auswahl weitergibt, wird die resultierende Aufgabe abgeschlossen, wenn der Handler abgeschlossen wird. Wenn der Handler eine Ausnahme auslöst, endet die Aufgabe im Zustand <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /&gt;</ph> und enthält den Ausnahmefehler.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})">
          <source>Otherwise, the task will end with its <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> set to either 0 or 1 to represent the first or second source, respectively.</source>
          <target state="translated">Andernfalls wird die Aufgabe mit dem <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> beendet, das entweder auf 0 oder 1 festgelegt ist, um jeweils die erste oder zweite Quelle darzustellen.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})">
          <source>This method will only consume an element from one of the two data sources, never both.</source>
          <target state="translated">Diese Methode verwendet nur ein Element aus einer der beiden Datenquellen, nie beide.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="source1" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source1" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})">
          <source>The  <ph id="ph1">&lt;paramref name="action1" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="action1" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="source2" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source2" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})">
          <source>The <ph id="ph1">&lt;paramref name="action2" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="action2" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>Specifies type of data contained in the first source.</source>
          <target state="translated">Gibt den Typ der Daten an, die in der ersten Quelle enthalten sind.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>Specifies type of data contained in the second source.</source>
          <target state="translated">Gibt den Typ der Daten an, die in der zweiten Quelle enthalten sind.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>The first source.</source>
          <target state="translated">Die erste Quelle.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>The handler to execute on data from the first source.</source>
          <target state="translated">Der Handler zu Ausführen von Daten aus der ersten Quelle.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>The second source.</source>
          <target state="translated">Die zweite Quelle.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>The handler to execute on data from the second source.</source>
          <target state="translated">Der Handler zu Ausführen von Daten aus der zweiten Quelle.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>The options with which to configure this choice.</source>
          <target state="translated">Die Optionen, mit denen diese Wahl zu konfigurieren ist.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>Monitors two dataflow sources, invoking the provided handler for whichever source makes data available first.</source>
          <target state="translated">Überwacht zwei Datenflussquellen, wobei der angegebene Handler für eine beliebige Quelle aufgerufen wird, die Daten zuerst verfügbar macht.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>A  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> that represents the asynchronous choice.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>, die die asynchrone Auswahl darstellt.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>If both sources are completed prior to the choice completing, or if the <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> provided as part of <ph id="ph2">&lt;paramref name="dataflowBlockOptions" /&gt;</ph> is canceled prior to the choice completing, the resulting task will be canceled.</source>
          <target state="translated">Wenn alle Quellen vor dem Abschließen der Auswahl abgeschlossen werden oder wenn <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph>, das als Teil von <ph id="ph2">&lt;paramref name="dataflowBlockOptions" /&gt;</ph> bereitgestellt wird, vor dem Abschließen der Auswahl abgebrochen wird, wird die resultierende Aufgabe abgebrochen.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>When one of the sources has data available and successfully propagates it to the choice, the resulting task will complete when the handler completes; if the handler throws an exception, the task will end in the <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /&gt;</ph> state and will contain the unhandled exception.</source>
          <target state="translated">Wenn eine der Datenquellen verfügbare Daten hat und erfolgreich an die Auswahl weitergibt, wird die resultierende Aufgabe abgeschlossen, wenn der Handler abgeschlossen wird. Wenn der Handler eine Ausnahme auslöst, endet die Aufgabe im Zustand <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /&gt;</ph> und enthält den Ausnahmefehler.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>Otherwise, the task will end with its <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> set to either 0 or 1 to represent the first or second source, respectively.</source>
          <target state="translated">Andernfalls wird die Aufgabe mit dem <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> beendet, das entweder auf 0 oder 1 festgelegt ist, um jeweils die erste oder zweite Quelle darzustellen.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>The <ph id="ph1">&lt;paramref name="source1" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source1" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>The <ph id="ph1">&lt;paramref name="action1" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="action1" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>The <ph id="ph1">&lt;paramref name="source2" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source2" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>The <ph id="ph1">&lt;paramref name="action2" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="action2" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>The <ph id="ph1">&lt;paramref name="dataflowBlockOptions" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dataflowBlockOptions" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})">
          <source>Specifies type of data contained in the first source.</source>
          <target state="translated">Gibt den Typ der Daten an, die in der ersten Quelle enthalten sind.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})">
          <source>Specifies type of data contained in the second source.</source>
          <target state="translated">Gibt den Typ der Daten an, die in der zweiten Quelle enthalten sind.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})">
          <source>Specifies type of data contained in the third source.</source>
          <target state="translated">Gibt den Datentyp an, der in der dritten Quelle enthalten ist.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})">
          <source>The first source.</source>
          <target state="translated">Die erste Quelle.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})">
          <source>The handler to execute on data from the first source.</source>
          <target state="translated">Der Handler zu Ausführen von Daten aus der ersten Quelle.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})">
          <source>The second source.</source>
          <target state="translated">Die zweite Quelle.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})">
          <source>The handler to execute on data from the second source.</source>
          <target state="translated">Der Handler zu Ausführen von Daten aus der zweiten Quelle.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})">
          <source>The third source.</source>
          <target state="translated">Die dritte Quelle.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})">
          <source>The handler to execute on data from the third source.</source>
          <target state="translated">Die Handler zu Ausführen von Daten aus der dritten Quelle.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})">
          <source>Monitors three dataflow sources, invoking the provided handler for whichever source makes data available first.</source>
          <target state="translated">Überwacht drei Datenflussquellen, wobei der angegebene Handler für eine beliebige Quelle aufgerufen wird, die Daten zuerst verfügbar macht.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})">
          <source>A  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> that represents the asynchronous choice.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>, die die asynchrone Auswahl darstellt.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})">
          <source>If all sources are completed prior to the choice completing, the resulting task will be canceled.</source>
          <target state="translated">Wenn alle Quellen vor dem Abschluss der Auswahl beendet werden, wird die resultierende Aufgabe abgebrochen.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})">
          <source>When one of the sources has data available and successfully propagates it to the choice, the resulting task will complete when the handler completes; if the handler throws an exception, the task will end in the <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /&gt;</ph> state and will contain the unhandled exception.</source>
          <target state="translated">Wenn eine der Datenquellen verfügbare Daten hat und erfolgreich an die Auswahl weitergibt, wird die resultierende Aufgabe abgeschlossen, wenn der Handler abgeschlossen wird. Wenn der Handler eine Ausnahme auslöst, endet die Aufgabe im Zustand <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /&gt;</ph> und enthält den Ausnahmefehler.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})">
          <source>Otherwise, the task will end with its <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> set to the 0-based index of the source.</source>
          <target state="translated">Andernfalls wird die Aufgabe mit dem <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> beendet, das auf den 0-basierten Index der Quelle festgelegt ist.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})">
          <source>This method will only consume an element from one of the data sources, never more than one.</source>
          <target state="translated">Diese Methode verwendet nur ein Element aus einer der Datenquellen, nie mehr als eine.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})">
          <source>The <ph id="ph1">&lt;paramref name="source1" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source1" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})">
          <source>The <ph id="ph1">&lt;paramref name="action1" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="action1" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})">
          <source>The <ph id="ph1">&lt;paramref name="source2" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source2" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})">
          <source>The <ph id="ph1">&lt;paramref name="action2" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="action2" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})">
          <source>The <ph id="ph1">&lt;paramref name="source3" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source3" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})">
          <source>The <ph id="ph1">&lt;paramref name="action3" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="action3" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>Specifies type of data contained in the first source.</source>
          <target state="translated">Gibt den Typ der Daten an, die in der ersten Quelle enthalten sind.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>Specifies type of data contained in the second source.</source>
          <target state="translated">Gibt den Typ der Daten an, die in der zweiten Quelle enthalten sind.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>Specifies type of data contained in the third source.</source>
          <target state="translated">Gibt den Datentyp an, der in der dritten Quelle enthalten ist.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>The first source.</source>
          <target state="translated">Die erste Quelle.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>The handler to execute on data from the first source.</source>
          <target state="translated">Der Handler zu Ausführen von Daten aus der ersten Quelle.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>The second source.</source>
          <target state="translated">Die zweite Quelle.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>The handler to execute on data from the second source.</source>
          <target state="translated">Der Handler zu Ausführen von Daten aus der zweiten Quelle.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>The third source.</source>
          <target state="translated">Die dritte Quelle.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>The handler to execute on data from the third source.</source>
          <target state="translated">Die Handler zu Ausführen von Daten aus der dritten Quelle.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>The options with which to configure this choice.</source>
          <target state="translated">Die Optionen, mit denen diese Wahl zu konfigurieren ist.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>Monitors three dataflow sources, invoking the provided handler for whichever source makes data available first.</source>
          <target state="translated">Überwacht drei Datenflussquellen, wobei der angegebene Handler für eine beliebige Quelle aufgerufen wird, die Daten zuerst verfügbar macht.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>A  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> that represents the asynchronous choice.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>, die die asynchrone Auswahl darstellt.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>If all sources are completed prior to the choice completing, or if the <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> provided as part of <ph id="ph2">&lt;paramref name="dataflowBlockOptions" /&gt;</ph> is canceled prior to the choice completing, the resulting task will be canceled.</source>
          <target state="translated">Wenn alle Quellen vor dem Abschließen der Auswahl abgeschlossen werden oder wenn <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph>, das als Teil von <ph id="ph2">&lt;paramref name="dataflowBlockOptions" /&gt;</ph> bereitgestellt wird, vor dem Abschließen der AUswahl abgebrochen wird, wird die resultierende Aufgabe abgebrochen.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>When one of the sources has data available and successfully propagates it to the choice, the resulting task will complete when the handler completes; if the handler throws an exception, the task will end in the <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /&gt;</ph> state and will contain the unhandled exception.</source>
          <target state="translated">Wenn eine der Datenquellen verfügbare Daten hat und erfolgreich an die Auswahl weitergibt, wird die resultierende Aufgabe abgeschlossen, wenn der Handler abgeschlossen wird. Wenn der Handler eine Ausnahme auslöst, endet die Aufgabe im Zustand <ph id="ph1">&lt;see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /&gt;</ph> und enthält den Ausnahmefehler.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>Otherwise, the task will end with its <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> set to the 0-based index of the source.</source>
          <target state="translated">Andernfalls wird die Aufgabe mit dem <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> beendet, das auf den 0-basierten Index der Quelle festgelegt ist.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>This method will only consume an element from one of the data sources, never more than one.</source>
          <target state="translated">Diese Methode verwendet nur ein Element aus einer der Datenquellen, nie mehr als eine.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>If cancellation is requested after an element has been received, the cancellation request will be ignored, and the relevant handler will be allowed to execute.</source>
          <target state="translated">Wenn der Abbruch angefordert wird, nachdem ein Element empfangen wurde, wird die Abbruchanforderung ignoriert, und der entsprechende Handler ist zulässig.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>The <ph id="ph1">&lt;paramref name="source1" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source1" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>The <ph id="ph1">&lt;paramref name="action1" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="action1" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>The <ph id="ph1">&lt;paramref name="source2" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source2" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>The <ph id="ph1">&lt;paramref name="action2" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="action2" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>The <ph id="ph1">&lt;paramref name="source3" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source3" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>The <ph id="ph1">&lt;paramref name="action3" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="action3" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
          <source>The <ph id="ph1">&lt;paramref name="dataflowBlockOptions" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dataflowBlockOptions" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1})">
          <source>Specifies the type of input expected by the target.</source>
          <target state="translated">Gibt den Typ der Eingabe an, die vom Ziel erwartet wird.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1})">
          <source>Specifies the type of output produced by the source.</source>
          <target state="translated">Gibt den Typ der Ausgabe an, die von der Quelle erzeugt wurde.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1})">
          <source>The target to encapsulate.</source>
          <target state="translated">Das zu kapselnde Ziel</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1})">
          <source>The source to encapsulate.</source>
          <target state="translated">Die zu kapselnde Quelle.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1})">
          <source>Encapsulates a target and a source into a single propagator.</source>
          <target state="translated">Kapselt ein Ziel und eine Quelle in eine einzelne Propagierung.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1})">
          <source>The encapsulated target and source.</source>
          <target state="translated">Die gekapselte Quelle und Ziel.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1})">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate%2A&gt;</ph> method requires two existing blocks: a target block (an instance of a class that implements <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ITargetBlock%601&gt;</ph>) and a source block (an instance of a class that implements <ph id="ph3">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601&gt;</ph>).</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate%2A&gt;</ph> Methode erfordert zwei vorhandene Blöcke: ein Zielblock (eine Instanz einer Klasse, die implementiert <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ITargetBlock%601&gt;</ph>) und ein Quellblock (eine Instanz einer Klasse, die implementiert <ph id="ph3">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1})">
          <source><ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate%2A&gt;</ph> creates a new instance of an internal class that connects the <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ITargetBlock%601&gt;</ph> interface members to the <ph id="ph3">`target`</ph> parameter and the <ph id="ph4">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601&gt;</ph> interface members to the <ph id="ph5">`source`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate%2A&gt;</ph> erstellt eine neue Instanz der eine interne Klasse, die eine Verbindung herstellt der <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ITargetBlock%601&gt;</ph> Schnittstellenmember um die <ph id="ph3">`target`</ph> Parameter und die <ph id="ph4">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601&gt;</ph> Schnittstellenmember um die <ph id="ph5">`source`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1})">
          <source>Both <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ITargetBlock%601&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601&gt;</ph> derive from <ph id="ph3">&lt;xref:System.Threading.Tasks.Dataflow.IDataflowBlock&gt;</ph>.</source>
          <target state="translated">Beide <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ITargetBlock%601&gt;</ph> und <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.ISourceBlock%601&gt;</ph> abgeleitet <ph id="ph3">&lt;xref:System.Threading.Tasks.Dataflow.IDataflowBlock&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1})">
          <source>Block completion is explicitly passed from sources to targets.</source>
          <target state="translated">Block Abschluss wird explizit aus Quellen, Ziele übergeben.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1})">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A&gt;</ph> methods are connected to the target while the <ph id="ph3">&lt;xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion%2A&gt;</ph> property is connected to the source.</source>
          <target state="translated">Aus diesem Grund die <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A&gt;</ph> Methoden verbunden sind, an das Ziel bei der <ph id="ph3">&lt;xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion%2A&gt;</ph> Eigenschaft mit der Datenquelle verbunden ist.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1})">
          <source>You must ensure that when the target half  completes, the source half gets completed in the most appropriate manner; for example:</source>
          <target state="translated">Sie müssen sicherstellen, dass beim Ziel Hälfte abgeschlossen ist, die Quelle Hälfte ruft wurde in die am besten geeignete Weise; Zum Beispiel:</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1})">
          <source>Or, if you want to propagate the completion type, you can use this more sophisticated code:</source>
          <target state="translated">Oder, wenn Sie abschlusstyps weitergeben möchten, können Sie komplexere Code:</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1})">
          <source>You must also explicitly provide the message propagation from target to source.</source>
          <target state="translated">Sie müssen die Nachrichtenweitergabe vom Ziel zu Quelle auch explizit angeben.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1})">
          <source>The benefit of this explicit connection is that it gives you the freedom to perform any unconstrained processing between the two encapsulated blocks.</source>
          <target state="translated">Der Vorteil dieser explizite Verbindung ist, dass es Ihnen die Freiheit gibt ermöglicht, die nicht eingeschränkte Verarbeitungsschritte zwischen den zwei gekapselten Blöcke auszuführen.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1})">
          <source>You may do that either by encoding the necessary processing into the blocks' delegates (if the blocks take delegates), or by embedding a sub-network of blocks between them.</source>
          <target state="translated">Sie können dies tun codieren Sie die erforderliche Verarbeitung in den Blöcken Delegaten (sofern die Blöcke Delegate akzeptiert) oder durch das Einbetten von ein Subnetzwerk von Blöcken dazwischen.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1})">
          <source>The easier way is to use a block that takes delegates; for example, use <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ActionBlock%601&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.TransformBlock%602&gt;</ph>, <ph id="ph3">&lt;xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602&gt;</ph> (if applicable), or a custom block.</source>
          <target state="translated">Einfachere Möglichkeit ist die Verwendung ein Blocks, das Delegaten akzeptiert; Verwenden Sie z. B. <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ActionBlock%601&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.TransformBlock%602&gt;</ph>, <ph id="ph3">&lt;xref:System.Threading.Tasks.Dataflow.TransformManyBlock%602&gt;</ph> (falls zutreffend), oder einen benutzerdefinierten Block.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})">
          <source>Specifies the type of data contained in the source.</source>
          <target state="translated">Gibt den Datentyp an, der in der Quelle enthalten ist.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})">
          <source>The source from which to link.</source>
          <target state="translated">Die zu verknüpfende Quelle.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> to which to connect the source.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>, an den die Quelle verbunden werden soll.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})">
          <source>Links the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph> to the specified  <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>.</source>
          <target state="translated">Verbindet <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph> mit dem angegebenen <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph> that, upon calling <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>, will unlink the source from the target.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph>, der nach dem Aufrufen von <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>, die Quelle vom Ziel löst.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})">
          <source>Specifies the type of data contained in the source.</source>
          <target state="translated">Gibt den Datentyp an, der in der Quelle enthalten ist.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})">
          <source>The source from which to link.</source>
          <target state="translated">Die zu verknüpfende Quelle.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})">
          <source>The  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> to which to connect the source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>, an den die Quelle gebunden werden soll.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})">
          <source>The filter a message must pass in order for it to propagate from the source to the target.</source>
          <target state="translated">Der Filter, den eine Meldung übergeben muss, damit er von der Quelle an das Ziel weitergegeben wird.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})">
          <source>Links the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph> to the specified  <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> using the specified filter.</source>
          <target state="translated">Verknüpft <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph> mit der angegebenen <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>-Objekt mithilfe des angegebenen Filters.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph> that, upon calling <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>, will unlink the source from the target.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph>, der nach dem Aufrufen von <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>, die Quelle vom Ziel löst.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})">
          <source>The <ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})">
          <source>Specifies the type of data contained in the source.</source>
          <target state="translated">Gibt den Datentyp an, der in der Quelle enthalten ist.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})">
          <source>The source from which to link.</source>
          <target state="translated">Die zu verknüpfende Quelle.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})">
          <source>The  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> to which to connect the source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>, an den die Quelle gebunden werden soll.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})">
          <source>One of the enumeration values that specifies how to configure a link between dataflow blocks.</source>
          <target state="translated">Einer der Enumerationswerte, der angibt, wie ein Link zwischen Datenflussblöcken konfiguriert werden kann.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})">
          <source>The filter a message must pass in order for it to propagate from the source to the target.</source>
          <target state="translated">Der Filter, den eine Meldung übergeben muss, damit er von der Quelle an das Ziel weitergegeben wird.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})">
          <source>Links the  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph> to the specified  <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> using the specified filter.</source>
          <target state="translated">Verknüpft <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph> mit der angegebenen <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>-Objekt mithilfe des angegebenen Filters.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph> that, upon calling <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>, will unlink the source from the target.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph>, der nach dem Aufrufen von <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>, die Quelle vom Ziel löst.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})">
          <source>The  <ph id="ph1">&lt;paramref name="source" /&gt;</ph> is null (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> ist null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})">
          <source>The  <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is null (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> ist null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})">
          <source>The  <ph id="ph1">&lt;paramref name="linkOptions" /&gt;</ph> is null (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="linkOptions" /&gt;</ph> ist null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})">
          <source>The  <ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> is null (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> ist null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.NullTarget``1">
          <source>The type of the messages this block can accept.</source>
          <target state="translated">Der Typ der Nachrichten, die dieser Block annehmen kann.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.NullTarget``1">
          <source>Gets a target block that synchronously accepts all messages offered to it and drops them.</source>
          <target state="translated">Ruft ab einen Zielblock ab, der alle Meldungen synchron akzeptiert, die für ihn bereitgestellt werden, und diese dann ablegt.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.NullTarget``1">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> that accepts and subsequently drops all offered messages.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>, die alle angebotenen Nachrichten akzeptiert und anschließend ablegt.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>Specifies the type of data contained in the source.</source>
          <target state="translated">Gibt den Datentyp an, der in der Quelle enthalten ist.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>The source to monitor.</source>
          <target state="translated">Die zu überwachende Quelle.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>Provides a <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> that asynchronously monitors the source for available output.</source>
          <target state="translated">Stellt eine <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> bereit, die asynchron die Quelle für verfügbare Ausgabe überwacht.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> that informs of whether and when more output is available.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>, das darüber informiert, ob und wann mehr Ausgaben zur Verfügung steht.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>If, when the task completes, its <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>, more output is available in the source (though another consumer of the source may retrieve the data).</source>
          <target state="translated">Wenn bei Beenden der Aufgabe <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> gleich <ph id="ph2">&lt;see langword="true" /&gt;</ph> ist, sind in der Quelle mehr Ausgabedaten verfügbar (obwohl ein anderer Consumer der Quelle möglicherweise die Daten abruft).</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>If it returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>, more output is not and will never be available, due to the source completing prior to output being available.</source>
          <target state="translated">Wenn sie <ph id="ph1">&lt;see langword="false" /&gt;</ph> zurückgibt, ist und wird wird niemals mehr Output verfügbar sein, da die Quelle vor der Ausgabe abgeschlossen wird, bevor der Output verfügbar ist.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>Specifies the type of data contained in the source.</source>
          <target state="translated">Gibt den Datentyp an, der in der Quelle enthalten ist.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>The source to monitor.</source>
          <target state="translated">Die zu überwachende Quelle.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>The cancellation token with which to cancel the asynchronous operation.</source>
          <target state="translated">Das Abbruchtoken, um den asynchronen Vorgang abzubrechen.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>Provides a  <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> that asynchronously monitors the source for available output.</source>
          <target state="translated">Stellt ein <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>-Objekt bereit, das asynchron die Quelle für eine verfügbare Ausgabe überwacht.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> that informs of whether and when more output is available.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>, das darüber informiert, ob und wann mehr Ausgaben zur Verfügung steht.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>If, when the task completes, its <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>, more output is available in the source (though another consumer of the source may retrieve the data).</source>
          <target state="translated">Wenn bei Beenden der Aufgabe <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> gleich <ph id="ph2">&lt;see langword="true" /&gt;</ph> ist, sind in der Quelle mehr Ausgabedaten verfügbar (obwohl ein anderer Consumer der Quelle möglicherweise die Daten abruft).</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>If it returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>, more output is not and will never be available, due to the source completing prior to output being available.</source>
          <target state="translated">Wenn sie <ph id="ph1">&lt;see langword="false" /&gt;</ph> zurückgibt, ist und wird wird niemals mehr Output verfügbar sein, da die Quelle vor der Ausgabe abgeschlossen wird, bevor der Output verfügbar ist.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>Specifies the type of data accepted by the target block.</source>
          <target state="translated">Gibt den Typ der Daten an, die vom Zielblock akzeptiert werden.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>The target block.</source>
          <target state="translated">Zielblock</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>The item being offered to the target.</source>
          <target state="translated">Das Element, das dem Ziel bereitgestellt wird.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>Posts an item to the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph>.</source>
          <target state="translated">Fügt dem <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /&gt;</ph> ein Element hinzu.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the item was accepted by the target block; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das Element vom Zielblock angenommen wurde; andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>This method will return once the target block has decided to accept or decline the item, but unless otherwise dictated by special semantics of the target block, it does not wait for the item to actually be processed.</source>
          <target state="translated">Diese Methode gibt zurück, wenn der Zielblock sich entschieden hat, annehmen oder ablehnen. das Element, aber es sei denn, der andernfalls durch die spezielle Semantik von der Zielblock vorgegeben, Prinzipalserver wartet dabei nicht für das Element, das tatsächlich verarbeitet werden.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>For example, <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ActionBlock%601&gt;</ph> will return from <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.DataflowBlock.Post%2A&gt;</ph> as soon as it has stored the posted item into its input queue).</source>
          <target state="translated">Deutet, <ph id="ph1">&lt;xref:System.Threading.Tasks.Dataflow.ActionBlock%601&gt;</ph> aus zurück <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.DataflowBlock.Post%2A&gt;</ph> , sobald sie das bereitgestellte Element in der Eingabewarteschlange gespeichert wurde).</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>From the perspective of the block's processing, <ph id="ph1">`Post`</ph> is asynchronous.</source>
          <target state="translated">Aus der Perspektive der Verarbeitung des Blocks <ph id="ph1">`Post`</ph> asynchron ist.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>For target blocks that support postponing offered messages, or for blocks that may do more processing in their <ph id="ph1">`Post`</ph> implementation, consider using <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync%2A&gt;</ph>, which will return immediately and will enable the target to postpone the posted message and later consume it after <ph id="ph3">`SendAsync`</ph> returns.</source>
          <target state="translated">Für Zielblöcke dieser Unterstützung zurück, die Nachrichten bereitgestellt oder für Blöcke, die weitere Verarbeitung ausführen können, in ihre <ph id="ph1">`Post`</ph> Implementierung, erwägen Sie <ph id="ph2">&lt;xref:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync%2A&gt;</ph>, die sofort zurück und ermöglicht das Ziel, die gesendete Nachricht zu verschieben. und später nach dafür <ph id="ph3">`SendAsync`</ph> zurückgibt.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>The type of data contained in the source.</source>
          <target state="translated">Der Datentyp, der in der Datenquelle enthalten ist.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>The source from which to receive the value.</source>
          <target state="translated">Die Quelle, aus der der Wert empfangen werden soll.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>Synchronously receives a value from a specified source.</source>
          <target state="translated">Empfängt synchron einen Wert aus der angegebenen Quelle.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>The received value.</source>
          <target state="translated">Der empfangene Wert.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>No item could be received from the source.</source>
          <target state="translated">Kein Element konnte von der Quelle empfangen werden.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>The type of data contained in the source.</source>
          <target state="translated">Der Datentyp, der in der Datenquelle enthalten ist.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>The source from which to receive the value.</source>
          <target state="translated">Die Quelle, aus der der Wert empfangen werden soll.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>The token to use to cancel the receive operation.</source>
          <target state="translated">Das Token, das verwendet wird, um den Empfangsvorgang abzubrechen.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>Synchronously receives a value from a specified source and provides a token to cancel the operation.</source>
          <target state="translated">Erhält synchron einen Wert aus einer angegebenen Quelle und stellt ein Token bereit, um die Operation abzubrechen.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>The received value.</source>
          <target state="translated">Der empfangene Wert.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>If the source successfully offered an item that was received by this operation, that item is returned even if a concurrent cancellation request occurs.</source>
          <target state="translated">Wenn die Quelle wurde erfolgreich ein Element, die durch diesen Vorgang empfangen wurde angeboten, wird dieses Element zurückgegeben, auch wenn eine gleichzeitige abbruchanforderung auftritt.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>No item could be received from the source.</source>
          <target state="translated">Kein Element konnte von der Quelle empfangen werden.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>The operation was canceled before an item was received from the source.</source>
          <target state="translated">Der Vorgang wurde abgebrochen, bevor ein Element aus der Quelle empfangen wurde.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>The type of data contained in the source.</source>
          <target state="translated">Der Datentyp, der in der Datenquelle enthalten ist.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>The source from which to receive the value.</source>
          <target state="translated">Die Quelle, aus der der Wert empfangen werden soll.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</source>
          <target state="translated">Das maximale Zeitintervall, in Millisekunden, der gewartet werden muss, bis der synchrone Vorgang abgeschlossen wurde, oder auf ein Intervall, der -1 Millisekunden darstellt, um unbegrenzt zu warten.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>Synchronously receives a value from a specified source, observing an optional time-out period.</source>
          <target state="translated">Empfängt synchron einen Wert aus einer angegebenen Quelle und beachtet ein optionales Timeout.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>The received value.</source>
          <target state="translated">Der empfangene Wert.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>If the source successfully offered an item that was received by this operation, that item is returned even if a concurrent time-out occurs.</source>
          <target state="translated">Wenn die Quelle wurde erfolgreich ein Element, die durch diesen Vorgang empfangen wurde angeboten, wird dieses Element zurückgegeben, auch wenn ein gleichzeitige Timeout auftritt.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is a negative number other than -1 milliseconds, which represents an infinite time-out period.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> ist eine negative Zahl, aber nicht -1 Millisekunde. Ein Wert von -1 Millisekunde gibt eine Endlostimeoutperiode an.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> ist größer als <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>No item could be received from the source.</source>
          <target state="translated">Kein Element konnte von der Quelle empfangen werden.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>The specified time-out expired before an item was received from the source.</source>
          <target state="translated">Das angegebene Timeout ist abgelaufen, bevor ein Element von der Quelle empfangen wurde.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>The type of data contained in the source.</source>
          <target state="translated">Der Datentyp, der in der Datenquelle enthalten ist.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>The source from which to receive the value.</source>
          <target state="translated">Die Quelle, aus der der Wert empfangen werden soll.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</source>
          <target state="translated">Das maximale Zeitintervall, in Millisekunden, der gewartet werden muss, bis der synchrone Vorgang abgeschlossen wurde, oder auf ein Intervall, der -1 Millisekunden darstellt, um unbegrenzt zu warten.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>The token to use to cancel the receive operation.</source>
          <target state="translated">Das Token, das verwendet wird, um den Empfangsvorgang abzubrechen.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>Synchronously receives a value from a specified source, providing a token to cancel the operation and observing an optional time-out interval.</source>
          <target state="translated">Empfängt synchron einen Wert aus einer angegebenen Quelle, stellt ein Token bereit, um den Vorgang abzubrechen und beachtet ein optionales Timeoutintervall.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>The received value.</source>
          <target state="translated">Der empfangene Wert.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>If the source successfully offered an item value that was received by this operation, that value is returned even if a concurrent time-out or cancellation request occurs.</source>
          <target state="translated">Wenn die Quelle wurde erfolgreich ein Elementwert, die durch diesen Vorgang empfangen wurde angeboten, wird dieser Wert zurückgegeben, auch wenn eine gleichzeitige Anforderungen für Timeouts oder Abbruch auftritt.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="source" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is a negative number other than -1 milliseconds, which represents an infinite time-out period.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> ist eine negative Zahl, aber nicht -1 Millisekunde. Ein Wert von -1 Millisekunde gibt eine Endlostimeoutperiode an.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> ist größer als <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>No item could be received from the source.</source>
          <target state="translated">Kein Element konnte von der Quelle empfangen werden.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>The specified time-out expired before an item was received from the source.</source>
          <target state="translated">Das angegebene Timeout ist abgelaufen, bevor ein Element von der Quelle empfangen wurde.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>The operation was canceled before an item was received from the source.</source>
          <target state="translated">Der Vorgang wurde abgebrochen, bevor ein Element aus der Quelle empfangen wurde.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>The type of data contained in the source.</source>
          <target state="translated">Der Datentyp, der in der Datenquelle enthalten ist.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>The source from which to receive the value.</source>
          <target state="translated">Die Quelle, aus der der Wert empfangen werden soll.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>Asynchronously receives a value from a specified source.</source>
          <target state="translated">Empfängt asynchron einen Wert aus der angegebenen Quelle.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>A task that represents the asynchronous receive operation.</source>
          <target state="translated">Eine Aufgabe, die den asynchronen Empfangsvorgang darstellt.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>When an item value is successfully received from the source, the returned task is completed and its <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> returns the received value.</source>
          <target state="translated">Wenn ein Elementwert erfolgreich aus der Quelle empfangen wird, wird die zurückgegebene Aufgabe abgeschlossen, und ihr <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> gibt den empfangene Elementwert zurück.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source>If an item value cannot be retrieved because the source is empty and completed , an <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> exception is thrown in the returned task.</source>
          <target state="translated">Wenn ein Elementwert nicht abgerufen werden kann, weil die Quelle leer ist und abgeschlossen wurde, wird eine <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>-Ausnahme in der zurückgegebenen Aufgabe ausgelöst.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>Specifies the type of data contained in the source.</source>
          <target state="translated">Gibt den Datentyp an, der in der Quelle enthalten ist.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>The source from which to receive the value.</source>
          <target state="translated">Die Quelle, aus der der Wert empfangen werden soll.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>The token to use to cancel the receive operation.</source>
          <target state="translated">Das Token, das verwendet wird, um den Empfangsvorgang abzubrechen.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>Asynchronously receives a value from a specified source and provides a token to cancel the operation.</source>
          <target state="translated">Erhält asynchron einen Wert aus einer angegebenen Quelle und stellt ein Token bereit, um die Operation abzubrechen.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>A task that represents the asynchronous receive operation.</source>
          <target state="translated">Eine Aufgabe, die den asynchronen Empfangsvorgang darstellt.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>When a value is successfully received from the source, the returned task is completed and its <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> returns the value.</source>
          <target state="translated">Wenn ein Wert erfolgreich aus der Quelle empfangen wird, wird die zurückgegebene Aufgabe fertig gestellt und ihr <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> gibt den Wert zurück.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>If a value cannot be retrieved because cancellation was requested, the returned task is canceled.</source>
          <target state="translated">Wenn ein Wert nicht abgerufen werden kann, da ein Abbruch angefordert wurde, wird die zurückgegebene Aufgabe abgebrochen.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source>If the value cannot be retrieved because the source is empty and completed , an <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> exception is thrown in the returned task.</source>
          <target state="translated">Wenn der Wert nicht abgerufen werden kann, weil die Quelle leer ist und abgeschlossen wurde, wird eine <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>-Ausnahme in der zurückgegebene Aufgabe ausgelöst.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>The type of data contained in the source.</source>
          <target state="translated">Der Datentyp, der in der Datenquelle enthalten ist.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>The source from which to receive the value.</source>
          <target state="translated">Die Quelle, aus der der Wert empfangen werden soll.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</source>
          <target state="translated">Das maximale Zeitintervall, in Millisekunden, der gewartet werden muss, bis der synchrone Vorgang abgeschlossen wurde, oder auf ein Intervall, der -1 Millisekunden darstellt, um unbegrenzt zu warten.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>Asynchronously receives a value from a specified source, observing an optional time-out period.</source>
          <target state="translated">Empfängt asynchron einen Wert aus einer angegebenen Quelle und beachtet ein optionales Timeout.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>A task that represents the asynchronous receive operation.</source>
          <target state="translated">Eine Aufgabe, die den asynchronen Empfangsvorgang darstellt.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>When a value is successfully received from the source, the returned task is completed and its <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> returns the value.</source>
          <target state="translated">Wenn ein Wert erfolgreich aus der Quelle empfangen wird, wird die zurückgegebene Aufgabe fertig gestellt und ihr <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> gibt den Wert zurück.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>If a value cannot be retrieved because the time-out expired, the returned task is canceled.</source>
          <target state="translated">Wenn ein Wert nicht abgerufen werden kann, da das Timeout abgelaufen ist, wird die zurückgegebene Aufgabe abgebrochen.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>If the value cannot be retrieved because the source is empty and completed , an <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> exception is thrown in the returned task.</source>
          <target state="translated">Wenn der Wert nicht abgerufen werden kann, weil die Quelle leer ist und abgeschlossen wurde, wird eine <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>-Ausnahme in der zurückgegebene Aufgabe ausgelöst.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is a negative number other than -1 milliseconds, which represents an infinite time-out period.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> ist eine negative Zahl, aber nicht -1 Millisekunde. Ein Wert von -1 Millisekunde gibt eine Endlostimeoutperiode an.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> ist größer als <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>The type of data contained in the source.</source>
          <target state="translated">Der Datentyp, der in der Datenquelle enthalten ist.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>The source from which to receive the value.</source>
          <target state="translated">Die Quelle, aus der der Wert empfangen werden soll.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.</source>
          <target state="translated">Das maximale Zeitintervall, in Millisekunden, der gewartet werden muss, bis der synchrone Vorgang abgeschlossen wurde, oder auf ein Intervall, der -1 Millisekunden darstellt, um unbegrenzt zu warten.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>The token which may be used to cancel the receive operation.</source>
          <target state="translated">Das Token, das verwendet wird, um den Empfangsvorgang abzubrechen.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>Asynchronously receives a value from a specified source, providing a token to cancel the operation and observing an optional time-out interval.</source>
          <target state="translated">Empfängt asynchron einen Wert aus einer angegebenen Quelle, stellt ein Token bereit, um den Vorgang abzubrechen und beachtet ein optionales Timeoutintervall.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>A task that represents the asynchronous receive operation.</source>
          <target state="translated">Eine Aufgabe, die den asynchronen Empfangsvorgang darstellt.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>When a value is successfully received from the source, the returned task is completed and its <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> returns the value.</source>
          <target state="translated">Wenn ein Wert erfolgreich aus der Quelle empfangen wird, wird die zurückgegebene Aufgabe fertig gestellt und ihr <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> gibt den Wert zurück.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>If a value cannot be retrieved because the time-out expired or cancellation was requested, the returned task is canceled.</source>
          <target state="translated">Wenn ein Wert nicht abgerufen werden kann, da das Timeout abgelaufen ist oder der Abbruch angefordert wurden, wird die zurückgegebene Aufgabe abgebrochen.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>If the value cannot be retrieved because the source is empty and completed, an <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> exception is thrown in the returned task.</source>
          <target state="translated">Wenn der Wert nicht abgerufen werden kann, weil die Quelle leer und abgeschlossen wurde, wird eine <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> Ausnahme in der zurückgegebene Aufgabe ausgelöst.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is a negative number other than -1 milliseconds, which represents an infinite time-out period.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> ist eine negative Zahl, aber nicht -1 Millisekunde. Ein Wert von -1 Millisekunde gibt eine Endlostimeoutperiode an.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> ist größer als <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>Specifies the type of the data to post to the target.</source>
          <target state="translated">Gibt den Typ der Daten an, die an das Ziel gesendet werden sollen.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>The target to which to post the data.</source>
          <target state="translated">Das Ziel, an das die Daten übermittelt werden sollen.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>The item being offered to the target.</source>
          <target state="translated">Das Element, das dem Ziel bereitgestellt wird.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>Asynchronously offers a message to the target message block, allowing for postponement.</source>
          <target state="translated">Gewährt dem Zielmeldungsblock asynchron eine Meldung an und ermöglicht einen Aufschub.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> that represents the asynchronous send.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>-Element, das den asynchronen Sendevorgangs darstellt.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>If the target accepts and consumes the offered element during the call to <ph id="ph1">&lt;see cref="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)" /&gt;</ph>, upon return from the call the resulting <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> will be completed and its <ph id="ph3">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> property will return <ph id="ph4">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Wenn das Ziel das angebotene Element während des Aufrufs von <ph id="ph1">&lt;see cref="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)" /&gt;</ph> akzeptiert und nutzt, wird bei Rückgabe aus dem Aufruf das resultierende <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> abgeschlossen, und die <ph id="ph3">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph>-Eigenschaft gibt <ph id="ph4">&lt;see langword="true" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>If the target declines the offered element during the call, upon return from the call the resulting <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> will be completed and its <ph id="ph2">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> property will return <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Wenn das Ziel das angebotene Element während des Aufrufs ablehnt, wird bei Rückgabe aus dem Aufruf das resultierende <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> abgeschlossen, und die <ph id="ph2">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph>-Eigenschaft gibt <ph id="ph3">&lt;see langword="false" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>If the target postpones the offered element, the element will be buffered until such time that the target consumes or releases it, at which point the task will complete, with its <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> indicating whether the message was consumed.</source>
          <target state="translated">Wenn das Ziel das angebotene Element aufschiebt, wird das Element im Puffer gespeichert, bis es vom Ziel verwendet oder freigegeben wird. Zu diesem Punkt wird die Aufgabe ausgeführt, wobei <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> angibt, ob die Meldung verarbeitet wurde.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>If the target never attempts to consume or release the message, the returned task will never complete.</source>
          <target state="translated">Wenn das Ziel nie versucht, die Nachricht zu verarbeiten oder herauszugeben, wird die zurückgegebene Aufgabe nie abgeschlossen.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)">
          <source>Specifies the type of the data to post to the target.</source>
          <target state="translated">Gibt den Typ der Daten an, die an das Ziel gesendet werden sollen.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)">
          <source>The target to which to post the data.</source>
          <target state="translated">Das Ziel, an das die Daten übermittelt werden sollen.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)">
          <source>The item being offered to the target.</source>
          <target state="translated">Das Element, das dem Ziel bereitgestellt wird.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)">
          <source>The cancellation token with which to request cancellation of the send operation.</source>
          <target state="translated">Das Abbruchtoken, um den Abbruch des Sendevorgangs anzufordern.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)">
          <source>Asynchronously offers a message to the target message block, allowing for postponement.</source>
          <target state="translated">Gewährt dem Zielmeldungsblock asynchron eine Meldung an und ermöglicht einen Aufschub.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> that represents the asynchronous send.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>-Element, das den asynchronen Sendevorgangs darstellt.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)">
          <source>If the target accepts and consumes the offered element during the call to SendAsync, upon return from the call the resulting <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> will be completed and its <bpt id="p1">&lt;c&gt;</bpt>Result<ept id="p1">&lt;/c&gt;</ept> property will return true.</source>
          <target state="translated">Wenn das Ziel das angebotene Element während des Aufrufs von SendAsync akzeptiert und verarbeitet, wird bei Rückgabe aus dem Aufruf das resultierende <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> abgeschlossen, und die <bpt id="p1">&lt;c&gt;</bpt>Result<ept id="p1">&lt;/c&gt;</ept>-Eigenschaft gibt TRUE zurück.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)">
          <source>If the target declines the offered element during the call, upon return from the call the resulting <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> will be completed and its <bpt id="p1">&lt;c&gt;</bpt>Result<ept id="p1">&lt;/c&gt;</ept> property will return false.</source>
          <target state="translated">Wenn das Ziel das angebotene Element während des Aufrufs ablehnt, wird bei Rückgabe aus dem Aufruf das resultierende <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> abgeschlossen, und die <bpt id="p1">&lt;c&gt;</bpt>Result<ept id="p1">&lt;/c&gt;</ept>-Eigenschaft gibt FALSE zurück.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)">
          <source>If the target postpones the offered element, the element will be buffered until such time that the target consumes or releases it, at which point the Task will complete, with its <bpt id="p1">&lt;c&gt;</bpt>Result<ept id="p1">&lt;/c&gt;</ept> indicating whether the message was consumed.</source>
          <target state="translated">Wenn das Ziel das angebotene Element aufschiebt, wird das Element im Puffer gespeichert, bis es vom Ziel verwendet oder freigegeben wird. Dann wird die Aufgabe ausgeführt, wobei <bpt id="p1">&lt;c&gt;</bpt>Result<ept id="p1">&lt;/c&gt;</ept> angibt, ob die Meldung verarbeitet wurde.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)">
          <source>If the target never attempts to consume or release the message, the returned task will never complete.</source>
          <target state="translated">Wenn das Ziel nie versucht, die Nachricht zu verarbeiten oder herauszugeben, wird die zurückgegebene Aufgabe nie abgeschlossen.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)">
          <source>If cancellation is requested before the target has successfully consumed the sent data, the returned task will complete in the Canceled state and the data will no longer be available to the target.</source>
          <target state="translated">Wenn der Abbruch angefordert wird, bevor das Ziel erfolgreich die gesendeten Daten verarbeitet hat, wird die zurückgegebene Aufgabe im abgebrochenen Zustand abgeschlossen, und die Daten sind nicht mehr für das Ziel verfügbar.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)">
          <source>The  <ph id="ph1">&lt;paramref name="target" /&gt;</ph> is null (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> ist null (Nothing in Visual Basic).</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)">
          <source>Specifies the type of data contained in the source.</source>
          <target state="translated">Gibt den Datentyp an, der in der Quelle enthalten ist.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)">
          <source>The source from which to receive.</source>
          <target state="translated">Die Quelle, aus der empfangen werden soll.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)">
          <source>The item received from the source.</source>
          <target state="translated">Das von der Quelle empfangene Element.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)">
          <source>Attempts to synchronously receive an item from the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph>.</source>
          <target state="translated">Versucht, ein Element von <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /&gt;</ph> synchron zu empfangen.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an item could be received; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn ein Element empfangen werden konnte; andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)">
          <source>This method does not wait until the source has an item to provide.</source>
          <target state="translated">Diese Methode wartet nicht, bis die Quelle ein Element bereitgestellt wurde.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)">
          <source>It will return whether or not an element was available.</source>
          <target state="translated">Es wird zurückgegeben, und zwar unabhängig davon, ob ein Element verfügbar war.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>