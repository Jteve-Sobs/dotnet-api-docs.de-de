<Type Name="ActionBlock&lt;TInput&gt;" FullName="System.Threading.Tasks.Dataflow.ActionBlock&lt;TInput&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bb69a6632e739cf53635ad119f1e3796e6a25dc9" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70419776" /></Metadata><TypeSignature Language="C#" Value="public sealed class ActionBlock&lt;TInput&gt; : System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ActionBlock`1&lt;TInput&gt; extends System.Object implements class System.Threading.Tasks.Dataflow.IDataflowBlock, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!TInput&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ActionBlock(Of TInput)&#xA;Implements ITargetBlock(Of TInput)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TInput&gt;&#xA;public ref class ActionBlock sealed : System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt;" />
  <TypeSignature Language="F#" Value="type ActionBlock&lt;'Input&gt; = class&#xA;    interface IDataflowBlock&#xA;    interface ITargetBlock&lt;'Input&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
    <AssemblyVersion>4.5.25.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.2.0</AssemblyVersion>
    <AssemblyVersion>4.6.3.0</AssemblyVersion>
    <AssemblyVersion>4.6.4.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TInput" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.IDataflowBlock</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;dotnet-uwp-10.0">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebuggerDisplayContent,nq}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;dotnet-uwp-10.0">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Threading.Tasks.Dataflow.ActionBlock`1/DebugView))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TInput"><span data-ttu-id="81742-101">Der Datentyp, auf dem dieser <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> betrieben wird.</span><span class="sxs-lookup"><span data-stu-id="81742-101">The type of data that this <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> operates on.</span></span></typeparam>
    <summary><span data-ttu-id="81742-102">Stellt einen Datenflussblock bereit, der einen bereitgestellten <see cref="T:System.Action`1" />-Delegaten für jede empfangene Datenelement aufruft.</span><span class="sxs-lookup"><span data-stu-id="81742-102">Provides a dataflow block that invokes a provided <see cref="T:System.Action`1" /> delegate for every data element received.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [tpl-install-instructions](~/includes/tpl-install-instructions.md)]
  
## Examples  
 <span data-ttu-id="81742-103">Das folgende Beispiel zeigt die Verwendung der- <xref:System.Threading.Tasks.Dataflow.ActionBlock%601> Klasse, um mehrere Berechnungen mithilfe von Datenfluss Blöcken auszuführen, und gibt die verstrichene Zeit zurück, die erforderlich ist, um die Berechnungen auszuführen.</span><span class="sxs-lookup"><span data-stu-id="81742-103">The following example shows the use of the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601> class to perform several computations using dataflow blocks, and returns the elapsed time required to perform the computations.</span></span> <span data-ttu-id="81742-104">Dieses Codebeispiel ist Teil eines größeren Beispiels, das im Thema Gewusst [wie: Angeben des Parallelitäts Grads in einem Datenfluss Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) beschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="81742-104">This code example is part of a larger example provided for the [How to: Specify the Degree of Parallelism in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_degreeofparallelism/cs/dataflowdegreeofparallelism.cs#2)]
 [!code-vb[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_degreeofparallelism/vb/dataflowdegreeofparallelism.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionBlock (Action&lt;TInput&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Action`1&lt;!TInput&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Action{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As Action(Of TInput))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActionBlock(Action&lt;TInput&gt; ^ action);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; : Action&lt;'Input&gt; -&gt; System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;" Usage="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; action" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;TInput&gt;" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="81742-105">Die Aktion, die für jedes empfangene Datenelement aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="81742-105">The action to invoke with each data element received.</span></span></param>
        <summary><span data-ttu-id="81742-106">Initialisiert eine neue Instanz der <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />-Klasse mit der angegebenen Aktion.</span><span class="sxs-lookup"><span data-stu-id="81742-106">Initializes a new instance of the <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> class with the specified action.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81742-107"><paramref name="action" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="81742-107"><paramref name="action" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionBlock (Func&lt;TInput,System.Threading.Tasks.Task&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!TInput, class System.Threading.Tasks.Task&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Func{`0,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As Func(Of TInput, Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActionBlock(Func&lt;TInput, System::Threading::Tasks::Task ^&gt; ^ action);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; : Func&lt;'Input, System.Threading.Tasks.Task&gt; -&gt; System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;" Usage="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; action" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;TInput,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="81742-108">Die Aktion, die für jedes empfangene Datenelement aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="81742-108">The action to invoke with each data element received.</span></span></param>
        <summary><span data-ttu-id="81742-109">Initialisiert eine neue Instanz der <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />-Klasse mit der angegebenen Aktion.</span><span class="sxs-lookup"><span data-stu-id="81742-109">Initializes a new instance of the <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> class with the specified action.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81742-110"><paramref name="action" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="81742-110"><paramref name="action" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionBlock (Action&lt;TInput&gt; action, System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Action`1&lt;!TInput&gt; action, class System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Action{`0},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As Action(Of TInput), dataflowBlockOptions As ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActionBlock(Action&lt;TInput&gt; ^ action, System::Threading::Tasks::Dataflow::ExecutionDataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; : Action&lt;'Input&gt; * System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions -&gt; System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;" Usage="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; (action, dataflowBlockOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;TInput&gt;" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="81742-111">Die Aktion, die für jedes empfangene Datenelement aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="81742-111">The action to invoke with each data element received.</span></span></param>
        <param name="dataflowBlockOptions"><span data-ttu-id="81742-112">Die Optionen, mit denen dieser <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> zu konfigurieren ist.</span><span class="sxs-lookup"><span data-stu-id="81742-112">The options with which to configure this <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />.</span></span></param>
        <summary><span data-ttu-id="81742-113">Initialisiert eine neue Instanz der <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />-Klasse mit der angegebenen Aktion und den Konfigurationsoptionen.</span><span class="sxs-lookup"><span data-stu-id="81742-113">Initializes a new instance of the <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> class with the specified action and configuration options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="81742-114">Im folgenden Beispiel wird gezeigt, wie der <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.%23ctor%28System.Action%7B%600%7D%2CSystem.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions%29> -Konstruktor verwendet wird, <xref:System.Threading.Tasks.Dataflow.ActionBlock%601> um ein neues-Objekt zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="81742-114">The following example shows how to use the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.%23ctor%28System.Action%7B%600%7D%2CSystem.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions%29> constructor to create a new <xref:System.Threading.Tasks.Dataflow.ActionBlock%601> object.</span></span> <span data-ttu-id="81742-115">Dieses Codebeispiel ist Teil eines größeren Beispiels, das im Thema Gewusst [wie: Angeben des Parallelitäts Grads in einem Datenfluss Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) beschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="81742-115">This code example is part of a larger example provided for the [How to: Specify the Degree of Parallelism in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_degreeofparallelism/cs/dataflowdegreeofparallelism.cs#2)]
 [!code-vb[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_degreeofparallelism/vb/dataflowdegreeofparallelism.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81742-116"><paramref name="action" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="81742-116"><paramref name="action" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81742-117">- oder -</span><span class="sxs-lookup"><span data-stu-id="81742-117">-or-</span></span> 
 <span data-ttu-id="81742-118"><paramref name="dataflowBlockOptions" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="81742-118"><paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionBlock (Func&lt;TInput,System.Threading.Tasks.Task&gt; action, System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!TInput, class System.Threading.Tasks.Task&gt; action, class System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Func{`0,System.Threading.Tasks.Task},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As Func(Of TInput, Task), dataflowBlockOptions As ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActionBlock(Func&lt;TInput, System::Threading::Tasks::Task ^&gt; ^ action, System::Threading::Tasks::Dataflow::ExecutionDataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; : Func&lt;'Input, System.Threading.Tasks.Task&gt; * System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions -&gt; System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;" Usage="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; (action, dataflowBlockOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;TInput,System.Threading.Tasks.Task&gt;" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="81742-119">Die Aktion, die für jedes empfangene Datenelement aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="81742-119">The action to invoke with each data element received.</span></span></param>
        <param name="dataflowBlockOptions"><span data-ttu-id="81742-120">Die Optionen, mit denen dieser <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> zu konfigurieren ist.</span><span class="sxs-lookup"><span data-stu-id="81742-120">The options with which to configure this <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />.</span></span></param>
        <summary><span data-ttu-id="81742-121">Initialisiert eine neue Instanz der <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />-Klasse mit der angegebenen Aktion und den Konfigurationsoptionen.</span><span class="sxs-lookup"><span data-stu-id="81742-121">Initializes a new instance of the <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> class with the specified action and configuration options.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81742-122"><paramref name="action" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="81742-122"><paramref name="action" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="81742-123">- oder -</span><span class="sxs-lookup"><span data-stu-id="81742-123">-or-</span></span> 
 <span data-ttu-id="81742-124"><paramref name="dataflowBlockOptions" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="81742-124"><paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Complete();" />
      <MemberSignature Language="F#" Value="abstract member Complete : unit -&gt; unit&#xA;override this.Complete : unit -&gt; unit" Usage="actionBlock.Complete " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="81742-125">Signalisiert dem Datenflussblock, dass er keine weiteren Nachrichten mehr akzeptieren oder erstellen und keine weiteren hinausgeschobenen Nachrichten mehr verarbeiten soll.</span><span class="sxs-lookup"><span data-stu-id="81742-125">Signals to the dataflow block  that it shouldn't accept or produce any more messages and shouldn't consume any more postponed messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81742-126">Nachdem <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Complete%2A> für einen Datenfluss Block aufgerufen wurde, wird dieser Block abgeschlossen (sodass seine <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> Aufgabe in einen Endzustand versetzt wird), nachdem alle zuvor verfügbaren Daten verarbeitet wurden.</span><span class="sxs-lookup"><span data-stu-id="81742-126">After <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Complete%2A> has been called on a dataflow block, that block will complete (so that its  <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> task will enter a final state) after it has processed all previously available data.</span></span> <span data-ttu-id="81742-127">Diese Methode blockiert nicht das warten auf den Abschluss der Beendigung, initiiert aber die Anforderung.</span><span class="sxs-lookup"><span data-stu-id="81742-127">This method will not block waiting for completion to occur, but will initiate the request.</span></span> <span data-ttu-id="81742-128">Verwenden Sie die-Eigenschaft, um zu warten <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> , bis der Vorgang abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="81742-128">To wait for completion to occur, use the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81742-129">Im folgenden Beispiel wird die Verwendung <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Complete%2A> der-Methode veranschaulicht, um dem Datenfluss Block zu signalisieren, dass er keine weiteren Nachrichten mehr akzeptieren oder erzeugen und keine weiteren verschobenen Nachrichten mehr verarbeiten kann.</span><span class="sxs-lookup"><span data-stu-id="81742-129">The following example shows the use of the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Complete%2A> method to signal to the dataflow block  that it shouldn't accept or produce any more messages nor consume any more postponed messages .</span></span> <span data-ttu-id="81742-130">Dieses Codebeispiel ist Teil eines größeren Beispiels, das im Thema Gewusst [wie: Angeben des Parallelitäts Grads in einem Datenfluss Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) beschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="81742-130">This code example is part of a larger example provided for the [How to: Specify the Degree of Parallelism in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_degreeofparallelism/cs/dataflowdegreeofparallelism.cs#2)]
 [!code-vb[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_degreeofparallelism/vb/dataflowdegreeofparallelism.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completion">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Completion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.Task Completion" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.ActionBlock`1.Completion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Completion As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::Task ^ Completion { System::Threading::Tasks::Task ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Completion : System.Threading.Tasks.Task" Usage="System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;.Completion" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81742-131">Ruft ein <see cref="T:System.Threading.Tasks.Task" />-Objekt ab, das den asynchronen Vorgang und die Beendigung des Datenflussblocks darstellt.</span><span class="sxs-lookup"><span data-stu-id="81742-131">Gets a  <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation and completion of the dataflow block.</span></span></summary>
        <value><span data-ttu-id="81742-132">Die abgeschlossene Aufgabe.</span><span class="sxs-lookup"><span data-stu-id="81742-132">The completed task.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81742-133">Ein Datenfluss Block wird als abgeschlossen betrachtet, wenn er zurzeit keine Nachricht verarbeitet, und wenn sichergestellt ist, dass keine weiteren Nachrichten verarbeitet werden.</span><span class="sxs-lookup"><span data-stu-id="81742-133">A dataflow block is considered completed when it is not currently processing a message and when it has guaranteed that it will not process any more messages.</span></span> <span data-ttu-id="81742-134">Der zurück <xref:System.Threading.Tasks.Task> gegebene wechselt in den abgeschlossenen Zustand, wenn der zugeordnete-Block abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="81742-134">The returned <xref:System.Threading.Tasks.Task> will transition to a completed state  when the associated block has completed.</span></span> <span data-ttu-id="81742-135">Der Übergang in den <xref:System.Threading.Tasks.TaskStatus.RanToCompletion> -Zustand erfolgt, wenn der-Block seine Verarbeitung gemäß der definierten Semantik des Datenfluss Blocks erfolgreich abgeschlossen hat.</span><span class="sxs-lookup"><span data-stu-id="81742-135">It will transition to the <xref:System.Threading.Tasks.TaskStatus.RanToCompletion> state when the block completes its processing successfully according to the dataflow block's defined semantics.</span></span> <span data-ttu-id="81742-136">Es wechselt in den <xref:System.Threading.Tasks.TaskStatus.Faulted> Zustand, wenn der Datenfluss Block die Verarbeitung aufgrund einer nicht behandelten Ausnahme vorzeitig abgeschlossen hat, und wechselt in den <xref:System.Threading.Tasks.TaskStatus.Canceled> Zustand, wenn der Datenfluss Block die Verarbeitung vorzeitig abgeschlossen hat. eine Abbruch Anforderung wird empfangen.</span><span class="sxs-lookup"><span data-stu-id="81742-136">It will transition to the <xref:System.Threading.Tasks.TaskStatus.Faulted> state when the dataflow block has completed processing prematurely due to an unhandled exception, and it will transition to the  <xref:System.Threading.Tasks.TaskStatus.Canceled> state when the dataflow block has completed processing prematurely after receiving a cancellation request.</span></span> <span data-ttu-id="81742-137">Wenn die Aufgabe im <xref:System.Threading.Tasks.TaskStatus.Faulted> -Zustand abgeschlossen `Exception` ist, gibt die- <xref:System.AggregateException> Eigenschaft eine Ausnahme zurück, die eine oder mehrere Ausnahmen enthält, durch die der-Block fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="81742-137">If the task completes in the <xref:System.Threading.Tasks.TaskStatus.Faulted> state, its `Exception` property returns an <xref:System.AggregateException> exception that contains one or more exceptions that caused the block to fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81742-138">Im folgenden Beispiel wird gezeigt, wie die <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> -Eigenschaft verwendet wird, um zu warten, bis alle Nachrichten über das Netzwerk weitergegeben wurden.</span><span class="sxs-lookup"><span data-stu-id="81742-138">The following example shows how to use the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> property to wait for all messages to propagate through the network.</span></span> <span data-ttu-id="81742-139">Dieses Codebeispiel ist Teil eines größeren Beispiels, das im Thema Gewusst [wie: Angeben des Parallelitäts Grads in einem Datenfluss Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) beschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="81742-139">This code example is part of a larger example provided for the [How to: Specify the Degree of Parallelism in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_degreeofparallelism/cs/dataflowdegreeofparallelism.cs#2)]
 [!code-vb[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_degreeofparallelism/vb/dataflowdegreeofparallelism.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputCount">
      <MemberSignature Language="C#" Value="public int InputCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InputCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.ActionBlock`1.InputCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InputCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.InputCount : int" Usage="System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;.InputCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81742-140">Ruft die Anzahl der Eingabeelemente ab, die darauf warten, von diesem Block verarbeitet zu werden.</span><span class="sxs-lookup"><span data-stu-id="81742-140">Gets the number of input items waiting to be processed by this block.</span></span></summary>
        <value><span data-ttu-id="81742-141">Die Anzahl der Eingabeelemente, die darauf warten, von diesem Block verarbeitet zu werden.</span><span class="sxs-lookup"><span data-stu-id="81742-141">The number of input items waiting to be processed by this block.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81742-142"><xref:System.Threading.Tasks.Dataflow.ActionBlock%601.InputCount%2A> Enthält keine Elemente, die zurzeit vom-Block verarbeitet werden, oder Elemente, die bereits vom-Block verarbeitet wurden.</span><span class="sxs-lookup"><span data-stu-id="81742-142">The <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.InputCount%2A> does not include any items that are currently being processed by the block or any items that have already been processed by the block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Post">
      <MemberSignature Language="C#" Value="public bool Post (TInput item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Post(!TInput item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.Post(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Post (item As TInput) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Post(TInput item);" />
      <MemberSignature Language="F#" Value="member this.Post : 'Input -&gt; bool" Usage="actionBlock.Post item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TInput" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="81742-143">Das Element, das dem Ziel bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="81742-143">The item being offered to the target.</span></span></param>
        <summary><span data-ttu-id="81742-144">Stellt ein Element in den Zieldatenflussblock.</span><span class="sxs-lookup"><span data-stu-id="81742-144">Posts an item to the target dataflow block.</span></span></summary>
        <returns><span data-ttu-id="81742-145"><see langword="true" />, wenn das Element dem Datenflussblock bereitgestellt wird; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="81742-145"><see langword="true" /> if the item is posted to the dataflow block; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="81742-146">Im folgenden Beispiel wird gezeigt, wie die <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Post%2A> -Methode verwendet wird, um ein Element im Ziel Datenfluss Block zu veröffentlichen.</span><span class="sxs-lookup"><span data-stu-id="81742-146">The following example shows how to use the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Post%2A> method to post an item to the target dataflow block.</span></span> <span data-ttu-id="81742-147">Dieses Codebeispiel ist Teil eines größeren Beispiels, das im Thema Gewusst [wie: Angeben des Parallelitäts Grads in einem Datenfluss Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) beschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="81742-147">This code example is part of a larger example provided for the [How to: Specify the Degree of Parallelism in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_degreeofparallelism/cs/dataflowdegreeofparallelism.cs#2)]
 [!code-vb[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_degreeofparallelism/vb/dataflowdegreeofparallelism.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.IDataflowBlock.Fault">
      <MemberSignature Language="C#" Value="void IDataflowBlock.Fault (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(Exception ^ exception) = System::Threading::Tasks::Dataflow::IDataflowBlock::Fault;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(System.Exception)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="81742-148">Die Ausnahme, die den Fehler verursacht hat.</span><span class="sxs-lookup"><span data-stu-id="81742-148">The exception that caused the faulting.</span></span></param>
        <summary><span data-ttu-id="81742-149">Veranlasst den Datenflussblock, in einem fehlgeschlagenen Zustand abzuschließen.</span><span class="sxs-lookup"><span data-stu-id="81742-149">Causes the dataflow block to complete in a faulted state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81742-150">Nachdem <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> für einen Datenfluss Block aufgerufen wurde, wird dieser Block abgeschlossen, und seine <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> Aufgabe wechselt in einen Endzustand.</span><span class="sxs-lookup"><span data-stu-id="81742-150">After <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> has been called on a dataflow block, that block will complete and its  <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> task will enter a final state.</span></span> <span data-ttu-id="81742-151">Ein Fehler bei einem-Block, wie beim Abbrechen eines-Blocks, bewirkt, dass gepufferte Nachrichten (nicht verarbeitete Eingabe Meldungen und nicht angebotene Ausgabe Nachrichten) verloren gehen.</span><span class="sxs-lookup"><span data-stu-id="81742-151">Faulting a block, as with canceling a block, causes buffered messages (unprocessed input messages as well as unoffered output messages) to be lost.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81742-152"><paramref name="exception" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="81742-152"><paramref name="exception" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Dataflow.DataflowMessageStatus ITargetBlock&lt;TInput&gt;.OfferMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, TInput messageValue, System.Threading.Tasks.Dataflow.ISourceBlock&lt;TInput&gt; source, bool consumeToAccept);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Threading.Tasks.Dataflow.DataflowMessageStatus System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, !TInput messageValue, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!TInput&gt; source, bool consumeToAccept) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&lt;TInput&gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function OfferMessage (messageHeader As DataflowMessageHeader, messageValue As TInput, source As ISourceBlock(Of TInput), consumeToAccept As Boolean) As DataflowMessageStatus Implements ITargetBlock(Of TInput).OfferMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Threading::Tasks::Dataflow::DataflowMessageStatus System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, TInput messageValue, System::Threading::Tasks::Dataflow::ISourceBlock&lt;TInput&gt; ^ source, bool consumeToAccept) = System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt;::OfferMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Dataflow.DataflowMessageStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="messageValue" Type="TInput" />
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TInput&gt;" />
        <Parameter Name="consumeToAccept" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="messageHeader"><span data-ttu-id="81742-153">Der Header der Nachricht, die bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="81742-153">The header of the message being offered.</span></span></param>
        <param name="messageValue"><span data-ttu-id="81742-154">Der Wert der Nachricht, die bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="81742-154">The value of the message being offered.</span></span></param>
        <param name="source"><span data-ttu-id="81742-155">Der Datenflussblock, der die Meldung angezeigt.</span><span class="sxs-lookup"><span data-stu-id="81742-155">The dataflow block that is offering the message.</span></span> <span data-ttu-id="81742-156">Dieser Wert kann <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="81742-156">This may be <see langword="null" />.</span></span></param>
        <param name="consumeToAccept"><span data-ttu-id="81742-157"><see langword="true" />, um das Ziel anzuweisen, <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> während des Aufrufs von <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /> vor der Rückgabe von <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> zur Verarbeitung der Meldung synchron aufzurufen; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="81742-157"><see langword="true" /> to instruct the target to call <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> synchronously during the call to <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />, prior to returning <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, in order to consume the message; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="81742-158">Gibt dem Datenflussblock eine Meldung und gibt ihm die Möglichkeit, die Meldung zu verarbeiten oder hinauszuschieben.</span><span class="sxs-lookup"><span data-stu-id="81742-158">Offers a message to the dataflow block, and gives it the opportunity to consume or postpone the message.</span></span></summary>
        <returns><span data-ttu-id="81742-159">Der Status der angebotenen Meldung.</span><span class="sxs-lookup"><span data-stu-id="81742-159">The status of the offered message.</span></span>  <span data-ttu-id="81742-160">Wenn die Meldung vom Ziel akzeptiert wurde, wird <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> zurückgegeben, und die Quelle sollte die angebotene Meldung nicht mehr verwenden, da sie jetzt dem Ziel gehört.</span><span class="sxs-lookup"><span data-stu-id="81742-160">If the message was accepted by the target, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> is returned, and the source should no longer use the offered message, because it is now owned by the target.</span></span> <span data-ttu-id="81742-161">Wenn die Nachricht vom Ziel zurückgestellt wurde, wird <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> als Benachrichtigung zurückgegeben, dass das Ziel später möglicherweise versucht, die Nachricht zu verarbeiten oder zu reservieren. Zwischenzeitlich besitzt die Quelle die Nachricht weiterhin und bietet sie möglicherweise anderen Blöcke an.</span><span class="sxs-lookup"><span data-stu-id="81742-161">If the message was postponed by the target, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> is returned as a notification that the target may later attempt to consume or reserve the message; in the meantime, the source still owns the message and may offer it to other blocks.</span></span>  
  
<span data-ttu-id="81742-162">Wenn das Ziel andernfalls die Meldung zurückgestellt hätte, aber die Quelle <see langword="null" /> war, wird <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="81742-162">If the target would have otherwise postponed message, but source was <see langword="null" />, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> is returned.</span></span>  
  
<span data-ttu-id="81742-163">Wenn das Ziel versucht hat, die Nachricht zu akzeptieren, diese aber verpasst hat, weil die Quelle die die Meldung an ein anderes Ziel übermittelt oder einfach verworfen hat, wird <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /> zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="81742-163">If the target tried to accept the message but missed it due to the source delivering the message to another target or simply discarding it, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /> is returned.</span></span>  
  
<span data-ttu-id="81742-164">Wenn das Ziel beschlossen hat, die Nachricht nicht zu akzeptieren, wird <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="81742-164">If the target chose not to accept the message, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> is returned.</span></span> <span data-ttu-id="81742-165">Wenn das Ziel beschlossen hat, die Meldung nicht zu akzeptieren und niemals eine weitere Meldung von dieser Quelle akzeptieren wird, wird <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /> zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="81742-165">If the target chose not to accept the message and will never accept another message from this source, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /> is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="81742-166"><paramref name="messageHeader" /> ist nicht gültig.</span><span class="sxs-lookup"><span data-stu-id="81742-166"><paramref name="messageHeader" /> is not valid.</span></span>  
  
<span data-ttu-id="81742-167">oder <paramref name="consumeToAccept" /> kann nur <see langword="true" /> sein, wenn eine <paramref name="source" /> bereitgestellt wird, die nicht NULL ist.</span><span class="sxs-lookup"><span data-stu-id="81742-167">-or- <paramref name="consumeToAccept" /> may be <see langword="true" /> only if provided with a non-null <paramref name="source" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="actionBlock.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="81742-168">Gibt eine Zeichenfolge zurück, die den formatierten Namen dieser <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />-Instanz darstellt.</span><span class="sxs-lookup"><span data-stu-id="81742-168">Returns a string that represents the formatted name of this <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> instance.</span></span></summary>
        <returns><span data-ttu-id="81742-169">Eine Zeichenfolge, die den formatierten Namen dieser <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />-Instanz darstellt.</span><span class="sxs-lookup"><span data-stu-id="81742-169">A string that represents the formatted name of this <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81742-170">Wird von <xref:System.Object> geerbt.</span><span class="sxs-lookup"><span data-stu-id="81742-170">Inherited from <xref:System.Object>.</span></span> <span data-ttu-id="81742-171">Verwendet die <xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A> -Option.</span><span class="sxs-lookup"><span data-stu-id="81742-171">Uses the  <xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A> option.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
