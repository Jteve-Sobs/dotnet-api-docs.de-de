<Type Name="BatchBlock&lt;T&gt;" FullName="System.Threading.Tasks.Dataflow.BatchBlock&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="39ad6ee1bf55700fe6c995a413685b7ca0060496" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class BatchBlock&lt;T&gt; : System.Threading.Tasks.Dataflow.IPropagatorBlock&lt;T,T[]&gt;, System.Threading.Tasks.Dataflow.IReceivableSourceBlock&lt;T[]&gt;, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T[]&gt;, System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BatchBlock`1&lt;T&gt; extends System.Object implements class System.Threading.Tasks.Dataflow.IDataflowBlock, class System.Threading.Tasks.Dataflow.IPropagatorBlock`2&lt;!T, !T[]&gt;, class System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&lt;!T[]&gt;, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!T[]&gt;, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Dataflow.BatchBlock`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BatchBlock(Of T)&#xA;Implements IPropagatorBlock(Of T, T()), IReceivableSourceBlock(Of T()), ISourceBlock(Of T()), ITargetBlock(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class BatchBlock sealed : System::Threading::Tasks::Dataflow::IPropagatorBlock&lt;T, cli::array &lt;T&gt; ^&gt;, System::Threading::Tasks::Dataflow::IReceivableSourceBlock&lt;cli::array &lt;T&gt; ^&gt;, System::Threading::Tasks::Dataflow::ISourceBlock&lt;cli::array &lt;T&gt; ^&gt;, System::Threading::Tasks::Dataflow::ITargetBlock&lt;T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.2.0</AssemblyVersion>
    <AssemblyVersion>4.6.3.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.IPropagatorBlock&lt;T,T[]&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.IReceivableSourceBlock&lt;T[]&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.ISourceBlock&lt;T[]&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="28ad3-101">Gibt den Typ der Daten an, die in Batches abgelegt werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="28ad3-101">Specifies the type of data put into batches.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="28ad3-102">Stellt einen Datenflussblock bereit, der Eingaben in Arrays stapelt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="28ad3-102">Provides a dataflow block that batches inputs into arrays.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [tpl-install-instructions](~/includes/tpl-install-instructions.md)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BatchBlock (int batchSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 batchSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BatchBlock`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (batchSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BatchBlock(int batchSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="batchSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="batchSize">
          <span data-ttu-id="28ad3-103">Die Anzahl der in einen Batch zu gruppierenden Elemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-103">The number of items to group into a batch.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28ad3-104">Initialisiert eine neue Instanz von <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" /> mit der angegebenen Batchgröße.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-104">Initializes a new <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" /> with the specified batch size.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="28ad3-105">Der <paramref name="batchSize" /> muss positiv sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-105">The <paramref name="batchSize" /> must be positive.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BatchBlock (int batchSize, System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 batchSize, class System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BatchBlock`1.#ctor(System.Int32,System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (batchSize As Integer, dataflowBlockOptions As GroupingDataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BatchBlock(int batchSize, System::Threading::Tasks::Dataflow::GroupingDataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="batchSize" Type="System.Int32" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions" />
      </Parameters>
      <Docs>
        <param name="batchSize">
          <span data-ttu-id="28ad3-106">Die Anzahl der in einen Batch zu gruppierenden Elemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-106">The number of items to group into a batch.</span>
          </span>
        </param>
        <param name="dataflowBlockOptions">
          <span data-ttu-id="28ad3-107">Die Optionen, mit denen dieser <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" /> zu konfigurieren ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-107">The options with which to configure this <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28ad3-108">Initialisiert einen neuen <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" /> mit der angegebenen Batchgröße, der degressiven Option und den Blockoptionen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-108">Initializes a new <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" /> with the specified batch size, declining option, and block options.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="28ad3-109">Der <paramref name="batchSize" /> muss positiv sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-109">The <paramref name="batchSize" /> must be positive.</span>
          </span>
          <span data-ttu-id="28ad3-110">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-110">-or-</span>
          </span>
          <span data-ttu-id="28ad3-111">Der Wert <paramref name="batchSize" /> muss kleiner sein als der Wert der <see cref="P:System.Threading.Tasks.Dataflow.DataflowBlockOptions.BoundedCapacity" />-Option, wenn kein Standardwert festgelegt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-111">The <paramref name="batchSize" /> must be smaller than the value of the <see cref="P:System.Threading.Tasks.Dataflow.DataflowBlockOptions.BoundedCapacity" /> option if a non-default value has been set.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28ad3-112">
            <paramref name="dataflowBlockOptions" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-112">The <paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BatchSize">
      <MemberSignature Language="C#" Value="public int BatchSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.BatchBlock`1.BatchSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BatchSize { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28ad3-113">Ruft die Größe der Batches ab, die von diesem <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" /> generiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-113">Gets the size of the batches generated by this  <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="28ad3-114">Die Batchgröße</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-114">The batch size.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28ad3-115">Wenn die Anzahl der Elemente, die bereitgestellt, um den Block nicht durch die Batchgröße, die für den Block-Konstruktor bereitgestellten teilbar ist, kann der Block abschließenden Batch weniger als die angeforderte Anzahl von Elementen enthalten.</span><span class="sxs-lookup"><span data-stu-id="28ad3-115">If the number of items provided to the block is not evenly divisible by the batch size provided to the block's constructor, the block's final batch may contain fewer than the requested number of items.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BatchBlock`1.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Complete();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="28ad3-116">Signalisiert <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />, dass es keine Nachrichten mehr akzeptieren und keine produzieren und keine weiteren zurückgestellten Nachrichten verarbeiten soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-116">Signals to the <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> that it should not accept nor produce any more messages nor consume any more postponed messages.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28ad3-117">Nach dem <xref:System.Threading.Tasks.Dataflow.BatchBlock%601.Complete%2A> wurde für einen Datenflussblock aufgerufen wird, diesen Block wird abgeschlossen, und die zugehörige <xref:System.Threading.Tasks.Dataflow.BatchBlock%601.Completion%2A> Aufgabe geben einen Endzustand aus, nachdem sie alle zuvor verfügbare Daten verarbeitet hat.</span><span class="sxs-lookup"><span data-stu-id="28ad3-117">After <xref:System.Threading.Tasks.Dataflow.BatchBlock%601.Complete%2A> has been called on a dataflow block, that block will complete, and its <xref:System.Threading.Tasks.Dataflow.BatchBlock%601.Completion%2A> task will enter a final state after it has processed all previously available data.</span></span> <span data-ttu-id="28ad3-118"><xref:System.Threading.Tasks.Dataflow.BatchBlock%601.Complete%2A> blockiert nicht warten auf Abschluss des Vorgangs ausgeführt werden, sondern vielmehr initiiert die Anforderung; Warten auf den Abschluss ausgeführt werden, die <xref:System.Threading.Tasks.Dataflow.BatchBlock%601.Completion%2A> Aufgabe verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="28ad3-118"><xref:System.Threading.Tasks.Dataflow.BatchBlock%601.Complete%2A> will not block waiting for completion to occur, but rather will initiate the request; to wait for completion to occur, the <xref:System.Threading.Tasks.Dataflow.BatchBlock%601.Completion%2A> task may be used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completion">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Completion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.Task Completion" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.BatchBlock`1.Completion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Completion As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::Task ^ Completion { System::Threading::Tasks::Task ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28ad3-119">Ruft ein <see cref="T:System.Threading.Tasks.Task" /> ab, das den asynchronen Vorgang und die Beendigung des Datenflussblocks darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-119">Gets a <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation and completion of the dataflow block.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="28ad3-120">Die Aufgabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-120">The task.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28ad3-121">Ein Datenflussblock wird als abgeschlossen betrachtet, wenn nicht gerade verarbeitet wird eine neue Meldung und wenn diese garantiert, dass keine weiteren Nachrichten verarbeitet werden.</span><span class="sxs-lookup"><span data-stu-id="28ad3-121">A dataflow block is considered completed when it is not currently processing a message and when it has guaranteed that it will not process any more messages.</span></span> <span data-ttu-id="28ad3-122">Das zurückgegebene <xref:System.Threading.Tasks.Task> Übergang zum Status "abgeschlossen" werden, nach Abschluss der zugeordneten Block.</span><span class="sxs-lookup"><span data-stu-id="28ad3-122">The returned <xref:System.Threading.Tasks.Task> will transition to a completed state when the associated block has completed.</span></span> <span data-ttu-id="28ad3-123">Es erfolgt ein Wechsel in den <xref:System.Threading.Tasks.TaskStatus> <xref:System.Threading.Tasks.TaskStatus.RanToCompletion> Zustand, wenn der Block nach der Verarbeitung erfolgreich gemäß des Datenflussblock Abschluss definierte Semantik.</span><span class="sxs-lookup"><span data-stu-id="28ad3-123">It will transition to the <xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.RanToCompletion> state when the block completes its processing successfully according to the dataflow block’s defined semantics.</span></span> <span data-ttu-id="28ad3-124">Es erfolgt ein Wechsel in den <xref:System.Threading.Tasks.TaskStatus> <xref:System.Threading.Tasks.TaskStatus.Faulted> Zustand, wenn der Datenflussblock Verarbeitung vorzeitig aufgrund einer nicht behandelten Ausnahme abgeschlossen wurde, und es ein in Wechsel erfolgt den <xref:System.Threading.Tasks.TaskStatus> <xref:System.Threading.Tasks.TaskStatus.Canceled> Status nach Abschluss der Datenflussblock die Verarbeitung vorzeitig aufgrund eine abbruchanforderung empfängt.</span><span class="sxs-lookup"><span data-stu-id="28ad3-124">It will transition to the <xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.Faulted> state when the dataflow block has completed processing prematurely due to an unhandled exception, and it will transition to the <xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.Canceled> state when the dataflow block has completed processing prematurely due to receiving a cancellation request.</span></span> <span data-ttu-id="28ad3-125">Wenn die Aufgabe abgeschlossen, in ist der <xref:System.Threading.Tasks.TaskStatus.Faulted> Zustand, seine `Exception` Eigenschaft zurückgegeben wird ein <xref:System.AggregateException> mit der eine oder mehrere Ausnahmen, die Fehlschlagen des Blockes verursacht hat.</span><span class="sxs-lookup"><span data-stu-id="28ad3-125">If the task completes in the <xref:System.Threading.Tasks.TaskStatus.Faulted> state, its `Exception` property will return an <xref:System.AggregateException> containing the one or more exceptions that caused the block to fail.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkTo">
      <MemberSignature Language="C#" Value="public IDisposable LinkTo (System.Threading.Tasks.Dataflow.ITargetBlock&lt;T[]&gt; target, System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable LinkTo(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!T[]&gt; target, class System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BatchBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0[]},System.Threading.Tasks.Dataflow.DataflowLinkOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function LinkTo (target As ITargetBlock(Of T()), linkOptions As DataflowLinkOptions) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IDisposable ^ LinkTo(System::Threading::Tasks::Dataflow::ITargetBlock&lt;cli::array &lt;T&gt; ^&gt; ^ target, System::Threading::Tasks::Dataflow::DataflowLinkOptions ^ linkOptions);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ISourceBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;T[]&gt;" />
        <Parameter Name="linkOptions" Type="System.Threading.Tasks.Dataflow.DataflowLinkOptions" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="28ad3-126">Das <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />-Objekt, das mit dieser Quelle verbunden werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-126">The  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to which to connect this source.</span>
          </span>
        </param>
        <param name="linkOptions">
          <span data-ttu-id="28ad3-127">Eine <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" />-Instanz, die den Link konfiguriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-127">A <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" /> instance that configures the link.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28ad3-128">Verbindet <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> mit dem angegebenen <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-128">Links the  <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> to the specified  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> .</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28ad3-129">Ein IDisposable, der nach dem Aufrufen von Dispose, die Quelle vom Ziel trennt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-129">An IDisposable that, upon calling Dispose, will unlink the source from the target.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28ad3-130">
            <paramref name="target" /> ist NULL (Nothing in Visual Basic), oder <paramref name="linkOptions" /> ist NULL (Nothing in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-130">
              <paramref name="target" /> is null (Nothing in Visual Basic) or  <paramref name="linkOptions" /> is null (Nothing in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OutputCount">
      <MemberSignature Language="C#" Value="public int OutputCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutputCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.BatchBlock`1.OutputCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int OutputCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="28ad3-131">Ruft die Anzahl der Ausgabe-Elementen ab, die von diesem Block empfangen werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-131">Gets the number of output items available to be received from this block.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="28ad3-132">Die Anzahl von Ausgabe-Elementen in.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-132">The number of output items.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.IDataflowBlock.Fault">
      <MemberSignature Language="C#" Value="void IDataflowBlock.Fault (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(Exception ^ exception) = System::Threading::Tasks::Dataflow::IDataflowBlock::Fault;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(System.Exception)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">
          <span data-ttu-id="28ad3-133">Die <see cref="T:System.Exception" />, die den Fehler verursacht hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-133">The <see cref="T:System.Exception" /> that caused the faulting.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28ad3-134">Hat zur Folge, dass <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> im Status <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> abgeschlossen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-134">Causes the <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> to complete in a  <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28ad3-135">Nach dem <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> wurde für einen Datenflussblock aufgerufen wird, diesen Block wird abgeschlossen, und die zugehörige <xref:System.Threading.Tasks.Dataflow.BatchBlock%601.Completion%2A> Aufgabe wird einen abschließenden Zustand versetzt.</span><span class="sxs-lookup"><span data-stu-id="28ad3-135">After <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> has been called on a dataflow block, that block will complete, and its <xref:System.Threading.Tasks.Dataflow.BatchBlock%601.Completion%2A> task will enter a final state.</span></span> <span data-ttu-id="28ad3-136">Fehlgeschlagene einen Block, bewirkt, dass als mit Abbrechen einen Block von gepufferten Nachrichten (unverarbeiteten Eingabenachrichten sowie unoffered Ausgabenachrichten) verloren.</span><span class="sxs-lookup"><span data-stu-id="28ad3-136">Faulting a block, as with canceling a block, causes buffered messages (unprocessed input messages as well as unoffered output messages) to be lost.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28ad3-137">
            <paramref name="exception" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-137">The <paramref name="exception" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T[]&gt;.ConsumeMessage">
      <MemberSignature Language="C#" Value="T[] ISourceBlock&lt;T[]&gt;.ConsumeMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock&lt;T[]&gt; target, out bool messageConsumed);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance !T[] System.Threading.Tasks.Dataflow.ISourceBlock&lt;T[]&gt;.ConsumeMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!T[]&gt; target, [out] bool&amp; messageConsumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&lt;T[]&gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0[]},System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Function ConsumeMessage (messageHeader As DataflowMessageHeader, target As ITargetBlock(Of T()), ByRef messageConsumed As Boolean) As T() Implements ISourceBlock(Of T()).ConsumeMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;T&gt; ^ System.Threading.Tasks.Dataflow.ISourceBlock&lt;T[]&gt;.ConsumeMessage(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, System::Threading::Tasks::Dataflow::ITargetBlock&lt;cli::array &lt;T&gt; ^&gt; ^ target, [Runtime::InteropServices::Out] bool % messageConsumed) = System::Threading::Tasks::Dataflow::ISourceBlock&lt;cli::array &lt;T&gt; ^&gt;::ConsumeMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;T[]&gt;" />
        <Parameter Name="messageConsumed" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="messageHeader">
          <span data-ttu-id="28ad3-138">
            <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> der Meldung, die verarbeitet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-138">The <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> of the message being consumed.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="28ad3-139">Die <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, die die Nachricht verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-139">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> consuming the message.</span>
          </span>
        </param>
        <param name="messageConsumed">
          <span data-ttu-id="28ad3-140">
            <see langword="true" />, wenn die Nachricht erfolgreich verarbeitet wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-140">
              <see langword="true" /> if the message was successfully consumed; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28ad3-141">Wird von einem verknüpften <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />-Objekt aufgerufen, um ein <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />-Objekt zu akzeptieren und zu verarbeiten, das zuvor durch dieses <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> angeboten wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-141">Called by a linked <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to accept and consume a <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> previously offered by this <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> .</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28ad3-142">Der Wert der verarbeiteten Meldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-142">The value of the consumed message.</span>
          </span>
          <span data-ttu-id="28ad3-143">Dies entspricht möglicherweise einer anderen <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />-Instanz als die zuvor reservierte und die als <paramref name="messageHeader" /> an <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> übergebene.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-143">This may correspond to a different <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> instance than was previously reserved and passed as the <paramref name="messageHeader" /> to <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />.</span>
          </span>
          <span data-ttu-id="28ad3-144">Der <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> muss den zurückgegebenen Wert benutzen und nicht den Wert, der als messageValue von <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /> übergeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-144">The consuming <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> must use the returned value instead of the value passed as messageValue through <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />.</span>
          </span>
          <span data-ttu-id="28ad3-145">Wenn die Meldung, die angefordert wird, nicht verfügbar ist, ist der Rückgabewert <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-145">If the message requested is not available, the return value will be <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28ad3-146">Nur [ISourceBlock (T\<xref:System.Threading.Tasks.Dataflow.ITargetBlock%601 >-Instanzen verknüpft wird, um diese [ISourceBlock (T\<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601 > Instanz Funkbereich [ISourceBlock ( T\<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A >, und es darf nur nutzen verwendet werden [ISourceBlock (T\<xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader > Instanzen zuvor von dieser Quelle zum Ziel angeboten.</span><span class="sxs-lookup"><span data-stu-id="28ad3-146">Only [ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> instances linked to this [ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> instance may use [ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A> , and it must only be used to consume [ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> instances previously offered by this source to the target.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="28ad3-147">
            <paramref name="messageHeader" /> ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-147">The  <paramref name="messageHeader" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28ad3-148">
            <paramref name="target" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-148">The <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T[]&gt;.ReleaseReservation">
      <MemberSignature Language="C#" Value="void ISourceBlock&lt;T[]&gt;.ReleaseReservation (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock&lt;T[]&gt; target);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Threading.Tasks.Dataflow.ISourceBlock&lt;T[]&gt;.ReleaseReservation(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!T[]&gt; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&lt;T[]&gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0[]})" />
      <MemberSignature Language="VB.NET" Value="Sub ReleaseReservation (messageHeader As DataflowMessageHeader, target As ITargetBlock(Of T())) Implements ISourceBlock(Of T()).ReleaseReservation" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Threading.Tasks.Dataflow.ISourceBlock&lt;T[]&gt;.ReleaseReservation(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, System::Threading::Tasks::Dataflow::ITargetBlock&lt;cli::array &lt;T&gt; ^&gt; ^ target) = System::Threading::Tasks::Dataflow::ISourceBlock&lt;cli::array &lt;T&gt; ^&gt;::ReleaseReservation;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;T[]&gt;" />
      </Parameters>
      <Docs>
        <param name="messageHeader">
          <span data-ttu-id="28ad3-149">
            <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> der reservierten Meldung, die freigegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-149">The <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> of the reserved message being released.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="28ad3-150">
            <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, der die Nachricht freigibt, die er vorher reserviert hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-150">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> releasing the message it previously reserved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28ad3-151">Wird von einem verknüpften <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, um einen <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, der von diesem <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> zuvor reserviert wurde, freizugeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-151">Called by a linked <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to release a previously reserved <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> by this <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28ad3-152">Nur [ISourceBlock (T\<xref:System.Threading.Tasks.Dataflow.ITargetBlock%601 >-Instanzen verknüpft wird, um diese [ISourceBlock (T\<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601 > Instanz Funkbereich `ReleaseReservation` , und es muss nur freigeben verwendet werden [ISourceBlock (T\<xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader > Instanzen, die zuvor und erfolgreich vom Ziel reserviert.</span><span class="sxs-lookup"><span data-stu-id="28ad3-152">Only [ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> instances linked to this [ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> instance may use `ReleaseReservation`, and it must only be used to release [ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> instances previously and successfully reserved by the target.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="28ad3-153">Der <paramref name="messageHeader" /> ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-153">The <paramref name="messageHeader" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28ad3-154">
            <paramref name="target" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-154">The <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="28ad3-155">Das <paramref name="target" /> hatte die Meldung nicht reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-155">The <paramref name="target" /> did not have the message reserved.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T[]&gt;.ReserveMessage">
      <MemberSignature Language="C#" Value="bool ISourceBlock&lt;T[]&gt;.ReserveMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock&lt;T[]&gt; target);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Threading.Tasks.Dataflow.ISourceBlock&lt;T[]&gt;.ReserveMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!T[]&gt; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&lt;T[]&gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0[]})" />
      <MemberSignature Language="VB.NET" Value="Function ReserveMessage (messageHeader As DataflowMessageHeader, target As ITargetBlock(Of T())) As Boolean Implements ISourceBlock(Of T()).ReserveMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Threading.Tasks.Dataflow.ISourceBlock&lt;T[]&gt;.ReserveMessage(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, System::Threading::Tasks::Dataflow::ITargetBlock&lt;cli::array &lt;T&gt; ^&gt; ^ target) = System::Threading::Tasks::Dataflow::ISourceBlock&lt;cli::array &lt;T&gt; ^&gt;::ReserveMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;T[]&gt;" />
      </Parameters>
      <Docs>
        <param name="messageHeader">
          <span data-ttu-id="28ad3-156">
            <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> der Meldung, die reserviert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-156">The <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> of the message being reserved.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="28ad3-157">Die <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> der Meldung empfängt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-157">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> reserving the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28ad3-158">Wird von einem verknüpften <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, um einen <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, der von diesem <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> zuvor angeboten wurde, zu reservieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-158">Called by a linked <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to reserve a previously offered <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> by this <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28ad3-159">
            <see langword="true" />, wenn die Nachricht erfolgreich reserviert wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-159">
              <see langword="true" /> if the message was successfully reserved; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28ad3-160">Nur [ISourceBlock (T\<xref:System.Threading.Tasks.Dataflow.ITargetBlock%601 >-Instanzen verknüpft wird, um diese [ISourceBlock (T\<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601 > Instanz Funkbereich [ISourceBlock ( T\<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A >, und es muss nur reservieren verwendet werden [ISourceBlock (T\<xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader > Instanzen zuvor von dieser Quelle zum Ziel angeboten.</span><span class="sxs-lookup"><span data-stu-id="28ad3-160">Only [ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> instances linked to this [ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> instance may use [ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A>, and it must only be used to reserve [ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> instances previously offered by this source to the target.</span></span>  
  
 <span data-ttu-id="28ad3-161">Wenn `true` zurückgegeben wird, die [ISourceBlock (T\<xref:System.Threading.Tasks.Dataflow.ITargetBlock%601 > muss anschließend rufen Sie entweder [ISourceBlock (T\<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601. ConsumeMessage % 2A > oder [ISourceBlock (T\<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A > für diese Nachricht.</span><span class="sxs-lookup"><span data-stu-id="28ad3-161">If `true` is returned, the  [ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> must subsequently call either  [ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A> or [ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A> for this message.</span></span> <span data-ttu-id="28ad3-162">Bei unterlassen, möglicherweise in der Quelle kann weiteren Nachrichten mit diesem oder anderen Zielen weitergegeben wird.</span><span class="sxs-lookup"><span data-stu-id="28ad3-162">Failure to do so may result in the source being unable to propagate any further messages to this or other targets.</span></span>  
  
 <span data-ttu-id="28ad3-163">[ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A> must not be called while the target is holding any internal locks.</span><span class="sxs-lookup"><span data-stu-id="28ad3-163">[ISourceBlock(T\<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A> must not be called while the target is holding any internal locks.</span></span> <span data-ttu-id="28ad3-164">Auf diese Weise wird der Sperrhierarchie zum Vermeiden von Deadlocks in einem Datenflussnetzwerk verletzen.</span><span class="sxs-lookup"><span data-stu-id="28ad3-164">Doing so will violate the lock hierarchy necessary to avoid deadlocks in a dataflow network.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="28ad3-165">Der <paramref name="messageHeader" /> ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-165">The <paramref name="messageHeader" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28ad3-166">
            <paramref name="target" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-166">The <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt;.OfferMessage">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Dataflow.DataflowMessageStatus ITargetBlock&lt;T&gt;.OfferMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, T messageValue, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T&gt; source, bool consumeToAccept);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Threading.Tasks.Dataflow.DataflowMessageStatus System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt;.OfferMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, !T messageValue, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!T&gt; source, bool consumeToAccept) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&lt;T&gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function OfferMessage (messageHeader As DataflowMessageHeader, messageValue As T, source As ISourceBlock(Of T), consumeToAccept As Boolean) As DataflowMessageStatus Implements ITargetBlock(Of T).OfferMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Threading::Tasks::Dataflow::DataflowMessageStatus System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt;.OfferMessage(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, T messageValue, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T&gt; ^ source, bool consumeToAccept) = System::Threading::Tasks::Dataflow::ITargetBlock&lt;T&gt;::OfferMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Dataflow.DataflowMessageStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="messageValue" Type="T" />
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T&gt;" />
        <Parameter Name="consumeToAccept" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="messageHeader">
          <span data-ttu-id="28ad3-167">Eine <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />-Instanz, die die Header der Nachricht darstellt, die bereitgestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-167">A <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> instance that represents the header of the message being offered.</span>
          </span>
        </param>
        <param name="messageValue">
          <span data-ttu-id="28ad3-168">Der Wert der Nachricht, die bereitgestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-168">The value of the message being offered.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="28ad3-169">Die <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />, die die Nachricht anbietet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-169">The <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> offering the message.</span>
          </span>
          <span data-ttu-id="28ad3-170">Dies kann NULL sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-170">This may be null.</span>
          </span>
        </param>
        <param name="consumeToAccept">
          <span data-ttu-id="28ad3-171">Auf <see langword="true" /> festlegen, um das Ziel anzuweisen, <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> während des Aufrufs von <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /><see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> synchron aufzurufen, um die Meldung zu verarbeiten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-171">Set to <see langword="true" /> to instruct the target to call <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> synchronously during the call to <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />, prior to returning <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, in order to consume the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28ad3-172">Bietet eine Meldung für <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> an und gibt dem Ziel die Möglichkeit, die Nachricht zu verarbeiten oder zurückzustellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-172">Offers a message to the <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, giving the target the opportunity to consume or postpone the message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28ad3-173">Der Status der angebotenen Meldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-173">The status of the offered message.</span>
          </span>
          <span data-ttu-id="28ad3-174">Wenn die Meldung vom Ziel akzeptiert wurde, wird <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> zurückgegeben, und die Quelle sollte die angebotene Meldung nicht mehr verwenden, da sie jetzt dem Ziel gehört.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-174">If the message was accepted by the target, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> is returned, and the source should no longer use the offered message, because it is now owned by the target.</span>
          </span>
          <span data-ttu-id="28ad3-175">Wenn die Nachricht vom Ziel zurückgestellt wurde, wird <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> als Benachrichtigung zurückgegeben, dass das Ziel später möglicherweise versucht, die Nachricht zu verarbeiten oder zu reservieren. Zwischenzeitlich besitzt die Quelle die Nachricht weiterhin und bietet sie möglicherweise anderen Blöcke an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-175">If the message was postponed by the target, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> is returned as a notification that the target may later attempt to consume or reserve the message; in the meantime, the source still owns the message and may offer it to other blocks.</span>
          </span>
          <span data-ttu-id="28ad3-176">Wenn das Ziel andernfalls die Meldung zurückgestellt hätte, aber <paramref name="source" /> gleich <see langword="null" /> war, wird stattdessen <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-176">If the target would have otherwise postponed message, but <paramref name="source" /> was <see langword="null" />, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> is instead returned.</span>
          </span>
          <span data-ttu-id="28ad3-177">Wenn das Ziel versucht hat, die Nachricht zu akzeptieren, diese aber verpasst hat, weil die Quelle die die Meldung an ein anderes Ziel übermittelt oder einfach verworfen hat, wird <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /> zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-177">If the target tried to accept the message but missed it due to the source delivering the message to another target or simply discarding it, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /> is returned.</span>
          </span>
          <span data-ttu-id="28ad3-178">Wenn das Ziel beschlossen hat, die Nachricht nicht zu akzeptieren, wird <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-178">If the target chose not to accept the message, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> is returned.</span>
          </span>
          <span data-ttu-id="28ad3-179">Wenn das Ziel beschlossen hat, die Meldung nicht zu akzeptieren und niemals eine weitere Meldung von dieser Quelle akzeptieren wird, wird <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /> zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-179">If the target chose not to accept the message and will never accept another message from this source, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /> is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="28ad3-180">
            <paramref name="messageHeader" /> ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-180">The  <paramref name="messageHeader" /> is not valid.</span>
          </span>
          <span data-ttu-id="28ad3-181">oder <paramref name="consumeToAccept" /> kann nur TRUE sein, wenn eine <paramref name="source" /> bereitgestellt wird, die nicht NULL ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-181">-or- <paramref name="consumeToAccept" /> may only be true if provided with a non-null <paramref name="source" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BatchBlock`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="28ad3-182">Gibt eine Zeichenfolge zurück, die den formatierten Namen dieser <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />-Instanz darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-182">Returns a string that represents the formatted name of this  <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28ad3-183">Eine Zeichenfolge, die den formatierten Namen dieser <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />-Instanz darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-183">A string that represents the formatted name of this  <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28ad3-184">Wird von <xref:System.Object> geerbt.</span><span class="sxs-lookup"><span data-stu-id="28ad3-184">Inherited from <xref:System.Object>.</span></span> <span data-ttu-id="28ad3-185">Verwendet die <xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A> Option.</span><span class="sxs-lookup"><span data-stu-id="28ad3-185">Uses the  <xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A> option.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TriggerBatch">
      <MemberSignature Language="C#" Value="public void TriggerBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TriggerBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BatchBlock`1.TriggerBatch" />
      <MemberSignature Language="VB.NET" Value="Public Sub TriggerBatch ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TriggerBatch();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="28ad3-186">Startet <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" />, um einen Batchvorgang zu initiieren, auch wenn die Anzahl der Elemente, die sich momentan in der Warteschlange befinden oder zurückgestellt wurden, kleiner ist als <see cref="P:System.Threading.Tasks.Dataflow.BatchBlock`1.BatchSize" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-186">Triggers the <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" /> to initiate a batching operation even if the number of currently queued or postponed items is less than the <see cref="P:System.Threading.Tasks.Dataflow.BatchBlock`1.BatchSize" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28ad3-187">Im gierigen Modus wird ein Batch von Elementen in der Warteschlange generiert werden, auch wenn weniger als die Batchgröße vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="28ad3-187">In greedy mode, a batch will be generated from queued items even if fewer exist than the batch size.</span></span>  
  
 <span data-ttu-id="28ad3-188">Im nicht gierigen Modus wird ein Batch asynchron aus der verschobenen Elemente generiert werden, selbst wenn weniger Elemente als die Batchgröße genutzt werden können.</span><span class="sxs-lookup"><span data-stu-id="28ad3-188">In non-greedy mode, a batch will be generated asynchronously from postponed items even if fewer items than specified by the batch size can be consumed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReceive">
      <MemberSignature Language="C#" Value="public bool TryReceive (Predicate&lt;T[]&gt; filter, out T[] item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryReceive(class System.Predicate`1&lt;!T[]&gt; filter, [out] !T[]&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BatchBlock`1.TryReceive(System.Predicate{`0[]},`0[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReceive (filter As Predicate(Of T()), ByRef item As T()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryReceive(Predicate&lt;cli::array &lt;T&gt; ^&gt; ^ filter, [Runtime::InteropServices::Out] cli::array &lt;T&gt; ^ % item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Predicate&lt;T[]&gt;" />
        <Parameter Name="item" Type="T[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="28ad3-189">Das Prädikat, das ein Wert erfolgreich übergeben muss, damit es empfangen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-189">The predicate a value must successfully pass in order for it to be received.</span>
          </span>
          <span data-ttu-id="28ad3-190">Der <c>Filter</c> ist möglicherweise <see langword="null" />. Wenn dies der Fall ist, werden alle Elemente übergeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-190">
              <c>filter</c> may be <see langword="null" />, in which case all items will pass.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="28ad3-191">Das von der Quelle empfangene Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-191">The item received from the source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28ad3-192">Versucht, ein verfügbares Output-Element von<see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" /> synchron zu empfangen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-192">Attempts to synchronously receive an available output item from the <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28ad3-193">
            <see langword="true" />, wenn ein Element empfangen werden konnte; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-193">
              <see langword="true" /> if an item could be received; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28ad3-194">Diese Methode wird wartet auf die Quelle zum Bereitstellen von ein Element nicht blockiert werden.</span><span class="sxs-lookup"><span data-stu-id="28ad3-194">This method does not block waiting for the source to provide an item.</span></span>  
  
 <span data-ttu-id="28ad3-195">Es wird nach der Überprüfung nach einem Element zurückgegeben, und zwar unabhängig davon, ob ein Element verfügbar war.</span><span class="sxs-lookup"><span data-stu-id="28ad3-195">It will return after checking for an element, whether or not an element was available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReceiveAll">
      <MemberSignature Language="C#" Value="public bool TryReceiveAll (out System.Collections.Generic.IList&lt;T[]&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryReceiveAll([out] class System.Collections.Generic.IList`1&lt;!T[]&gt;&amp; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BatchBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0[]}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReceiveAll (ByRef items As IList(Of T())) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryReceiveAll([Runtime::InteropServices::Out] System::Collections::Generic::IList&lt;cli::array &lt;T&gt; ^&gt; ^ % items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IList&lt;T[]&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="28ad3-196">Die von der Quelle empfangenen Elemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-196">The items received from the source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28ad3-197">Versucht, alle verfügbaren Elemente aus <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" /> synchron zu empfangen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-197">Attempts to synchronously receive all available items from the <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28ad3-198">
            <see langword="true" />, wenn ein oder mehrere Elemente empfangen werden konnten; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="28ad3-198">
              <see langword="true" /> if one or more items could be received; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28ad3-199">Diese Methode wird wartet auf die Quelle zum Bereitstellen von ein Element nicht blockiert werden.</span><span class="sxs-lookup"><span data-stu-id="28ad3-199">This method does not block waiting for the source to provide an item.</span></span>  
  
 <span data-ttu-id="28ad3-200">Es wird nach der Überprüfung für Elemente zurückgegeben, und zwar unabhängig davon, ob ein Element verfügbar war.</span><span class="sxs-lookup"><span data-stu-id="28ad3-200">It will return after checking for elements, whether or not an element was available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>