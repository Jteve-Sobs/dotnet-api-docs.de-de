<Type Name="TransformBlock&lt;TInput,TOutput&gt;" FullName="System.Threading.Tasks.Dataflow.TransformBlock&lt;TInput,TOutput&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ad628271192d37f043c63d5cb2385a99f623a62d" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75159075" /></Metadata><TypeSignature Language="C#" Value="public sealed class TransformBlock&lt;TInput,TOutput&gt; : System.Threading.Tasks.Dataflow.IPropagatorBlock&lt;TInput,TOutput&gt;, System.Threading.Tasks.Dataflow.IReceivableSourceBlock&lt;TOutput&gt;, System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;, System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TransformBlock`2&lt;TInput, TOutput&gt; extends System.Object implements class System.Threading.Tasks.Dataflow.IDataflowBlock, class System.Threading.Tasks.Dataflow.IPropagatorBlock`2&lt;!TInput, !TOutput&gt;, class System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&lt;!TOutput&gt;, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!TOutput&gt;, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!TInput&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Dataflow.TransformBlock`2" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TransformBlock(Of TInput, TOutput)&#xA;Implements IPropagatorBlock(Of TInput, TOutput), IReceivableSourceBlock(Of TOutput), ISourceBlock(Of TOutput), ITargetBlock(Of TInput)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TInput, typename TOutput&gt;&#xA;public ref class TransformBlock sealed : System::Threading::Tasks::Dataflow::IPropagatorBlock&lt;TInput, TOutput&gt;, System::Threading::Tasks::Dataflow::IReceivableSourceBlock&lt;TOutput&gt;, System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt;, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt;" />
  <TypeSignature Language="F#" Value="type TransformBlock&lt;'Input, 'Output&gt; = class&#xA;    interface IDataflowBlock&#xA;    interface IPropagatorBlock&lt;'Input, 'Output&gt;&#xA;    interface ISourceBlock&lt;'Output&gt;&#xA;    interface ITargetBlock&lt;'Input&gt;&#xA;    interface IReceivableSourceBlock&lt;'Output&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
    <AssemblyVersion>4.5.25.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.2.0</AssemblyVersion>
    <AssemblyVersion>4.6.3.0</AssemblyVersion>
    <AssemblyVersion>4.6.4.0</AssemblyVersion>
    <AssemblyVersion>4.6.5.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TInput" />
    <TypeParameter Name="TOutput" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.IDataflowBlock</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.IPropagatorBlock&lt;TInput,TOutput&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.IReceivableSourceBlock&lt;TOutput&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;dotnet-uwp-10.0">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebuggerDisplayContent,nq}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;dotnet-uwp-10.0">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Threading.Tasks.Dataflow.TransformBlock`2/DebugView))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TInput"><span data-ttu-id="0cb6d-101">Gibt den Datentyp an, der durch dieses <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> empfangen und bearbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-101">Specifies the type of data received and operated on by this <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" />.</span></span></typeparam>
    <typeparam name="TOutput"><span data-ttu-id="0cb6d-102">Gibt den Typ der Daten an, die von diesem <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" />ausgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-102">Specifies the type of data output by this  <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" />.</span></span></typeparam>
    <summary><span data-ttu-id="0cb6d-103">Stellt einen Datenflussblock bereit, der einen bereitgestellten <see cref="T:System.Func`2" />-Delegaten für jede empfangene Datenelement aufruft.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-103">Provides a dataflow block that invokes a provided <see cref="T:System.Func`2" /> delegate for every data element received.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [tpl-install-instructions](~/includes/tpl-install-instructions.md)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransformBlock (Func&lt;TInput,System.Threading.Tasks.Task&lt;TOutput&gt;&gt; transform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!TInput, class System.Threading.Tasks.Task`1&lt;!TOutput&gt;&gt; transform) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{`1}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transform As Func(Of TInput, Task(Of TOutput)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransformBlock(Func&lt;TInput, System::Threading::Tasks::Task&lt;TOutput&gt; ^&gt; ^ transform);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.TransformBlock&lt;'Input, 'Output&gt; : Func&lt;'Input, System.Threading.Tasks.Task&lt;'Output&gt;&gt; -&gt; System.Threading.Tasks.Dataflow.TransformBlock&lt;'Input, 'Output&gt;" Usage="new System.Threading.Tasks.Dataflow.TransformBlock&lt;'Input, 'Output&gt; transform" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transform" Type="System.Func&lt;TInput,System.Threading.Tasks.Task&lt;TOutput&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="transform"><span data-ttu-id="0cb6d-104">Die Funktion, die für jedes empfangene Datenelement aufzurufen ist.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-104">The function to invoke with each data element received.</span></span></param>
        <summary><span data-ttu-id="0cb6d-105">Initialisiert eine neue <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> mit dem angegebenen <see cref="T:System.Func`2" />.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-105">Initializes a new <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> with the specified <see cref="T:System.Func`2" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0cb6d-106"><paramref name="transform" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-106">The <paramref name="transform" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransformBlock (Func&lt;TInput,TOutput&gt; transform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!TInput, !TOutput&gt; transform) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformBlock`2.#ctor(System.Func{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transform As Func(Of TInput, TOutput))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransformBlock(Func&lt;TInput, TOutput&gt; ^ transform);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.TransformBlock&lt;'Input, 'Output&gt; : Func&lt;'Input, 'Output&gt; -&gt; System.Threading.Tasks.Dataflow.TransformBlock&lt;'Input, 'Output&gt;" Usage="new System.Threading.Tasks.Dataflow.TransformBlock&lt;'Input, 'Output&gt; transform" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transform" Type="System.Func&lt;TInput,TOutput&gt;" />
      </Parameters>
      <Docs>
        <param name="transform"><span data-ttu-id="0cb6d-107">Die Funktion, die für jedes empfangene Datenelement aufzurufen ist.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-107">The function to invoke with each data element received.</span></span></param>
        <summary><span data-ttu-id="0cb6d-108">Initialisiert eine neue <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> mit dem angegebenen <see cref="T:System.Func`2" />.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-108">Initializes a new <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> with the specified  <see cref="T:System.Func`2" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0cb6d-109"><paramref name="transform" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-109">The <paramref name="transform" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransformBlock (Func&lt;TInput,System.Threading.Tasks.Task&lt;TOutput&gt;&gt; transform, System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!TInput, class System.Threading.Tasks.Task`1&lt;!TOutput&gt;&gt; transform, class System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{`1}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transform As Func(Of TInput, Task(Of TOutput)), dataflowBlockOptions As ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransformBlock(Func&lt;TInput, System::Threading::Tasks::Task&lt;TOutput&gt; ^&gt; ^ transform, System::Threading::Tasks::Dataflow::ExecutionDataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.TransformBlock&lt;'Input, 'Output&gt; : Func&lt;'Input, System.Threading.Tasks.Task&lt;'Output&gt;&gt; * System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions -&gt; System.Threading.Tasks.Dataflow.TransformBlock&lt;'Input, 'Output&gt;" Usage="new System.Threading.Tasks.Dataflow.TransformBlock&lt;'Input, 'Output&gt; (transform, dataflowBlockOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transform" Type="System.Func&lt;TInput,System.Threading.Tasks.Task&lt;TOutput&gt;&gt;" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />
      </Parameters>
      <Docs>
        <param name="transform"><span data-ttu-id="0cb6d-110">Die Funktion, die für jedes empfangene Datenelement aufzurufen ist.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-110">The function to invoke with each data element received.</span></span></param>
        <param name="dataflowBlockOptions"><span data-ttu-id="0cb6d-111">Die Optionen, mit denen dieser <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> zu konfigurieren ist.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-111">The options with which to configure this  <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" />.</span></span></param>
        <summary><span data-ttu-id="0cb6d-112">Initialisiert ein neues <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" />-Objekt mit den angegebenen <see cref="T:System.Func`2" /> und <see cref="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-112">Initializes a new <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> with the specified  <see cref="T:System.Func`2" /> and <see cref="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0cb6d-113"><paramref name="transform" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-113">The <paramref name="transform" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="0cb6d-114">- oder -</span><span class="sxs-lookup"><span data-stu-id="0cb6d-114">-or-</span></span> 
<span data-ttu-id="0cb6d-115"><paramref name="dataflowBlockOptions" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-115">The <paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransformBlock (Func&lt;TInput,TOutput&gt; transform, System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!TInput, !TOutput&gt; transform, class System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformBlock`2.#ctor(System.Func{`0,`1},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transform As Func(Of TInput, TOutput), dataflowBlockOptions As ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransformBlock(Func&lt;TInput, TOutput&gt; ^ transform, System::Threading::Tasks::Dataflow::ExecutionDataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.TransformBlock&lt;'Input, 'Output&gt; : Func&lt;'Input, 'Output&gt; * System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions -&gt; System.Threading.Tasks.Dataflow.TransformBlock&lt;'Input, 'Output&gt;" Usage="new System.Threading.Tasks.Dataflow.TransformBlock&lt;'Input, 'Output&gt; (transform, dataflowBlockOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transform" Type="System.Func&lt;TInput,TOutput&gt;" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />
      </Parameters>
      <Docs>
        <param name="transform"><span data-ttu-id="0cb6d-116">Die Funktion, die für jedes empfangene Datenelement aufzurufen ist.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-116">The function to invoke with each data element received.</span></span></param>
        <param name="dataflowBlockOptions"><span data-ttu-id="0cb6d-117">Die Optionen, mit denen dieser <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> zu konfigurieren ist.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-117">The options with which to configure this  <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" />.</span></span></param>
        <summary><span data-ttu-id="0cb6d-118">Initialisiert ein neues <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" />-Objekt mit den angegebenen <see cref="T:System.Func`2" /> und <see cref="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-118">Initializes a new <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> with the specified  <see cref="T:System.Func`2" /> and <see cref="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0cb6d-119"><paramref name="transform" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-119">The <paramref name="transform" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="0cb6d-120">- oder -</span><span class="sxs-lookup"><span data-stu-id="0cb6d-120">-or-</span></span> 
<span data-ttu-id="0cb6d-121"><paramref name="dataflowBlockOptions" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-121">The <paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformBlock`2.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Complete();" />
      <MemberSignature Language="F#" Value="abstract member Complete : unit -&gt; unit&#xA;override this.Complete : unit -&gt; unit" Usage="transformBlock.Complete " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0cb6d-122">Signalisiert <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />, dass es keine Nachrichten mehr akzeptieren und keine produzieren und keine weiteren zurückgestellten Nachrichten verarbeiten soll.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-122">Signals to the <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> that it should not accept nor produce any more messages nor consume any more postponed messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cb6d-123">Nachdem <xref:System.Threading.Tasks.Dataflow.TransformBlock%602.Complete%2A> für einen Datenfluss Block aufgerufen wurde, wird dieser Block abgeschlossen, und seine <xref:System.Threading.Tasks.Dataflow.TransformBlock%602.Completion%2A> Aufgabe wird in einen Endzustand versetzt, nachdem alle zuvor verfügbaren Daten verarbeitet wurden.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-123">After <xref:System.Threading.Tasks.Dataflow.TransformBlock%602.Complete%2A> has been called on a dataflow block, that block will complete, and its <xref:System.Threading.Tasks.Dataflow.TransformBlock%602.Completion%2A> task will enter a final state after it has processed all previously available data.</span></span> <span data-ttu-id="0cb6d-124"><xref:System.Threading.Tasks.Dataflow.TransformBlock%602.Complete%2A> blockiert nicht, dass auf den Abschluss gewartet wird, sondern initiiert die Anforderung. um zu warten, bis der Vorgang abgeschlossen ist, kann der <xref:System.Threading.Tasks.Dataflow.TransformBlock%602.Completion%2A> Task verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-124"><xref:System.Threading.Tasks.Dataflow.TransformBlock%602.Complete%2A> will not block waiting for completion to occur, but rather will initiate the request; to wait for completion to occur, the <xref:System.Threading.Tasks.Dataflow.TransformBlock%602.Completion%2A> task may be used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completion">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Completion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.Task Completion" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.TransformBlock`2.Completion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Completion As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::Task ^ Completion { System::Threading::Tasks::Task ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Completion : System.Threading.Tasks.Task" Usage="System.Threading.Tasks.Dataflow.TransformBlock&lt;'Input, 'Output&gt;.Completion" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0cb6d-125">Ruft ein <see cref="T:System.Threading.Tasks.Task" /> ab, das den asynchronen Vorgang und die Beendigung des Datenflussblocks darstellt.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-125">Gets a <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation and completion of the dataflow block.</span></span></summary>
        <value><span data-ttu-id="0cb6d-126">Die Aufgabe.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-126">The task.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cb6d-127">Ein Datenfluss Block wird als abgeschlossen betrachtet, wenn er zurzeit keine Nachricht verarbeitet, und wenn sichergestellt ist, dass keine weiteren Nachrichten verarbeitet werden.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-127">A dataflow block is considered completed when it is not currently processing a message and when it has guaranteed that it will not process any more messages.</span></span> <span data-ttu-id="0cb6d-128">Der zurückgegebene <xref:System.Threading.Tasks.Task> wechselt in den abgeschlossenen Zustand, wenn der zugeordnete-Block abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-128">The returned <xref:System.Threading.Tasks.Task> will transition to a completed state when the associated block has completed.</span></span> <span data-ttu-id="0cb6d-129">Der Übergang in den <xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.RanToCompletion> Status erfolgt, wenn der Block seine Verarbeitung gemäß der definierten Semantik des Datenfluss Blocks erfolgreich abgeschlossen hat.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-129">It will transition to the <xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.RanToCompletion> state when the block completes its processing successfully according to the dataflow block's defined semantics.</span></span> <span data-ttu-id="0cb6d-130">Es wechselt in den <xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.Faulted> Status, wenn der Datenfluss Block die Verarbeitung aufgrund einer nicht behandelten Ausnahme vorzeitig abgeschlossen hat, und wechselt zum <xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.Canceled> Zustands, wenn der Datenfluss Block die Verarbeitung vorzeitig abgeschlossen hat, weil eine Abbruch Anforderung empfangen wurde.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-130">It will transition to the <xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.Faulted> state when the dataflow block has completed processing prematurely due to an unhandled exception, and it will transition to the <xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.Canceled> state when the dataflow block has completed processing prematurely due to receiving a cancellation request.</span></span> <span data-ttu-id="0cb6d-131">Wenn die Aufgabe im <xref:System.Threading.Tasks.TaskStatus.Faulted> Zustand abgeschlossen wird, gibt die `Exception`-Eigenschaft eine <xref:System.AggregateException> zurück, die die mindestens eine Ausnahme enthält, durch die der-Block fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-131">If the task completes in the <xref:System.Threading.Tasks.TaskStatus.Faulted> state, its `Exception` property will return an <xref:System.AggregateException> containing the one or more exceptions that caused the block to fail.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputCount">
      <MemberSignature Language="C#" Value="public int InputCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InputCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.TransformBlock`2.InputCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InputCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.InputCount : int" Usage="System.Threading.Tasks.Dataflow.TransformBlock&lt;'Input, 'Output&gt;.InputCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0cb6d-132">Ruft die Anzahl der Eingabeelemente ab, die darauf warten, von diesem Block verarbeitet zu werden.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-132">Gets the number of input items waiting to be processed by this block.</span></span></summary>
        <value><span data-ttu-id="0cb6d-133">Die Anzahl von Eingabe-Elementen in.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-133">The number of input items.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cb6d-134">Der <xref:System.Threading.Tasks.Dataflow.TransformBlock%602.InputCount%2A> enthält keine Elemente, die gerade vom-Block verarbeitet werden, oder Elemente, die bereits vom-Block verarbeitet wurden.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-134">The <xref:System.Threading.Tasks.Dataflow.TransformBlock%602.InputCount%2A> does not include any items currently being processed by the block or any items that have already been processed by the block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkTo">
      <MemberSignature Language="C#" Value="public IDisposable LinkTo (System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt; target, System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable LinkTo(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!TOutput&gt; target, class System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Threading.Tasks.Dataflow.DataflowLinkOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function LinkTo (target As ITargetBlock(Of TOutput), linkOptions As DataflowLinkOptions) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IDisposable ^ LinkTo(System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target, System::Threading::Tasks::Dataflow::DataflowLinkOptions ^ linkOptions);" />
      <MemberSignature Language="F#" Value="abstract member LinkTo : System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Output&gt; * System.Threading.Tasks.Dataflow.DataflowLinkOptions -&gt; IDisposable&#xA;override this.LinkTo : System.Threading.Tasks.Dataflow.ITargetBlock&lt;'Output&gt; * System.Threading.Tasks.Dataflow.DataflowLinkOptions -&gt; IDisposable" Usage="transformBlock.LinkTo (target, linkOptions)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ISourceBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
        <Parameter Name="linkOptions" Type="System.Threading.Tasks.Dataflow.DataflowLinkOptions" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="0cb6d-135">Das <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />-Objekt, das mit dieser Quelle verbunden werden soll.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-135">The  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to which to connect this source.</span></span></param>
        <param name="linkOptions"><span data-ttu-id="0cb6d-136">Eine <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" />-Instanz, die den Link konfiguriert.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-136">A <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" /> instance that configures the link.</span></span></param>
        <summary><span data-ttu-id="0cb6d-137">Verbindet <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> mit dem angegebenen <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-137">Links the  <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> to the specified  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> .</span></span></summary>
        <returns><span data-ttu-id="0cb6d-138">Ein IDisposable, der nach dem Aufrufen von Dispose, die Quelle vom Ziel trennt.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-138">An IDisposable that, upon calling Dispose, will unlink the source from the target.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0cb6d-139"><paramref name="target" /> ist NULL (Nothing in Visual Basic), oder <paramref name="linkOptions" /> ist NULL (Nothing in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="0cb6d-139"><paramref name="target" /> is null (Nothing in Visual Basic) or  <paramref name="linkOptions" /> is null (Nothing in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OutputCount">
      <MemberSignature Language="C#" Value="public int OutputCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutputCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.TransformBlock`2.OutputCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int OutputCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputCount : int" Usage="System.Threading.Tasks.Dataflow.TransformBlock&lt;'Input, 'Output&gt;.OutputCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0cb6d-140">Ruft die Anzahl der Ausgabe-Elementen ab, die von diesem Block empfangen werden können.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-140">Gets the number of output items available to be received from this block.</span></span></summary>
        <value><span data-ttu-id="0cb6d-141">Die Anzahl von Ausgabe-Elementen in.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-141">The number of output items.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.IDataflowBlock.Fault">
      <MemberSignature Language="C#" Value="void IDataflowBlock.Fault (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(Exception ^ exception) = System::Threading::Tasks::Dataflow::IDataflowBlock::Fault;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(System.Exception)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="0cb6d-142">Die <see cref="T:System.Exception" />, die den Fehler verursacht hat.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-142">The <see cref="T:System.Exception" /> that caused the faulting.</span></span></param>
        <summary><span data-ttu-id="0cb6d-143">Hat zur Folge, dass <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> im Status <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> abgeschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-143">Causes the <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> to complete in a  <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cb6d-144">Nachdem <xref:System.Threading.Tasks.Dataflow.TransformBlock%602.System%23Threading%23Tasks%23Dataflow%23IDataflowBlock%23Fault%2A> für einen Datenfluss Block aufgerufen wurde, wird dieser Block abgeschlossen, und seine <xref:System.Threading.Tasks.Dataflow.TransformBlock%602.Completion%2A> Aufgabe wechselt in einen Endzustand.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-144">After <xref:System.Threading.Tasks.Dataflow.TransformBlock%602.System%23Threading%23Tasks%23Dataflow%23IDataflowBlock%23Fault%2A> has been called on a dataflow block, that block will complete, and its <xref:System.Threading.Tasks.Dataflow.TransformBlock%602.Completion%2A> task will enter a final state.</span></span> <span data-ttu-id="0cb6d-145">Ein Fehler bei einem-Block, wie beim Abbrechen eines-Blocks, bewirkt, dass gepufferte Nachrichten (nicht verarbeitete Eingabe Meldungen und nicht angebotene Ausgabe Nachrichten) verloren gehen.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-145">Faulting a block, as with canceling a block, causes buffered messages (unprocessed input messages as well as unoffered output messages) to be lost.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0cb6d-146"><paramref name="exception" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-146">The <paramref name="exception" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;.ConsumeMessage">
      <MemberSignature Language="C#" Value="TOutput ISourceBlock&lt;TOutput&gt;.ConsumeMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt; target, out bool messageConsumed);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance !TOutput System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;.ConsumeMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!TOutput&gt; target, [out] bool&amp; messageConsumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&lt;TOutput&gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Function ConsumeMessage (messageHeader As DataflowMessageHeader, target As ITargetBlock(Of TOutput), ByRef messageConsumed As Boolean) As TOutput Implements ISourceBlock(Of TOutput).ConsumeMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual TOutput System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;.ConsumeMessage(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target, [Runtime::InteropServices::Out] bool % messageConsumed) = System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt;::ConsumeMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
        <Parameter Name="messageConsumed" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="messageHeader"><span data-ttu-id="0cb6d-147"><see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> der Meldung, die verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-147">The <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> of the message being consumed.</span></span></param>
        <param name="target"><span data-ttu-id="0cb6d-148">Die <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, die die Nachricht verwendet.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-148">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> consuming the message.</span></span></param>
        <param name="messageConsumed"><span data-ttu-id="0cb6d-149"><see langword="true" />, wenn die Nachricht erfolgreich verarbeitet wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-149"><see langword="true" /> if the message was successfully consumed; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="0cb6d-150">Wird von verknüpften <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> aufgerufen, um einen <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> zu akzeptieren und verarbeiten, die zuvor durch dieses <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> angeboten werden.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-150">Called by a linked <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to accept and consume a <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> previously offered by this <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span></span></summary>
        <returns><span data-ttu-id="0cb6d-151">Der Wert der verarbeiteten Meldung.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-151">The value of the consumed message.</span></span> <span data-ttu-id="0cb6d-152">Dies entspricht möglicherweise einer anderen <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />-Instanz als die zuvor reservierte und die als <paramref name="messageHeader" /> an <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> übergebene.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-152">This may correspond to a different <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> instance than was previously reserved and passed as the <paramref name="messageHeader" /> to <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />.</span></span> <span data-ttu-id="0cb6d-153">Der <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> muss den zurückgegebenen Wert benutzen und nicht den Wert, der als <paramref name="messageValue" /> von <see cref="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /> übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-153">The consuming <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> must use the returned value instead of the value passed as <paramref name="messageValue" /> through <see cref="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />.</span></span>  
  
<span data-ttu-id="0cb6d-154">Wenn die Meldung, die angefordert wird, nicht verfügbar ist, ist der Rückgabewert <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-154">If the message requested is not available, the return value will be <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cb6d-155">Nur <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> Instanzen, die mit dieser <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> Instanz verknüpft sind, können <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A>verwenden, und Sie müssen nur verwendet werden, um <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> Instanzen zu verwenden, die zuvor von dieser Quelle für das Ziel bereitgestellt wurden.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-155">Only <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> instances linked to this <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> instance may use <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A>, and it must only be used to consume <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> instances previously offered by this source to the target.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0cb6d-156">Der <paramref name="messageHeader" /> ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-156">The <paramref name="messageHeader" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0cb6d-157"><paramref name="target" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-157">The <paramref name="target" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;.ReleaseReservation">
      <MemberSignature Language="C#" Value="void ISourceBlock&lt;TOutput&gt;.ReleaseReservation (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt; target);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;.ReleaseReservation(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!TOutput&gt; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&lt;TOutput&gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})" />
      <MemberSignature Language="VB.NET" Value="Sub ReleaseReservation (messageHeader As DataflowMessageHeader, target As ITargetBlock(Of TOutput)) Implements ISourceBlock(Of TOutput).ReleaseReservation" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;.ReleaseReservation(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target) = System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt;::ReleaseReservation;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <param name="messageHeader"><span data-ttu-id="0cb6d-158"><see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> der reservierten Meldung, die freigegeben wird.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-158">The <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> of the reserved message being released.</span></span></param>
        <param name="target"><span data-ttu-id="0cb6d-159"><see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, der die Nachricht freigibt, die er vorher reserviert hat.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-159">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> releasing the message it previously reserved.</span></span></param>
        <summary><span data-ttu-id="0cb6d-160">Wird von einem verknüpften <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> aufgerufen, um einen <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> freizugeben, der zuvor von diesem <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> reserviert wurde.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-160">Called by a linked <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to release a previously reserved <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> by this  <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cb6d-161">Nur <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> Instanzen, die mit dieser <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> Instanz verknüpft sind, können <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A>verwenden, und Sie müssen nur zum Freigeben <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> Instanzen verwendet werden, die zuvor vom Ziel reserviert wurden.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-161">Only <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> instances linked to this <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> instance may use <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A>, and it must only be used to release <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> instances previously and successfully reserved by the target.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0cb6d-162">Der <paramref name="messageHeader" /> ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-162">The <paramref name="messageHeader" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0cb6d-163"><paramref name="target" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-163">The <paramref name="target" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0cb6d-164">Das <paramref name="target" /> hatte die Meldung nicht reserviert.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-164">The <paramref name="target" /> did not have the message reserved.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;.ReserveMessage">
      <MemberSignature Language="C#" Value="bool ISourceBlock&lt;TOutput&gt;.ReserveMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt; target);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;.ReserveMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!TOutput&gt; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&lt;TOutput&gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})" />
      <MemberSignature Language="VB.NET" Value="Function ReserveMessage (messageHeader As DataflowMessageHeader, target As ITargetBlock(Of TOutput)) As Boolean Implements ISourceBlock(Of TOutput).ReserveMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;.ReserveMessage(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target) = System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt;::ReserveMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <param name="messageHeader"><span data-ttu-id="0cb6d-165"><see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> der Meldung, die reserviert wird.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-165">The <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> of the message being reserved.</span></span></param>
        <param name="target"><span data-ttu-id="0cb6d-166">Die <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> der Meldung empfängt.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-166">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> reserving the message.</span></span></param>
        <summary><span data-ttu-id="0cb6d-167">Wird von einem verknüpften <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> aufgerufen, um ein <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />-Objekt, das von diesem <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />-Objekt zuvor angeboten wurde, zu reservieren.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-167">Called by a linked <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to reserve a previously offered <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> by this  <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span></span></summary>
        <returns><span data-ttu-id="0cb6d-168"><see langword="true" />, wenn die Nachricht erfolgreich reserviert wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-168"><see langword="true" /> if the message was successfully reserved; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cb6d-169">Nur <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> Instanzen, die mit dieser <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> Instanz verknüpft sind, können <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A>verwenden, und Sie müssen nur zum Reservieren von <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> Instanzen verwendet werden, die zuvor von dieser Quelle für das Ziel angeboten wurden.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-169">Only <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> instances linked to this <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> instance may use <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A>, and it must only be used to reserve <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> instances previously offered by this source to the target.</span></span>  
  
 <span data-ttu-id="0cb6d-170">Wenn `true` zurückgegeben wird, muss der <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> anschließend entweder <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A> oder <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A> für diese Nachricht anrufen.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-170">If `true` is returned, the <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> must subsequently call either <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A> or <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A> for this message.</span></span> <span data-ttu-id="0cb6d-171">Wenn dies nicht der Fall ist, kann es dazu kommen, dass die Quelle keine weiteren Nachrichten mehr an dieses oder andere Ziele weitergeben kann.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-171">Failure to do so may result in the source being unable to propagate any further messages to this or other targets.</span></span>  
  
 <span data-ttu-id="0cb6d-172"><xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A> dürfen nicht aufgerufen werden, wenn das Ziel interne Sperren enthält.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-172"><xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A> must not be called while the target is holding any internal locks.</span></span> <span data-ttu-id="0cb6d-173">Dies verstößt gegen die Sperr Hierarchie, die notwendig ist, um Deadlocks in einem Datenfluss Netzwerk zu vermeiden.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-173">Doing so will violate the lock hierarchy necessary to avoid deadlocks in a dataflow network.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0cb6d-174">Der <paramref name="messageHeader" /> ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-174">The <paramref name="messageHeader" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0cb6d-175"><paramref name="target" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-175">The <paramref name="target" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Dataflow.DataflowMessageStatus ITargetBlock&lt;TInput&gt;.OfferMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, TInput messageValue, System.Threading.Tasks.Dataflow.ISourceBlock&lt;TInput&gt; source, bool consumeToAccept);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Threading.Tasks.Dataflow.DataflowMessageStatus System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, !TInput messageValue, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!TInput&gt; source, bool consumeToAccept) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock&lt;TInput&gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function OfferMessage (messageHeader As DataflowMessageHeader, messageValue As TInput, source As ISourceBlock(Of TInput), consumeToAccept As Boolean) As DataflowMessageStatus Implements ITargetBlock(Of TInput).OfferMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Threading::Tasks::Dataflow::DataflowMessageStatus System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, TInput messageValue, System::Threading::Tasks::Dataflow::ISourceBlock&lt;TInput&gt; ^ source, bool consumeToAccept) = System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt;::OfferMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Dataflow.DataflowMessageStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="messageValue" Type="TInput" />
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TInput&gt;" />
        <Parameter Name="consumeToAccept" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="messageHeader"><span data-ttu-id="0cb6d-176">Eine <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />-Instanz, die die Header der Nachricht darstellt, die bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-176">A <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> instance that represents the header of the message being offered.</span></span></param>
        <param name="messageValue"><span data-ttu-id="0cb6d-177">Der Wert der Nachricht, die bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-177">The value of the message being offered.</span></span></param>
        <param name="source"><span data-ttu-id="0cb6d-178">Die <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />, die die Nachricht anbietet.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-178">The <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> offering the message.</span></span> <span data-ttu-id="0cb6d-179">Dieser Wert kann <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-179">This may be <see langword="null" />.</span></span></param>
        <param name="consumeToAccept"><span data-ttu-id="0cb6d-180"><see langword="true" />, wenn das Ziel während des Aufrufs von <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> und vor dem Zurückgeben von <see cref="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /><see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> synchron aufrufen muss, um die Meldung zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-180"><see langword="true" /> if the target must call <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> synchronously during the call to <see cref="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />, prior to returning <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, in order to consume the message.</span></span></param>
        <summary><span data-ttu-id="0cb6d-181">Bietet eine Meldung für <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> an und gibt dem Ziel die Möglichkeit, die Nachricht zu verarbeiten oder zurückzustellen.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-181">Offers a message to the <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, giving the target the opportunity to consume or postpone the message.</span></span></summary>
        <returns><span data-ttu-id="0cb6d-182">Der Status der angebotenen Meldung.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-182">The status of the offered message.</span></span> <span data-ttu-id="0cb6d-183">Wenn die Meldung vom Ziel akzeptiert wurde, wird <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> zurückgegeben, und die Quelle sollte die angebotene Meldung nicht mehr verwenden, da sie jetzt dem Ziel gehört.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-183">If the message was accepted by the target, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> is returned, and the source should no longer use the offered message, because it is now owned by the target.</span></span> <span data-ttu-id="0cb6d-184">Wenn die Nachricht vom Ziel zurückgestellt wurde, wird <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> als Benachrichtigung zurückgegeben, dass das Ziel später möglicherweise versucht, die Nachricht zu verarbeiten oder zu reservieren. Zwischenzeitlich besitzt die Quelle die Nachricht weiterhin und bietet sie möglicherweise anderen Blöcke an.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-184">If the message was postponed by the target, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> is returned as a notification that the target may later attempt to consume or reserve the message; in the meantime, the source still owns the message and may offer it to other blocks.</span></span>  
  
<span data-ttu-id="0cb6d-185">Wenn das Ziel andernfalls eine Aufschiebung veranlasst hätte, die Quelle jedoch <see langword="null" /> war, wird stattdessen <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-185">If the target would have otherwise postponed but source was <see langword="null" />, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> is instead returned.</span></span>  
  
<span data-ttu-id="0cb6d-186">Wenn das Ziel versucht hat, die Nachricht zu akzeptieren, diese aber verpasst hat, weil die Quelle die die Meldung an ein anderes Ziel übermittelt oder einfach verworfen hat, wird <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /> zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-186">If the target tried to accept the message but missed it due to the source delivering the message to another target or simply discarding it, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /> is returned.</span></span>  
  
<span data-ttu-id="0cb6d-187">Wenn das Ziel beschlossen hat, die Nachricht nicht zu akzeptieren, wird <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-187">If the target chose not to accept the message, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> is returned.</span></span> <span data-ttu-id="0cb6d-188">Wenn das Ziel beschlossen hat, die Meldung nicht zu akzeptieren und niemals eine weitere Meldung von dieser Quelle akzeptieren wird, wird <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /> zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-188">If the target chose not to accept the message and will never accept another message from this source, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /> is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0cb6d-189">Der <paramref name="messageHeader" /> ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-189">The <paramref name="messageHeader" /> is not valid.</span></span>  
  
<span data-ttu-id="0cb6d-190">oder <paramref name="consumeToAccept" /> kann nur TRUE sein, wenn eine <paramref name="source" /> bereitgestellt wird, die nicht NULL ist.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-190">-or- <paramref name="consumeToAccept" /> may only be true if provided with a non-null <paramref name="source" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformBlock`2.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="transformBlock.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0cb6d-191">Gibt eine Zeichenfolge zurück, die den formatierten Namen dieser <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />-Instanz darstellt.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-191">Returns a string that represents the formatted name of this  <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> instance.</span></span></summary>
        <returns><span data-ttu-id="0cb6d-192">Eine Zeichenfolge, die den formatierten Namen dieser <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />-Instanz darstellt.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-192">A string that represents the formatted name of this  <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cb6d-193">Geerbt von <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-193">Inherited from  <xref:System.Object> .</span></span> <span data-ttu-id="0cb6d-194">Verwendet die <xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A>-Option.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-194">Uses the  <xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A> option.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReceive">
      <MemberSignature Language="C#" Value="public bool TryReceive (Predicate&lt;TOutput&gt; filter, out TOutput item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryReceive(class System.Predicate`1&lt;!TOutput&gt; filter, [out] !TOutput&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformBlock`2.TryReceive(System.Predicate{`1},`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReceive (filter As Predicate(Of TOutput), ByRef item As TOutput) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryReceive(Predicate&lt;TOutput&gt; ^ filter, [Runtime::InteropServices::Out] TOutput % item);" />
      <MemberSignature Language="F#" Value="abstract member TryReceive : Predicate&lt;'Output&gt; * 'Output -&gt; bool&#xA;override this.TryReceive : Predicate&lt;'Output&gt; * 'Output -&gt; bool" Usage="transformBlock.TryReceive (filter, item)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1.TryReceive(System.Predicate{`0},`0@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Predicate&lt;TOutput&gt;" />
        <Parameter Name="item" Type="TOutput" RefType="out" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="0cb6d-195">Der Prädikatswert muss erfolgreich übergeben werden, damit er empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-195">The predicate value must successfully pass in order for it to be received.</span></span>  <span data-ttu-id="0cb6d-196"><paramref name="filter" /> ist möglicherweise <see langword="null" />, in diesem Fall werden alle Elemente übergeben.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-196"><paramref name="filter" /> may be <see langword="null" />, in which case all items will pass.</span></span></param>
        <param name="item"><span data-ttu-id="0cb6d-197">Das von der Quelle empfangene Element.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-197">The item received from the source.</span></span></param>
        <summary><span data-ttu-id="0cb6d-198">Versucht, ein verfügbares Output-Element von<see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" /> synchron zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-198">Attempts to synchronously receive an available output item from the <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</span></span></summary>
        <returns><span data-ttu-id="0cb6d-199"><see langword="true" />, wenn ein Element empfangen werden konnte; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-199"><see langword="true" /> if an item could be received; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cb6d-200">Diese Methode blockiert nicht, wenn Sie darauf wartet, dass die Quelle ein Element bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-200">This method does not block waiting for the source to provide an item.</span></span>  
  
 <span data-ttu-id="0cb6d-201">Es wird nach dem Überprüfen auf ein Element zurückgegeben, unabhängig davon, ob ein Element verfügbar war.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-201">It will return after checking for an element, whether or not an element was available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReceiveAll">
      <MemberSignature Language="C#" Value="public bool TryReceiveAll (out System.Collections.Generic.IList&lt;TOutput&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryReceiveAll([out] class System.Collections.Generic.IList`1&lt;!TOutput&gt;&amp; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformBlock`2.TryReceiveAll(System.Collections.Generic.IList{`1}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReceiveAll (ByRef items As IList(Of TOutput)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryReceiveAll([Runtime::InteropServices::Out] System::Collections::Generic::IList&lt;TOutput&gt; ^ % items);" />
      <MemberSignature Language="F#" Value="abstract member TryReceiveAll : IList -&gt; bool&#xA;override this.TryReceiveAll : IList -&gt; bool" Usage="transformBlock.TryReceiveAll items" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0}@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.5.25.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
        <AssemblyVersion>4.6.4.0</AssemblyVersion>
        <AssemblyVersion>4.6.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IList&lt;TOutput&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="items"><span data-ttu-id="0cb6d-202">Die von der Quelle empfangenen Elemente.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-202">The items received from the source.</span></span></param>
        <summary><span data-ttu-id="0cb6d-203">Versucht, alle verfügbaren Elemente aus <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" /> synchron zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-203">Attempts to synchronously receive all available items from the <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</span></span></summary>
        <returns><span data-ttu-id="0cb6d-204"><see langword="true" />, wenn ein oder mehrere Elemente empfangen werden konnten; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-204"><see langword="true" /> if one or more items could be received; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cb6d-205">Diese Methode blockiert nicht, wenn Sie darauf wartet, dass die Quelle ein Element bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-205">This method does not block waiting for the source to provide an item.</span></span>  
  
 <span data-ttu-id="0cb6d-206">Es wird nach der Überprüfung auf Elemente zurückgegeben, unabhängig davon, ob ein Element verfügbar war.</span><span class="sxs-lookup"><span data-stu-id="0cb6d-206">It will return after checking for elements, whether or not an element was available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
