<Type Name="GraphicsPath" FullName="System.Drawing.Drawing2D.GraphicsPath">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f1bace33c740805956b05e523d6ed881bcf8d736" />
    <Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="12/05/2018" />
    <Meta Name="ms.locfileid" Value="52918564" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class GraphicsPath : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GraphicsPath extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.GraphicsPath" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GraphicsPath&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class GraphicsPath sealed : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type GraphicsPath = class&#xA;    inherit MarshalByRefObject&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="36309-101">Stellt eine Reihe verbundener Linien und Kurven dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="36309-101">Represents a series of connected lines and curves.</span>
      </span>
      <span data-ttu-id="36309-102">Diese Klasse kann nicht vererbt werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="36309-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-103">Anwendungen verwenden die Pfade zum Zeichnen von Formen, füllen Sie das Innere der Formen und Ausschneidebereiche zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="36309-103">Applications use paths to draw outlines of shapes, fill the interiors of shapes, and create clipping regions.</span></span> <span data-ttu-id="36309-104">Die Grafik-Engine verwaltet die Koordinaten der geometrischen Formen in einem Pfad im Raum der Welt koordinieren.</span><span class="sxs-lookup"><span data-stu-id="36309-104">The graphics engine maintains the coordinates of geometric shapes in a path in world coordinate space.</span></span>  
  
 <span data-ttu-id="36309-105">Ein Pfad kann einer beliebigen Anzahl von Zahlen (Pfade) bestehen.</span><span class="sxs-lookup"><span data-stu-id="36309-105">A path may be composed of any number of figures (subpaths).</span></span> <span data-ttu-id="36309-106">Jeder Abbildung besteht entweder aus einer Folge von miteinander verbundenen Linien und Kurven oder eine geometrische Form, die primitive aus.</span><span class="sxs-lookup"><span data-stu-id="36309-106">Each figure is either composed of a sequence of connected lines and curves or a geometric shape primitive.</span></span> <span data-ttu-id="36309-107">Der Ausgangspunkt der Abbildung ist der erste Punkt in der Sequenz von miteinander verbundenen Linien und Kurven.</span><span class="sxs-lookup"><span data-stu-id="36309-107">The starting point of a figure is the first point in the sequence of connected lines and curves.</span></span> <span data-ttu-id="36309-108">Der Endpunkt ist der letzte Punkt in der Sequenz.</span><span class="sxs-lookup"><span data-stu-id="36309-108">The ending point is the last point in the sequence.</span></span> <span data-ttu-id="36309-109">Die Anfangs- und Endpunkte einer geometrischen Form, die primitive werden von der primitive-Spezifikation definiert.</span><span class="sxs-lookup"><span data-stu-id="36309-109">The starting and ending points of a geometric shape primitive are defined by the primitive specification.</span></span>  
  
 <span data-ttu-id="36309-110">Eine Abbildung, die besteht aus einer Folge von miteinander verbundenen Linien und Kurven (, deren Anfangs- und Endpunkte zusammenfallenden sein können) ist eine offene Form, es sei denn, es explizit geschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="36309-110">A figure that consists of a sequence of connected lines and curves (whose starting and ending points may be coincident) is an open figure, unless it is closed explicitly.</span></span> <span data-ttu-id="36309-111">Eine Abbildung kann explizit geschlossen werden, mithilfe der <xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A> -Methode, die die aktuelle Figur wird geschlossen, indem Sie den Endpunkt, der den Anfangspunkt, an eine Linie verbunden.</span><span class="sxs-lookup"><span data-stu-id="36309-111">A figure can be closed explicitly, by using the <xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A> method, which closes the current figure by connecting a line from the ending point to the starting point.</span></span> <span data-ttu-id="36309-112">Eine Abbildung, die eine geometrische Form primitiver besteht, ist eine geschlossene Form.</span><span class="sxs-lookup"><span data-stu-id="36309-112">A figure that consists of a geometric shape primitive is a closed figure.</span></span>  
  
 <span data-ttu-id="36309-113">Zum Zweck der ausfüllen und Ausschneiden (z. B., wenn Sie ein Pfad mit gerendert wird <xref:System.Drawing.Graphics.FillPath%2A>), werden alle offenen Zahlen werden durch Hinzufügen einer Zeile aus dem Endpunkt des letzten Zeitpunkts geschlossen.</span><span class="sxs-lookup"><span data-stu-id="36309-113">For purposes of filling and clipping (for example, if a path is rendered using <xref:System.Drawing.Graphics.FillPath%2A>), all open figures are closed by adding a line from the figure's first point to its last point.</span></span>  
  
 <span data-ttu-id="36309-114">Eine neue Figur wird implizit gestartet, wenn ein Pfad erstellt wird, oder wenn eine Figur geschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="36309-114">A new figure is implicitly started when a path is created or when a figure is closed.</span></span> <span data-ttu-id="36309-115">Eine neue Figur wird explizit erstellt, wenn die <xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A> Methode wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="36309-115">A new figure is explicitly created when the <xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A> method is called.</span></span>  
  
 <span data-ttu-id="36309-116">Wenn eine geometrische Form, die primitive zu einem Pfad hinzugefügt wird, fügt eine Abbildung, die die geometrische Form enthält, und auch implizit startet eine neue Figur.</span><span class="sxs-lookup"><span data-stu-id="36309-116">When a geometric shape primitive is added to a path, it adds a figure containing the geometric shape, and also implicitly starts a new figure.</span></span> <span data-ttu-id="36309-117">Daher besteht immer eine aktuelle Figur in einem Pfad.</span><span class="sxs-lookup"><span data-stu-id="36309-117">Consequently, there is always a current figure in a path.</span></span> <span data-ttu-id="36309-118">Wenn Linien und Kurven zu einem Pfad hinzugefügt werden, wird eine implizite Zeile hinzugefügt, nach Bedarf, um den Endpunkt, der die aktuelle Figur mit dem Anfang der neuen Zeilen und bilden Sie eine Sequenz von miteinander verbundenen Linien und Kurven zu verbinden.</span><span class="sxs-lookup"><span data-stu-id="36309-118">When lines and curves are added to a path, an implicit line is added as needed to connect the ending point of the current figure to the starting point of the new lines and curves to form a sequence of connected lines and curves.</span></span>  
  
 <span data-ttu-id="36309-119">Eine Abbildung verfügt über eine Richtung, die beschreibt, wie die Linien- und Segmente zwischen den Ausgangspunkt und den Endpunkt verfolgt werden.</span><span class="sxs-lookup"><span data-stu-id="36309-119">A figure has a direction that describes how line and curve segments are traced between the starting point and the ending point.</span></span> <span data-ttu-id="36309-120">Die Richtung ist definiert, in der Reihenfolge, die Linien und Kurven einer Figur hinzugefügt werden, oder wird durch die geometrische Form, die primitiven definiert.</span><span class="sxs-lookup"><span data-stu-id="36309-120">The direction is defined in the order that lines and curves are added to a figure, or is defined by the geometric shape primitive.</span></span> <span data-ttu-id="36309-121">Die Richtung wird verwendet, bei der Bestimmung der Innenbereiche der Pfad zum Ausschneiden und füllen.</span><span class="sxs-lookup"><span data-stu-id="36309-121">The direction is used in determining the path interiors for clipping and fill.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/f16ec921-56cf-46d1-9741-d7316ad06b23">
      <span data-ttu-id="36309-122">Erstellen und Zeichnen von Pfaden</span>
      <span class="sxs-lookup">
        <span data-stu-id="36309-122">Constructing and Drawing Paths</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36309-123">Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />-Klasse mit einer <see cref="T:System.Drawing.Drawing2D.FillMode" />-Enumeration von <see langword="Alternate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-123">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with a <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration of <see langword="Alternate" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="36309-124">Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />-Klasse mit dem <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" />-Wert <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-124">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with a <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /> value of <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.Drawing2D.FillMode -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath fillMode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="fillMode">
          <span data-ttu-id="36309-125">Die <see cref="T:System.Drawing.Drawing2D.FillMode" />-Enumeration, die bestimmt, wie das Innere dieses <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> ausgefüllt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-125">The <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interior of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> is filled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-126">Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />-Klasse mit der angegebenen <see cref="T:System.Drawing.Drawing2D.FillMode" />-Enumeration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-126">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Point[] pts, byte[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point[] pts, unsigned int8[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pts As Point(), types As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::Point&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.Point[] * byte[] -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
        <Parameter Name="types" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="36309-127">Ein Array von <see cref="T:System.Drawing.Point" />-Strukturen, das die Koordinaten der Punkte definiert, aus denen dieser <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> besteht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-127">An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="36309-128">Ein Array von <see cref="T:System.Drawing.Drawing2D.PathPointType" />-Enumerationselementen, das den Typ für jeden entsprechenden Punkt im <paramref name="pts" />-Array angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-128">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-129">Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />-Klasse mit dem angegebenen <see cref="T:System.Drawing.Drawing2D.PathPointType" />-Array und dem angegebenen <see cref="T:System.Drawing.Point" />-Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-129">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.Point" /> arrays.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.PointF[] pts, byte[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF[] pts, unsigned int8[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pts As PointF(), types As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::PointF&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.PointF[] * byte[] -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
        <Parameter Name="types" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="36309-130">Ein Array von <see cref="T:System.Drawing.PointF" />-Strukturen, das die Koordinaten der Punkte definiert, aus denen dieser <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> besteht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-130">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="36309-131">Ein Array von <see cref="T:System.Drawing.Drawing2D.PathPointType" />-Enumerationselementen, das den Typ für jeden entsprechenden Punkt im <paramref name="pts" />-Array angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-131">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-132">Initialisiert eine neue Instanz des <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />-Arrays mit dem angegebenen <see cref="T:System.Drawing.Drawing2D.PathPointType" />-Array und dem angegebenen <see cref="T:System.Drawing.PointF" />-Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-132">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.PointF" /> arrays.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Point[] pts, byte[] types, System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point[] pts, unsigned int8[] types, valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::Point&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types, System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.Point[] * byte[] * System.Drawing.Drawing2D.FillMode -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types, fillMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
        <Parameter Name="types" Type="System.Byte[]" />
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="36309-133">Ein Array von <see cref="T:System.Drawing.Point" />-Strukturen, das die Koordinaten der Punkte definiert, aus denen dieser <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> besteht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-133">An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="36309-134">Ein Array von <see cref="T:System.Drawing.Drawing2D.PathPointType" />-Enumerationselementen, das den Typ für jeden entsprechenden Punkt im <paramref name="pts" />-Array angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-134">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array.</span>
          </span>
        </param>
        <param name="fillMode">
          <span data-ttu-id="36309-135">Eine <see cref="T:System.Drawing.Drawing2D.FillMode" />-Enumeration, die angibt, wie das Innere der Formen in diesem <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> gefüllt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-135">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-136">Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />-Klasse mit dem angegebenen <see cref="T:System.Drawing.Drawing2D.PathPointType" />-Array, dem angegebenen <see cref="T:System.Drawing.Point" />-Array und dem angegebenen <see cref="T:System.Drawing.Drawing2D.FillMode" />-Enumerationselement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-136">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.Point" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.PointF[] pts, byte[] types, System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF[] pts, unsigned int8[] types, valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::PointF&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types, System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.PointF[] * byte[] * System.Drawing.Drawing2D.FillMode -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types, fillMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
        <Parameter Name="types" Type="System.Byte[]" />
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="36309-137">Ein Array von <see cref="T:System.Drawing.PointF" />-Strukturen, das die Koordinaten der Punkte definiert, aus denen dieser <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> besteht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-137">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="36309-138">Ein Array von <see cref="T:System.Drawing.Drawing2D.PathPointType" />-Enumerationselementen, das den Typ für jeden entsprechenden Punkt im <paramref name="pts" />-Array angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-138">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array.</span>
          </span>
        </param>
        <param name="fillMode">
          <span data-ttu-id="36309-139">Eine <see cref="T:System.Drawing.Drawing2D.FillMode" />-Enumeration, die angibt, wie das Innere der Formen in diesem <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> gefüllt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-139">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-140">Initialisiert eine neue Instanz des <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />-Arrays mit dem angegebenen <see cref="T:System.Drawing.Drawing2D.PathPointType" />-Array, dem angegebenen <see cref="T:System.Drawing.PointF" />-Array und dem angegebenen <see cref="T:System.Drawing.Drawing2D.FillMode" />-Enumerationselement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-140">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.PointF" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddArc">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36309-141">Fügt einen Ellipsenbogen an die aktuelle Figur an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-141">Appends an elliptical arc to the current figure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (rect As Rectangle, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : System.Drawing.Rectangle * single * single -&gt; unit" Usage="graphicsPath.AddArc (rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="36309-142">Ein <see cref="T:System.Drawing.Rectangle" />, das die rechteckigen Grenzen der Ellipse darstellt, aus der der Bogen entnommen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-142">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangular bounds of the ellipse from which the arc is taken.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="36309-143">Der Startwinkel des Bogens in Grad, von der x-Achse im Uhrzeigersinn gemessen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-143">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="36309-144">Der Winkel zwischen <paramref name="startAngle" /> und dem Ende des Bogens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-144">The angle between <paramref name="startAngle" /> and the end of the arc.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-145">Fügt einen Ellipsenbogen an die aktuelle Figur an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-145">Appends an elliptical arc to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-146">Treten vorherigen Linien und Kurven in der Abbildung, wird eine Zeile hinzugefügt, auf um den Endpunkt des vorherigen Segments an den Anfang des Bogens zu verbinden.</span><span class="sxs-lookup"><span data-stu-id="36309-146">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="36309-147">Der Bogen wird entlang des Umfangs der Ellipse, die vom angegebenen Rechteck umschlossen nachverfolgt.</span><span class="sxs-lookup"><span data-stu-id="36309-147">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="36309-148">Der Anfangspunkt des Bogens richtet sich nach der von der x-Achse der Ellipse (auf der 0-Grad-Winkel) durch die Anzahl der in der Startwinkel um Grad im Uhrzeigersinn gemessen werden.</span><span class="sxs-lookup"><span data-stu-id="36309-148">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="36309-149">Der Endpunkt befindet sich auf ähnliche Weise durch vom Ausgangspunkt durch die Anzahl der in der mittelpunktswinkel um Grad im Uhrzeigersinn gemessen.</span><span class="sxs-lookup"><span data-stu-id="36309-149">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="36309-150">Wenn der mittelpunktswinkel 360 Grad oder kleiner als-360 Grad übersteigt, wird der Bogen genau 360 Grad oder-360 Grad überflüssig.</span><span class="sxs-lookup"><span data-stu-id="36309-150">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-151">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="36309-151">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="36309-152">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="36309-152">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="36309-153">Erstellt ein Rechteck, das aus der der Bogen definiert ist.</span><span class="sxs-lookup"><span data-stu-id="36309-153">Creates a rectangle, from which the arc is defined.</span></span>  
  
-   <span data-ttu-id="36309-154">Erstellt den Pfad `myPath`.</span><span class="sxs-lookup"><span data-stu-id="36309-154">Creates a path, `myPath`.</span></span>  
  
-   <span data-ttu-id="36309-155">Definiert eine 180-Grad-Ellipsenbogen, die von 0 Grad fasst zusammen, um 180 Grad und fügt ihn an einen Pfad an.</span><span class="sxs-lookup"><span data-stu-id="36309-155">Defines a 180-degree elliptical arc that sweeps from 0 degrees to 180 degrees and appends it to a path.</span></span>  
  
-   <span data-ttu-id="36309-156">Zeichnet den Pfad zum Bildschirm an.</span><span class="sxs-lookup"><span data-stu-id="36309-156">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (System.Drawing.RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(valuetype System.Drawing.RectangleF rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (rect As RectangleF, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(System::Drawing::RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : System.Drawing.RectangleF * single * single -&gt; unit" Usage="graphicsPath.AddArc (rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="36309-157">Ein <see cref="T:System.Drawing.RectangleF" />, das die rechteckigen Grenzen der Ellipse darstellt, aus der der Bogen entnommen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-157">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangular bounds of the ellipse from which the arc is taken.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="36309-158">Der Startwinkel des Bogens in Grad, von der x-Achse im Uhrzeigersinn gemessen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-158">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="36309-159">Der Winkel zwischen <paramref name="startAngle" /> und dem Ende des Bogens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-159">The angle between <paramref name="startAngle" /> and the end of the arc.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-160">Fügt einen Ellipsenbogen an die aktuelle Figur an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-160">Appends an elliptical arc to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-161">Treten vorherigen Linien und Kurven in der Abbildung, wird eine Zeile hinzugefügt, auf um den Endpunkt des vorherigen Segments an den Anfang des Bogens zu verbinden.</span><span class="sxs-lookup"><span data-stu-id="36309-161">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="36309-162">Der Bogen wird entlang des Umfangs der Ellipse, die vom angegebenen Rechteck umschlossen nachverfolgt.</span><span class="sxs-lookup"><span data-stu-id="36309-162">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="36309-163">Der Anfangspunkt des Bogens richtet sich nach der von der x-Achse der Ellipse (auf der 0-Grad-Winkel) durch die Anzahl der in der Startwinkel um Grad im Uhrzeigersinn gemessen werden.</span><span class="sxs-lookup"><span data-stu-id="36309-163">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="36309-164">Der Endpunkt befindet sich auf ähnliche Weise durch vom Ausgangspunkt durch die Anzahl der in der mittelpunktswinkel um Grad im Uhrzeigersinn gemessen.</span><span class="sxs-lookup"><span data-stu-id="36309-164">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="36309-165">Wenn der mittelpunktswinkel 360 Grad oder kleiner als-360 Grad übersteigt, wird der Bogen genau 360 Grad oder-360 Grad überflüssig.</span><span class="sxs-lookup"><span data-stu-id="36309-165">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-166">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-166">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(int32 x, int32 y, int32 width, int32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (x As Integer, y As Integer, width As Integer, height As Integer, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : int * int * int * int * single * single -&gt; unit" Usage="graphicsPath.AddArc (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="36309-167">Die x-Koordinate der linken oberen Ecke des rechteckigen Bereichs, der die Ellipse definiert, aus der der zu zeichnende Bogen stammt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-167">The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="36309-168">Die y-Koordinate der linken oberen Ecke des rechteckigen Bereichs, der die Ellipse definiert, aus der der zu zeichnende Bogen stammt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-168">The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="36309-169">Die Breite des rechteckigen Bereichs, der die Ellipse definiert, aus der der zu zeichnende Bogen stammt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-169">The width of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="36309-170">Die Höhe des rechteckigen Bereichs, der die Ellipse definiert, aus der der zu zeichnende Bogen stammt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-170">The height of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="36309-171">Der Startwinkel des Bogens in Grad, von der x-Achse im Uhrzeigersinn gemessen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-171">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="36309-172">Der Winkel zwischen <paramref name="startAngle" /> und dem Ende des Bogens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-172">The angle between <paramref name="startAngle" /> and the end of the arc.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-173">Fügt einen Ellipsenbogen an die aktuelle Figur an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-173">Appends an elliptical arc to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-174">Treten vorherigen Linien und Kurven in der Abbildung, wird eine Zeile hinzugefügt, auf um den Endpunkt des vorherigen Segments an den Anfang des Bogens zu verbinden.</span><span class="sxs-lookup"><span data-stu-id="36309-174">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="36309-175">Der Bogen wird entlang des Umfangs der Ellipse, die vom angegebenen Rechteck umschlossen nachverfolgt.</span><span class="sxs-lookup"><span data-stu-id="36309-175">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="36309-176">Der Anfangspunkt des Bogens richtet sich nach der von der x-Achse der Ellipse (auf der 0-Grad-Winkel) durch die Anzahl der in der Startwinkel um Grad im Uhrzeigersinn gemessen werden.</span><span class="sxs-lookup"><span data-stu-id="36309-176">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="36309-177">Der Endpunkt befindet sich auf ähnliche Weise durch vom Ausgangspunkt durch die Anzahl der in der mittelpunktswinkel um Grad im Uhrzeigersinn gemessen.</span><span class="sxs-lookup"><span data-stu-id="36309-177">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="36309-178">Wenn der mittelpunktswinkel 360 Grad oder kleiner als-360 Grad übersteigt, wird der Bogen genau 360 Grad oder-360 Grad überflüssig.</span><span class="sxs-lookup"><span data-stu-id="36309-178">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-179">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-179">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (x As Single, y As Single, width As Single, height As Single, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : single * single * single * single * single * single -&gt; unit" Usage="graphicsPath.AddArc (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="36309-180">Die x-Koordinate der linken oberen Ecke des rechteckigen Bereichs, der die Ellipse definiert, aus der der zu zeichnende Bogen stammt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-180">The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="36309-181">Die y-Koordinate der linken oberen Ecke des rechteckigen Bereichs, der die Ellipse definiert, aus der der zu zeichnende Bogen stammt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-181">The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="36309-182">Die Breite des rechteckigen Bereichs, der die Ellipse definiert, aus der der zu zeichnende Bogen stammt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-182">The width of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="36309-183">Die Höhe des rechteckigen Bereichs, der die Ellipse definiert, aus der der zu zeichnende Bogen stammt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-183">The height of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="36309-184">Der Startwinkel des Bogens in Grad, von der x-Achse im Uhrzeigersinn gemessen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-184">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="36309-185">Der Winkel zwischen <paramref name="startAngle" /> und dem Ende des Bogens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-185">The angle between <paramref name="startAngle" /> and the end of the arc.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-186">Fügt einen Ellipsenbogen an die aktuelle Figur an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-186">Appends an elliptical arc to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-187">Treten vorherigen Linien und Kurven in der Abbildung, wird eine Zeile hinzugefügt, auf um den Endpunkt des vorherigen Segments an den Anfang des Bogens zu verbinden.</span><span class="sxs-lookup"><span data-stu-id="36309-187">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="36309-188">Der Bogen wird entlang des Umfangs der Ellipse, die vom angegebenen Rechteck umschlossen nachverfolgt.</span><span class="sxs-lookup"><span data-stu-id="36309-188">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="36309-189">Der Anfangspunkt des Bogens richtet sich nach der von der x-Achse der Ellipse (auf der 0-Grad-Winkel) durch die Anzahl der in der Startwinkel um Grad im Uhrzeigersinn gemessen werden.</span><span class="sxs-lookup"><span data-stu-id="36309-189">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="36309-190">Der Endpunkt befindet sich auf ähnliche Weise durch vom Ausgangspunkt durch die Anzahl der in der mittelpunktswinkel um Grad im Uhrzeigersinn gemessen.</span><span class="sxs-lookup"><span data-stu-id="36309-190">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="36309-191">Wenn der mittelpunktswinkel 360 Grad oder kleiner als-360 Grad übersteigt, wird der Bogen genau 360 Grad oder-360 Grad überflüssig.</span><span class="sxs-lookup"><span data-stu-id="36309-191">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-192">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-192">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddBezier">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36309-193">Fügt der aktuellen Figur eine kubische Bézierkurve hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-193">Adds a cubic Bézier curve to the current figure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (System.Drawing.Point pt1, System.Drawing.Point pt2, System.Drawing.Point pt3, System.Drawing.Point pt4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(valuetype System.Drawing.Point pt1, valuetype System.Drawing.Point pt2, valuetype System.Drawing.Point pt3, valuetype System.Drawing.Point pt4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (pt1 As Point, pt2 As Point, pt3 As Point, pt4 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(System::Drawing::Point pt1, System::Drawing::Point pt2, System::Drawing::Point pt3, System::Drawing::Point pt4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : System.Drawing.Point * System.Drawing.Point * System.Drawing.Point * System.Drawing.Point -&gt; unit" Usage="graphicsPath.AddBezier (pt1, pt2, pt3, pt4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.Point" />
        <Parameter Name="pt2" Type="System.Drawing.Point" />
        <Parameter Name="pt3" Type="System.Drawing.Point" />
        <Parameter Name="pt4" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt1">
          <span data-ttu-id="36309-194">Ein den Anfangspunkt der Kurve darstellender <see cref="T:System.Drawing.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-194">A <see cref="T:System.Drawing.Point" /> that represents the starting point of the curve.</span>
          </span>
        </param>
        <param name="pt2">
          <span data-ttu-id="36309-195">Ein <see cref="T:System.Drawing.Point" />, der den ersten Kontrollpunkt der Kurve darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-195">A <see cref="T:System.Drawing.Point" /> that represents the first control point for the curve.</span>
          </span>
        </param>
        <param name="pt3">
          <span data-ttu-id="36309-196">Ein <see cref="T:System.Drawing.Point" />, der den zweiten Kontrollpunkt der Kurve darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-196">A <see cref="T:System.Drawing.Point" /> that represents the second control point for the curve.</span>
          </span>
        </param>
        <param name="pt4">
          <span data-ttu-id="36309-197">Ein den Endpunkt der Kurve darstellender <see cref="T:System.Drawing.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-197">A <see cref="T:System.Drawing.Point" /> that represents the endpoint of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-198">Fügt der aktuellen Figur eine kubische Bézierkurve hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-198">Adds a cubic Bézier curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-199">Kubische Kurve wird aus den ersten Punkt bis zum vierten Punkt erstellt, mit der zweite und dritte Punkt als Kontrollpunkte.</span><span class="sxs-lookup"><span data-stu-id="36309-199">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="36309-200">Wenn Sie eine zuvor ausgegebene Zeile oder ein Kurvensegment in der Abbildung vorhanden ist, wird eine Zeile hinzugefügt, zur Verbindung mit des Ausgangspunkt der kubischen Kurve des Endpunkts des vorherigen Segments.</span><span class="sxs-lookup"><span data-stu-id="36309-200">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-201">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-201">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (System.Drawing.PointF pt1, System.Drawing.PointF pt2, System.Drawing.PointF pt3, System.Drawing.PointF pt4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(valuetype System.Drawing.PointF pt1, valuetype System.Drawing.PointF pt2, valuetype System.Drawing.PointF pt3, valuetype System.Drawing.PointF pt4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (pt1 As PointF, pt2 As PointF, pt3 As PointF, pt4 As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(System::Drawing::PointF pt1, System::Drawing::PointF pt2, System::Drawing::PointF pt3, System::Drawing::PointF pt4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : System.Drawing.PointF * System.Drawing.PointF * System.Drawing.PointF * System.Drawing.PointF -&gt; unit" Usage="graphicsPath.AddBezier (pt1, pt2, pt3, pt4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.PointF" />
        <Parameter Name="pt2" Type="System.Drawing.PointF" />
        <Parameter Name="pt3" Type="System.Drawing.PointF" />
        <Parameter Name="pt4" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="pt1">
          <span data-ttu-id="36309-202">Ein den Anfangspunkt der Kurve darstellender <see cref="T:System.Drawing.PointF" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-202">A <see cref="T:System.Drawing.PointF" /> that represents the starting point of the curve.</span>
          </span>
        </param>
        <param name="pt2">
          <span data-ttu-id="36309-203">Ein <see cref="T:System.Drawing.PointF" />, der den ersten Kontrollpunkt der Kurve darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-203">A <see cref="T:System.Drawing.PointF" /> that represents the first control point for the curve.</span>
          </span>
        </param>
        <param name="pt3">
          <span data-ttu-id="36309-204">Ein <see cref="T:System.Drawing.PointF" />, der den zweiten Kontrollpunkt der Kurve darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-204">A <see cref="T:System.Drawing.PointF" /> that represents the second control point for the curve.</span>
          </span>
        </param>
        <param name="pt4">
          <span data-ttu-id="36309-205">Ein den Endpunkt der Kurve darstellender <see cref="T:System.Drawing.PointF" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-205">A <see cref="T:System.Drawing.PointF" /> that represents the endpoint of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-206">Fügt der aktuellen Figur eine kubische Bézierkurve hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-206">Adds a cubic Bézier curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-207">Kubische Kurve wird aus den ersten Punkt bis zum vierten Punkt erstellt, mit der zweite und dritte Punkt als Kontrollpunkte.</span><span class="sxs-lookup"><span data-stu-id="36309-207">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="36309-208">Wenn Sie eine zuvor ausgegebene Zeile oder ein Kurvensegment in der Abbildung vorhanden ist, wird eine Zeile hinzugefügt, zur Verbindung mit des Ausgangspunkt der kubischen Kurve des Endpunkts des vorherigen Segments.</span><span class="sxs-lookup"><span data-stu-id="36309-208">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-209">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-209">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(int32 x1, int32 y1, int32 x2, int32 y2, int32 x3, int32 y3, int32 x4, int32 y4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer, x3 As Integer, y3 As Integer, x4 As Integer, y4 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : int * int * int * int * int * int * int * int -&gt; unit" Usage="graphicsPath.AddBezier (x1, y1, x2, y2, x3, y3, x4, y4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Int32" />
        <Parameter Name="y1" Type="System.Int32" />
        <Parameter Name="x2" Type="System.Int32" />
        <Parameter Name="y2" Type="System.Int32" />
        <Parameter Name="x3" Type="System.Int32" />
        <Parameter Name="y3" Type="System.Int32" />
        <Parameter Name="x4" Type="System.Int32" />
        <Parameter Name="y4" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x1">
          <span data-ttu-id="36309-210">Die x-Koordinate des Anfangspunkts der Kurve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-210">The x-coordinate of the starting point of the curve.</span>
          </span>
        </param>
        <param name="y1">
          <span data-ttu-id="36309-211">Die y-Koordinate des Anfangspunkts der Kurve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-211">The y-coordinate of the starting point of the curve.</span>
          </span>
        </param>
        <param name="x2">
          <span data-ttu-id="36309-212">Die x-Koordinate des ersten Kontrollpunkts der Kurve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-212">The x-coordinate of the first control point for the curve.</span>
          </span>
        </param>
        <param name="y2">
          <span data-ttu-id="36309-213">Die y-Koordinate des ersten Kontrollpunkts der Kurve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-213">The y-coordinate of the first control point for the curve.</span>
          </span>
        </param>
        <param name="x3">
          <span data-ttu-id="36309-214">Die x-Koordinate des zweiten Kontrollpunkts der Kurve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-214">The x-coordinate of the second control point for the curve.</span>
          </span>
        </param>
        <param name="y3">
          <span data-ttu-id="36309-215">Die y-Koordinate des zweiten Kontrollpunkts der Kurve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-215">The y-coordinate of the second control point for the curve.</span>
          </span>
        </param>
        <param name="x4">
          <span data-ttu-id="36309-216">Die x-Koordinate des Endpunkts der Kurve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-216">The x-coordinate of the endpoint of the curve.</span>
          </span>
        </param>
        <param name="y4">
          <span data-ttu-id="36309-217">Die y-Koordinate des Endpunkts der Kurve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-217">The y-coordinate of the endpoint of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-218">Fügt der aktuellen Figur eine kubische Bézierkurve hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-218">Adds a cubic Bézier curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-219">Kubische Kurve wird aus den ersten Punkt bis zum vierten Punkt erstellt, mit der zweite und dritte Punkt als Kontrollpunkte.</span><span class="sxs-lookup"><span data-stu-id="36309-219">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="36309-220">Wenn Sie eine zuvor ausgegebene Zeile oder ein Kurvensegment in der Abbildung vorhanden ist, wird eine Zeile hinzugefügt, zur Verbindung mit des Ausgangspunkt der kubischen Kurve des Endpunkts des vorherigen Segments.</span><span class="sxs-lookup"><span data-stu-id="36309-220">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-221">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="36309-221">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="36309-222">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="36309-222">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="36309-223">Erstellt einen Pfad an.</span><span class="sxs-lookup"><span data-stu-id="36309-223">Creates a path.</span></span>  
  
-   <span data-ttu-id="36309-224">Fügt eine kubische Bézierkurve durch Punkte (50, 50), definiert (70, 0), (100, 120) und (150, 50) in den Pfad.</span><span class="sxs-lookup"><span data-stu-id="36309-224">Adds a cubic Bézier curve defined by the points (50, 50), (70, 0), (100, 120), and (150, 50) to the path.</span></span>  
  
-   <span data-ttu-id="36309-225">Schließt die Kurve.</span><span class="sxs-lookup"><span data-stu-id="36309-225">Closes the curve.</span></span>  
  
-   <span data-ttu-id="36309-226">Zeichnet den Pfad zum Bildschirm an.</span><span class="sxs-lookup"><span data-stu-id="36309-226">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(float32 x1, float32 y1, float32 x2, float32 y2, float32 x3, float32 y3, float32 x4, float32 y4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (x1 As Single, y1 As Single, x2 As Single, y2 As Single, x3 As Single, y3 As Single, x4 As Single, y4 As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : single * single * single * single * single * single * single * single -&gt; unit" Usage="graphicsPath.AddBezier (x1, y1, x2, y2, x3, y3, x4, y4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
        <Parameter Name="x3" Type="System.Single" />
        <Parameter Name="y3" Type="System.Single" />
        <Parameter Name="x4" Type="System.Single" />
        <Parameter Name="y4" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x1">
          <span data-ttu-id="36309-227">Die x-Koordinate des Anfangspunkts der Kurve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-227">The x-coordinate of the starting point of the curve.</span>
          </span>
        </param>
        <param name="y1">
          <span data-ttu-id="36309-228">Die y-Koordinate des Anfangspunkts der Kurve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-228">The y-coordinate of the starting point of the curve.</span>
          </span>
        </param>
        <param name="x2">
          <span data-ttu-id="36309-229">Die x-Koordinate des ersten Kontrollpunkts der Kurve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-229">The x-coordinate of the first control point for the curve.</span>
          </span>
        </param>
        <param name="y2">
          <span data-ttu-id="36309-230">Die y-Koordinate des ersten Kontrollpunkts der Kurve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-230">The y-coordinate of the first control point for the curve.</span>
          </span>
        </param>
        <param name="x3">
          <span data-ttu-id="36309-231">Die x-Koordinate des zweiten Kontrollpunkts der Kurve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-231">The x-coordinate of the second control point for the curve.</span>
          </span>
        </param>
        <param name="y3">
          <span data-ttu-id="36309-232">Die y-Koordinate des zweiten Kontrollpunkts der Kurve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-232">The y-coordinate of the second control point for the curve.</span>
          </span>
        </param>
        <param name="x4">
          <span data-ttu-id="36309-233">Die x-Koordinate des Endpunkts der Kurve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-233">The x-coordinate of the endpoint of the curve.</span>
          </span>
        </param>
        <param name="y4">
          <span data-ttu-id="36309-234">Die y-Koordinate des Endpunkts der Kurve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-234">The y-coordinate of the endpoint of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-235">Fügt der aktuellen Figur eine kubische Bézierkurve hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-235">Adds a cubic Bézier curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-236">Kubische Kurve wird aus den ersten Punkt bis zum vierten Punkt erstellt, mit der zweite und dritte Punkt als Kontrollpunkte.</span><span class="sxs-lookup"><span data-stu-id="36309-236">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="36309-237">Wenn Sie eine zuvor ausgegebene Zeile oder ein Kurvensegment in der Abbildung vorhanden ist, wird eine Zeile hinzugefügt, zur Verbindung mit des Ausgangspunkt der kubischen Kurve des Endpunkts des vorherigen Segments.</span><span class="sxs-lookup"><span data-stu-id="36309-237">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-238">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-238">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddBeziers">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36309-239">Fügt der aktuellen Figur eine Abfolge verbundener kubischer Bézierkurven hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-239">Adds a sequence of connected cubic Bézier curves to the current figure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddBeziers">
      <MemberSignature Language="C#" Value="public void AddBeziers (params System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBeziers(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBeziers (ParamArray points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBeziers(... cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddBeziers : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddBeziers points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="36309-240">Ein Array von <see cref="T:System.Drawing.Point" />-Strukturen, das die Punkte für die Definition der Kurven darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-240">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curves.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-241">Fügt der aktuellen Figur eine Abfolge verbundener kubischer Bézierkurven hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-241">Adds a sequence of connected cubic Bézier curves to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-242">Die `points` Parameter gibt ein Array von Endpunkten und Kontrollpunkten der verbundenen Kurven.</span><span class="sxs-lookup"><span data-stu-id="36309-242">The `points` parameter specifies an array of endpoints and control points of the connected curves.</span></span> <span data-ttu-id="36309-243">Die erste Kurve aus den ersten Punkt erstellt wird, bis zum vierten Punkt in der `points` Array mithilfe der zweite und dritte Punkt als Kontrollpunkte.</span><span class="sxs-lookup"><span data-stu-id="36309-243">The first curve is constructed from the first point to the fourth point in the `points` array by using the second and third points as control points.</span></span> <span data-ttu-id="36309-244">Zusätzlich zum Endpunkt der vorherigen Kurve, benötigt jede nachfolgende Kurve in der Sequenz genau drei weitere Punkte: die folgenden beiden Punkte in der Sequenz sind Kontrollpunkten und die dritte ist der Endpunkt der Kurve hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="36309-244">In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</span></span>  
  
 <span data-ttu-id="36309-245">Wenn vorhanden, vorherige Linien und Kurven in der Abbildung sind, wird eine Zeile hinzugefügt, zur Verbindung mit dem Anfang der ersten kubischen Kurve in der Reihenfolge des Endpunkts des vorherigen Segments.</span><span class="sxs-lookup"><span data-stu-id="36309-245">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-246">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="36309-246">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="36309-247">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="36309-247">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="36309-248">Erstellt ein Array von sieben Punkte (zwei verbundene Bézierkurven darstellt).</span><span class="sxs-lookup"><span data-stu-id="36309-248">Creates an array of seven points (representing two connected Bézier curves).</span></span>  
  
-   <span data-ttu-id="36309-249">Erstellt einen Pfad und den Pfad der Reihe von Bézierkurvenpunkten hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="36309-249">Creates a path and adds the series of Bézier curve points to the path.</span></span>  
  
-   <span data-ttu-id="36309-250">Zeichnet den Pfad zum Bildschirm an.</span><span class="sxs-lookup"><span data-stu-id="36309-250">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBeziers">
      <MemberSignature Language="C#" Value="public void AddBeziers (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBeziers(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBeziers (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBeziers(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddBeziers : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddBeziers points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="36309-251">Ein Array von <see cref="T:System.Drawing.PointF" />-Strukturen, das die Punkte für die Definition der Kurven darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-251">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curves.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-252">Fügt der aktuellen Figur eine Abfolge verbundener kubischer Bézierkurven hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-252">Adds a sequence of connected cubic Bézier curves to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-253">Die `points` Parameter gibt ein Array von Endpunkten und Kontrollpunkten der verbundenen Kurven.</span><span class="sxs-lookup"><span data-stu-id="36309-253">The `points` parameter specifies an array of endpoints and control points of the connected curves.</span></span> <span data-ttu-id="36309-254">Die erste Kurve aus den ersten Punkt erstellt wird, bis zum vierten Punkt in der `points` Array mithilfe der zweite und dritte Punkt als Kontrollpunkte.</span><span class="sxs-lookup"><span data-stu-id="36309-254">The first curve is constructed from the first point to the fourth point in the `points` array by using the second and third points as control points.</span></span> <span data-ttu-id="36309-255">Zusätzlich zum Endpunkt der vorherigen Kurve, benötigt jede nachfolgende Kurve in der Sequenz genau drei weitere Punkte: die folgenden beiden Punkte in der Sequenz sind Kontrollpunkten und die dritte ist der Endpunkt der Kurve hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="36309-255">In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</span></span>  
  
 <span data-ttu-id="36309-256">Wenn vorhanden, vorherige Linien und Kurven in der Abbildung sind, wird eine Zeile hinzugefügt, zur Verbindung mit dem Anfang der ersten kubischen Kurve in der Reihenfolge des Endpunkts des vorherigen Segments.</span><span class="sxs-lookup"><span data-stu-id="36309-256">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-257">Ein Beispiel finden Sie unter:</span><span class="sxs-lookup"><span data-stu-id="36309-257">For an example see:</span></span>  
  
 <xref:System.Drawing.Drawing2D.GraphicsPath.AddBeziers%28System.Drawing.Point%5B%5D%29>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddClosedCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36309-258">Fügt diesem Pfad eine geschlossene Kurve hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-258">Adds a closed curve to this path.</span>
          </span>
          <span data-ttu-id="36309-259">Es wird eine Cardinal-Splinekurve verwendet, weil die Kurve durch jeden der Punkte im Array verläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-259">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddClosedCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="36309-260">Ein Array von <see cref="T:System.Drawing.Point" />-Strukturen, das die Punkte für die Definition der Kurve darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-260">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-261">Fügt diesem Pfad eine geschlossene Kurve hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-261">Adds a closed curve to this path.</span>
          </span>
          <span data-ttu-id="36309-262">Es wird eine Cardinal-Splinekurve verwendet, weil die Kurve durch jeden der Punkte im Array verläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-262">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-263">Benutzer muss die ursprünglichen Punkte beibehalten, wenn sie benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="36309-263">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="36309-264">Die ursprünglichen Punkte werden intern in kubische Bézierpunkte Steuerelement konvertiert, daher gibt es keinen Mechanismus für die ursprünglichen Punkte.</span><span class="sxs-lookup"><span data-stu-id="36309-264">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="36309-265">Wenn der erste und der letzte Punkt in der `points` Array nicht den gleichen Zeitpunkt, die Kurve ist durch Herstellen einer Verbindung dieser beiden Punkte geschlossen.</span><span class="sxs-lookup"><span data-stu-id="36309-265">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span> <span data-ttu-id="36309-266">Die Spannungswert kann nicht festgelegt werden, damit diese Methode, und der Standardwert ist der Wert 0,5.</span><span class="sxs-lookup"><span data-stu-id="36309-266">The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-267">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-267">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddClosedCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="36309-268">Ein Array von <see cref="T:System.Drawing.PointF" />-Strukturen, das die Punkte für die Definition der Kurve darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-268">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-269">Fügt diesem Pfad eine geschlossene Kurve hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-269">Adds a closed curve to this path.</span>
          </span>
          <span data-ttu-id="36309-270">Es wird eine Cardinal-Splinekurve verwendet, weil die Kurve durch jeden der Punkte im Array verläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-270">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-271">Benutzer muss die ursprünglichen Punkte beibehalten, wenn sie benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="36309-271">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="36309-272">Die ursprünglichen Punkte werden intern in kubische Bézierpunkte Steuerelement konvertiert, daher gibt es keinen Mechanismus für die ursprünglichen Punkte.</span><span class="sxs-lookup"><span data-stu-id="36309-272">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="36309-273">Wenn der erste und der letzte Punkt in der `points` Array nicht den gleichen Zeitpunkt, die Kurve ist durch Herstellen einer Verbindung dieser beiden Punkte geschlossen.</span><span class="sxs-lookup"><span data-stu-id="36309-273">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span> <span data-ttu-id="36309-274">Die Spannungswert kann nicht festgelegt werden, damit diese Methode, und der Standardwert ist der Wert 0,5.</span><span class="sxs-lookup"><span data-stu-id="36309-274">The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-275">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-275">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.Point[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.Point[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As Point(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.Point[] * single -&gt; unit" Usage="graphicsPath.AddClosedCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="36309-276">Ein Array von <see cref="T:System.Drawing.Point" />-Strukturen, das die Punkte für die Definition der Kurve darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-276">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="36309-277">Ein Wert zwischen 0 (null) und 1, der die Kurvenkrümmung zwischen den einzelnen Punkten angibt. 0  (null) stellt die kleinste Kurve (stärkste Krümmung) und 1 die am sanftesten gekrümmte Kurve dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-277">A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-278">Fügt diesem Pfad eine geschlossene Kurve hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-278">Adds a closed curve to this path.</span>
          </span>
          <span data-ttu-id="36309-279">Es wird eine Cardinal-Splinekurve verwendet, weil die Kurve durch jeden der Punkte im Array verläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-279">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-280">Benutzer muss die ursprünglichen Punkte beibehalten, wenn sie benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="36309-280">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="36309-281">Die ursprünglichen Punkte werden intern in kubische Bézierpunkte Steuerelement konvertiert, daher gibt es keinen Mechanismus für die ursprünglichen Punkte.</span><span class="sxs-lookup"><span data-stu-id="36309-281">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="36309-282">Wenn der erste und der letzte Punkt in der `points` Array nicht den gleichen Zeitpunkt, die Kurve ist durch Herstellen einer Verbindung dieser beiden Punkte geschlossen.</span><span class="sxs-lookup"><span data-stu-id="36309-282">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-283">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="36309-283">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="36309-284">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="36309-284">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="36309-285">Erstellt ein Array von sechs Punktgruppen (die für eine cardinal-Splinekurve).</span><span class="sxs-lookup"><span data-stu-id="36309-285">Creates an array of six points (representing a cardinal spline).</span></span>  
  
-   <span data-ttu-id="36309-286">Erstellt einen Pfad ein, und fügt die geschlossene cardinal-Splinekurve Kurven in den Pfad (aus dem Endpunkt zum Ausgangspunkt geschlossen).</span><span class="sxs-lookup"><span data-stu-id="36309-286">Creates a path and adds the closed cardinal spline curves to the path (closed from the endpoint to the starting point).</span></span>  
  
-   <span data-ttu-id="36309-287">Zeichnet den Pfad zum Bildschirm an.</span><span class="sxs-lookup"><span data-stu-id="36309-287">Draws the path to screen.</span></span>  
  
 <span data-ttu-id="36309-288">Beachten Sie, dass eine Spannung von 0,5 verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="36309-288">Notice that a tension of 0.5 is used.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.PointF[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.PointF[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As PointF(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.PointF[] * single -&gt; unit" Usage="graphicsPath.AddClosedCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="36309-289">Ein Array von <see cref="T:System.Drawing.PointF" />-Strukturen, das die Punkte für die Definition der Kurve darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-289">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="36309-290">Ein Wert zwischen 0 (null) und 1, der die Kurvenkrümmung zwischen den einzelnen Punkten angibt. 0  (null) stellt die kleinste Kurve (stärkste Krümmung) und 1 die am sanftesten gekrümmte Kurve dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-290">A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-291">Fügt diesem Pfad eine geschlossene Kurve hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-291">Adds a closed curve to this path.</span>
          </span>
          <span data-ttu-id="36309-292">Es wird eine Cardinal-Splinekurve verwendet, weil die Kurve durch jeden der Punkte im Array verläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-292">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-293">Benutzer muss die ursprünglichen Punkte beibehalten, wenn sie benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="36309-293">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="36309-294">Die ursprünglichen Punkte werden intern in kubische Bézierpunkte Steuerelement konvertiert, daher gibt es keinen Mechanismus für die ursprünglichen Punkte.</span><span class="sxs-lookup"><span data-stu-id="36309-294">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="36309-295">Wenn der erste und der letzte Punkt in der `points` Array nicht den gleichen Zeitpunkt, die Kurve ist durch Herstellen einer Verbindung dieser beiden Punkte geschlossen.</span><span class="sxs-lookup"><span data-stu-id="36309-295">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-296">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-296">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36309-297">Fügt der aktuellen Figur eine Splinekurve hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-297">Adds a spline curve to the current figure.</span>
          </span>
          <span data-ttu-id="36309-298">Es wird eine Cardinal-Splinekurve verwendet, weil die Kurve durch jeden der Punkte im Array verläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-298">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="36309-299">Ein Array von <see cref="T:System.Drawing.Point" />-Strukturen, das die Punkte für die Definition der Kurve darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-299">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-300">Fügt der aktuellen Figur eine Splinekurve hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-300">Adds a spline curve to the current figure.</span>
          </span>
          <span data-ttu-id="36309-301">Es wird eine Cardinal-Splinekurve verwendet, weil die Kurve durch jeden der Punkte im Array verläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-301">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-302">Benutzer muss die ursprünglichen Punkte beibehalten, wenn sie benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="36309-302">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="36309-303">Die ursprünglichen Punkte werden intern in kubische Bézierpunkte Steuerelement konvertiert, daher gibt es keinen Mechanismus für die ursprünglichen Punkte.</span><span class="sxs-lookup"><span data-stu-id="36309-303">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-304">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-304">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="36309-305">Ein Array von <see cref="T:System.Drawing.PointF" />-Strukturen, das die Punkte für die Definition der Kurve darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-305">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-306">Fügt der aktuellen Figur eine Splinekurve hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-306">Adds a spline curve to the current figure.</span>
          </span>
          <span data-ttu-id="36309-307">Es wird eine Cardinal-Splinekurve verwendet, weil die Kurve durch jeden der Punkte im Array verläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-307">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-308">Benutzer muss die ursprünglichen Punkte beibehalten, wenn sie benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="36309-308">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="36309-309">Die ursprünglichen Punkte werden intern in kubische Bézierpunkte Steuerelement konvertiert, daher gibt es keinen Mechanismus für die ursprünglichen Punkte.</span><span class="sxs-lookup"><span data-stu-id="36309-309">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-310">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-310">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.Point[] * single -&gt; unit" Usage="graphicsPath.AddCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="36309-311">Ein Array von <see cref="T:System.Drawing.Point" />-Strukturen, das die Punkte für die Definition der Kurve darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-311">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="36309-312">Ein Wert, der die Kurvenkrümmung zwischen Kontrollpunkten angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-312">A value that specifies the amount that the curve bends between control points.</span>
          </span>
          <span data-ttu-id="36309-313">Werte, die größer als 1 sind, führen zu unvorhersehbaren Ergebnissen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-313">Values greater than 1 produce unpredictable results.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-314">Fügt der aktuellen Figur eine Splinekurve hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-314">Adds a spline curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-315">Benutzer muss die ursprünglichen Punkte beibehalten, wenn sie benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="36309-315">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="36309-316">Die ursprünglichen Punkte werden intern in kubische Bézierpunkte Steuerelement konvertiert, daher gibt es keinen Mechanismus für die ursprünglichen Punkte.</span><span class="sxs-lookup"><span data-stu-id="36309-316">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-317">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-317">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.PointF[] * single -&gt; unit" Usage="graphicsPath.AddCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="36309-318">Ein Array von <see cref="T:System.Drawing.PointF" />-Strukturen, das die Punkte für die Definition der Kurve darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-318">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="36309-319">Ein Wert, der die Kurvenkrümmung zwischen Kontrollpunkten angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-319">A value that specifies the amount that the curve bends between control points.</span>
          </span>
          <span data-ttu-id="36309-320">Werte, die größer als 1 sind, führen zu unvorhersehbaren Ergebnissen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-320">Values greater than 1 produce unpredictable results.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-321">Fügt der aktuellen Figur eine Splinekurve hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-321">Adds a spline curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-322">Benutzer muss die ursprünglichen Punkte beibehalten, wenn sie benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="36309-322">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="36309-323">Die ursprünglichen Punkte werden intern in kubische Bézierpunkte Steuerelement konvertiert, daher gibt es keinen Mechanismus für die ursprünglichen Punkte.</span><span class="sxs-lookup"><span data-stu-id="36309-323">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-324">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-324">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points, int32 offset, int32 numberOfSegments, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point(), offset As Integer, numberOfSegments As Integer, tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.Point[] * int * int * single -&gt; unit" Usage="graphicsPath.AddCurve (points, offset, numberOfSegments, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="36309-325">Ein Array von <see cref="T:System.Drawing.Point" />-Strukturen, das die Punkte für die Definition der Kurve darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-325">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="36309-326">Der Index des Elements im <paramref name="points" />-Array, das als erster Punkt der Kurve verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-326">The index of the element in the <paramref name="points" /> array that is used as the first point in the curve.</span>
          </span>
        </param>
        <param name="numberOfSegments">
          <span data-ttu-id="36309-327">Ein Wert, der die Kurvenkrümmung zwischen Kontrollpunkten angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-327">A value that specifies the amount that the curve bends between control points.</span>
          </span>
          <span data-ttu-id="36309-328">Werte, die größer als 1 sind, führen zu unvorhersehbaren Ergebnissen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-328">Values greater than 1 produce unpredictable results.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="36309-329">Ein Wert, der die Kurvenkrümmung zwischen Kontrollpunkten angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-329">A value that specifies the amount that the curve bends between control points.</span>
          </span>
          <span data-ttu-id="36309-330">Werte, die größer als 1 sind, führen zu unvorhersehbaren Ergebnissen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-330">Values greater than 1 produce unpredictable results.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-331">Fügt der aktuellen Figur eine Splinekurve hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-331">Adds a spline curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-332">Benutzer muss die ursprünglichen Punkte beibehalten, wenn sie benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="36309-332">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="36309-333">Die ursprünglichen Punkte werden intern in kubische Bézierpunkte Steuerelement konvertiert, daher gibt es keinen Mechanismus für die ursprünglichen Punkte.</span><span class="sxs-lookup"><span data-stu-id="36309-333">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="36309-334">Die Kurve beginnt, an dem Punkt im Array anhand der `offset` Parameter sowie die Anzahl der Punkte (Segmente) gemäß `numberOfSegments`.</span><span class="sxs-lookup"><span data-stu-id="36309-334">The curve begins at the point in the array specified by the `offset` parameter and includes the number of points (segments) specified by `numberOfSegments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-335">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="36309-335">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="36309-336">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="36309-336">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="36309-337">Erstellt ein Array von vier Punktgruppen (die für eine cardinal-Splinekurve).</span><span class="sxs-lookup"><span data-stu-id="36309-337">Creates an array of four points (representing a cardinal spline).</span></span>  
  
-   <span data-ttu-id="36309-338">Erstellt einen Pfad ein, und verwenden das Array von Punkten an, den Pfad die Kurve hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="36309-338">Creates a path and using the array of points, adds the curve to the path.</span></span>  
  
-   <span data-ttu-id="36309-339">Zeichnet den Pfad auf dem Bildschirm an.</span><span class="sxs-lookup"><span data-stu-id="36309-339">Draws the path to the screen.</span></span>  
  
 <span data-ttu-id="36309-340">Beachten Sie, dass zwar das Array vier Punkte enthält, gibt es nur drei Segmente sind, d.h. der Zahl in das dritte Argument für den Aufruf <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A>.</span><span class="sxs-lookup"><span data-stu-id="36309-340">Notice that while the array holds four points, there are only three segments, which is the number specified in the third argument of the call to <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A>.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points, int32 offset, int32 numberOfSegments, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF(), offset As Integer, numberOfSegments As Integer, tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.PointF[] * int * int * single -&gt; unit" Usage="graphicsPath.AddCurve (points, offset, numberOfSegments, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="36309-341">Ein Array von <see cref="T:System.Drawing.PointF" />-Strukturen, das die Punkte für die Definition der Kurve darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-341">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="36309-342">Der Index des Elements im <paramref name="points" />-Array, das als erster Punkt der Kurve verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-342">The index of the element in the <paramref name="points" /> array that is used as the first point in the curve.</span>
          </span>
        </param>
        <param name="numberOfSegments">
          <span data-ttu-id="36309-343">Die zum Zeichnen der Kurve verwendete Anzahl von Segmenten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-343">The number of segments used to draw the curve.</span>
          </span>
          <span data-ttu-id="36309-344">Ein Segment kann als Linie aufgefasst werden, die zwei Punkte verbindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-344">A segment can be thought of as a line connecting two points.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="36309-345">Ein Wert, der die Kurvenkrümmung zwischen Kontrollpunkten angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-345">A value that specifies the amount that the curve bends between control points.</span>
          </span>
          <span data-ttu-id="36309-346">Werte, die größer als 1 sind, führen zu unvorhersehbaren Ergebnissen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-346">Values greater than 1 produce unpredictable results.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-347">Fügt der aktuellen Figur eine Splinekurve hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-347">Adds a spline curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-348">Benutzer muss die ursprünglichen Punkte beibehalten, wenn sie benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="36309-348">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="36309-349">Die ursprünglichen Punkte werden intern in kubische Bézierpunkte Steuerelement konvertiert, daher gibt es keinen Mechanismus für die ursprünglichen Punkte.</span><span class="sxs-lookup"><span data-stu-id="36309-349">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="36309-350">Die Kurve beginnt, an dem Punkt im Array vom angegebenen `offset`, sowie die Anzahl der Punkte (Segmente) gemäß `numberOfSegments`.</span><span class="sxs-lookup"><span data-stu-id="36309-350">The curve begins at the point in the array specified by `offset`, and includes the number of points (segments) specified by `numberOfSegments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-351">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-351">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddEllipse">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36309-352">Fügt dem aktuellen Pfad eine Ellipse hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-352">Adds an ellipse to the current path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : System.Drawing.Rectangle -&gt; unit" Usage="graphicsPath.AddEllipse rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="36309-353">Ein <see cref="T:System.Drawing.Rectangle" />, das das die Ellipse definierende umschließende Rechteck darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-353">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-354">Fügt dem aktuellen Pfad eine Ellipse hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-354">Adds an ellipse to the current path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36309-355">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="36309-355">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="36309-356">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="36309-356">The code performs the following actions:</span></span>  
  
 <span data-ttu-id="36309-357">Erstellt ein umschließendes Rechteck, das eine Ellipse definiert.</span><span class="sxs-lookup"><span data-stu-id="36309-357">Creates a bounding rectangle that defines an ellipse.</span></span>  
  
 <span data-ttu-id="36309-358">Erstellt einen Pfad und den Pfad die Ellipse hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="36309-358">Creates a path and adds the ellipse to the path.</span></span>  
  
 <span data-ttu-id="36309-359">Zeichnet den Pfad zum Bildschirm an.</span><span class="sxs-lookup"><span data-stu-id="36309-359">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : System.Drawing.RectangleF -&gt; unit" Usage="graphicsPath.AddEllipse rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="36309-360">Ein <see cref="T:System.Drawing.RectangleF" />, das das die Ellipse definierende umschließende Rechteck darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-360">A <see cref="T:System.Drawing.RectangleF" /> that represents the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-361">Fügt dem aktuellen Pfad eine Ellipse hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-361">Adds an ellipse to the current path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36309-362">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-362">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (x As Integer, y As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : int * int * int * int -&gt; unit" Usage="graphicsPath.AddEllipse (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="36309-363">Die x-Koordinate der oberen linken Ecke des umschließenden Rechtecks, das die Ellipse definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-363">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="36309-364">Die y-Koordinate der oberen linken Ecke des umschließenden Rechtecks, das die Ellipse definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-364">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="36309-365">Die Breite des umschließenden Rechtecks, das die Ellipse definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-365">The width of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="36309-366">Die Höhe des umschließenden Rechtecks, das die Ellipse definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-366">The height of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-367">Fügt dem aktuellen Pfad eine Ellipse hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-367">Adds an ellipse to the current path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36309-368">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-368">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (x As Single, y As Single, width As Single, height As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(float x, float y, float width, float height);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : single * single * single * single -&gt; unit" Usage="graphicsPath.AddEllipse (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="36309-369">Die x-Koordinate der oberen linken Ecke des umschließenden Rechtecks, das die Ellipse definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-369">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="36309-370">Die y-Koordinate der oberen linken Ecke des umschließenden Rechtecks, das die Ellipse definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-370">The y-coordinate of the upper left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="36309-371">Die Breite des umschließenden Rechtecks, das die Ellipse definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-371">The width of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="36309-372">Die Höhe des umschließenden Rechtecks, das die Ellipse definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-372">The height of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-373">Fügt dem aktuellen Pfad eine Ellipse hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-373">Adds an ellipse to the current path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36309-374">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-374">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddLine">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36309-375">Fügt ein Liniensegment an diesen <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-375">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (System.Drawing.Point pt1, System.Drawing.Point pt2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(valuetype System.Drawing.Point pt1, valuetype System.Drawing.Point pt2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (pt1 As Point, pt2 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(System::Drawing::Point pt1, System::Drawing::Point pt2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : System.Drawing.Point * System.Drawing.Point -&gt; unit" Usage="graphicsPath.AddLine (pt1, pt2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.Point" />
        <Parameter Name="pt2" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt1">
          <span data-ttu-id="36309-376">Ein den Anfangspunkt der Linie darstellender <see cref="T:System.Drawing.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-376">A <see cref="T:System.Drawing.Point" /> that represents the starting point of the line.</span>
          </span>
        </param>
        <param name="pt2">
          <span data-ttu-id="36309-377">Ein den Endpunkt der Linie darstellender <see cref="T:System.Drawing.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-377">A <see cref="T:System.Drawing.Point" /> that represents the endpoint of the line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-378">Fügt ein Liniensegment an diesen <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-378">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-379">Diese Methode fügt hinzu, durch die angegebenen Punkte am Ende dieses definierte Liniensegment <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="36309-379">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="36309-380">Treten vorherigen Linien und Kurven in der <xref:System.Drawing.Drawing2D.GraphicsPath>, ein Liniensegment wird angezeigt, um den letzten Punkt im Pfad zu den ersten Punkt in der neuen Liniensegment verbindet.</span><span class="sxs-lookup"><span data-stu-id="36309-380">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-381">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-381">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (System.Drawing.PointF pt1, System.Drawing.PointF pt2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(valuetype System.Drawing.PointF pt1, valuetype System.Drawing.PointF pt2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (pt1 As PointF, pt2 As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(System::Drawing::PointF pt1, System::Drawing::PointF pt2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : System.Drawing.PointF * System.Drawing.PointF -&gt; unit" Usage="graphicsPath.AddLine (pt1, pt2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.PointF" />
        <Parameter Name="pt2" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="pt1">
          <span data-ttu-id="36309-382">Ein den Anfangspunkt der Linie darstellender <see cref="T:System.Drawing.PointF" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-382">A <see cref="T:System.Drawing.PointF" /> that represents the starting point of the line.</span>
          </span>
        </param>
        <param name="pt2">
          <span data-ttu-id="36309-383">Ein den Endpunkt der Linie darstellender <see cref="T:System.Drawing.PointF" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-383">A <see cref="T:System.Drawing.PointF" /> that represents the endpoint of the line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-384">Fügt ein Liniensegment an diesen <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-384">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-385">Diese Methode fügt hinzu, durch die angegebenen Punkte am Ende dieses definierte Liniensegment <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="36309-385">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="36309-386">Treten vorherigen Linien und Kurven in der <xref:System.Drawing.Drawing2D.GraphicsPath>, ein Liniensegment wird angezeigt, um den letzten Punkt im Pfad zu den ersten Punkt in der neuen Liniensegment verbindet.</span><span class="sxs-lookup"><span data-stu-id="36309-386">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-387">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-387">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (int x1, int y1, int x2, int y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(int32 x1, int32 y1, int32 x2, int32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(int x1, int y1, int x2, int y2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : int * int * int * int -&gt; unit" Usage="graphicsPath.AddLine (x1, y1, x2, y2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Int32" />
        <Parameter Name="y1" Type="System.Int32" />
        <Parameter Name="x2" Type="System.Int32" />
        <Parameter Name="y2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x1">
          <span data-ttu-id="36309-388">Die x-Koordinate des Anfangspunkts der Linie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-388">The x-coordinate of the starting point of the line.</span>
          </span>
        </param>
        <param name="y1">
          <span data-ttu-id="36309-389">Die y-Koordinate des Anfangspunkts der Linie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-389">The y-coordinate of the starting point of the line.</span>
          </span>
        </param>
        <param name="x2">
          <span data-ttu-id="36309-390">Die x-Koordinate des Endpunkts der Linie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-390">The x-coordinate of the endpoint of the line.</span>
          </span>
        </param>
        <param name="y2">
          <span data-ttu-id="36309-391">Die y-Koordinate des Endpunkts der Linie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-391">The y-coordinate of the endpoint of the line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-392">Fügt ein Liniensegment an die aktuelle Figur an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-392">Appends a line segment to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-393">Diese Methode fügt die durch die angegebenen Punkte am Ende des die aktuelle Figur definierte Liniensegment.</span><span class="sxs-lookup"><span data-stu-id="36309-393">This method adds the line segment defined by the specified points to the end of the current figure.</span></span> <span data-ttu-id="36309-394">Treten vorherigen Linien und Kurven in der <xref:System.Drawing.Drawing2D.GraphicsPath>, ein Liniensegment wird angezeigt, um den letzten Punkt im Pfad zu den ersten Punkt in der neuen Liniensegment verbindet.</span><span class="sxs-lookup"><span data-stu-id="36309-394">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-395">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="36309-395">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="36309-396">Der Code erstellt einen Pfad, fügt drei Zeilen, die ein Dreieck bilden hinzu, und klicken Sie dann den Pfad auf dem Bildschirm zeichnet.</span><span class="sxs-lookup"><span data-stu-id="36309-396">The code creates a path, adds three lines that form a triangle, and then draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(float32 x1, float32 y1, float32 x2, float32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (x1 As Single, y1 As Single, x2 As Single, y2 As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : single * single * single * single -&gt; unit" Usage="graphicsPath.AddLine (x1, y1, x2, y2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x1">
          <span data-ttu-id="36309-397">Die x-Koordinate des Anfangspunkts der Linie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-397">The x-coordinate of the starting point of the line.</span>
          </span>
        </param>
        <param name="y1">
          <span data-ttu-id="36309-398">Die y-Koordinate des Anfangspunkts der Linie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-398">The y-coordinate of the starting point of the line.</span>
          </span>
        </param>
        <param name="x2">
          <span data-ttu-id="36309-399">Die x-Koordinate des Endpunkts der Linie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-399">The x-coordinate of the endpoint of the line.</span>
          </span>
        </param>
        <param name="y2">
          <span data-ttu-id="36309-400">Die y-Koordinate des Endpunkts der Linie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-400">The y-coordinate of the endpoint of the line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-401">Fügt ein Liniensegment an diesen <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-401">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-402">Diese Methode fügt hinzu, durch die angegebenen Punkte am Ende dieses definierte Liniensegment <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="36309-402">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="36309-403">Treten vorherigen Linien und Kurven in der <xref:System.Drawing.Drawing2D.GraphicsPath>, ein Liniensegment wird angezeigt, um den letzten Punkt im Pfad zu den ersten Punkt in der neuen Liniensegment verbindet.</span><span class="sxs-lookup"><span data-stu-id="36309-403">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-404">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-404">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddLines">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36309-405">Fügt eine Abfolge verbundener Liniensegmente an das Ende dieses <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-405">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddLines">
      <MemberSignature Language="C#" Value="public void AddLines (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLines(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLines (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLines(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddLines : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddLines points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="36309-406">Ein Array von <see cref="T:System.Drawing.Point" />-Strukturen, das die Punkte für die Definition der hinzuzufügenden Liniensegmente darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-406">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the line segments to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-407">Fügt eine Abfolge verbundener Liniensegmente an das Ende dieses <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-407">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-408">Treten vorherigen Linien und Kurven in der Abbildung, wird eine Zeile hinzugefügt, die Verbindung den Endpunkt des vorherigen Segments der Ausgangspunkt der Zeile.</span><span class="sxs-lookup"><span data-stu-id="36309-408">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</span></span> <span data-ttu-id="36309-409">Die `points` Parameter gibt ein Array von Endpunkten.</span><span class="sxs-lookup"><span data-stu-id="36309-409">The `points` parameter specifies an array of endpoints.</span></span> <span data-ttu-id="36309-410">Die ersten beiden Geben Sie die erste Zeile.</span><span class="sxs-lookup"><span data-stu-id="36309-410">The first two specify the first line.</span></span> <span data-ttu-id="36309-411">Jede zusätzlicher Punkt angibt, den Endpunkt eines Liniensegments, dessen Startpunkt der Endpunkt der vorherigen Zeile ist.</span><span class="sxs-lookup"><span data-stu-id="36309-411">Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-412">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="36309-412">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="36309-413">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="36309-413">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="36309-414">Erstellt ein Array von vier Punkte, die ein Dreieck zu beschreiben.</span><span class="sxs-lookup"><span data-stu-id="36309-414">Creates an array of four points that describe a triangle.</span></span>  
  
-   <span data-ttu-id="36309-415">Erstellt einen Pfad ein, und fügt das Array von Zeilen.</span><span class="sxs-lookup"><span data-stu-id="36309-415">Creates a path and adds the array of lines.</span></span>  
  
-   <span data-ttu-id="36309-416">Zeichnet den Pfad zum Bildschirm an.</span><span class="sxs-lookup"><span data-stu-id="36309-416">Draws the path to screen.</span></span>  
  
 <span data-ttu-id="36309-417">Beachten Sie, dass jede Zeile nach dem ersten Punkt der früheren Zeitpunkt als den Ausgangspunkt und den neuen Punkt als Endpunkt verwendet.</span><span class="sxs-lookup"><span data-stu-id="36309-417">Notice that each line after the first point uses the previous point as the starting point and the new point as the endpoint.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLines">
      <MemberSignature Language="C#" Value="public void AddLines (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLines(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLines (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLines(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddLines : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddLines points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="36309-418">Ein Array von <see cref="T:System.Drawing.PointF" />-Strukturen, das die Punkte für die Definition der hinzuzufügenden Liniensegmente darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-418">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the line segments to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-419">Fügt eine Abfolge verbundener Liniensegmente an das Ende dieses <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-419">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-420">Treten vorherigen Linien und Kurven in der Abbildung, wird eine Zeile hinzugefügt, die Verbindung den Endpunkt des vorherigen Segments der Ausgangspunkt der Zeile.</span><span class="sxs-lookup"><span data-stu-id="36309-420">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</span></span> <span data-ttu-id="36309-421">Die `points` Parameter gibt ein Array von Endpunkten.</span><span class="sxs-lookup"><span data-stu-id="36309-421">The `points` parameter specifies an array of endpoints.</span></span> <span data-ttu-id="36309-422">Die ersten beiden Geben Sie die erste Zeile.</span><span class="sxs-lookup"><span data-stu-id="36309-422">The first two specify the first line.</span></span> <span data-ttu-id="36309-423">Jede zusätzlicher Punkt angibt, den Endpunkt eines Liniensegments, dessen Startpunkt der Endpunkt der vorherigen Zeile ist.</span><span class="sxs-lookup"><span data-stu-id="36309-423">Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-424">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-424">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPath">
      <MemberSignature Language="C#" Value="public void AddPath (System.Drawing.Drawing2D.GraphicsPath addingPath, bool connect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPath(class System.Drawing.Drawing2D.GraphicsPath addingPath, bool connect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPath (addingPath As GraphicsPath, connect As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPath(System::Drawing::Drawing2D::GraphicsPath ^ addingPath, bool connect);" />
      <MemberSignature Language="F#" Value="member this.AddPath : System.Drawing.Drawing2D.GraphicsPath * bool -&gt; unit" Usage="graphicsPath.AddPath (addingPath, connect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addingPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="connect" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="addingPath">
          <span data-ttu-id="36309-425">Das hinzuzufügende <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-425">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to add.</span>
          </span>
        </param>
        <param name="connect">
          <span data-ttu-id="36309-426">Ein boolescher Wert, der angibt, ob die erste Figur im hinzugefügten Pfad Teil der letzten Figur in diesem Pfad ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-426">A Boolean value that specifies whether the first figure in the added path is part of the last figure in this path.</span>
          </span>
          <span data-ttu-id="36309-427">Der Wert <see langword="true" /> gibt an, dass die erste Figur im hinzugefügten Pfad Teil der letzten Figur in diesem Pfad ist, sofern möglich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-427">A value of <see langword="true" /> specifies that (if possible) the first figure in the added path is part of the last figure in this path.</span>
          </span>
          <span data-ttu-id="36309-428">Der Wert <see langword="false" /> gibt an, dass die erste Figur im hinzugefügten Pfad von der letzten Figur in diesem Pfad getrennt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-428">A value of <see langword="false" /> specifies that the first figure in the added path is separate from the last figure in this path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-429">Fügt den angegebenen <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> an diesen Pfad an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-429">Appends the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36309-430">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="36309-430">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="36309-431">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="36309-431">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="36309-432">Erstellt zwei Pfade ein, ein Dreieck rechts-nach oben und der andere ein Dreieck Seite nach oben.</span><span class="sxs-lookup"><span data-stu-id="36309-432">Creates two paths one a right-side-up triangle and the other an up-side-down triangle.</span></span>  
  
-   <span data-ttu-id="36309-433">Das erste hinzugefügt der zweiten Pfad.</span><span class="sxs-lookup"><span data-stu-id="36309-433">Adds the second path to the first.</span></span>  
  
-   <span data-ttu-id="36309-434">Zeichnet den resultierenden Pfad auf dem Bildschirm an.</span><span class="sxs-lookup"><span data-stu-id="36309-434">Draws the resultant path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPie">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36309-435">Fügt diesem Pfad den Umriss einer Kreisform hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-435">Adds the outline of a pie shape to this path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (rect As Rectangle, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddPie : System.Drawing.Rectangle * single * single -&gt; unit" Usage="graphicsPath.AddPie (rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="36309-436">Ein <see cref="T:System.Drawing.Rectangle" />, das das umschließende Rechteck darstellt, das die Ellipse definiert, aus der der Kreis gezeichnet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-436">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="36309-437">Der Startwinkel des Kreisausschnitts in Grad, von der x-Achse aus im Uhrzeigersinn gemessen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-437">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="36309-438">Der Winkel in Grad zwischen <paramref name="startAngle" /> und dem Ende des Kreisausschnitts, ausgehend von <paramref name="startAngle" /> im Uhrzeigersinn gemessen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-438">The angle between <paramref name="startAngle" /> and the end of the pie section, measured in degrees clockwise from <paramref name="startAngle" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-439">Fügt diesem Pfad den Umriss einer Kreisform hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-439">Adds the outline of a pie shape to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-440">Kreisform wird definiert, durch einen partiellen Umriss einer Ellipse und die zwei Radien, die die Endpunkte der Kontur. teilweise überschneiden.</span><span class="sxs-lookup"><span data-stu-id="36309-440">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="36309-441">Die partielle Gliederung beginnt bei `startAngle` (im Uhrzeigersinn von der x-Achse aus gemessen) und endet bei `startAngle`  +  `sweepAngle`.</span><span class="sxs-lookup"><span data-stu-id="36309-441">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-442">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-442">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(int32 x, int32 y, int32 width, int32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (x As Integer, y As Integer, width As Integer, height As Integer, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddPie : int * int * int * int * single * single -&gt; unit" Usage="graphicsPath.AddPie (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="36309-443">Die x-Koordinate der oberen linken Ecke des umschließenden Rechtecks, das die Ellipse definiert, aus der der Kreis gezeichnet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-443">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="36309-444">Die y-Koordinate der oberen linken Ecke des umschließenden Rechtecks, das die Ellipse definiert, aus der der Kreis gezeichnet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-444">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="36309-445">Die Breite des umschließenden Rechtecks, das die Ellipse definiert, aus der der Kreis gezeichnet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-445">The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="36309-446">Die Höhe des umschließenden Rechtecks, das die Ellipse definiert, aus der der Kreis gezeichnet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-446">The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="36309-447">Der Startwinkel des Kreisausschnitts in Grad, von der x-Achse aus im Uhrzeigersinn gemessen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-447">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="36309-448">Der Winkel in Grad zwischen <paramref name="startAngle" /> und dem Ende des Kreisausschnitts, ausgehend von <paramref name="startAngle" /> im Uhrzeigersinn gemessen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-448">The angle between <paramref name="startAngle" /> and the end of the pie section, measured in degrees clockwise from <paramref name="startAngle" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-449">Fügt diesem Pfad den Umriss einer Kreisform hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-449">Adds the outline of a pie shape to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-450">Kreisform wird definiert, durch einen partiellen Umriss einer Ellipse und die zwei Radien, die die Endpunkte der Kontur. teilweise überschneiden.</span><span class="sxs-lookup"><span data-stu-id="36309-450">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="36309-451">Die partielle Gliederung beginnt bei `startAngle` (im Uhrzeigersinn von der x-Achse aus gemessen) und endet bei `startAngle`  +  `sweepAngle`.</span><span class="sxs-lookup"><span data-stu-id="36309-451">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-452">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="36309-452">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="36309-453">Der Code erstellt einen Grafikpfad, fügt die Kreisform hinzu und klicken Sie dann den Pfad auf dem Bildschirm zeichnet.</span><span class="sxs-lookup"><span data-stu-id="36309-453">The code creates a graphics path, adds the pie shape, and then draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#10)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#10)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (x As Single, y As Single, width As Single, height As Single, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddPie : single * single * single * single * single * single -&gt; unit" Usage="graphicsPath.AddPie (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="36309-454">Die x-Koordinate der oberen linken Ecke des umschließenden Rechtecks, das die Ellipse definiert, aus der der Kreis gezeichnet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-454">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="36309-455">Die y-Koordinate der oberen linken Ecke des umschließenden Rechtecks, das die Ellipse definiert, aus der der Kreis gezeichnet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-455">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="36309-456">Die Breite des umschließenden Rechtecks, das die Ellipse definiert, aus der der Kreis gezeichnet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-456">The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="36309-457">Die Höhe des umschließenden Rechtecks, das die Ellipse definiert, aus der der Kreis gezeichnet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-457">The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="36309-458">Der Startwinkel des Kreisausschnitts in Grad, von der x-Achse aus im Uhrzeigersinn gemessen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-458">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="36309-459">Der Winkel in Grad zwischen <paramref name="startAngle" /> und dem Ende des Kreisausschnitts, ausgehend von <paramref name="startAngle" /> im Uhrzeigersinn gemessen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-459">The angle between <paramref name="startAngle" /> and the end of the pie section, measured in degrees clockwise from <paramref name="startAngle" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-460">Fügt diesem Pfad den Umriss einer Kreisform hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-460">Adds the outline of a pie shape to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-461">Kreisform wird definiert, durch einen partiellen Umriss einer Ellipse und die zwei Radien, die die Endpunkte der Kontur. teilweise überschneiden.</span><span class="sxs-lookup"><span data-stu-id="36309-461">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="36309-462">Die partielle Gliederung beginnt bei `startAngle` (im Uhrzeigersinn von der x-Achse aus gemessen) und endet bei `startAngle`  +  `sweepAngle`.</span><span class="sxs-lookup"><span data-stu-id="36309-462">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-463">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-463">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPolygon">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36309-464">Fügt diesem Pfad ein Vieleck hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-464">Adds a polygon to this path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPolygon">
      <MemberSignature Language="C#" Value="public void AddPolygon (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPolygon(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPolygon (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPolygon(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddPolygon : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddPolygon points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="36309-465">Ein Array von <see cref="T:System.Drawing.Point" />-Strukturen, das das hinzuzufügende Vieleck definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-465">An array of <see cref="T:System.Drawing.Point" /> structures that defines the polygon to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-466">Fügt diesem Pfad ein Vieleck hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-466">Adds a polygon to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-467">Die Punkte in der `points` Array anzugeben, die Scheitelpunkte eines Polygons.</span><span class="sxs-lookup"><span data-stu-id="36309-467">The points in the `points` array specify the vertices of a polygon.</span></span> <span data-ttu-id="36309-468">Wenn der erste Punkt im Array nicht der letzte Punkt identisch ist, verbunden sind diese beiden Punkte um des Polygons zu schließen.</span><span class="sxs-lookup"><span data-stu-id="36309-468">If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-469">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="36309-469">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="36309-470">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="36309-470">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="36309-471">Erstellt ein Array von Punkten, die ein Polygon definiert.</span><span class="sxs-lookup"><span data-stu-id="36309-471">Creates an array of points that defines a polygon.</span></span>  
  
-   <span data-ttu-id="36309-472">Erstellt einen Pfad und den Pfad des Polygons hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="36309-472">Creates a path and adds the polygon to the path.</span></span>  
  
-   <span data-ttu-id="36309-473">Zeichnet den Pfad auf dem Bildschirm an.</span><span class="sxs-lookup"><span data-stu-id="36309-473">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#11)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#11)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPolygon">
      <MemberSignature Language="C#" Value="public void AddPolygon (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPolygon(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPolygon (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPolygon(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddPolygon : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddPolygon points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="36309-474">Ein Array von <see cref="T:System.Drawing.PointF" />-Strukturen, das das hinzuzufügende Vieleck definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-474">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the polygon to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-475">Fügt diesem Pfad ein Vieleck hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-475">Adds a polygon to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-476">Die Punkte in der `points` Array anzugeben, die Scheitelpunkte eines Polygons.</span><span class="sxs-lookup"><span data-stu-id="36309-476">The points in the `points` array specify the vertices of a polygon.</span></span> <span data-ttu-id="36309-477">Wenn der erste Punkt im Array nicht der letzte Punkt identisch ist, verbunden sind diese beiden Punkte um des Polygons zu schließen.</span><span class="sxs-lookup"><span data-stu-id="36309-477">If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-478">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-478">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRectangle">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36309-479">Fügt diesem Pfad ein Rechteck hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-479">Adds a rectangle to this path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRectangle">
      <MemberSignature Language="C#" Value="public void AddRectangle (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangle(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangle (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangle(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.AddRectangle : System.Drawing.Rectangle -&gt; unit" Usage="graphicsPath.AddRectangle rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="36309-480">Ein <see cref="T:System.Drawing.Rectangle" />, das das hinzuzufügende Rechteck darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-480">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-481">Fügt diesem Pfad ein Rechteck hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-481">Adds a rectangle to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36309-482">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="36309-482">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="36309-483">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="36309-483">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="36309-484">Erstellt einen Pfad an.</span><span class="sxs-lookup"><span data-stu-id="36309-484">Creates a path.</span></span>  
  
-   <span data-ttu-id="36309-485">Erstellt ein Rechteck und den Pfad der Rechteck hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="36309-485">Creates a rectangle and adds the rectangle to the path.</span></span>  
  
-   <span data-ttu-id="36309-486">Zeichnet den Pfad auf dem Bildschirm an.</span><span class="sxs-lookup"><span data-stu-id="36309-486">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#12)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#12)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRectangle">
      <MemberSignature Language="C#" Value="public void AddRectangle (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangle(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangle (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangle(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.AddRectangle : System.Drawing.RectangleF -&gt; unit" Usage="graphicsPath.AddRectangle rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="36309-487">Ein <see cref="T:System.Drawing.RectangleF" />, das das hinzuzufügende Rechteck darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-487">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-488">Fügt diesem Pfad ein Rechteck hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-488">Adds a rectangle to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36309-489">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-489">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRectangles">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36309-490">Fügt diesem Pfad ein Reihe von Rechtecken hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-490">Adds a series of rectangles to this path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRectangles">
      <MemberSignature Language="C#" Value="public void AddRectangles (System.Drawing.Rectangle[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangles(valuetype System.Drawing.Rectangle[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangles (rects As Rectangle())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangles(cli::array &lt;System::Drawing::Rectangle&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.AddRectangles : System.Drawing.Rectangle[] -&gt; unit" Usage="graphicsPath.AddRectangles rects" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rects" Type="System.Drawing.Rectangle[]" />
      </Parameters>
      <Docs>
        <param name="rects">
          <span data-ttu-id="36309-491">Ein Array von <see cref="T:System.Drawing.Rectangle" />-Strukturen, das die hinzuzufügenden Rechtecke darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-491">An array of <see cref="T:System.Drawing.Rectangle" /> structures that represents the rectangles to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-492">Fügt diesem Pfad ein Reihe von Rechtecken hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-492">Adds a series of rectangles to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36309-493">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="36309-493">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="36309-494">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="36309-494">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="36309-495">Erstellt einen Pfad an.</span><span class="sxs-lookup"><span data-stu-id="36309-495">Creates a path.</span></span>  
  
-   <span data-ttu-id="36309-496">Erstellt ein Array von Rechtecken und fügt diese dem Pfad.</span><span class="sxs-lookup"><span data-stu-id="36309-496">Creates an array of rectangles and adds the rectangles to the path.</span></span>  
  
-   <span data-ttu-id="36309-497">Zeichnet den Pfad auf dem Bildschirm an.</span><span class="sxs-lookup"><span data-stu-id="36309-497">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#13)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#13)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRectangles">
      <MemberSignature Language="C#" Value="public void AddRectangles (System.Drawing.RectangleF[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangles(valuetype System.Drawing.RectangleF[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangles (rects As RectangleF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangles(cli::array &lt;System::Drawing::RectangleF&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.AddRectangles : System.Drawing.RectangleF[] -&gt; unit" Usage="graphicsPath.AddRectangles rects" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rects" Type="System.Drawing.RectangleF[]" />
      </Parameters>
      <Docs>
        <param name="rects">
          <span data-ttu-id="36309-498">Ein Array von <see cref="T:System.Drawing.RectangleF" />-Strukturen, das die hinzuzufügenden Rechtecke darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-498">An array of <see cref="T:System.Drawing.RectangleF" /> structures that represents the rectangles to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-499">Fügt diesem Pfad ein Reihe von Rechtecken hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-499">Adds a series of rectangles to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36309-500">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-500">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddString">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36309-501">Fügt diesem Pfad eine Textzeichenfolge hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-501">Adds a text string to this path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.Point origin, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.Point origin, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, origin As Point, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::Point origin, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.Point * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, origin, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="origin" Type="System.Drawing.Point" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="36309-502">Das hinzuzufügende <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-502">The <see cref="T:System.String" /> to add.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="36309-503">Eine <see cref="T:System.Drawing.FontFamily" />, die den Namen der Schriftart darstellt, in der der Test gezeichnet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-503">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="36309-504">Eine <see cref="T:System.Drawing.FontStyle" />-Enumeration, die Textformatierungsinformationen (fett, kursiv usw.) darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-504">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span>
          </span>
          <span data-ttu-id="36309-505">Diese muss in eine ganze Zahl umgewandelt werden (siehe den Beispielcode weiter unten in diesem Abschnitt).</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-505">This must be cast as an integer (see the example code later in this section).</span>
          </span>
        </param>
        <param name="emSize">
          <span data-ttu-id="36309-506">Die Höhe des Geviertkästchens, das das Zeichen umschließt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-506">The height of the em square box that bounds the character.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="36309-507">Ein den Anfangspunkt des Texts darstellender <see cref="T:System.Drawing.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-507">A <see cref="T:System.Drawing.Point" /> that represents the point where the text starts.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="36309-508">Ein <see cref="T:System.Drawing.StringFormat" />, das Textformatierungsinformationen angibt, z. B. Zeilenabstand und Ausrichtung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-508">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-509">Fügt diesem Pfad eine Textzeichenfolge hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-509">Adds a text string to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36309-510">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="36309-510">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="36309-511">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="36309-511">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="36309-512">Erstellt einen Pfad an.</span><span class="sxs-lookup"><span data-stu-id="36309-512">Creates a path.</span></span>  
  
-   <span data-ttu-id="36309-513">Richtet Zeichenfolgen- und Schriftart Argumente ein.</span><span class="sxs-lookup"><span data-stu-id="36309-513">Sets up string and font arguments.</span></span>  
  
-   <span data-ttu-id="36309-514">Fügt die Zeichenfolge in den Pfad an.</span><span class="sxs-lookup"><span data-stu-id="36309-514">Adds the string to the path.</span></span>  
  
-   <span data-ttu-id="36309-515">Zeichnet die Zeichenfolge auf dem Bildschirm an.</span><span class="sxs-lookup"><span data-stu-id="36309-515">Draws the string to the screen.</span></span>  
  
 <span data-ttu-id="36309-516">Es gibt zwei wichtige Punkte zu berücksichtigen. Beachten Sie, dass zuerst die `fontStyle` Argument wird als ganze Zahl umgewandelt.</span><span class="sxs-lookup"><span data-stu-id="36309-516">There are two important things to be pointed out. First, notice that the `fontStyle` argument is cast as an integer.</span></span> <span data-ttu-id="36309-517">Die <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A> -Methode erforderlich, sodass zwei oder mehr <xref:System.Drawing.FontStyle> Member können kombiniert werden, um den gewünschten Schriftschnitt erstellen (in diesem Fall <xref:System.Drawing.FontStyle.Italic> und <xref:System.Drawing.FontStyle.Underline>).</span><span class="sxs-lookup"><span data-stu-id="36309-517">The <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A> method requires this so that two or more <xref:System.Drawing.FontStyle> members can be combined to create the desired font style (in this case, <xref:System.Drawing.FontStyle.Italic> and <xref:System.Drawing.FontStyle.Underline>).</span></span> <span data-ttu-id="36309-518">Zweitens, beachten Sie, dass die <xref:System.Drawing.Graphics.FillPath%2A> Methode wird verwendet, anstatt die <xref:System.Drawing.Graphics.DrawPath%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="36309-518">Secondly, notice that the <xref:System.Drawing.Graphics.FillPath%2A> method is used rather than the <xref:System.Drawing.Graphics.DrawPath%2A> method.</span></span> <span data-ttu-id="36309-519">Wenn <xref:System.Drawing.Graphics.FillPath%2A> verwendet wird, wird dargestellt, wenn <xref:System.Drawing.Graphics.DrawPath%2A> wird verwendet, wird der Text Umrisse werden.</span><span class="sxs-lookup"><span data-stu-id="36309-519">If <xref:System.Drawing.Graphics.FillPath%2A> is used, solid text is rendered, whereas if <xref:System.Drawing.Graphics.DrawPath%2A> is used, the text will be an outline style.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#14)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#14)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.PointF origin, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.PointF origin, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, origin As PointF, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::PointF origin, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.PointF * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, origin, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="origin" Type="System.Drawing.PointF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="36309-520">Das hinzuzufügende <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-520">The <see cref="T:System.String" /> to add.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="36309-521">Eine <see cref="T:System.Drawing.FontFamily" />, die den Namen der Schriftart darstellt, in der der Test gezeichnet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-521">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="36309-522">Eine <see cref="T:System.Drawing.FontStyle" />-Enumeration, die Textformatierungsinformationen (fett, kursiv usw.) darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-522">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span>
          </span>
          <span data-ttu-id="36309-523">Diese muss in eine ganze Zahl umgewandelt werden (siehe den Beispielcode weiter unten in diesem Abschnitt).</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-523">This must be cast as an integer (see the example code later in this section).</span>
          </span>
        </param>
        <param name="emSize">
          <span data-ttu-id="36309-524">Die Höhe des Geviertkästchens, das das Zeichen umschließt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-524">The height of the em square box that bounds the character.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="36309-525">Ein den Anfangspunkt des Texts darstellender <see cref="T:System.Drawing.PointF" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-525">A <see cref="T:System.Drawing.PointF" /> that represents the point where the text starts.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="36309-526">Ein <see cref="T:System.Drawing.StringFormat" />, das Textformatierungsinformationen angibt, z. B. Zeilenabstand und Ausrichtung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-526">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-527">Fügt diesem Pfad eine Textzeichenfolge hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-527">Adds a text string to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36309-528">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-528">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.Rectangle layoutRect, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.Rectangle layoutRect, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, layoutRect As Rectangle, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::Rectangle layoutRect, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.Rectangle * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, layoutRect, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="layoutRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="36309-529">Das hinzuzufügende <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-529">The <see cref="T:System.String" /> to add.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="36309-530">Eine <see cref="T:System.Drawing.FontFamily" />, die den Namen der Schriftart darstellt, in der der Test gezeichnet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-530">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="36309-531">Eine <see cref="T:System.Drawing.FontStyle" />-Enumeration, die Textformatierungsinformationen (fett, kursiv usw.) darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-531">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span>
          </span>
          <span data-ttu-id="36309-532">Diese muss in eine ganze Zahl umgewandelt werden (siehe den Beispielcode weiter unten in diesem Abschnitt).</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-532">This must be cast as an integer (see the example code later in this section).</span>
          </span>
        </param>
        <param name="emSize">
          <span data-ttu-id="36309-533">Die Höhe des Geviertkästchens, das das Zeichen umschließt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-533">The height of the em square box that bounds the character.</span>
          </span>
        </param>
        <param name="layoutRect">
          <span data-ttu-id="36309-534">Ein <see cref="T:System.Drawing.Rectangle" />, das das den Text umschließende Rechteck darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-534">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the text.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="36309-535">Ein <see cref="T:System.Drawing.StringFormat" />, das Textformatierungsinformationen angibt, z. B. Zeilenabstand und Ausrichtung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-535">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-536">Fügt diesem Pfad eine Textzeichenfolge hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-536">Adds a text string to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36309-537">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-537">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.RectangleF layoutRect, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.RectangleF layoutRect, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, layoutRect As RectangleF, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::RectangleF layoutRect, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.RectangleF * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, layoutRect, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="layoutRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="36309-538">Das hinzuzufügende <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-538">The <see cref="T:System.String" /> to add.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="36309-539">Eine <see cref="T:System.Drawing.FontFamily" />, die den Namen der Schriftart darstellt, in der der Test gezeichnet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-539">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="36309-540">Eine <see cref="T:System.Drawing.FontStyle" />-Enumeration, die Textformatierungsinformationen (fett, kursiv usw.) darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-540">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span>
          </span>
          <span data-ttu-id="36309-541">Diese muss in eine ganze Zahl umgewandelt werden (siehe den Beispielcode weiter unten in diesem Abschnitt).</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-541">This must be cast as an integer (see the example code later in this section).</span>
          </span>
        </param>
        <param name="emSize">
          <span data-ttu-id="36309-542">Die Höhe des Geviertkästchens, das das Zeichen umschließt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-542">The height of the em square box that bounds the character.</span>
          </span>
        </param>
        <param name="layoutRect">
          <span data-ttu-id="36309-543">Ein <see cref="T:System.Drawing.RectangleF" />, das das den Text umschließende Rechteck darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-543">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the text.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="36309-544">Ein <see cref="T:System.Drawing.StringFormat" />, das Textformatierungsinformationen angibt, z. B. Zeilenabstand und Ausrichtung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-544">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-545">Fügt diesem Pfad eine Textzeichenfolge hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-545">Adds a text string to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36309-546">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-546">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearMarkers">
      <MemberSignature Language="C#" Value="public void ClearMarkers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearMarkers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearMarkers ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearMarkers();" />
      <MemberSignature Language="F#" Value="member this.ClearMarkers : unit -&gt; unit" Usage="graphicsPath.ClearMarkers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="36309-547">Löscht alle Marker aus diesem Pfad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-547">Clears all markers from this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-548">Verwenden der <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> Methode, um eine Markierung zu erstellen, an der aktuellen Position in einem <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="36309-548">Use the <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> method to create a marker at the current location in a <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="36309-549">Verwenden der <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> Methode, um die vorhandenen Marker in einem Pfad durchlaufen.</span><span class="sxs-lookup"><span data-stu-id="36309-549">Use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> method to iterate through the existing markers in a path.</span></span>  
  
 <span data-ttu-id="36309-550">Marker werden verwendet, um Gruppen von Pfade zu trennen.</span><span class="sxs-lookup"><span data-stu-id="36309-550">Markers are used to separate groups of subpaths.</span></span> <span data-ttu-id="36309-551">Eine oder mehrere untergeordnete Pfade können zwischen zwei markern enthalten sein.</span><span class="sxs-lookup"><span data-stu-id="36309-551">One or more subpaths can be contained between two markers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-552">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="36309-552">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="36309-553">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="36309-553">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="36309-554">Erstellt einen Pfad an.</span><span class="sxs-lookup"><span data-stu-id="36309-554">Creates a path.</span></span>  
  
-   <span data-ttu-id="36309-555">Fügt mehrere Objekte auf den Pfad an.</span><span class="sxs-lookup"><span data-stu-id="36309-555">Adds several objects to the path.</span></span>  
  
-   <span data-ttu-id="36309-556">Fügt diesem Marker hinzu.</span><span class="sxs-lookup"><span data-stu-id="36309-556">Adds markers to the path.</span></span>  
  
-   <span data-ttu-id="36309-557">Löscht alle Marker aus dem Pfad.</span><span class="sxs-lookup"><span data-stu-id="36309-557">Clears all markers from the path.</span></span>  
  
-   <span data-ttu-id="36309-558">Zeichnet den Pfad auf dem Bildschirm an.</span><span class="sxs-lookup"><span data-stu-id="36309-558">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#15)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#15)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="graphicsPath.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="36309-559">Erstellt eine genaue Kopie von diesem Pfad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-559">Creates an exact copy of this path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36309-560">Das von dieser Methode erstellte <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, umgewandelt in ein Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-560">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> this method creates, cast as an object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36309-561">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="36309-561">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="36309-562">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="36309-562">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="36309-563">Erstellt einen Pfad an.</span><span class="sxs-lookup"><span data-stu-id="36309-563">Creates a path.</span></span>  
  
-   <span data-ttu-id="36309-564">Fügt mehrere Figuren auf den Pfad an.</span><span class="sxs-lookup"><span data-stu-id="36309-564">Adds several figures to the path.</span></span>  
  
-   <span data-ttu-id="36309-565">Zeichnet den Pfad auf dem Bildschirm an.</span><span class="sxs-lookup"><span data-stu-id="36309-565">Draws the path to the screen.</span></span>  
  
-   <span data-ttu-id="36309-566">Erstellt einen Klon des Pfades.</span><span class="sxs-lookup"><span data-stu-id="36309-566">Clones a copy of that path.</span></span>  
  
-   <span data-ttu-id="36309-567">Zeichnet den neuen Pfad auf dem Bildschirm an.</span><span class="sxs-lookup"><span data-stu-id="36309-567">Draws the new path to the screen.</span></span>  
  
 <span data-ttu-id="36309-568">Beachten Sie, dass der Aufruf der <xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A> Methode umgewandelt werden muss, als eine <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="36309-568">Notice that the call the <xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A> method must be cast as a <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#16)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#16)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAllFigures">
      <MemberSignature Language="C#" Value="public void CloseAllFigures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseAllFigures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseAllFigures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseAllFigures();" />
      <MemberSignature Language="F#" Value="member this.CloseAllFigures : unit -&gt; unit" Usage="graphicsPath.CloseAllFigures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="36309-569">Schließt alle geöffneten Figuren in diesem Pfad und beginnt eine neue Figur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-569">Closes all open figures in this path and starts a new figure.</span>
          </span>
          <span data-ttu-id="36309-570">Jede geöffnete Figur wird geschlossen, indem ihr End- und Anfangspunkt durch eine Linie verbunden werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-570">It closes each open figure by connecting a line from its endpoint to its starting point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36309-571">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="36309-571">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="36309-572">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="36309-572">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="36309-573">Erstellt einen Pfad an.</span><span class="sxs-lookup"><span data-stu-id="36309-573">Creates a path.</span></span>  
  
-   <span data-ttu-id="36309-574">Fügt mehrere offene Figuren auf den Pfad an.</span><span class="sxs-lookup"><span data-stu-id="36309-574">Adds several open figures to the path.</span></span>  
  
-   <span data-ttu-id="36309-575">Schließt alle Zahlen in den Pfad an.</span><span class="sxs-lookup"><span data-stu-id="36309-575">Closes all figures in the path.</span></span>  
  
-   <span data-ttu-id="36309-576">Zeichnet den Pfad auf dem Bildschirm an.</span><span class="sxs-lookup"><span data-stu-id="36309-576">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#17)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#17)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseFigure">
      <MemberSignature Language="C#" Value="public void CloseFigure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseFigure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseFigure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseFigure();" />
      <MemberSignature Language="F#" Value="member this.CloseFigure : unit -&gt; unit" Usage="graphicsPath.CloseFigure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="36309-577">Schließt die aktuelle Figur und beginnt eine neue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-577">Closes the current figure and starts a new figure.</span>
          </span>
          <span data-ttu-id="36309-578">Wenn die aktuelle Figur eine Abfolge verbundener Linien und Kurven enthält, schließt die Methode die Schleife, indem End- und Anfangspunkt durch eine Linie verbunden werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-578">If the current figure contains a sequence of connected lines and curves, the method closes the loop by connecting a line from the endpoint to the starting point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36309-579">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="36309-579">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="36309-580">Der Code erstellt ein Dreieck, indem Sie beim Erstellen eines neuen Pfads, starten eine Abbildung, in der Abbildung werden zwei sich überschneidenden Zeilen hinzugefügt und dann zum Bilden eines Dreiecks geschlossen.</span><span class="sxs-lookup"><span data-stu-id="36309-580">The code creates a triangle by creating a new path, starting a figure, adding two intersecting lines to the figure, and then closing the figure to form a triangle.</span></span> <span data-ttu-id="36309-581">Der Pfad wird auf dem Bildschirm gezeichnet.</span><span class="sxs-lookup"><span data-stu-id="36309-581">The path is then drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#18)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#18)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="graphicsPath.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="36309-582">Gibt alle von dieser <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> verwendeten Ressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-582">Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-583">Aufrufen von <xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A> können die von diesem verwendeten Ressourcen <xref:System.Drawing.Drawing2D.GraphicsPath> , für andere Zwecke verschoben werden.</span><span class="sxs-lookup"><span data-stu-id="36309-583">Calling <xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A> allows the resources used by this <xref:System.Drawing.Drawing2D.GraphicsPath> to be reallocated for other purposes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.FillMode FillMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.FillMode FillMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" />
      <MemberSignature Language="VB.NET" Value="Public Property FillMode As FillMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::FillMode FillMode { System::Drawing::Drawing2D::FillMode get(); void set(System::Drawing::Drawing2D::FillMode value); };" />
      <MemberSignature Language="F#" Value="member this.FillMode : System.Drawing.Drawing2D.FillMode with get, set" Usage="System.Drawing.Drawing2D.GraphicsPath.FillMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.FillMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="36309-584">Ruft eine <see cref="T:System.Drawing.Drawing2D.FillMode" />-Enumeration ab, die bestimmt, wie das Innere der Formen in diesem <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> gefüllt wird, oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-584">Gets or sets a <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="36309-585">Eine <see cref="T:System.Drawing.Drawing2D.FillMode" />-Enumeration, die angibt, wie das Innere der Formen in diesem <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> gefüllt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-585">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~GraphicsPath ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!GraphicsPath ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="graphicsPath.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="36309-586">Gibt einem Objekt Gelegenheit zu dem Versuch, Ressourcen freizugeben und andere Bereinigungen durchzuführen, bevor es von der Garbage Collection freigegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-586">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Flatten">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36309-587">Konvertiert jede Kurve in diesem Pfad in eine Abfolge verbundener Liniensegmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-587">Converts each curve in this path into a sequence of connected line segments.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flatten ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten();" />
      <MemberSignature Language="F#" Value="member this.Flatten : unit -&gt; unit" Usage="graphicsPath.Flatten " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="36309-588">Konvertiert jede Kurve in diesem Pfad in eine Abfolge verbundener Liniensegmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-588">Converts each curve in this path into a sequence of connected line segments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36309-589">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-589">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Flatten : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Flatten matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="36309-590">Eine <see cref="T:System.Drawing.Drawing2D.Matrix" />, mit der dieser <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> vor dem Abflachen transformiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-590">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-591">Wendet die angegebene Transformation an und konvertiert dann jede Kurve in diesem <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> in eine Abfolge verbundener Liniensegmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-591">Applies the specified transform and then converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into a sequence of connected line segments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36309-592">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-592">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten (System.Drawing.Drawing2D.Matrix matrix, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten(class System.Drawing.Drawing2D.Matrix matrix, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten(System::Drawing::Drawing2D::Matrix ^ matrix, float flatness);" />
      <MemberSignature Language="F#" Value="member this.Flatten : System.Drawing.Drawing2D.Matrix * single -&gt; unit" Usage="graphicsPath.Flatten (matrix, flatness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="36309-593">Eine <see cref="T:System.Drawing.Drawing2D.Matrix" />, mit der dieser <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> vor dem Abflachen transformiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-593">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening.</span>
          </span>
        </param>
        <param name="flatness">
          <span data-ttu-id="36309-594">Gibt die höchstzulässige Abweichung zwischen der Kurve und ihrer abgeflachten Näherungskurve an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-594">Specifies the maximum permitted error between the curve and its flattened approximation.</span>
          </span>
          <span data-ttu-id="36309-595">Der Standardwert ist 0,25.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-595">A value of 0.25 is the default.</span>
          </span>
          <span data-ttu-id="36309-596">Wenn der Abflachungswert verringert wird, erhöht sich die Anzahl der Liniensegmente in der Näherungskurve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-596">Reducing the flatness value will increase the number of line segments in the approximation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-597">Konvertiert jede Kurve in diesem <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> in eine Abfolge verbundener Liniensegmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-597">Converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into a sequence of connected line segments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36309-598">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="36309-598">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="36309-599">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="36309-599">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="36309-600">Erstellt einen Grafikpfad und eine translationsmatrix.</span><span class="sxs-lookup"><span data-stu-id="36309-600">Creates a graphics path and a translation matrix.</span></span>  
  
-   <span data-ttu-id="36309-601">Eine Kurve hinzugefügt in den Pfad, der mithilfe von vier Punkte.</span><span class="sxs-lookup"><span data-stu-id="36309-601">Adds a curve to the path using four points.</span></span>  
  
-   <span data-ttu-id="36309-602">Zeichnet den Pfad (Kurve) auf dem Bildschirm mit einem schwarzen Stift.</span><span class="sxs-lookup"><span data-stu-id="36309-602">Draws the path (curve) to the screen, using a black pen.</span></span>  
  
-   <span data-ttu-id="36309-603">Verschiebt die Kurve nach unten um 10 Pixel und fasst sie zusammen.</span><span class="sxs-lookup"><span data-stu-id="36309-603">Shifts the curve down 10 pixels and flattens it.</span></span>  
  
-   <span data-ttu-id="36309-604">Zeichnet die Kurve auf dem Bildschirm mit einem roten Stift.</span><span class="sxs-lookup"><span data-stu-id="36309-604">Draws the curve to the screen using, a red pen.</span></span>  
  
 <span data-ttu-id="36309-605">Beachten Sie, dass die roten Linie Verbindungslinien zwischen die Punkten vereinfacht wurde.</span><span class="sxs-lookup"><span data-stu-id="36309-605">Notice that the red curve has flattened lines connecting the points.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#19)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#19)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBounds">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36309-606">Gibt ein Rechteck zurück, das diesen <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> umschließt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-606">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds () As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds();" />
      <MemberSignature Language="F#" Value="member this.GetBounds : unit -&gt; System.Drawing.RectangleF" Usage="graphicsPath.GetBounds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="36309-607">Gibt ein Rechteck zurück, das diesen <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> umschließt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-607">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36309-608">Ein <see cref="T:System.Drawing.RectangleF" />, das ein diesen <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> umschließendes Rechteck darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-608">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-609">Die Größe des zurückgegebenen umschließenden Rechtecks wird durch den Typ der enden, Stiftbreite und Stift-Gehrungsgrenze beeinflusst, und daher erzeugt eine "lose anpassen" in den gebundenen Pfad.</span><span class="sxs-lookup"><span data-stu-id="36309-609">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="36309-610">Die ungefähre Formel lautet: das anfängliche umgebende Rechteck von Stiftbreite vergrößert wird, und dieses Ergebnis wird multipliziert die Gehrungsgrenze sowie einige zusätzliche Rand Linienenden zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="36309-610">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-611">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="36309-611">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="36309-612">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="36309-612">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="36309-613">Erstellt einen Grafikpfad an.</span><span class="sxs-lookup"><span data-stu-id="36309-613">Creates a graphics path.</span></span>  
  
-   <span data-ttu-id="36309-614">Eine Ellipse (Kreis) hinzugefügt, und klicken Sie auf dem Bildschirm gezeichnet.</span><span class="sxs-lookup"><span data-stu-id="36309-614">Adds an ellipse (circle) to it and draws it to the screen.</span></span>  
  
-   <span data-ttu-id="36309-615">Ruft das umschließende Rechteck für den Kreis mit einem Aufruf von <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A> und zeichnet es auf dem Bildschirm.</span><span class="sxs-lookup"><span data-stu-id="36309-615">Retrieves the bounding rectangle for the circle with a call to <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A> and draws the rectangle to the screen.</span></span>  
  
-   <span data-ttu-id="36309-616">Erstellt einen zweite Grafikpfad.</span><span class="sxs-lookup"><span data-stu-id="36309-616">Creates a second graphics path.</span></span>  
  
-   <span data-ttu-id="36309-617">Fügt einen Kreis hinzu, und den Pfad zu einer Breite von 10 erweitert.</span><span class="sxs-lookup"><span data-stu-id="36309-617">Adds a circle and widens the path to a width of 10.</span></span>  
  
-   <span data-ttu-id="36309-618">Zeichnet den Pfad auf dem Bildschirm an.</span><span class="sxs-lookup"><span data-stu-id="36309-618">Draws the path to the screen.</span></span>  
  
-   <span data-ttu-id="36309-619">Ruft das umschließende Rechteck für den zweiten Kreis ab.</span><span class="sxs-lookup"><span data-stu-id="36309-619">Retrieves the bounding rectangle for the second circle.</span></span>  
  
-   <span data-ttu-id="36309-620">Zeichnet das umschließende Rechteck auf dem Bildschirm an.</span><span class="sxs-lookup"><span data-stu-id="36309-620">Draws the bounding rectangle to the screen.</span></span>  
  
-   <span data-ttu-id="36309-621">Zeigt die Größe des Rechtecks in einem Dialogfeld an.</span><span class="sxs-lookup"><span data-stu-id="36309-621">Displays the rectangle size in a dialog box.</span></span>  
  
 <span data-ttu-id="36309-622">Beachten Sie, dass das umschließende Rechteck auf der rechten Seite (mit Konto für die zusätzliche Breite der Linie) größer ist.</span><span class="sxs-lookup"><span data-stu-id="36309-622">Notice that the bounding rectangle on the right is larger (to account for the extra width of the line).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#20)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#20)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.GetBounds : System.Drawing.Drawing2D.Matrix -&gt; System.Drawing.RectangleF" Usage="graphicsPath.GetBounds matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="36309-623">Die <see cref="T:System.Drawing.Drawing2D.Matrix" />, die eine Transformation angibt, die vor dem Berechnen des Rechtecks auf diesen Pfad angewendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-623">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</span>
          </span>
          <span data-ttu-id="36309-624">Dieser Pfad wird nur vorübergehend transformiert. Die Transformation wird lediglich während der Berechnung des umschließenden Rechtecks verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-624">This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-625">Gibt ein Rechteck zurück, das diesen <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> umschließt, wenn dieser Pfad durch die angegebene <see cref="T:System.Drawing.Drawing2D.Matrix" /> transformiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-625">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when this path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36309-626">Ein <see cref="T:System.Drawing.RectangleF" />, das ein diesen <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> umschließendes Rechteck darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-626">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-627">Die Größe des zurückgegebenen umschließenden Rechtecks wird durch den Typ der enden, Stiftbreite und Stift-Gehrungsgrenze beeinflusst, und daher erzeugt eine "lose anpassen" in den gebundenen Pfad.</span><span class="sxs-lookup"><span data-stu-id="36309-627">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="36309-628">Die ungefähre Formel lautet: das anfängliche umgebende Rechteck von Stiftbreite vergrößert wird, und dieses Ergebnis wird multipliziert die Gehrungsgrenze sowie einige zusätzliche Rand Linienenden zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="36309-628">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-629">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span><span class="sxs-lookup"><span data-stu-id="36309-629">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds(class System.Drawing.Drawing2D.Matrix matrix, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.GetBounds : System.Drawing.Drawing2D.Matrix * System.Drawing.Pen -&gt; System.Drawing.RectangleF" Usage="graphicsPath.GetBounds (matrix, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="36309-630">Die <see cref="T:System.Drawing.Drawing2D.Matrix" />, die eine Transformation angibt, die vor dem Berechnen des Rechtecks auf diesen Pfad angewendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-630">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</span>
          </span>
          <span data-ttu-id="36309-631">Dieser Pfad wird nur vorübergehend transformiert. Die Transformation wird lediglich während der Berechnung des umschließenden Rechtecks verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-631">This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="36309-632">Der <see cref="T:System.Drawing.Pen" />, mit dem der <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> gezeichnet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-632">The <see cref="T:System.Drawing.Pen" /> with which to draw the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-633">Gibt ein Rechteck zurück, das diesen <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> umschließt, wenn der aktuelle Pfad durch die angegebene <see cref="T:System.Drawing.Drawing2D.Matrix" /> transformiert und mit dem angegebenen <see cref="T:System.Drawing.Pen" /> gezeichnet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-633">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when the current path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> and drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36309-634">Ein <see cref="T:System.Drawing.RectangleF" />, das ein diesen <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> umschließendes Rechteck darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-634">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-635">Die Größe des zurückgegebenen umschließenden Rechtecks wird durch den Typ der enden, Stiftbreite und Stift-Gehrungsgrenze beeinflusst, und daher erzeugt eine "lose anpassen" in den gebundenen Pfad.</span><span class="sxs-lookup"><span data-stu-id="36309-635">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="36309-636">Die ungefähre Formel lautet: das anfängliche umgebende Rechteck von Stiftbreite vergrößert wird, und dieses Ergebnis wird multipliziert die Gehrungsgrenze sowie einige zusätzliche Rand Linienenden zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="36309-636">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-637">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span><span class="sxs-lookup"><span data-stu-id="36309-637">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLastPoint">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF GetLastPoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.PointF GetLastPoint() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastPoint () As PointF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::PointF GetLastPoint();" />
      <MemberSignature Language="F#" Value="member this.GetLastPoint : unit -&gt; System.Drawing.PointF" Usage="graphicsPath.GetLastPoint " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="36309-638">Ruft den letzten Punkt im <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />-Array dieses <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-638">Gets the last point in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36309-639">Eine <see cref="T:System.Drawing.PointF" />-Struktur, die den letzten Punkt in diesem <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-639">A <see cref="T:System.Drawing.PointF" /> that represents the last point in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36309-640">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="36309-640">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="36309-641">Der Code erstellt einen Pfad, der Pfad eine Linie hinzugefügt, und ruft dann den letzten Punkt im Pfad.</span><span class="sxs-lookup"><span data-stu-id="36309-641">The code creates a path, adds a line to the path, and then gets the last point in the path.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#21)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#21)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsOutlineVisible">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36309-642">Zeigt an, ob sich der angegebene Punkt auf bzw. unter dem Umriss dieses <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> befindet, wenn er mit dem angegebenen <see cref="T:System.Drawing.Pen" /> gezeichnet wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-642">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.Point point, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.Point point, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::Point point, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.Point * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (point, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="36309-643">Ein <see cref="T:System.Drawing.Point" />, der die zu überprüfende Position angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-643">A <see cref="T:System.Drawing.Point" /> that specifies the location to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="36309-644">Der zu überprüfende <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-644">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-645">Zeigt an, ob sich der angegebene Punkt auf bzw. unter dem Umriss dieses <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> befindet, wenn er mit dem angegebenen <see cref="T:System.Drawing.Pen" /> gezeichnet wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-645">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36309-646">Diese Methode gibt <see langword="true" /> zurück, wenn sich der angegebene Punkt auf dem Umriss dieses <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> befindet, wenn er mit dem angegebenen <see cref="T:System.Drawing.Pen" /> gezeichnet wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-646">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-647">Diese Methode überprüft, um festzustellen, ob die Gliederung des jeweiligen Pfads am angegebenen Punkt sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="36309-647">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-648">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-648">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.PointF point, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.PointF point, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::PointF point, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.PointF * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (point, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="36309-649">Ein <see cref="T:System.Drawing.PointF" />, der die zu überprüfende Position angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-649">A <see cref="T:System.Drawing.PointF" /> that specifies the location to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="36309-650">Der zu überprüfende <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-650">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-651">Zeigt an, ob sich der angegebene Punkt auf bzw. unter dem Umriss dieses <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> befindet, wenn er mit dem angegebenen <see cref="T:System.Drawing.Pen" /> gezeichnet wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-651">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36309-652">Diese Methode gibt <see langword="true" /> zurück, wenn sich der angegebene Punkt auf dem Umriss dieses <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> befindet, wenn er mit dem angegebenen <see cref="T:System.Drawing.Pen" /> gezeichnet wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-652">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-653">Diese Methode überprüft, um festzustellen, ob die Gliederung des jeweiligen Pfads am angegebenen Punkt sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="36309-653">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-654">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-654">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.Point pt, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.Point pt, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::Point pt, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.Point * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (pt, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="36309-655">Ein <see cref="T:System.Drawing.Point" />, der die zu überprüfende Position angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-655">A <see cref="T:System.Drawing.Point" /> that specifies the location to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="36309-656">Der zu überprüfende <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-656">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="36309-657">Das auf Sichtbarkeit zu überprüfende <see cref="T:System.Drawing.Graphics" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-657">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-658">Zeigt an, ob sich der angegebene Punkt auf bzw. unter dem Umriss dieses <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> befindet, wenn er unter Verwendung des angegebenen <see cref="T:System.Drawing.Pen" />-Objekts mit dem angegebenen <see cref="T:System.Drawing.Graphics" /> gezeichnet wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-658">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36309-659">Diese Methode gibt <see langword="true" /> zurück, wenn sich der angegebene Punkt auf dem Umriss dieses <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> befindet, wenn er mit dem angegebenen <see cref="T:System.Drawing.Pen" /> gezeichnet wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-659">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-660">Diese Methode überprüft, um festzustellen, ob die Gliederung des jeweiligen Pfads am angegebenen Punkt sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="36309-660">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="36309-661">Die Koordinaten des Punkts getestet werden, sind in globalen Koordinaten angegeben.</span><span class="sxs-lookup"><span data-stu-id="36309-661">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="36309-662">Die Transformationsmatrix des `graphics` vorübergehend vor dem Testen, für die Sichtbarkeit angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="36309-662">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-663">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-663">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.PointF pt, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.PointF pt, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::PointF pt, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.PointF * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (pt, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="36309-664">Ein <see cref="T:System.Drawing.PointF" />, der die zu überprüfende Position angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-664">A <see cref="T:System.Drawing.PointF" /> that specifies the location to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="36309-665">Der zu überprüfende <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-665">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="36309-666">Das auf Sichtbarkeit zu überprüfende <see cref="T:System.Drawing.Graphics" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-666">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-667">Zeigt an, ob sich der angegebene Punkt auf bzw. unter dem Umriss dieses <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> befindet, wenn er unter Verwendung des angegebenen <see cref="T:System.Drawing.Pen" />-Objekts mit dem angegebenen <see cref="T:System.Drawing.Graphics" /> gezeichnet wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-667">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36309-668">Diese Methode gibt <see langword="true" /> zurück, wenn sich der angegebene Punkt auf bzw. unter dem Umriss dieses <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> befindet, wenn er mit dem angegebenen <see cref="T:System.Drawing.Pen" /> gezeichnet wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-668">This method returns <see langword="true" /> if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-669">Diese Methode überprüft, um festzustellen, ob die Gliederung des jeweiligen Pfads am angegebenen Punkt sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="36309-669">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="36309-670">Die Koordinaten des Punkts getestet werden, sind in globalen Koordinaten angegeben.</span><span class="sxs-lookup"><span data-stu-id="36309-670">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="36309-671">Die Transformationsmatrix des `graphics` vorübergehend vor dem Testen, für die Sichtbarkeit angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="36309-671">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-672">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-672">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (int x, int y, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(int32 x, int32 y, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(int x, int y, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : int * int * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="36309-673">Die x-Koordinate des Punktes, der überprüft werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-673">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="36309-674">Die y-Koordinate des Punktes, der überprüft werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-674">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="36309-675">Der zu überprüfende <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-675">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-676">Zeigt an, ob sich der angegebene Punkt auf bzw. unter dem Umriss dieses <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> befindet, wenn er mit dem angegebenen <see cref="T:System.Drawing.Pen" /> gezeichnet wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-676">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36309-677">Diese Methode gibt <see langword="true" /> zurück, wenn sich der angegebene Punkt auf dem Umriss dieses <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> befindet, wenn er mit dem angegebenen <see cref="T:System.Drawing.Pen" /> gezeichnet wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-677">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-678">Diese Methode überprüft, um festzustellen, ob die Gliederung des jeweiligen Pfads am angegebenen Punkt sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="36309-678">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-679">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-679">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (float x, float y, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(float32 x, float32 y, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(float x, float y, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : single * single * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="36309-680">Die x-Koordinate des Punktes, der überprüft werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-680">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="36309-681">Die y-Koordinate des Punktes, der überprüft werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-681">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="36309-682">Der zu überprüfende <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-682">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-683">Zeigt an, ob sich der angegebene Punkt auf bzw. unter dem Umriss dieses <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> befindet, wenn er mit dem angegebenen <see cref="T:System.Drawing.Pen" /> gezeichnet wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-683">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36309-684">Diese Methode gibt <see langword="true" /> zurück, wenn sich der angegebene Punkt auf dem Umriss dieses <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> befindet, wenn er mit dem angegebenen <see cref="T:System.Drawing.Pen" /> gezeichnet wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-684">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-685">Diese Methode überprüft, um festzustellen, ob die Gliederung des jeweiligen Pfads am angegebenen Punkt sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="36309-685">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-686">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-686">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (int x, int y, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(int32 x, int32 y, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(int x, int y, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : int * int * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="36309-687">Die x-Koordinate des Punktes, der überprüft werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-687">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="36309-688">Die y-Koordinate des Punktes, der überprüft werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-688">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="36309-689">Der zu überprüfende <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-689">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="36309-690">Das auf Sichtbarkeit zu überprüfende <see cref="T:System.Drawing.Graphics" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-690">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-691">Zeigt an, ob sich der angegebene Punkt auf bzw. unter dem Umriss dieses <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> befindet, wenn er unter Verwendung des angegebenen <see cref="T:System.Drawing.Pen" />-Objekts mit dem angegebenen <see cref="T:System.Drawing.Graphics" /> gezeichnet wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-691">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36309-692">Diese Methode gibt <see langword="true" /> zurück, wenn sich der angegebene Punkt auf dem Umriss dieses <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> befindet, wenn er mit dem angegebenen <see cref="T:System.Drawing.Pen" /> gezeichnet wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-692">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-693">Diese Methode überprüft, um festzustellen, ob die Gliederung des jeweiligen Pfads am angegebenen Punkt sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="36309-693">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="36309-694">Die Koordinaten des Punkts getestet werden, sind in globalen Koordinaten angegeben.</span><span class="sxs-lookup"><span data-stu-id="36309-694">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="36309-695">Die Transformationsmatrix des `graphics` vorübergehend vor dem Testen, für die Sichtbarkeit angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="36309-695">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-696">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="36309-696">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event.</span></span> <span data-ttu-id="36309-697">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="36309-697">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="36309-698">Erstellt einen Pfad an.</span><span class="sxs-lookup"><span data-stu-id="36309-698">Creates a path.</span></span>  
  
-   <span data-ttu-id="36309-699">Der Pfad hinzugefügt ein Rechteck.</span><span class="sxs-lookup"><span data-stu-id="36309-699">Adds a rectangle to the path.</span></span>  
  
-   <span data-ttu-id="36309-700">Erstellt einen breiten Stift und den Pfad mit diesem Stift (um das Beispiel klarer zu machen) erweitert wurde,</span><span class="sxs-lookup"><span data-stu-id="36309-700">Creates a wide pen and widens the path with that pen (to make the example clearer),</span></span>  
  
-   <span data-ttu-id="36309-701">Testet einen Punkt (100, 50), um festzustellen, ob sie in unter einem des Rands des Rechtecks durch Aufrufen von liegt <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A>.</span><span class="sxs-lookup"><span data-stu-id="36309-701">Tests a point (100, 50) to see if it lies within (under) one of the edges of the rectangle by calling <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A>.</span></span>  
  
 <span data-ttu-id="36309-702">(In diesem Fall, "true"), wird das Ergebnis im Meldungsfeld angezeigt.</span><span class="sxs-lookup"><span data-stu-id="36309-702">The result is shown in the message box (in this case, true).</span></span> <span data-ttu-id="36309-703">Anders ausgedrückt: wird am Rand über diesen Punkt gerendert.</span><span class="sxs-lookup"><span data-stu-id="36309-703">In other words the edge is rendered over that point.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#22)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#22)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (float x, float y, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(float32 x, float32 y, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(float x, float y, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : single * single * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="36309-704">Die x-Koordinate des Punktes, der überprüft werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-704">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="36309-705">Die y-Koordinate des Punktes, der überprüft werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-705">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="36309-706">Der zu überprüfende <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-706">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="36309-707">Das auf Sichtbarkeit zu überprüfende <see cref="T:System.Drawing.Graphics" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-707">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-708">Zeigt an, ob sich der angegebene Punkt auf bzw. unter dem Umriss dieses <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> befindet, wenn er unter Verwendung des angegebenen <see cref="T:System.Drawing.Pen" />-Objekts mit dem angegebenen <see cref="T:System.Drawing.Graphics" /> gezeichnet wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-708">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36309-709">Diese Methode gibt <see langword="true" /> zurück, wenn sich der angegebene Punkt auf bzw. unter dem Umriss dieses <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> befindet, wenn er mit dem angegebenen <see cref="T:System.Drawing.Pen" /> gezeichnet wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-709">This method returns <see langword="true" /> if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-710">Diese Methode überprüft, um festzustellen, ob die Gliederung des jeweiligen Pfads am angegebenen Punkt sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="36309-710">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="36309-711">Die Koordinaten des Punkts getestet werden, sind in globalen Koordinaten angegeben.</span><span class="sxs-lookup"><span data-stu-id="36309-711">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="36309-712">Die Transformationsmatrix, die von der `graphics` -Parameter vor dem Testen, für die Sichtbarkeit vorübergehend angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="36309-712">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-713">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-713">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsVisible">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36309-714">Gibt an, dass der angegebene Punkt in diesem <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> enthalten ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-714">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.Point -&gt; bool" Usage="graphicsPath.IsVisible point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="36309-715">Ein <see cref="T:System.Drawing.Point" />, der den zu überprüfenden Punkt darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-715">A <see cref="T:System.Drawing.Point" /> that represents the point to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-716">Gibt an, dass der angegebene Punkt in diesem <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> enthalten ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-716">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36309-717">Diese Methode gibt <see langword="true" /> zurück, wenn der angegebene Punkt in diesem <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> enthalten ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-717">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36309-718">Ein Beispiel finden Sie unter `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span><span class="sxs-lookup"><span data-stu-id="36309-718">For an example, see `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (point As PointF) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF point);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.PointF -&gt; bool" Usage="graphicsPath.IsVisible point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="36309-719">Ein <see cref="T:System.Drawing.PointF" />, der den zu überprüfenden Punkt darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-719">A <see cref="T:System.Drawing.PointF" /> that represents the point to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-720">Gibt an, dass der angegebene Punkt in diesem <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> enthalten ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-720">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36309-721">Diese Methode gibt <see langword="true" /> zurück, wenn der angegebene Punkt in diesem <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> enthalten ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-721">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36309-722">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-722">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point pt, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point pt, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point pt, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.Point * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (pt, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="36309-723">Ein <see cref="T:System.Drawing.Point" />, der den zu überprüfenden Punkt darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-723">A <see cref="T:System.Drawing.Point" /> that represents the point to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="36309-724">Das auf Sichtbarkeit zu überprüfende <see cref="T:System.Drawing.Graphics" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-724">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-725">Gibt an, dass der angegebene Punkt in diesem <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> enthalten ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-725">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36309-726">Diese Methode gibt <see langword="true" /> zurück, wenn der angegebene Punkt in diesem <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> enthalten ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-726">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-727">Die Koordinaten des Punkts getestet werden, sind in globalen Koordinaten angegeben.</span><span class="sxs-lookup"><span data-stu-id="36309-727">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="36309-728">Die Transformationsmatrix, die von der `graphics` -Parameter vor dem Testen, für die Sichtbarkeit vorübergehend angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="36309-728">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-729">Ein Beispiel finden Sie unter `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span><span class="sxs-lookup"><span data-stu-id="36309-729">For an example, see `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF pt, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF pt, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF pt, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.PointF * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (pt, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="36309-730">Ein <see cref="T:System.Drawing.PointF" />, der den zu überprüfenden Punkt darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-730">A <see cref="T:System.Drawing.PointF" /> that represents the point to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="36309-731">Das auf Sichtbarkeit zu überprüfende <see cref="T:System.Drawing.Graphics" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-731">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-732">Gibt an, dass der angegebene Punkt in diesem <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> enthalten ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-732">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36309-733">Diese Methode gibt <see langword="true" /> zurück, wenn der angegebene Punkt darin enthalten ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-733">This method returns <see langword="true" /> if the specified point is contained within this; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-734">Die Koordinaten des Punkts getestet werden, sind in globalen Koordinaten angegeben.</span><span class="sxs-lookup"><span data-stu-id="36309-734">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="36309-735">Die Transformationsmatrix, die von der `graphics` -Parameter vor dem Testen, für die Sichtbarkeit vorübergehend angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="36309-735">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-736">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-736">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Integer, y As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : int * int -&gt; bool" Usage="graphicsPath.IsVisible (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="36309-737">Die x-Koordinate des Punktes, der überprüft werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-737">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="36309-738">Die y-Koordinate des Punktes, der überprüft werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-738">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-739">Gibt an, dass der angegebene Punkt in diesem <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> enthalten ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-739">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36309-740">Diese Methode gibt <see langword="true" /> zurück, wenn der angegebene Punkt in diesem <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> enthalten ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-740">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36309-741">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-741">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Single, y As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : single * single -&gt; bool" Usage="graphicsPath.IsVisible (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="36309-742">Die x-Koordinate des Punktes, der überprüft werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-742">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="36309-743">Die y-Koordinate des Punktes, der überprüft werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-743">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-744">Gibt an, dass der angegebene Punkt in diesem <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> enthalten ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-744">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36309-745">Diese Methode gibt <see langword="true" /> zurück, wenn der angegebene Punkt in diesem <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> enthalten ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-745">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36309-746">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-746">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : int * int * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (x, y, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="36309-747">Die x-Koordinate des Punktes, der überprüft werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-747">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="36309-748">Die y-Koordinate des Punktes, der überprüft werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-748">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="36309-749">Das auf Sichtbarkeit zu überprüfende <see cref="T:System.Drawing.Graphics" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-749">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-750">Gibt an, dass der angegebene Punkt in diesem <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> enthalten ist und dass dabei das angegebene <see cref="T:System.Drawing.Graphics" />-Objekt verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-750">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, using the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36309-751">Diese Methode gibt <see langword="true" /> zurück, wenn der angegebene Punkt in diesem <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> enthalten ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-751">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-752">Die Koordinaten des Punkts getestet werden, sind in globalen Koordinaten angegeben.</span><span class="sxs-lookup"><span data-stu-id="36309-752">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="36309-753">Die Transformationsmatrix des `graphics` vorübergehend vor dem Testen, für die Sichtbarkeit angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="36309-753">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-754">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="36309-754">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="36309-755">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="36309-755">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="36309-756">Erstellt einen Pfad ein, und der Pfad eine Ellipse hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="36309-756">Creates a path and adds an ellipse to the path.</span></span>  
  
-   <span data-ttu-id="36309-757">Testet, ob der angegebene Punkt im Pfad enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="36309-757">Tests whether the specified point is contained within the path.</span></span>  
  
-   <span data-ttu-id="36309-758">Zeigt das Ergebnis in einem Dialogfeld an.</span><span class="sxs-lookup"><span data-stu-id="36309-758">Displays the result in a dialog box.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#23)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#23)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : single * single * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (x, y, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="36309-759">Die x-Koordinate des Punktes, der überprüft werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-759">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="36309-760">Die y-Koordinate des Punktes, der überprüft werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-760">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="36309-761">Das auf Sichtbarkeit zu überprüfende <see cref="T:System.Drawing.Graphics" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-761">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-762">Gibt an, ob der angegebene Punkt in diesem <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> im sichtbaren Clipbereich des angegebenen <see cref="T:System.Drawing.Graphics" />-Objekts enthalten ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-762">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> in the visible clip region of the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36309-763">Diese Methode gibt <see langword="true" /> zurück, wenn der angegebene Punkt in diesem <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> enthalten ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-763">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-764">Die Koordinaten des Punkts getestet werden, sind in globalen Koordinaten angegeben.</span><span class="sxs-lookup"><span data-stu-id="36309-764">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="36309-765">Die Transformationsmatrix, die von der `graphics` -Parameter vor dem Testen, für die Sichtbarkeit vorübergehend angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="36309-765">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-766">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-766">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathData">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.PathData PathData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.PathData PathData" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathData As PathData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::PathData ^ PathData { System::Drawing::Drawing2D::PathData ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathData : System.Drawing.Drawing2D.PathData" Usage="System.Drawing.Drawing2D.GraphicsPath.PathData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.PathData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="36309-767">Ruft ein <see cref="T:System.Drawing.Drawing2D.PathData" />-Objekt ab, das Arrays von Punkten (<paramref name="points" />) und Typen (<paramref name="types" />) für diesen <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> kapselt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-767">Gets a <see cref="T:System.Drawing.Drawing2D.PathData" /> that encapsulates arrays of points (<paramref name="points" />) and types (<paramref name="types" />) for this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="36309-768">Ein <see cref="T:System.Drawing.Drawing2D.PathData" />-Objekt, das Arrays sowohl für die Punkte als auch für die Typen dieses <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> kapselt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-768">A <see cref="T:System.Drawing.Drawing2D.PathData" /> that encapsulates arrays for both the points and types for this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathPoints">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF[] PathPoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.PointF[] PathPoints" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathPoints As PointF()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Drawing::PointF&gt; ^ PathPoints { cli::array &lt;System::Drawing::PointF&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathPoints : System.Drawing.PointF[]" Usage="System.Drawing.Drawing2D.GraphicsPath.PathPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="36309-769">Ruft die Punkte im Pfad ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-769">Gets the points in the path.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="36309-770">Ein Array von <see cref="T:System.Drawing.PointF" />-Objekten, die den Pfad darstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-770">An array of <see cref="T:System.Drawing.PointF" /> objects that represent the path.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathTypes">
      <MemberSignature Language="C#" Value="public byte[] PathTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] PathTypes" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathTypes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ PathTypes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathTypes : byte[]" Usage="System.Drawing.Drawing2D.GraphicsPath.PathTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="36309-771">Ruft die Typen der entsprechenden Punkte im <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />-Array ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-771">Gets the types of the corresponding points in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="36309-772">Ein Bytearray, das die Typen der entsprechenden Punkte im Pfad angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-772">An array of bytes that specifies the types of the corresponding points in the path.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-773">Das Array von Bytes, die die <xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A> Eigenschaft gibt die Arten von Überprüfungspunkten aufweisen und die Flags für die Datenpunkte in einem Pfad.</span><span class="sxs-lookup"><span data-stu-id="36309-773">The array of bytes returned by the <xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A> property specifies point types and flags for the data points in a path.</span></span> <span data-ttu-id="36309-774">Für jeden Punkt die Bits 0 bis 2 Geben Sie den Typ eines Punkts aus, und Bits 3 bis 7 enthalten einen Satz von Flags, die die Attribute eines Punkts angeben.</span><span class="sxs-lookup"><span data-stu-id="36309-774">For each point, bits 0 through 2 indicate the type of a point, and bits 3 through 7 hold a set of flags that specify the attributes of a point.</span></span> <span data-ttu-id="36309-775">Die folgende Tabelle zeigt die möglichen Werte und deren Bedeutungen.</span><span class="sxs-lookup"><span data-stu-id="36309-775">The following table shows possible values and their meanings.</span></span>  
  
|<span data-ttu-id="36309-776">Wert</span><span class="sxs-lookup"><span data-stu-id="36309-776">Value</span></span>|<span data-ttu-id="36309-777">Bedeutung</span><span class="sxs-lookup"><span data-stu-id="36309-777">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="36309-778">0</span><span class="sxs-lookup"><span data-stu-id="36309-778">0</span></span>|<span data-ttu-id="36309-779">Gibt an, dass sich der Punkt der Anfang einer Abbildung.</span><span class="sxs-lookup"><span data-stu-id="36309-779">Indicates that the point is the start of a figure.</span></span>|  
|<span data-ttu-id="36309-780">1</span><span class="sxs-lookup"><span data-stu-id="36309-780">1</span></span>|<span data-ttu-id="36309-781">Gibt an, dass der Punkt, die einen der zwei Endpunkte einer Zeile befindet.</span><span class="sxs-lookup"><span data-stu-id="36309-781">Indicates that the point is one of the two endpoints of a line.</span></span>|  
|<span data-ttu-id="36309-782">3</span><span class="sxs-lookup"><span data-stu-id="36309-782">3</span></span>|<span data-ttu-id="36309-783">Gibt an, dass der Punkt ein Endpunkt oder von einer kubischen Béziersplinekurve ist.</span><span class="sxs-lookup"><span data-stu-id="36309-783">Indicates that the point is an endpoint or control point of a cubic Bézier spline.</span></span>|  
|<span data-ttu-id="36309-784">0x7</span><span class="sxs-lookup"><span data-stu-id="36309-784">0x7</span></span>|<span data-ttu-id="36309-785">Maskiert alle Bits mit Ausnahme der drei niederwertigen Bits, die den Punkt angeben.</span><span class="sxs-lookup"><span data-stu-id="36309-785">Masks all bits except for the three low-order bits, which indicate the point type.</span></span>|  
|<span data-ttu-id="36309-786">0x20</span><span class="sxs-lookup"><span data-stu-id="36309-786">0x20</span></span>|<span data-ttu-id="36309-787">Gibt an, dass der Punkt ein Marker.</span><span class="sxs-lookup"><span data-stu-id="36309-787">Specifies that the point is a marker.</span></span>|  
|<span data-ttu-id="36309-788">0x80</span><span class="sxs-lookup"><span data-stu-id="36309-788">0x80</span></span>|<span data-ttu-id="36309-789">Gibt an, dass der Punkt der letzte Punkt in einem geschlossenen untergeordneten Pfad (Abbildung).</span><span class="sxs-lookup"><span data-stu-id="36309-789">Specifies that the point is the last point in a closed subpath (figure).</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointCount">
      <MemberSignature Language="C#" Value="public int PointCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PointCount" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PointCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PointCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PointCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PointCount : int" Usage="System.Drawing.Drawing2D.GraphicsPath.PointCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="36309-790">Ruft die Anzahl der Elemente in <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> oder im <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" />-Array ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-790">Gets the number of elements in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> or the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="36309-791">Eine ganze Zahl, die die Anzahl der Elemente in <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> oder im <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" />-Array angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-791">An integer that specifies the number of elements in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> or the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> array.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="graphicsPath.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="36309-792">Leert das <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />-Array und das <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" />-Array und legt <see cref="T:System.Drawing.Drawing2D.FillMode" /> auf <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" /> fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-792">Empties the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> and <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> arrays and sets the <see cref="T:System.Drawing.Drawing2D.FillMode" /> to <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36309-793">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="36309-793">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="36309-794">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="36309-794">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="36309-795">Erstellt einen Pfad an.</span><span class="sxs-lookup"><span data-stu-id="36309-795">Creates a path.</span></span>  
  
-   <span data-ttu-id="36309-796">Fügt mehrere primitiven hinzu.</span><span class="sxs-lookup"><span data-stu-id="36309-796">Adds several primitives to it.</span></span>  
  
-   <span data-ttu-id="36309-797">Zeichnet den Pfad des Punkt-Array auf dem Bildschirm an.</span><span class="sxs-lookup"><span data-stu-id="36309-797">Draws the path's points array to the screen.</span></span>  
  
-   <span data-ttu-id="36309-798">Den Pfad zurückgesetzt auf einen leeren Zustand.</span><span class="sxs-lookup"><span data-stu-id="36309-798">Resets the path to an empty state.</span></span>  
  
-   <span data-ttu-id="36309-799">Erneut Punktearray das (falls vorhanden).</span><span class="sxs-lookup"><span data-stu-id="36309-799">Re-acquires the points array (if it exists).</span></span>  
  
-   <span data-ttu-id="36309-800">Zeichnet das Array auf dem Bildschirm an.</span><span class="sxs-lookup"><span data-stu-id="36309-800">Draws the array to the screen.</span></span>  
  
 <span data-ttu-id="36309-801">Beachten Sie, dass kein Array nach dem Zurücksetzen der Aufruf gefunden.</span><span class="sxs-lookup"><span data-stu-id="36309-801">Notice that it finds no array following the reset call.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#24)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#24)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reverse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reverse();" />
      <MemberSignature Language="F#" Value="member this.Reverse : unit -&gt; unit" Usage="graphicsPath.Reverse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="36309-802">Kehrt die Reihenfolge der Punkte im <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />-Array dieses <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-802">Reverses the order of points in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36309-803">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="36309-803">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="36309-804">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="36309-804">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="36309-805">Erstellt einen Pfad ein, und fügt diesem mehrere primitiven hinzu.</span><span class="sxs-lookup"><span data-stu-id="36309-805">Creates a path and adds several primitives to the path.</span></span>  
  
-   <span data-ttu-id="36309-806">Zeichnet den Pfad des Punkt-Array auf dem Bildschirm an.</span><span class="sxs-lookup"><span data-stu-id="36309-806">Draws the path's points array to the screen.</span></span>  
  
-   <span data-ttu-id="36309-807">Zeichnet die umgekehrten Punkt-Array auf dem Bildschirm an.</span><span class="sxs-lookup"><span data-stu-id="36309-807">Draws the reversed points array to the screen.</span></span>  
  
 <span data-ttu-id="36309-808">Beachten Sie, dass die zweite Auflistung von Punkten in umgekehrter Reihenfolge vom ersten.</span><span class="sxs-lookup"><span data-stu-id="36309-808">Notice that the second listing of points is in reverse order from the first.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#25)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#25)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMarkers">
      <MemberSignature Language="C#" Value="public void SetMarkers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMarkers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMarkers ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMarkers();" />
      <MemberSignature Language="F#" Value="member this.SetMarkers : unit -&gt; unit" Usage="graphicsPath.SetMarkers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="36309-809">Setzt einen Marker für diesen <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-809">Sets a marker on this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-810">Diese Methode erstellt einen Marker im Pfad, der verwendet werden kann, um Abschnitte des Pfads zu trennen.</span><span class="sxs-lookup"><span data-stu-id="36309-810">This method creates a marker on the path that can be used to separate sections of the path.</span></span> <span data-ttu-id="36309-811">Anschließend können Sie die <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> Methoden zum iterieren durch die Marker im Pfad.</span><span class="sxs-lookup"><span data-stu-id="36309-811">You can then use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> methods to iterate through the markers in the path.</span></span>  
  
 <span data-ttu-id="36309-812">Marker werden verwendet, um Gruppen von Pfade zu trennen.</span><span class="sxs-lookup"><span data-stu-id="36309-812">Markers are used to separate groups of subpaths.</span></span> <span data-ttu-id="36309-813">Eine oder mehrere untergeordnete Pfade können zwischen zwei markern im Pfad enthalten sein.</span><span class="sxs-lookup"><span data-stu-id="36309-813">One or more subpaths can be contained between two markers in the path.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-814">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="36309-814">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="36309-815">Der Code erstellt einen Pfad und den Pfad an, getrennt durch Marker mehrere primitiven hinzugefügt und den Pfad auf dem Bildschirm zeichnet.</span><span class="sxs-lookup"><span data-stu-id="36309-815">The code creates a path and adds several primitives to the path separated by markers, and draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#26)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#26)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartFigure">
      <MemberSignature Language="C#" Value="public void StartFigure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartFigure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartFigure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartFigure();" />
      <MemberSignature Language="F#" Value="member this.StartFigure : unit -&gt; unit" Usage="graphicsPath.StartFigure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="36309-816">Startet eine neue Figur, ohne die aktuelle zu schließen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-816">Starts a new figure without closing the current figure.</span>
          </span>
          <span data-ttu-id="36309-817">Alle nachfolgenden Punkte, die dem Pfad hinzugefügt werden, werden dieser neuen Figur hinzugefügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-817">All subsequent points added to the path are added to this new figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-818">Benutzer muss die ursprünglichen Punkte beibehalten, wenn sie benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="36309-818">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="36309-819">Die ursprünglichen Punkte werden intern in kubische Bézierpunkte Steuerelement konvertiert, daher gibt es keinen Mechanismus für die ursprünglichen Punkte.</span><span class="sxs-lookup"><span data-stu-id="36309-819">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="36309-820">Diese Methode startet einen neuen untergeordneten im Pfad.</span><span class="sxs-lookup"><span data-stu-id="36309-820">This method starts a new subpath in the path.</span></span> <span data-ttu-id="36309-821">Pfade können Sie einen Pfad in Abschnitte und verwenden Sie die <xref:System.Drawing.Drawing2D.GraphicsPathIterator> Klasse, um die Pfade zu durchlaufen.</span><span class="sxs-lookup"><span data-stu-id="36309-821">Subpaths allow you to separate a path into sections and use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator> class to iterate through the subpaths.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-822">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="36309-822">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="36309-823">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="36309-823">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="36309-824">Erstellt einen Pfad an.</span><span class="sxs-lookup"><span data-stu-id="36309-824">Creates a path.</span></span>  
  
-   <span data-ttu-id="36309-825">Fügt zwei Sätze von Zahlen.</span><span class="sxs-lookup"><span data-stu-id="36309-825">Adds two sets of figures.</span></span> <span data-ttu-id="36309-826">Der erste Satz von Abbildungen kombiniert vier Grundtypen in beiden Abbildungen.</span><span class="sxs-lookup"><span data-stu-id="36309-826">The first set of figures combines four primitives into two figures.</span></span> <span data-ttu-id="36309-827">Die zweite Gruppe von Abbildungen kombiniert die gleichen vier Grundtypen (außer, dass sie auf der y-Achse ausgeglichen werden) in drei Zahlen.</span><span class="sxs-lookup"><span data-stu-id="36309-827">The second set of figures combines the same four primitives (except that they are offset in the y-axis) into three figures.</span></span>  
  
-   <span data-ttu-id="36309-828">Zeichnet alle Figuren auf dem Bildschirm an.</span><span class="sxs-lookup"><span data-stu-id="36309-828">Draws all the figures to the screen.</span></span>  
  
 <span data-ttu-id="36309-829">Beachten Sie, dass des Unterschied zwischen den beiden Sätzen von Abbildungen der Darstellung.</span><span class="sxs-lookup"><span data-stu-id="36309-829">Notice the difference in the appearance between the two sets of figures.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#27)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#27)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Transform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="36309-830">Eine <see cref="T:System.Drawing.Drawing2D.Matrix" />, die die zuzuweisende Transformation darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-830">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the transformation to apply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-831">Weist diesem <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> eine Transformationsmatrix zu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-831">Applies a transform matrix to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-832">Transformation für das Skalieren, übersetzen, drehen oder neigen die <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="36309-832">The transformation can scale, translate, rotate, or skew the <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-833">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="36309-833">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="36309-834">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="36309-834">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="36309-835">Erstellt einen Pfad ein, und der Pfad eine Ellipse hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="36309-835">Creates a path and adds an ellipse to the path.</span></span>  
  
-   <span data-ttu-id="36309-836">Zeichnet den Pfad auf dem Bildschirm.</span><span class="sxs-lookup"><span data-stu-id="36309-836">Draws path to the screen.</span></span>  
  
-   <span data-ttu-id="36309-837">Erstellt eine Transformationsmatrix zum Übersetzen der Pfad 100 Einheiten der x-Achse an.</span><span class="sxs-lookup"><span data-stu-id="36309-837">Creates a transform matrix to translate the path 100 units in the x-axis direction.</span></span>  
  
-   <span data-ttu-id="36309-838">Zeichnet den transformierten Pfad auf dem Bildschirm an.</span><span class="sxs-lookup"><span data-stu-id="36309-838">Draws the transformed path to the screen.</span></span>  
  
 <span data-ttu-id="36309-839">Beachten Sie, dass die ursprüngliche Ellipse in Schwarz und transformierte Ellipse gezeichnet wird, wird Rot gezeichnet.</span><span class="sxs-lookup"><span data-stu-id="36309-839">Notice that the original ellipse is drawn in black and the transformed ellipse is drawn in red.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#28)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#28)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Warp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36309-840">Weist diesem <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> eine durch ein Rechteck und ein Parallelogramm definierte Verzerrungstransformation zu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-840">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Warp (destPoints As PointF(), srcRect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="destPoints">
          <span data-ttu-id="36309-841">Ein Array von <see cref="T:System.Drawing.PointF" />-Strukturen, die ein Parallelogramm definieren, in das das durch <paramref name="srcRect" /> definierte Rechteck transformiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-841">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed.</span>
          </span>
          <span data-ttu-id="36309-842">Das Array kann entweder drei oder vier Elemente enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-842">The array can contain either three or four elements.</span>
          </span>
          <span data-ttu-id="36309-843">Wenn das Array drei Elemente enthält, ergibt sich die untere rechte Ecke des Parallelogramms aus den ersten drei Punkten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-843">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="36309-844">Ein <see cref="T:System.Drawing.RectangleF" />, das das Rechteck darstellt, das in das durch <paramref name="destPoints" /> definierte Parallelogramm transformiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-844">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-845">Weist diesem <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> eine durch ein Rechteck und ein Parallelogramm definierte Verzerrungstransformation zu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-845">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36309-846">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-846">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="destPoints">
          <span data-ttu-id="36309-847">Ein Array von <see cref="T:System.Drawing.PointF" />-Strukturen, die ein Parallelogramm definieren, in das das durch <paramref name="srcRect" /> definierte Rechteck transformiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-847">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed.</span>
          </span>
          <span data-ttu-id="36309-848">Das Array kann entweder drei oder vier Elemente enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-848">The array can contain either three or four elements.</span>
          </span>
          <span data-ttu-id="36309-849">Wenn das Array drei Elemente enthält, ergibt sich die untere rechte Ecke des Parallelogramms aus den ersten drei Punkten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-849">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="36309-850">Ein <see cref="T:System.Drawing.RectangleF" />, das das Rechteck darstellt, das in das durch <paramref name="destPoints" /> definierte Parallelogramm transformiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-850">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="36309-851">Eine <see cref="T:System.Drawing.Drawing2D.Matrix" />, die eine dem Pfad zuzuweisende geometrische Transformation angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-851">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-852">Weist diesem <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> eine durch ein Rechteck und ein Parallelogramm definierte Verzerrungstransformation zu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-852">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36309-853">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-853">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.WarpMode warpMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.WarpMode warpMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::WarpMode warpMode);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.WarpMode -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect, matrix, warpMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="warpMode" Type="System.Drawing.Drawing2D.WarpMode" />
      </Parameters>
      <Docs>
        <param name="destPoints">
          <span data-ttu-id="36309-854">Ein Array von <see cref="T:System.Drawing.PointF" />-Strukturen, das ein Parallelogramm definiert, in das das durch <paramref name="srcRect" /> definierte Rechteck transformiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-854">An array of <see cref="T:System.Drawing.PointF" /> structures that defines a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed.</span>
          </span>
          <span data-ttu-id="36309-855">Das Array kann entweder drei oder vier Elemente enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-855">The array can contain either three or four elements.</span>
          </span>
          <span data-ttu-id="36309-856">Wenn das Array drei Elemente enthält, ergibt sich die untere rechte Ecke des Parallelogramms aus den ersten drei Punkten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-856">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="36309-857">Ein <see cref="T:System.Drawing.RectangleF" />, das das Rechteck darstellt, das in das durch <paramref name="destPoints" /> definierte Parallelogramm transformiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-857">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="36309-858">Eine <see cref="T:System.Drawing.Drawing2D.Matrix" />, die eine dem Pfad zuzuweisende geometrische Transformation angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-858">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span>
          </span>
        </param>
        <param name="warpMode">
          <span data-ttu-id="36309-859">Eine <see cref="T:System.Drawing.Drawing2D.WarpMode" />-Enumeration, die angibt, ob bei dieser Verzerrung der perspektivische oder der bilineare Modus verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-859">A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-860">Weist diesem <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> eine durch ein Rechteck und ein Parallelogramm definierte Verzerrungstransformation zu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-860">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36309-861">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-861">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.WarpMode warpMode, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.WarpMode warpMode, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::WarpMode warpMode, float flatness);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.WarpMode * single -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect, matrix, warpMode, flatness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="warpMode" Type="System.Drawing.Drawing2D.WarpMode" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="destPoints">
          <span data-ttu-id="36309-862">Ein Array von <see cref="T:System.Drawing.PointF" />-Strukturen, die ein Parallelogramm definieren, in das das durch <paramref name="srcRect" /> definierte Rechteck transformiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-862">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed.</span>
          </span>
          <span data-ttu-id="36309-863">Das Array kann entweder drei oder vier Elemente enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-863">The array can contain either three or four elements.</span>
          </span>
          <span data-ttu-id="36309-864">Wenn das Array drei Elemente enthält, ergibt sich die untere rechte Ecke des Parallelogramms aus den ersten drei Punkten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-864">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="36309-865">Ein <see cref="T:System.Drawing.RectangleF" />, das das Rechteck darstellt, das in das durch <paramref name="destPoints" /> definierte Parallelogramm transformiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-865">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="36309-866">Eine <see cref="T:System.Drawing.Drawing2D.Matrix" />, die eine dem Pfad zuzuweisende geometrische Transformation angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-866">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span>
          </span>
        </param>
        <param name="warpMode">
          <span data-ttu-id="36309-867">Eine <see cref="T:System.Drawing.Drawing2D.WarpMode" />-Enumeration, die angibt, ob bei dieser Verzerrung der perspektivische oder der bilineare Modus verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-867">A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</span>
          </span>
        </param>
        <param name="flatness">
          <span data-ttu-id="36309-868">Ein Wert von 0 bis 1, der angibt, wie flach der resultierende Pfad ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-868">A value from 0 through 1 that specifies how flat the resulting path is.</span>
          </span>
          <span data-ttu-id="36309-869">Weitere Informationen finden Sie unter <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" />-Methoden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-869">For more information, see the <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /> methods.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-870">Weist diesem <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> eine durch ein Rechteck und ein Parallelogramm definierte Verzerrungstransformation zu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-870">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36309-871">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="36309-871">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="36309-872">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="36309-872">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="36309-873">Erstellt einen Pfad und den Pfad ein Rechteck hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="36309-873">Creates a path and adds a rectangle to the path.</span></span>  
  
-   <span data-ttu-id="36309-874">Zeichnet das Rechteck auf dem Bildschirm in Schwarz.</span><span class="sxs-lookup"><span data-stu-id="36309-874">Draws that rectangle to the screen in black.</span></span>  
  
-   <span data-ttu-id="36309-875">Verzerrt den Pfad mit der eine perspektivische Verzerrung an.</span><span class="sxs-lookup"><span data-stu-id="36309-875">Warps the path with a perspective warp.</span></span>  
  
-   <span data-ttu-id="36309-876">Zeichnet das verzerrte Rechteck (Pfad) auf dem Bildschirm in Rot angezeigt.</span><span class="sxs-lookup"><span data-stu-id="36309-876">Draws the warped rectangle (path) to the screen in red.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#29)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#29)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Widen">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36309-877">Ersetzt diesen Pfad durch Kurven, die den Bereich einschließen, der beim Zeichnen des Pfads mithilfe des angegebenen Stifts ausgefüllt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-877">Replaces this path with curves that enclose the area that is filled when this path is drawn by the specified pen.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.Widen : System.Drawing.Pen -&gt; unit" Usage="graphicsPath.Widen pen" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="36309-878">Ein <see cref="T:System.Drawing.Pen" />, der die Breite zwischen dem ursprünglichen Umriss des Pfads und dem neuen, durch diese Methode erstellten Umriss angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-878">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-879">Fügt dem Pfad einen weiteren Umriss hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-879">Adds an additional outline to the path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-880">Diese Methode erstellt eine Kontur um die ursprünglichen Zeilen in dieser <xref:System.Drawing.Drawing2D.GraphicsPath>, mit einer Entfernung zwischen vorhandenen Zeilen und die neue Gliederung gleich mit der die Breite der <xref:System.Drawing.Pen> verwendet, die im Aufruf von <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span><span class="sxs-lookup"><span data-stu-id="36309-880">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="36309-881">Sollten Sie den Platz zwischen den Linien ausfüllen müssen, verwenden die <xref:System.Drawing.Graphics.FillPath%2A> sondern klicken Sie dann die <xref:System.Drawing.Graphics.DrawPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="36309-881">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-882">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-882">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen, System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen, class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen, System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Widen : System.Drawing.Pen * System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Widen (pen, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="36309-883">Ein <see cref="T:System.Drawing.Pen" />, der die Breite zwischen dem ursprünglichen Umriss des Pfads und dem neuen, durch diese Methode erstellten Umriss angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-883">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="36309-884">Eine <see cref="T:System.Drawing.Drawing2D.Matrix" />, die eine Transformation angibt, die dem Pfad vor dem Verbreitern zugewiesen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-884">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transform to apply to the path before widening.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-885">Fügt dem <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> einen weiteren Umriss hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-885">Adds an additional outline to the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-886">Diese Methode erstellt eine Kontur um die ursprünglichen Zeilen in dieser <xref:System.Drawing.Drawing2D.GraphicsPath>, mit einer Entfernung zwischen vorhandenen Zeilen und die neue Gliederung gleich mit der die Breite der <xref:System.Drawing.Pen> verwendet, die im Aufruf von <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span><span class="sxs-lookup"><span data-stu-id="36309-886">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="36309-887">Sollten Sie den Platz zwischen den Linien ausfüllen müssen, verwenden die <xref:System.Drawing.Graphics.FillPath%2A> sondern klicken Sie dann die <xref:System.Drawing.Graphics.DrawPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="36309-887">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-888">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="36309-888">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen, System.Drawing.Drawing2D.Matrix matrix, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen, class System.Drawing.Drawing2D.Matrix matrix, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen, System::Drawing::Drawing2D::Matrix ^ matrix, float flatness);" />
      <MemberSignature Language="F#" Value="member this.Widen : System.Drawing.Pen * System.Drawing.Drawing2D.Matrix * single -&gt; unit" Usage="graphicsPath.Widen (pen, matrix, flatness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="36309-889">Ein <see cref="T:System.Drawing.Pen" />, der die Breite zwischen dem ursprünglichen Umriss des Pfads und dem neuen, durch diese Methode erstellten Umriss angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-889">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="36309-890">Eine <see cref="T:System.Drawing.Drawing2D.Matrix" />, die eine Transformation angibt, die dem Pfad vor dem Verbreitern zugewiesen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-890">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transform to apply to the path before widening.</span>
          </span>
        </param>
        <param name="flatness">
          <span data-ttu-id="36309-891">Ein Wert, der die Abflachung von Kurven angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-891">A value that specifies the flatness for curves.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36309-892">Ersetzt diesen <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> durch Kurven, die den Bereich einschließen, der beim Zeichnen des Pfads mithilfe des angegebenen Stifts ausgefüllt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36309-892">Replaces this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> with curves that enclose the area that is filled when this path is drawn by the specified pen.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36309-893">Diese Methode erstellt eine Kontur um die ursprünglichen Zeilen in dieser <xref:System.Drawing.Drawing2D.GraphicsPath>, mit einer Entfernung zwischen vorhandenen Zeilen und die neue Gliederung gleich mit der die Breite der <xref:System.Drawing.Pen> verwendet, die im Aufruf von <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span><span class="sxs-lookup"><span data-stu-id="36309-893">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="36309-894">Sollten Sie den Platz zwischen den Linien ausfüllen müssen, verwenden die <xref:System.Drawing.Graphics.FillPath%2A> sondern klicken Sie dann die <xref:System.Drawing.Graphics.DrawPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="36309-894">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36309-895">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="36309-895">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="36309-896">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="36309-896">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="36309-897">Erstellt einen Pfad ein, und fügt zwei Ellipsen dem Pfad hinzu.</span><span class="sxs-lookup"><span data-stu-id="36309-897">Creates a path and adds two ellipses to the path.</span></span>  
  
-   <span data-ttu-id="36309-898">Zeichnet den Pfad in Schwarz.</span><span class="sxs-lookup"><span data-stu-id="36309-898">Draws the path in black.</span></span>  
  
-   <span data-ttu-id="36309-899">Erweitert den Pfad an.</span><span class="sxs-lookup"><span data-stu-id="36309-899">Widens the path.</span></span>  
  
-   <span data-ttu-id="36309-900">Zeichnet den Pfad in Rot angezeigt.</span><span class="sxs-lookup"><span data-stu-id="36309-900">Draws the path in red.</span></span>  
  
 <span data-ttu-id="36309-901">Beachten Sie, die der zweiten Darstellung verwendet <xref:System.Drawing.Graphics.FillPath%2A> anstelle von <xref:System.Drawing.Graphics.DrawPath%2A>, und daher in der gerenderte Abbildung die Gliederung gefüllt wurde.</span><span class="sxs-lookup"><span data-stu-id="36309-901">Notice that the second rendering uses <xref:System.Drawing.Graphics.FillPath%2A> instead of <xref:System.Drawing.Graphics.DrawPath%2A>, and hence the rendered figure has the outline filled.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#30)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#30)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>