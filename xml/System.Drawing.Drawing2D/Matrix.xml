<Type Name="Matrix" FullName="System.Drawing.Drawing2D.Matrix">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3246d1dfaa101db053fd44640cace14fb129d78a" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46675557" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Matrix : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Matrix extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.Matrix" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Matrix&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Matrix sealed : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type Matrix = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="2eaca-101">Encapsulates a 3-by-3 affine matrix that represents a geometric transform.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2eaca-101">Encapsulates a 3-by-3 affine matrix that represents a geometric transform.</span>
      </span>
      <span data-ttu-id="2eaca-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2eaca-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaca-103">In [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] können Sie eine affine Transformation in speichern eine <xref:System.Drawing.Drawing2D.Matrix> Objekt.</span><span class="sxs-lookup"><span data-stu-id="2eaca-103">In [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] you can store an affine transformation in a <xref:System.Drawing.Drawing2D.Matrix> object.</span></span> <span data-ttu-id="2eaca-104">Da immer ist der dritte Spalte der eine Matrix, die eine affine Transformation darstellt (0, 0, 1), Sie nur die sechs Zahlen in den ersten beiden Spalten angeben, wenn Sie erstellen eine <xref:System.Drawing.Drawing2D.Matrix> Objekt.</span><span class="sxs-lookup"><span data-stu-id="2eaca-104">Because the third column of a matrix that represents an affine transformation is always (0, 0, 1), you specify only the six numbers in the first two columns when you construct a <xref:System.Drawing.Drawing2D.Matrix> object.</span></span> <span data-ttu-id="2eaca-105">Die Anweisung `Matrix myMatrix = new Matrix(0, 1, -1, 0, 3, 4)` erstellt die Matrix, die in der folgenden Abbildung dargestellt.</span><span class="sxs-lookup"><span data-stu-id="2eaca-105">The statement `Matrix myMatrix = new Matrix(0, 1, -1, 0, 3, 4)` constructs the matrix shown in the following figure.</span></span>  
  
 <span data-ttu-id="2eaca-106">![Transformationen](~/add/media/aboutgdip05-art10.gif "Transformationen")</span><span class="sxs-lookup"><span data-stu-id="2eaca-106">![Transformations](~/add/media/aboutgdip05-art10.gif "Transformations")</span></span>  
  
## <a name="composite-transformations"></a><span data-ttu-id="2eaca-107">Zusammengesetzte Transformationen</span><span class="sxs-lookup"><span data-stu-id="2eaca-107">Composite Transformations</span></span>  
 <span data-ttu-id="2eaca-108">Eine zusammengesetzte Transformation ist eine Sequenz von Transformationen gefolgt von den anderen.</span><span class="sxs-lookup"><span data-stu-id="2eaca-108">A composite transformation is a sequence of transformations, one followed by the other.</span></span> <span data-ttu-id="2eaca-109">Beachten Sie die Matrizen und Transformationen in der folgenden Liste:</span><span class="sxs-lookup"><span data-stu-id="2eaca-109">Consider the matrices and transformations in the following list:</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="2eaca-110">Die Matrix ein</span><span class="sxs-lookup"><span data-stu-id="2eaca-110">Matrix A</span></span>|<span data-ttu-id="2eaca-111">90 Grad drehen</span><span class="sxs-lookup"><span data-stu-id="2eaca-111">Rotate 90 degrees</span></span>|  
|<span data-ttu-id="2eaca-112">Matrix B</span><span class="sxs-lookup"><span data-stu-id="2eaca-112">Matrix B</span></span>|<span data-ttu-id="2eaca-113">Um den Faktor 2 in der X-Richtung skaliert</span><span class="sxs-lookup"><span data-stu-id="2eaca-113">Scale by a factor of 2 in the x direction</span></span>|  
|<span data-ttu-id="2eaca-114">C-Matrix</span><span class="sxs-lookup"><span data-stu-id="2eaca-114">Matrix C</span></span>|<span data-ttu-id="2eaca-115">3 Einheiten in der y-Richtung verschieben</span><span class="sxs-lookup"><span data-stu-id="2eaca-115">Translate 3 units in the y direction</span></span>|  
  
 <span data-ttu-id="2eaca-116">Wenn beginnen wir mit den Punkt ("2", "1"), dargestellt durch die Matrix [2-1-1] – A, B dann multiplizieren, und klicken Sie dann C, die der Punkt (2, 1) die drei Transformationen in der aufgeführten Reihenfolge ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="2eaca-116">If we start with the point (2, 1) — represented by the matrix [2 1 1] — and multiply by A, then B, then C, the point (2, 1) will undergo the three transformations in the order listed.</span></span>  
  
 <span data-ttu-id="2eaca-117">[2 1 1]ABC = [-2 5 1]</span><span class="sxs-lookup"><span data-stu-id="2eaca-117">[2 1 1]ABC = [-2 5 1]</span></span>  
  
 <span data-ttu-id="2eaca-118">Stattdessen als die drei Teile der zusammengesetzten Transformation in drei separaten Matrizen zu speichern, Multiplizieren Sie A, B und C miteinander um eine einzelne 3 x 3-Matrix abzurufen, die die gesamte zusammengesetzte Transformation gespeichert.</span><span class="sxs-lookup"><span data-stu-id="2eaca-118">Rather than store the three parts of the composite transformation in three separate matrices, you can multiply A, B, and C together to get a single 3×3 matrix that stores the entire composite transformation.</span></span> <span data-ttu-id="2eaca-119">Nehmen wir an ABC = D. Ein Punkt, multipliziert mit D gibt dann das gleiche Ergebnis wie einen Punkt, multipliziert mit ein, klicken Sie dann B dann C.</span><span class="sxs-lookup"><span data-stu-id="2eaca-119">Suppose ABC = D. Then a point multiplied by D gives the same result as a point multiplied by A, then B, then C.</span></span>  
  
 <span data-ttu-id="2eaca-120">[2 1 1]D = [-2 5 1]</span><span class="sxs-lookup"><span data-stu-id="2eaca-120">[2 1 1]D = [-2 5 1]</span></span>  
  
 <span data-ttu-id="2eaca-121">Die folgende Abbildung zeigt die Matrizen, A, B, C und D.</span><span class="sxs-lookup"><span data-stu-id="2eaca-121">The following illustration shows the matrices A, B, C, and D.</span></span>  
  
 <span data-ttu-id="2eaca-122">![Transformationen](~/add/media/aboutgdip05-art12.gif "Transformationen")</span><span class="sxs-lookup"><span data-stu-id="2eaca-122">![Transformations](~/add/media/aboutgdip05-art12.gif "Transformations")</span></span>  
  
 <span data-ttu-id="2eaca-123">Die Tatsache, dass die Matrix eine zusammengesetzte Transformation gebildet werden kann, durch die einzelnen Transformationsmatrizen multipliziert bedeutet, dass es sich bei einer beliebigen Folge von affine Transformationen in einer einzelnen gespeichert werden kann <xref:System.Drawing.Drawing2D.Matrix> Objekt.</span><span class="sxs-lookup"><span data-stu-id="2eaca-123">The fact that the matrix of a composite transformation can be formed by multiplying the individual transformation matrices means that any sequence of affine transformations can be stored in a single <xref:System.Drawing.Drawing2D.Matrix> object.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="2eaca-124">Die Reihenfolge der eine zusammengesetzte Transformation ist wichtig.</span><span class="sxs-lookup"><span data-stu-id="2eaca-124">The order of a composite transformation is important.</span></span> <span data-ttu-id="2eaca-125">Im Allgemeinen zu drehen, skalieren und dann zu übersetzen ist nicht dasselbe wie skalieren, drehen und anschließend zu übersetzen.</span><span class="sxs-lookup"><span data-stu-id="2eaca-125">In general, rotate, then scale, then translate is not the same as scale, then rotate, then translate.</span></span> <span data-ttu-id="2eaca-126">Die Reihenfolge der Matrixmultiplikation ist ebenso wichtig.</span><span class="sxs-lookup"><span data-stu-id="2eaca-126">Similarly, the order of matrix multiplication is important.</span></span> <span data-ttu-id="2eaca-127">ABC ist im Allgemeinen nicht identisch mit PK.</span><span class="sxs-lookup"><span data-stu-id="2eaca-127">In general, ABC is not the same as BAC.</span></span>  
  
 <span data-ttu-id="2eaca-128">Die <xref:System.Drawing.Drawing2D.Matrix> Klasse bietet mehrere Methoden zum Erstellen einer zusammengesetzten Transformations: <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>, <xref:System.Drawing.Drawing2D.Matrix.Rotate%2A>, <xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A>, <xref:System.Drawing.Drawing2D.Matrix.Scale%2A>, <xref:System.Drawing.Drawing2D.Matrix.Shear%2A>, und <xref:System.Drawing.Drawing2D.Matrix.Translate%2A>.</span><span class="sxs-lookup"><span data-stu-id="2eaca-128">The <xref:System.Drawing.Drawing2D.Matrix> class provides several methods for building a composite transformation: <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>, <xref:System.Drawing.Drawing2D.Matrix.Rotate%2A>, <xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A>, <xref:System.Drawing.Drawing2D.Matrix.Scale%2A>, <xref:System.Drawing.Drawing2D.Matrix.Shear%2A>, and <xref:System.Drawing.Drawing2D.Matrix.Translate%2A>.</span></span> <span data-ttu-id="2eaca-129">Im folgende Beispiel wird die Matrix eine zusammengesetzte Transformation, die zuerst eine Drehung um 30 Grad festlegen, und klicken Sie dann mit einem Faktor von 2 in y-Richtung skaliert, und übersetzt dann 5 Einheiten in X-Richtung erstellt:</span><span class="sxs-lookup"><span data-stu-id="2eaca-129">The following example creates the matrix of a composite transformation that first rotates 30 degrees, then scales by a factor of 2 in the y direction, and then translates 5 units in the x direction:</span></span>  
  
 [!code-csharp[System.Drawing.CoordinateSystems#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.CoordinateSystems/CS/Class1.cs#11)]
 [!code-vb[System.Drawing.CoordinateSystems#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.CoordinateSystems/VB/Class1.vb#11)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/9fef7451-bddf-4c68-9350-400d1f1f25a3">
      <span data-ttu-id="2eaca-130">Koordinatensysteme und Transformationen</span>
      <span class="sxs-lookup">
        <span data-stu-id="2eaca-130">Coordinate Systems and Transformations</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2eaca-131">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-131">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2eaca-132">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class as the identity matrix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-132">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class as the identity matrix.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix (System.Drawing.Rectangle rect, System.Drawing.Point[] plgpts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Point[] plgpts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As Rectangle, plgpts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix(System::Drawing::Rectangle rect, cli::array &lt;System::Drawing::Point&gt; ^ plgpts);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.Matrix : System.Drawing.Rectangle * System.Drawing.Point[] -&gt; System.Drawing.Drawing2D.Matrix" Usage="new System.Drawing.Drawing2D.Matrix (rect, plgpts)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="plgpts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="2eaca-133">A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle to be transformed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-133">A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle to be transformed.</span>
          </span>
        </param>
        <param name="plgpts">
          <span data-ttu-id="2eaca-134">An array of three <see cref="T:System.Drawing.Point" /> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-134">An array of three <see cref="T:System.Drawing.Point" /> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed.</span>
          </span>
          <span data-ttu-id="2eaca-135">The lower-right corner of the parallelogram is implied by the first three corners.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-135">The lower-right corner of the parallelogram is implied by the first three corners.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaca-136">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class to the geometric transform defined by the specified rectangle and array of points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-136">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class to the geometric transform defined by the specified rectangle and array of points.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaca-137">Diese Methode initialisiert die neue Matrix aus, so, dass es die geometrische Transformation darstellt, die die vom angegebene Rechteck ist die `rect` Parameter, um die von den drei Punkten in definierte Parallelogramm der `plgpts` Parameter.</span><span class="sxs-lookup"><span data-stu-id="2eaca-137">This method initializes the new Matrix such that it represents the geometric transform that maps the rectangle specified by the `rect` parameter to the parallelogram defined by the three points in the `plgpts` parameter.</span></span> <span data-ttu-id="2eaca-138">Der erste Punkt in der oberen linken Ecke des Rechtecks zugeordnet ist die `plgpts` Array ist, den zweiten Punkt die oberen rechten Ecke zugeordnet ist, und die unteren linken Ecke der dritte Punkt zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="2eaca-138">The upper-left corner of the rectangle is mapped to the first point in the `plgpts` array, the upper-right corner is mapped to the second point, and the lower-left corner is mapped to the third point.</span></span> <span data-ttu-id="2eaca-139">Die unten rechts des Parallelogramms ergibt sich die ersten drei Ecken.</span><span class="sxs-lookup"><span data-stu-id="2eaca-139">The lower-right point of the parallelogram is implied by the first three.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix (System.Drawing.RectangleF rect, System.Drawing.PointF[] plgpts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.PointF[] plgpts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As RectangleF, plgpts As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix(System::Drawing::RectangleF rect, cli::array &lt;System::Drawing::PointF&gt; ^ plgpts);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.Matrix : System.Drawing.RectangleF * System.Drawing.PointF[] -&gt; System.Drawing.Drawing2D.Matrix" Usage="new System.Drawing.Drawing2D.Matrix (rect, plgpts)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="plgpts" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="2eaca-140">A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle to be transformed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-140">A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle to be transformed.</span>
          </span>
        </param>
        <param name="plgpts">
          <span data-ttu-id="2eaca-141">An array of three <see cref="T:System.Drawing.PointF" /> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-141">An array of three <see cref="T:System.Drawing.PointF" /> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed.</span>
          </span>
          <span data-ttu-id="2eaca-142">The lower-right corner of the parallelogram is implied by the first three corners.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-142">The lower-right corner of the parallelogram is implied by the first three corners.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaca-143">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class to the geometric transform defined by the specified rectangle and array of points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-143">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class to the geometric transform defined by the specified rectangle and array of points.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaca-144">Diese Methode initialisiert die neue <xref:System.Drawing.Drawing2D.Matrix> so, dass es die geometrische Transformation darstellt, die die vom angegebene Rechteck ist die `rect` Parameter, um die von den drei Punkten in definierte Parallelogramm der `plgpts` Parameter.</span><span class="sxs-lookup"><span data-stu-id="2eaca-144">This method initializes the new <xref:System.Drawing.Drawing2D.Matrix> such that it represents the geometric transform that maps the rectangle specified by the `rect` parameter to the parallelogram defined by the three points in the `plgpts` parameter.</span></span> <span data-ttu-id="2eaca-145">Der erste Punkt in der oberen linken Ecke des Rechtecks zugeordnet ist die `plgpts` Array ist, den zweiten Punkt die oberen rechten Ecke zugeordnet ist, und die unteren linken Ecke der dritte Punkt zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="2eaca-145">The upper-left corner of the rectangle is mapped to the first point in the `plgpts` array, the upper-right corner is mapped to the second point, and the lower-left corner is mapped to the third point.</span></span> <span data-ttu-id="2eaca-146">Die unten rechts des Parallelogramms ergibt sich die ersten drei Ecken.</span><span class="sxs-lookup"><span data-stu-id="2eaca-146">The lower-right point of the parallelogram is implied by the first three.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix (float m11, float m12, float m21, float m22, float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 m11, float32 m12, float32 m21, float32 m22, float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (m11 As Single, m12 As Single, m21 As Single, m22 As Single, dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix(float m11, float m12, float m21, float m22, float dx, float dy);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.Matrix : single * single * single * single * single * single -&gt; System.Drawing.Drawing2D.Matrix" Usage="new System.Drawing.Drawing2D.Matrix (m11, m12, m21, m22, dx, dy)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="m11" Type="System.Single" />
        <Parameter Name="m12" Type="System.Single" />
        <Parameter Name="m21" Type="System.Single" />
        <Parameter Name="m22" Type="System.Single" />
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="m11">
          <span data-ttu-id="2eaca-147">The value in the first row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-147">The value in the first row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <param name="m12">
          <span data-ttu-id="2eaca-148">The value in the first row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-148">The value in the first row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <param name="m21">
          <span data-ttu-id="2eaca-149">The value in the second row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-149">The value in the second row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <param name="m22">
          <span data-ttu-id="2eaca-150">The value in the second row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-150">The value in the second row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <param name="dx">
          <span data-ttu-id="2eaca-151">The value in the third row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-151">The value in the third row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <param name="dy">
          <span data-ttu-id="2eaca-152">The value in the third row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-152">The value in the third row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaca-153">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class with the specified elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-153">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class with the specified elements.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Matrix Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Drawing2D.Matrix Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Drawing2D::Matrix ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Drawing.Drawing2D.Matrix" Usage="matrix.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Matrix</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2eaca-154">Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-154">Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2eaca-155">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that this method creates.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-155">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that this method creates.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="matrix.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2eaca-156">Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-156">Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaca-157">Aufrufen von `Dispose` können die von diesem verwendeten Ressourcen <xref:System.Drawing.Drawing2D.Matrix> Objekt, für andere Zwecke verschoben werden.</span><span class="sxs-lookup"><span data-stu-id="2eaca-157">Calling `Dispose` allows the resources used by this <xref:System.Drawing.Drawing2D.Matrix> object to be reallocated for other purposes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Elements">
      <MemberSignature Language="C#" Value="public float[] Elements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32[] Elements" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.Elements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Elements As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;float&gt; ^ Elements { cli::array &lt;float&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Elements : single[]" Usage="System.Drawing.Drawing2D.Matrix.Elements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eaca-158">Gets an array of floating-point values that represents the elements of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-158">Gets an array of floating-point values that represents the elements of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eaca-159">Ein Array von Gleitkommawerten, das die Elemente dieser <see cref="T:System.Drawing.Drawing2D.Matrix" /> darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-159">An array of floating-point values that represents the elements of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaca-160">Die Elemente m11 m12, m21, m22, Dx und dy, der die <xref:System.Drawing.Drawing2D.Matrix> durch die Werte im Array in dieser Reihenfolge dargestellt werden.</span><span class="sxs-lookup"><span data-stu-id="2eaca-160">The elements m11, m12, m21, m22, dx, and dy of the <xref:System.Drawing.Drawing2D.Matrix> are represented by the values in the array in that order.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="matrix.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="2eaca-161">The object to test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-161">The object to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaca-162">Tests whether the specified object is a <see cref="T:System.Drawing.Drawing2D.Matrix" /> and is identical to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-162">Tests whether the specified object is a <see cref="T:System.Drawing.Drawing2D.Matrix" /> and is identical to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2eaca-163">This method returns <see langword="true" /> if <paramref name="obj" /> is the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> identical to this <see cref="T:System.Drawing.Drawing2D.Matrix" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-163">This method returns <see langword="true" /> if <paramref name="obj" /> is the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> identical to this <see cref="T:System.Drawing.Drawing2D.Matrix" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Matrix ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Matrix ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="matrix.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2eaca-164">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-164">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="matrix.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2eaca-165">Returns a hash code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-165">Returns a hash code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2eaca-166">The hash code for this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-166">The hash code for this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invert">
      <MemberSignature Language="C#" Value="public void Invert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Invert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invert();" />
      <MemberSignature Language="F#" Value="member this.Invert : unit -&gt; unit" Usage="matrix.Invert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2eaca-167">Inverts this <see cref="T:System.Drawing.Drawing2D.Matrix" />, if it is invertible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-167">Inverts this <see cref="T:System.Drawing.Drawing2D.Matrix" />, if it is invertible.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2eaca-168">Das folgende Codebeispiel erstellt eine Matrix und invertiert:</span><span class="sxs-lookup"><span data-stu-id="2eaca-168">The following code example creates a matrix and inverts it:</span></span>  
  
```csharp  
Matrix myMatrix = new Matrix(3, 5, 1, 2, 2, 4);  
 myMatrix.Invert();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIdentity">
      <MemberSignature Language="C#" Value="public bool IsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.IsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsIdentity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsIdentity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsIdentity : bool" Usage="System.Drawing.Drawing2D.Matrix.IsIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eaca-169">Gets a value indicating whether this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is the identity matrix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-169">Gets a value indicating whether this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is the identity matrix.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eaca-170">Diese Eigenschaft ist <see langword="true" />, wenn es sich bei dieser <see cref="T:System.Drawing.Drawing2D.Matrix" /> um die Identitätsmatrix handelt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-170">This property is <see langword="true" /> if this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is identity; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInvertible">
      <MemberSignature Language="C#" Value="public bool IsInvertible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInvertible" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.IsInvertible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInvertible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInvertible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInvertible : bool" Usage="System.Drawing.Drawing2D.Matrix.IsInvertible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eaca-171">Gets a value indicating whether this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is invertible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-171">Gets a value indicating whether this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is invertible.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eaca-172">Diese Eigenschaft ist <see langword="true" />, wenn die <see cref="T:System.Drawing.Drawing2D.Matrix" /> invertierbar ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-172">This property is <see langword="true" /> if this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is invertible; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Multiply">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2eaca-173">Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-173">Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public void Multiply (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Multiply(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Multiply(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Multiply : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="matrix.Multiply matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="2eaca-174">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is to be multiplied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-174">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is to be multiplied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaca-175">Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the matrix specified in the <paramref name="matrix" /> parameter, by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-175">Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the matrix specified in the <paramref name="matrix" /> parameter, by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2eaca-176">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>.</span><span class="sxs-lookup"><span data-stu-id="2eaca-176">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public void Multiply (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Multiply(class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Multiply(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.Multiply : System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.Multiply (matrix, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="2eaca-177">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is to be multiplied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-177">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is to be multiplied.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="2eaca-178">The <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that represents the order of the multiplication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-178">The <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that represents the order of the multiplication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaca-179">Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the matrix specified in the <paramref name="matrix" /> parameter, and in the order specified in the <paramref name="order" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-179">Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the matrix specified in the <paramref name="matrix" /> parameter, and in the order specified in the <paramref name="order" /> parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaca-180">Wenn die angegebene Reihenfolge ist <xref:System.Drawing.Drawing2D.MatrixOrder.Prepend>wird in diesem <xref:System.Drawing.Drawing2D.Matrix> multipliziert die angegebene Matrix vorangestellt wird.</span><span class="sxs-lookup"><span data-stu-id="2eaca-180">If the specified order is <xref:System.Drawing.Drawing2D.MatrixOrder.Prepend>, this <xref:System.Drawing.Drawing2D.Matrix> is multiplied by the specified matrix in a prepended order.</span></span> <span data-ttu-id="2eaca-181">Wenn die angegebene Reihenfolge ist <xref:System.Drawing.Drawing2D.MatrixOrder.Append>wird in diesem <xref:System.Drawing.Drawing2D.Matrix> multipliziert die angegebene Matrix angefügt wird.</span><span class="sxs-lookup"><span data-stu-id="2eaca-181">If the specified order is <xref:System.Drawing.Drawing2D.MatrixOrder.Append>, this <xref:System.Drawing.Drawing2D.Matrix> is multiplied by the specified matrix in an appended order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eaca-182">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Control.Paint> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="2eaca-182">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="2eaca-183">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="2eaca-183">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2eaca-184">Erstellt drei Matrizen.</span><span class="sxs-lookup"><span data-stu-id="2eaca-184">Creates three matrices.</span></span>  
  
-   <span data-ttu-id="2eaca-185">Listet den Inhalt der Matrix 1 auf dem Bildschirm.</span><span class="sxs-lookup"><span data-stu-id="2eaca-185">Lists the contents of matrix 1 to the screen.</span></span>  
  
-   <span data-ttu-id="2eaca-186">Multipliziert die Matrix 1 mit 2-Matrix, und speichert das Ergebnis in der Matrix 1.</span><span class="sxs-lookup"><span data-stu-id="2eaca-186">Multiplies matrix 1 by matrix 2 and stores the result in matrix 1.</span></span>  
  
-   <span data-ttu-id="2eaca-187">Listet den Inhalt der Matrix 1 auf dem Bildschirm.</span><span class="sxs-lookup"><span data-stu-id="2eaca-187">Lists the contents of matrix 1 to the screen.</span></span>  
  
-   <span data-ttu-id="2eaca-188">Multipliziert das Ergebnis in der Matrix 1 von 3-Matrix gespeichert, und speichert das Ergebnis wieder in 1-Matrix.</span><span class="sxs-lookup"><span data-stu-id="2eaca-188">Multiplies the result stored in matrix 1 by matrix 3, and again stores the result in matrix 1.</span></span>  
  
-   <span data-ttu-id="2eaca-189">Listet den Inhalt der Matrix 1 auf dem Bildschirm.</span><span class="sxs-lookup"><span data-stu-id="2eaca-189">Lists the contents of matrix 1 to the screen.</span></span>  
  
-   <span data-ttu-id="2eaca-190">Zeichnet ein Rechteck auf dem Bildschirm vor dem Anwenden der Matrixtransformation 1 (blaue Rechteck).</span><span class="sxs-lookup"><span data-stu-id="2eaca-190">Draws a rectangle to the screen prior to applying the matrix 1 transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="2eaca-191">Wendet die Transformation auf das Rechteck.</span><span class="sxs-lookup"><span data-stu-id="2eaca-191">Applies the transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="2eaca-192">Zeichnet die transformierte Rechteck auf dem Bildschirm (das rote Rechteck), verwenden dieselben Koordinaten wie das vorherige Rechteck.</span><span class="sxs-lookup"><span data-stu-id="2eaca-192">Draws the transformed rectangle to the screen (the red rectangle), using the same coordinates as the previous rectangle.</span></span>  
  
 <span data-ttu-id="2eaca-193">Beachten Sie, dass das rote Rechteck um den Faktor zwei in horizontaler Richtung skaliert wurde dann um 90 Grad gedreht, und klicken Sie dann in der y-Richtung verschoben (übersetzte) 250 Punkte in der X-Richtung und 50 Punkt.</span><span class="sxs-lookup"><span data-stu-id="2eaca-193">Notice that the red rectangle has been scaled by a factor of two in the horizontal direction, then rotated 90 degrees, and then moved (translated) 250 points in the x direction and 50 points in the y direction.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetX">
      <MemberSignature Language="C#" Value="public float OffsetX { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 OffsetX" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.OffsetX" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OffsetX As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float OffsetX { float get(); };" />
      <MemberSignature Language="F#" Value="member this.OffsetX : single" Usage="System.Drawing.Drawing2D.Matrix.OffsetX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eaca-194">Gets the x translation value (the dx value, or the element in the third row and first column) of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-194">Gets the x translation value (the dx value, or the element in the third row and first column) of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eaca-195">Der Wert der Verschiebung in x-Richtung für diese <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-195">The x translation value of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetY">
      <MemberSignature Language="C#" Value="public float OffsetY { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 OffsetY" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.OffsetY" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OffsetY As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float OffsetY { float get(); };" />
      <MemberSignature Language="F#" Value="member this.OffsetY : single" Usage="System.Drawing.Drawing2D.Matrix.OffsetY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2eaca-196">Gets the y translation value (the dy value, or the element in the third row and second column) of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-196">Gets the y translation value (the dy value, or the element in the third row and second column) of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2eaca-197">Der Wert der Verschiebung in y-Richtung für diese <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-197">The y translation value of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="matrix.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2eaca-198">Resets this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to have the elements of the identity matrix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-198">Resets this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to have the elements of the identity matrix.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaca-199">Die Elemente auf der wichtigsten diagonale in der die Identitätsmatrix sind 1.</span><span class="sxs-lookup"><span data-stu-id="2eaca-199">The elements on the main diagonal of the identity matrix are 1.</span></span> <span data-ttu-id="2eaca-200">Alle anderen Elemente der Identitätsmatrix sind 0.</span><span class="sxs-lookup"><span data-stu-id="2eaca-200">All other elements of the identity matrix are 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eaca-201">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Control.Paint> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="2eaca-201">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="2eaca-202">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="2eaca-202">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2eaca-203">Erstellt eine Skalierungsmatrix.</span><span class="sxs-lookup"><span data-stu-id="2eaca-203">Creates a scaling matrix.</span></span>  
  
-   <span data-ttu-id="2eaca-204">Listet die Matrixelemente auf dem Bildschirm an.</span><span class="sxs-lookup"><span data-stu-id="2eaca-204">Lists the matrix elements to the screen.</span></span>  
  
-   <span data-ttu-id="2eaca-205">Setzt die Matrix auf Identität zurück.</span><span class="sxs-lookup"><span data-stu-id="2eaca-205">Resets the matrix to identity.</span></span>  
  
-   <span data-ttu-id="2eaca-206">Listet die Elemente auf dem Bildschirm an.</span><span class="sxs-lookup"><span data-stu-id="2eaca-206">Lists the elements to the screen.</span></span>  
  
-   <span data-ttu-id="2eaca-207">Übersetzt die Matrix um 50 Punkte auf der x-Achse und 40 Punkte auf der y-Achse an.</span><span class="sxs-lookup"><span data-stu-id="2eaca-207">Translates the matrix by 50 points in the x-axis and 40 points in the y-axis.</span></span>  
  
-   <span data-ttu-id="2eaca-208">Listet die Elemente der übersetzten Matrix auf dem Bildschirm an.</span><span class="sxs-lookup"><span data-stu-id="2eaca-208">Lists the elements of the translated matrix to the screen.</span></span>  
  
-   <span data-ttu-id="2eaca-209">Zeichnet ein Rechteck gezeichnet wird, auf dem Bildschirm vor dem Anwenden der Matrixtransformation (die blaue Rechteck).</span><span class="sxs-lookup"><span data-stu-id="2eaca-209">Draws a rectangle is drawn to the screen prior to applying the matrix transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="2eaca-210">Wendet die Transformation auf das Rechteck.</span><span class="sxs-lookup"><span data-stu-id="2eaca-210">Applies the transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="2eaca-211">Zeichnet, die das transformierte Rechteck auf dem Bildschirm (das rote Rechteck), verwenden dieselben Koordinaten wie das vorherige Rechteck gezeichnet wird.</span><span class="sxs-lookup"><span data-stu-id="2eaca-211">Draws the transformed rectangle is drawn to the screen (the red rectangle), using the same coordinates as the previous rectangle.</span></span>  
  
 <span data-ttu-id="2eaca-212">Beachten Sie, dass durch ein rote Rechteck wurde (aufgrund der zurücksetzen) nicht skaliert, aber in der x- und y-Achse übersetzt wurde.</span><span class="sxs-lookup"><span data-stu-id="2eaca-212">Notice that the red rectangle was not scaled (because of the reset) but was translated in the x-axis and y-axis.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Rotate">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2eaca-213">Applies a clockwise rotation of the specified angle about the origin to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-213">Applies a clockwise rotation of the specified angle about the origin to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rotate(float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rotate (angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rotate(float angle);" />
      <MemberSignature Language="F#" Value="member this.Rotate : single -&gt; unit" Usage="matrix.Rotate angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="angle">
          <span data-ttu-id="2eaca-214">The angle of the rotation, in degrees.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-214">The angle of the rotation, in degrees.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaca-215">Prepend to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> a clockwise rotation, around the origin and by the specified angle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-215">Prepend to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> a clockwise rotation, around the origin and by the specified angle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2eaca-216">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.Matrix.Rotate%28System.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span><span class="sxs-lookup"><span data-stu-id="2eaca-216">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Rotate%28System.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (float angle, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rotate(float32 angle, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rotate (angle As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rotate(float angle, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.Rotate : single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.Rotate (angle, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle">
          <span data-ttu-id="2eaca-217">The angle (extent) of the rotation, in degrees.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-217">The angle (extent) of the rotation, in degrees.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="2eaca-218">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the rotation is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-218">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the rotation is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaca-219">Applies a clockwise rotation of an amount specified in the <paramref name="angle" /> parameter, around the origin (zero x and y coordinates) for this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-219">Applies a clockwise rotation of an amount specified in the <paramref name="angle" /> parameter, around the origin (zero x and y coordinates) for this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2eaca-220">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Control.Paint> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="2eaca-220">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="2eaca-221">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="2eaca-221">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2eaca-222">Zeichnet ein Rechteck auf dem Bildschirm vor dem Anwenden einer Drehungstransformation (die blaue Rechteck).</span><span class="sxs-lookup"><span data-stu-id="2eaca-222">Draws a rectangle to the screen prior to applying a rotation transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="2eaca-223">Erstellt eine Matrix aus, und um 45 Grad gedreht.</span><span class="sxs-lookup"><span data-stu-id="2eaca-223">Creates a matrix and rotates it 45 degrees.</span></span>  
  
-   <span data-ttu-id="2eaca-224">Wird dieser Matrixtransformation auf das Rechteck angewendet.</span><span class="sxs-lookup"><span data-stu-id="2eaca-224">Applies this matrix transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="2eaca-225">Zeichnet das transformierte Rechteck auf dem Bildschirm (das rote Rechteck).</span><span class="sxs-lookup"><span data-stu-id="2eaca-225">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="2eaca-226">Beachten Sie, dass das rote Rechteck gedreht wurde um die 0, 0 Bildschirmkoordinaten.</span><span class="sxs-lookup"><span data-stu-id="2eaca-226">Notice that the red rectangle has been rotated around the 0, 0 screen coordinates.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RotateAt">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2eaca-227">Applies a clockwise rotation about the specified point to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the rotation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-227">Applies a clockwise rotation about the specified point to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the rotation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RotateAt">
      <MemberSignature Language="C#" Value="public void RotateAt (float angle, System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateAt(float32 angle, valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateAt (angle As Single, point As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateAt(float angle, System::Drawing::PointF point);" />
      <MemberSignature Language="F#" Value="member this.RotateAt : single * System.Drawing.PointF -&gt; unit" Usage="matrix.RotateAt (angle, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="angle">
          <span data-ttu-id="2eaca-228">The angle (extent) of the rotation, in degrees.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-228">The angle (extent) of the rotation, in degrees.</span>
          </span>
        </param>
        <param name="point">
          <span data-ttu-id="2eaca-229">A <see cref="T:System.Drawing.PointF" /> that represents the center of the rotation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-229">A <see cref="T:System.Drawing.PointF" /> that represents the center of the rotation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaca-230">Applies a clockwise rotation to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> around the point specified in the <paramref name="point" /> parameter, and by prepending the rotation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-230">Applies a clockwise rotation to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> around the point specified in the <paramref name="point" /> parameter, and by prepending the rotation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2eaca-231">Das folgende Codebeispiel veranschaulicht die Verwendung einer <xref:System.Drawing.Drawing2D.Matrix> und <xref:System.Drawing.Drawing2D.GraphicsPath.Transform%2A> Methode, um eine Zeichenfolge zu drehen.</span><span class="sxs-lookup"><span data-stu-id="2eaca-231">The following code example demonstrates using a <xref:System.Drawing.Drawing2D.Matrix> and the <xref:System.Drawing.Drawing2D.GraphicsPath.Transform%2A> method to rotate a string.</span></span> <span data-ttu-id="2eaca-232">In diesem Beispiel wird mit Windows Forms verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="2eaca-232">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="2eaca-233">Erstellen Sie ein Formular, und fügen Sie den folgenden Code hinein.</span><span class="sxs-lookup"><span data-stu-id="2eaca-233">Create a form and paste the following code into it.</span></span> <span data-ttu-id="2eaca-234">Rufen Sie die `DrawVerticalStringFromBottomUp` -Methode in der des Formulars <xref:System.Windows.Forms.Control.Paint> -Ereignishandler übergeben `e` als <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="2eaca-234">Call the `DrawVerticalStringFromBottomUp` method in the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.MiscExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.MiscExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.MiscExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateAt">
      <MemberSignature Language="C#" Value="public void RotateAt (float angle, System.Drawing.PointF point, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateAt(float32 angle, valuetype System.Drawing.PointF point, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateAt (angle As Single, point As PointF, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateAt(float angle, System::Drawing::PointF point, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.RotateAt : single * System.Drawing.PointF * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.RotateAt (angle, point, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle">
          <span data-ttu-id="2eaca-235">The angle of the rotation, in degrees.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-235">The angle of the rotation, in degrees.</span>
          </span>
        </param>
        <param name="point">
          <span data-ttu-id="2eaca-236">A <see cref="T:System.Drawing.PointF" /> that represents the center of the rotation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-236">A <see cref="T:System.Drawing.PointF" /> that represents the center of the rotation.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="2eaca-237">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the rotation is applied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-237">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the rotation is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaca-238">Applies a clockwise rotation about the specified point to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-238">Applies a clockwise rotation about the specified point to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2eaca-239">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Control.Paint> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="2eaca-239">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="2eaca-240">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="2eaca-240">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2eaca-241">Zeichnet ein Rechteck auf dem Bildschirm vor dem Anwenden einer Drehungstransformation (die blaue Rechteck).</span><span class="sxs-lookup"><span data-stu-id="2eaca-241">Draws a rectangle to the screen prior to applying a rotation transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="2eaca-242">Erstellt eine Matrix aus, und um einen angegebenen Punkt um 45 Grad gedreht.</span><span class="sxs-lookup"><span data-stu-id="2eaca-242">Creates a matrix and rotates it 45 degrees around a specified point.</span></span>  
  
-   <span data-ttu-id="2eaca-243">Weist dieser Matrix Transformation auf das Rechteck ist.</span><span class="sxs-lookup"><span data-stu-id="2eaca-243">Applies this matrix transform is to the rectangle.</span></span>  
  
-   <span data-ttu-id="2eaca-244">Zeichnet das transformierte Rechteck auf dem Bildschirm (das rote Rechteck).</span><span class="sxs-lookup"><span data-stu-id="2eaca-244">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="2eaca-245">Beachten Sie, dass das rote Rechteck um die obere linke Ecke des Rechtecks gedreht wurde (der angegebene Drehung Punkt der <xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A> Methode).</span><span class="sxs-lookup"><span data-stu-id="2eaca-245">Notice that the red rectangle has been rotated around the upper left-hand corner of the rectangle (the rotation point specified the <xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A> method).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Scale">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2eaca-246">Applies the specified scale vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the scale vector.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-246">Applies the specified scale vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the scale vector.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (float scaleX, float scaleY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float32 scaleX, float32 scaleY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Single, scaleY As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(float scaleX, float scaleY);" />
      <MemberSignature Language="F#" Value="member this.Scale : single * single -&gt; unit" Usage="matrix.Scale (scaleX, scaleY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Single" />
        <Parameter Name="scaleY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="scaleX">
          <span data-ttu-id="2eaca-247">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the x-axis direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-247">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the x-axis direction.</span>
          </span>
        </param>
        <param name="scaleY">
          <span data-ttu-id="2eaca-248">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the y-axis direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-248">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the y-axis direction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaca-249">Applies the specified scale vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the scale vector.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-249">Applies the specified scale vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the scale vector.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2eaca-250">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.Matrix.Scale%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span><span class="sxs-lookup"><span data-stu-id="2eaca-250">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Scale%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (float scaleX, float scaleY, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float32 scaleX, float32 scaleY, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Single, scaleY As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(float scaleX, float scaleY, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.Scale : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.Scale (scaleX, scaleY, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Single" />
        <Parameter Name="scaleY" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="scaleX">
          <span data-ttu-id="2eaca-251">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the x-axis direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-251">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the x-axis direction.</span>
          </span>
        </param>
        <param name="scaleY">
          <span data-ttu-id="2eaca-252">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the y-axis direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-252">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the y-axis direction.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="2eaca-253">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the scale vector is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-253">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the scale vector is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaca-254">Applies the specified scale vector (<paramref name="scaleX" /> and <paramref name="scaleY" />) to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> using the specified order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-254">Applies the specified scale vector (<paramref name="scaleX" /> and <paramref name="scaleY" />) to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> using the specified order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2eaca-255">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Control.Paint> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="2eaca-255">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="2eaca-256">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="2eaca-256">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2eaca-257">Zeichnet ein Rechteck auf dem Bildschirm vor dem Anwenden einer Skalierung Transformation (die blaue Rechteck).</span><span class="sxs-lookup"><span data-stu-id="2eaca-257">Draws a rectangle to the screen prior to applying a scaling transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="2eaca-258">Erstellt eine Matrix, und sie 3 auf der x-Achse und 2 auf der y-Achse skaliert werden kann.</span><span class="sxs-lookup"><span data-stu-id="2eaca-258">Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis.</span></span>  
  
-   <span data-ttu-id="2eaca-259">Wird dieser Matrixtransformation auf das Rechteck angewendet.</span><span class="sxs-lookup"><span data-stu-id="2eaca-259">Applies this matrix transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="2eaca-260">Zeichnet das transformierte Rechteck auf dem Bildschirm (das rote Rechteck).</span><span class="sxs-lookup"><span data-stu-id="2eaca-260">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="2eaca-261">Beachten Sie, dass das rote Rechteck um den Faktor 3 auf der x-Achse und 2 auf der y-Achse, einschließlich der oberen linken Ecke des Rechtecks (dem Anfangspunkt des Rechtecks) skaliert wurde.</span><span class="sxs-lookup"><span data-stu-id="2eaca-261">Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Shear">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2eaca-262">Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the shear vector.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-262">Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the shear vector.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Shear">
      <MemberSignature Language="C#" Value="public void Shear (float shearX, float shearY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Shear(float32 shearX, float32 shearY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shear (shearX As Single, shearY As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shear(float shearX, float shearY);" />
      <MemberSignature Language="F#" Value="member this.Shear : single * single -&gt; unit" Usage="matrix.Shear (shearX, shearY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shearX" Type="System.Single" />
        <Parameter Name="shearY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="shearX">
          <span data-ttu-id="2eaca-263">The horizontal shear factor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-263">The horizontal shear factor.</span>
          </span>
        </param>
        <param name="shearY">
          <span data-ttu-id="2eaca-264">The vertical shear factor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-264">The vertical shear factor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaca-265">Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the shear transformation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-265">Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the shear transformation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaca-266">Bei dieser Methode angewendete Transformation ist eine reine Scherung nur, wenn einer der Parameter 0 ist.</span><span class="sxs-lookup"><span data-stu-id="2eaca-266">The transformation applied in this method is a pure shear only if one of the parameters is 0.</span></span> <span data-ttu-id="2eaca-267">Angewendet werden, um ein Rechteck am ursprünglichen Speicherort, wenn die `shearY` Faktor gleich 0 ist, die Transformation wird am unteren Rand verschoben, horizontal von `shearX` Mal die Höhe des Rechtecks.</span><span class="sxs-lookup"><span data-stu-id="2eaca-267">Applied to a rectangle at the origin, when the `shearY` factor is 0, the transformation moves the bottom edge horizontally by `shearX` times the height of the rectangle.</span></span> <span data-ttu-id="2eaca-268">Wenn die `shearX` Faktor ist 0, vertikal um den rechten Rand verschoben `shearY` Mal die Breite des Rechtecks.</span><span class="sxs-lookup"><span data-stu-id="2eaca-268">When the `shearX` factor is 0, it moves the right edge vertically by `shearY` times the width of the rectangle.</span></span> <span data-ttu-id="2eaca-269">Vorsicht ist in der Reihenfolge auf, wenn beide Parameter ungleich NULL sind, da die Ergebnisse schwer vorherzusagen sind.</span><span class="sxs-lookup"><span data-stu-id="2eaca-269">Caution is in order when both parameters are nonzero, because the results are hard to predict.</span></span> <span data-ttu-id="2eaca-270">Wenn beide Faktoren 1 sind, die Transformation ist beispielsweise im singular (daher nicht invertierbar), und die gesamte Fläche auf einer einzelnen Zeile.</span><span class="sxs-lookup"><span data-stu-id="2eaca-270">For example, if both factors are 1, the transformation is singular (hence noninvertible), squeezing the entire plane to a single line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eaca-271">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Control.Paint> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="2eaca-271">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="2eaca-272">Der Code führt die folgende Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="2eaca-272">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="2eaca-273">Zeichnet ein Rechteck auf dem Bildschirm mit einem grünen Stift, bevor eine Skalierungstransformation zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="2eaca-273">Draws a rectangle to the screen, using a green pen, prior to applying a scaling transform.</span></span>  
  
-   <span data-ttu-id="2eaca-274">Erstellt eine <xref:System.Drawing.Drawing2D.Matrix> und wird verwendet, um einer globalen Koordinaten Transformation für das <xref:System.Drawing.Graphics>.</span><span class="sxs-lookup"><span data-stu-id="2eaca-274">Creates a <xref:System.Drawing.Drawing2D.Matrix> and uses it to set a world-coordinate transform for the <xref:System.Drawing.Graphics>.</span></span>  
  
-   <span data-ttu-id="2eaca-275">Zeichnet ein weiteres Rechteck mit einem roten Stift.</span><span class="sxs-lookup"><span data-stu-id="2eaca-275">Draws another rectangle using a red pen.</span></span>  
  
-   <span data-ttu-id="2eaca-276">Zeichnet eine Ellipse mit einem blauen Stift.</span><span class="sxs-lookup"><span data-stu-id="2eaca-276">Draws an ellipse using a blue pen.</span></span>  
  
 <span data-ttu-id="2eaca-277">Das Ergebnis ist ein grünes Rechteck, ein rotes Parallelogramm und eine transformierte Ellipse Blau.</span><span class="sxs-lookup"><span data-stu-id="2eaca-277">The result is a green rectangle, a red parallelogram and a transformed, blue ellipse.</span></span> <span data-ttu-id="2eaca-278">Beachten Sie, dass das grüne Rechteck (vor der Transformation gezeichnet) direkt verwendet die im angegebenen Koordinaten den <xref:System.Drawing.Graphics.DrawRectangle%2A> aufrufen.</span><span class="sxs-lookup"><span data-stu-id="2eaca-278">Notice that the green rectangle (drawn prior to setting the transform) directly uses the coordinates supplied in the <xref:System.Drawing.Graphics.DrawRectangle%2A> call.</span></span> <span data-ttu-id="2eaca-279">Die anderen beiden Abbildungen werden vor dem Zeichnen transformiert.</span><span class="sxs-lookup"><span data-stu-id="2eaca-279">The other two figures are transformed prior to drawing.</span></span> <span data-ttu-id="2eaca-280">Das Rechteck transformiert wird, um ein Parallelogramm (Rot), und die Ellipse (Blau) entsprechend in das transformierte Parallelogramm transformiert wird.</span><span class="sxs-lookup"><span data-stu-id="2eaca-280">The rectangle is transformed to a parallelogram (red), and the ellipse (blue) is transformed to fit into the transformed parallelogram.</span></span> <span data-ttu-id="2eaca-281">Beachten Sie, dass die unteren Rands des Rechtecks auf der x-Achse um den Faktor doppelt so groß wie die Höhe des Rechtecks und bilden somit Parallelogramms (Schertransformation) verschoben wird.</span><span class="sxs-lookup"><span data-stu-id="2eaca-281">Notice the bottom of the rectangle is moved (sheared) in the x-axis by a factor of two times the height of the rectangle, thus forming the parallelogram.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shear">
      <MemberSignature Language="C#" Value="public void Shear (float shearX, float shearY, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Shear(float32 shearX, float32 shearY, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shear (shearX As Single, shearY As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shear(float shearX, float shearY, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.Shear : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.Shear (shearX, shearY, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shearX" Type="System.Single" />
        <Parameter Name="shearY" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="shearX">
          <span data-ttu-id="2eaca-282">The horizontal shear factor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-282">The horizontal shear factor.</span>
          </span>
        </param>
        <param name="shearY">
          <span data-ttu-id="2eaca-283">The vertical shear factor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-283">The vertical shear factor.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="2eaca-284">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the shear is applied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-284">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the shear is applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaca-285">Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-285">Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eaca-286">Bei dieser Methode angewendete Transformation ist eine reine Scherung nur, wenn einer der Parameter 0 ist.</span><span class="sxs-lookup"><span data-stu-id="2eaca-286">The transformation applied in this method is a pure shear only if one of the parameters is 0.</span></span> <span data-ttu-id="2eaca-287">Angewendet werden, um ein Rechteck am ursprünglichen Speicherort, wenn die `shearY` Faktor gleich 0 ist, die Transformation wird am unteren Rand verschoben, horizontal von `shearX` Mal die Höhe des Rechtecks.</span><span class="sxs-lookup"><span data-stu-id="2eaca-287">Applied to a rectangle at the origin, when the `shearY` factor is 0, the transformation moves the bottom edge horizontally by `shearX` times the height of the rectangle.</span></span> <span data-ttu-id="2eaca-288">Wenn die `shearX` Faktor ist 0, vertikal um den rechten Rand verschoben `shearY` Mal die Breite des Rechtecks.</span><span class="sxs-lookup"><span data-stu-id="2eaca-288">When the `shearX` factor is 0, it moves the right edge vertically by `shearY` times the width of the rectangle.</span></span> <span data-ttu-id="2eaca-289">Vorsicht ist in der Reihenfolge auf, wenn beide Parameter ungleich NULL sind, da die Ergebnisse schwer vorherzusagen sind.</span><span class="sxs-lookup"><span data-stu-id="2eaca-289">Caution is in order when both parameters are nonzero, because the results are hard to predict.</span></span> <span data-ttu-id="2eaca-290">Wenn beide Faktoren 1 sind, die Transformation ist beispielsweise im singular (daher nicht invertierbar), und die gesamte Fläche auf einer einzelnen Zeile.</span><span class="sxs-lookup"><span data-stu-id="2eaca-290">For example, if both factors are 1, the transformation is singular (hence noninvertible), squeezing the entire plane to a single line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eaca-291">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.Matrix.Shear%28System.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="2eaca-291">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Shear%28System.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransformPoints">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2eaca-292">Applies the geometric transform this <see cref="T:System.Drawing.Drawing2D.Matrix" /> represents to an array of points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-292">Applies the geometric transform this <see cref="T:System.Drawing.Drawing2D.Matrix" /> represents to an array of points.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransformPoints">
      <MemberSignature Language="C#" Value="public void TransformPoints (System.Drawing.Point[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformPoints(valuetype System.Drawing.Point[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformPoints (pts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformPoints(cli::array &lt;System::Drawing::Point&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.TransformPoints : System.Drawing.Point[] -&gt; unit" Usage="matrix.TransformPoints pts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="2eaca-293">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-293">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaca-294">Applies the geometric transform represented by this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to a specified array of points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-294">Applies the geometric transform represented by this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to a specified array of points.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2eaca-295">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Control.Paint> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="2eaca-295">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="2eaca-296">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="2eaca-296">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2eaca-297">Erstellt ein Array von Punkten, die ein Rechteck zu bilden.</span><span class="sxs-lookup"><span data-stu-id="2eaca-297">Creates an array of points that form a rectangle.</span></span>  
  
-   <span data-ttu-id="2eaca-298">Zeichnet dieses Array von Punkten (auf dem Bildschirm vor dem Anwenden einer Skalierung Transformation (die blaue Rechteck).</span><span class="sxs-lookup"><span data-stu-id="2eaca-298">Draws this array of points (to the screen prior to applying a scaling transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="2eaca-299">Erstellt eine Matrix, und sie 3 auf der x-Achse und 2 auf der y-Achse skaliert werden kann.</span><span class="sxs-lookup"><span data-stu-id="2eaca-299">Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis.</span></span>  
  
-   <span data-ttu-id="2eaca-300">Wendet diese Matrixtransformation auf das Array von Punkten.</span><span class="sxs-lookup"><span data-stu-id="2eaca-300">Applies this matrix transform to the array of points.</span></span>  
  
-   <span data-ttu-id="2eaca-301">Zeichnet das transformierte Array auf dem Bildschirm (das rote Rechteck).</span><span class="sxs-lookup"><span data-stu-id="2eaca-301">Draws the transformed array to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="2eaca-302">Beachten Sie, dass das rote Rechteck um den Faktor 3 auf der x-Achse und 2 auf der y-Achse, einschließlich der oberen linken Ecke des Rechtecks (dem Anfangspunkt des Rechtecks) skaliert wurde.</span><span class="sxs-lookup"><span data-stu-id="2eaca-302">Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformPoints">
      <MemberSignature Language="C#" Value="public void TransformPoints (System.Drawing.PointF[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformPoints(valuetype System.Drawing.PointF[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformPoints (pts As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformPoints(cli::array &lt;System::Drawing::PointF&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.TransformPoints : System.Drawing.PointF[] -&gt; unit" Usage="matrix.TransformPoints pts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="2eaca-303">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points to transform.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-303">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points to transform.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaca-304">Applies the geometric transform represented by this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to a specified array of points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-304">Applies the geometric transform represented by this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to a specified array of points.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2eaca-305">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.Matrix.TransformPoints%28System.Drawing.Point%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="2eaca-305">For an example, see <xref:System.Drawing.Drawing2D.Matrix.TransformPoints%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransformVectors">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2eaca-306">Multiplies each vector in an array by the matrix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-306">Multiplies each vector in an array by the matrix.</span>
          </span>
          <span data-ttu-id="2eaca-307">The translation elements of this matrix (third row) are ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-307">The translation elements of this matrix (third row) are ignored.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransformVectors">
      <MemberSignature Language="C#" Value="public void TransformVectors (System.Drawing.Point[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformVectors(valuetype System.Drawing.Point[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformVectors (pts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformVectors(cli::array &lt;System::Drawing::Point&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.TransformVectors : System.Drawing.Point[] -&gt; unit" Usage="matrix.TransformVectors pts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="2eaca-308">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-308">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaca-309">Applies only the scale and rotate components of this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to the specified array of points.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-309">Applies only the scale and rotate components of this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to the specified array of points.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2eaca-310">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Control.Paint> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="2eaca-310">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="2eaca-311">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="2eaca-311">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2eaca-312">Erstellt ein Array von Punkten, die ein Rechteck zu bilden.</span><span class="sxs-lookup"><span data-stu-id="2eaca-312">Creates an array of points that form a rectangle.</span></span>  
  
-   <span data-ttu-id="2eaca-313">Zeichnet dieses Array von Punkten, auf dem Bildschirm vor dem Anwenden einer Skalierung Transformation (die blaue Rechteck).</span><span class="sxs-lookup"><span data-stu-id="2eaca-313">Draws this array of points to the screen prior to applying a scaling transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="2eaca-314">Erstellt eine Matrix und übersetzt sie mit 100 an beiden Achsen skaliert diese mit 3 auf der x-Achse und 2 auf der y-Achse.</span><span class="sxs-lookup"><span data-stu-id="2eaca-314">Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis, and translates it by 100 in both axes.</span></span>  
  
-   <span data-ttu-id="2eaca-315">Listet die Matrixelemente auf dem Bildschirm an.</span><span class="sxs-lookup"><span data-stu-id="2eaca-315">Lists the matrix elements to the screen.</span></span>  
  
-   <span data-ttu-id="2eaca-316">Wendet diese Matrixtransformation auf das Array von Punkten.</span><span class="sxs-lookup"><span data-stu-id="2eaca-316">Applies this matrix transform to the array of points.</span></span>  
  
-   <span data-ttu-id="2eaca-317">Zeichnet das transformierte Array auf dem Bildschirm (das rote Rechteck).</span><span class="sxs-lookup"><span data-stu-id="2eaca-317">Draws the transformed array to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="2eaca-318">Beachten Sie, dass das rote Rechteck um den Faktor 3 auf der x-Achse und 2 auf der y-Achse, einschließlich der oberen linken Ecke des Rechtecks (dem Anfangspunkt des Rechtecks) skaliert wurde der Verschiebungsvektor (die beiden letzten Elemente der Matrix) wird jedoch ignoriert.</span><span class="sxs-lookup"><span data-stu-id="2eaca-318">Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle) but the translation vector (the last two elements of the matrix) is ignored.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformVectors">
      <MemberSignature Language="C#" Value="public void TransformVectors (System.Drawing.PointF[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformVectors(valuetype System.Drawing.PointF[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformVectors (pts As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformVectors(cli::array &lt;System::Drawing::PointF&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.TransformVectors : System.Drawing.PointF[] -&gt; unit" Usage="matrix.TransformVectors pts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="2eaca-319">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-319">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaca-320">Multiplies each vector in an array by the matrix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-320">Multiplies each vector in an array by the matrix.</span>
          </span>
          <span data-ttu-id="2eaca-321">The translation elements of this matrix (third row) are ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-321">The translation elements of this matrix (third row) are ignored.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2eaca-322">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.Matrix.TransformVectors%28System.Drawing.Point%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="2eaca-322">For an example, see <xref:System.Drawing.Drawing2D.Matrix.TransformVectors%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Translate">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2eaca-323">Applies the specified translation vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the translation vector.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-323">Applies the specified translation vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the translation vector.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public void Translate (float offsetX, float offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate(float32 offsetX, float32 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Translate (offsetX As Single, offsetY As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Translate(float offsetX, float offsetY);" />
      <MemberSignature Language="F#" Value="member this.Translate : single * single -&gt; unit" Usage="matrix.Translate (offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Single" />
        <Parameter Name="offsetY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="offsetX">
          <span data-ttu-id="2eaca-324">The x value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-324">The x value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <param name="offsetY">
          <span data-ttu-id="2eaca-325">The y value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-325">The y value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaca-326">Applies the specified translation vector (<paramref name="offsetX" /> and <paramref name="offsetY" />) to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the translation vector.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-326">Applies the specified translation vector (<paramref name="offsetX" /> and <paramref name="offsetY" />) to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the translation vector.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2eaca-327">Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.Matrix.Translate%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span><span class="sxs-lookup"><span data-stu-id="2eaca-327">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Translate%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public void Translate (float offsetX, float offsetY, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate(float32 offsetX, float32 offsetY, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Translate (offsetX As Single, offsetY As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Translate(float offsetX, float offsetY, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.Translate : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.Translate (offsetX, offsetY, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Single" />
        <Parameter Name="offsetY" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="offsetX">
          <span data-ttu-id="2eaca-328">The x value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-328">The x value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <param name="offsetY">
          <span data-ttu-id="2eaca-329">The y value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-329">The y value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="2eaca-330">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the translation is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-330">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the translation is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaca-331">Applies the specified translation vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-331">Applies the specified translation vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2eaca-332">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Control.Paint> Ereignisobjekt.</span><span class="sxs-lookup"><span data-stu-id="2eaca-332">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="2eaca-333">Der Code führt die folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="2eaca-333">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="2eaca-334">Zeichnet ein Rechteck auf dem Bildschirm vor dem Anwenden von TranslateTransform (die blaue Rechteck).</span><span class="sxs-lookup"><span data-stu-id="2eaca-334">Draws a rectangle to the screen prior to applying a translate transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="2eaca-335">Erstellt eine Matrix, und übersetzt sie mit 100 an beiden Achsen.</span><span class="sxs-lookup"><span data-stu-id="2eaca-335">Creates a matrix and translates it by 100 in both axes.</span></span>  
  
-   <span data-ttu-id="2eaca-336">Bezieht sich dieser Matrixtransformation auf das Rechteck</span><span class="sxs-lookup"><span data-stu-id="2eaca-336">Applies this matrix transform to the rectangle,</span></span>  
  
-   <span data-ttu-id="2eaca-337">Zeichnet das transformierte Rechteck auf dem Bildschirm (das rote Rechteck).</span><span class="sxs-lookup"><span data-stu-id="2eaca-337">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="2eaca-338">Beachten Sie, dass der Anfang des roten Rechtecks 100 Punkte an beiden Achsen vom Anfang des blauen Dreiecks ist.</span><span class="sxs-lookup"><span data-stu-id="2eaca-338">Notice that the beginning of the red rectangle is located 100 points in both axes from the beginning of the blue triangle.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VectorTransformPoints">
      <MemberSignature Language="C#" Value="public void VectorTransformPoints (System.Drawing.Point[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VectorTransformPoints(valuetype System.Drawing.Point[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.VectorTransformPoints(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub VectorTransformPoints (pts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VectorTransformPoints(cli::array &lt;System::Drawing::Point&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.VectorTransformPoints : System.Drawing.Point[] -&gt; unit" Usage="matrix.VectorTransformPoints pts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="2eaca-339">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-339">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2eaca-340">Multiplies each vector in an array by the matrix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-340">Multiplies each vector in an array by the matrix.</span>
          </span>
          <span data-ttu-id="2eaca-341">The translation elements of this matrix (third row) are ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2eaca-341">The translation elements of this matrix (third row) are ignored.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>