<Type Name="Blend" FullName="System.Drawing.Drawing2D.Blend">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1588432638493b9f84b5d46650dba3e1425c42d0" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56766615" /></Metadata><TypeSignature Language="C#" Value="public sealed class Blend" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Blend extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.Blend" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Blend" />
  <TypeSignature Language="C++ CLI" Value="public ref class Blend sealed" />
  <TypeSignature Language="F#" Value="type Blend = class" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiert ein Übergangsschema für ein <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />-Objekt. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verläufe werden häufig verwendet, um das Innere der Formen reibungslos zu schattieren. Ein Übergangsschema wird durch zwei Arrays definiert (<xref:System.Drawing.Drawing2D.Blend.Factors%2A> und <xref:System.Drawing.Drawing2D.Blend.Positions%2A>), die jeweils die gleiche Anzahl von Elementen enthalten. Jedes Element der <xref:System.Drawing.Drawing2D.Blend.Positions%2A> Array stellt einen Teil der Entfernung entlang der Farbverlaufslinie dar. Jedes Element der <xref:System.Drawing.Drawing2D.Blend.Factors%2A> Array stellt den Anteil der Anfangs- und Endfarben im Farbverlaufsübergang an der Position entlang der Farbverlaufslinie, dargestellt durch das entsprechende Element in der <xref:System.Drawing.Drawing2D.Blend.Positions%2A> Array.  
  
 Wenn entspricht z. B. Elemente der <xref:System.Drawing.Drawing2D.Blend.Positions%2A> und <xref:System.Drawing.Drawing2D.Blend.Factors%2A> Arrays sind 0.2 und 0.3 bzw. für ein linearer Farbverlauf von Blau, rot entlang einer 100 Pixel, die Farbe 20 Pixel entlang dieser Linie (20 Prozent der Entfernung) von 30 Prozent besteht aus. Blau und 70 Prozent Rot.  
  
   
  
## Examples  
 Im folgende Beispiel wird in einer Windows Forms-Umgebung verwendet werden soll. Es wird veranschaulicht, wie Sie mit der <xref:System.Drawing.Drawing2D.Blend> Klasse in Verbindung mit der <xref:System.Drawing.Drawing2D.LinearGradientBrush> Klasse zum Zeichnen einer Ellipse, die auf dem Bildschirm Blending. Ist die Ellipse auf der linken Seite, "Farbverlauf", in Rot, in der Mitte, Blau und "Farbverlauf" zurück in Blau auf der rechten Seite. Dies erfolgt über die Einstellungen in der `myFactors` und `myPositions` Arrays in der die <xref:System.Drawing.Drawing2D.Blend.Factors%2A> und <xref:System.Drawing.Drawing2D.Blend.Positions%2A> Eigenschaften. Beachten Sie, dass die <xref:System.Drawing.Drawing2D.Blend> Eigenschaft der <xref:System.Drawing.Drawing2D.LinearGradientBrush> Objekt mit dem Namen `lgBrush2` muss gleich vorgenommen werden die <xref:System.Drawing.Drawing2D.Blend> Objekt `myBlend`.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMisc#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMisc#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMisc#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/VB/form1.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Drawing2D.Blend" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Blend ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Blend.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Blend();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Drawing2D.Blend" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgende Beispiel wird in einer Windows Forms-Umgebung verwendet werden soll. Es wird veranschaulicht, wie Sie mit der <xref:System.Drawing.Drawing2D.Blend> Klasse in Verbindung mit der <xref:System.Drawing.Drawing2D.LinearGradientBrush> Klasse zum Zeichnen einer Ellipse, die auf dem Bildschirm Blending. Ist die Ellipse auf der linken Seite, "Farbverlauf", in Rot, in der Mitte, Blau und "Farbverlauf" zurück in Blau auf der rechten Seite. Dies erfolgt über die Einstellungen in der `myFactors` und `myPositions` Arrays in der die <xref:System.Drawing.Drawing2D.Blend.Factors%2A> und <xref:System.Drawing.Drawing2D.Blend.Positions%2A> Eigenschaften. Beachten Sie, dass die <xref:System.Drawing.Drawing2D.Blend> Eigenschaft der <xref:System.Drawing.Drawing2D.LinearGradientBrush> Objekt mit dem Namen `lgBrush2` muss gleich vorgenommen werden die <xref:System.Drawing.Drawing2D.Blend> Objekt `myBlend`.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMisc#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMisc#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMisc#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Blend (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Blend.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Blend(int count);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.Blend : int -&gt; System.Drawing.Drawing2D.Blend" Usage="new System.Drawing.Drawing2D.Blend count" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">Die Anzahl der Elemente im <see cref="P:System.Drawing.Drawing2D.Blend.Factors" />-Array und im <see cref="P:System.Drawing.Drawing2D.Blend.Positions" />-Array.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Drawing2D.Blend" />-Klasse mit der angegebenen Anzahl von Faktoren und Positionen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.Blend.%23ctor%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Factors">
      <MemberSignature Language="C#" Value="public float[] Factors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32[] Factors" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Blend.Factors" />
      <MemberSignature Language="VB.NET" Value="Public Property Factors As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;float&gt; ^ Factors { cli::array &lt;float&gt; ^ get(); void set(cli::array &lt;float&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Factors : single[] with get, set" Usage="System.Drawing.Drawing2D.Blend.Factors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Array von Übergangsfaktoren für den Farbverlauf ab, oder legt dieses fest.</summary>
        <value>Ein Array von Übergangsfaktoren, die die Prozentsätze der Anfangs- und Endfarbe angeben, die an der entsprechenden Position verwendet werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel sind die Elemente dieses Arrays einen Wert von 0 bis 1. 0f, 0F. Diese Elemente angeben, dass die Prozentsätze der die Farbe am Ende und der Anfangsfarbe zu verwenden, an der entsprechenden Position in blend. Ein Wert von 0,2 gibt beispielsweise an, dass die kombinierte Farbe an der angegebenen Position, von 20 Prozent der Endfarbe des Farbverlaufs und 80 Prozent der Anfangsfarbe des Farbverlaufs besteht.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Drawing.Drawing2D.Blend> Klasse durch Festlegen der <xref:System.Drawing.Drawing2D.Blend.Factors%2A> und <xref:System.Drawing.Drawing2D.Blend.Positions%2A> Eigenschaften. In diesem Beispiel wird mit Windows Forms verwendet werden soll. Fügen Sie den Code in ein Formular, importiert der <xref:System.Drawing.Drawing2D> Namespace. Behandeln Sie das <xref:System.Windows.Forms.Control.Paint> Ereignis, und rufen die `DemonstrateBlend` Methode auf und übergibt `e` als <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.Misc2#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Misc2/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Misc2#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc2/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Misc2#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc2/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Positions">
      <MemberSignature Language="C#" Value="public float[] Positions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32[] Positions" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Blend.Positions" />
      <MemberSignature Language="VB.NET" Value="Public Property Positions As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;float&gt; ^ Positions { cli::array &lt;float&gt; ^ get(); void set(cli::array &lt;float&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Positions : single[] with get, set" Usage="System.Drawing.Drawing2D.Blend.Positions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Array von Übergangspositionen für den Farbverlauf ab, oder legt dieses fest.</summary>
        <value>Ein Array von Übergangspositionen, die die Prozentsätze der Entfernung entlang der Farbverlaufslinie angeben.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Elemente dieses Arrays anzugeben Prozentsätze der Entfernung entlang der Farbverlaufslinie. So gibt beispielsweise einem Elementwert von 0.2f, dass dieser Punkt 20 Prozent der die gesamte Entfernung vom Ausgangspunkt ist. Die Elemente in diesem Array werden durch "float"-Werte zwischen 0, 0f und 1. 0f dargestellt. Das erste Element des Arrays muss 0, 0F, und das letzte Element muss auf 1. 0f.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Drawing.Drawing2D.Blend> Klasse durch Festlegen der <xref:System.Drawing.Drawing2D.Blend.Factors%2A> und <xref:System.Drawing.Drawing2D.Blend.Positions%2A> Eigenschaften. In diesem Beispiel wird mit Windows Forms verwendet werden soll. Fügen Sie den Code in ein Formular, importiert der <xref:System.Drawing.Drawing2D> Namespace. Behandeln Sie das <xref:System.Windows.Forms.Control.Paint> Ereignis, und rufen die `DemonstrateBlend` Methode auf und übergibt `e` als <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.Misc2#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Misc2/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Misc2#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc2/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Misc2#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc2/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>