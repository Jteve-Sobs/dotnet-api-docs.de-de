<Type Name="Blend" FullName="System.Drawing.Drawing2D.Blend">
  <Metadata><Meta Name="ms.openlocfilehash" Value="96b3c81f646ace9a43b02aaa327c1623e9b80b0a" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70613592" /></Metadata><TypeSignature Language="C#" Value="public sealed class Blend" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Blend extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.Blend" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Blend" />
  <TypeSignature Language="C++ CLI" Value="public ref class Blend sealed" />
  <TypeSignature Language="F#" Value="type Blend = class" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiert ein Übergangsschema für ein <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />-Objekt. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Farbverläufe werden häufig verwendet, um das Innere von Formen reibungslos zu schattieren. Ein Blend-Muster wird durch zwei Arrays (<xref:System.Drawing.Drawing2D.Blend.Factors%2A> und <xref:System.Drawing.Drawing2D.Blend.Positions%2A>) definiert, die jeweils die gleiche Anzahl von Elementen enthalten. Jedes Element des <xref:System.Drawing.Drawing2D.Blend.Positions%2A> Arrays stellt einen Anteil der Entfernung entlang der Farbverlaufslinie dar. Jedes Element des <xref:System.Drawing.Drawing2D.Blend.Factors%2A> Arrays stellt den Anteil der Anfangs-und Endfarben in der Farbverlaufs Mischung an der Position entlang der Farbverlaufslinie dar, die durch <xref:System.Drawing.Drawing2D.Blend.Positions%2A> das entsprechende Element im Array dargestellt wird.  
  
 Wenn die entsprechenden Elemente der <xref:System.Drawing.Drawing2D.Blend.Positions%2A> -und <xref:System.Drawing.Drawing2D.Blend.Factors%2A> -Arrays z. b. 0,2 bzw. 0,3 sind, für einen linearen Farbverlauf von blau zu rot entlang einer 100-Pixel-Linie, besteht die Farbe 20 Pixel entlang dieser Zeile (20 Prozent der Entfernung) aus 30%. blau und 70 Prozent rot.  
  
   
  
## Examples  
 Das folgende Beispiel ist für die Verwendung in einer Windows Forms Umgebung vorgesehen. Es wird veranschaulicht, wie die <xref:System.Drawing.Drawing2D.Blend> -Klasse zusammen mit der <xref:System.Drawing.Drawing2D.LinearGradientBrush> -Klasse verwendet wird, um eine Ellipse auf den Bildschirm zu zeichnen, dessen Farben gemischt sind. Die Ellipse ist auf der linken Seite blau, wird in der Mitte rot gemischt und auf der rechten Seite wieder in blau dargestellt. Dies erfolgt über die Einstellungen in `myFactors` den- `myPositions` und-Arrays, die in <xref:System.Drawing.Drawing2D.Blend.Positions%2A> den <xref:System.Drawing.Drawing2D.Blend.Factors%2A> Eigenschaften und verwendet werden. Beachten Sie, <xref:System.Drawing.Drawing2D.Blend> dass die- <xref:System.Drawing.Drawing2D.LinearGradientBrush> Eigenschaft des `lgBrush2` -Objekts mit dem Namen gleich <xref:System.Drawing.Drawing2D.Blend> dem `myBlend`-Objekt sein muss.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMisc#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMisc#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMisc#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/VB/form1.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Drawing2D.Blend" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Blend ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Blend.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Blend();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Drawing2D.Blend" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel ist für die Verwendung in einer Windows Forms Umgebung vorgesehen. Es wird veranschaulicht, wie die <xref:System.Drawing.Drawing2D.Blend> -Klasse zusammen mit der <xref:System.Drawing.Drawing2D.LinearGradientBrush> -Klasse verwendet wird, um eine Ellipse auf den Bildschirm zu zeichnen, dessen Farben gemischt sind. Die Ellipse ist auf der linken Seite blau, wird in der Mitte rot gemischt und auf der rechten Seite wieder in blau dargestellt. Dies erfolgt über die Einstellungen in `myFactors` den- `myPositions` und-Arrays, die in <xref:System.Drawing.Drawing2D.Blend.Positions%2A> den <xref:System.Drawing.Drawing2D.Blend.Factors%2A> Eigenschaften und verwendet werden. Beachten Sie, <xref:System.Drawing.Drawing2D.Blend> dass die- <xref:System.Drawing.Drawing2D.LinearGradientBrush> Eigenschaft des `lgBrush2` -Objekts mit dem Namen gleich <xref:System.Drawing.Drawing2D.Blend> dem `myBlend`-Objekt sein muss.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMisc#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMisc#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMisc#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Blend (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Blend.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Blend(int count);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.Blend : int -&gt; System.Drawing.Drawing2D.Blend" Usage="new System.Drawing.Drawing2D.Blend count" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">Die Anzahl der Elemente im <see cref="P:System.Drawing.Drawing2D.Blend.Factors" />-Array und im <see cref="P:System.Drawing.Drawing2D.Blend.Positions" />-Array.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Drawing2D.Blend" />-Klasse mit der angegebenen Anzahl von Faktoren und Positionen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Ein Beispiel finden Sie unter <xref:System.Drawing.Drawing2D.Blend.%23ctor%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Factors">
      <MemberSignature Language="C#" Value="public float[] Factors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32[] Factors" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Blend.Factors" />
      <MemberSignature Language="VB.NET" Value="Public Property Factors As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;float&gt; ^ Factors { cli::array &lt;float&gt; ^ get(); void set(cli::array &lt;float&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Factors : single[] with get, set" Usage="System.Drawing.Drawing2D.Blend.Factors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Array von Übergangsfaktoren für den Farbverlauf ab, oder legt dieses fest.</summary>
        <value>Ein Array von Übergangsfaktoren, die die Prozentsätze der Anfangs- und Endfarbe angeben, die an der entsprechenden Position verwendet werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel sind die Elemente dieses Arrays ein Wert zwischen 0,0 f und 1.0 f. Diese Elemente geben die Prozentsätze der Endfarbe und die Start Farbe an, die an der entsprechenden Blend-Position verwendet werden sollen. Der Wert 0,2 gibt beispielsweise an, dass die gemischte Farbe an der angegebenen Position aus 20 Prozent der Farbe für den endfarb Verlauf und 80 Prozent der Farbe für den Anfangs Farbverlauf besteht.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Drawing.Drawing2D.Blend> -Klasse durch Festlegen <xref:System.Drawing.Drawing2D.Blend.Factors%2A> der <xref:System.Drawing.Drawing2D.Blend.Positions%2A> -Eigenschaft und der-Eigenschaft verwendet wird. Dieses Beispiel ist für die Verwendung mit Windows Forms konzipiert. Fügen Sie den Code in ein Formular ein, <xref:System.Drawing.Drawing2D> das den Namespace importiert. Behandeln Sie das- <xref:System.Windows.Forms.Control.Paint> Ereignis des Formulars, `DemonstrateBlend` `e` <xref:System.Windows.Forms.PaintEventArgs>und wenden Sie die-Methode an.  
  
 [!code-cpp[System.Drawing.Misc2#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Misc2/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Misc2#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc2/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Misc2#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc2/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Positions">
      <MemberSignature Language="C#" Value="public float[] Positions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32[] Positions" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Blend.Positions" />
      <MemberSignature Language="VB.NET" Value="Public Property Positions As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;float&gt; ^ Positions { cli::array &lt;float&gt; ^ get(); void set(cli::array &lt;float&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Positions : single[] with get, set" Usage="System.Drawing.Drawing2D.Blend.Positions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Array von Übergangspositionen für den Farbverlauf ab, oder legt dieses fest.</summary>
        <value>Ein Array von Übergangspositionen, die die Prozentsätze der Entfernung entlang der Farbverlaufslinie angeben.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Elemente dieses Arrays geben Prozentsätze der Entfernung entlang der Farbverlaufslinie an. Beispielsweise gibt ein Elementwert von 0,2 f an, dass dieser Punkt 20 Prozent der Gesamt Entfernung vom Startpunkt ist. Die Elemente in diesem Array werden durch float-Werte zwischen 0,0 f und 1.0 f dargestellt. Das erste Element des Arrays muss 0,0 f sein, und das letzte Element muss 1.0 f lauten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Drawing.Drawing2D.Blend> -Klasse durch Festlegen <xref:System.Drawing.Drawing2D.Blend.Factors%2A> der <xref:System.Drawing.Drawing2D.Blend.Positions%2A> -Eigenschaft und der-Eigenschaft verwendet wird. Dieses Beispiel ist für die Verwendung mit Windows Forms konzipiert. Fügen Sie den Code in ein Formular ein, <xref:System.Drawing.Drawing2D> das den Namespace importiert. Behandeln Sie das- <xref:System.Windows.Forms.Control.Paint> Ereignis des Formulars, `DemonstrateBlend` `e` <xref:System.Windows.Forms.PaintEventArgs>und wenden Sie die-Methode an.  
  
 [!code-cpp[System.Drawing.Misc2#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Misc2/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Misc2#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc2/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Misc2#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc2/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
