<Type Name="MailMessage" FullName="System.Net.Mail.MailMessage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a41f76105f052f449c1ca450b16bfb854e19df48" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70552081" /></Metadata><TypeSignature Language="C#" Value="public class MailMessage : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MailMessage extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.MailMessage" />
  <TypeSignature Language="VB.NET" Value="Public Class MailMessage&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MailMessage : IDisposable" />
  <TypeSignature Language="F#" Value="type MailMessage = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt eine E-Mail dar, die mit der <see cref="T:System.Net.Mail.SmtpClient" />-Klasse gesendet werden kann.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Instanzen der <xref:System.Net.Mail.MailMessage> -Klasse werden zum Erstellen von e-Mail-Nachrichten verwendet, die zur Übermittlung mithilfe der <xref:System.Net.Mail.SmtpClient> -Klasse an einen SMTP-Server übermittelt werden.  
  
 Absender, Empfänger, Betreff und Text einer e-Mail-Nachricht können als Parameter angegeben werden, wenn <xref:System.Net.Mail.MailMessage.%23ctor%2A> ein- <xref:System.Net.Mail.MailMessage> Objekt zum Initialisieren eines-Objekts verwendet wird. Diese Parameter können auch festgelegt werden, oder der Zugriff erfolgt <xref:System.Net.Mail.MailMessage> über Eigenschaften des Objekts.  
  
 Die Header und Elemente der primären e-Mail-Nachricht können mithilfe der folgenden Eigenschaften der <xref:System.Net.Mail.MailMessage> -Klasse festgelegt werden.  
  
|E-Mail-Header oder Teil|Eigenschaft|  
|-------------------------|--------------|  
|Anlagen|<xref:System.Net.Mail.MailMessage.Attachments%2A>|  
|Blind Kohle Kopien (BCC)|<xref:System.Net.Mail.MailMessage.Bcc%2A>|  
|Kohle Kopien (CC)|<xref:System.Net.Mail.MailMessage.CC%2A>|  
|Inhaltstyp|<xref:System.Net.Mail.MailMessage.BodyEncoding%2A>|  
|Codierung für benutzerdefinierte Header|<xref:System.Net.Mail.MailMessage.HeadersEncoding%2A>|  
|Nachrichtentext|<xref:System.Net.Mail.MailMessage.Body%2A>|  
|Priorität|<xref:System.Net.Mail.MailMessage.Priority%2A>|  
|Erhält|<xref:System.Net.Mail.MailMessage.To%2A>|  
|Antwort an|<xref:System.Net.Mail.MailMessage.ReplyToList%2A>|  
|Sender|<xref:System.Net.Mail.MailMessage.From%2A>|  
|Betreff|<xref:System.Net.Mail.MailMessage.Subject%2A>|  
  
 Die <xref:System.Net.Mail.MailMessage> -Klasse ermöglicht es einer Anwendung auch, mithilfe der <xref:System.Net.Mail.MailMessage.Headers%2A> -Eigenschaft auf die Header Auflistung für die Nachricht zuzugreifen. Obwohl diese Auflistung schreibgeschützt ist (eine neue Auflistung kann nicht festgelegt werden), können der Auflistung benutzerdefinierte Header hinzugefügt oder daraus gelöscht werden. Alle hinzugefügten benutzerdefinierten Header werden eingeschlossen <xref:System.Net.Mail.MailMessage> , wenn die Instanz gesendet wird. Bevor eine Nachricht gesendet wird, sind nur Header in der-Auflistung enthalten, <xref:System.Net.Mail.MailMessage.Headers%2A> die dieser Auflistung speziell in der-Eigenschaft hinzugefügt werden. Nachdem eine <xref:System.Net.Mail.MailMessage> Instanz von gesendet wurde, schließt <xref:System.Net.Mail.MailMessage.Headers%2A> die-Eigenschaft auch Header ein, die mithilfe <xref:System.Net.Mail.MailMessage> der zugeordneten Eigenschaften der-Klasse oder der übergebenen <xref:System.Net.Mail.MailMessage.%23ctor%2A> Parameter festgelegt werden, <xref:System.Net.Mail.MailMessage> wenn ein-Objekt initialisiert wird.  
  
 Wenn einige e-Mail-Header falsch formatiert sind, kann dies dazu führen, dass die e-Mail beschädigt wird. Daher sollte jeder e-Mail-Header in der Headers-Auflistung, der mithilfe einer <xref:System.Net.Mail.MailMessage> Eigenschaft für die Klasse festgelegt werden <xref:System.Net.Mail.MailMessage> kann, nur mithilfe der Class-Eigenschaft oder als Parameter fest <xref:System.Net.Mail.MailMessage> gelegt werden, der übergeben wird, wenn ein <xref:System.Net.Mail.MailMessage.%23ctor%2A> -Objekt initialisiert. Die folgende Liste von e-Mail-Headern sollte nicht <xref:System.Net.Mail.MailMessage.Headers%2A> mithilfe der-Eigenschaft hinzugefügt werden. alle Werte <xref:System.Net.Mail.MailMessage.Headers%2A> , die für diese Header mithilfe der-Eigenschaft festgelegt werden, werden beim Senden der Nachricht verworfen oder überschrieben:  
  
-   BCC  
  
-   Cc  
  
-   Content-ID  
  
-   Inhalt-Speicherort  
  
-   Content-Transfer-Encoding  
  
-   Inhaltstyp  
  
-   Datum  
  
-   Von  
  
-   Wichtigkeit  
  
-   MIME-Version  
  
-   Priorität  
  
-   Antwort an  
  
-   Sender  
  
-   Beschreibung  
  
-   X-Priorität  
  
 Wenn die Anwendung keinen X-Sender-Header mithilfe der <xref:System.Net.Mail.MailMessage.Headers%2A> -Eigenschaft angibt, erstellt die <xref:System.Net.Mail.MailMessage> -Klasse eine, wenn die Nachricht gesendet wird.  
  
 Verwenden Sie <xref:System.Net.Mail.MailMessage.AlternateViews%2A> die-Eigenschaft, um Kopien einer e-Mail-Nachricht in unterschiedlichen Formaten anzugeben. Wenn Sie z. b. eine Nachricht im HTML-Format senden, sollten Sie auch eine nur-Text-Version bereitstellen, falls einige der Empfänger e-Mail-Reader verwenden, die HTML-Inhalte nicht anzeigen können. Ein Beispiel, das das Erstellen einer Nachricht mit alternativen Sichten veranschaulicht, <xref:System.Net.Mail.MailMessage.AlternateViews%2A>finden Sie unter.  
  
 Verwenden Sie <xref:System.Net.Mail.MailMessage.Attachments%2A> die-Eigenschaft, um einer e-Mail Anlagen hinzuzufügen. Ein Beispiel, das das Erstellen einer Nachricht mit einer Anlage veranschaulicht, <xref:System.Net.Mail.MailMessage.Attachments%2A>finden Sie unter.  Wenn Sie verwerfen für die MailMessage aufrufen, wird auch die Freigabe für jede referenzierte Anlage aufgerufen.  
  
 Nachdem Sie Ihre e-Mail assembliert haben, können Sie Sie mithilfe <xref:System.Net.Mail.SmtpClient.Send%2A> der <xref:System.Net.Mail.SmtpClient.SendAsync%2A> -Methode oder der-Methode senden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Erstellen und Senden einer e-Mail-Nachricht veranschaulicht, die eine Anlage enthält.  
  
 [!code-cpp[NclMailSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#6)]
 [!code-csharp[NclMailSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Mail.MailMessage" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailMessage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailMessage();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine leere Instanz der <see cref="T:System.Net.Mail.MailMessage" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 From wird auf den Wert im Network-Element für mailSettings[&lt;-SMTP&gt; -Element (Netzwerkeinstellungen)](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md)festgelegt, sofern vorhanden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailMessage (System.Net.Mail.MailAddress from, System.Net.Mail.MailAddress to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Mail.MailAddress from, class System.Net.Mail.MailAddress to) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.#ctor(System.Net.Mail.MailAddress,System.Net.Mail.MailAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (from As MailAddress, to As MailAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailMessage(System::Net::Mail::MailAddress ^ from, System::Net::Mail::MailAddress ^ to);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailMessage : System.Net.Mail.MailAddress * System.Net.Mail.MailAddress -&gt; System.Net.Mail.MailMessage" Usage="new System.Net.Mail.MailMessage (from, to)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="from" Type="System.Net.Mail.MailAddress" />
        <Parameter Name="to" Type="System.Net.Mail.MailAddress" />
      </Parameters>
      <Docs>
        <param name="from">Ein <see cref="T:System.Net.Mail.MailAddress" /> mit der Adresse des Absenders der E-Mail.</param>
        <param name="to">Eine <see cref="T:System.Net.Mail.MailAddress" /> mit der Adresse des Empfängers der E-Mail.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Mail.MailMessage" />-Klasse mithilfe des angegebenen <see cref="T:System.Net.Mail.MailAddress" />-Klassenobjekts.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.Mail.MailMessage.From%2A> -Eigenschaft wird mit `from` initialisiert, <xref:System.Net.Mail.MailMessage.To%2A> und die-Eigenschaft wird `to`mit initialisiert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Aufrufen dieses Konstruktors veranschaulicht.  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="from" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="to" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.FormatException"><paramref name="from" /> oder <paramref name="to" /> ist falsch formatiert.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailMessage (string from, string to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string from, string to) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (from As String, to As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailMessage(System::String ^ from, System::String ^ to);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailMessage : string * string -&gt; System.Net.Mail.MailMessage" Usage="new System.Net.Mail.MailMessage (from, to)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="from" Type="System.String" />
        <Parameter Name="to" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="from">Ein <see cref="T:System.String" /> mit der Adresse des Absenders der E-Mail.</param>
        <param name="to">Eine <see cref="T:System.String" /> mit den Adressen der Empfänger der E-Mail. Mehrere E-Mail-Adressen müssen mit einem Komma (,) getrennt werden.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Mail.MailMessage" />-Klasse mithilfe des angegebenen <see cref="T:System.String" />-Klassenobjekts.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.Mail.MailMessage.From%2A> -Eigenschaft wird mit `from` initialisiert, <xref:System.Net.Mail.MailMessage.To%2A> und die-Eigenschaft wird `to`mit initialisiert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Aufrufen dieses Konstruktors veranschaulicht.  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="from" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="to" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="from" /> ist <see cref="F:System.String.Empty" /> („“).  
  
- oder - 
 <paramref name="to" /> ist <see cref="F:System.String.Empty" /> („“).</exception>
        <exception cref="T:System.FormatException"><paramref name="from" /> oder <paramref name="to" /> ist falsch formatiert.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailMessage (string from, string to, string subject, string body);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string from, string to, string subject, string body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.#ctor(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (from As String, to As String, subject As String, body As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailMessage(System::String ^ from, System::String ^ to, System::String ^ subject, System::String ^ body);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailMessage : string * string * string * string -&gt; System.Net.Mail.MailMessage" Usage="new System.Net.Mail.MailMessage (from, to, subject, body)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="from" Type="System.String" />
        <Parameter Name="to" Type="System.String" />
        <Parameter Name="subject" Type="System.String" />
        <Parameter Name="body" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="from">Ein <see cref="T:System.String" /> mit der Adresse des Absenders der E-Mail.</param>
        <param name="to">Eine <see cref="T:System.String" /> mit den Adressen der Empfänger der E-Mail. Mehrere E-Mail-Adressen müssen mit einem Komma (,) getrennt werden.</param>
        <param name="subject">Ein <see cref="T:System.String" />, der den Betrefftext enthält.</param>
        <param name="body">Ein <see cref="T:System.String" />, der den Nachrichtentext enthält.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Mail.MailMessage" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Eigenschaften für das neue <xref:System.Net.Mail.MailMessage> -Objekt werden wie folgt initialisiert:  
  
|Parameter|Eigenschaft|  
|---------------|--------------|  
|`from`|<xref:System.Net.Mail.MailMessage.From%2A>|  
|`to`|<xref:System.Net.Mail.MailMessage.To%2A>|  
|`subject`|<xref:System.Net.Mail.MailMessage.Subject%2A>|  
|`body`|<xref:System.Net.Mail.MailMessage.Body%2A>|  
  
 Standardmäßig wird davon ausgegangen, dass der Betreff und der Inhalt die Standard Codierung basierend auf den Einstellungen des lokalen Computers verwenden. Verwenden Sie <xref:System.Net.Mail.MailMessage.BodyEncoding%2A> die <xref:System.Net.Mail.MailMessage.SubjectEncoding%2A> Eigenschaften und, um unterschiedliche Codierungen anzugeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Aufrufen dieses Konstruktors veranschaulicht.  
  
 [!code-cpp[NclMailSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#3)]
 [!code-csharp[NclMailSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="from" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="to" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="from" /> ist <see cref="F:System.String.Empty" /> („“).  
  
- oder - 
 <paramref name="to" /> ist <see cref="F:System.String.Empty" /> („“).</exception>
        <exception cref="T:System.FormatException"><paramref name="from" /> oder <paramref name="to" /> ist falsch formatiert.</exception>
      </Docs>
    </Member>
    <Member MemberName="AlternateViews">
      <MemberSignature Language="C#" Value="public System.Net.Mail.AlternateViewCollection AlternateViews { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.AlternateViewCollection AlternateViews" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.AlternateViews" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlternateViews As AlternateViewCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::AlternateViewCollection ^ AlternateViews { System::Net::Mail::AlternateViewCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlternateViews : System.Net.Mail.AlternateViewCollection" Usage="System.Net.Mail.MailMessage.AlternateViews" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.AlternateViewCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anlagenauflistung ab, die zum Speichern alternativer Formate des Nachrichtentexts verwendet wird.</summary>
        <value>Eine <see cref="T:System.Net.Mail.AlternateViewCollection" />, in die geschrieben werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Net.Mail.MailMessage.AlternateViews%2A> die-Eigenschaft, um Kopien einer e-Mail-Nachricht in unterschiedlichen Formaten anzugeben. Wenn Sie z. b. eine Nachricht im HTML-Format senden, sollten Sie auch eine nur-Text-Version bereitstellen, falls einige der Empfänger e-Mail-Reader verwenden, die HTML-Inhalte nicht anzeigen können.  
  
 Wenn Sie einem- <xref:System.Net.Mail.MailMessage> Objekt eine Alternative Ansicht hinzufügen möchten, erstellen Sie ein <xref:System.Net.Mail.Attachment> -Objekt für die Sicht und fügen es dann <xref:System.Net.Mail.MailMessage.AlternateViews%2A>der Auflistung hinzu, die von zurückgegeben wird. Verwenden Sie <xref:System.Net.Mail.MailMessage.Body%2A> die-Eigenschaft, um die Textversion anzugeben <xref:System.Net.Mail.MailMessage.AlternateViews%2A> , und verwenden Sie die-Auflistung, um Sichten mit anderen MIME-Typen anzugeben. Verwenden Sie <xref:System.Net.Mime.MediaTypeNames> die Klassenmember, um den MIME-Typ für die Alternative Ansicht anzugeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Erstellen und Senden einer e-Mail-Nachricht mit einem nur-Text und einer alternativen HTML-Ansicht veranschaulicht.  
  
 [!code-cpp[NclMailSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#5)]
 [!code-csharp[NclMailSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#5)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="none" />
      </Docs>
    </Member>
    <Member MemberName="Attachments">
      <MemberSignature Language="C#" Value="public System.Net.Mail.AttachmentCollection Attachments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.AttachmentCollection Attachments" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Attachments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attachments As AttachmentCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::AttachmentCollection ^ Attachments { System::Net::Mail::AttachmentCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attachments : System.Net.Mail.AttachmentCollection" Usage="System.Net.Mail.MailMessage.Attachments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.AttachmentCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anlagenauflistung ab, die zum Speichern der an diese E-Mail angefügten Daten verwendet wird.</summary>
        <value>Eine <see cref="T:System.Net.Mail.AttachmentCollection" />, in die geschrieben werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die-Auflistung, <xref:System.Net.Mail.MailMessage.Attachments%2A> die von der-Eigenschaft zurückgegeben wird, um diesem <xref:System.Net.Mail.MailMessage>eine Anlage hinzuzufügen <xref:System.IO.Stream>, z. b. eine Datei oder den Inhalt eines.  
  
 Erstellen Sie <xref:System.Net.Mail.Attachment> einen, der die anzufügenden Daten enthält oder darauf verweist, und <xref:System.Net.Mail.Attachment> fügen Sie dann der Auflistung <xref:System.Net.Mail.MailMessage.Attachments%2A>hinzu, die von zurückgegeben wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Erstellen und Senden einer e-Mail-Nachricht mit einer Anlage veranschaulicht.  
  
 [!code-cpp[NclMailSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#6)]
 [!code-csharp[NclMailSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#6)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None" />
      </Docs>
    </Member>
    <Member MemberName="Bcc">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddressCollection Bcc { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddressCollection Bcc" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Bcc" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bcc As MailAddressCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddressCollection ^ Bcc { System::Net::Mail::MailAddressCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Bcc : System.Net.Mail.MailAddressCollection" Usage="System.Net.Mail.MailMessage.Bcc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddressCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Adressenauflistung ab, die die BCC-Empfänger für diese E-Mail enthält.</summary>
        <value>Ein <see cref="T:System.Net.Mail.MailAddressCollection" />-Objekt, in das geschrieben werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie einer e-Mail-Nachricht einen Bcc-Empfänger <xref:System.Net.Mail.MailAddress> hinzufügen möchten, erstellen Sie ein-Objekt für die Adresse des Empfängers und fügen dieses <xref:System.Net.Mail.MailMessage.Bcc%2A> Objekt dann der von der-Eigenschaft zurückgegebenen-Auflistung hinzu  
  
 Wenn Empfänger eine e-Mail-Nachricht <xref:System.Net.Mail.MailMessage.Bcc%2A> anzeigen, werden die Adressen in der Regel nicht angezeigt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das <xref:System.Net.Mail.MailMessage.Bcc%2A> Hinzufügen einer Adresse zur Adress Auflistung veranschaulicht.  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None" />
      </Docs>
    </Member>
    <Member MemberName="Body">
      <MemberSignature Language="C#" Value="public string Body { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Body" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Body" />
      <MemberSignature Language="VB.NET" Value="Public Property Body As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Body { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Body : string with get, set" Usage="System.Net.Mail.MailMessage.Body" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Nachrichtentext ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.String" />, der den Nachrichtentext enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der  <xref:System.Net.Mime.ContentType> Inhalt ist " Text/Plain". <xref:System.Net.Mail.MailMessage.Body%2A> Geben Sie die für den Text verwendete Codierung mit <xref:System.Net.Mail.MailMessage.BodyEncoding%2A> der-Eigenschaft an.  
  
 Wenn der Text Inhalt in alternativen Formaten verfügbar ist, die umfangreichere Präsentations Optionen für die Empfänger bereitstellen, können Sie mithilfe der <xref:System.Net.Mail.MailMessage.AlternateViews%2A> -Eigenschaft Alternative Ansichten für den Text Inhalt angeben. Beispielsweise kann eine Anwendung sowohl den nur-Text-Text als auch eine HTML-Version des Nachrichten Texts senden. E-Mail-Leser, die HTML anzeigen können, können die HTML-Version des Texts dem Empfänger präsentieren, während Leser, die HTML nicht anzeigen können, stattdessen die nur-Text-Version der Nachricht anzeigen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Festlegen <xref:System.Net.Mail.MailMessage.Body%2A> der-Eigenschaft veranschaulicht.  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BodyEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding BodyEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding BodyEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.BodyEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property BodyEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ BodyEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BodyEncoding : System.Text.Encoding with get, set" Usage="System.Net.Mail.MailMessage.BodyEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Codierung ab, die zum Codieren des Nachrichtentexts verwendet wird, oder legt diese fest.</summary>
        <value>Eine auf den Inhalt des <see cref="T:System.Text.Encoding" /> angewendete <see cref="P:System.Net.Mail.MailMessage.Body" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der für die <xref:System.Net.Mail.MailMessage.BodyEncoding%2A> -Eigenschaft angegebene Wert legt das Zeichensatz Feld im Content-Type-Header fest. Der Standardzeichensatz `"us-ascii"`ist.  
  
 <xref:System.Net.Mail.MailMessage.BodyEncoding%2A> Wenn Sie die-Eigenschaft auf <xref:System.Text.Encoding.UTF8%2A>, <xref:System.Text.Encoding.Unicode%2A>oder <xref:System.Net.Mail.MailMessage> <xref:System.Net.Mime.TransferEncoding.Base64> <xref:System.Net.Mime.TransferEncoding> <xref:System.Text.Encoding.UTF32%2A>festlegen, wählt das Framework einen von für dieses aus.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Erstellen einer e-Mail-Nachricht, die UTF8-Codierung verwendet.  
  
 [!code-cpp[NclMailAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#3)]
 [!code-csharp[NclMailAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#3)]
 [!code-vb[NclMailAsync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Mail.MailMessage.HeadersEncoding" />
        <altmember cref="P:System.Net.Mail.MailMessage.SubjectEncoding" />
        <altmember cref="T:System.Net.Mime.TransferEncoding" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="BodyTransferEncoding">
      <MemberSignature Language="C#" Value="public System.Net.Mime.TransferEncoding BodyTransferEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mime.TransferEncoding BodyTransferEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.BodyTransferEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property BodyTransferEncoding As TransferEncoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mime::TransferEncoding BodyTransferEncoding { System::Net::Mime::TransferEncoding get(); void set(System::Net::Mime::TransferEncoding value); };" />
      <MemberSignature Language="F#" Value="member this.BodyTransferEncoding : System.Net.Mime.TransferEncoding with get, set" Usage="System.Net.Mail.MailMessage.BodyTransferEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mime.TransferEncoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Übernimmt oder bestimmt die Übertragungscodierung, die zum Codieren des Nachrichtentexts verwendet wird.</summary>
        <value>Eine auf den Inhalt des <see cref="T:System.Net.Mime.TransferEncoding" /> angewendete <see cref="P:System.Net.Mail.MailMessage.Body" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CC">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddressCollection CC { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddressCollection CC" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.CC" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CC As MailAddressCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddressCollection ^ CC { System::Net::Mail::MailAddressCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CC : System.Net.Mail.MailAddressCollection" Usage="System.Net.Mail.MailMessage.CC" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddressCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Adressenauflistung ab, die die CC-Empfänger für diese E-Mail enthält.</summary>
        <value>Ein <see cref="T:System.Net.Mail.MailAddressCollection" />-Objekt, in das geschrieben werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie einer e-Mail-Nachricht einen CC-Empfänger <xref:System.Net.Mail.MailAddress> hinzufügen möchten, erstellen Sie ein-Objekt für die Adresse des Empfängers und fügen <xref:System.Net.Mail.MailMessage.CC%2A> dieses Objekt dann der von der-Eigenschaft zurückgegebenen Auflistung hinzu  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das <xref:System.Net.Mail.MailMessage.CC%2A> Hinzufügen einer Adresse zur Adress Auflistung veranschaulicht.  
  
 [!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
 [!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None" />
      </Docs>
    </Member>
    <Member MemberName="DeliveryNotificationOptions">
      <MemberSignature Language="C#" Value="public System.Net.Mail.DeliveryNotificationOptions DeliveryNotificationOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.DeliveryNotificationOptions DeliveryNotificationOptions" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.DeliveryNotificationOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliveryNotificationOptions As DeliveryNotificationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::DeliveryNotificationOptions DeliveryNotificationOptions { System::Net::Mail::DeliveryNotificationOptions get(); void set(System::Net::Mail::DeliveryNotificationOptions value); };" />
      <MemberSignature Language="F#" Value="member this.DeliveryNotificationOptions : System.Net.Mail.DeliveryNotificationOptions with get, set" Usage="System.Net.Mail.MailMessage.DeliveryNotificationOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Mail.DeliveryNotificationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Übertragungsbenachrichtigungen für die E-Mail ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Net.Mail.DeliveryNotificationOptions" />-Wert, der die Übertragungsbenachrichtigungen für diese Nachricht enthält.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt die von der <see cref="T:System.Net.Mail.MailMessage" /> verwendeten Ressourcen frei.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="mailMessage.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle vom <see cref="T:System.Net.Mail.MailMessage" /> verwendeten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rufen Sie die <xref:System.Net.Mail.MailMessage.Dispose%2A>-Methode auf, wenn <xref:System.Net.Mail.MailMessage> nicht mehr benötigt wird. Die <xref:System.Net.Mail.MailMessage.Dispose%2A>-Methode bewirkt, dass <xref:System.Net.Mail.MailMessage> nicht mehr verwendet werden kann. Nach dem <xref:System.Net.Mail.MailMessage.Dispose%2A>Aufrufen von müssen Sie alle Verweise auf den <xref:System.Net.Mail.MailMessage> freigeben, damit der Garbage Collector den Speicher freigeben kann <xref:System.Net.Mail.MailMessage> , den der belegt hat. Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer](~/docs/standard/garbage-collection/implementing-dispose.md)verwerfen-Methode.  
  
> [!NOTE]
>  Rufen Sie immer <xref:System.Net.Mail.MailMessage.Dispose%2A> auf, bevor Sie den letzten Verweis auf das <xref:System.Net.Mail.MailMessage> freigeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Freigeben eines <xref:System.Net.Mail.MailMessage>veranschaulicht.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="mailMessage.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
        <summary>Gibt die von <see cref="T:System.Net.Mail.MailMessage" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird von der öffentlichen `Dispose()` -Methode und der <xref:System.Object.Finalize%2A> -Methode aufgerufen. `Dispose()`Ruft die geschützte `Dispose(Boolean)` Methode auf, `disposing` wobei der- `true`Parameter auf festgelegt ist. <xref:System.Object.Finalize%2A>Ruft `Dispose` auf `disposing` , wobei `false`auf gesetzt ist.  
  
 Wenn der `disposing` -Parameter auf true festgelegt ist, gibt diese Methode alle Ressourcen frei, die <xref:System.Net.Mail.MailMessage> von den verwalteten Objekten, auf die dieser verweist, Diese Methode ruft die `Dispose()`-Methode aller Objekte auf, auf die verwiesen wird.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden. Wenn Sie überschreiben, sollten Sie darauf achten, nicht auf Objekte zu verweisen, die zuvor in <see langword="Dispose" />einem früheren-Aufrufpunkt verworfen wurden. <see langword="Dispose(Boolean)" /> Weitere Informationen zum Implementieren <see langword="Dispose(Boolean)" />von finden Sie unter [Implementieren einer](~/docs/standard/garbage-collection/implementing-dispose.md)verwerfen-Methode.  
  
Weitere Informationen zu und <see langword="Dispose" /> <see cref="M:System.Object.Finalize" />finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und überschreiben [der Finalize-Methode](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</para></block>
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddress From { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddress From" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.From" />
      <MemberSignature Language="VB.NET" Value="Public Property From As MailAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddress ^ From { System::Net::Mail::MailAddress ^ get(); void set(System::Net::Mail::MailAddress ^ value); };" />
      <MemberSignature Language="F#" Value="member this.From : System.Net.Mail.MailAddress with get, set" Usage="System.Net.Mail.MailMessage.From" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Absenderadresse für die E-Mail ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Net.Mail.MailAddress" />, die die Hostadressinformationen enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die from-Adresse wird nicht überprüft oder an den aktuell angemeldeten Benutzer gebunden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Festlegen eines Werts für <xref:System.Net.Mail.MailMessage.From%2A> die-Eigenschaft veranschaulicht.  
  
 [!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
 [!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Specialized.NameValueCollection" Usage="System.Net.Mail.MailMessage.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die E-Mail-Header ab, die mit dieser E-Mail übertragen werden.</summary>
        <value>Ein <see cref="T:System.Collections.Specialized.NameValueCollection" /> , der die e-Mail-Header enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.Mail.MailMessage.Headers%2A> -Eigenschaft ermöglicht es einer Anwendung, auf die Headers-Auflistung für die Nachricht zuzugreifen. Obwohl diese Auflistung schreibgeschützt ist (eine neue Auflistung kann nicht festgelegt werden), können der Auflistung benutzerdefinierte Header hinzugefügt oder daraus gelöscht werden. Alle hinzugefügten benutzerdefinierten Header werden eingeschlossen <xref:System.Net.Mail.MailMessage> , wenn die Instanz gesendet wird. Bevor eine Nachricht gesendet wird, sind nur Header in der-Auflistung enthalten, <xref:System.Net.Mail.MailMessage.Headers%2A> die dieser Auflistung speziell in der-Eigenschaft hinzugefügt werden. Nachdem die <xref:System.Net.Mail.MailMessage> Instanz gesendet wurde, Bein <xref:System.Net.Mail.MailMessage.Headers%2A> haltet die-Eigenschaft auch Header, die mithilfe der zugeordneten Eigenschaften der-Klasse oder der übergebenen <xref:System.Net.Mail.MailMessage.%23ctor%2A> Parameter festgelegt werden, wenn <xref:System.Net.Mail.MailMessage> ein-Objekt für die <xref:System.Net.Mail.MailMessage> Initialisierung eines-Objekts verwendet wird.  
  
 Wenn einige e-Mail-Header falsch formatiert sind, kann dies dazu führen, dass die e-Mail beschädigt wird. Daher sollte jeder e-Mail-Header in der Headers-Auflistung, der mithilfe einer <xref:System.Net.Mail.MailMessage> Eigenschaft für die Klasse festgelegt werden <xref:System.Net.Mail.MailMessage> kann, nur mithilfe der Class-Eigenschaft oder als Parameter fest <xref:System.Net.Mail.MailMessage> gelegt werden, der übergeben wird, wenn ein <xref:System.Net.Mail.MailMessage.%23ctor%2A> -Objekt initialisiert. Die folgende Liste von e-Mail-Headern sollte nicht <xref:System.Net.Mail.MailMessage.Headers%2A> mithilfe der-Eigenschaft hinzugefügt werden. alle Werte <xref:System.Net.Mail.MailMessage.Headers%2A> , die für diese Header mithilfe der-Eigenschaft festgelegt werden, werden beim Senden der Nachricht verworfen oder überschrieben:  
  
-   BCC  
  
-   Cc  
  
-   Content-ID  
  
-   Inhalt-Speicherort  
  
-   Content-Transfer-Encoding  
  
-   Inhaltstyp  
  
-   Datum  
  
-   Von  
  
-   Wichtigkeit  
  
-   MIME-Version  
  
-   Priorität  
  
-   Antwort an  
  
-   Sender  
  
-   Beschreibung  
  
-   X-Priorität  
  
 Wenn die Anwendung keinen X-Sender-Header mithilfe der <xref:System.Net.Mail.MailMessage.Headers%2A> -Eigenschaft angibt, erstellt die <xref:System.Net.Mail.MailMessage> -Klasse eine, wenn die Nachricht gesendet wird.  
  
 Absender, Empfänger, Betreff und Text einer e-Mail-Nachricht können als Parameter angegeben werden, wenn <xref:System.Net.Mail.MailMessage.%23ctor%2A> ein- <xref:System.Net.Mail.MailMessage> Objekt zum Initialisieren eines-Objekts verwendet wird. Diese Parameter können auch festgelegt werden, oder der Zugriff erfolgt <xref:System.Net.Mail.MailMessage> über Eigenschaften des Objekts.  
  
 Die Header und Elemente der primären e-Mail-Nachricht können mithilfe der folgenden Eigenschaften der <xref:System.Net.Mail.MailMessage> -Klasse festgelegt werden.  
  
|E-Mail-Header oder Teil|Eigenschaft|  
|-------------------------|--------------|  
|Anlagen|<xref:System.Net.Mail.MailMessage.Attachments%2A>|  
|Blind Kohle Kopien (BCC)|<xref:System.Net.Mail.MailMessage.Bcc%2A>|  
|Kohle Kopien (CC)|<xref:System.Net.Mail.MailMessage.CC%2A>|  
|Inhaltstyp|<xref:System.Net.Mail.MailMessage.BodyEncoding%2A>|  
|Codierung für benutzerdefinierte Header|<xref:System.Net.Mail.MailMessage.HeadersEncoding%2A>|  
|Nachrichtentext|<xref:System.Net.Mail.MailMessage.Body%2A>|  
|Priorität|<xref:System.Net.Mail.MailMessage.Priority%2A>|  
|Erhält|<xref:System.Net.Mail.MailMessage.To%2A>|  
|Antwort an|<xref:System.Net.Mail.MailMessage.ReplyToList%2A>|  
|Sender|<xref:System.Net.Mail.MailMessage.From%2A>|  
|Betreff|<xref:System.Net.Mail.MailMessage.Subject%2A>|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die Header für eine e-Mail angezeigt werden.  
  
 [!code-cpp[NclMailSync#24](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#24)]
 [!code-csharp[NclMailSync#24](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeadersEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding HeadersEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding HeadersEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.HeadersEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property HeadersEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ HeadersEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeadersEncoding : System.Text.Encoding with get, set" Usage="System.Net.Mail.MailMessage.HeadersEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die für die benutzerdefinierten Header für diese E-Mail verwendete Codierung ab oder legt sie fest.</summary>
        <value>Die Codierung, die für benutzerdefinierte Header für diese e-Mail-Nachricht verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert <xref:System.Net.Mail.MailMessage.HeadersEncoding%2A> der Eigenschaft ist standardmäßig <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>auf.  
  
 SMTP-Nachrichten bestehen aus Headern und Textteilen. Die IETF-RFCs für SMTP schränken die Header-und Textteil-Namen auf ASCII ein. Die IETF-RFCs erlauben jedoch, dass Header-und Textteil-Werte Unicode-Zeichen enthalten. Wenn in einem bestimmten Wert nicht-ASCII-Zeichen vorhanden sind, wird der Wert mit einer Kombination aus Zeichencodierung (z. b. UTF8 oder Shift-JIS) gefolgt von Byte Codierung<xref:System.Net.Mime.TransferEncoding.Base64> ( <xref:System.Net.Mime.TransferEncoding.QuotedPrintable> z. b.) codiert. Das Ergebnis ist in der Regel, dass nur ASCII-Zeichen im netzwerkübertragungsstream enthalten sind.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Mail.MailMessage.BodyEncoding" />
        <altmember cref="P:System.Net.Mail.MailMessage.SubjectEncoding" />
        <altmember cref="T:System.Net.Mime.TransferEncoding" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="IsBodyHtml">
      <MemberSignature Language="C#" Value="public bool IsBodyHtml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBodyHtml" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.IsBodyHtml" />
      <MemberSignature Language="VB.NET" Value="Public Property IsBodyHtml As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBodyHtml { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsBodyHtml : bool with get, set" Usage="System.Net.Mail.MailMessage.IsBodyHtml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der E-Mail-Nachrichtentext im HTML-Format vorliegt, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn der Nachrichtentext in HTML ist. andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailPriority Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.MailPriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As MailPriority" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailPriority Priority { System::Net::Mail::MailPriority get(); void set(System::Net::Mail::MailPriority value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : System.Net.Mail.MailPriority with get, set" Usage="System.Net.Mail.MailMessage.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailPriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Priorität dieser E-Mail ab oder legt sie fest.</summary>
        <value>Eine <see cref="T:System.Net.Mail.MailPriority" />, die die Priorität dieser Nachricht enthält.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyTo">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddress ReplyTo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddress ReplyTo" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.ReplyTo" />
      <MemberSignature Language="VB.NET" Value="Public Property ReplyTo As MailAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddress ^ ReplyTo { System::Net::Mail::MailAddress ^ get(); void set(System::Net::Mail::MailAddress ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReplyTo : System.Net.Mail.MailAddress with get, set" Usage="System.Net.Mail.MailMessage.ReplyTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use ReplyToList instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("ReplyTo is obsoleted for this type.  Please use ReplyToList instead which can accept multiple addresses. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("ReplyTo is obsoleted for this type.  Please use ReplyToList instead which can accept multiple addresses. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die ReplyTo-Adresse für die E-Mail-Nachricht ab oder legt diese fest.</summary>
        <value>Eine MailAddress, die den Wert des <see cref="P:System.Net.Mail.MailMessage.ReplyTo" />-Felds angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Net.Mail.MailMessage.ReplyTo%2A> die-Eigenschaft, um eine andere Adresse <xref:System.Net.Mail.MailMessage.From%2A> als die Adresse anzugeben, die zum Beantworten dieser Nachricht verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyToList">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddressCollection ReplyToList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddressCollection ReplyToList" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.ReplyToList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReplyToList As MailAddressCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddressCollection ^ ReplyToList { System::Net::Mail::MailAddressCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReplyToList : System.Net.Mail.MailAddressCollection" Usage="System.Net.Mail.MailMessage.ReplyToList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddressCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Liste der Adressen ab, an die für die E-Mail eine Antwort gesendet werden soll.</summary>
        <value>Die Liste der Adressen, an die für die E-Mail eine Antwort gesendet werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Net.Mail.MailMessage.ReplyToList%2A> die-Eigenschaft, um die Liste der Adressen anzugeben <xref:System.Net.Mail.MailMessage.From%2A> , die nicht die Adresse ist, die zum Beantworten dieser Nachricht verwendet werden soll.  
  
 Die <xref:System.Net.Mail.MailMessage.ReplyToList%2A> -Eigenschaft ersetzt <xref:System.Net.Mail.MailMessage.ReplyTo%2A> die-Eigenschaft, die nur eine einzige Adresse zulässt, an die geantwortet werden kann.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sender">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddress Sender { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddress Sender" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Sender" />
      <MemberSignature Language="VB.NET" Value="Public Property Sender As MailAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddress ^ Sender { System::Net::Mail::MailAddress ^ get(); void set(System::Net::Mail::MailAddress ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Sender : System.Net.Mail.MailAddress with get, set" Usage="System.Net.Mail.MailMessage.Sender" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Adresse des Absenders für diese E-Mail ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Net.Mail.MailAddress" />, die die Adressinformationen des Absender enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Adresse des Absenders wird nicht überprüft oder an den aktuell angemeldeten Benutzer gebunden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Subject">
      <MemberSignature Language="C#" Value="public string Subject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subject" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Subject" />
      <MemberSignature Language="VB.NET" Value="Public Property Subject As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Subject { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Subject : string with get, set" Usage="System.Net.Mail.MailMessage.Subject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Betreffzeile für die E-Mail ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.String" />, der den Betreffinhalt enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Geben Sie die für den Betreff verwendete Codierung mithilfe der <xref:System.Net.Mail.MailMessage.SubjectEncoding%2A> -Eigenschaft an.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Festlegen <xref:System.Net.Mail.MailMessage.Subject%2A> der-Eigenschaft veranschaulicht.  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubjectEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding SubjectEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding SubjectEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.SubjectEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property SubjectEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ SubjectEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SubjectEncoding : System.Text.Encoding with get, set" Usage="System.Net.Mail.MailMessage.SubjectEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die für den Inhalt des Betreffs der E-Mail verwendete Codierung ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Text.Encoding" />, die zum Codieren der <see cref="P:System.Net.Mail.MailMessage.Subject" />-Eigenschaft verwendet wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein e-Mail-Agent Schwierigkeiten <xref:System.Net.Mail.MailMessage.SubjectEncoding%2A> mit <xref:System.Text.Encoding.Unicode%2A>hat, <xref:System.Text.Encoding.UTF8%2A>verwenden Sie.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Festlegen <xref:System.Net.Mail.MailMessage.SubjectEncoding%2A> der-Eigenschaft veranschaulicht.  
  
 [!code-cpp[NclMailASync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#3)]
 [!code-csharp[NclMailASync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#3)]
 [!code-vb[NclMailASync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Mail.MailMessage.BodyEncoding" />
        <altmember cref="P:System.Net.Mail.MailMessage.HeadersEncoding" />
        <altmember cref="T:System.Net.Mime.TransferEncoding" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="To">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddressCollection To { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddressCollection To" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.To" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property To As MailAddressCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddressCollection ^ To { System::Net::Mail::MailAddressCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.To : System.Net.Mail.MailAddressCollection" Usage="System.Net.Mail.MailMessage.To" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddressCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Adressenauflistung ab, die die Empfänger dieser E-Mail enthält.</summary>
        <value>Ein <see cref="T:System.Net.Mail.MailAddressCollection" />-Objekt, in das geschrieben werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.Mail.MailMessage.To%2A> -Eigenschaft wird verwendet, um die Adressen in der Zeile an einer e-Mail-Nachricht festzulegen. Zum Hinzufügen eines Empfängers zu einer e-Mail- <xref:System.Net.Mail.MailAddress> Nachricht erstellen Sie einen für die Adresse des Empfängers und fügen dieses Objekt dann der Auflistung hinzu, die von dieser Eigenschaft zurückgegeben wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Festlegen <xref:System.Net.Mail.MailMessage.To%2A> der-Eigenschaft veranschaulicht.  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None" />
      </Docs>
    </Member>
  </Members>
</Type>
