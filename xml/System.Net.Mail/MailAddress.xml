<Type Name="MailAddress" FullName="System.Net.Mail.MailAddress">
  <Metadata><Meta Name="ms.openlocfilehash" Value="59d1e2fd5e1bae891be285511415e491ee143afe" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57927878" /></Metadata><TypeSignature Language="C#" Value="public class MailAddress" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MailAddress extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.MailAddress" />
  <TypeSignature Language="VB.NET" Value="Public Class MailAddress" />
  <TypeSignature Language="C++ CLI" Value="public ref class MailAddress" />
  <TypeSignature Language="F#" Value="type MailAddress = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt die Adresse eines E-Mail-Absenders oder -Empfängers dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
Die <xref:System.Net.Mail.MailAddress> Klasse wird verwendet, durch die <xref:System.Net.Mail.SmtpClient> und <xref:System.Net.Mail.MailMessage> Klassen zum Speichern von Informationen zur Adresse für e-Mail-Nachrichten.  
  
Eine e-Mail-Adresse besteht aus einem <xref:System.Net.Mail.MailAddress.User%2A> Namen <xref:System.Net.Mail.MailAddress.Host%2A> Namen und optional eine <xref:System.Net.Mail.MailAddress.DisplayName%2A>. Die <xref:System.Net.Mail.MailAddress.DisplayName%2A> kann nicht-ASCII-Zeichen enthalten, wenn Sie sie codieren.  
  
Die <xref:System.Net.Mail.MailAddress> Klasse unterstützt die folgenden e-Mail-Adresse-Formate:  
  
-   Einfache Format `user@host`. Wenn eine <xref:System.Net.Mail.MailAddress.DisplayName%2A> ist nicht festgelegt ist, dies ist die e-Mail-Adressformat generiert.  
  
-   Eine standardmäßige in Anführungszeichen Anzeige Namensformat `"display name" <user@host>`. Wenn eine <xref:System.Net.Mail.MailAddress.DisplayName%2A> festgelegt ist, dies ist das Format generiert.  
  
-   Spitzen Klammern werden hinzugefügt, um die <xref:System.Net.Mail.MailAddress.User%2A> Name und <xref:System.Net.Mail.MailAddress.Host%2A> Namen verwenden, wenn diese nicht eingeschlossen sind. Z. B. `"display name" user@host` geändert wird, um `"display name" <user@host>`.
  
-   Anführungszeichen werden hinzugefügt, um die <xref:System.Net.Mail.MailAddress.DisplayName%2A>, sofern diese nicht eingeschlossen sind. Z. B. `display name <user@host>` geändert wird, um `"display name" <user@host>`.
  
-   Unicode-Zeichen werden in unterstützt die <xref:System.Net.Mail.MailAddress.DisplayName%2A> Eigenschaft.  
  
-   Ein <xref:System.Net.Mail.MailAddress.User%2A> Name in Anführungszeichen ein. Beispielsweise `"user name"@host`.  
  
-   Aufeinander folgende und nachgestellten Punkte in Benutzernamen. Beispielsweise `user...name..@host`.  
  
-   In Klammern gesetzten Domäne Literale. Beispielsweise `<user@[my domain]>`.  
  
-   Kommentare. Beispielsweise `(comment)"display name"(comment)<(comment)user(comment)@(comment)domain(comment)>(comment)`. Kommentare werden vor der Übertragung entfernt.  
  
Ein Komma wird verwendet, um Elemente in einer Liste von e-Mail-Adressen zu trennen. Ein Komma sollte daher nicht in die Anzeigenamen in einer Liste verwendet werden. Die folgenden e-Mail-Adressen dürfen dann:
  
`"John, Doe" <user@host>, "Bob, Smith" <user2@host>`  
  
Die folgenden e-Mail-Adresse würde nicht zugelassen werden:  
  
`John, Doe <user@host>, Bob, Smith <user2@host>`  
  
Anführungszeichen können in eine Zeichenfolge in Anführungszeichen eingebettet werden, aber sie müssen mit Escapezeichen versehen werden. Die folgenden e-Mail-Adressen dürfen dann:
  
`"John \"Jr\" Doe" <user@host>`  
  
`"\"John \\\"Jr\\\" Doe\" <user@host>"`  
  
Die folgenden e-Mail-Adresse würde nicht zugelassen werden:  
  
`"John "Jr" Doe" <user@host>`  
  
Wenn der Benutzername ist nicht in Anführungszeichen eingeschlossen, der Text zwischen dem Anfang der Zeichenfolge (oder ein Komma) und die Adresse, die als Teil der <xref:System.Net.Mail.MailAddress.DisplayName%2A>, einschließlich der Kommentare. Beispiel:
  
`(non comment) unquoted display (non comment) name (non comment) <user@host>`
  
Obwohl die <xref:System.Net.Mail.MailAddress> -Klasse akzeptiert eine e-Mail-Adresse als gültige, andere e-Mail-Server nicht die e-Mail-Adresse akzeptieren können.  
  
Die <xref:System.Net.Mail.MailAddress> Klasse unterstützt keine der folgenden Formate der e-Mail-Adresse:  
  
- Gemischte und ohne Anführungszeichen Anzeigenamen an. Beispielsweise `display "name" <user@host>`.
  
- Gruppen, wie definiert in RFC 2822-Abschnitt 3.4, die von der IETF veröffentlicht.  
  
- Die veraltete Benutzernamenformate `"user"."name"@host`, `user."name"@host` oder `"user".name@host`.
  
   
  
## Examples  
Im folgenden Codebeispiel wird veranschaulicht, senden eine e-Mail-Nachricht mithilfe der <xref:System.Net.Mail.SmtpClient>, <xref:System.Net.Mail.MailAddress>, und <xref:System.Net.Mail.MailMessage> Klassen.  
  
[!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
[!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Mail.MailAddress" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailAddress : string -&gt; System.Net.Mail.MailAddress" Usage="new System.Net.Mail.MailAddress address" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Ein <see cref="T:System.String" /> mit einer E-Mail-Adresse.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Mail.MailAddress" />-Klasse unter Verwendung der angegebenen Adresse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `address` Parameter kann einen Anzeigenamen und die zugeordnete e-Mail-Adresse enthalten, wenn Sie die Adresse in spitzen Klammern einschließen. Beispiel:  
  
 `"Tom Smith <tsmith@contoso.com>"`  
  
 Leerzeichen sind zwischen den Anzeigenamen und die spitzen Klammern zulässig.  
  
 Die folgende Tabelle zeigt die Eigenschaftswerte für eine <xref:System.Net.Mail.MailAddress> Objekt unter Verwendung der Beispieladresse aus dem vorherigen erstellt.  
  
|Eigenschaft|Wert|  
|--------------|-----------|  
|<xref:System.Net.Mail.MailAddress.DisplayName%2A>|`"Tom Smith"`|  
|<xref:System.Net.Mail.MailAddress.Host%2A>|`"contoso.com"`|  
|<xref:System.Net.Mail.MailAddress.User%2A>|`"tsmith"`|  
|<xref:System.Net.Mail.MailAddress.Address%2A>|`"tsmith@contoso.com"`|  
  
   
  
## Examples  
 Das folgende Codebeispiel verwendet diesen Konstruktor zum Erstellen einer <xref:System.Net.Mail.MailAddress> -Objekt für die <xref:System.Net.Mail.MailMessage.Bcc%2A> Empfänger einer e-Mail-Nachricht.  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="address" /> ist <see cref="F:System.String.Empty" /> („“).</exception>
        <exception cref="T:System.FormatException">Das Format von <paramref name="address" /> wurde nicht erkannt.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address, string displayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address, string displayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String, displayName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address, System::String ^ displayName);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailAddress : string * string -&gt; System.Net.Mail.MailAddress" Usage="new System.Net.Mail.MailAddress (address, displayName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Ein <see cref="T:System.String" /> mit einer E-Mail-Adresse.</param>
        <param name="displayName">Ein <see cref="T:System.String" />, der den <paramref name="address" /> zugeordneten Anzeigenamen enthält. Dieser Parameter kann <see langword="null" /> sein.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Mail.MailAddress" />-Klasse unter Verwendung der angegebenen Adresse und des angegebenen Anzeigenamens.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Führende und nachfolgende Leerzeichen in den Anzeigenamen wird beibehalten.  
  
 Wenn `displayName` nicht-ASCII-Zeichen enthält, der Iso-8859-1-Zeichensatz wird verwendet, für die `displayName` Codierung. Codieren von nicht-ASCII-Zeichen wird in RFC 1522, verfügbar unter erläutert [ https://www.ietf.org/ ](https://www.ietf.org/).  
  
 Wenn `address` enthält einen Anzeigenamen und `displayName` nicht `null` und ist nicht gleich <xref:System.String.Empty?displayProperty=nameWithType>, `displayName` überschreibt den Wert im angegebenen `address`.  
  
   
  
## Examples  
 Das folgende Codebeispiel verwendet diesen Konstruktor zum Erstellen <xref:System.Net.Mail.MailAddress> -Instanzen für Absender und Empfänger einer e-Mail-Nachricht.  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="address" /> ist <see cref="F:System.String.Empty" /> („“).</exception>
        <exception cref="T:System.FormatException">Das Format von <paramref name="address" /> wurde nicht erkannt.  
  
- oder - 
 <paramref name="address" /> enthält Zeichen, die kein ASCII-Format aufweisen.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address, string displayName, System.Text.Encoding displayNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address, string displayName, class System.Text.Encoding displayNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String,System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String, displayName As String, displayNameEncoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address, System::String ^ displayName, System::Text::Encoding ^ displayNameEncoding);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailAddress : string * string * System.Text.Encoding -&gt; System.Net.Mail.MailAddress" Usage="new System.Net.Mail.MailAddress (address, displayName, displayNameEncoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("We don't do anything with displayNameEncoding")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="displayNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="address">Ein <see cref="T:System.String" /> mit einer E-Mail-Adresse.</param>
        <param name="displayName">Ein <see cref="T:System.String" />, der den <paramref name="address" /> zugeordneten Anzeigenamen enthält.</param>
        <param name="displayNameEncoding">Die <see cref="T:System.Text.Encoding" />, die den für <paramref name="displayName" /> verwendeten Zeichensatz definiert.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Mail.MailAddress" />-Klasse unter Verwendung der angegebenen Adresse, des angegebenen Anzeigenamens und der angegebenen Codierung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Führende und nachfolgende Leerzeichen in den Anzeigenamen wird beibehalten.  
  
 Wenn `address` enthält einen Anzeigenamen und `displayName` nicht `null` und ist nicht gleich <xref:System.String.Empty?displayProperty=nameWithType>, `displayName` überschreibt den Wert im angegebenen `address`.  
  
 Die <xref:System.Net.Mail.MailAddress.%23ctor%2A> Methode überprüft nicht, wenn die `displayName` Parameter ist ungültig. Diese Methode entfernt die umgebende Anführungszeichen, die nicht angezeigt, indem die <xref:System.Net.Mail.MailAddress.DisplayName%2A> Eigenschaft. Anführungszeichen hinzugefügt werden vor der Übertragung, mit Ausnahme des Speicherorts <xref:System.Text.Encoding.ASCII%2A> oder <xref:System.Text.Encoding.Unicode%2A> angegeben ist, der `displayNameEncoding` Parameter. Die angegebene Codierung der `displayNameEncoding` Parameter gelten für die <xref:System.Net.Mail.MailAddress.DisplayName%2A> Eigenschaft vor der Übertragung <xref:System.Text.Encoding.ASCII%2A> oder <xref:System.Text.Encoding.Unicode%2A> angegeben ist, der `displayNameEncoding` Parameter. <xref:System.Text.Encoding.UTF8%2A> Der Standardwert ist Codierung werden, wenn keine Angabe erfolgt.  
  
 Weitere Informationen zu unterstützten e-Mail-Adresse, finden Sie unter <xref:System.Net.Mail.MailAddress>.  
  
   
  
## Examples  
 Das folgende Codebeispiel verwendet diesen Konstruktor zum Erstellen <xref:System.Net.Mail.MailAddress> Instanzen für den Absender einer e-Mail-Nachricht.  
  
 [!code-cpp[NclMailASync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#2)]
 [!code-csharp[NclMailASync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#2)]
 [!code-vb[NclMailASync#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> ist <see langword="null" />.  
  
- oder -  
 <paramref name="displayName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="address" /> ist <see cref="F:System.String.Empty" /> („“).  
  
- oder - 
 <paramref name="displayName" /> ist <see cref="F:System.String.Empty" /> („“).</exception>
        <exception cref="T:System.FormatException">Das Format von <paramref name="address" /> wurde nicht erkannt.  
  
- oder - 
 <paramref name="address" /> enthält Zeichen, die kein ASCII-Format aufweisen.</exception>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public string Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Address { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Address : string" Usage="System.Net.Mail.MailAddress.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die E-Mail-Adresse ab, die beim Erstellen dieser Instanz angegeben wurde.</summary>
        <value>Ein <see cref="T:System.String" />, der die E-Mail-Adresse enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die von dieser Eigenschaft zurückgegebene Wert schließt nicht die <xref:System.Net.Mail.MailAddress.DisplayName%2A> Informationen.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Adresse für einen Empfänger der e-Mail-Nachricht.  
  
 [!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
 [!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Net.Mail.MailAddress.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Anzeigenamen ab, der aus dem Anzeigenamen und den Adressinformationen besteht, die beim Erstellen dieser Instanz angegeben wurden.</summary>
        <value>Ein <see cref="T:System.String" />, der den Anzeigenamen enthält, andernfalls <see cref="F:System.String.Empty" /> (""), wenn beim Erstellen dieser Instanz keine Informationen über den Anzeigenamen angegeben wurden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anzeigenamen, die nicht-ASCII-Zeichen enthalten, werden im lesbaren Format zurückgegeben. Verwenden der <xref:System.Net.Mail.MailAddress.ToString%2A> das codierte Format der abzurufenden Methode der <xref:System.Net.Mail.MailAddress.DisplayName%2A>.  
  
 Einige Programme, die verwendet werden, zum Lesen von e-Mail-Adresse Anzeigen der <xref:System.Net.Mail.MailAddress.DisplayName%2A> Eigenschaftswert anstelle von oder zusätzlich die e-Mail-Adresse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Net.Mail.MailAddress.DisplayName%2A> für den Empfänger einer e-Mail-Nachricht.  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.Equals(System.Object)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="mailAddress.Equals value" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.Equals(System.Object)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="mailAddress.Equals obj" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0" />
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value">Eine <see cref="T:System.Net.Mail.MailAddress" />-Instanz, die mit der aktuellen Instanz verglichen werden soll.</param>
        <param name="obj">Eine <see cref="T:System.Net.Mail.MailAddress" />-Instanz, die mit der aktuellen Instanz verglichen werden soll.</param>
        <summary>Vergleicht zwei E-Mail-Adressen.</summary>
        <returns><see langword="true" />, wenn die beiden E-Mail-Adressen gleich sind, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="mailAddress.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Hashwert für eine E-Mail-Adresse zurück.</summary>
        <returns>Ein ganzzahliger Hashwert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.Mail.MailAddress.GetHashCode%2A> Methode gibt einen Hashcode, der die e-Mail-Adresse zurück. Dieser Wert kann als Schlüssel für Hashtabellen verwendet werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.Host" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Host As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Host { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Host : string" Usage="System.Net.Mail.MailAddress.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Hostteil der Adresse ab, der beim Erstellen dieser Instanz angegeben wurde.</summary>
        <value>Ein <see cref="T:System.String" /> , enthält der Name des Hostcomputers, die e-Mail-Adresse für akzeptiert die <see cref="P:System.Net.Mail.MailAddress.User" /> Eigenschaft.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine typische-e-Mail-Adresse, die Host-Zeichenfolge enthält alle Informationen folgenden die "`@`" anmelden. Z. B. in `"tsmith@contoso.com"`, der Host ist `"contoso.com"`.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt das Ziel einer e-Mail-Nachricht.  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="mailAddress.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Zeichenfolgenentsprechung dieser Instanz zurück.</summary>
        <returns>Ein <see cref="T:System.String" />, der den Inhalt dieser <see cref="T:System.Net.Mail.MailAddress" /> enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die von dieser Methode zurückgegebene Zeichenfolge ist nicht unbedingt identisch, mit der Zeichenfolge, die beim Erstellen die Instanz angegeben. Wenn die <xref:System.Net.Mail.MailAddress.DisplayName%2A> Eigenschaft ist nicht `null` und ungleich <xref:System.String.Empty?displayProperty=nameWithType> (""), <xref:System.Net.Mail.MailAddress.ToString%2A> gibt eine Zeichenfolge mit der folgenden Syntax:  
  
 <xref:System.Net.Mail.MailAddress.DisplayName%2A> \<<xref:System.Net.Mail.MailAddress.User%2A>@<xref:System.Net.Mail.MailAddress.Host%2A>>  
  
 Wenn <xref:System.Net.Mail.MailAddress.DisplayName%2A> ist `null` oder gleich <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Net.Mail.MailAddress.ToString%2A> gibt den Wert des der <xref:System.Net.Mail.MailAddress.Address%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt das Ziel einer e-Mail-Nachricht.  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public string User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string User" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ User { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.User : string" Usage="System.Net.Mail.MailAddress.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Benutzerinformationen aus der Adresse ab, die beim Erstellen dieser Instanz angegeben wurde.</summary>
        <value>Ein <see cref="T:System.String" />, der den Teil des Benutzernamens der <see cref="P:System.Net.Mail.MailAddress.Address" /> enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine typische-e-Mail-Adresse, die Zeichenfolge des Benutzer enthält alle Informationen, die vorherigen der "`@`" anmelden. Z. B. in `"tsmith@contoso.com"`, der Benutzer ist `"tsmith"`.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt das Ziel einer e-Mail-Nachricht.  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>