<Type Name="SmtpClient" FullName="System.Net.Mail.SmtpClient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3e64431bba560a5495178f2c7346a9da4d002c21" /><Meta Name="ms.sourcegitcommit" Value="385ff23cc00fe9aa1c93460c62603b45c2041d0b" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/22/2019" /><Meta Name="ms.locfileid" Value="74387740" /></Metadata><TypeSignature Language="C#" Value="public class SmtpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SmtpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.SmtpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class SmtpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SmtpClient : IDisposable" />
  <TypeSignature Language="F#" Value="type SmtpClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Allows applications to send email by using the Simple Mail Transfer Protocol (SMTP). The <c>SmtpClient</c> type is now obsolete.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

Die `SmtpClient`-Klasse wird zum Senden von e-Mails an einen SMTP-Server für die Übermittlung verwendet. Das SMTP-Protokoll ist in RFC 2821 definiert, das unter [https://www.ietf.org](https://www.ietf.org/)verfügbar ist.  

> [!IMPORTANT]
> Es wird nicht empfohlen, die `SmtpClient`-Klasse für die neue Entwicklung zu verwenden, da `SmtpClient` nicht viele moderne Protokolle unterstützt. Verwenden Sie stattdessen [mailkit](https://github.com/jstedfast/MailKit) oder andere Bibliotheken. Weitere Informationen finden Sie unter [SmtpClient](https://github.com/dotnet/platform-compat/blob/master/docs/DE0005.md) darf nicht auf GitHub verwendet werden.

Die `SmtpClient`-Klasse ist in xamarin veraltet. Aber:

- Es ist in der .NET Standard 2,0 und höheren Versionen enthalten und muss daher Teil jeder .NET-Implementierung sein, die diese Versionen unterstützt.
- Es ist vorhanden und kann in .NET Framework 4 bis .NET Framework 4,8 verwendet werden.
- Es ist in .net Core verwendbar, aber seine Verwendung ist nicht empfehlenswert.

Die in der folgenden Tabelle gezeigten Klassen werden verwendet, um e-Mail-Nachrichten zu erstellen, die mit <xref:System.Net.Mail.SmtpClient>gesendet werden können.  
  
|Klasse|Beschreibung|  
|-----------|-----------------|  
|<xref:System.Net.Mail.Attachment>|Stellt Dateianhänge dar. Diese Klasse ermöglicht das Anfügen von Dateien, Streams oder Text an eine e-Mail-Nachricht.|  
|<xref:System.Net.Mail.MailAddress>|Stellt die e-Mail-Adresse des Absenders und der Empfänger dar.|  
|<xref:System.Net.Mail.MailMessage>|Stellt eine E-Mail-Nachricht dar.|  
  
 Zum Erstellen und Senden einer e-Mail-Nachricht mithilfe <xref:System.Net.Mail.SmtpClient>müssen Sie die folgenden Informationen angeben:  
  
-   Der SMTP-Host Server, den Sie zum Senden von e-Mails verwenden. Weitere Informationen finden Sie in den Eigenschaften <xref:System.Net.Mail.SmtpClient.Host%2A> und <xref:System.Net.Mail.SmtpClient.Port%2A>.  
  
-   Anmelde Informationen für die Authentifizierung, wenn dies für den SMTP-Server erforderlich ist. Siehe <xref:System.Net.Mail.SmtpClient.Credentials%2A>-Eigenschaft.  
  
-   Die E-Mail-Adresse des Absenders. Weitere Informationen finden Sie in den Methoden <xref:System.Net.Mail.SmtpClient.Send%2A> und <xref:System.Net.Mail.SmtpClient.SendAsync%2A>, die einen `from`-Parameter akzeptieren. Siehe auch die <xref:System.Net.Mail.MailMessage.From%2A?displayProperty=nameWithType>-Eigenschaft.  
  
-   Die e-Mail-Adresse oder die Adressen der Empfänger. Weitere Informationen finden Sie in den Methoden <xref:System.Net.Mail.SmtpClient.Send%2A> und <xref:System.Net.Mail.SmtpClient.SendAsync%2A>, die einen `recipient`-Parameter akzeptieren. Siehe auch die <xref:System.Net.Mail.MailMessage.To%2A?displayProperty=nameWithType>-Eigenschaft.  
  
-   Der Meldungsinhalt. Weitere Informationen finden Sie in den Methoden <xref:System.Net.Mail.SmtpClient.Send%2A> und <xref:System.Net.Mail.SmtpClient.SendAsync%2A>, die einen `body`-Parameter akzeptieren. Siehe auch die <xref:System.Net.Mail.MailMessage.Body%2A?displayProperty=nameWithType>-Eigenschaft.  
  
 Wenn Sie eine Anlage mit einer e-Mail-Nachricht einschließen möchten, erstellen Sie zuerst die Anlage mithilfe der <xref:System.Net.Mail.Attachment>-Klasse, und fügen Sie Sie dann der Nachricht mithilfe der <xref:System.Net.Mail.MailMessage.Attachments%2A?displayProperty=nameWithType>-Eigenschaft hinzu. Abhängig von dem von den Empfängern verwendeten e-Mail-Reader und dem Dateityp der Anlage sind einige Empfänger möglicherweise nicht in der Lage, die Anlage zu lesen. Für Clients, die die Anlage nicht in ihrer ursprünglichen Form anzeigen können, können Sie mithilfe der Eigenschaft <xref:System.Net.Mail.MailMessage.AlternateViews%2A?displayProperty=nameWithType> Alternative Ansichten angeben.  
  
 In .NET Framework können Sie die Anwendungs-oder Computer Konfigurationsdateien zum Angeben von Standardwerten für Host, Port und Anmelde Informationen für alle <xref:System.Net.Mail.SmtpClient> Objekte verwenden. Weitere Informationen finden Sie unter [ &lt;MailSettings&gt; -Element (Netzwerkeinstellungen)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). .Net Core unterstützt das Festlegen von Standardwerten nicht. Um dieses Problem zu umgehen, müssen Sie die relevanten Eigenschaften direkt auf <xref:System.Net.Mail.SmtpClient> festlegen.  
  
 Um die e-Mail-Nachricht und den Block zu senden, während Sie darauf warten, dass die e-Mail an den SMTP-Server übermittelt wird, verwenden Sie eine der synchronen <xref:System.Net.Mail.SmtpClient.Send%2A> Methoden Verwenden Sie eine der asynchronen <xref:System.Net.Mail.SmtpClient.SendAsync%2A> Methoden, damit der Haupt Thread des Programms weiterhin ausgeführt werden kann, während die e-Mail übertragen wird. Das <xref:System.Net.Mail.SmtpClient.SendCompleted>-Ereignis wird ausgelöst, wenn ein <xref:System.Net.Mail.SmtpClient.SendAsync%2A> Vorgang abgeschlossen wird. Zum Empfangen dieses Ereignisses müssen Sie <xref:System.Net.Mail.SmtpClient.SendCompleted>einen <xref:System.Net.Mail.SendCompletedEventHandler> Delegaten hinzufügen. Der <xref:System.Net.Mail.SendCompletedEventHandler> Delegat muss auf eine Rückruf Methode verweisen, die die Benachrichtigung über <xref:System.Net.Mail.SmtpClient.SendCompleted> Ereignisse behandelt. Verwenden Sie die <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> Methode, um eine asynchrone e-Mail-Übertragung abzubrechen.  
  
> [!NOTE]
>  Wenn eine e-Mail-Übertragung durchgeführt wird und Sie <xref:System.Net.Mail.SmtpClient.SendAsync%2A> oder <xref:System.Net.Mail.SmtpClient.Send%2A> erneut anrufen, erhalten Sie eine <xref:System.InvalidOperationException>.  
  
 Die Verbindung, die von der aktuellen Instanz der <xref:System.Net.Mail.SmtpClient>-Klasse zum SMTP-Server hergestellt wird, wird möglicherweise wieder verwendet, wenn eine Anwendung mehrere Nachrichten an denselben SMTP-Server senden möchte. Dies ist besonders nützlich, wenn Authentifizierung oder Verschlüsselung verwendet wird, um eine Verbindung mit dem SMTP-Server herzustellen. Der Prozess der Authentifizierung und Einrichtung einer TLS-Sitzung kann sehr aufwändig sein. Eine Anforderung zur erneuten Einrichtung einer Verbindung für jede Nachricht, wenn eine große Menge an e-Mail an denselben SMTP-Server gesendet wird, kann sich erheblich auf die Leistung auswirken. Es gibt eine Reihe von e-Mail-Anwendungen, die e-Mail-Statusaktualisierungen, Newsletter-Distributionen oder e-Mail-Benachrichtigungen senden. Außerdem unterstützen viele e-Mail-Client Anwendungen einen Offline Modus, in dem Benutzer viele e-Mail-Nachrichten verfassen können, die später gesendet werden, wenn eine Verbindung mit dem SMTP-Server hergestellt wird. Es ist typisch für einen e-Mail-Client, alle SMTP-Nachrichten an einen bestimmten SMTP-Server (bereitgestellt vom Internet Dienstanbieter) zu senden, der diese e-Mail an andere SMTP-Server weiterleitet.  
  
 Die Implementierung der <xref:System.Net.Mail.SmtpClient> Klasse bündelt SMTP-Verbindungen, damit der Aufwand für das erneute Herstellen einer Verbindung für jede Nachricht an denselben Server vermieden werden kann. Eine Anwendung kann dasselbe <xref:System.Net.Mail.SmtpClient> Objekt wieder verwenden, um viele verschiedene e-Mails an denselben SMTP-Server und an viele verschiedene SMTP-Server zu senden. Daher gibt es keine Möglichkeit, zu bestimmen, wann eine Anwendung mit dem <xref:System.Net.Mail.SmtpClient> Objekt fertig ist, und es sollte bereinigt werden.  
  
 Wenn eine SMTP-Sitzung abgeschlossen ist und der Client die Verbindung beenden möchte, muss Sie eine Beendigungs Nachricht an den Server senden, um anzugeben, dass keine Nachrichten mehr gesendet werden müssen. Dies ermöglicht es dem Server, Ressourcen freizugeben, die der Verbindung vom Client zugeordnet sind, und die vom Client gesendeten Nachrichten zu verarbeiten.  
  
 Die <xref:System.Net.Mail.SmtpClient>-Klasse verfügt über keine `Finalize`-Methode, sodass eine Anwendung <xref:System.Net.Mail.SmtpClient.Dispose%2A> aufgerufen werden muss, um Ressourcen explizit freizugeben. Die <xref:System.Net.Mail.SmtpClient.Dispose%2A>-Methode durchläuft alle eingerichteten Verbindungen mit dem in der <xref:System.Net.Mail.SmtpClient.Host%2A>-Eigenschaft angegebenen SMTP-Server und sendet eine beendende Nachricht, gefolgt vom ordnungsgemäßen Beenden der TCP-Verbindung. Die <xref:System.Net.Mail.SmtpClient.Dispose%2A> Methode auch frei, die vom verwendeten nicht verwalteten Ressourcen der <xref:System.Net.Sockets.Socket> und verwirft optional auch die verwalteten Ressourcen.  
  
 Rufen Sie <xref:System.Net.Mail.SmtpClient.Dispose%2A> auf, wenn Sie <xref:System.Net.Mail.SmtpClient> nicht mehr benötigen. Die <xref:System.Net.Mail.SmtpClient.Dispose%2A>-Methode bewirkt, dass <xref:System.Net.Mail.SmtpClient> nicht mehr verwendet werden kann. Nachdem Sie <xref:System.Net.Mail.SmtpClient.Dispose%2A>aufgerufen haben, müssen Sie alle Verweise auf die <xref:System.Net.Mail.SmtpClient> freigeben, damit der Garbage Collector den Speicher freigeben kann, den der <xref:System.Net.Mail.SmtpClient> belegt hat.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das asynchrone Senden einer e-Mail-Nachricht veranschaulicht.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Net.Mime" />
    <related type="Article" href="~/docs/framework/network-programming/index.md">Netzwerkprogrammierung in .NET Framework</related>
    <related type="Article" href="~/docs/framework/network-programming/network-programming-samples.md">Beispiele zur Netzwerkprogrammierung</related>
    <related type="Article" href="~/docs/framework/network-programming/network-tracing.md">Netzwerkablaufverfolgung in .NET Framework</related>
    <related type="Article" href="~/docs/framework/network-programming/security-in-network-programming.md">Sicherheit in der Netzwerkprogrammierung</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpClient" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpClient" /> class by using configuration file settings.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor initialisiert die Eigenschaften <xref:System.Net.Mail.SmtpClient.Host%2A>, <xref:System.Net.Mail.SmtpClient.Credentials%2A>und <xref:System.Net.Mail.SmtpClient.Port%2A> für den neuen <xref:System.Net.Mail.SmtpClient> mithilfe der Einstellungen in den Anwendungs-oder Computer Konfigurationsdateien. Weitere Informationen finden Sie unter [ &lt;MailSettings&gt; -Element (Netzwerkeinstellungen)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Senden einer e-Mail-Nachricht veranschaulicht.  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 Ein Beispiel für den \<mailSettings-> Knoten in der Anwendungs-oder Computer Konfigurationsdatei finden Sie unter [&lt;mailSettings&gt;-Element (Netzwerkeinstellungen)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.Mail.SmtpPermission">zum Erstellen eines <see cref="T:System.Net.Mail.SmtpClient" />. Zugeordnete Enumeration: <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient (string host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (host As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient(System::String ^ host);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.SmtpClient : string -&gt; System.Net.Mail.SmtpClient" Usage="new System.Net.Mail.SmtpClient host" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host">A <see cref="T:System.String" /> that contains the name or IP address of the host computer used for SMTP transactions.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpClient" /> class that sends email by using the specified SMTP server.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der `host`-Parameter wird verwendet, um den Wert der <xref:System.Net.Mail.SmtpClient.Host%2A>-Eigenschaft zu initialisieren. Die Eigenschaften <xref:System.Net.Mail.SmtpClient.Credentials%2A> und <xref:System.Net.Mail.SmtpClient.Port%2A> werden mithilfe der Einstellungen in der Anwendungs-oder Computer Konfigurationsdatei initialisiert. Wenn `host` `null` oder gleich <xref:System.String.Empty?displayProperty=nameWithType>ist, wird <xref:System.Net.Mail.SmtpClient.Host%2A> mithilfe der Einstellungen in den Anwendungs-oder Computer Konfigurationsdateien initialisiert.  
  
 Weitere Informationen zum Verwenden der Anwendungs-und Computer Konfigurationsdateien finden Sie unter [&lt;mailSettings&gt;-Element (Netzwerkeinstellungen)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Wenn Informationen mithilfe <xref:System.Net.Mail.SmtpClient> Konstruktoren oder Eigenschaften angegeben werden, überschreiben diese Informationen die Konfigurationsdatei Einstellungen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Aufrufen dieses Konstruktors veranschaulicht.  
  
 [!code-cpp[NclMailSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#3)]
 [!code-csharp[NclMailSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.Mail.SmtpPermission">zum Erstellen eines <see cref="T:System.Net.Mail.SmtpClient" />. Zugeordnete Enumeration: <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (host As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient(System::String ^ host, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.SmtpClient : string * int -&gt; System.Net.Mail.SmtpClient" Usage="new System.Net.Mail.SmtpClient (host, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">A <see cref="T:System.String" /> that contains the name or IP address of the host used for SMTP transactions.</param>
        <param name="port">An <see cref="T:System.Int32" /> greater than zero that contains the port to be used on <paramref name="host" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpClient" /> class that sends email by using the specified SMTP server and port.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `host` und `port` Parameter legen Sie den Wert, der die <xref:System.Net.Mail.SmtpClient.Host%2A> und <xref:System.Net.Mail.SmtpClient.Port%2A> Eigenschaften bzw. Wenn `host` `null` oder gleich <xref:System.String.Empty?displayProperty=nameWithType>ist, wird <xref:System.Net.Mail.SmtpClient.Host%2A> mithilfe der Einstellungen in den Anwendungs-oder Computer Konfigurationsdateien initialisiert. Wenn `port` NULL ist, wird <xref:System.Net.Mail.SmtpClient.Port%2A> mithilfe der Einstellungen in der Anwendungs-oder Computer Konfigurationsdatei initialisiert. Die <xref:System.Net.Mail.SmtpClient.Credentials%2A>-Eigenschaft wird mit den Einstellungen in der Anwendungs-oder Computer Konfigurationsdatei initialisiert.  
  
 Weitere Informationen zum Verwenden der Anwendungs-und Computer Konfigurationsdateien finden Sie unter [&lt;mailSettings&gt;-Element (Netzwerkeinstellungen)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Wenn Informationen mithilfe <xref:System.Net.Mail.SmtpClient> Konstruktoren oder Eigenschaften angegeben werden, überschreiben diese Informationen die Konfigurationsdatei Einstellungen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Aufrufen dieses Konstruktors veranschaulicht.  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port" /> cannot be less than zero.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">, um den Port anzugeben. Zugeordnete Enumeration: <see cref="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificates : System.Security.Cryptography.X509Certificates.X509CertificateCollection" Usage="System.Net.Mail.SmtpClient.ClientCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Client certificates not used")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specify which certificates should be used to establish the Secure Sockets Layer (SSL) connection.</summary>
        <value>Eine <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />, die ein oder mehrere Client Zertifikate enthält. Der Standardwert wird von den e-Mail-Konfigurations Attributen in einer Konfigurationsdatei abgeleitet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Client Zertifikate sind standardmäßig optional. bei der Serverkonfiguration ist es jedoch möglicherweise erforderlich, dass der Client ein gültiges Zertifikat als Teil der anfänglichen Verbindungs Verhandlung präsentiert.  
  
> [!NOTE]
>  Das Framework speichert SSL-Sitzungen bei der Erstellung zwischen und versucht nach Möglichkeit, eine zwischengespeicherte Sitzung für eine neue Anforderung wiederzuverwenden. Beim Versuch, eine SSL-Sitzung wiederzuverwenden, verwendet das Framework das erste Element von <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> (sofern vorhanden) oder versucht, anonyme Sitzungen wiederzuverwenden, wenn <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> leer ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine SSL-Verbindung mit dem SMTP-Server hergestellt, und die Verbindung wird verwendet, um eine e-Mail zu senden.  
  
 [!code-csharp[NclSSLMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSSLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">MailSettings-Element (Netzwerkeinstellungen)</related>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentialsByHost Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentialsByHost Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentialsByHost" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentialsByHost ^ Credentials { System::Net::ICredentialsByHost ^ get(); void set(System::Net::ICredentialsByHost ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentialsByHost with get, set" Usage="System.Net.Mail.SmtpClient.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentialsByHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the credentials used to authenticate the sender.</summary>
        <value>Eine <see cref="T:System.Net.ICredentialsByHost" />, die die für die Authentifizierung zu verwendenden Anmelde Informationen darstellt. oder <see langword="null" />, wenn keine Anmelde Informationen angegeben wurden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für einige SMTP-Server ist es erforderlich, dass der Client authentifiziert wird, bevor der Server in seinem Auftrag eine e-Mail sendet. Wenn Sie die standardmäßigen Netzwerk Anmelde Informationen verwenden möchten, können Sie die <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> auf `true` festlegen, anstatt diese Eigenschaft festzulegen. Wenn die <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>-Eigenschaft auf `false,` festgelegt ist, wird der Wert, der in der <xref:System.Net.Mail.SmtpClient.Credentials%2A>-Eigenschaft festgelegt wird, beim Herstellen einer Verbindung mit dem Server für die Anmelde Informationen verwendet. Wenn die <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>-Eigenschaft auf `false` festgelegt ist und die <xref:System.Net.Mail.SmtpClient.Credentials%2A>-Eigenschaft nicht festgelegt wurde, wird die e-Mail anonym an den Server gesendet.  
  
 Anmeldeinformationen können auch mithilfe der Anwendungs- und Computerkonfigurationsdateien festgelegt werden. Weitere Informationen finden Sie unter [ &lt;MailSettings&gt; -Element (Netzwerkeinstellungen)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Wenn Informationen mithilfe der <xref:System.Net.Mail.SmtpClient.Credentials%2A>-Eigenschaft angegeben werden, überschreiben diese Informationen die Konfigurationsdatei Einstellungen.  
  
> [!CAUTION]
>  Wenn Sie Anmeldeinformationen für Standardauthentifizierung bereitstellen, werden diese als Nur-Text an den Server gesendet. Dies kann ein Sicherheitsproblem darstellen, da ihre Anmelde Informationen angezeigt und dann von anderen Benutzern verwendet werden können.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Festlegen der zum Senden einer e-Mail verwendeten Anmelde Informationen veranschaulicht.  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">You cannot change the value of this property when an email is being sent.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeliveryFormat">
      <MemberSignature Language="C#" Value="public System.Net.Mail.SmtpDeliveryFormat DeliveryFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.SmtpDeliveryFormat DeliveryFormat" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.DeliveryFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliveryFormat As SmtpDeliveryFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::SmtpDeliveryFormat DeliveryFormat { System::Net::Mail::SmtpDeliveryFormat get(); void set(System::Net::Mail::SmtpDeliveryFormat value); };" />
      <MemberSignature Language="F#" Value="member this.DeliveryFormat : System.Net.Mail.SmtpDeliveryFormat with get, set" Usage="System.Net.Mail.SmtpClient.DeliveryFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SmtpDeliveryFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the delivery format used by <see cref="T:System.Net.Mail.SmtpClient" /> to send email.</summary>
        <value>Das von <see cref="T:System.Net.Mail.SmtpClient" />verwendete Übermittlungs Format.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeliveryMethod">
      <MemberSignature Language="C#" Value="public System.Net.Mail.SmtpDeliveryMethod DeliveryMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.SmtpDeliveryMethod DeliveryMethod" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.DeliveryMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliveryMethod As SmtpDeliveryMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::SmtpDeliveryMethod DeliveryMethod { System::Net::Mail::SmtpDeliveryMethod get(); void set(System::Net::Mail::SmtpDeliveryMethod value); };" />
      <MemberSignature Language="F#" Value="member this.DeliveryMethod : System.Net.Mail.SmtpDeliveryMethod with get, set" Usage="System.Net.Mail.SmtpClient.DeliveryMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SmtpDeliveryMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies how outgoing email messages will be handled.</summary>
        <value>Eine <see cref="T:System.Net.Mail.SmtpDeliveryMethod" />, die die Übermittlung von e-Mail-Nachrichten angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Übermittlungs Methoden umfassen:  
  
-   Ein SMTP-Server.  
  
-   Verschieben der e-Mail in das PICKUP-Verzeichnis für IIS, das dann die Nachricht übermittelt.  
  
-   Verschieben der e-Mail in ein Verzeichnis, das von <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A> zur späteren Übermittlung durch eine andere Anwendung angegeben wird.  
  
 Der Standardwert für diese Eigenschaft kann auch in einer Computer-oder Anwendungs Konfigurationsdatei festgelegt werden. Alle Änderungen, die an der <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A>-Eigenschaft vorgenommen werden, überschreiben die Konfigurationsdatei Einstellungen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="P:System.Net.Configuration.SmtpSection.DeliveryMethod" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">&lt;mailSettings&gt;-Element (Netzwerkeinstellungen)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;SMTP-&gt;-Element (Netzwerkeinstellungen)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sends a QUIT message to the SMTP server, gracefully ends the TCP connection, and releases all resources used by the current instance of the <see cref="T:System.Net.Mail.SmtpClient" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Verbindung, die von der aktuellen Instanz der <xref:System.Net.Mail.SmtpClient>-Klasse zum SMTP-Server hergestellt wird, wird möglicherweise wieder verwendet, wenn eine Anwendung mehrere Nachrichten an denselben SMTP-Server senden möchte. Dies ist besonders nützlich, wenn Authentifizierung oder Verschlüsselung verwendet wird, um eine Verbindung mit dem SMTP-Server herzustellen. Der Prozess der Authentifizierung und Einrichtung einer TLS-Sitzung kann sehr aufwändig sein. Eine Anforderung zur erneuten Einrichtung einer Verbindung für jede Nachricht, wenn eine große Menge an e-Mail an denselben SMTP-Server gesendet wird, kann sich erheblich auf die Leistung auswirken. Es gibt eine Reihe von e-Mail-Anwendungen, die e-Mail-Statusaktualisierungen, Newsletter-Distributionen oder e-Mail-Benachrichtigungen senden. Außerdem unterstützen viele e-Mail-Client Anwendungen einen Offline Modus, in dem Benutzer viele e-Mail-Nachrichten verfassen können, die später gesendet werden, wenn eine Verbindung mit dem SMTP-Server hergestellt wird. Es ist typisch für einen e-Mail-Client, alle SMTP-Nachrichten an einen bestimmten SMTP-Server (bereitgestellt vom Internet Dienstanbieter) zu senden, der diese e-Mail an andere SMTP-Server weiterleitet.  
  
 Die Implementierung der <xref:System.Net.Mail.SmtpClient> Klasse bündelt SMTP-Verbindungen, damit der Aufwand für das erneute Herstellen einer Verbindung für jede Nachricht an denselben Server vermieden werden kann. Eine Anwendung kann dasselbe <xref:System.Net.Mail.SmtpClient> Objekt wieder verwenden, um viele verschiedene e-Mails an denselben SMTP-Server und an viele verschiedene SMTP-Server zu senden. Daher gibt es keine Möglichkeit, zu bestimmen, wann eine Anwendung mit dem <xref:System.Net.Mail.SmtpClient> Objekt fertig ist, und es sollte bereinigt werden.  
  
 Wenn eine SMTP-Sitzung abgeschlossen ist und der Client die Verbindung beenden möchte, muss Sie eine Beendigungs Nachricht an den Server senden, um anzugeben, dass keine Nachrichten mehr gesendet werden müssen. Dies ermöglicht es dem Server, Ressourcen freizugeben, die der Verbindung vom Client zugeordnet sind, und die vom Client gesendeten Nachrichten zu verarbeiten.  
  
 Die <xref:System.Net.Mail.SmtpClient.Dispose%2A>-Methode durchläuft alle eingerichteten Verbindungen und sendet eine beendende Nachricht an jeden SMTP-Server, gefolgt von einer ordnungsgemäßen Beendigung der TCP-Verbindung. Diese Methoden geben auch die nicht verwalteten Ressourcen frei, die von der <xref:System.Net.Sockets.Socket> verwendet werden, und geben optional die verwalteten Ressourcen frei.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="smtpClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sends a QUIT message to the SMTP server, gracefully ends the TCP connection, and releases all resources used by the current instance of the <see cref="T:System.Net.Mail.SmtpClient" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Verbindung, die von der aktuellen Instanz der <xref:System.Net.Mail.SmtpClient>-Klasse zum SMTP-Server hergestellt wird, wird möglicherweise wieder verwendet, wenn eine Anwendung mehrere Nachrichten an denselben SMTP-Server senden möchte. Dies ist besonders nützlich, wenn Authentifizierung oder Verschlüsselung verwendet wird, um eine Verbindung mit dem SMTP-Server herzustellen. Der Prozess der Authentifizierung und Einrichtung einer TLS-Sitzung kann sehr aufwändig sein. Eine Anforderung zur erneuten Einrichtung einer Verbindung für jede Nachricht, wenn eine große Menge an e-Mail an denselben SMTP-Server gesendet wird, kann sich erheblich auf die Leistung auswirken. Es gibt eine Reihe von e-Mail-Anwendungen, die e-Mail-Statusaktualisierungen, Newsletter-Distributionen oder e-Mail-Benachrichtigungen senden. Außerdem unterstützen viele e-Mail-Client Anwendungen einen Offline Modus, in dem Benutzer viele e-Mail-Nachrichten verfassen können, die später gesendet werden, wenn eine Verbindung mit dem SMTP-Server hergestellt wird. Es ist typisch für einen e-Mail-Client, alle SMTP-Nachrichten an einen bestimmten SMTP-Server (bereitgestellt vom Internet Dienstanbieter) zu senden, der diese e-Mail an andere SMTP-Server weiterleitet.  
  
 Die Implementierung der <xref:System.Net.Mail.SmtpClient> Klasse bündelt SMTP-Verbindungen, damit der Aufwand für das erneute Herstellen einer Verbindung für jede Nachricht an denselben Server vermieden werden kann. Eine Anwendung kann dasselbe <xref:System.Net.Mail.SmtpClient> Objekt wieder verwenden, um viele verschiedene e-Mails an denselben SMTP-Server und an viele verschiedene SMTP-Server zu senden. Daher gibt es keine Möglichkeit, zu bestimmen, wann eine Anwendung mit dem <xref:System.Net.Mail.SmtpClient> Objekt fertig ist, und es sollte bereinigt werden.  
  
 Wenn eine SMTP-Sitzung abgeschlossen ist und der Client die Verbindung beenden möchte, muss Sie eine Beendigungs Nachricht an den Server senden, um anzugeben, dass keine Nachrichten mehr gesendet werden müssen. Dies ermöglicht es dem Server, Ressourcen freizugeben, die der Verbindung vom Client zugeordnet sind, und die vom Client gesendeten Nachrichten zu verarbeiten.  
  
 Wenn Sie die <xref:System.Net.Mail.SmtpClient.Dispose%2A>-Methode für ein <xref:System.Net.Mail.SmtpClient> Objekt aufrufen, das einen asynchronen <xref:System.Net.Mail.SmtpClient.SendAsync%2A> Vorgang ausführt, wird der Sendevorgang abgebrochen, als ob die <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>-Methode aufgerufen wurde.  
  
 Die <xref:System.Net.Mail.SmtpClient>-Klasse verfügt über keine `Finalize`-Methode. Daher muss eine Anwendung <xref:System.Net.Mail.SmtpClient.Dispose%2A> aufgerufen werden, um Ressourcen explizit freizugeben.  
  
 Die <xref:System.Net.Mail.SmtpClient.Dispose%2A>-Methode durchläuft alle eingerichteten Verbindungen mit dem in der <xref:System.Net.Mail.SmtpClient.Host%2A>-Eigenschaft angegebenen SMTP-Server und sendet eine beendende Nachricht, gefolgt vom ordnungsgemäßen Beenden der TCP-Verbindung. Die <xref:System.Net.Mail.SmtpClient.Dispose%2A>-Methode gibt auch die nicht verwalteten Ressourcen frei, die von der zugrunde liegenden <xref:System.Net.Sockets.Socket>verwendet werden.  
  
 Rufen Sie <xref:System.Net.Mail.SmtpClient.Dispose%2A> auf, wenn Sie <xref:System.Net.Mail.SmtpClient> nicht mehr benötigen. Die <xref:System.Net.Mail.SmtpClient.Dispose%2A>-Methode bewirkt, dass <xref:System.Net.Mail.SmtpClient> nicht mehr verwendet werden kann. Nachdem Sie <xref:System.Net.Mail.SmtpClient.Dispose%2A>aufgerufen haben, müssen Sie alle Verweise auf die <xref:System.Net.Mail.SmtpClient> freigeben, damit der Garbage Collector den Speicher freigeben kann, den der <xref:System.Net.Mail.SmtpClient> belegt hat.  
  
 Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer](~/docs/standard/garbage-collection/implementing-dispose.md)verwerfen-Methode.  
  
> [!NOTE]
>  Rufen Sie immer <xref:System.Net.Mail.SmtpClient.Dispose%2A> auf, bevor Sie den letzten Verweis auf das <xref:System.Net.Mail.SmtpClient> freigeben. Andernfalls werden die von ihm verwendeten Ressourcen nicht freigegeben, sodass der Garbage Collector den Speicher freigeben kann.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="smtpClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Does nothing at the moment.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</param>
        <summary>Sends a QUIT message to the SMTP server, gracefully ends the TCP connection, releases all resources used by the current instance of the <see cref="T:System.Net.Mail.SmtpClient" /> class, and optionally disposes of the managed resources.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Verbindung, die von der aktuellen Instanz der <xref:System.Net.Mail.SmtpClient>-Klasse zum SMTP-Server hergestellt wird, wird möglicherweise wieder verwendet, wenn eine Anwendung mehrere Nachrichten an denselben SMTP-Server senden möchte. Dies ist besonders nützlich, wenn Authentifizierung oder Verschlüsselung verwendet wird, um eine Verbindung mit dem SMTP-Server herzustellen. Der Prozess der Authentifizierung und Einrichtung einer TLS-Sitzung kann sehr aufwändig sein. Eine Anforderung zur erneuten Einrichtung einer Verbindung für jede Nachricht, wenn eine große Menge an e-Mail an denselben SMTP-Server gesendet wird, kann sich erheblich auf die Leistung auswirken. Es gibt eine Reihe von e-Mail-Anwendungen, die e-Mail-Statusaktualisierungen, Newsletter-Distributionen oder e-Mail-Benachrichtigungen senden. Außerdem unterstützen viele e-Mail-Client Anwendungen einen Offline Modus, in dem Benutzer viele e-Mail-Nachrichten verfassen können, die später gesendet werden, wenn eine Verbindung mit dem SMTP-Server hergestellt wird. Es ist typisch für einen e-Mail-Client, alle SMTP-Nachrichten an einen bestimmten SMTP-Server (bereitgestellt vom Internet Dienstanbieter) zu senden, der diese e-Mail an andere SMTP-Server weiterleitet.  
  
 Die Implementierung der <xref:System.Net.Mail.SmtpClient> Klasse bündelt SMTP-Verbindungen, damit der Aufwand für das erneute Herstellen einer Verbindung für jede Nachricht an denselben Server vermieden werden kann. Eine Anwendung kann dasselbe <xref:System.Net.Mail.SmtpClient> Objekt wieder verwenden, um viele verschiedene e-Mails an denselben SMTP-Server und an viele verschiedene SMTP-Server zu senden. Daher gibt es keine Möglichkeit, zu bestimmen, wann eine Anwendung mit dem <xref:System.Net.Mail.SmtpClient> Objekt fertig ist, und es sollte bereinigt werden.  
  
 Wenn eine SMTP-Sitzung abgeschlossen ist und der Client die Verbindung beenden möchte, muss Sie eine Beendigungs Nachricht an den Server senden, um anzugeben, dass keine Nachrichten mehr gesendet werden müssen. Dies ermöglicht es dem Server, Ressourcen freizugeben, die der Verbindung vom Client zugeordnet sind, und die vom Client gesendeten Nachrichten zu verarbeiten.  
  
 Wenn Sie die <xref:System.Net.Mail.SmtpClient.Dispose%2A>-Methode für ein <xref:System.Net.Mail.SmtpClient> Objekt aufrufen, das einen asynchronen <xref:System.Net.Mail.SmtpClient.SendAsync%2A> Vorgang ausführt, wird der Sendevorgang abgebrochen, als ob die <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>-Methode aufgerufen wurde.  
  
 Die <xref:System.Net.Mail.SmtpClient>-Klasse verfügt über keine `Finalize`-Methode. Daher muss eine Anwendung <xref:System.Net.Mail.SmtpClient.Dispose%2A> aufgerufen werden, um Ressourcen explizit freizugeben.  
  
 Die <xref:System.Net.Mail.SmtpClient.Dispose%2A>-Methode durchläuft alle eingerichteten Verbindungen mit dem in der <xref:System.Net.Mail.SmtpClient.Host%2A>-Eigenschaft angegebenen SMTP-Server und sendet eine beendende Nachricht, gefolgt vom ordnungsgemäßen Beenden der TCP-Verbindung. Die <xref:System.Net.Mail.SmtpClient.Dispose%2A> Methode auch frei, die vom verwendeten nicht verwalteten Ressourcen der <xref:System.Net.Sockets.Socket> und verwirft optional auch die verwalteten Ressourcen.  
  
 Rufen Sie <xref:System.Net.Mail.SmtpClient.Dispose%2A> auf, wenn Sie <xref:System.Net.Mail.SmtpClient> nicht mehr benötigen. Die <xref:System.Net.Mail.SmtpClient.Dispose%2A>-Methode bewirkt, dass <xref:System.Net.Mail.SmtpClient> nicht mehr verwendet werden kann. Nachdem Sie <xref:System.Net.Mail.SmtpClient.Dispose%2A>aufgerufen haben, müssen Sie alle Verweise auf die <xref:System.Net.Mail.SmtpClient> freigeben, damit der Garbage Collector den Speicher freigeben kann, den der <xref:System.Net.Mail.SmtpClient> belegt hat.  
  
 Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer](~/docs/standard/garbage-collection/implementing-dispose.md)verwerfen-Methode.  
  
> [!NOTE]
>  Rufen Sie immer <xref:System.Net.Mail.SmtpClient.Dispose%2A> auf, bevor Sie den letzten Verweis auf das <xref:System.Net.Mail.SmtpClient> freigeben. Andernfalls werden die von ihm verwendeten Ressourcen nicht freigegeben, sodass der Garbage Collector den Speicher freigeben kann.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSsl">
      <MemberSignature Language="C#" Value="public bool EnableSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSsl" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.EnableSsl" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSsl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableSsl : bool with get, set" Usage="System.Net.Mail.SmtpClient.EnableSsl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specify whether the <see cref="T:System.Net.Mail.SmtpClient" /> uses Secure Sockets Layer (SSL) to encrypt the connection.</summary>
        <value><see langword="true" />, wenn die <see cref="T:System.Net.Mail.SmtpClient" /> SSL verwendet. Andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.Mail.SmtpClient.EnableSsl%2A>-Eigenschaft gibt an, ob für den Zugriff auf den angegebenen SMTP-Mailserver SSL verwendet wird.  
  
 Der Standardwert für diese Eigenschaft kann auch in einer Computer-oder Anwendungs Konfigurationsdatei festgelegt werden. Alle Änderungen, die an der <xref:System.Net.Mail.SmtpClient.EnableSsl%2A>-Eigenschaft vorgenommen werden, überschreiben die Konfigurationsdatei Einstellungen.  
  
 Die <xref:System.Net.Mail.SmtpClient>-Klasse unterstützt nur die SMTP-Dienst Erweiterung für Secure SMTP over Transport Layer Security, wie in RFC 3207 definiert. In diesem Modus beginnt die SMTP-Sitzung auf einem unverschlüsselten Kanal. Anschließend wird vom Client ein STARTTLS-Befehl an den Server ausgegeben, um zur sicheren Kommunikation über SSL zu wechseln. Weitere Informationen finden Sie unter RFC 3207, veröffentlicht von der Internet Engineering Task Force (IETF).  
  
 Eine Alternative Verbindungsmethode besteht darin, dass vor dem Senden von Protokoll Befehlen eine SSL-Sitzung eingerichtet wird. Diese Verbindungsmethode wird manchmal als SMTP/SSL, SMTP über SSL oder SMTPS bezeichnet und verwendet standardmäßig Port 465. Diese Alternative Verbindungsmethode mithilfe von SSL wird derzeit nicht unterstützt.  
  
 Mit <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> können Sie angeben, welche Client Zertifikate zum Herstellen der SSL-Verbindung verwendet werden sollen. Der <xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A> ermöglicht es Ihnen, das vom SMTP-Server bereitgestellte Zertifikat abzulehnen. Mit der <xref:System.Net.ServicePointManager.SecurityProtocol%2A>-Eigenschaft können Sie die Version des zu verwendenden SSL-Protokolls angeben.  
  
> [!NOTE]
>  Wenn die <xref:System.Net.Mail.SmtpClient.EnableSsl%2A>-Eigenschaft auf `true`festgelegt ist und der SMTP-Mailserver keine STARTTLS in der Antwort auf den EHLO-Befehl ankündigt, wird ein <xref:System.Net.Mail.SmtpException>durch einen Rückruf der <xref:System.Net.Mail.SmtpClient.Send%2A>-oder <xref:System.Net.Mail.SmtpClient.SendAsync%2A>-Methode ausgelöst.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine SSL-Verbindung mit dem SMTP-Server hergestellt, und die Verbindung wird verwendet, um eine e-Mail zu senden.  
  
 [!code-csharp[NclSSLMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSSLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.EnableSsl" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">&lt;mailSettings&gt;-Element (Netzwerkeinstellungen)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;SMTP-&gt;-Element (Netzwerkeinstellungen)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/network-element-network-settings.md">&lt;Netzwerk&gt;-Element (Netzwerkeinstellungen)</related>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Host" />
      <MemberSignature Language="VB.NET" Value="Public Property Host As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Host { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Host : string with get, set" Usage="System.Net.Mail.SmtpClient.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name or IP address of the host used for SMTP transactions.</summary>
        <value>Eine <see cref="T:System.String" />, die den Namen oder die IP-Adresse des Computers enthält, der für SMTP-Transaktionen verwendet werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert der <xref:System.Net.Mail.SmtpClient.Host%2A>-Eigenschaft kann auch mithilfe von Konstruktoren oder der Anwendungs-oder Computer Konfigurationsdatei festgelegt werden. Weitere Informationen finden Sie unter [ &lt;MailSettings&gt; -Element (Netzwerkeinstellungen)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
 Wenn Informationen mithilfe dieser Eigenschaft angegeben werden, überschreibt diese Informationen die Konfigurationsdatei Einstellungen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Senden einer e-Mail-Nachricht mithilfe des Hosts und Ports veranschaulicht, der in einer Anwendungs Konfigurationsdatei angegeben ist.  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The value specified for a set operation is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The value specified for a set operation is equal to <see cref="F:System.String.Empty" /> ("").</exception>
        <exception cref="T:System.InvalidOperationException">You cannot change the value of this property when an email is being sent.</exception>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.Host" />
        <altmember cref="P:System.Net.Mail.SmtpClient.Port" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">mailSettings für System.net</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;SMTP-&gt;-Element (Netzwerkeinstellungen)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/network-element-network-settings.md">&lt;Netzwerk&gt;-Element (Netzwerkeinstellungen)</related>
      </Docs>
    </Member>
    <Member MemberName="OnSendCompleted">
      <MemberSignature Language="C#" Value="protected void OnSendCompleted (System.ComponentModel.AsyncCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnSendCompleted(class System.ComponentModel.AsyncCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnSendCompleted (e As AsyncCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnSendCompleted(System::ComponentModel::AsyncCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnSendCompleted : System.ComponentModel.AsyncCompletedEventArgs -&gt; unit" Usage="smtpClient.OnSendCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> that contains event data.</param>
        <summary>Raises the <see cref="E:System.Net.Mail.SmtpClient.SendCompleted" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klassen, die von der <xref:System.Net.Mail.SmtpClient>-Klasse erben, können die <xref:System.Net.Mail.SmtpClient.OnSendCompleted%2A>-Methode überschreiben, um zusätzliche Aufgaben auszuführen, wenn das <xref:System.Net.Mail.SmtpClient.SendCompleted> Ereignis auftritt.  
  
 <xref:System.Net.Mail.SmtpClient.OnSendCompleted%2A> können auch abgeleitete Klassen behandeln <xref:System.Net.Mail.SmtpClient.SendCompleted> ohne Anfügen eines Delegaten. Dies ist das bevorzugte Verfahren für die Behandlung von <xref:System.Net.Mail.SmtpClient.SendCompleted> in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, stellen Sie sicher, dass die <see cref="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />-Methode der Basisklasse aufgerufen wird, damit registrierte Delegaten das <see cref="E:System.Net.Mail.SmtpClient.SendCompleted" /> Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="PickupDirectoryLocation">
      <MemberSignature Language="C#" Value="public string PickupDirectoryLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PickupDirectoryLocation" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.PickupDirectoryLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property PickupDirectoryLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PickupDirectoryLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PickupDirectoryLocation : string with get, set" Usage="System.Net.Mail.SmtpClient.PickupDirectoryLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the folder where applications save mail messages to be processed by the local SMTP server.</summary>
        <value>Eine <see cref="T:System.String" />, die das Abhol Verzeichnis für e-Mail-Nachrichten angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 E-Mail-Nachrichten im PICKUP-Verzeichnis werden automatisch von einem lokalen SMTP-Server gesendet (sofern vorhanden), z. b. IIS.  
  
 Der Standardwert für diese Eigenschaft kann auch in einer Computer-oder Anwendungs Konfigurationsdatei festgelegt werden. Alle Änderungen, die an der <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A>-Eigenschaft vorgenommen werden, überschreiben die Konfigurationsdatei Einstellungen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="P:System.Net.Configuration.SmtpSection.DeliveryMethod" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">&lt;mailSettings&gt;-Element (Netzwerkeinstellungen)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;SMTP-&gt;-Element (Netzwerkeinstellungen)</related>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.Net.Mail.SmtpClient.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the port used for SMTP transactions.</summary>
        <value>Eine <see cref="T:System.Int32" />, die die Portnummer auf dem SMTP-Host enthält. Der Standardwert ist 25.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert der <xref:System.Net.Mail.SmtpClient.Port%2A>-Eigenschaft kann auch mithilfe von Konstruktoren oder der Anwendungs-oder Computer Konfigurationsdatei festgelegt werden. Weitere Informationen zum Verwenden von Konfigurationsdateien finden Sie unter [&lt;mailSettings&gt;-Element (Netzwerkeinstellungen)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Wenn Informationen mithilfe dieser Eigenschaft angegeben werden, überschreibt diese Informationen die Konfigurationsdatei Einstellungen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Senden einer e-Mail-Nachricht mithilfe des Hosts und Ports veranschaulicht, der in einer Anwendungs Konfigurationsdatei angegeben ist.  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The value specified for a set operation is less than or equal to zero.</exception>
        <exception cref="T:System.InvalidOperationException">You cannot change the value of this property when an email is being sent.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">um die <see cref="P:System.Net.Mail.SmtpClient.Port" />-Eigenschaft festzulegen. Zugeordnete Enumeration: <see cref="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort" /></permission>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.Port" />
        <altmember cref="P:System.Net.Mail.SmtpClient.Host" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">mailSettings für System.net</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;SMTP-&gt;-Element (Netzwerkeinstellungen)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/network-element-network-settings.md">&lt;Netzwerk&gt;-Element (Netzwerkeinstellungen)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sends an email message to an SMTP server for delivery. These methods block while the message is being transmitted.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.Net.Mail.MailMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class System.Net.Mail.MailMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Send(System.Net.Mail.MailMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (message As MailMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Net::Mail::MailMessage ^ message);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Net.Mail.MailMessage -&gt; unit" Usage="smtpClient.Send message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" />
      </Parameters>
      <Docs>
        <param name="message">A <see cref="T:System.Net.Mail.MailMessage" /> that contains the message to send.</param>
        <summary>Sends the specified message to an SMTP server for delivery.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird blockiert, während die e-Mail übertragen wird. Sie können mit der <xref:System.Net.Mail.SmtpClient.Timeout%2A>-Eigenschaft einen Timeout Wert angeben, um sicherzustellen, dass die Methode nach einer festgelegten Zeitspanne zurückgegeben wird.  
  
 Vor dem Aufrufen dieser Methode müssen die Eigenschaften <xref:System.Net.Mail.SmtpClient.Host%2A> und <xref:System.Net.Mail.SmtpClient.Port%2A> entweder über die Konfigurationsdateien festgelegt werden, indem die relevanten Eigenschaften festgelegt werden, oder indem diese Informationen an den <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29>-Konstruktor übergeben werden.  
  
 Diese Methode kann nicht aufgerufen werden, wenn eine Nachricht asynchron gesendet wird.  
  
 Wenn für den SMTP-Host Anmelde Informationen erforderlich sind, müssen Sie diese vor dem Aufrufen dieser Methode festlegen. Zum Angeben von Anmelde Informationen verwenden Sie die Eigenschaften <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> oder <xref:System.Net.Mail.SmtpClient.Credentials%2A>.  
  
 Wenn Sie eine <xref:System.Net.Mail.SmtpException> Ausnahme erhalten, überprüfen Sie die <xref:System.Net.Mail.SmtpException.StatusCode%2A>-Eigenschaft, um zu ermitteln, warum der Vorgang fehlgeschlagen ist. Der <xref:System.Net.Mail.SmtpException> kann auch eine innere Ausnahme enthalten, die den Grund für den Fehler des Vorgangs angibt.  
  
 Beim Senden von e-Mails mit <xref:System.Net.Mail.SmtpClient.Send%2A> an mehrere Empfänger, und der SMTP-Server akzeptiert einige Empfänger als gültig und lehnt andere ab, <xref:System.Net.Mail.SmtpClient.Send%2A> sendet eine e-Mail an die akzeptierten Empfänger, und dann wird ein <xref:System.Net.Mail.SmtpFailedRecipientsException> ausgelöst (oder ein <xref:System.Net.Mail.SmtpFailedRecipientException>, wenn nur ein Empfänger abgelehnt wird). Eine <xref:System.Net.Mail.SmtpFailedRecipientsException> die eine Liste der zurückgewiesenen Empfänger enthält.
  
> [!NOTE]
>  Wenn die <xref:System.Net.Mail.SmtpClient.EnableSsl%2A>-Eigenschaft auf `true`festgelegt ist und der SMTP-Mailserver keine STARTTLS in der Antwort auf den EHLO-Befehl ankündigt, wird ein <xref:System.Net.Mail.SmtpException>durch einen Rückruf der <xref:System.Net.Mail.SmtpClient.Send%2A>-oder <xref:System.Net.Mail.SmtpClient.SendAsync%2A>-Methode ausgelöst.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieser Methode veranschaulicht.  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">This <see cref="T:System.Net.Mail.SmtpClient" /> has a <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> call in progress.  
  
-or- 
 <see cref="P:System.Net.Mail.MailMessage.From" /> is <see langword="null" />.  
  
-or- 
There are no recipients specified in <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, and <see cref="P:System.Net.Mail.MailMessage.Bcc" /> properties.  
  
-or- 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Host" /> is <see langword="null" />.  
  
-or- 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Host" /> is equal to the empty string ("").  
  
-or- 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Port" /> is zero, a negative number, or greater than 65,535.</exception>
        <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">The connection to the SMTP server failed.  
  
-or- 
Authentication failed.  
  
-or- 
The operation timed out. 
-or- 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> is set to <see langword="true" /> but the <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> or <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.  
  
-or- 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> is set to <see langword="true," /> but the SMTP mail server did not advertise STARTTLS in the response to the EHLO command.</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientException">The <paramref name="message" /> could not be delivered to one of the recipients in <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, or <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientsException">The <paramref name="message" /> could not be delivered to two or more of the recipients in <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, or <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">zum Herstellen einer Verbindung mit dem SMTP-Server. Zugehörige Enumeration: <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (string from, string recipients, string subject, string body);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string from, string recipients, string subject, string body) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (from As String, recipients As String, subject As String, body As String)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="member this.Send : string * string * string * string -&gt; unit" Usage="smtpClient.Send (from, recipients, subject, body)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public void Send (string from, string to, string subject, string body);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string from, string to, string subject, string body) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (from As String, to As String, subject As String, body As String)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ from, System::String ^ to, System::String ^ subject, System::String ^ body);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Send : string * string * string * string -&gt; unit" Usage="smtpClient.Send (from, to, subject, body)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" Index="0" />
        <Parameter Name="recipients" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="to" Type="System.String" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subject" Type="System.String" Index="2" />
        <Parameter Name="body" Type="System.String" Index="3" />
      </Parameters>
      <Docs>
        <param name="from">A <see cref="T:System.String" /> that contains the address information of the message sender.</param>
        <param name="recipients">A <see cref="T:System.String" /> that contains the addresses that the message is sent to.</param>
        <param name="to">A <see cref="T:System.String" /> that contains the addresses that the message is sent to.</param>
        <param name="subject">A <see cref="T:System.String" /> that contains the subject line for the message.</param>
        <param name="body">A <see cref="T:System.String" /> that contains the message body.</param>
        <summary>Sends the specified email message to an SMTP server for delivery. The message sender, recipients, subject, and message body are specified using <see cref="T:System.String" /> objects.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird blockiert, während die e-Mail übertragen wird. Sie können mit der <xref:System.Net.Mail.SmtpClient.Timeout%2A>-Eigenschaft einen Timeout Wert angeben, um sicherzustellen, dass die Methode nach einer festgelegten Zeitspanne zurückgegeben wird.  
  
 Vor dem Aufrufen dieser Methode müssen die Eigenschaften <xref:System.Net.Mail.SmtpClient.Host%2A> und <xref:System.Net.Mail.SmtpClient.Port%2A> entweder über die Konfigurationsdateien festgelegt werden, indem die relevanten Eigenschaften festgelegt werden, oder indem diese Informationen an den <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29>-Konstruktor übergeben werden.  
  
 Diese Methode kann nicht aufgerufen werden, wenn eine Nachricht asynchron gesendet wird.  
  
 Wenn für den SMTP-Host Anmelde Informationen erforderlich sind, müssen Sie diese vor dem Aufrufen dieser Methode festlegen. Zum Angeben von Anmelde Informationen verwenden Sie die Eigenschaften <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> oder <xref:System.Net.Mail.SmtpClient.Credentials%2A>.  
  
 Wenn Sie eine <xref:System.Net.Mail.SmtpException> Ausnahme erhalten, überprüfen Sie die <xref:System.Net.Mail.SmtpException.StatusCode%2A>-Eigenschaft, um zu ermitteln, warum der Vorgang fehlgeschlagen ist. Der <xref:System.Net.Mail.SmtpException> kann auch eine innere Ausnahme enthalten, die den Grund für den Fehler des Vorgangs angibt.  

 Beim Senden von e-Mails mit <xref:System.Net.Mail.SmtpClient.Send%2A> an mehrere Empfänger, und der SMTP-Server akzeptiert einige Empfänger als gültig und lehnt andere ab, <xref:System.Net.Mail.SmtpClient.Send%2A> sendet eine e-Mail an die akzeptierten Empfänger, und dann wird ein <xref:System.Net.Mail.SmtpFailedRecipientsException> ausgelöst (oder ein <xref:System.Net.Mail.SmtpFailedRecipientException>, wenn nur ein Empfänger abgelehnt wird). Eine <xref:System.Net.Mail.SmtpFailedRecipientsException> die eine Liste der zurückgewiesenen Empfänger enthält.
 
> [!NOTE]
>  Wenn die <xref:System.Net.Mail.SmtpClient.EnableSsl%2A>-Eigenschaft auf `true`festgelegt ist und der SMTP-Mailserver keine STARTTLS in der Antwort auf den EHLO-Befehl ankündigt, wird ein <xref:System.Net.Mail.SmtpException>durch einen Rückruf der <xref:System.Net.Mail.SmtpClient.Send%2A>-oder <xref:System.Net.Mail.SmtpClient.SendAsync%2A>-Methode ausgelöst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="from" /> is <see langword="null" />.  
  
-or- 
 <paramref name="recipients" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="from" /> is <see cref="F:System.String.Empty" />.  
  
-or- 
 <paramref name="recipients" /> is <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.InvalidOperationException">This <see cref="T:System.Net.Mail.SmtpClient" /> has a <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> call in progress.  
  
-or- 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Host" /> is <see langword="null" />.  
  
-or- 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Host" /> is equal to the empty string ("").  
  
-or- 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Port" /> is zero, a negative number, or greater than 65,535.</exception>
        <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">The connection to the SMTP server failed.  
  
-or- 
Authentication failed.  
  
-or- 
The operation timed out. 
-or- 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> is set to <see langword="true" /> but the <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> or <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.  
  
-or- 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> is set to <see langword="true," /> but the SMTP mail server did not advertise STARTTLS in the response to the EHLO command.</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientException">The <paramref name="message" /> could not be delivered to one of the recipients in <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, or <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientsException">The <paramref name="message" /> could not be delivered to two or more of the recipients in <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, or <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">zum Herstellen einer Verbindung mit dem SMTP-Server. Zugehörige Enumeration: <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sends an email message. These methods do not block the calling thread.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.Mail.MailMessage message, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.Mail.MailMessage message, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsync(System.Net.Mail.MailMessage,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (message As MailMessage, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::Mail::MailMessage ^ message, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : System.Net.Mail.MailMessage * obj -&gt; unit" Usage="smtpClient.SendAsync (message, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">A <see cref="T:System.Net.Mail.MailMessage" /> that contains the message to send.</param>
        <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
        <summary>Sends the specified email message to an SMTP server for delivery. This method does not block the calling thread and allows the caller to pass an object to the method that is invoked when the operation completes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Fügen Sie dem <xref:System.Net.Mail.SmtpClient.SendCompleted>-Ereignis einen Ereignishandler hinzu, um eine Benachrichtigung zu erhalten, wenn die e-Mail gesendet wurde oder der Vorgang abgebrochen wurde. Sie können einen <xref:System.Net.Mail.SmtpClient.SendAsync%2A> Vorgang abbrechen, indem Sie die <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>-Methode aufrufen.  
  
 Nachdem Sie <xref:System.Net.Mail.SmtpClient.SendAsync%2A>aufgerufen haben, müssen Sie auf den Abschluss der e-Mail-Übertragung warten, bevor Sie versuchen, eine andere e-Mail mit <xref:System.Net.Mail.SmtpClient.Send%2A> oder <xref:System.Net.Mail.SmtpClient.SendAsync%2A>zu senden.  
  
 Vor dem Aufrufen dieser Methode müssen die <xref:System.Net.Mail.SmtpClient.Host%2A> und <xref:System.Net.Mail.SmtpClient.Port%2A> über die Konfigurationsdateien festgelegt werden, indem die relevanten Eigenschaften festgelegt werden oder indem diese Informationen an den <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29>-Konstruktor übergeben werden.  
  
 Wenn für den SMTP-Host Anmelde Informationen erforderlich sind, müssen Sie diese vor dem Aufrufen dieser Methode festlegen. Zum Angeben von Anmelde Informationen verwenden Sie die Eigenschaften <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> oder <xref:System.Net.Mail.SmtpClient.Credentials%2A>.  
  
 Wenn Sie eine <xref:System.Net.Mail.SmtpException> Ausnahme erhalten, überprüfen Sie die <xref:System.Net.Mail.SmtpException.StatusCode%2A>-Eigenschaft, um zu ermitteln, warum der Vorgang fehlgeschlagen ist. Der <xref:System.Net.Mail.SmtpException> kann auch eine innere Ausnahme enthalten, die den Grund für den Fehler des Vorgangs angibt.  
  
 Beim Senden von e-Mails mithilfe von <xref:System.Net.Mail.SmtpClient.SendAsync%2A> an mehrere Empfänger, wenn der SMTP-Server einige Empfänger als gültig akzeptiert und andere ablehnt, wird eine <xref:System.Net.Mail.SmtpException> mit einer <xref:System.NullReferenceException> für die innere Ausnahme ausgelöst. Wenn dies auftritt, kann <xref:System.Net.Mail.SmtpClient.SendAsync%2A> keine e-Mail an einen der Empfänger senden.  
  
 Die Anwendung kann einen Überprüfungs Fehler für das Serverzertifikat erkennen, indem Sie die <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>-Eigenschaft untersucht, die an den <xref:System.Net.Mail.SendCompletedEventHandler>-Delegaten  
  
 Die <xref:System.Net.Mail.SmtpClient.Timeout%2A>-Eigenschaft hat keine Auswirkung auf einen <xref:System.Net.Mail.SmtpClient.SendAsync%2A>-Aufruf.  
  
 Verwenden Sie zum Senden von e-Mail und Blockieren während der Übertragung an den SMTP-Server eine der <xref:System.Net.Mail.SmtpClient.Send%2A> Methoden.  
  
> [!NOTE]
>  Wenn die <xref:System.Net.Mail.SmtpClient.EnableSsl%2A>-Eigenschaft auf `true`festgelegt ist und der SMTP-Mailserver keine STARTTLS in der Antwort auf den EHLO-Befehl ankündigt, wird ein <xref:System.Net.Mail.SmtpException>durch einen Rückruf der <xref:System.Net.Mail.SmtpClient.Send%2A>-oder <xref:System.Net.Mail.SmtpClient.SendAsync%2A>-Methode ausgelöst.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Aufrufen dieser Methode veranschaulicht.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" /> is <see langword="null" />.  
  
-or- 
 <see cref="P:System.Net.Mail.MailMessage.From" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">This <see cref="T:System.Net.Mail.SmtpClient" /> has a <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> call in progress.  
  
-or- 
There are no recipients specified in <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, and <see cref="P:System.Net.Mail.MailMessage.Bcc" /> properties.  
  
-or- 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Host" /> is <see langword="null" />.  
  
-or- 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Host" /> is equal to the empty string ("").  
  
-or- 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Port" /> is zero, a negative number, or greater than 65,535.</exception>
        <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">The connection to the SMTP server failed.  
  
-or- 
Authentication failed.  
  
-or- 
The operation timed out. 
-or- 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> is set to <see langword="true" /> but the <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> or <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.  
  
-or- 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> is set to <see langword="true," /> but the SMTP mail server did not advertise STARTTLS in the response to the EHLO command.  
  
-or- 
The <paramref name="message" /> could not be delivered to one or more of the recipients in <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" />, or <see cref="P:System.Net.Mail.MailMessage.Bcc" />.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">zum Herstellen einer Verbindung mit dem SMTP-Server. Zugehörige Enumeration: <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string from, string recipients, string subject, string body, object userToken);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string from, string recipients, string subject, string body, object userToken) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (from As String, recipients As String, subject As String, body As String, userToken As Object)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body, System::Object ^ userToken);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="member this.SendAsync : string * string * string * string * obj -&gt; unit" Usage="smtpClient.SendAsync (from, recipients, subject, body, userToken)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public void SendAsync (string from, string to, string subject, string body, object userToken);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string from, string to, string subject, string body, object userToken) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (from As String, to As String, subject As String, body As String, userToken As Object)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ from, System::String ^ to, System::String ^ subject, System::String ^ body, System::Object ^ userToken);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.SendAsync : string * string * string * string * obj -&gt; unit" Usage="smtpClient.SendAsync (from, to, subject, body, userToken)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" Index="0" />
        <Parameter Name="recipients" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="to" Type="System.String" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subject" Type="System.String" Index="2" />
        <Parameter Name="body" Type="System.String" Index="3" />
        <Parameter Name="userToken" Type="System.Object" Index="4" />
      </Parameters>
      <Docs>
        <param name="from">A <see cref="T:System.String" /> that contains the address information of the message sender.</param>
        <param name="recipients">A <see cref="T:System.String" /> that contains the address that the message is sent to.</param>
        <param name="to">A <see cref="T:System.String" /> that contains the address that the message is sent to.</param>
        <param name="subject">A <see cref="T:System.String" /> that contains the subject line for the message.</param>
        <param name="body">A <see cref="T:System.String" /> that contains the message body.</param>
        <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
        <summary>Sends an email message to an SMTP server for delivery. The message sender, recipients, subject, and message body are specified using <see cref="T:System.String" /> objects. This method does not block the calling thread and allows the caller to pass an object to the method that is invoked when the operation completes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Fügen Sie dem <xref:System.Net.Mail.SmtpClient.SendCompleted>-Ereignis einen Ereignishandler hinzu, um eine Benachrichtigung zu erhalten, wenn die e-Mail gesendet wurde oder der Vorgang abgebrochen wurde. Sie können einen <xref:System.Net.Mail.SmtpClient.SendAsync%2A> Vorgang abbrechen, indem Sie die <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>-Methode aufrufen.  
  
 Nachdem Sie <xref:System.Net.Mail.SmtpClient.SendAsync%2A>aufgerufen haben, müssen Sie auf den Abschluss der e-Mail-Übertragung warten, bevor Sie versuchen, eine andere e-Mail mit <xref:System.Net.Mail.SmtpClient.Send%2A> oder <xref:System.Net.Mail.SmtpClient.SendAsync%2A>zu senden.  
  
 Vor dem Aufrufen dieser Methode müssen die Eigenschaften <xref:System.Net.Mail.SmtpClient.Host%2A> und <xref:System.Net.Mail.SmtpClient.Port%2A> entweder über die Konfigurationsdateien oder durch Festlegen der Eigenschaften oder durch Übergeben dieser Informationen an den <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29>-Konstruktor festgelegt werden.  
  
 Wenn für den SMTP-Host Anmelde Informationen erforderlich sind, müssen Sie diese vor dem Aufrufen dieser Methode festlegen. Um Anmelde Informationen anzugeben, verwenden Sie die Eigenschaft <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> oder <xref:System.Net.Mail.SmtpClient.Credentials%2A>.  
  
 Wenn Sie eine <xref:System.Net.Mail.SmtpException> Ausnahme erhalten, überprüfen Sie die <xref:System.Net.Mail.SmtpException.StatusCode%2A>-Eigenschaft, um zu ermitteln, warum der Vorgang fehlgeschlagen ist. Der <xref:System.Net.Mail.SmtpException> kann auch eine innere Ausnahme enthalten, die den Grund für den Fehler des Vorgangs angibt.  
  
 Beim Senden von e-Mails mithilfe von <xref:System.Net.Mail.SmtpClient.SendAsync%2A> an mehrere Empfänger, wenn der SMTP-Server einige Empfänger als gültig akzeptiert und andere ablehnt, wird eine <xref:System.Net.Mail.SmtpException> mit einer <xref:System.NullReferenceException> für die innere Ausnahme ausgelöst. Wenn dies auftritt, kann <xref:System.Net.Mail.SmtpClient.SendAsync%2A> keine e-Mail an einen der Empfänger senden.  
  
 Die Anwendung kann einen Überprüfungs Fehler für das Serverzertifikat erkennen, indem Sie die <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>-Eigenschaft untersucht, die an den <xref:System.Net.Mail.SendCompletedEventHandler>-Delegaten  
  
 Die <xref:System.Net.Mail.SmtpClient.Timeout%2A>-Eigenschaft hat keine Auswirkung auf einen <xref:System.Net.Mail.SmtpClient.SendAsync%2A>-Aufruf.  
  
 Verwenden Sie zum Senden von e-Mail und Blockieren während der Übertragung an den SMTP-Server eine der <xref:System.Net.Mail.SmtpClient.Send%2A> Methoden.  
  
> [!NOTE]
>  Wenn die <xref:System.Net.Mail.SmtpClient.EnableSsl%2A>-Eigenschaft auf `true`festgelegt ist und der SMTP-Mailserver keine STARTTLS in der Antwort auf den EHLO-Befehl ankündigt, wird ein <xref:System.Net.Mail.SmtpException>durch einen Rückruf der <xref:System.Net.Mail.SmtpClient.Send%2A>-oder <xref:System.Net.Mail.SmtpClient.SendAsync%2A>-Methode ausgelöst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="from" /> is <see langword="null" />.  
  
-or- 
 <paramref name="recipient" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="from" /> is <see cref="F:System.String.Empty" />.  
  
-or- 
 <paramref name="recipient" /> is <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.InvalidOperationException">This <see cref="T:System.Net.Mail.SmtpClient" /> has a <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" /> call in progress.  
  
-or- 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Host" /> is <see langword="null" />.  
  
-or- 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Host" /> is equal to the empty string ("").  
  
-or- 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> and <see cref="P:System.Net.Mail.SmtpClient.Port" /> is zero, a negative number, or greater than 65,535.</exception>
        <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">The connection to the SMTP server failed.  
  
-or- 
Authentication failed.  
  
-or- 
The operation timed out. 
-or- 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> is set to <see langword="true" /> but the <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" /> property is set to <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> or <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" />.  
  
-or- 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> is set to <see langword="true," /> but the SMTP mail server did not advertise STARTTLS in the response to the EHLO command.  
  
-or- 
The message could not be delivered to one or more of the recipients in <paramref name="recipients" />.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">zum Herstellen einer Verbindung mit dem SMTP-Server. Zugehörige Enumeration: <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsyncCancel">
      <MemberSignature Language="C#" Value="public void SendAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.SendAsyncCancel : unit -&gt; unit" Usage="smtpClient.SendAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancels an asynchronous operation to send an email message.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>-Methode, um einen ausstehenden <xref:System.Net.Mail.SmtpClient.SendAsync%2A> Vorgang abzubrechen. Wenn e-Mail-Nachrichten darauf warten, gesendet zu werden, gibt diese Methode die zum Speichern der e-Mail verwendeten Ressourcen frei. Wenn keine e-Mail darauf wartet, gesendet zu werden, führt diese Methode keine Aktion aus.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das asynchrone Senden einer e-Mail-Nachricht veranschaulicht. Der Benutzer kann die e-Mail abbrechen, wenn er nicht gesendet wurde.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">This object has been disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.Mail.SendCompletedEventHandler SendCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.Mail.SendCompletedEventHandler SendCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.Mail.SmtpClient.SendCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SendCompleted As SendCompletedEventHandler " FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::Mail::SendCompletedEventHandler ^ SendCompleted;" />
      <MemberSignature Language="F#" Value="member this.SendCompleted : System.Net.Mail.SendCompletedEventHandler " Usage="member this.SendCompleted : System.Net.Mail.SendCompletedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event SendCompleted As SendCompletedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SendCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when an asynchronous email send operation completes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Net.Mail.SmtpClient.SendCompleted> Ereignis wird jedes Mal ausgelöst, wenn eine e-Mail-Nachricht asynchron gesendet wird, wenn der Sendevorgang abgeschlossen ist. Verwenden Sie zum asynchronen Senden einer e-Mail-Nachricht die <xref:System.Net.Mail.SmtpClient.SendAsync%2A>-Methoden.  
  
 <xref:System.Net.Mail.SendCompletedEventHandler> ist der Delegat für <xref:System.Net.Mail.SmtpClient.SendCompleted>. Die <xref:System.ComponentModel.AsyncCompletedEventArgs>-Klasse stellt den Ereignishandler für Ereignisdaten bereit.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das asynchrone Senden einer e-Mail-Nachricht veranschaulicht.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendMailAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sends the specified message to an SMTP server for delivery as an asynchronous operation.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendMailAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendMailAsync (System.Net.Mail.MailMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendMailAsync(class System.Net.Mail.MailMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendMailAsync(System.Net.Mail.MailMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendMailAsync (message As MailMessage) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ SendMailAsync(System::Net::Mail::MailMessage ^ message);" />
      <MemberSignature Language="F#" Value="member this.SendMailAsync : System.Net.Mail.MailMessage -&gt; System.Threading.Tasks.Task" Usage="smtpClient.SendMailAsync message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message">A <see cref="T:System.Net.Mail.MailMessage" /> that contains the message to send.</param>
        <summary>Sends the specified message to an SMTP server for delivery as an asynchronous operation.</summary>
        <returns>The task object representing the asynchronous operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurückgegebene <xref:System.Threading.Tasks.Task> Objekt wird abgeschlossen, nachdem die Nachricht gesendet wurde.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendMailAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendMailAsync (string from, string recipients, string subject, string body);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendMailAsync(string from, string recipients, string subject, string body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendMailAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendMailAsync (from As String, recipients As String, subject As String, body As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ SendMailAsync(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body);" />
      <MemberSignature Language="F#" Value="member this.SendMailAsync : string * string * string * string -&gt; System.Threading.Tasks.Task" Usage="smtpClient.SendMailAsync (from, recipients, subject, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="recipients" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subject" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="body" Type="System.String" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="from">A <see cref="T:System.String" /> that contains the address information of the message sender.</param>
        <param name="recipients">A <see cref="T:System.String" /> that contains the addresses that the message is sent to.</param>
        <param name="subject">A <see cref="T:System.String" /> that contains the subject line for the message.</param>
        <param name="body">A <see cref="T:System.String" /> that contains the message body.</param>
        <summary>Sends the specified message to an SMTP server for delivery as an asynchronous operation. . The message sender, recipients, subject, and message body are specified using <see cref="T:System.String" /> objects.</summary>
        <returns>The task object representing the asynchronous operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurückgegebene <xref:System.Threading.Tasks.Task> Objekt wird abgeschlossen, nachdem die Nachricht gesendet wurde.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="from" /> is <see langword="null" />.  
  
-or- 
 <paramref name="recipients" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="from" /> is <see cref="F:System.String.Empty" />.  
  
-or- 
 <paramref name="recipients" /> is <see cref="F:System.String.Empty" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ServicePoint">
      <MemberSignature Language="C#" Value="public System.Net.ServicePoint ServicePoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ServicePoint ServicePoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.ServicePoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServicePoint As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ServicePoint ^ ServicePoint { System::Net::ServicePoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServicePoint : System.Net.ServicePoint" Usage="System.Net.Mail.SmtpClient.ServicePoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the network connection used to transmit the email message.</summary>
        <value>Eine <see cref="T:System.Net.ServicePoint" />, die eine Verbindung mit der für SMTP verwendeten <see cref="P:System.Net.Mail.SmtpClient.Host" /> Eigenschaft herstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Einstellungen für die <xref:System.Net.Mail.SmtpClient.ServicePoint%2A>-Eigenschaft werden mithilfe der in den Anwendungs-oder Computer Konfigurationsdateien und der <xref:System.Net.ServicePointManager>-Klasse angegebenen Standardwerte erstellt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der Zugriff auf die <xref:System.Net.Mail.SmtpClient.ServicePoint%2A>-Eigenschaft veranschaulicht.  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Net.Mail.SmtpClient.Host" /> is <see langword="null" /> or the empty string ("").  
  
-or- 
 <see cref="P:System.Net.Mail.SmtpClient.Port" /> is zero.</exception>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/connectionmanagement-element-network-settings.md">connectionManagement-Element (Netzwerkeinstellungen)</related>
        <related type="Article" href="~/docs/framework/network-programming/managing-connections.md">Verwalten von Verbindungen</related>
      </Docs>
    </Member>
    <Member MemberName="TargetName">
      <MemberSignature Language="C#" Value="public string TargetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetName" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.TargetName" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetName : string with get, set" Usage="System.Net.Mail.SmtpClient.TargetName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the Service Provider Name (SPN) to use for authentication when using extended protection.</summary>
        <value>Ein-<see cref="T:System.String" />, der den für den erweiterten Schutz zu verwendenden SPN angibt. Der Standardwert für diesen SPN hat die Form "SmtpSvc/&lt;Host&gt;", wobei &lt;Host&gt; der Hostname des SMTP-Mailservers ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.Mail.SmtpClient.TargetName%2A>-Eigenschaft wird bei der integrierten Windows-Authentifizierung verwendet, wenn eine Anwendung erweiterten Schutz verwendet. Der <xref:System.Net.Mail.SmtpClient> kann dann erweiterten Schutz bereitstellen, um sicherzustellen, dass Antworten in der Anforderungs Antwort Dienst spezifische Informationen (einen SPN) und ggf. Kanal spezifische Informationen (ein Kanal Bindungs Token oder CBT) enthalten. Mit diesen Informationen im Austausch von Anmelde Informationen können Dienste besser vor böswilliger Verwendung von Antworten auf Anmelde Informationen schützen, die möglicherweise nicht ordnungsgemäß abgerufen wurden.  
  
 Der Standardwert für diese Eigenschaft kann auch in einer Computer-oder Anwendungs Konfigurationsdatei festgelegt werden. Alle Änderungen, die an der <xref:System.Net.Mail.SmtpClient.TargetName%2A>-Eigenschaft vorgenommen werden, überschreiben die Konfigurationsdatei Einstellungen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.TargetName" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">Integrierte Windows-Authentifizierung unter Verwendung von "Erweiterter Schutz" (möglicherweise auf Englisch)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">&lt;mailSettings&gt;-Element (Netzwerkeinstellungen)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;SMTP-&gt;-Element (Netzwerkeinstellungen)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/network-element-network-settings.md">&lt;Netzwerk&gt;-Element (Netzwerkeinstellungen)</related>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Net.Mail.SmtpClient.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that specifies the amount of time after which a synchronous <see cref="Overload:System.Net.Mail.SmtpClient.Send" /> call times out.</summary>
        <value>Ein-<see cref="T:System.Int32" />, der den Timeout Wert in Millisekunden angibt. Der Standardwert ist 100.000 (100 Sekunden).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig werden Aufrufe an den <xref:System.Net.Mail.SmtpClient.Send%2A>-Methode blockiert, bis der Vorgang abgeschlossen ist. Wenn Sie die <xref:System.Net.Mail.SmtpClient.Timeout%2A>-Eigenschaft auf einen positiven Wert festlegen und ein <xref:System.Net.Mail.SmtpClient.Send%2A> Vorgang nicht in der vorgesehenen Zeit ausgeführt werden kann, löst die <xref:System.Net.Mail.SmtpClient>-Klasse eine <xref:System.Net.Mail.SmtpException> Ausnahme aus.  
  
 Um eine Nachricht zu senden und die Ausführung im Anwendungs Thread fortzusetzen, verwenden Sie die <xref:System.Net.Mail.SmtpClient.SendAsync%2A>-Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das erhalten und Festlegen des Timeout Werts veranschaulicht.  
  
 [!code-cpp[NclMailSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#3)]
 [!code-csharp[NclMailSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The value specified for a set operation was less than zero.</exception>
        <exception cref="T:System.InvalidOperationException">You cannot change the value of this property when an email is being sent.</exception>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.Mail.SmtpClient.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>set: System.MonoNotSupported("no DefaultCredential support in Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a <see cref="T:System.Boolean" /> value that controls whether the <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> are sent with requests.</summary>
        <value><see langword="true" />, wenn die Standardanmeldeinformationen verwendet werden, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für einige SMTP-Server ist es erforderlich, dass der Client authentifiziert wird, bevor der Server in seinem Auftrag eine e-Mail sendet. Legen Sie diese Eigenschaft auf `true` fest, wenn dieses <xref:System.Net.Mail.SmtpClient> Objekt bei Anforderung vom Server mit den Standard Anmelde Informationen des aktuell angemeldeten Benutzers authentifiziert werden soll. Bei Client Anwendungen ist dies das gewünschte Verhalten in den meisten Szenarien.  
  
 Anmeldeinformationen können auch mithilfe der Anwendungs- und Computerkonfigurationsdateien festgelegt werden. Weitere Informationen finden Sie unter [ &lt;MailSettings&gt; -Element (Netzwerkeinstellungen)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
 Wenn die <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>-Eigenschaft auf `false,` festgelegt ist, wird der Wert, der in der <xref:System.Net.Mail.SmtpClient.Credentials%2A>-Eigenschaft festgelegt wird, beim Herstellen einer Verbindung mit dem Server für die Anmelde Informationen verwendet. Wenn die <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>-Eigenschaft auf `false` festgelegt ist und die <xref:System.Net.Mail.SmtpClient.Credentials%2A>-Eigenschaft nicht festgelegt wurde, wird die e-Mail anonym an den Server gesendet.  
  
> [!CAUTION]
>  Wenn Sie Anmeldeinformationen für Standardauthentifizierung bereitstellen, werden diese als Nur-Text an den Server gesendet. Dies kann ein Sicherheitsproblem darstellen, da ihre Anmelde Informationen angezeigt und dann von anderen Benutzern verwendet werden können.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieser Eigenschaft veranschaulicht.  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">You cannot change the value of this property when an email is being sent.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
