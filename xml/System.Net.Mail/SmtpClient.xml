<Type Name="SmtpClient" FullName="System.Net.Mail.SmtpClient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="91c4f0de01fc15c7e04a4e8d548b98738b1ae465" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70349937" /></Metadata><TypeSignature Language="C#" Value="public class SmtpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SmtpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.SmtpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class SmtpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SmtpClient : IDisposable" />
  <TypeSignature Language="F#" Value="type SmtpClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Obsolete("SmtpClient and its network of types are poorly designed, we strongly recommend you use https://github.com/jstedfast/MailKit and https://github.com/jstedfast/MimeKit instead")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Ermöglicht Anwendungen das Senden von E-Mails mit SMTP (Simple Mail Transfer Protocol). Der <c>SmtpClient</c>-Typ ist jetzt veraltet.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `System.Net.Mail.SmtpClient` -Klasse wird zum Senden von e-Mails an einen SMTP-Server für die Übermittlung verwendet. Das SMTP-Protokoll ist in RFC 2821 definiert, das unter [https://www.ietf.org](https://www.ietf.org/)verfügbar ist.  

> [!IMPORTANT]
>  Es wird nicht empfohlen, die- `SmtpClient` Klasse für die neue Entwicklung zu verwenden. Weitere Informationen finden Sie unter [SmtpClient](https://github.com/dotnet/platform-compat/blob/master/docs/DE0005.md) darf nicht auf GitHub verwendet werden.

 Die in der folgenden Tabelle gezeigten Klassen werden verwendet, um e-Mail-Nachrichten zu <xref:System.Net.Mail.SmtpClient>erstellen, die mit gesendet werden können.  
  
|Klasse|Beschreibung|  
|-----------|-----------------|  
|<xref:System.Net.Mail.Attachment>|Stellt Dateianhänge dar. Diese Klasse ermöglicht das Anfügen von Dateien, Streams oder Text an eine e-Mail-Nachricht.|  
|<xref:System.Net.Mail.MailAddress>|Stellt die e-Mail-Adresse des Absenders und der Empfänger dar.|  
|<xref:System.Net.Mail.MailMessage>|Stellt eine e-Mail dar.|  
  
 Zum Erstellen und Senden einer e-Mail- <xref:System.Net.Mail.SmtpClient>Nachricht mithilfe von müssen Sie die folgenden Informationen angeben:  
  
-   Der SMTP-Host Server, den Sie zum Senden von e-Mails verwenden. Siehe die <xref:System.Net.Mail.SmtpClient.Host%2A> Eigenschaften <xref:System.Net.Mail.SmtpClient.Port%2A> und.  
  
-   Anmelde Informationen für die Authentifizierung, wenn dies für den SMTP-Server erforderlich ist. Siehe <xref:System.Net.Mail.SmtpClient.Credentials%2A>-Eigenschaft.  
  
-   Die e-Mail-Adresse des Absenders. Siehe die <xref:System.Net.Mail.SmtpClient.Send%2A> Methoden <xref:System.Net.Mail.SmtpClient.SendAsync%2A> und, die einen `from` -Parameter akzeptieren. Siehe auch die <xref:System.Net.Mail.MailMessage.From%2A?displayProperty=nameWithType> -Eigenschaft.  
  
-   Die e-Mail-Adresse oder die Adressen der Empfänger. Siehe die <xref:System.Net.Mail.SmtpClient.Send%2A> Methoden <xref:System.Net.Mail.SmtpClient.SendAsync%2A> und, die einen `recipient` -Parameter akzeptieren. Siehe auch die <xref:System.Net.Mail.MailMessage.To%2A?displayProperty=nameWithType> -Eigenschaft.  
  
-   Der Nachrichten Inhalt. Siehe die <xref:System.Net.Mail.SmtpClient.Send%2A> Methoden <xref:System.Net.Mail.SmtpClient.SendAsync%2A> und, die einen `body` -Parameter akzeptieren. Siehe auch die <xref:System.Net.Mail.MailMessage.Body%2A?displayProperty=nameWithType> -Eigenschaft.  
  
 Wenn Sie eine Anlage mit einer e-Mail-Nachricht einschließen möchten, erstellen Sie <xref:System.Net.Mail.Attachment> zuerst die Anlage mithilfe der-Klasse, und fügen Sie Sie <xref:System.Net.Mail.MailMessage.Attachments%2A?displayProperty=nameWithType> dann der Nachricht mithilfe der-Eigenschaft hinzu. Abhängig von dem von den Empfängern verwendeten e-Mail-Reader und dem Dateityp der Anlage sind einige Empfänger möglicherweise nicht in der Lage, die Anlage zu lesen. Für Clients, die die Anlage nicht in ihrer ursprünglichen Form anzeigen können, können Sie mithilfe der <xref:System.Net.Mail.MailMessage.AlternateViews%2A?displayProperty=nameWithType> -Eigenschaft Alternative Ansichten angeben.  
  
 In .NET Framework können Sie die Anwendungs-oder Computer Konfigurationsdateien verwenden, um die Standardwerte für Host, Port und Anmelde <xref:System.Net.Mail.SmtpClient> Informationen für alle Objekte anzugeben. Weitere Informationen finden Sie unter [ &lt;MailSettings&gt; -Element (Netzwerkeinstellungen)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). .Net Core unterstützt das Festlegen von Standardwerten nicht. Um dieses Problem zu umgehen, müssen Sie die relevanten Eigenschaften <xref:System.Net.Mail.SmtpClient> direkt auf festlegen.  
  
 Um die e-Mail-Nachricht und den Block zu senden, während Sie darauf warten, dass die e-Mail an den SMTP- <xref:System.Net.Mail.SmtpClient.Send%2A> Server gesendet wird, verwenden Sie eine der synchronen Methoden Verwenden Sie eine der asynchronen <xref:System.Net.Mail.SmtpClient.SendAsync%2A> Methoden, damit der Haupt Thread des Programms weiterhin ausgeführt werden kann, während die e-Mail übertragen wird. Das <xref:System.Net.Mail.SmtpClient.SendCompleted> -Ereignis wird ausgelöst, <xref:System.Net.Mail.SmtpClient.SendAsync%2A> wenn ein-Vorgang abgeschlossen wird. Um dieses Ereignis zu empfangen, müssen Sie einen <xref:System.Net.Mail.SendCompletedEventHandler> <xref:System.Net.Mail.SmtpClient.SendCompleted>Delegaten hinzufügen. Der <xref:System.Net.Mail.SendCompletedEventHandler> Delegat muss auf eine Rückruf Methode verweisen, die <xref:System.Net.Mail.SmtpClient.SendCompleted> die Benachrichtigung von Ereignissen behandelt. Verwenden Sie die <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> Methode, um eine asynchrone e-Mail-Übertragung abzubrechen.  
  
> [!NOTE]
>  Wenn eine e-Mail-Übertragung durchgeführt wird <xref:System.Net.Mail.SmtpClient.SendAsync%2A> und <xref:System.Net.Mail.SmtpClient.Send%2A> Sie oder wieder anrufen, erhalten <xref:System.InvalidOperationException>Sie eine.  
  
 Die Verbindung, die von der aktuellen Instanz der <xref:System.Net.Mail.SmtpClient> -Klasse zum SMTP-Server hergestellt wird, wird möglicherweise wieder verwendet, wenn eine Anwendung mehrere Nachrichten an denselben SMTP-Server senden möchte. Dies ist besonders nützlich, wenn Authentifizierung oder Verschlüsselung verwendet wird, um eine Verbindung mit dem SMTP-Server herzustellen. Der Prozess der Authentifizierung und Einrichtung einer TLS-Sitzung kann sehr aufwändig sein. Eine Anforderung zur erneuten Einrichtung einer Verbindung für jede Nachricht, wenn eine große Menge an e-Mail an denselben SMTP-Server gesendet wird, kann sich erheblich auf die Leistung auswirken. Es gibt eine Reihe von e-Mail-Anwendungen, die e-Mail-Statusaktualisierungen, Newsletter-Distributionen oder e-Mail-Benachrichtigungen senden. Außerdem unterstützen viele e-Mail-Client Anwendungen einen Offline Modus, in dem Benutzer viele e-Mail-Nachrichten verfassen können, die später gesendet werden, wenn eine Verbindung mit dem SMTP-Server hergestellt wird. Es ist typisch für einen e-Mail-Client, alle SMTP-Nachrichten an einen bestimmten SMTP-Server (bereitgestellt vom Internet Dienstanbieter) zu senden, der diese e-Mail an andere SMTP-Server weiterleitet.  
  
 Die <xref:System.Net.Mail.SmtpClient> Klassen Implementierung bündelt SMTP-Verbindungen, damit der Aufwand für das erneute Herstellen einer Verbindung für jede Nachricht an denselben Server vermieden werden kann. Eine Anwendung kann dasselbe <xref:System.Net.Mail.SmtpClient> Objekt wieder verwenden, um viele verschiedene e-Mails an denselben SMTP-Server und an viele verschiedene SMTP-Server zu senden. Folglich gibt es keine Möglichkeit, zu bestimmen, wann eine Anwendung mit der Verwendung des <xref:System.Net.Mail.SmtpClient> -Objekts fertig ist, und Sie sollte bereinigt werden.  
  
 Wenn eine SMTP-Sitzung abgeschlossen ist und der Client die Verbindung beenden möchte, muss Sie eine Beendigungs Nachricht an den Server senden, um anzugeben, dass keine Nachrichten mehr gesendet werden müssen. Dies ermöglicht es dem Server, Ressourcen freizugeben, die der Verbindung vom Client zugeordnet sind, und die vom Client gesendeten Nachrichten zu verarbeiten.  
  
 Die <xref:System.Net.Mail.SmtpClient> -Klasse verfügt `Finalize` über keine-Methode, sodass eine <xref:System.Net.Mail.SmtpClient.Dispose%2A> Anwendung aufgerufen werden muss, um Ressourcen explizit freizugeben. Die <xref:System.Net.Mail.SmtpClient.Dispose%2A> -Methode durchläuft alle eingerichteten Verbindungen mit dem in der <xref:System.Net.Mail.SmtpClient.Host%2A> -Eigenschaft angegebenen SMTP-Server und sendet eine beendende Nachricht, gefolgt vom ordnungsgemäßen Beenden der TCP-Verbindung. Die <xref:System.Net.Mail.SmtpClient.Dispose%2A> Methode auch frei, die vom verwendeten nicht verwalteten Ressourcen der <xref:System.Net.Sockets.Socket> und verwirft optional auch die verwalteten Ressourcen.  
  
 Rufen Sie <xref:System.Net.Mail.SmtpClient.Dispose%2A> auf, wenn Sie <xref:System.Net.Mail.SmtpClient> nicht mehr benötigen. Die <xref:System.Net.Mail.SmtpClient.Dispose%2A>-Methode bewirkt, dass <xref:System.Net.Mail.SmtpClient> nicht mehr verwendet werden kann. Nach dem <xref:System.Net.Mail.SmtpClient.Dispose%2A>Aufrufen von müssen Sie alle Verweise auf den <xref:System.Net.Mail.SmtpClient> freigeben, damit der Garbage Collector den Speicher freigeben kann <xref:System.Net.Mail.SmtpClient> , den der belegt hat.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das asynchrone Senden einer e-Mail-Nachricht veranschaulicht.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Net.Mime" />
    <related type="Article" href="~/docs/framework/network-programming/index.md">Netzwerkprogrammierung in .NET Framework</related>
    <related type="Article" href="~/docs/framework/network-programming/network-programming-samples.md">Beispiele zur Netzwerkprogrammierung</related>
    <related type="Article" href="~/docs/framework/network-programming/network-tracing.md">Netzwerkablaufverfolgung in .NET Framework</related>
    <related type="Article" href="~/docs/framework/network-programming/security-in-network-programming.md">Sicherheit in der Netzwerkprogrammierung</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Mail.SmtpClient" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Mail.SmtpClient" />-Klasse mit den Einstellungen der Konfigurationsdatei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor initialisiert die <xref:System.Net.Mail.SmtpClient.Host%2A>Eigenschaften <xref:System.Net.Mail.SmtpClient.Credentials%2A>, und <xref:System.Net.Mail.SmtpClient.Port%2A> für die neue <xref:System.Net.Mail.SmtpClient> mithilfe der Einstellungen in den Anwendungs-oder Computer Konfigurationsdateien. Weitere Informationen finden Sie unter [ &lt;MailSettings&gt; -Element (Netzwerkeinstellungen)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Senden einer e-Mail-Nachricht veranschaulicht.  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 Ein Beispiel für den \<Knoten mailSettings > in der Anwendungs-oder Computer Konfigurationsdatei finden [ &lt;Sie unter mailSettings&gt; -Element (Netzwerkeinstellungen)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.Mail.SmtpPermission">, um einen <see cref="T:System.Net.Mail.SmtpClient" />zu erstellen. Zugeordnete Enumeration: <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient (string host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (host As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient(System::String ^ host);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.SmtpClient : string -&gt; System.Net.Mail.SmtpClient" Usage="new System.Net.Mail.SmtpClient host" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host">Ein <see cref="T:System.String" />, der den Namen oder die IP-Adresse des für SMTP-Transaktionen verwendeten Hostcomputers enthält.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Mail.SmtpClient" />-Klasse, die E-Mails mithilfe des angegebenen SMTP-Servers sendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der `host` -Parameter wird verwendet, um den Wert <xref:System.Net.Mail.SmtpClient.Host%2A> der-Eigenschaft zu initialisieren. Die <xref:System.Net.Mail.SmtpClient.Credentials%2A> - <xref:System.Net.Mail.SmtpClient.Port%2A> Eigenschaft und die-Eigenschaft werden mithilfe der Einstellungen in der Anwendungs-oder Computer Konfigurationsdatei initialisiert. Wenn `host` gleich `null` oder gleich <xref:System.String.Empty?displayProperty=nameWithType>ist ,<xref:System.Net.Mail.SmtpClient.Host%2A> wird mithilfe der Einstellungen in der Anwendungs-oder Computer Konfigurationsdatei initialisiert.  
  
 Weitere Informationen zum Verwenden der Anwendungs-und Computer Konfigurationsdateien finden [ &lt;Sie unter&gt; mailSettings-Element (Netzwerkeinstellungen)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Wenn Informationen mithilfe <xref:System.Net.Mail.SmtpClient> von Konstruktoren oder Eigenschaften angegeben werden, überschreiben diese Informationen die Konfigurationsdatei Einstellungen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Aufrufen dieses Konstruktors veranschaulicht.  
  
 [!code-cpp[NclMailSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#3)]
 [!code-csharp[NclMailSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.Mail.SmtpPermission">, um einen <see cref="T:System.Net.Mail.SmtpClient" />zu erstellen. Zugeordnete Enumeration: <see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SmtpClient (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (host As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SmtpClient(System::String ^ host, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.SmtpClient : string * int -&gt; System.Net.Mail.SmtpClient" Usage="new System.Net.Mail.SmtpClient (host, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">Ein <see cref="T:System.String" />, der den Namen oder die IP-Adresse des für SMTP-Transaktionen verwendeten Hosts enthält.</param>
        <param name="port">Ein <see cref="T:System.Int32" /> größer als 0 (null), das den für <paramref name="host" /> zu verwendenden Anschluss enthält.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Mail.SmtpClient" />-Klasse, die E-Mails mithilfe des angegebenen SMTP-Servers und -Ports sendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `host` und `port` Parameter legen Sie den Wert, der die <xref:System.Net.Mail.SmtpClient.Host%2A> und <xref:System.Net.Mail.SmtpClient.Port%2A> Eigenschaften bzw. Wenn `host` gleich `null` oder gleich <xref:System.String.Empty?displayProperty=nameWithType>ist ,<xref:System.Net.Mail.SmtpClient.Host%2A> wird mithilfe der Einstellungen in der Anwendungs-oder Computer Konfigurationsdatei initialisiert. Wenn `port` 0 (NULL <xref:System.Net.Mail.SmtpClient.Port%2A> ) ist, wird mithilfe der Einstellungen in der Anwendungs-oder Computer Konfigurationsdatei initialisiert. Die <xref:System.Net.Mail.SmtpClient.Credentials%2A> -Eigenschaft wird mit den Einstellungen in der Anwendungs-oder Computer Konfigurationsdatei initialisiert.  
  
 Weitere Informationen zum Verwenden der Anwendungs-und Computer Konfigurationsdateien finden [ &lt;Sie unter&gt; mailSettings-Element (Netzwerkeinstellungen)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Wenn Informationen mithilfe <xref:System.Net.Mail.SmtpClient> von Konstruktoren oder Eigenschaften angegeben werden, überschreiben diese Informationen die Konfigurationsdatei Einstellungen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Aufrufen dieses Konstruktors veranschaulicht.  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="port" /> darf nicht kleiner 0 (null) sein.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">, um den Port anzugeben. Zugeordnete Enumeration: <see cref="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificates : System.Security.Cryptography.X509Certificates.X509CertificateCollection" Usage="System.Net.Mail.SmtpClient.ClientCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Client certificates not used")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt an, welche Zertifikate zum Herstellen der SSL (Secure Sockets Layer)-Verbindung verwendet werden sollen.</summary>
        <value>Eine <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />, die ein oder mehrere Clientzertifikate enthält. Der Standardwert wird von den E-Mail-Konfigurationsattributen in einer Konfigurationsdatei abgeleitet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Client Zertifikate sind standardmäßig optional. bei der Serverkonfiguration ist es jedoch möglicherweise erforderlich, dass der Client ein gültiges Zertifikat als Teil der anfänglichen Verbindungs Verhandlung präsentiert.  
  
> [!NOTE]
>  Das Framework speichert SSL-Sitzungen bei der Erstellung zwischen und versucht nach Möglichkeit, eine zwischengespeicherte Sitzung für eine neue Anforderung wiederzuverwenden. Wenn Sie versuchen, eine SSL-Sitzung wiederzuverwenden, verwendet das Framework das <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> erste Element von (sofern vorhanden) oder versucht, anonyme Sitzungen wiederzuverwenden, <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> wenn leer ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine SSL-Verbindung mit dem SMTP-Server hergestellt, und die Verbindung wird verwendet, um eine e-Mail zu senden.  
  
 [!code-csharp[NclSSLMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSSLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">MailSettings-Element (Netzwerkeinstellungen)</related>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentialsByHost Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentialsByHost Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentialsByHost" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentialsByHost ^ Credentials { System::Net::ICredentialsByHost ^ get(); void set(System::Net::ICredentialsByHost ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentialsByHost with get, set" Usage="System.Net.Mail.SmtpClient.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentialsByHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anmeldeinformationen zum Authentifizieren des Absenders ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Net.ICredentialsByHost" />, das die für die Authentifizierung zu verwendenden Anmeldeinformationen darstellt, oder <see langword="null" />, wenn keine Anmeldeinformationen angegeben wurden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für einige SMTP-Server ist es erforderlich, dass der Client authentifiziert wird, bevor der Server in seinem Auftrag eine e-Mail sendet. Wenn Sie die <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> standardmäßigen Netzwerk Anmelde Informationen verwenden möchten, können `true` Sie auf festlegen, anstatt diese Eigenschaft festzulegen. Wenn die <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> -Eigenschaft auf fest `false,` gelegt ist, wird der in <xref:System.Net.Mail.SmtpClient.Credentials%2A> der-Eigenschaft festgelegte Wert für die Anmelde Informationen verwendet, wenn eine Verbindung mit dem Server hergestellt wird. Wenn die <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> -Eigenschaft auf `false` festgelegt ist <xref:System.Net.Mail.SmtpClient.Credentials%2A> und die-Eigenschaft nicht festgelegt wurde, wird die e-Mail anonym an den Server gesendet.  
  
 Informationen zu Anmelde Informationen können auch mithilfe der Anwendungs-und Computer Konfigurationsdateien angegeben werden. Weitere Informationen finden Sie unter [ &lt;MailSettings&gt; -Element (Netzwerkeinstellungen)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Wenn Informationen mithilfe der <xref:System.Net.Mail.SmtpClient.Credentials%2A> -Eigenschaft angegeben werden, überschreibt diese Informationen die Konfigurationsdatei Einstellungen.  
  
> [!CAUTION]
>  Wenn Sie Anmelde Informationen für die Standard Authentifizierung angeben, werden Sie als Klartext an den Server gesendet. Dies kann ein Sicherheitsproblem darstellen, da ihre Anmelde Informationen angezeigt und dann von anderen Benutzern verwendet werden können.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Festlegen der zum Senden einer e-Mail verwendeten Anmelde Informationen veranschaulicht.  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Sie können den Wert dieser Eigenschaft nicht ändern, während eine E-Mail-Nachricht gesendet wird.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeliveryFormat">
      <MemberSignature Language="C#" Value="public System.Net.Mail.SmtpDeliveryFormat DeliveryFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.SmtpDeliveryFormat DeliveryFormat" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.DeliveryFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliveryFormat As SmtpDeliveryFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::SmtpDeliveryFormat DeliveryFormat { System::Net::Mail::SmtpDeliveryFormat get(); void set(System::Net::Mail::SmtpDeliveryFormat value); };" />
      <MemberSignature Language="F#" Value="member this.DeliveryFormat : System.Net.Mail.SmtpDeliveryFormat with get, set" Usage="System.Net.Mail.SmtpClient.DeliveryFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SmtpDeliveryFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Übermittlungsformat ab, das von <see cref="T:System.Net.Mail.SmtpClient" /> verwendet wird, um E-Mails zu senden, oder legt es fest.</summary>
        <value>Das von <see cref="T:System.Net.Mail.SmtpClient" /> benutzte Übermittlungsformat.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeliveryMethod">
      <MemberSignature Language="C#" Value="public System.Net.Mail.SmtpDeliveryMethod DeliveryMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.SmtpDeliveryMethod DeliveryMethod" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.DeliveryMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliveryMethod As SmtpDeliveryMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::SmtpDeliveryMethod DeliveryMethod { System::Net::Mail::SmtpDeliveryMethod get(); void set(System::Net::Mail::SmtpDeliveryMethod value); };" />
      <MemberSignature Language="F#" Value="member this.DeliveryMethod : System.Net.Mail.SmtpDeliveryMethod with get, set" Usage="System.Net.Mail.SmtpClient.DeliveryMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SmtpDeliveryMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt an, wie ausgehende E-Mail-Nachrichten behandelt werden.</summary>
        <value>Eine <see cref="T:System.Net.Mail.SmtpDeliveryMethod" />, die angibt, wie E-Mail-Nachrichten übermittelt werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Übermittlungs Methoden umfassen:  
  
-   Ein SMTP-Server.  
  
-   Verschieben der e-Mail in das PICKUP-Verzeichnis für IIS, das dann die Nachricht übermittelt.  
  
-   Verschieben der e-Mail in ein Verzeichnis, das <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A> von für die spätere Übermittlung durch eine andere Anwendung angegeben wird.  
  
 Der Standardwert für diese Eigenschaft kann auch in einer Computer-oder Anwendungs Konfigurationsdatei festgelegt werden. Alle Änderungen, die an <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A> der-Eigenschaft vorgenommen werden, überschreiben die Konfigurationsdatei Einstellungen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="P:System.Net.Configuration.SmtpSection.DeliveryMethod" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">&lt;mailSettings&gt; -Element (Netzwerkeinstellungen)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;SMTP&gt; -Element (Netzwerkeinstellungen)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sendet eine QUIT-Meldung an den SMTP-Server, beendet die TCP-Verbindung ordnungsgemäß und gibt alle Ressourcen frei, die von der aktuellen Instanz der <see cref="T:System.Net.Mail.SmtpClient" />-Klasse verwendet werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Verbindung, die von der aktuellen Instanz der <xref:System.Net.Mail.SmtpClient> -Klasse zum SMTP-Server hergestellt wird, wird möglicherweise wieder verwendet, wenn eine Anwendung mehrere Nachrichten an denselben SMTP-Server senden möchte. Dies ist besonders nützlich, wenn Authentifizierung oder Verschlüsselung verwendet wird, um eine Verbindung mit dem SMTP-Server herzustellen. Der Prozess der Authentifizierung und Einrichtung einer TLS-Sitzung kann sehr aufwändig sein. Eine Anforderung zur erneuten Einrichtung einer Verbindung für jede Nachricht, wenn eine große Menge an e-Mail an denselben SMTP-Server gesendet wird, kann sich erheblich auf die Leistung auswirken. Es gibt eine Reihe von e-Mail-Anwendungen, die e-Mail-Statusaktualisierungen, Newsletter-Distributionen oder e-Mail-Benachrichtigungen senden. Außerdem unterstützen viele e-Mail-Client Anwendungen einen Offline Modus, in dem Benutzer viele e-Mail-Nachrichten verfassen können, die später gesendet werden, wenn eine Verbindung mit dem SMTP-Server hergestellt wird. Es ist typisch für einen e-Mail-Client, alle SMTP-Nachrichten an einen bestimmten SMTP-Server (bereitgestellt vom Internet Dienstanbieter) zu senden, der diese e-Mail an andere SMTP-Server weiterleitet.  
  
 Die <xref:System.Net.Mail.SmtpClient> Klassen Implementierung bündelt SMTP-Verbindungen, damit der Aufwand für das erneute Herstellen einer Verbindung für jede Nachricht an denselben Server vermieden werden kann. Eine Anwendung kann dasselbe <xref:System.Net.Mail.SmtpClient> Objekt wieder verwenden, um viele verschiedene e-Mails an denselben SMTP-Server und an viele verschiedene SMTP-Server zu senden. Folglich gibt es keine Möglichkeit, zu bestimmen, wann eine Anwendung mit der Verwendung des <xref:System.Net.Mail.SmtpClient> -Objekts fertig ist, und Sie sollte bereinigt werden.  
  
 Wenn eine SMTP-Sitzung abgeschlossen ist und der Client die Verbindung beenden möchte, muss Sie eine Beendigungs Nachricht an den Server senden, um anzugeben, dass keine Nachrichten mehr gesendet werden müssen. Dies ermöglicht es dem Server, Ressourcen freizugeben, die der Verbindung vom Client zugeordnet sind, und die vom Client gesendeten Nachrichten zu verarbeiten.  
  
 Die <xref:System.Net.Mail.SmtpClient.Dispose%2A> -Methoden durchlaufen alle eingerichteten Verbindungen und senden eine beendende Nachricht an jeden SMTP-Server, gefolgt vom ordnungsgemäßen Beenden der TCP-Verbindung. Diese Methoden geben auch die von <xref:System.Net.Sockets.Socket> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="smtpClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sendet eine QUIT-Meldung an den SMTP-Server, beendet die TCP-Verbindung ordnungsgemäß und gibt alle Ressourcen frei, die von der aktuellen Instanz der <see cref="T:System.Net.Mail.SmtpClient" />-Klasse verwendet werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Verbindung, die von der aktuellen Instanz der <xref:System.Net.Mail.SmtpClient> -Klasse zum SMTP-Server hergestellt wird, wird möglicherweise wieder verwendet, wenn eine Anwendung mehrere Nachrichten an denselben SMTP-Server senden möchte. Dies ist besonders nützlich, wenn Authentifizierung oder Verschlüsselung verwendet wird, um eine Verbindung mit dem SMTP-Server herzustellen. Der Prozess der Authentifizierung und Einrichtung einer TLS-Sitzung kann sehr aufwändig sein. Eine Anforderung zur erneuten Einrichtung einer Verbindung für jede Nachricht, wenn eine große Menge an e-Mail an denselben SMTP-Server gesendet wird, kann sich erheblich auf die Leistung auswirken. Es gibt eine Reihe von e-Mail-Anwendungen, die e-Mail-Statusaktualisierungen, Newsletter-Distributionen oder e-Mail-Benachrichtigungen senden. Außerdem unterstützen viele e-Mail-Client Anwendungen einen Offline Modus, in dem Benutzer viele e-Mail-Nachrichten verfassen können, die später gesendet werden, wenn eine Verbindung mit dem SMTP-Server hergestellt wird. Es ist typisch für einen e-Mail-Client, alle SMTP-Nachrichten an einen bestimmten SMTP-Server (bereitgestellt vom Internet Dienstanbieter) zu senden, der diese e-Mail an andere SMTP-Server weiterleitet.  
  
 Die <xref:System.Net.Mail.SmtpClient> Klassen Implementierung bündelt SMTP-Verbindungen, damit der Aufwand für das erneute Herstellen einer Verbindung für jede Nachricht an denselben Server vermieden werden kann. Eine Anwendung kann dasselbe <xref:System.Net.Mail.SmtpClient> Objekt wieder verwenden, um viele verschiedene e-Mails an denselben SMTP-Server und an viele verschiedene SMTP-Server zu senden. Folglich gibt es keine Möglichkeit, zu bestimmen, wann eine Anwendung mit der Verwendung des <xref:System.Net.Mail.SmtpClient> -Objekts fertig ist, und Sie sollte bereinigt werden.  
  
 Wenn eine SMTP-Sitzung abgeschlossen ist und der Client die Verbindung beenden möchte, muss Sie eine Beendigungs Nachricht an den Server senden, um anzugeben, dass keine Nachrichten mehr gesendet werden müssen. Dies ermöglicht es dem Server, Ressourcen freizugeben, die der Verbindung vom Client zugeordnet sind, und die vom Client gesendeten Nachrichten zu verarbeiten.  
  
 Durch Aufrufen <xref:System.Net.Mail.SmtpClient.Dispose%2A> der-Methode <xref:System.Net.Mail.SmtpClient> für ein-Objekt, das einen asynchronen <xref:System.Net.Mail.SmtpClient.SendAsync%2A> Vorgang ausführt, wird der Sendevorgang <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> abgebrochen, als ob die-Methode aufgerufen wurde.  
  
 Die <xref:System.Net.Mail.SmtpClient> -Klasse verfügt `Finalize` über keine-Methode. Eine Anwendung muss also anrufen <xref:System.Net.Mail.SmtpClient.Dispose%2A> , um Ressourcen explizit freizugeben.  
  
 Die <xref:System.Net.Mail.SmtpClient.Dispose%2A> -Methode durchläuft alle eingerichteten Verbindungen mit dem in der <xref:System.Net.Mail.SmtpClient.Host%2A> -Eigenschaft angegebenen SMTP-Server und sendet eine beendende Nachricht, gefolgt vom ordnungsgemäßen Beenden der TCP-Verbindung. Die <xref:System.Net.Mail.SmtpClient.Dispose%2A> -Methode gibt auch die nicht verwalteten Ressourcen frei, die <xref:System.Net.Sockets.Socket>von der zugrunde liegenden verwendet werden.  
  
 Rufen Sie <xref:System.Net.Mail.SmtpClient.Dispose%2A> auf, wenn Sie <xref:System.Net.Mail.SmtpClient> nicht mehr benötigen. Die <xref:System.Net.Mail.SmtpClient.Dispose%2A>-Methode bewirkt, dass <xref:System.Net.Mail.SmtpClient> nicht mehr verwendet werden kann. Nach dem <xref:System.Net.Mail.SmtpClient.Dispose%2A>Aufrufen von müssen Sie alle Verweise auf den <xref:System.Net.Mail.SmtpClient> freigeben, damit der Garbage Collector den Speicher freigeben kann <xref:System.Net.Mail.SmtpClient> , den der belegt hat.  
  
 Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer](~/docs/standard/garbage-collection/implementing-dispose.md)verwerfen-Methode.  
  
> [!NOTE]
>  Rufen Sie immer <xref:System.Net.Mail.SmtpClient.Dispose%2A> auf, bevor Sie den letzten Verweis auf das <xref:System.Net.Mail.SmtpClient> freigeben. Andernfalls werden die von ihm verwendeten Ressourcen nicht freigegeben, sodass der Garbage Collector den Speicher freigeben kann.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="smtpClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Does nothing at the moment.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</param>
        <summary>Sendet eine QUIT-Meldung an den SMTP-Server, beendet die TCP-Verbindung ordnungsgemäß, gibt alle Ressourcen frei, die von der aktuellen Instanz der <see cref="T:System.Net.Mail.SmtpClient" />-Klasse verwendet werden, und gibt optional die verwalteten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Verbindung, die von der aktuellen Instanz der <xref:System.Net.Mail.SmtpClient> -Klasse zum SMTP-Server hergestellt wird, wird möglicherweise wieder verwendet, wenn eine Anwendung mehrere Nachrichten an denselben SMTP-Server senden möchte. Dies ist besonders nützlich, wenn Authentifizierung oder Verschlüsselung verwendet wird, um eine Verbindung mit dem SMTP-Server herzustellen. Der Prozess der Authentifizierung und Einrichtung einer TLS-Sitzung kann sehr aufwändig sein. Eine Anforderung zur erneuten Einrichtung einer Verbindung für jede Nachricht, wenn eine große Menge an e-Mail an denselben SMTP-Server gesendet wird, kann sich erheblich auf die Leistung auswirken. Es gibt eine Reihe von e-Mail-Anwendungen, die e-Mail-Statusaktualisierungen, Newsletter-Distributionen oder e-Mail-Benachrichtigungen senden. Außerdem unterstützen viele e-Mail-Client Anwendungen einen Offline Modus, in dem Benutzer viele e-Mail-Nachrichten verfassen können, die später gesendet werden, wenn eine Verbindung mit dem SMTP-Server hergestellt wird. Es ist typisch für einen e-Mail-Client, alle SMTP-Nachrichten an einen bestimmten SMTP-Server (bereitgestellt vom Internet Dienstanbieter) zu senden, der diese e-Mail an andere SMTP-Server weiterleitet.  
  
 Die <xref:System.Net.Mail.SmtpClient> Klassen Implementierung bündelt SMTP-Verbindungen, damit der Aufwand für das erneute Herstellen einer Verbindung für jede Nachricht an denselben Server vermieden werden kann. Eine Anwendung kann dasselbe <xref:System.Net.Mail.SmtpClient> Objekt wieder verwenden, um viele verschiedene e-Mails an denselben SMTP-Server und an viele verschiedene SMTP-Server zu senden. Folglich gibt es keine Möglichkeit, zu bestimmen, wann eine Anwendung mit der Verwendung des <xref:System.Net.Mail.SmtpClient> -Objekts fertig ist, und Sie sollte bereinigt werden.  
  
 Wenn eine SMTP-Sitzung abgeschlossen ist und der Client die Verbindung beenden möchte, muss Sie eine Beendigungs Nachricht an den Server senden, um anzugeben, dass keine Nachrichten mehr gesendet werden müssen. Dies ermöglicht es dem Server, Ressourcen freizugeben, die der Verbindung vom Client zugeordnet sind, und die vom Client gesendeten Nachrichten zu verarbeiten.  
  
 Durch Aufrufen <xref:System.Net.Mail.SmtpClient.Dispose%2A> der-Methode <xref:System.Net.Mail.SmtpClient> für ein-Objekt, das einen asynchronen <xref:System.Net.Mail.SmtpClient.SendAsync%2A> Vorgang ausführt, wird der Sendevorgang <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> abgebrochen, als ob die-Methode aufgerufen wurde.  
  
 Die <xref:System.Net.Mail.SmtpClient> -Klasse verfügt `Finalize` über keine-Methode. Eine Anwendung muss also anrufen <xref:System.Net.Mail.SmtpClient.Dispose%2A> , um Ressourcen explizit freizugeben.  
  
 Die <xref:System.Net.Mail.SmtpClient.Dispose%2A> -Methode durchläuft alle eingerichteten Verbindungen mit dem in der <xref:System.Net.Mail.SmtpClient.Host%2A> -Eigenschaft angegebenen SMTP-Server und sendet eine beendende Nachricht, gefolgt vom ordnungsgemäßen Beenden der TCP-Verbindung. Die <xref:System.Net.Mail.SmtpClient.Dispose%2A> Methode auch frei, die vom verwendeten nicht verwalteten Ressourcen der <xref:System.Net.Sockets.Socket> und verwirft optional auch die verwalteten Ressourcen.  
  
 Rufen Sie <xref:System.Net.Mail.SmtpClient.Dispose%2A> auf, wenn Sie <xref:System.Net.Mail.SmtpClient> nicht mehr benötigen. Die <xref:System.Net.Mail.SmtpClient.Dispose%2A>-Methode bewirkt, dass <xref:System.Net.Mail.SmtpClient> nicht mehr verwendet werden kann. Nach dem <xref:System.Net.Mail.SmtpClient.Dispose%2A>Aufrufen von müssen Sie alle Verweise auf den <xref:System.Net.Mail.SmtpClient> freigeben, damit der Garbage Collector den Speicher freigeben kann <xref:System.Net.Mail.SmtpClient> , den der belegt hat.  
  
 Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer](~/docs/standard/garbage-collection/implementing-dispose.md)verwerfen-Methode.  
  
> [!NOTE]
>  Rufen Sie immer <xref:System.Net.Mail.SmtpClient.Dispose%2A> auf, bevor Sie den letzten Verweis auf das <xref:System.Net.Mail.SmtpClient> freigeben. Andernfalls werden die von ihm verwendeten Ressourcen nicht freigegeben, sodass der Garbage Collector den Speicher freigeben kann.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSsl">
      <MemberSignature Language="C#" Value="public bool EnableSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSsl" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.EnableSsl" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSsl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableSsl : bool with get, set" Usage="System.Net.Mail.SmtpClient.EnableSsl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Geben Sie an, ob der <see cref="T:System.Net.Mail.SmtpClient" /> die Verbindung mit SSL (Secure Sockets Layer) verschlüsselt.</summary>
        <value><see langword="true" />, wenn der <see cref="T:System.Net.Mail.SmtpClient" /> SSL verwendet, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> -Eigenschaft gibt an, ob für den Zugriff auf den angegebenen SMTP-Mailserver SSL verwendet wird.  
  
 Der Standardwert für diese Eigenschaft kann auch in einer Computer-oder Anwendungs Konfigurationsdatei festgelegt werden. Alle Änderungen, die an <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> der-Eigenschaft vorgenommen werden, überschreiben die Konfigurationsdatei Einstellungen.  
  
 Die <xref:System.Net.Mail.SmtpClient> -Klasse unterstützt nur die SMTP-Dienst Erweiterung für Secure SMTP over Transport Layer Security, wie in RFC 3207 definiert. In diesem Modus beginnt die SMTP-Sitzung auf einem unverschlüsselten Kanal. Anschließend wird vom Client ein STARTTLS-Befehl an den Server ausgegeben, um zur sicheren Kommunikation über SSL zu wechseln. Weitere Informationen finden Sie unter RFC 3207, veröffentlicht von der Internet Engineering Task Force (IETF).  
  
 Eine Alternative Verbindungsmethode besteht darin, dass vor dem Senden von Protokoll Befehlen eine SSL-Sitzung eingerichtet wird. Diese Verbindungsmethode wird manchmal als SMTP/SSL, SMTP über SSL oder SMTPS bezeichnet und verwendet standardmäßig Port 465. Diese Alternative Verbindungsmethode mithilfe von SSL wird derzeit nicht unterstützt.  
  
 Mit können <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> Sie angeben, welche Client Zertifikate zum Herstellen der SSL-Verbindung verwendet werden sollen. Mit <xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A> dem können Sie das vom SMTP-Server bereitgestellte Zertifikat ablehnen. Mit <xref:System.Net.ServicePointManager.SecurityProtocol%2A> der-Eigenschaft können Sie die Version des zu verwendenden SSL-Protokolls angeben.  
  
> [!NOTE]
>  Wenn die <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> -Eigenschaft auf `true`festgelegt ist und der SMTP-Mailserver keine STARTTLS in der Antwort auf den EHLO-Befehl ankündigt, löst ein- <xref:System.Net.Mail.SmtpClient.Send%2A> Rückruf <xref:System.Net.Mail.SmtpClient.SendAsync%2A> der-Methode oder <xref:System.Net.Mail.SmtpException>der-Methode eine aus.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine SSL-Verbindung mit dem SMTP-Server hergestellt, und die Verbindung wird verwendet, um eine e-Mail zu senden.  
  
 [!code-csharp[NclSSLMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSSLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.EnableSsl" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">&lt;mailSettings&gt; -Element (Netzwerkeinstellungen)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;SMTP&gt; -Element (Netzwerkeinstellungen)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/network-element-network-settings.md">&lt;Network&gt; -Element (Netzwerkeinstellungen)</related>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Host" />
      <MemberSignature Language="VB.NET" Value="Public Property Host As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Host { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Host : string with get, set" Usage="System.Net.Mail.SmtpClient.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen oder die IP-Adresse des Hosts ab, der bzw. die für SMTP-Transaktionen verwendet wird, oder legt diese Informationen fest.</summary>
        <value>Ein <see cref="T:System.String" />, der den Namen oder die IP-Adresse des für SMTP-Transaktionen zu verwendenden Computers enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert der <xref:System.Net.Mail.SmtpClient.Host%2A> -Eigenschaft kann auch mithilfe von Konstruktoren oder der Anwendungs-oder Computer Konfigurationsdatei festgelegt werden. Weitere Informationen finden Sie unter [ &lt;MailSettings&gt; -Element (Netzwerkeinstellungen)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
 Wenn Informationen mithilfe dieser Eigenschaft angegeben werden, überschreibt diese Informationen die Konfigurationsdatei Einstellungen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Senden einer e-Mail-Nachricht mithilfe des Hosts und Ports veranschaulicht, der in einer Anwendungs Konfigurationsdatei angegeben ist.  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der für einen SET-Vorgang festgelegte Wert ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Der für einen set-Vorgang angegebene Wert ist gleich <see cref="F:System.String.Empty" /> ("").</exception>
        <exception cref="T:System.InvalidOperationException">Sie können den Wert dieser Eigenschaft nicht ändern, während eine E-Mail-Nachricht gesendet wird.</exception>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.Host" />
        <altmember cref="P:System.Net.Mail.SmtpClient.Port" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">mailSettings für System.net</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;SMTP&gt; -Element (Netzwerkeinstellungen)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/network-element-network-settings.md">&lt;Network&gt; -Element (Netzwerkeinstellungen)</related>
      </Docs>
    </Member>
    <Member MemberName="OnSendCompleted">
      <MemberSignature Language="C#" Value="protected void OnSendCompleted (System.ComponentModel.AsyncCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnSendCompleted(class System.ComponentModel.AsyncCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnSendCompleted (e As AsyncCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnSendCompleted(System::ComponentModel::AsyncCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnSendCompleted : System.ComponentModel.AsyncCompletedEventArgs -&gt; unit" Usage="smtpClient.OnSendCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Net.Mail.SmtpClient.SendCompleted" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klassen, die von der <xref:System.Net.Mail.SmtpClient> -Klasse erben, <xref:System.Net.Mail.SmtpClient.OnSendCompleted%2A> können die-Methode überschreiben, <xref:System.Net.Mail.SmtpClient.SendCompleted> um zusätzliche Aufgaben auszuführen, wenn das-Ereignis auftritt.  
  
 <xref:System.Net.Mail.SmtpClient.OnSendCompleted%2A> können auch abgeleitete Klassen behandeln <xref:System.Net.Mail.SmtpClient.SendCompleted> ohne Anfügen eines Delegaten. Dies ist das bevorzugte Verfahren für die Behandlung von <xref:System.Net.Mail.SmtpClient.SendCompleted> in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> <see cref="E:System.Net.Mail.SmtpClient.SendCompleted" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegaten<see cref="M:System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="PickupDirectoryLocation">
      <MemberSignature Language="C#" Value="public string PickupDirectoryLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PickupDirectoryLocation" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.PickupDirectoryLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property PickupDirectoryLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PickupDirectoryLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PickupDirectoryLocation : string with get, set" Usage="System.Net.Mail.SmtpClient.PickupDirectoryLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Ordner ab, in dem Anwendungen vom lokalen SMTP-Server zu verarbeitende E-Mail-Nachrichten speichern, oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.String" />, der das Pickup-Verzeichnis für E-Mail-Nachrichten angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 E-Mail-Nachrichten im PICKUP-Verzeichnis werden automatisch von einem lokalen SMTP-Server gesendet (sofern vorhanden), z. b. IIS.  
  
 Der Standardwert für diese Eigenschaft kann auch in einer Computer-oder Anwendungs Konfigurationsdatei festgelegt werden. Alle Änderungen, die an <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A> der-Eigenschaft vorgenommen werden, überschreiben die Konfigurationsdatei Einstellungen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="P:System.Net.Configuration.SmtpSection.DeliveryMethod" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">&lt;mailSettings&gt; -Element (Netzwerkeinstellungen)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;SMTP&gt; -Element (Netzwerkeinstellungen)</related>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.Net.Mail.SmtpClient.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den für SMTP-Transaktionen verwendeten Anschluss ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Int32" />, das die Anschlussnummer für den SMTP-Host enthält. Der Standardwert ist 25.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert der <xref:System.Net.Mail.SmtpClient.Port%2A> -Eigenschaft kann auch mithilfe von Konstruktoren oder der Anwendungs-oder Computer Konfigurationsdatei festgelegt werden. Weitere Informationen zum Verwenden von Konfigurationsdateien finden [ &lt;Sie unter mailSettings&gt; -Element (Netzwerkeinstellungen)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md). Wenn Informationen mithilfe dieser Eigenschaft angegeben werden, überschreibt diese Informationen die Konfigurationsdatei Einstellungen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Senden einer e-Mail-Nachricht mithilfe des Hosts und Ports veranschaulicht, der in einer Anwendungs Konfigurationsdatei angegeben ist.  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der für einen set-Vorgang angegebene Wert ist kleiner oder gleich 0 (null).</exception>
        <exception cref="T:System.InvalidOperationException">Sie können den Wert dieser Eigenschaft nicht ändern, während eine E-Mail-Nachricht gesendet wird.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">, um die <see cref="P:System.Net.Mail.SmtpClient.Port" /> -Eigenschaft festzulegen. Zugeordnete Enumeration: <see cref="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort" /></permission>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.Port" />
        <altmember cref="P:System.Net.Mail.SmtpClient.Host" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">mailSettings für System.net</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;SMTP&gt; -Element (Netzwerkeinstellungen)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/network-element-network-settings.md">&lt;Network&gt; -Element (Netzwerkeinstellungen)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sendet eine E-Mail für die Übermittlung an einen SMTP-Server. Diese Methoden werden während der Übertragung der Nachricht blockiert.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.Net.Mail.MailMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class System.Net.Mail.MailMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Send(System.Net.Mail.MailMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (message As MailMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Net::Mail::MailMessage ^ message);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Net.Mail.MailMessage -&gt; unit" Usage="smtpClient.Send message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" />
      </Parameters>
      <Docs>
        <param name="message">Eine <see cref="T:System.Net.Mail.MailMessage" />, die die zu sendende Nachricht enthält.</param>
        <summary>Sendet die angegebene Nachricht an einen SMTP-Server für die Übermittlung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird blockiert, während die e-Mail übertragen wird. Sie können mithilfe der <xref:System.Net.Mail.SmtpClient.Timeout%2A> -Eigenschaft einen Timeout Wert angeben, um sicherzustellen, dass die Methode nach einem bestimmten Zeitraum zurückgegeben wird.  
  
 Vor dem Aufrufen dieser Methode müssen <xref:System.Net.Mail.SmtpClient.Host%2A> die <xref:System.Net.Mail.SmtpClient.Port%2A> -Eigenschaft und die-Eigenschaft entweder über die Konfigurationsdateien festgelegt werden, indem die relevanten Eigenschaften festgelegt oder <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> diese Informationen an den-Konstruktor übergeben werden.  
  
 Diese Methode kann nicht aufgerufen werden, wenn eine Nachricht asynchron gesendet wird.  
  
 Wenn für den SMTP-Host Anmelde Informationen erforderlich sind, müssen Sie diese vor dem Aufrufen dieser Methode festlegen. Zum Angeben von Anmelde Informationen verwenden <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> Sie <xref:System.Net.Mail.SmtpClient.Credentials%2A> die Eigenschaften oder.  
  
 Wenn Sie eine <xref:System.Net.Mail.SmtpException> Ausnahme erhalten, <xref:System.Net.Mail.SmtpException.StatusCode%2A> überprüfen Sie die-Eigenschaft, um zu ermitteln, warum der Vorgang fehlgeschlagen ist. <xref:System.Net.Mail.SmtpException> Kann auch eine innere Ausnahme enthalten, die den Grund für den Fehler des Vorgangs angibt.  
  
 Beim Senden von e-Mails <xref:System.Net.Mail.SmtpClient.Send%2A> mit an mehrere Empfänger, und der SMTP-Server akzeptiert einige Empfänger als gültig und <xref:System.Net.Mail.SmtpClient.Send%2A> lehnt andere ab, sendet eine e-Mail an die <xref:System.Net.Mail.SmtpFailedRecipientsException> akzeptierten Empfänger, und dann <xref:System.Net.Mail.SmtpFailedRecipientException> wird eine ausgelöst (oder eine, wenn nur eine der Empfänger wird abgelehnt). Eine <xref:System.Net.Mail.SmtpFailedRecipientsException> enthält eine Liste der Empfänger, die abgelehnt wurden.
  
> [!NOTE]
>  Wenn die <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> -Eigenschaft auf `true`festgelegt ist und der SMTP-Mailserver keine STARTTLS in der Antwort auf den EHLO-Befehl ankündigt, löst ein- <xref:System.Net.Mail.SmtpClient.Send%2A> Rückruf <xref:System.Net.Mail.SmtpClient.SendAsync%2A> der-Methode oder <xref:System.Net.Mail.SmtpException>der-Methode eine aus.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieser Methode veranschaulicht.  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Für diesen <see cref="T:System.Net.Mail.SmtpClient" /> wird gerade ein <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" />-Aufruf ausgeführt.  
  
- oder - 
 <see cref="P:System.Net.Mail.MailMessage.From" /> ist <see langword="null" />.  
  
- oder - 
In den Eigenschaften <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> und <see cref="P:System.Net.Mail.MailMessage.Bcc" /> sind keine Empfänger angegeben.  
  
- oder - 
 Die <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" />-Eigenschaft ist auf <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> festgelegt, und <see cref="P:System.Net.Mail.SmtpClient.Host" /> ist <see langword="null" />.  
  
- oder - 
 Die <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" />-Eigenschaft ist auf <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> festgelegt, und <see cref="P:System.Net.Mail.SmtpClient.Host" /> ist gleich der leeren Zeichenfolge ("").  
  
- oder - 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" />-Eigenschaft wird auf <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> festgelegt, und <see cref="P:System.Net.Mail.SmtpClient.Port" /> ist 0 (null), eine negative Zahl oder größer als 65,535.</exception>
        <exception cref="T:System.ObjectDisposedException">Dieses Objekt wurde verworfen.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">Die Verbindung mit dem SMTP-Server ist fehlgeschlagen.  
  
- oder - 
Fehler bei der Authentifizierung.  
  
- oder - 
Timeout für den Vorgang. 
- oder - 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> ist auf <see langword="true" /> festgelegt, die <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" />-Eigenschaft ist jedoch auf <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> oder <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" /> festgelegt.  
  
- oder - 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> wird auf <see langword="true," /> festgelegt, aber der SMTP-E-Mail-Server hat nicht STARTTLS in der Antwort auf den EHLO-Befehl angeboten.</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientException">Die <paramref name="message" /> konnte an einen der Empfänger in <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> oder <see cref="P:System.Net.Mail.MailMessage.Bcc" /> nicht übermittelt werden.</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientsException">Die <paramref name="message" /> konnte an mindestens zwei Empfänger in <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> oder <see cref="P:System.Net.Mail.MailMessage.Bcc" /> nicht übermittelt werden.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">zum Herstellen einer Verbindung mit dem SMTP-Server. Zugehörige Enumeration:<see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (string from, string recipients, string subject, string body);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string from, string recipients, string subject, string body) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (from As String, recipients As String, subject As String, body As String)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="member this.Send : string * string * string * string -&gt; unit" Usage="smtpClient.Send (from, recipients, subject, body)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public void Send (string from, string to, string subject, string body);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string from, string to, string subject, string body) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (from As String, to As String, subject As String, body As String)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ from, System::String ^ to, System::String ^ subject, System::String ^ body);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Send : string * string * string * string -&gt; unit" Usage="smtpClient.Send (from, to, subject, body)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" Index="0" />
        <Parameter Name="recipients" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="to" Type="System.String" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subject" Type="System.String" Index="2" />
        <Parameter Name="body" Type="System.String" Index="3" />
      </Parameters>
      <Docs>
        <param name="from">Ein <see cref="T:System.String" />, der die Adressinformationen des Absenders der Nachricht enthält.</param>
        <param name="recipients">Ein <see cref="T:System.String" />, der die Adressen enthält, an die die Nachricht gesendet wird.</param>
        <param name="to">Ein <see cref="T:System.String" />, der die Adressen enthält, an die die Nachricht gesendet wird.</param>
        <param name="subject">Ein <see cref="T:System.String" />, der die Betreffzeile für die Nachricht enthält.</param>
        <param name="body">Ein <see cref="T:System.String" />, der den Nachrichtentext enthält.</param>
        <summary>Sendet die angegebene E-Mail für die Übermittlung an einen SMTP-Server. Der Absender, die Empfänger, der Betreff und der Text der Nachricht werden mit <see cref="T:System.String" />-Objekten angegeben.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird blockiert, während die e-Mail übertragen wird. Sie können mithilfe der <xref:System.Net.Mail.SmtpClient.Timeout%2A> -Eigenschaft einen Timeout Wert angeben, um sicherzustellen, dass die Methode nach einem bestimmten Zeitraum zurückgegeben wird.  
  
 Vor dem Aufrufen dieser Methode müssen <xref:System.Net.Mail.SmtpClient.Host%2A> die <xref:System.Net.Mail.SmtpClient.Port%2A> -Eigenschaft und die-Eigenschaft entweder über die Konfigurationsdateien festgelegt werden, indem die relevanten Eigenschaften festgelegt oder <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> diese Informationen an den-Konstruktor übergeben werden.  
  
 Diese Methode kann nicht aufgerufen werden, wenn eine Nachricht asynchron gesendet wird.  
  
 Wenn für den SMTP-Host Anmelde Informationen erforderlich sind, müssen Sie diese vor dem Aufrufen dieser Methode festlegen. Zum Angeben von Anmelde Informationen verwenden <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> Sie <xref:System.Net.Mail.SmtpClient.Credentials%2A> die Eigenschaften oder.  
  
 Wenn Sie eine <xref:System.Net.Mail.SmtpException> Ausnahme erhalten, <xref:System.Net.Mail.SmtpException.StatusCode%2A> überprüfen Sie die-Eigenschaft, um zu ermitteln, warum der Vorgang fehlgeschlagen ist. <xref:System.Net.Mail.SmtpException> Kann auch eine innere Ausnahme enthalten, die den Grund für den Fehler des Vorgangs angibt.  

 Beim Senden von e-Mails <xref:System.Net.Mail.SmtpClient.Send%2A> mit an mehrere Empfänger, und der SMTP-Server akzeptiert einige Empfänger als gültig und <xref:System.Net.Mail.SmtpClient.Send%2A> lehnt andere ab, sendet eine e-Mail an die <xref:System.Net.Mail.SmtpFailedRecipientsException> akzeptierten Empfänger, und dann <xref:System.Net.Mail.SmtpFailedRecipientException> wird eine ausgelöst (oder eine, wenn nur eine der Empfänger wird abgelehnt). Eine <xref:System.Net.Mail.SmtpFailedRecipientsException> enthält eine Liste der Empfänger, die abgelehnt wurden.
 
> [!NOTE]
>  Wenn die <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> -Eigenschaft auf `true`festgelegt ist und der SMTP-Mailserver keine STARTTLS in der Antwort auf den EHLO-Befehl ankündigt, löst ein- <xref:System.Net.Mail.SmtpClient.Send%2A> Rückruf <xref:System.Net.Mail.SmtpClient.SendAsync%2A> der-Methode oder <xref:System.Net.Mail.SmtpException>der-Methode eine aus.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="from" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="recipients" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="from" /> ist <see cref="F:System.String.Empty" />.  
  
- oder - 
 <paramref name="recipients" /> ist <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.InvalidOperationException">Für diesen <see cref="T:System.Net.Mail.SmtpClient" /> wird gerade ein <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" />-Aufruf ausgeführt.  
  
- oder - 
 Die <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" />-Eigenschaft ist auf <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> festgelegt, und <see cref="P:System.Net.Mail.SmtpClient.Host" /> ist <see langword="null" />.  
  
- oder - 
 Die <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" />-Eigenschaft ist auf <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> festgelegt, und <see cref="P:System.Net.Mail.SmtpClient.Host" /> ist gleich der leeren Zeichenfolge ("").  
  
- oder - 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" />-Eigenschaft wird auf <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> festgelegt, und <see cref="P:System.Net.Mail.SmtpClient.Port" /> ist 0 (null), eine negative Zahl oder größer als 65,535.</exception>
        <exception cref="T:System.ObjectDisposedException">Dieses Objekt wurde verworfen.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">Die Verbindung mit dem SMTP-Server ist fehlgeschlagen.  
  
- oder - 
Fehler bei der Authentifizierung.  
  
- oder - 
Timeout für den Vorgang. 
- oder - 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> ist auf <see langword="true" /> festgelegt, die <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" />-Eigenschaft ist jedoch auf <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> oder <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" /> festgelegt.  
  
- oder - 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> wird auf <see langword="true," /> festgelegt, aber der SMTP-E-Mail-Server hat nicht STARTTLS in der Antwort auf den EHLO-Befehl angeboten.</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientException">Die <paramref name="message" /> konnte an einen der Empfänger in <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> oder <see cref="P:System.Net.Mail.MailMessage.Bcc" /> nicht übermittelt werden.</exception>
        <exception cref="T:System.Net.Mail.SmtpFailedRecipientsException">Die <paramref name="message" /> konnte an mindestens zwei Empfänger in <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> oder <see cref="P:System.Net.Mail.MailMessage.Bcc" /> nicht übermittelt werden.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">zum Herstellen einer Verbindung mit dem SMTP-Server. Zugehörige Enumeration:<see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sendet eine E-Mail. Durch diese Methoden wird der aufrufende Thread nicht blockiert.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (System.Net.Mail.MailMessage message, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(class System.Net.Mail.MailMessage message, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsync(System.Net.Mail.MailMessage,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (message As MailMessage, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::Net::Mail::MailMessage ^ message, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : System.Net.Mail.MailMessage * obj -&gt; unit" Usage="smtpClient.SendAsync (message, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">Eine <see cref="T:System.Net.Mail.MailMessage" />, die die zu sendende Nachricht enthält.</param>
        <param name="userToken">Ein benutzerdefiniertes Objekt, das bei Abschluss des asynchronen Vorgangs an die aufgerufene Methode übergeben wird.</param>
        <summary>Sendet die angegebene E-Mail für die Übermittlung an einen SMTP-Server. Diese Methode blockiert den aufrufenden Thread nicht und ermöglicht dem Aufrufer die Übergabe eines Objekts an die Methode, die beim Abschluss des Vorgangs aufgerufen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Fügen Sie dem <xref:System.Net.Mail.SmtpClient.SendCompleted> -Ereignis einen Ereignishandler hinzu, um eine Benachrichtigung zu erhalten, wenn die e-Mail gesendet wurde oder der Vorgang abgebrochen wurde. Sie können einen <xref:System.Net.Mail.SmtpClient.SendAsync%2A> -Vorgang abbrechen, indem <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> Sie die-Methode aufrufen.  
  
 Nachdem Sie <xref:System.Net.Mail.SmtpClient.SendAsync%2A>aufgerufen haben, müssen Sie auf den Abschluss der e-Mail-Übertragung warten, bevor <xref:System.Net.Mail.SmtpClient.Send%2A> Sie <xref:System.Net.Mail.SmtpClient.SendAsync%2A>versuchen, eine andere e-Mail mit oder zu senden  
  
 Vor dem Aufrufen dieser Methode <xref:System.Net.Mail.SmtpClient.Host%2A> müssen und <xref:System.Net.Mail.SmtpClient.Port%2A> durch die Konfigurationsdateien festgelegt werden, indem die relevanten Eigenschaften festgelegt werden oder indem diese Informationen an den <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> Konstruktor übergeben werden.  
  
 Wenn für den SMTP-Host Anmelde Informationen erforderlich sind, müssen Sie diese vor dem Aufrufen dieser Methode festlegen. Zum Angeben von Anmelde Informationen verwenden <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> Sie <xref:System.Net.Mail.SmtpClient.Credentials%2A> die Eigenschaften oder.  
  
 Wenn Sie eine <xref:System.Net.Mail.SmtpException> Ausnahme erhalten, <xref:System.Net.Mail.SmtpException.StatusCode%2A> überprüfen Sie die-Eigenschaft, um zu ermitteln, warum der Vorgang fehlgeschlagen ist. <xref:System.Net.Mail.SmtpException> Kann auch eine innere Ausnahme enthalten, die den Grund für den Fehler des Vorgangs angibt.  
  
 Beim Senden von e-Mails <xref:System.Net.Mail.SmtpClient.SendAsync%2A> mit an mehrere Empfänger, wenn der SMTP-Server einige Empfänger als gültig akzeptiert und andere ablehnt <xref:System.Net.Mail.SmtpException> , wird eine mit <xref:System.NullReferenceException> einer für die innere Ausnahme ausgelöst. Wenn dies auftritt, <xref:System.Net.Mail.SmtpClient.SendAsync%2A> kann keine e-Mail an einen der Empfänger senden.  
  
 Die Anwendung kann einen Überprüfungs Fehler des Serverzertifikats erkennen, indem <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> Sie die an den <xref:System.Net.Mail.SendCompletedEventHandler> Delegaten übergebenen Eigenschaft untersuchen.  
  
 Die <xref:System.Net.Mail.SmtpClient.Timeout%2A> -Eigenschaft wirkt sich nicht auf einen <xref:System.Net.Mail.SmtpClient.SendAsync%2A> -Befehl aus.  
  
 Verwenden Sie eine der <xref:System.Net.Mail.SmtpClient.Send%2A> -Methoden, um beim Übertragen an den SMTP-Server eine e-Mail zu senden und zu blockieren.  
  
> [!NOTE]
>  Wenn die <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> -Eigenschaft auf `true`festgelegt ist und der SMTP-Mailserver keine STARTTLS in der Antwort auf den EHLO-Befehl ankündigt, löst ein- <xref:System.Net.Mail.SmtpClient.Send%2A> Rückruf <xref:System.Net.Mail.SmtpClient.SendAsync%2A> der-Methode oder <xref:System.Net.Mail.SmtpException>der-Methode eine aus.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Aufrufen dieser Methode veranschaulicht.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" /> ist <see langword="null" />.  
  
- oder - 
 <see cref="P:System.Net.Mail.MailMessage.From" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Für diesen <see cref="T:System.Net.Mail.SmtpClient" /> wird gerade ein <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" />-Aufruf ausgeführt.  
  
- oder - 
In den Eigenschaften <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> und <see cref="P:System.Net.Mail.MailMessage.Bcc" /> sind keine Empfänger angegeben.  
  
- oder - 
 Die <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" />-Eigenschaft ist auf <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> festgelegt, und <see cref="P:System.Net.Mail.SmtpClient.Host" /> ist <see langword="null" />.  
  
- oder - 
 Die <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" />-Eigenschaft ist auf <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> festgelegt, und <see cref="P:System.Net.Mail.SmtpClient.Host" /> ist gleich der leeren Zeichenfolge ("").  
  
- oder - 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" />-Eigenschaft wird auf <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> festgelegt, und <see cref="P:System.Net.Mail.SmtpClient.Port" /> ist 0 (null), eine negative Zahl oder größer als 65,535.</exception>
        <exception cref="T:System.ObjectDisposedException">Dieses Objekt wurde verworfen.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">Die Verbindung mit dem SMTP-Server ist fehlgeschlagen.  
  
- oder - 
Fehler bei der Authentifizierung.  
  
- oder - 
Timeout für den Vorgang. 
- oder - 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> ist auf <see langword="true" /> festgelegt, die <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" />-Eigenschaft ist jedoch auf <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> oder <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" /> festgelegt.  
  
- oder - 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> wird auf <see langword="true," /> festgelegt, aber der SMTP-E-Mail-Server hat nicht STARTTLS in der Antwort auf den EHLO-Befehl angeboten.  
  
- oder - 
Die <paramref name="message" /> konnte an einen oder mehrere Empfänger in <see cref="P:System.Net.Mail.MailMessage.To" />, <see cref="P:System.Net.Mail.MailMessage.CC" /> oder <see cref="P:System.Net.Mail.MailMessage.Bcc" /> nicht übermittelt werden.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">zum Herstellen einer Verbindung mit dem SMTP-Server. Zugehörige Enumeration:<see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public void SendAsync (string from, string recipients, string subject, string body, object userToken);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string from, string recipients, string subject, string body, object userToken) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (from As String, recipients As String, subject As String, body As String, userToken As Object)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body, System::Object ^ userToken);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="member this.SendAsync : string * string * string * string * obj -&gt; unit" Usage="smtpClient.SendAsync (from, recipients, subject, body, userToken)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public void SendAsync (string from, string to, string subject, string body, object userToken);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsync(string from, string to, string subject, string body, object userToken) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsync (from As String, to As String, subject As String, body As String, userToken As Object)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsync(System::String ^ from, System::String ^ to, System::String ^ subject, System::String ^ body, System::Object ^ userToken);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.SendAsync : string * string * string * string * obj -&gt; unit" Usage="smtpClient.SendAsync (from, to, subject, body, userToken)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" Index="0" />
        <Parameter Name="recipients" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="to" Type="System.String" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subject" Type="System.String" Index="2" />
        <Parameter Name="body" Type="System.String" Index="3" />
        <Parameter Name="userToken" Type="System.Object" Index="4" />
      </Parameters>
      <Docs>
        <param name="from">Ein <see cref="T:System.String" />, der die Adressinformationen des Absenders der Nachricht enthält.</param>
        <param name="recipients">Ein <see cref="T:System.String" />, der die Adresse enthält, an die die Nachricht gesendet wird.</param>
        <param name="to">Ein <see cref="T:System.String" />, der die Adresse enthält, an die die Nachricht gesendet wird.</param>
        <param name="subject">Ein <see cref="T:System.String" />, der die Betreffzeile für die Nachricht enthält.</param>
        <param name="body">Ein <see cref="T:System.String" />, der den Nachrichtentext enthält.</param>
        <param name="userToken">Ein benutzerdefiniertes Objekt, das bei Abschluss des asynchronen Vorgangs an die aufgerufene Methode übergeben wird.</param>
        <summary>Sendet eine E-Mail für die Übermittlung an einen SMTP-Server. Der Absender, die Empfänger, der Betreff und der Text der Nachricht werden mit <see cref="T:System.String" />-Objekten angegeben. Diese Methode blockiert den aufrufenden Thread nicht und ermöglicht dem Aufrufer die Übergabe eines Objekts an die Methode, die beim Abschluss des Vorgangs aufgerufen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Fügen Sie dem <xref:System.Net.Mail.SmtpClient.SendCompleted> -Ereignis einen Ereignishandler hinzu, um eine Benachrichtigung zu erhalten, wenn die e-Mail gesendet wurde oder der Vorgang abgebrochen wurde. Sie können einen <xref:System.Net.Mail.SmtpClient.SendAsync%2A> -Vorgang abbrechen, indem <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> Sie die-Methode aufrufen.  
  
 Nachdem Sie <xref:System.Net.Mail.SmtpClient.SendAsync%2A>aufgerufen haben, müssen Sie auf den Abschluss der e-Mail-Übertragung warten, bevor <xref:System.Net.Mail.SmtpClient.Send%2A> Sie <xref:System.Net.Mail.SmtpClient.SendAsync%2A>versuchen, eine andere e-Mail mit oder zu senden  
  
 Vor dem Aufrufen dieser Methode müssen <xref:System.Net.Mail.SmtpClient.Host%2A> die <xref:System.Net.Mail.SmtpClient.Port%2A> -Eigenschaft und die-Eigenschaft entweder über die Konfigurationsdateien oder durch Festlegen der Eigenschaften oder durch Übergeben dieser <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> Informationen an den-Konstruktor festgelegt werden.  
  
 Wenn für den SMTP-Host Anmelde Informationen erforderlich sind, müssen Sie diese vor dem Aufrufen dieser Methode festlegen. Verwenden Sie zum Angeben von Anmelde <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> Informationen <xref:System.Net.Mail.SmtpClient.Credentials%2A> die-oder-Eigenschaft.  
  
 Wenn Sie eine <xref:System.Net.Mail.SmtpException> Ausnahme erhalten, <xref:System.Net.Mail.SmtpException.StatusCode%2A> überprüfen Sie die-Eigenschaft, um zu ermitteln, warum der Vorgang fehlgeschlagen ist. <xref:System.Net.Mail.SmtpException> Kann auch eine innere Ausnahme enthalten, die den Grund für den Fehler des Vorgangs angibt.  
  
 Beim Senden von e-Mails <xref:System.Net.Mail.SmtpClient.SendAsync%2A> mit an mehrere Empfänger, wenn der SMTP-Server einige Empfänger als gültig akzeptiert und andere ablehnt <xref:System.Net.Mail.SmtpException> , wird eine mit <xref:System.NullReferenceException> einer für die innere Ausnahme ausgelöst. Wenn dies auftritt, <xref:System.Net.Mail.SmtpClient.SendAsync%2A> kann keine e-Mail an einen der Empfänger senden.  
  
 Die Anwendung kann einen Überprüfungs Fehler des Serverzertifikats erkennen, indem <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> Sie die an den <xref:System.Net.Mail.SendCompletedEventHandler> Delegaten übergebenen Eigenschaft untersuchen.  
  
 Die <xref:System.Net.Mail.SmtpClient.Timeout%2A> -Eigenschaft wirkt sich nicht auf einen <xref:System.Net.Mail.SmtpClient.SendAsync%2A> -Befehl aus.  
  
 Verwenden Sie eine der <xref:System.Net.Mail.SmtpClient.Send%2A> -Methoden, um beim Übertragen an den SMTP-Server eine e-Mail zu senden und zu blockieren.  
  
> [!NOTE]
>  Wenn die <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> -Eigenschaft auf `true`festgelegt ist und der SMTP-Mailserver keine STARTTLS in der Antwort auf den EHLO-Befehl ankündigt, löst ein- <xref:System.Net.Mail.SmtpClient.Send%2A> Rückruf <xref:System.Net.Mail.SmtpClient.SendAsync%2A> der-Methode oder <xref:System.Net.Mail.SmtpException>der-Methode eine aus.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="from" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="recipient" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="from" /> ist <see cref="F:System.String.Empty" />.  
  
- oder - 
 <paramref name="recipient" /> ist <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.InvalidOperationException">Für diesen <see cref="T:System.Net.Mail.SmtpClient" /> wird gerade ein <see cref="Overload:System.Net.Mail.SmtpClient.SendAsync" />-Aufruf ausgeführt.  
  
- oder - 
 Die <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" />-Eigenschaft ist auf <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> festgelegt, und <see cref="P:System.Net.Mail.SmtpClient.Host" /> ist <see langword="null" />.  
  
- oder - 
 Die <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" />-Eigenschaft ist auf <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> festgelegt, und <see cref="P:System.Net.Mail.SmtpClient.Host" /> ist gleich der leeren Zeichenfolge ("").  
  
- oder - 
 <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" />-Eigenschaft wird auf <see cref="F:System.Net.Mail.SmtpDeliveryMethod.Network" /> festgelegt, und <see cref="P:System.Net.Mail.SmtpClient.Port" /> ist 0 (null), eine negative Zahl oder größer als 65,535.</exception>
        <exception cref="T:System.ObjectDisposedException">Dieses Objekt wurde verworfen.</exception>
        <exception cref="T:System.Net.Mail.SmtpException">Die Verbindung mit dem SMTP-Server ist fehlgeschlagen.  
  
- oder - 
Fehler bei der Authentifizierung.  
  
- oder - 
Timeout für den Vorgang. 
- oder - 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> ist auf <see langword="true" /> festgelegt, die <see cref="P:System.Net.Mail.SmtpClient.DeliveryMethod" />-Eigenschaft ist jedoch auf <see cref="F:System.Net.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory" /> oder <see cref="F:System.Net.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis" /> festgelegt.  
  
- oder - 
 <see cref="P:System.Net.Mail.SmtpClient.EnableSsl" /> wird auf <see langword="true," /> festgelegt, aber der SMTP-E-Mail-Server hat nicht STARTTLS in der Antwort auf den EHLO-Befehl angeboten.  
  
- oder - 
Die Nachricht konnte an einen oder mehrere Empfänger in <paramref name="recipients" /> nicht übermittelt werden.</exception>
        <permission cref="T:System.Net.Mail.SmtpPermission">Zum Herstellen einer Verbindung mit dem SMTP-Server. Zugehörige Enumeration:<see cref="F:System.Net.Mail.SmtpAccess.Connect" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendAsyncCancel">
      <MemberSignature Language="C#" Value="public void SendAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.SendAsyncCancel : unit -&gt; unit" Usage="smtpClient.SendAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bricht einen asynchronen Vorgang zum Senden einer E-Mail ab.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> die-Methode, um <xref:System.Net.Mail.SmtpClient.SendAsync%2A> einen ausstehenden Vorgang abzubrechen. Wenn e-Mail-Nachrichten darauf warten, gesendet zu werden, gibt diese Methode die zum Speichern der e-Mail verwendeten Ressourcen frei. Wenn keine e-Mail darauf wartet, gesendet zu werden, führt diese Methode keine Aktion aus.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das asynchrone Senden einer e-Mail-Nachricht veranschaulicht. Der Benutzer kann die e-Mail abbrechen, wenn er nicht gesendet wurde.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Dieses Objekt wurde verworfen.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.Mail.SendCompletedEventHandler SendCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.Mail.SendCompletedEventHandler SendCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.Mail.SmtpClient.SendCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SendCompleted As SendCompletedEventHandler " FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::Mail::SendCompletedEventHandler ^ SendCompleted;" />
      <MemberSignature Language="F#" Value="member this.SendCompleted : System.Net.Mail.SendCompletedEventHandler " Usage="member this.SendCompleted : System.Net.Mail.SendCompletedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event SendCompleted As SendCompletedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.SendCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn das asynchrone Senden einer E-Mail abgeschlossen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Net.Mail.SmtpClient.SendCompleted> -Ereignis wird jedes Mal ausgelöst, wenn eine e-Mail-Nachricht asynchron gesendet wird, wenn der Sendevorgang abgeschlossen ist. Verwenden Sie die <xref:System.Net.Mail.SmtpClient.SendAsync%2A> -Methoden, um asynchron eine e-Mail-Nachricht zu senden.  
  
 <xref:System.Net.Mail.SendCompletedEventHandler>ist der Delegat <xref:System.Net.Mail.SmtpClient.SendCompleted>für. Die <xref:System.ComponentModel.AsyncCompletedEventArgs> -Klasse stellt den Ereignishandler für Ereignisdaten bereit.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das asynchrone Senden einer e-Mail-Nachricht veranschaulicht.  
  
 [!code-cpp[NclMailAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#1)]
 [!code-csharp[NclMailAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#1)]
 [!code-vb[NclMailAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendMailAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sendet die angegebene Meldung an einen SMTP-Server für die Übermittlung als asynchroner Vorgang.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendMailAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendMailAsync (System.Net.Mail.MailMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendMailAsync(class System.Net.Mail.MailMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendMailAsync(System.Net.Mail.MailMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendMailAsync (message As MailMessage) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ SendMailAsync(System::Net::Mail::MailMessage ^ message);" />
      <MemberSignature Language="F#" Value="member this.SendMailAsync : System.Net.Mail.MailMessage -&gt; System.Threading.Tasks.Task" Usage="smtpClient.SendMailAsync message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Net.Mail.MailMessage" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message">Eine <see cref="T:System.Net.Mail.MailMessage" />, die die zu sendende Nachricht enthält.</param>
        <summary>Sendet die angegebene Meldung an einen SMTP-Server für die Übermittlung als asynchroner Vorgang.</summary>
        <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurück <xref:System.Threading.Tasks.Task>gegebene > Objekt wird abgeschlossen, nachdem die Nachricht gesendet wurde.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendMailAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendMailAsync (string from, string recipients, string subject, string body);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendMailAsync(string from, string recipients, string subject, string body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.SmtpClient.SendMailAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendMailAsync (from As String, recipients As String, subject As String, body As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ SendMailAsync(System::String ^ from, System::String ^ recipients, System::String ^ subject, System::String ^ body);" />
      <MemberSignature Language="F#" Value="member this.SendMailAsync : string * string * string * string -&gt; System.Threading.Tasks.Task" Usage="smtpClient.SendMailAsync (from, recipients, subject, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="recipients" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subject" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="body" Type="System.String" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="from">Ein <see cref="T:System.String" />, der die Adressinformationen des Absenders der Nachricht enthält.</param>
        <param name="recipients">Ein <see cref="T:System.String" />, der die Adressen enthält, an die die Nachricht gesendet wird.</param>
        <param name="subject">Ein <see cref="T:System.String" />, der die Betreffzeile für die Nachricht enthält.</param>
        <param name="body">Ein <see cref="T:System.String" />, der den Nachrichtentext enthält.</param>
        <summary>Sendet die angegebene Meldung an einen SMTP-Server für die Übermittlung als asynchroner Vorgang. sein. Der Absender, die Empfänger, der Betreff und der Text der Nachricht werden mit <see cref="T:System.String" />-Objekten angegeben.</summary>
        <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Vorgang wird nicht blockiert. Das zurück <xref:System.Threading.Tasks.Task>gegebene > Objekt wird abgeschlossen, nachdem die Nachricht gesendet wurde.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="from" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="recipients" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="from" /> ist <see cref="F:System.String.Empty" />.  
  
- oder - 
 <paramref name="recipients" /> ist <see cref="F:System.String.Empty" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ServicePoint">
      <MemberSignature Language="C#" Value="public System.Net.ServicePoint ServicePoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ServicePoint ServicePoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.ServicePoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServicePoint As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ServicePoint ^ ServicePoint { System::Net::ServicePoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServicePoint : System.Net.ServicePoint" Usage="System.Net.Mail.SmtpClient.ServicePoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Netzwerkverbindung ab, die zum Übertragen der E-Mail verwendet wurde.</summary>
        <value>Ein <see cref="T:System.Net.ServicePoint" />, der eine Verbindung mit der für SMTP verwendeten <see cref="P:System.Net.Mail.SmtpClient.Host" />-Eigenschaft herstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Einstellungen für die <xref:System.Net.Mail.SmtpClient.ServicePoint%2A> -Eigenschaft werden mithilfe der in den Anwendungs-oder Computer Konfigurationsdateien und <xref:System.Net.ServicePointManager> der-Klasse angegebenen Standardwerte erstellt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der Zugriff <xref:System.Net.Mail.SmtpClient.ServicePoint%2A> auf die-Eigenschaft veranschaulicht.  
  
 [!code-cpp[NclMailSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#1)]
 [!code-csharp[NclMailSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Net.Mail.SmtpClient.Host" /> ist <see langword="null" /> oder die leere Zeichenfolge ("").  
  
- oder - 
 <see cref="P:System.Net.Mail.SmtpClient.Port" /> ist 0 (null).</exception>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/connectionmanagement-element-network-settings.md">connectionManagement-Element (Netzwerkeinstellungen)</related>
        <related type="Article" href="~/docs/framework/network-programming/managing-connections.md">Verwalten von Verbindungen</related>
      </Docs>
    </Member>
    <Member MemberName="TargetName">
      <MemberSignature Language="C#" Value="public string TargetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetName" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.TargetName" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetName : string with get, set" Usage="System.Net.Mail.SmtpClient.TargetName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Dienstanbieternamen (SPN) ab, der bei Verwendung des erweiterten Schutzes zur Authentifizierung verwendet werden soll, oder legt ihn fest.</summary>
        <value>Ein <see cref="T:System.String" />, das den für erweiterten Schutz zu verwendenden Dienstanbieternamen angibt. Der Standardwert für diesen SPN hat die Form "SmtpSvc&lt;/Host&gt;", wobei &lt;"&gt; Host" der Hostname des SMTP-Mailservers ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.Mail.SmtpClient.TargetName%2A> -Eigenschaft wird bei der integrierten Windows-Authentifizierung verwendet, wenn eine Anwendung erweiterten Schutz verwendet. Der <xref:System.Net.Mail.SmtpClient> kann dann erweiterten Schutz bereitstellen, um sicherzustellen, dass Antworten in der Anforderungs Antwort Dienst spezifische Informationen (einen SPN) und ggf. Kanal spezifische Informationen (ein Kanal Bindungs Token oder CBT) enthalten. Mit diesen Informationen im Austausch von Anmelde Informationen können Dienste besser vor böswilliger Verwendung von Antworten auf Anmelde Informationen schützen, die möglicherweise nicht ordnungsgemäß abgerufen wurden.  
  
 Der Standardwert für diese Eigenschaft kann auch in einer Computer-oder Anwendungs Konfigurationsdatei festgelegt werden. Alle Änderungen, die an <xref:System.Net.Mail.SmtpClient.TargetName%2A> der-Eigenschaft vorgenommen werden, überschreiben die Konfigurationsdatei Einstellungen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.SmtpSection" />
        <altmember cref="T:System.Net.Configuration.SmtpNetworkElement" />
        <altmember cref="P:System.Net.Configuration.SmtpNetworkElement.TargetName" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md">Integrierte Windows-Authentifizierung mit erweitertem Schutz</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md">&lt;mailSettings&gt; -Element (Netzwerkeinstellungen)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md">&lt;SMTP&gt; -Element (Netzwerkeinstellungen)</related>
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/network-element-network-settings.md">&lt;Network&gt; -Element (Netzwerkeinstellungen)</related>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Net.Mail.SmtpClient.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der die Zeitspanne bis zum Timeout eines synchronen <see cref="Overload:System.Net.Mail.SmtpClient.Send" />-Aufrufs angibt, oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Int32" />, das den Timeoutwert in Millisekunden angibt. Der Standardwert ist 100.000 (100 Sekunden).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig werden Aufrufe der <xref:System.Net.Mail.SmtpClient.Send%2A> -Methode blockiert, bis der Vorgang abgeschlossen ist. Wenn Sie die <xref:System.Net.Mail.SmtpClient.Timeout%2A> -Eigenschaft auf einen positiven Wert festlegen und ein <xref:System.Net.Mail.SmtpClient.Send%2A> -Vorgang nicht in der vorgesehenen Zeit ausgeführt werden kann, löst <xref:System.Net.Mail.SmtpException> die <xref:System.Net.Mail.SmtpClient> -Klasse eine Ausnahme aus.  
  
 Verwenden Sie die <xref:System.Net.Mail.SmtpClient.SendAsync%2A> -Methode, um eine Nachricht zu senden und mit der Ausführung im Anwendungs Thread fortzufahren.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das erhalten und Festlegen des Timeout Werts veranschaulicht.  
  
 [!code-cpp[NclMailSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#3)]
 [!code-csharp[NclMailSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der für einen set-Vorgang angegebene Wert war kleiner als 0 (null).</exception>
        <exception cref="T:System.InvalidOperationException">Sie können den Wert dieser Eigenschaft nicht ändern, während eine E-Mail-Nachricht gesendet wird.</exception>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.SmtpClient.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.Mail.SmtpClient.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>set: System.MonoNotSupported("no DefaultCredential support in Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der steuert, ob mit den Anforderungen <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> gesendet werden, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die Standardanmeldeinformationen verwendet werden, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für einige SMTP-Server ist es erforderlich, dass der Client authentifiziert wird, bevor der Server in seinem Auftrag eine e-Mail sendet. Legen Sie diese Eigenschaft `true` auf fest <xref:System.Net.Mail.SmtpClient> , wenn dieses Objekt, wenn es vom Server angefordert wird, sich mit den Standard Anmelde Informationen des aktuell angemeldeten Benutzers authentifizieren soll. Bei Client Anwendungen ist dies das gewünschte Verhalten in den meisten Szenarien.  
  
 Informationen zu Anmelde Informationen können auch mithilfe der Anwendungs-und Computer Konfigurationsdateien angegeben werden. Weitere Informationen finden Sie unter [ &lt;MailSettings&gt; -Element (Netzwerkeinstellungen)](~/docs/framework/configure-apps/file-schema/network/mailsettings-element-network-settings.md).  
  
 Wenn die <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> -Eigenschaft auf fest `false,` gelegt ist, wird der in <xref:System.Net.Mail.SmtpClient.Credentials%2A> der-Eigenschaft festgelegte Wert für die Anmelde Informationen verwendet, wenn eine Verbindung mit dem Server hergestellt wird. Wenn die <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> -Eigenschaft auf `false` festgelegt ist <xref:System.Net.Mail.SmtpClient.Credentials%2A> und die-Eigenschaft nicht festgelegt wurde, wird die e-Mail anonym an den Server gesendet.  
  
> [!CAUTION]
>  Wenn Sie Anmelde Informationen für die Standard Authentifizierung angeben, werden Sie als Klartext an den Server gesendet. Dies kann ein Sicherheitsproblem darstellen, da ihre Anmelde Informationen angezeigt und dann von anderen Benutzern verwendet werden können.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieser Eigenschaft veranschaulicht.  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Sie können den Wert dieser Eigenschaft nicht ändern, während eine E-Mail-Nachricht gesendet wird.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
