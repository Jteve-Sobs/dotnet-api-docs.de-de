<Type Name="IDocumentPersistenceService" FullName="System.Activities.Presentation.Hosting.IDocumentPersistenceService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="750f631558ed4bdb13da3704fcffe8108bf84b84" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30348034" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDocumentPersistenceService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDocumentPersistenceService" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Hosting.IDocumentPersistenceService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDocumentPersistenceService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDocumentPersistenceService" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1b698-101">Stellt die Funktionalität bereit, um ein Dokument beizubehalten.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1b698-101">Provides the functionality to persist a document.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b698-102">Eine Implementierung dieser Schnittstelle ermöglicht es Ihnen, eine andere Serialisierung oder ein anderes Speicherformat anzugeben.</span><span class="sxs-lookup"><span data-stu-id="1b698-102">An implementation of this interface allows you to specify a different serialization or storage format.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush (object documentRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush(object documentRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.IDocumentPersistenceService.Flush(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush (documentRoot As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush(System::Object ^ documentRoot);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentRoot" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="documentRoot">
          <span data-ttu-id="1b698-103">Das Stammverzeichnis für eine Website.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b698-103">The root directory for a Web site.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1b698-104">Bei der Implementierung durch eine abgeleitete Klasse wird das angegebene Dokument auf den Datenträger gespeichert und der Arbeitsspeicherpuffer gelöscht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b698-104">When implemented by a derived class, saves the specified document to disk and clears the memory buffer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public object Load (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Load(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.IDocumentPersistenceService.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Load (fileName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Load(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="1b698-105">Das zu ladende Dokument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b698-105">The document to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1b698-106">Bei der Implementierung durch eine abgeleitete Klasse wird das angegebene gespeicherte Dokument zur Verarbeitung im Arbeitsspeicher platziert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b698-106">When implemented by a derived class, places the specified stored document into memory for processing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1b698-107">Ein Objekt, das das geladene Dokument enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b698-107">An object that contains the loaded document.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnModelChanged">
      <MemberSignature Language="C#" Value="public void OnModelChanged (object documentRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnModelChanged(object documentRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.IDocumentPersistenceService.OnModelChanged(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnModelChanged (documentRoot As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnModelChanged(System::Object ^ documentRoot);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentRoot" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="documentRoot">
          <span data-ttu-id="1b698-108">Das Stammverzeichnis für eine Website.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b698-108">The root directory for a Web site.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1b698-109">Bei der Implementierung durch eine abgeleitete Klasse wird die Einarbeitung von Änderungen am Workflowmodell gestartet, das entworfen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1b698-109">When implemented by a derived class, starts the process of incorporating changes to the workflow model that is being designed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>