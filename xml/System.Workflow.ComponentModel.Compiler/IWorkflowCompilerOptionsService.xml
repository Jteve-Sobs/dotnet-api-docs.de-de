<Type Name="IWorkflowCompilerOptionsService" FullName="System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="994b6ec915a6c6e17fd37883ba9c91bea78717c7" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37739339" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IWorkflowCompilerOptionsService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWorkflowCompilerOptionsService" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWorkflowCompilerOptionsService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWorkflowCompilerOptionsService" />
  <TypeSignature Language="F#" Value="type IWorkflowCompilerOptionsService = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiert die Schnittstelle, die von der Umgebung implementiert wird, die den Workflow-Designer und Compiler hostet, um während der Validierung und Kompilierung umgebungsspezifische Kompilierungsinformationen bereitzustellen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckTypes">
      <MemberSignature Language="C#" Value="public bool CheckTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckTypes" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.CheckTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckTypes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckTypes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckTypes : bool" Usage="System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.CheckTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Typen überprüft werden.</summary>
        <value>
          <see langword="true" />, wenn Typen überprüft werden, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Während der Validierungsphase einer Workflowkompilierung wird, wird ein workflowquelldokument abgelehnt, wenn die <xref:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.CheckTypes%2A> Eigenschaft `true` und der Workflow oder den begleitregeln direkt auf verweist, die .NET Framework-Typen nicht in der Liste der autorisierten Typen. Die Liste der zulässigen Typen ist ein XML-Dokument gibt an, in dem jeder Eintrag eine `Assembly`, `Namespace`, `TypeName`, und ein `Authorized` {`true` oder `false`} Indikator. Diese Klasse entspricht einem Eintrag in der Liste. Beachten Sie auch, dass Platzhalterzeichenbezeichnungen vollständige Namespaces einschließen oder ausschließen können. Verwenden Sie beispielsweise `Type="System.*"` schließt alle Datentypen in <xref:System>, einschließlich Typen, die in untergeordneten Namespaces enthalten.  
  
 Die Verwendung einer Liste der autorisierten Typen wird gesteuert, von der <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompiler> Option **/checktypes** oder mithilfe der <xref:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.CheckTypes%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.Language" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Language : string" Usage="System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft beim Kompilieren des Workflows die von der Umgebung verwendete Programmiersprache ab, z. B. Visual Studio.</summary>
        <value>Der Name der von der Entwicklungsumgebung verwendeten Programmiersprache.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird eine Implementierung der `Language`-Eigenschaft veranschaulicht. Dieses Beispiel stammt aus dem Tracking Profile Designer SDK-Beispiel. Weitere Informationen finden Sie unter [Tracking Profile Designer Beispiel](http://msdn.microsoft.com/library/a280199c-3000-4148-ac63-cb5aaeac07c8).  
  
 [!code-csharp[WF_Samples#123](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#123)]
 [!code-vb[WF_Samples#123](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#123)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootNamespace">
      <MemberSignature Language="C#" Value="public string RootNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.RootNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RootNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootNamespace : string" Usage="System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.RootNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Stamm-Namespacesatz für das Projekt ab.</summary>
        <value>Der Name des Stamm-Namespace.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wird in der Visual Basic-Kompilierungsumgebung verwendet, um den Stamm-Namespace des Projekts an den Compiler zu übergeben.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Implementierung der `RootNamespace`-Eigenschaft veranschaulicht. Dieses Beispiel stammt aus dem Tracking Profile Designer SDK-Beispiel. Weitere Informationen finden Sie unter [Tracking Profile Designer Beispiel](http://msdn.microsoft.com/library/a280199c-3000-4148-ac63-cb5aaeac07c8).  
  
 [!code-csharp[Wf_samples#122](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#122)]
 [!code-vb[Wf_samples#122](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#122)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>