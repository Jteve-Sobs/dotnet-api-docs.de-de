<Type Name="IEnlistmentNotification" FullName="System.Transactions.IEnlistmentNotification">
  <Metadata><Meta Name="ms.openlocfilehash" Value="16ecff6e491b37458e455bfc9b15800cbfba9cf7" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="83963235" /></Metadata><TypeSignature Language="C#" Value="public interface IEnlistmentNotification" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnlistmentNotification" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.IEnlistmentNotification" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnlistmentNotification" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEnlistmentNotification" />
  <TypeSignature Language="F#" Value="type IEnlistmentNotification = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Transactions.Local" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Interfaces />
  <Docs>
    <summary>Beschreibt eine Schnittstelle, die ein Ressourcen-Manager implementieren sollte, um beim Eintragen für die Teilnahme Zweiphasencommit-Benachrichtigungsrückrufe für den Transaktions-Manager bereitzustellen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Damit ein Ressourcen-Manager an einer Transaktion teilnehmen kann, muss er sich durch den Transaktions-Manager in der Transaktion eintragen. Die <xref:System.Transactions.Transaction>-Klasse definiert eine Reihe von Methoden, deren Namen mit `Enlist` beginnen und die diese Funktionen bereitstellen. Die unterschiedlichen `Enlist`-Methoden entsprechen den verschiedenen Eintragungstypen, über die ein RM verfügen kann.  
  
 Diese Klasse beschreibt eine Schnittstelle, die ein Ressourcen-Manager implementieren sollte, um beim eintragen für die Teilnahme zwei Phasen-Commit-Benachrichtigungs Rückrufe für den Transaktions-Manager bereitzustellen. Sie sollten die Implementierung der-Schnittstelle für jede Ressourcen-Manager- <xref:System.Transactions.IEnlistmentNotification> Methode mithilfe der- <xref:System.Transactions.Transaction.EnlistVolatile%2A> Methode oder der- <xref:System.Transactions.Transaction.EnlistDurable%2A> Methode der- <xref:System.Transactions.Transaction> Klasse eintragen, je nachdem, ob die Ressource flüchtig oder dauerhaft ist. Weitere Informationen zu Eintragung und 2PC finden Sie unter [Ressourcen als Teilnehmer in einer Transaktion eintragen](/dotnet/framework/data/transactions/enlisting-resources-as-participants-in-a-transaction) und [Commit einer Transaktion in Phase hat und mehreren Phasen bestehender](/dotnet/framework/data/transactions/committing-a-transaction-in-single-phase-and-multi-phase) bzw.  
  
 Der Transaktions-Manager benachrichtigt das eingetragene Objekt in verschiedenen Phasen des Zweiphasencommit-Protokolls mithilfe der folgenden Methoden.  
  
|Methode|Beschreibung|  
|------------|-----------------|  
|<xref:System.Transactions.IEnlistmentNotification.Prepare%2A>|Diese Methode eines eingetragenen Objekts wird vom Transaktions-Manager während der ersten Phase einer Transaktion als Rückruf verwendet, wenn der Transaktions-Manager die Teilnehmer fragt, ob Sie einen Commit für die Transaktion durchsetzen können.|  
|<xref:System.Transactions.IEnlistmentNotification.Commit%2A>|Diese Methode eines eingetragenen Objekts wird vom Transaktions-Manager während der zweiten Phase einer Transaktion als Rückruf verwendet, wenn für die Transaktion ein Commit ausgeführt wird.|  
|<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>|Diese Methode eines eingetragenen Objekts wird vom Transaktions-Manager während der zweiten Phase einer Transaktion als Rückruf verwendet, wenn die Transaktion abgebrochen wird (d. h. ein Rollback ausgeführt wird).|  
|<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>|Diese Methode eines eingetragenen Objekts wird vom Transaktions-Manager während der zweiten Phase einer Transaktion als Rückruf verwendet, wenn die Transaktion zweifelhaft ist.|  
  
> [!NOTE]
>  Beachten Sie, dass Benachrichtigungen möglicherweise nicht sequenziell oder in einer bestimmten Reihenfolge gesendet werden.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Implementierung dieser Schnittstelle veranschaulicht, und das Objekt wird mithilfe der-Methode als Teilnehmer in eine Transaktion eingetragen <xref:System.Transactions.Transaction.EnlistVolatile%2A> .  
  
 [!code-csharp[Tx_Enlist#1](~/samples/snippets/csharp/VS_Snippets_CFX/tx_enlist/cs/enlist.cs#1)]
 [!code-vb[Tx_Enlist#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_enlist/vb/enlist.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Transactions.ISinglePhaseNotification" />
    <related type="Article" href="https://msdn.microsoft.com/library/786a12c2-d530-49f4-9c59-5c973e15a11d">Eintragen von Ressourcen als Teilnehmer an einer Transaktion</related>
    <related type="Article" href="https://msdn.microsoft.com/library/694ea153-e4db-41ae-96ac-9ac66dcb69a9">Ausführen eines Einphasen- oder Mehrphasencommits für eine Transaktion</related>
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Commit (enlistment As Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member Commit : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.Commit enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">Ein <see cref="T:System.Transactions.Enlistment" />-Objekt, mit dem eine Antwort an den Transaktions-Manager gesendet wird.</param>
        <summary>Benachrichtigt ein eingetragenes Objekt darüber, dass ein Commit für eine Transaktion ausgeführt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Transaktions-Manager ruft diese Methode eines eingetragenen Objekts während der zweiten Phase einer Verpflichtung auf, wenn er alle Teilnehmer anweist, einen Commit für die Transaktion durchzusetzen.  
  
 Der Ressourcen-Manager sollte alle notwendigen Schritte ausführen, um die Transaktion abzuschließen und dann den TM darüber zu informieren, dass er abgeschlossen ist, indem er die- <xref:System.Transactions.Enlistment.Done%2A> Methode für den-Parameter aufruft `enlistment` .  
  
 Wenn der Ressourcen-Manager permanent registriert ist, aber nicht durch Aufrufen der- <xref:System.Transactions.Enlistment.Done%2A> Methode antwortet, ist der Transaktions-Manager nicht sicher, dass der Ressourcen-Manager den Aufruf erhalten hat <xref:System.Transactions.IEnlistmentNotification.Commit%2A> . Daher wartet der Transaktions-Manager weiterhin auf eine Antwort und verwaltet die für diese Transaktion relevanten Informationen.  Wenn <xref:System.Transactions.Enlistment.Done%2A> nie aufgerufen wird, werden diese Informationen unbegrenzt im Arbeitsspeicher oder in einer systemweiten Ressource gespeichert. Dies führt dazu, dass Ressourcen nicht freigegeben werden können. Im Fall einer verteilten Transaktion könnte dies das MSDTC-Protokoll füllen, das den MSDTC-Prozess stoppt. Bei einer Transaktion, die von verwaltet <xref:System.Transactions> wird, führt dies zu einer schrittweisen und kontinuierlichen Zunahme der Arbeitsspeicher Nutzung des Resource Manager-Prozesses. Daher ist es wichtig, dass Sie die- <xref:System.Transactions.Enlistment.Done%2A> Methode anrufen, sobald Ihr Ressourcen-Manager mit ihrer Vorbereitungsarbeit abgeschlossen ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InDoubt">
      <MemberSignature Language="C#" Value="public void InDoubt (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InDoubt(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InDoubt (enlistment As Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InDoubt(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member InDoubt : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.InDoubt enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">Ein <see cref="T:System.Transactions.Enlistment" />-Objekt, mit dem eine Antwort an den Transaktions-Manager gesendet wird.</param>
        <summary>Benachrichtigt ein eingetragenes Objekt darüber, dass der Status einer Transaktion zweifelhaft ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird für flüchtige Ressourcen aufgerufen, wenn der Transaktions-Manager einen Einphasencommit-Vorgang für eine einzelne dauerhafte Ressource aufgerufen hat und die Verbindung mit der permanenten Ressource vor dem Abrufen des Transaktions Ergebnisses verloren gegangen ist. An diesem Punkt kann das Transaktions Ergebnis nicht sicher bestimmt werden.  
  
 Da als <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> Endzustand für eine Transaktion angesehen wird, sollten Sie oder nach dem Aufrufen von nicht aufrufen <xref:System.Transactions.IEnlistmentNotification.Commit%2A> <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> .  
  
> [!NOTE]
>  Ihre Implementierung dieser Methode für die flüchtige Ressource sollte jeden Wiederherstellungs-oder Einschluss Vorgang ausführen, den Sie für die betroffenen Daten versteht.  Außerdem muss die- <xref:System.Transactions.Enlistment.Done%2A> Methode für den-Parameter aufgerufen werden, `enlistment` Wenn die Arbeit abgeschlossen ist.  
  
 Wenn der Ressourcen-Manager permanent registriert ist, aber nicht durch Aufrufen der- <xref:System.Transactions.Enlistment.Done%2A> Methode antwortet, ist der Transaktions-Manager nicht sicher, dass der Ressourcen-Manager den Aufruf erhalten hat <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> . Daher wartet der Transaktions-Manager weiterhin auf eine Antwort und verwaltet die für diese Transaktion relevanten Informationen.  Wenn <xref:System.Transactions.Enlistment.Done%2A> nie aufgerufen wird, werden diese Informationen unbegrenzt im Arbeitsspeicher oder in einer systemweiten Ressource gespeichert. Dies führt dazu, dass Ressourcen nicht freigegeben werden können. Im Fall einer verteilten Transaktion könnte dies das MSDTC-Protokoll füllen, das den MSDTC-Prozess stoppt. Bei einer Transaktion, die von verwaltet <xref:System.Transactions> wird, führt dies zu einer schrittweisen und kontinuierlichen Zunahme der Arbeitsspeicher Nutzung des Resource Manager-Prozesses. Daher ist es wichtig, dass Sie die- <xref:System.Transactions.Enlistment.Done%2A> Methode anrufen, sobald Ihr Ressourcen-Manager mit ihrer Vorbereitungsarbeit abgeschlossen ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public void Prepare (System.Transactions.PreparingEnlistment preparingEnlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare(class System.Transactions.PreparingEnlistment preparingEnlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Prepare (preparingEnlistment As PreparingEnlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepare(System::Transactions::PreparingEnlistment ^ preparingEnlistment);" />
      <MemberSignature Language="F#" Value="abstract member Prepare : System.Transactions.PreparingEnlistment -&gt; unit" Usage="iEnlistmentNotification.Prepare preparingEnlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preparingEnlistment" Type="System.Transactions.PreparingEnlistment" />
      </Parameters>
      <Docs>
        <param name="preparingEnlistment">Ein <see cref="T:System.Transactions.PreparingEnlistment" />-Objekt, mit dem eine Antwort an den Transaktions-Manager gesendet wird.</param>
        <summary>Benachrichtigt ein eingetragenes Objekt darüber, dass eine Transaktion für einen Commit vorbereitet wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Transaktions-Manager ruft diese Methode eines eingetragenen Ressourcen-Managers während der Phase 1 einer Verpflichtung auf, wenn er die Teilnehmer fragt, ob er einen Commit für die Transaktion durchsetzen kann.  
  
 Wenn Sie einen permanenten Ressourcen-Manager implementieren, sollten Sie den Vorbereitungs Daten Satz in dieser Phase protokollieren. Der Datensatz muss alle erforderlichen Informationen enthalten, um die Wiederherstellung auszuführen. Dies schließt die- <xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A> Eigenschaft ein, die während der Wiederherstellung an den Transaktions-Manager in der-Methode übermittelt wird <xref:System.Transactions.TransactionManager.Reenlist%2A> . Weitere Informationen zur Wiederherstellung finden Sie unter [Durchführen der Wiederherstellung](https://msdn.microsoft.com/library/d342c5c7-da64-4a4c-8e63-b52f4fbf2691).  
  
 Der Ressourcen-Manager sollte alle Aufgaben abschließen, die abgeschlossen sein müssen, bevor die- <xref:System.Transactions.PreparingEnlistment.Prepared%2A> Methode des- `preparingEnlistment` Parameters aufgerufen wird, um seine Stimme für die Zustimmung anzugeben. Stellen Sie sicher, dass dies erreicht wird, bevor Sie eine Benachrichtigung in Phase 2 erhalten, wie z. b. Commit, Rollback oder zweifelhaft. Dies liegt daran, dass die Benachrichtigungen der Phase 2 Inline im gleichen Thread erfolgen können, der <xref:System.Transactions.PreparingEnlistment.Prepared%2A> in Phase 1 die Methode aufgerufen hat. Daher sollten Sie nach dem <xref:System.Transactions.PreparingEnlistment.Prepared%2A>-Aufruf keine Aufgaben mehr ausführen (z. B. Freigeben von Sperren), die vor dem Empfang der Benachrichtigungen aus Phase 2 abgeschlossen sein müssen.  
  
 Sie können auch die-Methode des- `preparingEnlistment` Parameters aufrufen, um eine Stimme für das Rollback anzugeben.  
  
 Wenn das-Objekt nur den Fortschritt der Transaktion beobachten und darauf reagieren soll, ohne daran teilnehmen zu müssen, sollte die Implementierung dieser Methode die- <xref:System.Transactions.Enlistment.Done%2A> Methode des- `preparingEnlistment` Parameters aufrufen, wenn die Arbeit abgeschlossen ist. Dadurch erhält Ihr Ressourcen-Manager keine Benachrichtigung in Phase 2.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rollback(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rollback (enlistment As Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rollback(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member Rollback : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.Rollback enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">Ein <see cref="T:System.Transactions.Enlistment" />-Objekt, mit dem eine Antwort an den Transaktions-Manager gesendet wird.</param>
        <summary>Benachrichtigt ein eingetragenes Objekt, dass ein Rollback für eine Transaktion ausgeführt wird (sie wird abgebrochen).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Transaktions-Manager ruft diese Methode eines eingetragenen Objekts auf, wenn ein Rollback für die Transaktion ausgeführt wird (abgebrochen), weil mindestens ein Transaktions Teilnehmer keinen Commit für die Transaktion durchgeführt hat.  
  
 Der Ressourcen-Manager sollte alle notwendigen Schritte ausführen, um die Transaktion abzuschließen und dann den TM darüber zu informieren, dass er abgeschlossen ist, indem er die- <xref:System.Transactions.Enlistment.Done%2A> Methode für den-Parameter aufruft `enlistment` .  
  
 Wenn der Ressourcen-Manager permanent registriert ist, aber nicht durch Aufrufen der- <xref:System.Transactions.Enlistment.Done%2A> Methode antwortet, ist der Transaktions-Manager nicht sicher, dass der Ressourcen-Manager den Aufruf erhalten hat <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> . Daher wartet der Transaktions-Manager weiterhin auf eine Antwort und verwaltet die für diese Transaktion relevanten Informationen.  Wenn <xref:System.Transactions.Enlistment.Done%2A> nie aufgerufen wird, werden diese Informationen unbegrenzt im Arbeitsspeicher oder in einer systemweiten Ressource gespeichert. Dies führt dazu, dass Ressourcen nicht freigegeben werden können. Im Fall einer verteilten Transaktion könnte dies das MSDTC-Protokoll füllen, das den MSDTC-Prozess stoppt. Bei einer Transaktion, die von verwaltet <xref:System.Transactions> wird, führt dies zu einer schrittweisen und kontinuierlichen Zunahme der Arbeitsspeicher Nutzung des Resource Manager-Prozesses. Daher ist es wichtig, dass Sie die- <xref:System.Transactions.Enlistment.Done%2A> Methode anrufen, sobald Ihr Ressourcen-Manager mit ihrer Vorbereitungsarbeit abgeschlossen ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
