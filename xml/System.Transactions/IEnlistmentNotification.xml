<Type Name="IEnlistmentNotification" FullName="System.Transactions.IEnlistmentNotification">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e60dea71d0f2063b56a541d5294ba5ac305362d3" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46642212" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEnlistmentNotification" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnlistmentNotification" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.IEnlistmentNotification" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnlistmentNotification" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEnlistmentNotification" />
  <TypeSignature Language="F#" Value="type IEnlistmentNotification = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Beschreibt eine Schnittstelle, die ein Ressourcen-Manager implementieren sollte, um beim Eintragen für die Teilnahme Zweiphasencommit-Benachrichtigungsrückrufe für den Transaktions-Manager bereitzustellen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Damit bei einem Resource Manager in einer Transaktion teilnehmen kann muss es in der Transaktion durch den Transaktions-Manager eintragen. Die <xref:System.Transactions.Transaction>-Klasse definiert eine Reihe von Methoden, deren Namen mit `Enlist` beginnen und die diese Funktionen bereitstellen. Die verschiedenen `Enlist` Methoden entsprechen, um die verschiedenen Typen von der Eintragung einer Ressource, über die verfügen kann.  
  
 Diese Klasse beschreibt eine Schnittstelle, die ein Ressourcen-Manager implementieren sollte, um den Transaktions-Manager beim Eintragen für die Teilnahme Zweiphasencommit-Benachrichtigungsrückrufe zwei bereit. Für alle Ressourcen-Manager-Implementierung von der <xref:System.Transactions.IEnlistmentNotification> -Schnittstelle, Sie tragen sie mit der <xref:System.Transactions.Transaction.EnlistVolatile%2A> Methode oder der <xref:System.Transactions.Transaction.EnlistDurable%2A> Methode der <xref:System.Transactions.Transaction> -Klasse, je nachdem, ob die Ressource beispielsweise flüchtiger oder permanenter. Weitere Informationen zu Eintragung und 2PC finden Sie unter [Ressourcen als Teilnehmer in einer Transaktion eintragen](~/docs/framework/data/transactions/enlisting-resources-as-participants-in-a-transaction.md) und [Commit einer Transaktion in Phase hat und mehreren Phasen bestehender](~/docs/framework/data/transactions/committing-a-transaction-in-single-phase-and-multi-phase.md) bzw.  
  
 Der Transaktions-Manager benachrichtigt die eingetragene Objekt in verschiedenen Phasen des zwei Phase Commit-Protokolls mithilfe der folgenden Methoden.  
  
|Methode|Beschreibung |  
|------------|-----------------|  
|<xref:System.Transactions.IEnlistmentNotification.Prepare%2A>|Diese Methode der ein eingetragenes Objekt dient als Rückruf vom Transaktions-Manager während der ersten Phase der Transaktion ein, wenn der Transaktions-Manager Teilnehmer fragt, ob sie die Transaktion ausführen können.|  
|<xref:System.Transactions.IEnlistmentNotification.Commit%2A>|Diese Methode der ein eingetragenes Objekt wird in der zweiten Phase einer Transaktion vom Transaktions-Manager als Rückruf verwendet, wenn die Transaktion ein Commit ausgeführt wird.|  
|<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>|Diese Methode der ein eingetragenes Objekt wird als ein Rückruf vom Transaktions-Manager in der zweiten Phase einer Transaktion verwendet, wenn die Transaktion abgebrochen wird (die ein Rollback ausgeführt wird).|  
|<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>|Diese Methode der ein eingetragenes Objekt wird in der zweiten Phase einer Transaktion vom Transaktions-Manager als Rückruf verwendet, wenn die Transaktion zweifelhaft ist.|  
  
> [!NOTE]
>  Sie sollten bedenken, dass Benachrichtigungen möglicherweise nicht sequenziell oder in einer bestimmten Reihenfolge gesendet werden.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt eine Implementierung dieser Schnittstelle als auch beim Eintragen des Objekts als Teilnehmer in einer Transaktion mithilfe der <xref:System.Transactions.Transaction.EnlistVolatile%2A> Methode.  
  
 [!code-csharp[Tx_Enlist#1](~/samples/snippets/csharp/VS_Snippets_CFX/tx_enlist/cs/enlist.cs#1)]
 [!code-vb[Tx_Enlist#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_enlist/vb/enlist.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Transactions.ISinglePhaseNotification" />
    <related type="Article" href="http://msdn.microsoft.com/library/786a12c2-d530-49f4-9c59-5c973e15a11d">Eintragen von Ressourcen als Teilnehmer an einer Transaktion</related>
    <related type="Article" href="http://msdn.microsoft.com/library/694ea153-e4db-41ae-96ac-9ac66dcb69a9">Ausführen eines Einphasen- oder Mehrphasencommits für eine Transaktion</related>
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member Commit : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.Commit enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">Ein <see cref="T:System.Transactions.Enlistment" />-Objekt, mit dem eine Antwort an den Transaktions-Manager gesendet wird.</param>
        <summary>Benachrichtigt ein eingetragenes Objekt darüber, dass ein Commit für eine Transaktion ausgeführt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Transaktions-Manager ruft diese Methode der ein eingetragenes Objekt in der zweiten Phase der Bindung, wenn sie alle Teilnehmer die Transaktion ein commit weist.  
  
 Der Ressourcen-Manager führt alle zum Abschließen der Transaktion und informiert den, der durch den Aufruf abgeschlossen wurde die <xref:System.Transactions.Enlistment.Done%2A> Methode für die `enlistment` Parameter.  
  
 Wenn der Ressourcen-Manager dauerhaft eingetragen hat, jedoch nicht durch den Aufruf reagiert <xref:System.Transactions.Enlistment.Done%2A> Methode der Transaktions-Manager ist nicht sicher, dass der Ressourcen-Manager erhalten hat die <xref:System.Transactions.IEnlistmentNotification.Commit%2A> aufrufen. Daher der Transaktions-Manager speichert eine Antwort gewartet und verwaltet die Informationen für diese Transaktion relevant.  Wenn <xref:System.Transactions.Enlistment.Done%2A> wird nie aufgerufen, diese Information wird aufbewahrt auf unbestimmte Zeit im Arbeitsspeicher oder in einer systemweiten-Ressource. Dies führt dazu, dass Ressourcen nicht freigegeben werden. Bei einer verteilten Transaktion konnte dies schließlich das MSDTC-Protokoll füllen soll, das die MSDTC-Prozess angehalten wird. Bei einer Transaktion, die von verwalteten <xref:System.Transactions>, dies führt zu einem schrittweisen und kontinuierlicher Anstieg der Arbeitsspeicherverbrauch der Resource Manager Prozess. Daher ist es entscheidend, dass Sie aufrufen, die <xref:System.Transactions.Enlistment.Done%2A> Methode, die anschließend von der Ressourcen-Manager mit Ihrer Vorbereitung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InDoubt">
      <MemberSignature Language="C#" Value="public void InDoubt (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InDoubt(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InDoubt(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member InDoubt : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.InDoubt enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">Ein <see cref="T:System.Transactions.Enlistment" />-Objekt, mit dem eine Antwort an den Transaktions-Manager gesendet wird.</param>
        <summary>Benachrichtigt ein eingetragenes Objekt darüber, dass der Status einer Transaktion zweifelhaft ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird für veränderliche Ressourcen aufgerufen, wenn der Transaktions-Manager wurde einen ein-Phasen-Commit-Vorgang auf eine einzelne dauerhafte Ressource aufgerufen werden soll, und klicken Sie dann für die Verbindung mit der permanenten Ressourcen verloren gehen, bevor das Transaktionsergebnis wurde. Zu diesem Zeitpunkt werden nicht das Transaktionsergebnis problemlos bestimmt.  
  
 Als <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> wird als Endzustand für eine Transaktion ist, sollten Sie nicht aufrufen <xref:System.Transactions.IEnlistmentNotification.Commit%2A> oder <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> nach dem Aufruf <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>.  
  
> [!NOTE]
>  Die Implementierung dieser Methode für die flüchtige Ressource sollten unabhängig Wiederherstellungs- oder Containment-Vorgang, die er versteht ausführen, auf die betroffenen Daten.  Es muss auch aufrufen, die <xref:System.Transactions.Enlistment.Done%2A> Methode für die auf die `enlistment` Parameter an, wenn er seine Arbeit beendet hat.  
  
 Wenn der Ressourcen-Manager dauerhaft eingetragen hat, jedoch nicht durch den Aufruf reagiert <xref:System.Transactions.Enlistment.Done%2A> Methode der Transaktions-Manager ist nicht sicher, dass der Ressourcen-Manager erhalten hat die <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> aufrufen. Daher der Transaktions-Manager speichert eine Antwort gewartet und verwaltet die Informationen für diese Transaktion relevant.  Wenn <xref:System.Transactions.Enlistment.Done%2A> wird nie aufgerufen, diese Information wird aufbewahrt auf unbestimmte Zeit im Arbeitsspeicher oder in einer systemweiten-Ressource. Dies führt dazu, dass Ressourcen nicht freigegeben werden. Bei einer verteilten Transaktion konnte dies schließlich das MSDTC-Protokoll füllen soll, das die MSDTC-Prozess angehalten wird. Bei einer Transaktion, die von verwalteten <xref:System.Transactions>, dies führt zu einem schrittweisen und kontinuierlicher Anstieg der Arbeitsspeicherverbrauch der Resource Manager Prozess. Daher ist es entscheidend, dass Sie aufrufen, die <xref:System.Transactions.Enlistment.Done%2A> Methode, die anschließend von der Ressourcen-Manager mit Ihrer Vorbereitung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public void Prepare (System.Transactions.PreparingEnlistment preparingEnlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare(class System.Transactions.PreparingEnlistment preparingEnlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepare(System::Transactions::PreparingEnlistment ^ preparingEnlistment);" />
      <MemberSignature Language="F#" Value="abstract member Prepare : System.Transactions.PreparingEnlistment -&gt; unit" Usage="iEnlistmentNotification.Prepare preparingEnlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preparingEnlistment" Type="System.Transactions.PreparingEnlistment" />
      </Parameters>
      <Docs>
        <param name="preparingEnlistment">Ein <see cref="T:System.Transactions.PreparingEnlistment" />-Objekt, mit dem eine Antwort an den Transaktions-Manager gesendet wird.</param>
        <summary>Benachrichtigt ein eingetragenes Objekt darüber, dass eine Transaktion für einen Commit vorbereitet wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Transaktions-Manager ruft diese Methode der eingetragenen Ressourcen-Manager während der Phase 1 der Bindung, wenn alle Teilnehmer gefragt werden, ob sie die Transaktion ausführen können.  
  
 Wenn Sie einen permanenten Ressourcen-Manager implementieren, sollten Sie sich anmelden Ihre Datensatz in dieser Phase vorbereiten. Der Eintrag sollte alle erforderlichen Informationen zum Ausführen einer Wiederherstellung enthalten. Dies schließt die <xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A> -Eigenschaft, die an den Transaktions-Manager in der <xref:System.Transactions.TransactionManager.Reenlist%2A> Methode während der Wiederherstellung. Weitere Informationen zur Wiederherstellung finden Sie unter [Performing Recovery](http://msdn.microsoft.com/library/d342c5c7-da64-4a4c-8e63-b52f4fbf2691).  
  
 Der Ressourcen-Manager sollte die gesamte Arbeit, die vor dem Aufruf abgeschlossen sein muss abgeschlossen der <xref:System.Transactions.PreparingEnlistment.Prepared%2A> Methode der `preparingEnlistment` Parameter, um seine Zustimmung zum Commit anzugeben. Sie sollten sicherstellen, werden, dass dies erreicht wird, vor dem Empfang von Phase 2 Benachrichtigungen solche commit und Rollback oder zweifelhaft. Dies ist, da Benachrichtigungen aus Phase 2 Inline im gleichen Thread erfolgen können, die aufgerufen der <xref:System.Transactions.PreparingEnlistment.Prepared%2A> -Methode in Phase 1. Daher sollten Sie nach dem <xref:System.Transactions.PreparingEnlistment.Prepared%2A>-Aufruf keine Aufgaben mehr ausführen (z. B. Freigeben von Sperren), die vor dem Empfang der Benachrichtigungen aus Phase 2 abgeschlossen sein müssen.  
  
 Sie können auch die Methode aufrufen der `preparingEnlistment` Parameter, um eine Stimme für ein Rollback anzugeben.  
  
 Wenn Sie möchten das Objekt, das nur beobachten und auf den Status der Transaktion zu reagieren, ohne teilzunehmen, die Implementierung dieser Methode aufrufen soll die <xref:System.Transactions.Enlistment.Done%2A> -Methode der der `preparingEnlistment` Parameter an, wenn er seine Arbeit beendet hat. Dadurch würde der Ressourcen-Manager keiner Phase 2-Benachrichtigung erhalten.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rollback(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rollback(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member Rollback : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.Rollback enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">Ein <see cref="T:System.Transactions.Enlistment" />-Objekt, mit dem eine Antwort an den Transaktions-Manager gesendet wird.</param>
        <summary>Benachrichtigt ein eingetragenes Objekt, dass ein Rollback für eine Transaktion ausgeführt wird (sie wird abgebrochen).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Transaktions-Manager ruft diese Methode der ein eingetragenes Objekt aus, wenn die Transaktion ein Rollback ausgeführt wird (abgebrochen), aufgrund der Unfähigkeit des einen oder mehrere Transaktionsteilnehmer Commit der Transaktion.  
  
 Der Ressourcen-Manager führt alle zum Abschließen der Transaktion und informiert den, der durch den Aufruf abgeschlossen wurde die <xref:System.Transactions.Enlistment.Done%2A> Methode für die `enlistment` Parameter.  
  
 Wenn der Ressourcen-Manager dauerhaft eingetragen hat, jedoch nicht durch den Aufruf reagiert <xref:System.Transactions.Enlistment.Done%2A> Methode der Transaktions-Manager ist nicht sicher, dass der Ressourcen-Manager erhalten hat die <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> aufrufen. Daher der Transaktions-Manager speichert eine Antwort gewartet und verwaltet die Informationen für diese Transaktion relevant.  Wenn <xref:System.Transactions.Enlistment.Done%2A> wird nie aufgerufen, diese Information wird aufbewahrt auf unbestimmte Zeit im Arbeitsspeicher oder in einer systemweiten-Ressource. Dies führt dazu, dass Ressourcen nicht freigegeben werden. Bei einer verteilten Transaktion konnte dies schließlich das MSDTC-Protokoll füllen soll, das die MSDTC-Prozess angehalten wird. Bei einer Transaktion, die von verwalteten <xref:System.Transactions>, dies führt zu einem schrittweisen und kontinuierlicher Anstieg der Arbeitsspeicherverbrauch der Resource Manager Prozess. Daher ist es entscheidend, dass Sie aufrufen, die <xref:System.Transactions.Enlistment.Done%2A> Methode, die anschließend von der Ressourcen-Manager mit Ihrer Vorbereitung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>