<Type Name="CommittableTransaction" FullName="System.Transactions.CommittableTransaction">
  <Metadata><Meta Name="ms.openlocfilehash" Value="464fc828a29932c8cf9248a436410338281d32e0" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65014206" /></Metadata><TypeSignature Language="C#" Value="public sealed class CommittableTransaction : System.Transactions.Transaction, IAsyncResult, IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit CommittableTransaction extends System.Transactions.Transaction implements class System.IAsyncResult, class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.CommittableTransaction" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CommittableTransaction&#xA;Inherits Transaction&#xA;Implements IAsyncResult, IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommittableTransaction sealed : System::Transactions::Transaction, IAsyncResult, IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type CommittableTransaction = class&#xA;    inherit Transaction&#xA;    interface ISerializable&#xA;    interface IDisposable&#xA;    interface IAsyncResult" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Transactions.Transaction</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAsyncResult</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fe091-101">Beschreibt eine Transaktion, für die ein Commit ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="fe091-101">Describes a committable transaction.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe091-102">Die <xref:System.Transactions.CommittableTransaction>-Klasse ermöglicht es Anwendungen, Transaktionen explizit zu verwenden, anstatt die <xref:System.Transactions.TransactionScope>-Klasse implizit zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="fe091-102">The <xref:System.Transactions.CommittableTransaction> class provides an explicit way for applications to use a transaction, as opposed to using the <xref:System.Transactions.TransactionScope> class implicitly.</span></span> <span data-ttu-id="fe091-103">Im Unterschied zur <xref:System.Transactions.TransactionScope>-Klasse muss der Autor der Anwendung die <xref:System.Transactions.CommittableTransaction.Commit%2A>-Methode bzw. die <xref:System.Transactions.Transaction.Rollback%2A>-Methode aufrufen, um einen Commit der Transaktion auszuführen oder um sie abzubrechen.</span><span class="sxs-lookup"><span data-stu-id="fe091-103">Unlike the <xref:System.Transactions.TransactionScope> class, the application writer needs to specifically call the <xref:System.Transactions.CommittableTransaction.Commit%2A> and <xref:System.Transactions.Transaction.Rollback%2A> methods in order to commit or abort the transaction.</span></span> <span data-ttu-id="fe091-104">Allerdings kann nur der Ersteller einer Transaktion die Transaktion einen Commit ausführen.</span><span class="sxs-lookup"><span data-stu-id="fe091-104">However, only the creator of a transaction can commit the transaction.</span></span> <span data-ttu-id="fe091-105">Aus diesem Grund abgerufenes Kopien der Transaktion ein Commit ausgeführt werden, die <xref:System.Transactions.Transaction.Clone%2A> Methode sind nicht commitfähig.</span><span class="sxs-lookup"><span data-stu-id="fe091-105">Therefore, copies of a committable transaction, obtained through the <xref:System.Transactions.Transaction.Clone%2A> method are not committable.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe091-106">Es wird empfohlen, die Erstellung impliziter Transaktionen mithilfe der <xref:System.Transactions.TransactionScope> Klasse, sodass die ambient-Transaktionskontext automatisch für Sie verwaltet wird.</span><span class="sxs-lookup"><span data-stu-id="fe091-106">We recommend that you create implicit transactions using the <xref:System.Transactions.TransactionScope> class, so that the ambient transaction context is automatically managed for you.</span></span> <span data-ttu-id="fe091-107">Verwenden Sie außerdem die <xref:System.Transactions.TransactionScope> und <xref:System.Transactions.DependentTransaction> -Klasse für Anwendungen, die die Verwendung der gleichen Transaktion über mehrere Funktionsaufrufe oder mehrere threadaufrufe hinweg erforderlich.</span><span class="sxs-lookup"><span data-stu-id="fe091-107">You should also use the <xref:System.Transactions.TransactionScope> and <xref:System.Transactions.DependentTransaction> class for applications that require the use of the same transaction across multiple function calls or multiple thread calls.</span></span> <span data-ttu-id="fe091-108">Weitere Informationen zu diesem Modell, finden Sie unter den [Implementing An Implicit Transaction mithilfe von Transaktion Scope](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) Thema.</span><span class="sxs-lookup"><span data-stu-id="fe091-108">For more information on this model, see the [Implementing An Implicit Transaction Using Transaction Scope](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) topic.</span></span>  
  
 <span data-ttu-id="fe091-109">Erstellen einer <xref:System.Transactions.CommittableTransaction> die Ambiente-Transaktion wird Ihr Code ausgeführt, in wird die Transaktion wird nicht automatisch festgelegt.</span><span class="sxs-lookup"><span data-stu-id="fe091-109">Creating a <xref:System.Transactions.CommittableTransaction> does not automatically set the ambient transaction, which is the transaction your code executes in.</span></span> <span data-ttu-id="fe091-110">Können Sie abrufen oder festlegen die Ambiente-Transaktion durch Aufrufen der statischen <xref:System.Transactions.Transaction.Current%2A?displayProperty=nameWithType> Eigenschaft des globalen <xref:System.Transactions.Transaction> Objekt.</span><span class="sxs-lookup"><span data-stu-id="fe091-110">You can get or set the ambient transaction by calling the static <xref:System.Transactions.Transaction.Current%2A?displayProperty=nameWithType> property of the global <xref:System.Transactions.Transaction> object.</span></span> <span data-ttu-id="fe091-111">Weitere Informationen zu ambient-Transaktionen finden Sie im Abschnitt "Verwalten des Transaktionsflusses mit TransactionScopeOption" die [Implementing An Implicit Transaction mithilfe von Transaktion Scope](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) Thema.</span><span class="sxs-lookup"><span data-stu-id="fe091-111">For more information on ambient transactions, see the " Managing Transaction Flow using TransactionScopeOption" section of the [Implementing An Implicit Transaction Using Transaction Scope](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) topic.</span></span> <span data-ttu-id="fe091-112">Wenn die Ambiente-Transaktion nicht festgelegt ist, wird jeder Vorgang auf einem Ressourcen-Manager nicht Teil dieser Transaktion.</span><span class="sxs-lookup"><span data-stu-id="fe091-112">If the ambient transaction is not set, any operation on a resource manager is not part of that transaction.</span></span> <span data-ttu-id="fe091-113">Sie müssen explizit festlegen und Zurücksetzen der ambient-Transaktions um sicherzustellen, dass die Ressourcen-Manager im richtigen Transaktionskontext ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="fe091-113">You need to explicitly set and reset the ambient transaction to ensure that resource managers operate under the right transaction context.</span></span>  
  
 <span data-ttu-id="fe091-114">Bis eine <xref:System.Transactions.CommittableTransaction> wurde Commit ausgeführt wurde, sind weiterhin alle an der Transaktion beteiligten Ressourcen gesperrt.</span><span class="sxs-lookup"><span data-stu-id="fe091-114">Until a <xref:System.Transactions.CommittableTransaction> has been committed, all the resources involved with the transaction are still locked.</span></span>  
  
 <span data-ttu-id="fe091-115">Ein <xref:System.Transactions.CommittableTransaction>-Objekt kann nicht wiederverwendet werden.</span><span class="sxs-lookup"><span data-stu-id="fe091-115">A <xref:System.Transactions.CommittableTransaction> object cannot be reused.</span></span> <span data-ttu-id="fe091-116">Sobald sie ein Commit oder Rollback ausgeführt wurde, nicht erneut verwendet werden, in einer Transaktion oder als der aktuelle Kontext der ambient-Transaktion festgelegt.</span><span class="sxs-lookup"><span data-stu-id="fe091-116">Once it has been committed or rolled back, it cannot be used again in a transaction or set as the current ambient transaction context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe091-117">Das folgende Beispiel erstellt zwei neue Instanzen der <xref:System.Transactions.CommittableTransaction>, ein Commit ausgeführt, und werden.</span><span class="sxs-lookup"><span data-stu-id="fe091-117">The following sample creates two new instances of <xref:System.Transactions.CommittableTransaction>, commits and rolls back them respectively.</span></span>  
  
  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="fe091-118">Dieser Typ ist threadsicher.</span><span class="sxs-lookup"><span data-stu-id="fe091-118">This type is thread safe.</span></span></threadsafe>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/ms172152(v=vs.85)"><span data-ttu-id="fe091-119">Implementieren einer impliziten Transaktion mit Transaktionsbereich</span><span class="sxs-lookup"><span data-stu-id="fe091-119">Implementing An Implicit Transaction Using Transaction Scope</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/f6c648f8-d638-4228-bfa4-0d65dd262968"><span data-ttu-id="fe091-120">Implementieren einer expliziten Transaktion mit CommittableTransaction</span><span class="sxs-lookup"><span data-stu-id="fe091-120">Implementing An Explicit Transaction Using CommittableTransaction</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fe091-121">Initialisiert eine neue Instanz der <see cref="T:System.Transactions.CommittableTransaction" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="fe091-121">Initializes a new instance of the <see cref="T:System.Transactions.CommittableTransaction" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommittableTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommittableTransaction();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fe091-122">Initialisiert eine neue Instanz der <see cref="T:System.Transactions.CommittableTransaction" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="fe091-122">Initializes a new instance of the <see cref="T:System.Transactions.CommittableTransaction" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fe091-123">Das folgende Beispiel erstellt eine neue Instanz der <xref:System.Transactions.CommittableTransaction> und ein Commit dafür ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="fe091-123">The following sample creates a new instance of <xref:System.Transactions.CommittableTransaction> and commits it.</span></span>  
  
 [!code-csharp[Tx_CommittableTx#1](~/samples/snippets/csharp/VS_Snippets_CFX/tx_committabletx/cs/committabletxwithsql.cs#1)]
 [!code-vb[Tx_CommittableTx#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_committabletx/vb/committabletxwithsql.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="fe091-124">Es wurde versucht, eine Transaktion unter Windows 98, Windows 98 Second Edition oder Windows Millennium Edition zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="fe091-124">An attempt to create a transaction under Windows 98, Windows 98 Second Edition or Windows Millennium Edition.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommittableTransaction (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.#ctor(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommittableTransaction(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="new System.Transactions.CommittableTransaction : TimeSpan -&gt; System.Transactions.CommittableTransaction" Usage="new System.Transactions.CommittableTransaction timeout" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="fe091-125">Die maximale Zeitspanne, die die Transaktion vorhanden sein kann, bevor sie abgebrochen wird.</span><span class="sxs-lookup"><span data-stu-id="fe091-125">The maximum amount of time the transaction can exist, before it is aborted.</span></span></param>
        <summary><span data-ttu-id="fe091-126">Initialisiert eine neue Instanz der <see cref="T:System.Transactions.CommittableTransaction" />-Klasse mit dem angegebenen <paramref name="timeout" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="fe091-126">Initializes a new instance of the <see cref="T:System.Transactions.CommittableTransaction" /> class with the specified <paramref name="timeout" /> value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="fe091-127">Es wurde versucht, eine Transaktion unter Windows 98, Windows 98 Second Edition oder Windows Millennium Edition zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="fe091-127">An attempt to create a transaction under Windows 98, Windows 98 Second Edition or Windows Millennium Edition.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommittableTransaction (System.Transactions.TransactionOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.#ctor(System.Transactions.TransactionOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As TransactionOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommittableTransaction(System::Transactions::TransactionOptions options);" />
      <MemberSignature Language="F#" Value="new System.Transactions.CommittableTransaction : System.Transactions.TransactionOptions -&gt; System.Transactions.CommittableTransaction" Usage="new System.Transactions.CommittableTransaction options" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="System.Transactions.TransactionOptions" />
      </Parameters>
      <Docs>
        <param name="options"><span data-ttu-id="fe091-128">Ein <see cref="T:System.Transactions.TransactionOptions" /> Struktur, die die Transaktionsoptionen für die Verwendung für die neue Transaktion beschreibt.</span><span class="sxs-lookup"><span data-stu-id="fe091-128">A <see cref="T:System.Transactions.TransactionOptions" /> structure that describes the transaction options to use for the new transaction.</span></span></param>
        <summary><span data-ttu-id="fe091-129">Initialisiert eine neue Instanz der dem <see cref="T:System.Transactions.CommittableTransaction" /> -Klasse mit den angegebenen Transaktionsoptionen.</span><span class="sxs-lookup"><span data-stu-id="fe091-129">Initializes a new instance of the <see cref="T:System.Transactions.CommittableTransaction" /> class with the specified transaction options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fe091-130">Das folgende Beispiel erstellt eine neue Instanz der <xref:System.Transactions.CommittableTransaction> mit Optionen, und bricht diese ab.</span><span class="sxs-lookup"><span data-stu-id="fe091-130">The following sample creates a new instance of <xref:System.Transactions.CommittableTransaction> with options, and aborts it.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="fe091-131">Es wurde versucht, eine Transaktion unter Windows 98, Windows 98 Second Edition oder Windows Millennium Edition zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="fe091-131">An attempt to create a transaction under Windows 98, Windows 98 Second Edition or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fe091-132"><paramref name="options" /> ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="fe091-132"><paramref name="options" /> is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginCommit">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCommit (AsyncCallback asyncCallback, object asyncState);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCommit(class System.AsyncCallback asyncCallback, object asyncState) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCommit(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCommit (AsyncCallback callback, object user_defined_state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCommit(class System.AsyncCallback callback, object user_defined_state) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCommit (callback As AsyncCallback, user_defined_state As Object) As IAsyncResult" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCommit(AsyncCallback ^ callback, System::Object ^ user_defined_state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCommit (callback As AsyncCallback, user_defined_state As Object) As IAsyncResult" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="F#" Value="member this.BeginCommit : AsyncCallback * obj -&gt; IAsyncResult" Usage="committableTransaction.BeginCommit (callback, user_defined_state)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginCommit : AsyncCallback * obj -&gt; IAsyncResult" Usage="committableTransaction.BeginCommit (callback, user_defined_state)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncState" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="user_defined_state" Type="System.Object" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncCallback"><span data-ttu-id="fe091-133">Die <see cref="T:System.AsyncCallback" /> Delegat, der aufgerufen wird, wenn die Transaktion abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="fe091-133">The <see cref="T:System.AsyncCallback" /> delegate that is invoked when the transaction completes.</span></span> <span data-ttu-id="fe091-134">Dieser Parameter kann sein <see langword="null" />, in diesem Fall die Anwendung nicht über den Abschluss der Transaktion benachrichtigt wird.</span><span class="sxs-lookup"><span data-stu-id="fe091-134">This parameter can be <see langword="null" />, in which case the application is not notified of the transaction's completion.</span></span> <span data-ttu-id="fe091-135">Stattdessen muss die Anwendung mithilfe der <see cref="T:System.IAsyncResult" /> Schnittstelle, um die Überprüfung auf den Abschluss und entsprechend warten, oder rufen Sie <see cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" /> auf Abschluss warten soll.</span><span class="sxs-lookup"><span data-stu-id="fe091-135">Instead, the application must use the <see cref="T:System.IAsyncResult" /> interface to check for completion and wait accordingly, or call <see cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" /> to wait for completion.</span></span></param>
        <param name="callback"><span data-ttu-id="fe091-136">Die <see cref="T:System.AsyncCallback" /> Delegat, der aufgerufen wird, wenn die Transaktion abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="fe091-136">The <see cref="T:System.AsyncCallback" /> delegate that is invoked when the transaction completes.</span></span> <span data-ttu-id="fe091-137">Dieser Parameter kann sein <see langword="null" />, in diesem Fall die Anwendung nicht über den Abschluss der Transaktion benachrichtigt wird.</span><span class="sxs-lookup"><span data-stu-id="fe091-137">This parameter can be <see langword="null" />, in which case the application is not notified of the transaction's completion.</span></span> <span data-ttu-id="fe091-138">Stattdessen muss die Anwendung mithilfe der <see cref="T:System.IAsyncResult" /> Schnittstelle, um die Überprüfung auf den Abschluss und entsprechend warten, oder rufen Sie <see cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" /> auf Abschluss warten soll.</span><span class="sxs-lookup"><span data-stu-id="fe091-138">Instead, the application must use the <see cref="T:System.IAsyncResult" /> interface to check for completion and wait accordingly, or call <see cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" /> to wait for completion.</span></span></param>
        <param name="asyncState"><span data-ttu-id="fe091-139">Ein Objekt, das beliebige Zustandsinformationen, die dem asynchronen Commit zugeordnete enthalten kann.</span><span class="sxs-lookup"><span data-stu-id="fe091-139">An object, which might contain arbitrary state information, associated with the asynchronous commitment.</span></span> <span data-ttu-id="fe091-140">Dieses Objekt an den Rückruf übergeben wird und nicht durch interpretiert <see cref="N:System.Transactions" />.</span><span class="sxs-lookup"><span data-stu-id="fe091-140">This object is passed to the callback, and is not interpreted by <see cref="N:System.Transactions" />.</span></span> <span data-ttu-id="fe091-141">Ein null-Verweis ist zulässig.</span><span class="sxs-lookup"><span data-stu-id="fe091-141">A null reference is permitted.</span></span></param>
        <param name="user_defined_state"><span data-ttu-id="fe091-142">Ein Objekt, das beliebige Zustandsinformationen, die dem asynchronen Commit zugeordnete enthalten kann.</span><span class="sxs-lookup"><span data-stu-id="fe091-142">An object, which might contain arbitrary state information, associated with the asynchronous commitment.</span></span> <span data-ttu-id="fe091-143">Dieses Objekt an den Rückruf übergeben wird und nicht durch interpretiert <see cref="N:System.Transactions" />.</span><span class="sxs-lookup"><span data-stu-id="fe091-143">This object is passed to the callback, and is not interpreted by <see cref="N:System.Transactions" />.</span></span> <span data-ttu-id="fe091-144">Ein null-Verweis ist zulässig.</span><span class="sxs-lookup"><span data-stu-id="fe091-144">A null reference is permitted.</span></span></param>
        <summary><span data-ttu-id="fe091-145">Versucht, einen asynchron Commit der Transaktion.</span><span class="sxs-lookup"><span data-stu-id="fe091-145">Begins an attempt to commit the transaction asynchronously.</span></span></summary>
        <returns><span data-ttu-id="fe091-146">Ein <see cref="T:System.IAsyncResult" /> -Schnittstelle, die vom Aufrufer zum Überprüfen des Status des asynchronen Vorgangs oder warten Sie nach Abschluss des Vorgangs verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="fe091-146">An <see cref="T:System.IAsyncResult" /> interface that can be used by the caller to check the status of the asynchronous operation, or to wait for the operation to complete.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe091-147">Diese Methode gibt sofort zurück, bevor die Transaktion abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="fe091-147">This method returns immediately, before the transaction has been completed.</span></span> <span data-ttu-id="fe091-148">Die Transaktion dann Commits in einem anderen Thread aus, und die `asyncCallback` Delegat wird aufgerufen, wenn er abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="fe091-148">The transaction then commits on a different thread, and the `asyncCallback` delegate is invoked when it has completed.</span></span> <span data-ttu-id="fe091-149">Nachdem diese Methode aufgerufen wird, kein erhalten das Ergebnis der Transaktion bis zum Aufruf von <xref:System.Transactions.CommittableTransaction.EndCommit%2A>.</span><span class="sxs-lookup"><span data-stu-id="fe091-149">After this method is called, you do not receive the outcome of the transaction until you call <xref:System.Transactions.CommittableTransaction.EndCommit%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe091-150">Der Commit-Prozess kann in diesem Methodenaufruf synchron abgeschlossen.</span><span class="sxs-lookup"><span data-stu-id="fe091-150">The commit process may complete synchronously inside this method call.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit();" />
      <MemberSignature Language="F#" Value="member this.Commit : unit -&gt; unit" Usage="committableTransaction.Commit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fe091-151">Versucht, die Transaktion ein Commit ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="fe091-151">Attempts to commit the transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe091-152">Wenn diese Methode aufgerufen wird, werden alle Objekte, die registriert wurden, in der Transaktion beteiligt sein soll abgerufen werden und ihre Abstimmung auf die ein commit oder ein Rollback der Transaktion können unabhängig voneinander angeben.</span><span class="sxs-lookup"><span data-stu-id="fe091-152">When this method is called, all objects that have registered to participate in the transaction are polled and can independently indicate their vote to either commit or roll back the transaction.</span></span> <span data-ttu-id="fe091-153">Wenn sich ein Teilnehmer bestimmt, ob für die ein Rollback der Transaktion auszuführen, wird ein Rollback und löst diese Methode eine <xref:System.Transactions.TransactionException> Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="fe091-153">If any participant votes to roll back the transaction, it is rolled back and this method throws a <xref:System.Transactions.TransactionException> exception.</span></span> <span data-ttu-id="fe091-154">Dies ist ein normales Verhalten für eine Transaktion und der Code sollte abfangen und Verarbeiten von Ausnahmen.</span><span class="sxs-lookup"><span data-stu-id="fe091-154">This is a normal occurrence for a transaction and your code should catch and process such exceptions.</span></span>  
  
 <span data-ttu-id="fe091-155"><xref:System.Transactions.CommittableTransaction.Commit%2A> und <xref:System.Transactions.CommittableTransaction.EndCommit%2A> bis zum Abschluss der ersten Phase der Verarbeitung von Transaktionen blockieren.</span><span class="sxs-lookup"><span data-stu-id="fe091-155"><xref:System.Transactions.CommittableTransaction.Commit%2A> and <xref:System.Transactions.CommittableTransaction.EndCommit%2A> block until the first phase of transaction processing is complete.</span></span> <span data-ttu-id="fe091-156">Die erste Phase nach der alle Ressourcen-Manager beendet und Eintragungen in der Transaktion für das Transaktionsergebnis gewählt haben und die <xref:System.Transactions.TransactionManager> beschloss dauerhaft einen commit oder Abbruch der Transaktion.</span><span class="sxs-lookup"><span data-stu-id="fe091-156">The first phase ends after all resource managers and enlistments in the transaction have voted on the transaction outcome and the <xref:System.Transactions.TransactionManager> has durably decided to commit or abort the transaction.</span></span> <span data-ttu-id="fe091-157">Die zweite Phase der Verarbeitung ist immer asynchron.</span><span class="sxs-lookup"><span data-stu-id="fe091-157">The second phase of processing is always asynchronous.</span></span> <span data-ttu-id="fe091-158">Daher besteht keine Garantie, dass Daten nur von innerhalb einer bestimmten Transaktion ein Commit unmittelbar danach werden, wenn eine andere Transaktion nicht verwenden, um diese Daten anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="fe091-158">Therefore, there is no guarantee that data just committed from within a given transaction will be immediately available afterwards when not using another transaction to view this data.</span></span>  
  
 <span data-ttu-id="fe091-159">Da diese Methode blockiert, bis die erste Phase der Verarbeitung von Transaktionen abgeschlossen ist, ist äußerst vorsichtig vor, bei Verwendung dieser Methode in einer Windows Forms (WinForm-Anwendung)-Anwendung oder ein Deadlock auftreten können.</span><span class="sxs-lookup"><span data-stu-id="fe091-159">Because this method blocks until the first phase of transaction processing is complete, you should be extremely careful when using this method in a Windows Form (WinForm) application, or a deadlock can occur.</span></span> <span data-ttu-id="fe091-160">Wenn Sie diese Methode eine WinForm-Steuerelement-Ereignis (z. B. durch Klicken auf eine Schaltfläche) aufrufen, und verwenden Sie die synchrone <xref:System.Windows.Forms.Control.Invoke%2A> Methode, um das Steuerelement auf der Benutzeroberfläche (z. B. Farben zu ändern) während der Verarbeitung der Transaktions auszuführen leiten eine Deadlock erfolgt.</span><span class="sxs-lookup"><span data-stu-id="fe091-160">If you call this method inside one WinForm Control event (for example, clicking a button), and use the synchronous <xref:System.Windows.Forms.Control.Invoke%2A> method to direct the control to perform some UI tasks (for example, changing colors) in the middle of processing the transaction, a deadlock will happen.</span></span> <span data-ttu-id="fe091-161">Grund hierfür ist die <xref:System.Windows.Forms.Control.Invoke%2A> -Methode ist synchron und den Thread blockiert, bis der UI-Thread beendet wurde.</span><span class="sxs-lookup"><span data-stu-id="fe091-161">This is because the <xref:System.Windows.Forms.Control.Invoke%2A> method is synchronous and blocks the worker thread until the UI thread finishes its job.</span></span> <span data-ttu-id="fe091-162">In diesem Szenario im UI-Thread allerdings auch wartet der Arbeitsthread die Transaktion ein commit auf.</span><span class="sxs-lookup"><span data-stu-id="fe091-162">However, in our scenario, the UI thread is also waiting for the worker thread to commit the transaction.</span></span> <span data-ttu-id="fe091-163">Das Ergebnis ist, dass keine können den Vorgang fortsetzen und der Bereich wartet, des Commits abgeschlossen.</span><span class="sxs-lookup"><span data-stu-id="fe091-163">The result is that none is able to proceed and the scope waits indefinitely for the Commit to finish.</span></span> <span data-ttu-id="fe091-164">Verwenden Sie <xref:System.Windows.Forms.Control.BeginInvoke%2A> statt <xref:System.Windows.Forms.Control.Invoke%2A> wo immer dies möglich, da es sich um asynchrone und weniger anfällig für Deadlocks handelt.</span><span class="sxs-lookup"><span data-stu-id="fe091-164">You should use <xref:System.Windows.Forms.Control.BeginInvoke%2A> rather than <xref:System.Windows.Forms.Control.Invoke%2A> wherever possible, because it is asynchronous and thus less prone to deadlock.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Transactions.TransactionInDoubtException"><span data-ttu-id="fe091-165"><see cref="M:System.Transactions.CommittableTransaction.Commit" /> für eine Transaktion und die Transaktion aufgerufen wird <see cref="F:System.Transactions.TransactionStatus.InDoubt" />.</span><span class="sxs-lookup"><span data-stu-id="fe091-165"><see cref="M:System.Transactions.CommittableTransaction.Commit" /> is called on a transaction and the transaction becomes <see cref="F:System.Transactions.TransactionStatus.InDoubt" />.</span></span></exception>
        <exception cref="T:System.Transactions.TransactionAbortedException"><span data-ttu-id="fe091-166"><see cref="M:System.Transactions.CommittableTransaction.Commit" /> wird aufgerufen, und die Transaktion ein Rollback zum ersten Mal.</span><span class="sxs-lookup"><span data-stu-id="fe091-166"><see cref="M:System.Transactions.CommittableTransaction.Commit" /> is called and the transaction rolls back for the first time.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndCommit">
      <MemberSignature Language="C#" Value="public void EndCommit (IAsyncResult asyncResult);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndCommit(class System.IAsyncResult asyncResult) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCommit (asyncResult As IAsyncResult)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCommit(IAsyncResult ^ asyncResult);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public void EndCommit (IAsyncResult ar);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndCommit(class System.IAsyncResult ar) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCommit (ar As IAsyncResult)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCommit(IAsyncResult ^ ar);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="F#" Value="member this.EndCommit : IAsyncResult -&gt; unit" Usage="committableTransaction.EndCommit ar" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.EndCommit : IAsyncResult -&gt; unit" Usage="committableTransaction.EndCommit ar" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="ar" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="fe091-167">Die <see cref="T:System.IAsyncResult" /> Objekt, das dem asynchronen Commit zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="fe091-167">The <see cref="T:System.IAsyncResult" /> object associated with the asynchronous commitment.</span></span></param>
        <param name="ar"><span data-ttu-id="fe091-168">Die <see cref="T:System.IAsyncResult" /> Objekt, das dem asynchronen Commit zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="fe091-168">The <see cref="T:System.IAsyncResult" /> object associated with the asynchronous commitment.</span></span></param>
        <summary><span data-ttu-id="fe091-169">Versuch, die asynchron die Transaktion ein commit wird beendet.</span><span class="sxs-lookup"><span data-stu-id="fe091-169">Ends an attempt to commit the transaction asynchronously.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe091-170">Sie sollten diese Methode aufrufen, in den Callback-Delegaten als Parameter an die <xref:System.Transactions.CommittableTransaction.BeginCommit%2A> Methode, wenn Sie alle Bereinigungen, die dem asynchronen Commit zugeordnet haben.</span><span class="sxs-lookup"><span data-stu-id="fe091-170">You should call this method in the callback delegate specified as a parameter to the <xref:System.Transactions.CommittableTransaction.BeginCommit%2A> method, when you have finished any cleanup work associated with the asynchronous commitment.</span></span> <span data-ttu-id="fe091-171">Sie können diese Methode auch einem frühen Zeitpunkt aufrufen, ohne zu warten, für den Delegaten verwenden.</span><span class="sxs-lookup"><span data-stu-id="fe091-171">You can also call this method early without waiting for the delegate.</span></span> <span data-ttu-id="fe091-172">Wenn Sie nach der Zeit, die Sie diese Methode aufrufen, die Transaktion nicht abgeschlossen wurde, wartet diese Methode, für dessen Abschluss.</span><span class="sxs-lookup"><span data-stu-id="fe091-172">If, by the time you call this method, the transaction has not completed, this method waits for its completion.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="fe091-173">Die <xref:System.IAsyncResult.CompletedSynchronously%2A> von zurückgegebene Eigenschaft `asyncResult` ist immer `false`, auch wenn der Vorgang synchron abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="fe091-173">The <xref:System.IAsyncResult.CompletedSynchronously%2A> property returned by `asyncResult` is always `false`, even if the operation completed synchronously.</span></span>  
  
 <span data-ttu-id="fe091-174"><xref:System.Transactions.CommittableTransaction.Commit%2A> und <xref:System.Transactions.CommittableTransaction.EndCommit%2A> bis zum Abschluss der ersten Phase der Verarbeitung von Transaktionen blockieren.</span><span class="sxs-lookup"><span data-stu-id="fe091-174"><xref:System.Transactions.CommittableTransaction.Commit%2A> and <xref:System.Transactions.CommittableTransaction.EndCommit%2A> block until the first phase of transaction processing is complete.</span></span> <span data-ttu-id="fe091-175">Die erste Phase nach der alle Ressourcen-Manager beendet und Eintragungen in der Transaktion für das Transaktionsergebnis gewählt haben und die <xref:System.Transactions.TransactionManager> beschloss dauerhaft einen commit oder Abbruch der Transaktion.</span><span class="sxs-lookup"><span data-stu-id="fe091-175">The first phase ends after all resource managers and enlistments in the transaction have voted on the transaction outcome and the <xref:System.Transactions.TransactionManager> has durably decided to commit or abort the transaction.</span></span> <span data-ttu-id="fe091-176">Die zweite Phase der Verarbeitung ist immer asynchron.</span><span class="sxs-lookup"><span data-stu-id="fe091-176">The second phase of processing is always asynchronous.</span></span> <span data-ttu-id="fe091-177">Daher besteht keine Garantie, dass Daten nur von innerhalb einer bestimmten Transaktion ein Commit unmittelbar danach werden, wenn eine andere Transaktion nicht verwenden, um diese Daten anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="fe091-177">Therefore, there is no guarantee that data just committed from within a given transaction will be immediately available afterwards when not using another transaction to view this data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Transactions.TransactionAbortedException"><span data-ttu-id="fe091-178"><see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> wird aufgerufen, und die Transaktion ein Rollback zum ersten Mal.</span><span class="sxs-lookup"><span data-stu-id="fe091-178"><see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> is called and the transaction rolls back for the first time.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IAsyncResult.AsyncState">
      <MemberSignature Language="C#" Value="object System.IAsyncResult.AsyncState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.IAsyncResult.AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.Transactions.CommittableTransaction.System#IAsyncResult#AsyncState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property AsyncState As Object Implements IAsyncResult.AsyncState" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::IAsyncResult::AsyncState { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.IAsyncResult.AsyncState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.AsyncState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe091-179">Ruft das Objekt, das als letzten Parameters des der <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> Methodenaufruf.</span><span class="sxs-lookup"><span data-stu-id="fe091-179">Gets the object provided as the last parameter of the <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> method call.</span></span></summary>
        <value><span data-ttu-id="fe091-180">Das Objekt, das als letzten Parameters des der <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> Methodenaufruf.</span><span class="sxs-lookup"><span data-stu-id="fe091-180">The object provided as the last parameter of the <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> method call.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IAsyncResult.AsyncWaitHandle">
      <MemberSignature Language="C#" Value="System.Threading.WaitHandle System.IAsyncResult.AsyncWaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle System.IAsyncResult.AsyncWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.Transactions.CommittableTransaction.System#IAsyncResult#AsyncWaitHandle" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property AsyncWaitHandle As WaitHandle Implements IAsyncResult.AsyncWaitHandle" />
      <MemberSignature Language="C++ CLI" Value="property System::Threading::WaitHandle ^ System::IAsyncResult::AsyncWaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.IAsyncResult.AsyncWaitHandle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.AsyncWaitHandle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe091-181">Ruft einen <see cref="T:System.Threading.WaitHandle" /> ab, der verwendet wird, um auf den Abschluss eines asynchronen Vorgangs zu warten.</span><span class="sxs-lookup"><span data-stu-id="fe091-181">Gets a <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</span></span></summary>
        <value><span data-ttu-id="fe091-182">Ein <see cref="T:System.Threading.WaitHandle" />, der verwendet wird, um auf den Abschluss eines asynchronen Vorgangs zu warten.</span><span class="sxs-lookup"><span data-stu-id="fe091-182">A <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IAsyncResult.CompletedSynchronously">
      <MemberSignature Language="C#" Value="bool System.IAsyncResult.CompletedSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.IAsyncResult.CompletedSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.Transactions.CommittableTransaction.System#IAsyncResult#CompletedSynchronously" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property CompletedSynchronously As Boolean Implements IAsyncResult.CompletedSynchronously" />
      <MemberSignature Language="C++ CLI" Value="property bool System::IAsyncResult::CompletedSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.IAsyncResult.CompletedSynchronously" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.CompletedSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe091-183">Ruft eine Angabe darüber, ob der asynchrone Commitvorgang synchron abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="fe091-183">Gets an indication of whether the asynchronous commit operation completed synchronously.</span></span></summary>
        <value><span data-ttu-id="fe091-184"><see langword="true" /> Wenn der asynchrone Commitvorgang synchron abgeschlossen wurde; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fe091-184"><see langword="true" /> if the asynchronous commit operation completed synchronously; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fe091-185">Gibt diese Eigenschaft immer <see langword="false" /> , selbst wenn der Vorgang synchron abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="fe091-185">This property always returns <see langword="false" /> even if the operation completed synchronously.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IAsyncResult.IsCompleted">
      <MemberSignature Language="C#" Value="bool System.IAsyncResult.IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.IAsyncResult.IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Transactions.CommittableTransaction.System#IAsyncResult#IsCompleted" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsCompleted As Boolean Implements IAsyncResult.IsCompleted" />
      <MemberSignature Language="C++ CLI" Value="property bool System::IAsyncResult::IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.IAsyncResult.IsCompleted" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.IsCompleted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe091-186">Ruft einen Wert ab, ob der asynchrone Commitvorgang abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="fe091-186">Gets an indication whether the asynchronous commit operation has completed.</span></span></summary>
        <value><span data-ttu-id="fe091-187"><see langword="true" />, wenn der Vorgang abgeschlossen ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fe091-187"><see langword="true" /> if the operation is complete; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>