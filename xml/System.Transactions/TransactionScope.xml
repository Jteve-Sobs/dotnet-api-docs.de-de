<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TransactionScope.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e344e59-9d8e-481b-978a-09f2e01be86c72147f3ec967d71b609f35b6ae02d5cf13f169f7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">72147f3ec967d71b609f35b6ae02d5cf13f169f7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e3295b6cc303a611a73a84c4b27f9da792ad0d</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/26/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Transactions.TransactionScope">
          <source>Makes a code block transactional.</source>
          <target state="translated">Ändert einen Codeblock in transaktional.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Transactions.TransactionScope">
          <source>This class cannot be inherited.</source>
          <target state="translated">Diese Klasse kann nicht vererbt werden.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>The <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> infrastructure provides both an explicit programming model based on the <ph id="ph2">&lt;xref:System.Transactions.Transaction&gt;</ph> class, as well as an implicit programming model using the <ph id="ph3">&lt;xref:System.Transactions.TransactionScope&gt;</ph> class, in which transactions are automatically managed by the infrastructure.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> Infrastruktur bietet sowohl ein explizites Programmiermodell basierend auf den <ph id="ph2">&lt;xref:System.Transactions.Transaction&gt;</ph> Klasse als auch ein implizites Programmiermodell die <ph id="ph3">&lt;xref:System.Transactions.TransactionScope&gt;</ph> Klasse, die in der Transaktionen automatisch von der Infrastruktur verwaltet werden.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>We recommend that you create implicit transactions using the <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> class, so that the ambient transaction context is automatically managed for you.</source>
          <target state="translated">Wir empfehlen das Erstellen von impliziter Transaktionen, die mithilfe der <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> Klasse, sodass der Kontext der ambient-Transaktion automatisch für Sie verwaltet wird.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>You should also use the <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> and <ph id="ph2">&lt;xref:System.Transactions.DependentTransaction&gt;</ph> class for applications that require the use of the same transaction across multiple function calls or multiple thread calls.</source>
          <target state="translated">Verwenden Sie zudem die <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> und <ph id="ph2">&lt;xref:System.Transactions.DependentTransaction&gt;</ph> Klasse für Anwendungen, die die Verwendung der gleichen Transaktion über mehrere Funktionsaufrufe oder Aufrufe von mehreren Threads erfordern.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>For more information on this model, see the <bpt id="p1">[</bpt>Implementing An Implicit Transaction Using Transaction Scope<ept id="p1">](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md)</ept> topic.</source>
          <target state="translated">Weitere Informationen zu diesem Modell finden Sie unter der <bpt id="p1">[</bpt>implementieren eine implizite Transaktion mithilfe von Transaktionsbereich<ept id="p1">](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md)</ept> Thema.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>For more information on writing a transactional application, see <bpt id="p1">[</bpt>Writing A Transactional Application<ept id="p1">](~/docs/framework/data/transactions/writing-a-transactional-application.md)</ept>.</source>
          <target state="translated">Weitere Informationen über das Erstellen einer transaktionsanwendung, finden Sie unter <bpt id="p1">[</bpt>Transaktionsanwendung schreiben<ept id="p1">](~/docs/framework/data/transactions/writing-a-transactional-application.md)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>Upon instantiating a <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> by the <ph id="ph2">`new`</ph> statement, the transaction manager determines which transaction to participate in.</source>
          <target state="translated">Beim Instanziieren einer <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> durch die <ph id="ph2">`new`</ph> -Anweisung der Transaktions-Manager bestimmt, welche Transaktion teilnehmen.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>Once determined, the scope always participates in that transaction.</source>
          <target state="translated">Sobald er festgelegt wurde, ist der Bereich immer an dieser Transaktion beteiligt.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>The decision is based on two factors: whether an ambient transaction is present and the value of the <ph id="ph1">`TransactionScopeOption`</ph> parameter in the constructor.</source>
          <target state="translated">Die Entscheidung hängt von zwei Faktoren ab: vom Vorhandensein einer umgebenden Transaktion und vom Wert des <ph id="ph1">`TransactionScopeOption`</ph>-Parameters im Konstruktor.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>The ambient transaction is the transaction your code executes in.</source>
          <target state="translated">Die Ambiente-Transaktion wird die Transaktion, der in Ihrem Code ausgeführt wird.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>You can obtain a reference to the ambient transaction by calling the static <ph id="ph1">&lt;xref:System.Transactions.Transaction.Current%2A?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Transactions.Transaction&gt;</ph> class.</source>
          <target state="translated">Ein Verweis auf die Ambient-Transaktion kann durch einen Aufruf der statischen <ph id="ph1">&lt;xref:System.Transactions.Transaction.Current%2A?displayProperty=nameWithType&gt;</ph>-Eigenschaft der <ph id="ph2">&lt;xref:System.Transactions.Transaction&gt;</ph>-Klasse abgerufen werden.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>For more information on how this parameter is used, see the "Transaction Flow Management" section of the <bpt id="p1">[</bpt>Implementing An Implicit Transaction Using Transaction Scope<ept id="p1">](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md)</ept> topic.</source>
          <target state="translated">Weitere Informationen zur Verwendung dieses Parameters ist finden Sie im Abschnitt "Transaction Flow Management" die <bpt id="p1">[</bpt>implementieren eine implizite Transaktion mithilfe von Transaktionsbereich<ept id="p1">](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md)</ept> Thema.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>If no exception occurs within the transaction scope (that is, between the initialization of the <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> object and the calling of its <ph id="ph2">&lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt;</ph> method), then the transaction in which the scope participates is allowed to proceed.</source>
          <target state="translated">Wenn keine Ausnahme innerhalb des Geltungsbereichs der Transaktion auftritt (d. h. zwischen der Initialisierung des der <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> -Objekt und das Aufrufen der seine <ph id="ph2">&lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt;</ph> Methode), und klicken Sie dann die Transaktion, in dem der Bereich beteiligt, zugelassen wird, um den Vorgang fortzusetzen.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>If an exception does occur within the transaction scope, the transaction in which it participates will be rolled back.</source>
          <target state="translated">Wenn eine Ausnahme innerhalb des Geltungsbereichs der Transaktion auftritt, wird die Transaktion, an der sie beteiligt ist, ein Rollback ausgeführt.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>When your application completes all work it wants to perform in a transaction, you should call the <ph id="ph1">&lt;xref:System.Transactions.TransactionScope.Complete%2A&gt;</ph> method only once to inform that transaction manager that it is acceptable to commit the transaction.</source>
          <target state="translated">Wenn Ihre Anwendung schließt die gesamte Arbeit in einer Transaktion ausgeführt werden sollen, rufen Sie die <ph id="ph1">&lt;xref:System.Transactions.TransactionScope.Complete%2A&gt;</ph> -Methode nur einmal auf die betreffenden Transaktions-Manager zu informieren, dass es für die Transaktion ein Commit ausgeführt wird.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>Failing to call this method aborts the transaction.</source>
          <target state="translated">Diese Methode aufgerufen wird, wird die Transaktion abgebrochen.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>A call to the <ph id="ph1">&lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt;</ph> method marks the end of the transaction scope.</source>
          <target state="translated">Ein Aufruf der <ph id="ph1">&lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt;</ph> Methode markiert das Ende des Transaktionsbereichs.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>Exceptions that occur after calling this method may not affect the transaction.</source>
          <target state="translated">Ausnahmen, die nach dem Aufrufen dieser Methode eintreten, beeinflussen die Transaktion möglicherweise nicht.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>If you modify the value of <ph id="ph1">&lt;xref:System.Transactions.Transaction.Current%2A&gt;</ph> inside a scope, an exception is thrown when <ph id="ph2">&lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt;</ph> is called.</source>
          <target state="translated">Wenn Sie beim Ändern des Werts eines <ph id="ph1">&lt;xref:System.Transactions.Transaction.Current%2A&gt;</ph> innerhalb eines Bereichs eine Ausnahme wird ausgelöst, wenn <ph id="ph2">&lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>However, at the end of the scope, the previous value is restored.</source>
          <target state="translated">Allerdings wird am Ende des Bereichs, der vorherige Wert wiederhergestellt.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>In addition, if you call <ph id="ph1">&lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt;</ph> on <ph id="ph2">&lt;xref:System.Transactions.Transaction.Current%2A&gt;</ph> inside a transaction scope that created the transaction, the transaction aborts at the end of the scope.</source>
          <target state="translated">Darüber hinaus, wenn Sie rufen <ph id="ph1">&lt;xref:System.Transactions.TransactionScope.Dispose%2A&gt;</ph> auf <ph id="ph2">&lt;xref:System.Transactions.Transaction.Current%2A&gt;</ph> innerhalb eines Transaktionsbereichs, die die Transaktion erstellt, die Transaktion abbricht, am Ende des Bereichs.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> class to define a block of code to participate in a transaction.</source>
          <target state="translated">Im folgenden Beispiel wird veranschaulicht, wie die <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> Klasse, um einen Codeblock zur Teilnahme an einer Transaktions zu definieren.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Transactions.TransactionScope">
          <source>This type is thread safe.</source>
          <target state="translated">Dieser Typ ist threadsicher.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="T:System.Transactions.TransactionScope">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.#ctor">
          <source>This constructor creates a new transaction scope with the transaction scope option equal to <ph id="ph1">&lt;xref:System.Transactions.TransactionScopeOption.Required&gt;</ph>.</source>
          <target state="translated">Dieser Konstruktor erstellt einen neuer Transaktionsbereich mit Option für den Transaktionsbereich gleich <ph id="ph1">&lt;xref:System.Transactions.TransactionScopeOption.Required&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.#ctor">
          <source>This means that a transaction is required by the new scope and the ambient transaction is used if one already exists.</source>
          <target state="translated">Dies bedeutet, dass eine Transaktion, durch den neuen Bereich erforderlich ist und die Ambiente-Transaktion verwendet wird, wenn bereits eine vorhanden ist.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.#ctor">
          <source>Otherwise, it creates a new transaction before entering the scope.</source>
          <target state="translated">Andernfalls wird vor Eingabe des Bereichs eine neue Transaktion erstellt.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph> class and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph>-Klasse und legt die angegebene Transaktion als umgebende Transaktion fest, damit für die transaktionalen Arbeiten im Bereich diese Transaktion verwendet wird.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</source>
          <target state="translated">Die Transaktion, die als umgebende Transaktion festgelegt werden soll, damit für die transaktionalen Arbeiten im Bereich diese Transaktion verwendet wird.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /&gt;</ph> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</source>
          <target state="translated">Eine Instanz der <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /&gt;</ph> -Enumeration, die beschreibt, ob die ambient-Transaktion, die dem Transaktionsbereich zugeordnet ist, über Thread Fortsetzungen übergeben wird, wenn Task- oder asynchrone async/await-.NET-Programmiermuster verwenden.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt]</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph> class and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph>-Klasse und legt die angegebene Transaktion als umgebende Transaktion fest, damit für die transaktionalen Arbeiten im Bereich diese Transaktion verwendet wird.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt]</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph> class with the specified asynchronous flow option.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph>-Klasse mit der angegebenen asynchronen flow-Option.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph> class with the specified requirements.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph>-Klasse mit den angegebenen Anforderungen.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</source>
          <target state="translated">Die Transaktion, die als umgebende Transaktion festgelegt werden soll, damit für die transaktionalen Arbeiten im Bereich diese Transaktion verwendet wird.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> after which the transaction scope times out and aborts the transaction.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>, nach der der Transaktionsbereich abläuft und die Transaktion abgebrochen wird.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /&gt;</ph> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</source>
          <target state="translated">Eine Instanz der <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /&gt;</ph> -Enumeration, die beschreibt, ob die ambient-Transaktion, die dem Transaktionsbereich zugeordnet ist, über Thread Fortsetzungen übergeben wird, wenn Task- oder asynchrone async/await-.NET-Programmiermuster verwenden.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt]</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph> class with the specified timeout value, and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph>-Klasse mit dem angegebenen Timeoutwert und legt die angegebene Transaktion als umgebende Transaktion fest, damit für die transaktionalen Arbeiten im Bereich diese Transaktion verwendet wird.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScopeOption" /&gt;</ph> enumeration that describes the transaction requirements associated with this transaction scope.</source>
          <target state="translated">Eine Instanz der <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScopeOption" /&gt;</ph>-Enumeration, die die diesem Transaktionsbereich zugeordneten Transaktionsanforderungen beschreibt.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionOptions" /&gt;</ph> structure that describes the transaction options to use if a new transaction is created.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionOptions" /&gt;</ph>-Struktur, die die Transaktionsoptionen beschreibt, die beim Erstellen einer neuen Transaktion verwendet werden.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>If an existing transaction is used, the timeout value in this parameter applies to the transaction scope.</source>
          <target state="translated">Wenn eine vorhandene Transaktion verwendet wird, gilt der Timeoutwert in diesem Parameter für den Transaktionsbereich.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>If that time expires before the scope is disposed, the transaction is aborted.</source>
          <target state="translated">Wenn diese Zeit abläuft, bevor der Bereich verworfen wird, wird die Transaktion abgebrochen.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /&gt;</ph> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</source>
          <target state="translated">Eine Instanz der <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /&gt;</ph> -Enumeration, die beschreibt, ob die ambient-Transaktion, die dem Transaktionsbereich zugeordnet ist, über Thread Fortsetzungen übergeben wird, wenn Task- oder asynchrone async/await-.NET-Programmiermuster verwenden.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[Wird nur in .NET Framework 4.5.1 und neueren Versionen unterstützt]</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph> class with the specified requirements and asynchronous flow option.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph>-Klasse mit den angegebenen Anforderungen und der asynchronen flow-Option.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScopeOption" /&gt;</ph> enumeration that describes the transaction requirements associated with this transaction scope.</source>
          <target state="translated">Eine Instanz der <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScopeOption" /&gt;</ph>-Enumeration, die die diesem Transaktionsbereich zugeordneten Transaktionsanforderungen beschreibt.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph> class with the specified requirements.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Transactions.TransactionScope" /&gt;</ph>-Klasse mit den angegebenen Anforderungen.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)">
          <source>When you use the <ph id="ph1">`transactionOptions`</ph> parameter to specify an <ph id="ph2">&lt;xref:System.Transactions.IsolationLevel&gt;</ph>, and the scope creates a transaction later, the new transaction is associated with the specified isolation level.</source>
          <target state="translated">Bei Verwendung der <ph id="ph1">`transactionOptions`</ph> Parameter an eine <ph id="ph2">&lt;xref:System.Transactions.IsolationLevel&gt;</ph>, und der Bereich erstellt eine Transaktion zu einem späteren Zeitpunkt, das die neue Transaktion mit dem angegebenen Isolationsgrad zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)">
          <source>If an isolation level is passed in together with a transaction, the transaction must have an identical isolation level, or an exception is thrown.</source>
          <target state="translated">Wenn eine Isolationsstufe zusammen mit einer Transaktion übergeben wird, Transaktion eine Isolationsstufe an identisch sein muss, oder eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.Complete">
          <source>Indicates that all operations within the scope are completed successfully.</source>
          <target state="translated">Gibt an, dass alle Vorgänge innerhalb des Bereichs erfolgreich abgeschlossen wurden.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Complete">
          <source>When you are satisfied that all operations within the scope are completed successfully, you should call this method only once to inform that transaction manager that the state across all resources is consistent, and the transaction can be committed.</source>
          <target state="translated">Wenn Sie zufrieden sind, dass alle Vorgänge innerhalb des Bereichs erfolgreich abgeschlossen sind, Sie sollten diese Methode nur einmal aufrufen, um dem Transaktions-Manager zu informieren, dass der Status für alle Ressourcen konsistent ist, und für die Transaktion ein Commit ausgeführt werden kann.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Complete">
          <source>It is very good practice to put the call as the last statement in the <ph id="ph1">`using`</ph> block.</source>
          <target state="translated">Es ist sehr empfiehlt sich, den Aufruf in der letzten Anweisung aufnehmen der <ph id="ph1">`using`</ph> Block.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Complete">
          <source>For more information on how this method is used, see the <bpt id="p1">[</bpt>Implementing An Implicit Transaction Using Transaction Scope<ept id="p1">](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md)</ept> topic.</source>
          <target state="translated">Weitere Informationen zur Verwendung dieser Methode finden Sie unter der <bpt id="p1">[</bpt>implementieren eine implizite Transaktion mithilfe von Transaktionsbereich<ept id="p1">](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md)</ept> Thema.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Complete">
          <source>Failing to call this method aborts the transaction, because the transaction manager interprets this as a system failure, or exceptions thrown within the scope of transaction.</source>
          <target state="translated">Wegen eines Fehlers beim Aufrufen dieser Methode wird die Transaktion abgebrochen, weil der Transaktions-Manager interpretiert dies als aufgrund eines Systemfehlers oder innerhalb des Bereichs der Transaktion ausgelösten Ausnahmen werden müssen.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Complete">
          <source>However, you should also note that calling this method does not guarantee a commit of the transaction.</source>
          <target state="translated">Allerdings sollten Sie beachten Sie außerdem, dass beim Aufrufen dieser Methode einen Commit der Transaktion nicht garantiert.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Complete">
          <source>It is merely a way of informing the transaction manager of your status.</source>
          <target state="translated">Dies ist nur eine Möglichkeit, den Transaktions-Manager über den Status zu informieren.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Complete">
          <source>After calling this method, you can no longer access the ambient transaction via the <ph id="ph1">&lt;xref:System.Transactions.Transaction.Current%2A&gt;</ph> property, and trying to do so results in an exception being thrown.</source>
          <target state="translated">Nach dem Aufrufen dieser Methode können Sie nicht mehr über die Ambiente-Transaktion zugreifen die <ph id="ph1">&lt;xref:System.Transactions.Transaction.Current%2A&gt;</ph> -Eigenschaft, und versuchen, ist dies der Fall zu einer Ausnahme, die ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Complete">
          <source>The actual work of commit between the resources manager happens at the <ph id="ph1">`End Using`</ph> statement if the <ph id="ph2">&lt;xref:System.Transactions.TransactionScope&gt;</ph> object created the transaction.</source>
          <target state="translated">Der eigentlichen Commit zwischen den Ressourcen-Manager erfolgt, die bei der <ph id="ph1">`End Using`</ph> Anweisung Wenn die <ph id="ph2">&lt;xref:System.Transactions.TransactionScope&gt;</ph> Objekt erstellt, die Transaktion.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Complete">
          <source>If it did not create the transaction, the commit occurs whenever <ph id="ph1">&lt;xref:System.Transactions.CommittableTransaction.Commit%2A&gt;</ph> is called by the owner of the <ph id="ph2">&lt;xref:System.Transactions.CommittableTransaction&gt;</ph> object.</source>
          <target state="translated">Wenn die Transaktion nicht erstellt wurde, wird der Commit ausgeführt, wenn <ph id="ph1">&lt;xref:System.Transactions.CommittableTransaction.Commit%2A&gt;</ph> vom Besitzer des <ph id="ph2">&lt;xref:System.Transactions.CommittableTransaction&gt;</ph>-Objekts aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Complete">
          <source>At that point the Transaction Manager calls the resource managers and informs them to either commit or rollback, based on whether this method was called on the <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> object.</source>
          <target state="translated">An diesem Punkt der Transaktions-Manager ruft die Ressource-Manager und benachrichtigt sie, entweder ein Commit oder Rollback, gibt an, ob diese Methode aufgerufen wurde, auf Grundlage der <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Complete">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> class to define a block of code to participate in a transaction.</source>
          <target state="translated">Im folgenden Beispiel wird veranschaulicht, wie die <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> Klasse, um einen Codeblock zur Teilnahme an einer Transaktions zu definieren.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.Complete">
          <source>This method has already been called once.</source>
          <target state="translated">Diese Methode wurde bereits einmal aufgerufen.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>Ends the transaction scope.</source>
          <target state="translated">Beendet den Transaktionsbereich.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>Calling this method marks the end of the transaction scope.</source>
          <target state="translated">Beim Aufrufen dieser Methode markiert das Ende des Transaktionsbereichs.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>If the <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> object created the transaction and <ph id="ph2">&lt;xref:System.Transactions.TransactionScope.Complete%2A&gt;</ph> was called on the scope, the <ph id="ph3">&lt;xref:System.Transactions.TransactionScope&gt;</ph> object attempts to commit the transaction when this method is called.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> Objekt erstellt, die Transaktion und <ph id="ph2">&lt;xref:System.Transactions.TransactionScope.Complete%2A&gt;</ph> wurde aufgerufen, für den Bereich der <ph id="ph3">&lt;xref:System.Transactions.TransactionScope&gt;</ph> versucht Objekt eines Commits die Transaktion, wenn diese Methode aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>The use of the C# <ph id="ph1">`using`</ph> construction ensures that this method is called even if an exception occurs.</source>
          <target state="translated">Die Verwendung von C#- <ph id="ph1">`using`</ph> Konstruktion wird sichergestellt, dass diese Methode aufgerufen wird, selbst wenn eine Ausnahme auftritt.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>Exceptions that occur after calling this method may not affect the transaction.</source>
          <target state="translated">Ausnahmen, die nach dem Aufrufen dieser Methode eintreten, beeinflussen die Transaktion möglicherweise nicht.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>This method also restores the ambient transaction to it original state.</source>
          <target state="translated">Diese Methode wiederherstellt auch die ambient-Transaktion, um es Originalzustand.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>A <ph id="ph1">&lt;xref:System.Transactions.TransactionAbortedException&gt;</ph> is thrown if the transaction is not actually committed.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Transactions.TransactionAbortedException&gt;</ph> wird ausgelöst, wenn die Transaktion nicht tatsächlich ausgeführt wird.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>This method is synchronous and blocks until the transaction has been committed or aborted.</source>
          <target state="translated">Diese Methode ist synchron und blockiert, bis die Transaktion ein Commit ausgeführt oder abgebrochen wurde.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>Because of this, you should be extremely careful when using this method in a Windows Form (WinForm) application, or a deadlock can occur.</source>
          <target state="translated">Aus diesem Grund sollten Sie äußerst vorsichtig, bei Verwendung dieser Methode in einer Anwendung WinForm (Windows Forms) sein, oder ein Deadlock auftreten kann.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>If you call this method inside one WinForm Control event (for example, clicking a button), and use the synchronous <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> method to direct the control to perform some UI tasks (for example, changing colors) in the middle of processing the transaction, a deadlock will happen.</source>
          <target state="translated">Wenn Sie diese Methode eine WinForm-Steuerelement-Ereignis (z. B. auf eine Schaltfläche) aufrufen, und verwenden Sie die synchrone <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> Methode, um das Steuerelement zum Ausführen einiger Aufgaben Benutzeroberfläche (z. B. Farben zu ändern), während der Verarbeitung der Transaktions leiten eine Deadlock erfolgt.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>This is because the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> method is synchronous and blocks the worker thread until the UI thread finishes its job.</source>
          <target state="translated">Grund hierfür ist die <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> Methode erfolgt synchron, und den Thread blockiert, bis im UI-Thread seine Aufgabe abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>However, in our scenario, the UI thread is also waiting for the worker thread to commit the transaction.</source>
          <target state="translated">In diesem Szenario im UI-Thread jedoch auch wartet der Arbeitsthread eines Commits die Transaktion auf.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>The result is that none is able to proceed and the scope waits indefinitely for the Commit to finish.</source>
          <target state="translated">Das Ergebnis ist, dass keine zu fortfahren können, und der Bereich wartet unbegrenzt des Commits abgeschlossen.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>You should use <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph> rather than <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> wherever possible, because it is asynchronous and thus less prone to deadlock.</source>
          <target state="translated">Verwenden Sie <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BeginInvoke%2A&gt;</ph> statt <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Invoke%2A&gt;</ph> möglich, da es sich um asynchron und daher weniger anfällig für Deadlocks handelt.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>For more information on how this method is used, see the <bpt id="p1">[</bpt>Implementing An Implicit Transaction Using Transaction Scope<ept id="p1">](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md)</ept> topic.</source>
          <target state="translated">Weitere Informationen zur Verwendung dieser Methode finden Sie unter der <bpt id="p1">[</bpt>implementieren eine implizite Transaktion mithilfe von Transaktionsbereich<ept id="p1">](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md)</ept> Thema.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Transactions.TransactionScope.Dispose">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> class to define a block of code to participate in a transaction.</source>
          <target state="translated">Im folgenden Beispiel wird veranschaulicht, wie die <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> Klasse, um einen Codeblock zur Teilnahme an einer Transaktions zu definieren.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>