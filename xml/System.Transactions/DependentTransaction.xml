<Type Name="DependentTransaction" FullName="System.Transactions.DependentTransaction">
  <TypeSignature Language="C#" Value="public sealed class DependentTransaction : System.Transactions.Transaction, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DependentTransaction extends System.Transactions.Transaction implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.DependentTransaction" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DependentTransaction&#xA;Inherits Transaction&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependentTransaction sealed : System::Transactions::Transaction, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Transactions.Transaction</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="8e1f4-101">Beschreibt einen Klon einer Transaktion und gewährleistet, dass kein Commit der Transaktion ausgeführt werden kann, solange die Anwendung bezüglich der Transaktion noch aktiv ist.</span><span class="sxs-lookup"><span data-stu-id="8e1f4-101">Describes a clone of a transaction providing guarantee that the transaction cannot be committed until the application comes to rest regarding work on the transaction.</span></span> <span data-ttu-id="8e1f4-102">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="8e1f4-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e1f4-103">Die <xref:System.Transactions.DependentTransaction> ist ein Klon einer <xref:System.Transactions.Transaction> Objekt erstellt, mit der <xref:System.Transactions.Transaction.DependentClone%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="8e1f4-103">The <xref:System.Transactions.DependentTransaction> is a clone of a <xref:System.Transactions.Transaction> object created using the <xref:System.Transactions.Transaction.DependentClone%2A> method.</span></span>  <span data-ttu-id="8e1f4-104">Der einzige Zweck ist, kann die Anwendung stammen, zu bewegen und zu gewährleisten, dass die Transaktion kein commit möglich, während der Arbeit für die Transaktion (z. B. auf einen Arbeitsthread) immer noch ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="8e1f4-104">Its sole purpose is to allow the application to come to rest and guarantee that the transaction cannot commit while work is still being performed on the transaction (for example, on a worker thread).</span></span>  
  
 <span data-ttu-id="8e1f4-105">Bei die Arbeit in der geklonten Transaktion schließlich abgeschlossen und ein Commit ausgeführt werden kann, kann sie informiert, dass den Ersteller der Transaktion unter Verwendung der <xref:System.Transactions.DependentTransaction.Complete%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="8e1f4-105">When the work done within the cloned transaction is finally complete and ready to be committed, it can inform the creator of the transaction using the <xref:System.Transactions.DependentTransaction.Complete%2A> method.</span></span> <span data-ttu-id="8e1f4-106">Daher können Sie die Konsistenz und Richtigkeit der Daten beibehalten.</span><span class="sxs-lookup"><span data-stu-id="8e1f4-106">Thus you can preserve the consistency and correctness of data.</span></span>  
  
 <span data-ttu-id="8e1f4-107">Die <xref:System.Transactions.DependentCloneOption> Enumeration wird verwendet, um das Verhalten beim Commit bestimmt.</span><span class="sxs-lookup"><span data-stu-id="8e1f4-107">The <xref:System.Transactions.DependentCloneOption> enumeration is used to determine the behavior on commit.</span></span>  <span data-ttu-id="8e1f4-108">Dieses Verhaltenssteuerelement kann eine Anwendung in den rest, sowie als Unterstützung der Parallelität bietet stammen.</span><span class="sxs-lookup"><span data-stu-id="8e1f4-108">This behavior control allows an application to come to rest, as well as provides concurrency support.</span></span> <span data-ttu-id="8e1f4-109">Weitere Informationen zur Verwendung dieser Enumeration finden Sie unter [Verwalten von Parallelität mit DependentTransaction](http://msdn.microsoft.com/library/bdad8468-2a90-4b81-8375-278067120cab).</span><span class="sxs-lookup"><span data-stu-id="8e1f4-109">For more information on how this enumeration is used, see [Managing Concurrency with DependentTransaction](http://msdn.microsoft.com/library/bdad8468-2a90-4b81-8375-278067120cab).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e1f4-110">Im folgende Beispiel wird gezeigt, wie eine abhängige Transaktion erstellt.</span><span class="sxs-lookup"><span data-stu-id="8e1f4-110">The following example shows you how to create a dependent transaction.</span></span>  
  
 [!code-csharp[Tx_DependentTx#1](~/samples/snippets/csharp/VS_Snippets_CFX/tx_dependenttx/cs/dependenttx.cs#1)]
 [!code-vb[Tx_DependentTx#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_dependenttx/vb/dependenttx.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="8e1f4-111">Dieser Typ ist threadsicher.</span><span class="sxs-lookup"><span data-stu-id="8e1f4-111">This type is thread safe.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.DependentTransaction.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e1f4-112">Versucht, die abhängige Transaktion abzuschließen.</span><span class="sxs-lookup"><span data-stu-id="8e1f4-112">Attempts to complete the dependent transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e1f4-113">Rufen Sie diese Methode, wenn möchte, dass der abhängige Klon dem Ersteller der Transaktion zu informieren, dass er beendet wurde, und die Transaktion ein Commit ausgeführt werden kann, wenn das übergeordnete Element ebenfalls bereit ist.</span><span class="sxs-lookup"><span data-stu-id="8e1f4-113">Call this method when the dependent clone wants to inform the creator of the transaction that it has finished its work, and the transaction can be committed if the parent is also ready.</span></span>  
  
 <span data-ttu-id="8e1f4-114">Nachdem dieses Aufrufs aufgerufen wird, sollten Sie keine zusätzlichen arbeiten für die Transaktion nicht versuchen, oder eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8e1f4-114">After this call is invoked, you should not attempt any additional work on the transaction, or an exception is thrown.</span></span>  
  
 <span data-ttu-id="8e1f4-115">Diese Methode wird aufgerufen, wenn die Anwendungsdomäne nach ausfällt, und bevor die Transaktion abgeschlossen ist, kann die Transaktion abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="8e1f4-115">If the application domain goes down after this method is called, and before the transaction is completed, the transaction might abort.</span></span>  
  
 <span data-ttu-id="8e1f4-116">**Hinweis** diese Methode sollte nur einmal während der Lebensdauer von der abhängigen Transaktionen aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="8e1f4-116">**Note** This method should be called only once during the dependent transaction's lifetime.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Transactions.TransactionException"><span data-ttu-id="8e1f4-117">Jeder Versuch, weitere Aktionen für die Transaktion auszuführen, nachdem die Methode aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="8e1f4-117">Any attempt for additional work on the transaction after this method is called.</span></span> <span data-ttu-id="8e1f4-118">Hierzu gehören das Aufrufen von Methoden wie <see cref="Overload:System.Transactions.Transaction.EnlistVolatile" />, <see cref="Overload:System.Transactions.Transaction.EnlistDurable" />, <see cref="M:System.Transactions.Transaction.Clone" />, <see cref="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)" /> oder jegliche Serialisierungsvorgänge in der Transaktion.</span><span class="sxs-lookup"><span data-stu-id="8e1f4-118">These include invoking methods such as <see cref="Overload:System.Transactions.Transaction.EnlistVolatile" />, <see cref="Overload:System.Transactions.Transaction.EnlistDurable" />, <see cref="M:System.Transactions.Transaction.Clone" />, <see cref="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)" /> , or any serialization operations on the transaction.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.DependentTransaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>