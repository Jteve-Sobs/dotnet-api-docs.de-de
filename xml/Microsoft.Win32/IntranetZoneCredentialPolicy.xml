<Type Name="IntranetZoneCredentialPolicy" FullName="Microsoft.Win32.IntranetZoneCredentialPolicy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="da8a5819dd16b37cf2fb675fad075c1f7367ec25" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69314362" /></Metadata><TypeSignature Language="C#" Value="public class IntranetZoneCredentialPolicy : System.Net.ICredentialPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IntranetZoneCredentialPolicy extends System.Object implements class System.Net.ICredentialPolicy" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.IntranetZoneCredentialPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Class IntranetZoneCredentialPolicy&#xA;Implements ICredentialPolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class IntranetZoneCredentialPolicy : System::Net::ICredentialPolicy" />
  <TypeSignature Language="F#" Value="type IntranetZoneCredentialPolicy = class&#xA;    interface ICredentialPolicy" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Net.ICredentialPolicy</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Definiert eine Anmeldeinformationsrichtlinie für Ressourcenanforderungen, die mithilfe von <see cref="T:System.Net.WebRequest" /> und den daraus abgeleiteten Klassen erstellt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Richtlinie können Anmelde Informationen nur gesendet werden, wenn sich die angeforderte Ressource in derselben Domäne befindet wie der Client, der die Anforderung sendet. Bei vielen Anwendungen ist dies die optimale Richtlinie, da Sie verhindert, dass Netzwerk Anmelde Informationen mit Anforderungen für Ressourcen gesendet werden, die sich nicht im Intranet befinden.  
  
> [!NOTE]
>  <xref:System.Net.ICredentialPolicy>Richtlinien werden nur aufgerufen, <xref:System.Net.WebRequest> wenn der <xref:System.Net.WebProxy> oder der, der der Anforderung zugeordnet ist, über Anmelde `null`Informationen verfügt, die nicht sind. Das Festlegen dieser Richtlinie wirkt sich nicht auf Anforderungen aus, die keine Anmelde Informationen angeben.  
  
 Verwenden Sie <xref:System.Net.AuthenticationManager.CredentialPolicy%2A?displayProperty=nameWithType> die-Eigenschaft zum <xref:Microsoft.Win32.IntranetZoneCredentialPolicy> Festlegen der Richtlinie. Der <xref:System.Net.IAuthenticationModule> , der die Authentifizierung für die Anforderung verarbeitet, <xref:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential%2A> Ruft die-Methode auf, bevor die Authentifizierung durchgeführt wird. Wenn sich die angeforderte Ressource in einer anderen Domäne als der Client befindet <xref:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential%2A> , gibt `false`die Methode zurück, und die Authentifizierung wird nicht durchgeführt.  
  
 Diese Richtlinie betrifft alle Instanzen <xref:System.Net.WebRequest> von mit Anmelde Informationen, die nicht NULL sind, in der aktuellen Anwendungsdomäne. Die Richtlinie kann nicht für einzelne Anforderungen überschrieben werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Erstellen einer Instanz <xref:Microsoft.Win32.IntranetZoneCredentialPolicy> von und deren Verwendung zum Festlegen der Richtlinie für die Anmelde Informationen für die Anwendungsdomäne veranschaulicht.  
  
 [!code-cpp[NclCredPolicy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#2)]
 [!code-csharp[NclCredPolicy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntranetZoneCredentialPolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.IntranetZoneCredentialPolicy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntranetZoneCredentialPolicy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.Win32.IntranetZoneCredentialPolicy" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anwendungen verwenden diesen Konstruktor zum Erstellen von-Objekten, die zum Festlegen der <xref:System.Net.AuthenticationManager.CredentialPolicy%2A> -Eigenschaft verwendet werden können.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Erstellen einer Instanz dieser Klasse veranschaulicht.  
  
 [!code-cpp[NclCredPolicy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#2)]
 [!code-csharp[NclCredPolicy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSendCredential">
      <MemberSignature Language="C#" Value="public virtual bool ShouldSendCredential (Uri challengeUri, System.Net.WebRequest request, System.Net.NetworkCredential credential, System.Net.IAuthenticationModule authModule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSendCredential(class System.Uri challengeUri, class System.Net.WebRequest request, class System.Net.NetworkCredential credential, class System.Net.IAuthenticationModule authModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldSendCredential (challengeUri As Uri, request As WebRequest, credential As NetworkCredential, authModule As IAuthenticationModule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ShouldSendCredential(Uri ^ challengeUri, System::Net::WebRequest ^ request, System::Net::NetworkCredential ^ credential, System::Net::IAuthenticationModule ^ authModule);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSendCredential : Uri * System.Net.WebRequest * System.Net.NetworkCredential * System.Net.IAuthenticationModule -&gt; bool&#xA;override this.ShouldSendCredential : Uri * System.Net.WebRequest * System.Net.NetworkCredential * System.Net.IAuthenticationModule -&gt; bool" Usage="intranetZoneCredentialPolicy.ShouldSendCredential (challengeUri, request, credential, authModule)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Net.ICredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="challengeUri" Type="System.Uri" />
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="authModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="challengeUri">Der <see cref="T:System.Uri" />, der die Anforderung erhalten soll.</param>
        <param name="request">Die <see cref="T:System.Net.WebRequest" />, die die angeforderte Ressource darstellt.</param>
        <param name="credential">Die <see cref="T:System.Net.NetworkCredential" />, die mit der Anforderung gesendet wird, wenn diese Methode <see langword="true" /> zurückgibt.</param>
        <param name="authModule">Das <see cref="T:System.Net.IAuthenticationModule" />, das die Authentifizierung durchführt, wenn eine Authentifizierung erforderlich ist.</param>
        <summary>Gibt einen <see cref="T:System.Boolean" /> zurück, der angibt, ob die Anmeldeinformationen des Clients mit einer Ressourcenanforderung gesendet werden, die anhand eines <see cref="T:System.Net.WebRequest" /> erstellt wurde.</summary>
        <returns><see langword="true" />, wenn sich die angeforderte Ressource in derselben Domäne befindet wie der Client, der die Anforderung erstellt, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anwendungen nennen diese Methode nicht direkt. Sie wird von aufgerufen, <xref:System.Net.IAuthenticationModule> der für die Authentifizierung mit dem Server zuständig ist. Wenn diese Methode zurück `false`gibt <xref:System.Net.IAuthenticationModule> , wird der Client nicht vom Server authentifiziert.  
  
 Diese Methode wird nur für Anforderungen aufgerufen, die Anmelde Informationen angeben, <xref:System.Net.WebProxy> oder ein-Objekt verwenden, das Anmelde Informationen angibt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Ableitung <xref:Microsoft.Win32.IntranetZoneCredentialPolicy> von veranschaulicht, damit Anmelde Informationen für Anforderungen gesendet werden können, die HTTPS (Secure Hypertext Transfer Protocol) mit Standard Authentifizierung verwenden. Bei Verwendung der HTTPS-und Standard Authentifizierung wird das Benutzer Kennwort vor dem Senden über das Netzwerk verschlüsselt.  
  
 [!code-cpp[NclCredPolicy#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#4)]
 [!code-csharp[NclCredPolicy#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
