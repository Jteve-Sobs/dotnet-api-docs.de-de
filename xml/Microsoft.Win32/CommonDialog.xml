<Type Name="CommonDialog" FullName="Microsoft.Win32.CommonDialog">
  <Metadata><Meta Name="ms.openlocfilehash" Value="14d7675283e86e7712260aeb324017a0733f1fc2" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48718739" /></Metadata><TypeSignature Language="C#" Value="public abstract class CommonDialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CommonDialog extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.CommonDialog" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CommonDialog" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommonDialog abstract" />
  <TypeSignature Language="F#" Value="type CommonDialog = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Eine abstrakte Basisklasse zum Anzeigen von Win32-Standarddialogfeldern.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CommonDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.CommonDialog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CommonDialog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Stellt beim Aufruf durch den Konstruktor einer abgeleiteten Klasse die Initialisierung für Basisklassenwerte bereit.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckPermissionsToShowDialog">
      <MemberSignature Language="C#" Value="protected virtual void CheckPermissionsToShowDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CheckPermissionsToShowDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.CommonDialog.CheckPermissionsToShowDialog" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CheckPermissionsToShowDialog ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CheckPermissionsToShowDialog();" />
      <MemberSignature Language="F#" Value="abstract member CheckPermissionsToShowDialog : unit -&gt; unit&#xA;override this.CheckPermissionsToShowDialog : unit -&gt; unit" Usage="commonDialog.CheckPermissionsToShowDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bestimmt, ob ausreichende Berechtigungen zum Anzeigen eines Dialogfelds vorhanden sind.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">wenn keine ausreichenden Berechtigungen zum Anzeigen eines Dialogfelds vorhanden sind.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Diese Methode ausführen, ohne dass eine Ausnahme ausgelöst. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="HookProc">
      <MemberSignature Language="C#" Value="protected virtual IntPtr HookProc (IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance native int HookProc(native int hwnd, int32 msg, native int wParam, native int lParam) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HookProc (hwnd As IntPtr, msg As Integer, wParam As IntPtr, lParam As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IntPtr HookProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam);" />
      <MemberSignature Language="F#" Value="abstract member HookProc : nativeint * int * nativeint * nativeint -&gt; nativeint&#xA;override this.HookProc : nativeint * int * nativeint * nativeint -&gt; nativeint" Usage="commonDialog.HookProc (hwnd, msg, wParam, lParam)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
        <Parameter Name="msg" Type="System.Int32" />
        <Parameter Name="wParam" Type="System.IntPtr" />
        <Parameter Name="lParam" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwnd">Fensterhandle für das [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]-Dialogfeld.</param>
        <param name="msg">Windows-Meldung, die vom [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]-Dialogfeld verarbeitet werden muss.</param>
        <param name="wParam">Parameter für Dialogfeldaktionen.</param>
        <param name="lParam">Parameter für Dialogfeldaktionen.</param>
        <summary>Definiert die Hookprozedur für Standarddialogfelder, die überschrieben wird, um einem Standarddialogfeld spezifische Funktionen hinzuzufügen.</summary>
        <returns>Gibt immer <see cref="F:System.IntPtr.Zero" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Win32.CommonDialog.HookProc%2A> behandelt dialoginitialisierung durch die Konzentration im Dialogfenster relativ zum Bildschirm und den Fokus auf das standardmäßige Steuerelement festzulegen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public abstract void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.CommonDialog.Reset" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit" Usage="commonDialog.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt beim Überschreiben in einer abgeleiteten Klasse die Eigenschaften eines Standarddialogfelds auf ihre Standardwerte zurück.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunDialog">
      <MemberSignature Language="C#" Value="protected abstract bool RunDialog (IntPtr hwndOwner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool RunDialog(native int hwndOwner) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.CommonDialog.RunDialog(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function RunDialog (hwndOwner As IntPtr) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool RunDialog(IntPtr hwndOwner);" />
      <MemberSignature Language="F#" Value="abstract member RunDialog : nativeint -&gt; bool" Usage="commonDialog.RunDialog hwndOwner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwndOwner" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwndOwner">Handle für das Fenster, das das Dialogfeld besitzt.</param>
        <summary>Wird beim Überschreiben in einer abgeleiteten Klasse aufgerufen, um einen bestimmten Typ von [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]-Standarddialogfeld anzuzeigen.</summary>
        <returns>Wenn der Benutzer im angezeigten Dialogfeld auf die Schaltfläche **OK** klickt (beispielsweise <see cref="T:Microsoft.Win32.OpenFileDialog" />, <see cref="T:Microsoft.Win32.SaveFileDialog" />), wird <see langword="true" /> zurückgegeben. Andernfalls lautet der Wert <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Im Dialogfeld, das letztendlich angezeigt wird, erhält ein Besitzerfenster, die von angegeben wird die `hwndOwner` Parameter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowDialog">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <permission cref="T:System.Security.Permissions.UIPermission">Diese Methode ausführen, ohne dass eine Ausnahme ausgelöst. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <summary>Zeigt ein Standarddialogfeld an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Win32.CommonDialog.ShowDialog%2A> führt Initialisierungsaufgaben für alle Standarddialogfelder vor dem Aufruf <xref:Microsoft.Win32.CommonDialog.RunDialog%2A>. Da <xref:Microsoft.Win32.CommonDialog.RunDialog%2A> erfordert ein Besitzerfenster <xref:Microsoft.Win32.CommonDialog.ShowDialog%2A> versucht, in der folgenden Reihenfolge der Rangfolge zuzuweisen:  
  
-   Der aktuellen Anwendung *des aktiven Fensters*.  
  
-   Der aktuellen Anwendung *Parkmöglichkeiten Fenster*.  
  
-   Eine intern erzeugte ausgeblendete Fenster.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public virtual Nullable&lt;bool&gt; ShowDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Nullable`1&lt;bool&gt; ShowDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.CommonDialog.ShowDialog" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShowDialog () As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Nullable&lt;bool&gt; ShowDialog();" />
      <MemberSignature Language="F#" Value="abstract member ShowDialog : unit -&gt; Nullable&lt;bool&gt;&#xA;override this.ShowDialog : unit -&gt; Nullable&lt;bool&gt;" Usage="commonDialog.ShowDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zeigt ein Standarddialogfeld an.</summary>
        <returns>Wenn der Benutzer im angezeigten Dialogfeld auf „OK“ klickt (beispielsweise <see cref="T:Microsoft.Win32.OpenFileDialog" />, <see cref="T:Microsoft.Win32.SaveFileDialog" />), wird <see langword="true" /> zurückgegeben. Andernfalls lautet der Wert <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Win32.CommonDialog.ShowDialog%2A> führt Initialisierungsaufgaben für alle Standarddialogfelder vor dem Aufruf <xref:Microsoft.Win32.CommonDialog.RunDialog%2A>.  
  
 In der aktuellen Implementierung, die abgeleiteten Klassen (<xref:Microsoft.Win32.OpenFileDialog> und <xref:Microsoft.Win32.SaveFileDialog>) nur zurück `true` oder `false`.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">Diese Methode ausführen, ohne dass eine Ausnahme ausgelöst. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; ShowDialog (System.Windows.Window owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;bool&gt; ShowDialog(class System.Windows.Window owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.CommonDialog.ShowDialog(System.Windows.Window)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog (owner As Window) As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;bool&gt; ShowDialog(System::Windows::Window ^ owner);" />
      <MemberSignature Language="F#" Value="member this.ShowDialog : System.Windows.Window -&gt; Nullable&lt;bool&gt;" Usage="commonDialog.ShowDialog owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Window" />
      </Parameters>
      <Docs>
        <param name="owner">Handle für das Fenster, das das Dialogfeld beinhaltet.</param>
        <summary>Zeigt ein Standarddialogfeld an.</summary>
        <returns>Wenn der Benutzer im angezeigten Dialogfeld auf „OK“ klickt (beispielsweise <see cref="T:Microsoft.Win32.OpenFileDialog" />, <see cref="T:Microsoft.Win32.SaveFileDialog" />), wird <see langword="true" /> zurückgegeben. Andernfalls lautet der Wert <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Win32.CommonDialog.ShowDialog%2A> führt Initialisierungsaufgaben für alle Standarddialogfelder vor dem Aufruf <xref:Microsoft.Win32.CommonDialog.RunDialog%2A>. Darüber hinaus wird das Dialogfeld ", die letztendlich angezeigt wird ein Besitzerfenster, die von angegeben wird zugewiesen der `owner` Parameter.  
  
 In der aktuellen Implementierung, die abgeleiteten Klassen (<xref:Microsoft.Win32.OpenFileDialog> und <xref:Microsoft.Win32.SaveFileDialog>) nur zurück `true` oder `false`.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">Diese Methode ausführen, ohne dass eine Ausnahme ausgelöst. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <altmember cref="P:System.Windows.Window.Owner" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.CommonDialog.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="Microsoft.Win32.CommonDialog.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt ab, das dem Dialogfeld zugeordnet ist, oder legt dieses fest. Damit verfügen Sie über die Möglichkeit, an das Dialogfeld ein beliebiges Objekt anzufügen.</summary>
        <value>Ein <see cref="T:System.Object" />, das an ein Dialogfeld angefügt oder diesem zugeordnet ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Siehe auch  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>