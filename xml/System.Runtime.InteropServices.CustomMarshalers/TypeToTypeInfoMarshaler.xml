<Type Name="TypeToTypeInfoMarshaler" FullName="System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="290ca2e239a0694565377da5cf44ba869620dddf" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69271129" /></Metadata><TypeSignature Language="C#" Value="public class TypeToTypeInfoMarshaler : System.Runtime.InteropServices.ICustomMarshaler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeToTypeInfoMarshaler extends System.Object implements class System.Runtime.InteropServices.ICustomMarshaler" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeToTypeInfoMarshaler&#xA;Implements ICustomMarshaler" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeToTypeInfoMarshaler : System::Runtime::InteropServices::ICustomMarshaler" />
  <TypeSignature Language="F#" Value="type TypeToTypeInfoMarshaler = class&#xA;    interface ICustomMarshaler" />
  <AssemblyInfo>
    <AssemblyName>CustomMarshalers</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.ICustomMarshaler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="bbf8b-101">Marshallt die nicht verwaltete <see langword="ITypeInfo" />-Schnittstelle an die verwaltete <see cref="T:System.Type" />-Klasse, und marshallt die verwaltete <see cref="T:System.Type" />-Klasse an die nicht verwaltete <see langword="ITypeInfo" />-Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="bbf8b-101">Marshals the unmanaged <see langword="ITypeInfo" /> interface to the managed <see cref="T:System.Type" /> class, and marshals the managed <see cref="T:System.Type" /> class to the unmanaged <see langword="ITypeInfo" /> interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbf8b-102">Die `ITypeInfo` Schnittstelle, die für einen .NET-Typ verfügbar gemacht wird, basiert auf den Metadaten, die in einer exportierten Typbibliothek angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="bbf8b-102">The `ITypeInfo` interface exposed for a .NET type is based on the metadata that would appear in an exported type library.</span></span> <span data-ttu-id="bbf8b-103">Die-Instanz <xref:System.Type> , die für eine `ITypeInfo` Schnittstelle verfügbar gemacht wird, basiert ebenso auf den Metadaten, die in einer importierten Assembly angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="bbf8b-103">Likewise, the <xref:System.Type> instance exposed for an `ITypeInfo` interface is based on the metadata that would appear in an imported assembly.</span></span>  
  
 <span data-ttu-id="bbf8b-104">Das Typbibliothek-Import Programm (Tlbimp. exe `ITypeInfo` ) kennzeichnet Parameter <xref:System.Runtime.InteropServices.MarshalAsAttribute> mit dem <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler> entsprechenden mit dem `ITypeInfo` Enumerationsmember, wenn Signaturen mit Parametern <xref:System.Type> in Signaturen, die verwenden, verwendet werden. Metern.</span><span class="sxs-lookup"><span data-stu-id="bbf8b-104">The Type Library Importer (Tlbimp.exe) marks `ITypeInfo` parameters with the appropriate <xref:System.Runtime.InteropServices.MarshalAsAttribute> with the <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler> enumeration member when converting signatures that use `ITypeInfo` parameters to signatures that use <xref:System.Type> parameters.</span></span>  
  
 <span data-ttu-id="bbf8b-105">Die gleichen Konvertierungs Funktionen können ohne den benutzerdefinierten Mars Haller durch Aufrufen <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> von und <xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A>erreicht werden.</span><span class="sxs-lookup"><span data-stu-id="bbf8b-105">The same conversion functionality can be accomplished without the custom marshaler, by calling <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> and <xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".cctor">
      <MemberSignature Language="C#" Value="public TypeToTypeInfoMarshaler ();" />
      <MemberSignature Language="ILAsm" Value=".method public static specialname rtspecialname void .cctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.#cctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeToTypeInfoMarshaler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbf8b-106">Stellt den statischen Klassenkonstruktor bereit.</span><span class="sxs-lookup"><span data-stu-id="bbf8b-106">Provides the static class constructor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

> [!NOTE]
> <span data-ttu-id="bbf8b-107">Dieser Member wird in der .NET Framework Version 2,0 und in den nachfolgenden Versionen entfernt.</span><span class="sxs-lookup"><span data-stu-id="bbf8b-107">This member is removed in the .NET Framework version 2.0 and subsequent versions.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanUpManagedData">
      <MemberSignature Language="C#" Value="public virtual void CleanUpManagedData (object pManagedObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanUpManagedData(object pManagedObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.CleanUpManagedData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CleanUpManagedData (pManagedObj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CleanUpManagedData(System::Object ^ pManagedObj);" />
      <MemberSignature Language="F#" Value="abstract member CleanUpManagedData : obj -&gt; unit&#xA;override this.CleanUpManagedData : obj -&gt; unit" Usage="typeToTypeInfoMarshaler.CleanUpManagedData pManagedObj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pManagedObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pManagedObj"><span data-ttu-id="bbf8b-108">Das verwaltete Objekt, das zerstört werden soll.</span><span class="sxs-lookup"><span data-stu-id="bbf8b-108">The managed object to be destroyed.</span></span></param>
        <summary><span data-ttu-id="bbf8b-109">Führt die notwendigen Bereinigungsvorgänge für verwaltete Daten durch, wenn diesen nicht mehr benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="bbf8b-109">Performs necessary cleanup of the managed data when it is no longer needed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbf8b-110">Die CLR ruft diese Methode auf, um die in der <xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged%2A> -Methode zugeordneten verwalteten Daten zu bereinigen.</span><span class="sxs-lookup"><span data-stu-id="bbf8b-110">The CLR calls this method to clean up managed data allocated in the <xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanUpNativeData">
      <MemberSignature Language="C#" Value="public virtual void CleanUpNativeData (IntPtr pNativeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanUpNativeData(native int pNativeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.CleanUpNativeData(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CleanUpNativeData (pNativeData As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CleanUpNativeData(IntPtr pNativeData);" />
      <MemberSignature Language="F#" Value="abstract member CleanUpNativeData : nativeint -&gt; unit&#xA;override this.CleanUpNativeData : nativeint -&gt; unit" Usage="typeToTypeInfoMarshaler.CleanUpNativeData pNativeData" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pNativeData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pNativeData"><span data-ttu-id="bbf8b-111">Ein Zeiger auf nicht verwaltete Daten, die zerstört werden sollen.</span><span class="sxs-lookup"><span data-stu-id="bbf8b-111">A pointer to the unmanaged data to be destroyed.</span></span></param>
        <summary><span data-ttu-id="bbf8b-112">Führt die notwendigen Bereinigungsvorgänge für nicht verwaltete Daten durch, wenn diesen nicht mehr benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="bbf8b-112">Performs necessary cleanup of the unmanaged data when it is no longer needed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbf8b-113">Die CLR ruft diese Methode auf, um die nicht verwalteten Daten zu bereinigen <xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative%2A> , die in der-Methode zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="bbf8b-113">The CLR calls this method to clean up the unmanaged data allocated in the <xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.ICustomMarshaler GetInstance (string pstrCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.InteropServices.ICustomMarshaler GetInstance(string pstrCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (pstrCookie As String) As ICustomMarshaler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::ICustomMarshaler ^ GetInstance(System::String ^ pstrCookie);" />
      <MemberSignature Language="F#" Value="static member GetInstance : string -&gt; System.Runtime.InteropServices.ICustomMarshaler" Usage="System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetInstance pstrCookie" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.ICustomMarshaler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pstrCookie" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pstrCookie"><span data-ttu-id="bbf8b-114">Eine Zeichenfolge als "Cookie"-Parameter, der vom benutzerdefinierten Marshaller verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="bbf8b-114">String "cookie" parameter that can be used by the custom marshaler.</span></span></param>
        <summary><span data-ttu-id="bbf8b-115">Gibt eine Instanz des benutzerdefinierten Marshallers zurück.</span><span class="sxs-lookup"><span data-stu-id="bbf8b-115">Returns an instance of the custom marshaler.</span></span></summary>
        <returns><span data-ttu-id="bbf8b-116">Eine Instanz des benutzerdefinierten Marshallers.</span><span class="sxs-lookup"><span data-stu-id="bbf8b-116">An instance of the custom marshaler.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbf8b-117">Alle benutzerdefinierten Mars Haller müssen diese Methode implementieren, obwohl Sie nicht Teil <xref:System.Runtime.InteropServices.ICustomMarshaler> der Schnittstellen Definition ist.</span><span class="sxs-lookup"><span data-stu-id="bbf8b-117">All custom marshalers must implement this method, although it is not part of the <xref:System.Runtime.InteropServices.ICustomMarshaler> interface definition.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNativeDataSize">
      <MemberSignature Language="C#" Value="public virtual int GetNativeDataSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetNativeDataSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetNativeDataSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNativeDataSize () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetNativeDataSize();" />
      <MemberSignature Language="F#" Value="abstract member GetNativeDataSize : unit -&gt; int&#xA;override this.GetNativeDataSize : unit -&gt; int" Usage="typeToTypeInfoMarshaler.GetNativeDataSize " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbf8b-118">Gibt die Größe der nicht verwalteten Daten, die gemarshallt werden sollten, in Bytes zurück.</span><span class="sxs-lookup"><span data-stu-id="bbf8b-118">Returns the size in bytes of the unmanaged data to be marshaled.</span></span></summary>
        <returns><span data-ttu-id="bbf8b-119">-1, um anzugeben, dass der von diesem Marshaller behandelte Typ kein Werttyp ist.</span><span class="sxs-lookup"><span data-stu-id="bbf8b-119">-1 to indicate the type this marshaler handles is not a value type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbf8b-120">Da das benutzerdefinierte Marshalling von Werttypen im .NET Framework nicht unterstützt wird, gibt diese Methode immer-1 zurück.</span><span class="sxs-lookup"><span data-stu-id="bbf8b-120">Because custom marshaling of value types is not supported in the .NET Framework, this method always returns -1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarshalManagedToNative">
      <MemberSignature Language="C#" Value="public virtual IntPtr MarshalManagedToNative (object pManagedObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int MarshalManagedToNative(object pManagedObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MarshalManagedToNative (pManagedObj As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IntPtr MarshalManagedToNative(System::Object ^ pManagedObj);" />
      <MemberSignature Language="F#" Value="abstract member MarshalManagedToNative : obj -&gt; nativeint&#xA;override this.MarshalManagedToNative : obj -&gt; nativeint" Usage="typeToTypeInfoMarshaler.MarshalManagedToNative pManagedObj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pManagedObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pManagedObj"><span data-ttu-id="bbf8b-121">Das verwaltete Objekt, das konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="bbf8b-121">The managed object to be converted.</span></span></param>
        <summary><span data-ttu-id="bbf8b-122">Marshallt ein Objekt von verwaltetem Code an nicht verwalteten Code.</span><span class="sxs-lookup"><span data-stu-id="bbf8b-122">Marshals an object from managed code to unmanaged code.</span></span></summary>
        <returns><span data-ttu-id="bbf8b-123">Ein Zeiger auf das nicht verwaltete Objekt.</span><span class="sxs-lookup"><span data-stu-id="bbf8b-123">A pointer to the unmanaged object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbf8b-124">Die CLR ruft diese Methode mit der angegebenen Instanz eines verwalteten Objekts auf, um das Objekt von verwaltetem Code in nicht verwalteten Code zu konvertieren, und gibt einen Zeiger auf das entsprechende nicht verwaltete Objekt zurück, das die com-Ansicht dieses Objekts darstellt.</span><span class="sxs-lookup"><span data-stu-id="bbf8b-124">The CLR calls this method with the specified instance of a managed object to convert that object from managed code to unmanaged code, and it returns a pointer to the appropriate unmanaged object, representing the COM view of that object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bbf8b-125"><paramref name="pManagedObj" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="bbf8b-125"><paramref name="pManagedObj" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MarshalNativeToManaged">
      <MemberSignature Language="C#" Value="public virtual object MarshalNativeToManaged (IntPtr pNativeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object MarshalNativeToManaged(native int pNativeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MarshalNativeToManaged (pNativeData As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ MarshalNativeToManaged(IntPtr pNativeData);" />
      <MemberSignature Language="F#" Value="abstract member MarshalNativeToManaged : nativeint -&gt; obj&#xA;override this.MarshalNativeToManaged : nativeint -&gt; obj" Usage="typeToTypeInfoMarshaler.MarshalNativeToManaged pNativeData" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pNativeData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pNativeData"><span data-ttu-id="bbf8b-126">Ein Zeiger auf das nicht verwaltete Objekt, das umgewandelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="bbf8b-126">A pointer to the unmanaged object to be converted.</span></span></param>
        <summary><span data-ttu-id="bbf8b-127">Marshallt ein Objekt von nicht verwaltetem Code an verwalteten Code.</span><span class="sxs-lookup"><span data-stu-id="bbf8b-127">Marshals an object from unmanaged code to managed code.</span></span></summary>
        <returns><span data-ttu-id="bbf8b-128">Ein verwaltetes Objekt.</span><span class="sxs-lookup"><span data-stu-id="bbf8b-128">A managed object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbf8b-129">Die CLR ruft diese Methode mit dem angegebenen Zeiger auf ein nicht verwaltetes-Objekt auf, um das Objekt von nicht verwaltetem Code in verwalteten Code zu konvertieren, und gibt ein verwaltetes Objekt zurück, das die verwaltete Ansicht der nicht verwalteten Daten darstellt.</span><span class="sxs-lookup"><span data-stu-id="bbf8b-129">The CLR calls this method with the specified pointer to an unmanaged object to convert that object from unmanaged code to managed code, and returns a managed object representing the managed view of the unmanaged data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bbf8b-130"><paramref name="pNativeData" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="bbf8b-130"><paramref name="pNativeData" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
