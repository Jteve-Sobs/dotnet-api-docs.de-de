<Type Name="OracleBFile" FullName="System.Data.OracleClient.OracleBFile">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6b3d7212bbda2fb1701c68a8df0f7672991f93fc" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70684582" /></Metadata><TypeSignature Language="C#" Value="public sealed class OracleBFile : System.IO.Stream, ICloneable, System.Data.SqlTypes.INullable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleBFile extends System.IO.Stream implements class System.Data.SqlTypes.INullable, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleBFile" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleBFile&#xA;Inherits Stream&#xA;Implements ICloneable, INullable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleBFile sealed : System::IO::Stream, ICloneable, System::Data::SqlTypes::INullable" />
  <TypeSignature Language="F#" Value="type OracleBFile = class&#xA;    inherit Stream&#xA;    interface ICloneable&#xA;    interface INullable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.SqlTypes.INullable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt ein verwaltetes <see cref="T:System.Data.OracleClient.OracleBFile" />-Objekt dar, das für den Oracle-Datentyp <see langword="BFILE" /> entwickelt wurde. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Oracle `BFILE` -Datentyp ist ein `LOB` Oracle-Datentyp, der einen Verweis auf Binärdaten mit einer maximalen Größe von 4 Gigabyte enthält. Ein Oracle `BFILE` unterscheidet sich von `LOB` anderen Oracle-Datentypen darin, dass die Daten in einer physischen Datei im Betriebssystem statt auf dem Server gespeichert werden. Beachten Sie, `BFILE` dass der-Datentyp schreibgeschützten Zugriff auf Daten bereitstellt. Aus diesem Grund werden von der <xref:System.IO.Stream> -Klasse geerbte Schreib orientierte Methoden nicht unterstützt.  
  
 Andere Merkmale eines `BFILE` Datentyps, die ihn von `LOB` einem Datentyp unterscheiden, sind folgende:  
  
-   Er enthält unstrukturierte Daten.  
  
-   Er unterstützt das serverseitige Aufteilen in kleine Blöcke.  
  
-   Er verwendet die Semantik zum Kopieren von Verweisen. Wenn Sie z. b. einen Kopiervorgang für einen `BFILE`ausführen, wird `BFILE` nur der Serverlocatorpunkt (ein Verweis auf die Datei) kopiert. Die Daten in der Datei werden nicht kopiert.  
  
 Der `BFILE` -Datentyp sollte für `LOB`Verweise auf s verwendet werden, die groß sind und daher nicht in der Datenbank gespeichert werden können. Der Aufwand für die Verwendung eines `BFILE` -Datentyps im Vergleich zum-Datentyp erfolgt durch den Client, den Server und die `LOB` Kommunikation. Es ist effizienter, auf einen `BFILE` zuzugreifen, wenn Sie nur eine kleine Menge von Daten abrufen müssen. Wenn Sie das gesamte-Objekt abrufen müssen, `LOB`ist es effizienter, auf die in der Datenbank Residenten s zuzugreifen.  
  
 Jedes Objekt, das <xref:System.Data.OracleClient.OracleBFile> nicht NULL ist, wird zwei Entitäten zugeordnet, die den Speicherort der zugrunde liegenden physischen Datei definieren:  
  
-   Ein Oracle-DIRECTORY-Objekt, das als Datenbank-Alias für ein Verzeichnis im Dateisystem fungiert.  
  
-   Der Dateiname der zugrunde liegenden physischen Datei, die sich in dem dem DIRECTORY-Objekt zugeordneten Verzeichnis befindet.  
  
 Nachdem ein `BFILE` erstellt wurde, können Sie seinen Serverlocatorpunkt in Form <xref:System.Data.OracleClient.OracleBFile> eines-Objekts abrufen, indem Sie <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> die <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> -Methode oder die-Methode verwenden.  
  
 Rufen Sie zum <xref:System.Data.OracleClient.OracleBFile> Abrufen eines-Objekts <xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A> die-Methode auf.  
  
 Die physische Datei, der <xref:System.Data.OracleClient.OracleBFile> ein Objekt zugeordnet ist, muss erst vorhanden sein, wenn Sie versuchen, darauf zuzugreifen. Eine Anwendung kann eine <xref:System.Data.OracleClient.OracleBFile> an eine nicht vorhandene Datei binden, die physische Datei am erwarteten Speicherort erstellen und dann aufruft. <xref:System.Data.OracleClient.OracleBFile.Read%2A>  
  
 Bei jedem Versuch, mit der <xref:System.Data.OracleClient.OracleBFile> -Methode <xref:System.Data.OracleClient.OracleBFile.Read%2A> oder <xref:System.Data.OracleClient.OracleBFile.Seek%2A> der-Methode auf <xref:System.Data.OracleClient.OracleBFile> einen geschlossenen zuzugreifen, wird automatisch ein Stream geöffnet.  
  
 Im folgenden C# Beispiel wird veranschaulicht, wie Sie ein `BFILE` in einer Oracle-Tabelle erstellen und dann in Form eines <xref:System.Data.OracleClient.OracleBFile> -Objekts abrufen können. Das Beispiel veranschaulicht <xref:System.Data.OracleClient.OracleDataReader> die Verwendung des-Objekts und der-Methode und der <xref:System.Data.OracleClient.OracleBFile> <xref:System.Data.OracleClient.OracleBFile.Seek%2A> - <xref:System.Data.OracleClient.OracleBFile.Read%2A> Methode.  
  
 [!code-csharp[DataWorks OracleClient.BFile#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OracleClient.BFile/CS/source.cs#1)]  
  
 Weitere Informationen zum Erstellen und Verwenden von Oracle `BFILE`finden Sie im entsprechenden Thema in der Oracle-Dokumentation.  
  
> [!NOTE]
>  Die `BeginWrite`Methoden `EndWrite`, und `WriteByte` , die von der `System.IO.Stream` -Klasse geerbt werden, werden nicht unterstützt, `BFILE` da der Datentyp schreibgeschützt ist.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Data.OracleClient.OracleBFile.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der <see langword="BFILE" />-Stream gelesen werden kann.</summary>
        <value><see langword="false" />, wenn eine <see langword="BFILE" /> geschlossen oder freigegeben ist, andernfalls <see langword="true" />. Für <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> immer <see langword="true" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Data.OracleClient.OracleBFile.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Suchvorgänge vorwärts und rückwärts ausgeführt werden können.</summary>
        <value><see langword="false" />, wenn eine <see langword="BFILE" /> geschlossen oder freigegeben ist, andernfalls <see langword="true" />. Für <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> immer <see langword="true" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Data.OracleClient.OracleBFile.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Objekt Schreibvorgänge unterstützt.</summary>
        <value>Gibt immer <see langword="false" /> zurück, da der Oracle-Datentyp <see langword="BFILE" /> schreibgeschützt ist.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="oracleBFile.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine Kopie dieses <see cref="T:System.Data.OracleClient.OracleBFile" />-Objekts, die derselben physikalischen Datei wie das Original zugeordnet ist.</summary>
        <returns>Ein neues <see cref="T:System.Data.OracleClient.OracleBFile" />-Objekt, das derselben physikalischen Datei wie das ursprüngliche <see langword="OracleBFile" />-Objekt zugeordnet ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Eigenschaften des neuen <xref:System.Data.OracleClient.OracleBFile> Objekts haben anfänglich die gleichen Werte wie die des ursprünglichen Objekts. Nachdem das <xref:System.Data.OracleClient.OracleBFile.Clone%2A> -Objekt jedoch fertiggestellt wurde <xref:System.Data.OracleClient.OracleBFile> , ist jedes-Objekt unabhängig von dem anderen-Objekt. Wenn Sie z. b. den Wert <xref:System.Data.OracleClient.OracleBFile.Position%2A> der-Eigenschaft für <xref:System.Data.OracleClient.OracleBFile> den ursprünglichen Wert ändern, wird <xref:System.Data.OracleClient.OracleBFile.Position%2A> der Wert von für die Kopie nicht geändert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As OracleConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleConnection ^ Connection { System::Data::OracleClient::OracleConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.OracleClient.OracleConnection" Usage="System.Data.OracleClient.OracleBFile.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die von dieser Instanz von <see cref="T:System.Data.OracleClient.OracleConnection" /> verwendete <see cref="T:System.Data.OracleClient.OracleBFile" /> ab.</summary>
        <value>Die Verbindung mit einer Datenquelle. Der Standard ist ein NULL-Wert.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Kopiert Daten aus dieser <see cref="T:System.Data.OracleClient.OracleBFile" /> in ein Ziel-<see cref="T:System.Data.OracleClient.OracleLob" /> .</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (System.Data.OracleClient.OracleLob destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(class System.Data.OracleClient.OracleLob destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destination As OracleLob) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(System::Data::OracleClient::OracleLob ^ destination);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Data.OracleClient.OracleLob -&gt; int64" Usage="oracleBFile.CopyTo destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
      </Parameters>
      <Docs>
        <param name="destination">Das Ziel-<see cref="T:System.Data.OracleClient.OracleLob" />.</param>
        <summary>Kopiert den gesamten Inhalt dieser <see cref="T:System.Data.OracleClient.OracleBFile" /> an den Anfang eines Ziel-<see cref="T:System.Data.OracleClient.OracleLob" />.</summary>
        <returns>Die Anzahl der kopierten Bytes.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die zugrunde liegenden Datentypen der Quelle <xref:System.Data.OracleClient.OracleBFile> und des Ziels <xref:System.Data.OracleClient.OracleLob> müssen kompatibel sein. Beispielsweise können Sie keine Binärdaten in ein Ziel <xref:System.Data.OracleClient.OracleLob> mit einem Zeichen Datentyp kopieren.  
  
 Sie müssen über Schreibzugriff auf das Ziel <xref:System.Data.OracleClient.OracleLob> verfügen, <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> damit der Vorgang ordnungsgemäß ausgeführt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Das Ziel-<see langword="OracleLob" /> ist ein NULL-Objektverweis.</exception>
        <exception cref="T:System.InvalidOperationException">Das Ziel ist ein NULL-<see langword="OracleLob" />.  
  
- oder - 
Die Verbindung, der diese <see langword="OracleBFile" /> zugeordnet ist, wurde geschlossen.</exception>
        <exception cref="T:System.ObjectDisposedException">Das <see langword="OracleBFile" />-Objekt ist geschlossen oder freigegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (System.Data.OracleClient.OracleLob destination, long destinationOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(class System.Data.OracleClient.OracleLob destination, int64 destinationOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destination As OracleLob, destinationOffset As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(System::Data::OracleClient::OracleLob ^ destination, long destinationOffset);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Data.OracleClient.OracleLob * int64 -&gt; int64" Usage="oracleBFile.CopyTo (destination, destinationOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
        <Parameter Name="destinationOffset" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="destination">Das Ziel-<see cref="T:System.Data.OracleClient.OracleLob" />.</param>
        <param name="destinationOffset">Der Offset, an den kopiert werden soll.</param>
        <summary>Kopiert den gesamten Inhalt dieser <see cref="T:System.Data.OracleClient.OracleBFile" /> am angegebenen Offset in ein Ziel-<see cref="T:System.Data.OracleClient.OracleLob" />.</summary>
        <returns>Die Anzahl der kopierten Bytes.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die zugrunde liegenden Datentypen der Quelle <xref:System.Data.OracleClient.OracleBFile> und des Ziels <xref:System.Data.OracleClient.OracleLob> müssen kompatibel sein. Beispielsweise können Sie keine Binärdaten in ein Ziel <xref:System.Data.OracleClient.OracleLob> mit einem Zeichen Datentyp kopieren.  
  
 Sie müssen über Schreibzugriff auf das Ziel <xref:System.Data.OracleClient.OracleLob> verfügen, <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> damit der Vorgang ordnungsgemäß ausgeführt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Das Ziel-<see langword="OracleLob" /> ist ein NULL-Objektverweis.</exception>
        <exception cref="T:System.InvalidOperationException">Das Ziel ist ein NULL-<see langword="OracleLob" />.  
  
- oder - 
Die Verbindung, der diese <see langword="OracleBFile" /> zugeordnet ist, wurde geschlossen.</exception>
        <exception cref="T:System.ObjectDisposedException">Das <see langword="OracleBFile" />-Objekt ist geschlossen oder freigegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (long sourceOffset, System.Data.OracleClient.OracleLob destination, long destinationOffset, long amount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(int64 sourceOffset, class System.Data.OracleClient.OracleLob destination, int64 destinationOffset, int64 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (sourceOffset As Long, destination As OracleLob, destinationOffset As Long, amount As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(long sourceOffset, System::Data::OracleClient::OracleLob ^ destination, long destinationOffset, long amount);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : int64 * System.Data.OracleClient.OracleLob * int64 * int64 -&gt; int64" Usage="oracleBFile.CopyTo (sourceOffset, destination, destinationOffset, amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceOffset" Type="System.Int64" />
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
        <Parameter Name="destinationOffset" Type="System.Int64" />
        <Parameter Name="amount" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="sourceOffset">Der Offset, von dem kopiert werden soll.</param>
        <param name="destination">Das Ziel-<see cref="T:System.Data.OracleClient.OracleLob" />.</param>
        <param name="destinationOffset">Der Offset, an den kopiert werden soll.</param>
        <param name="amount">Die zu kopierende Datenmenge in Bytes.</param>
        <summary>Kopiert die angegebene Datenmenge vom angegebenen Quelloffset dieser <see cref="T:System.Data.OracleClient.OracleBFile" /> an den angegebenen Zieloffset eines Ziel-<see cref="T:System.Data.OracleClient.OracleLob" />.</summary>
        <returns>Die Anzahl der kopierten Bytes.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die zugrunde liegenden Datentypen der Quelle <xref:System.Data.OracleClient.OracleBFile> und des Ziels <xref:System.Data.OracleClient.OracleLob> müssen kompatibel sein. Beispielsweise können Sie keine Binärdaten in ein Ziel <xref:System.Data.OracleClient.OracleLob> mit einem Zeichen Datentyp kopieren.  
  
 Sie müssen über Schreibzugriff auf das Ziel <xref:System.Data.OracleClient.OracleLob> verfügen, <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> damit der Vorgang ordnungsgemäß ausgeführt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert des Größenparameters ist kleiner als 0 (null) oder größer als 4 Gigabyte.</exception>
        <exception cref="T:System.ArgumentNullException">Das Ziel-<see langword="OracleLob" /> ist ein NULL-Objektverweis.</exception>
        <exception cref="T:System.InvalidOperationException">Das Ziel ist ein NULL-<see langword="OracleLob" />.  
  
- oder - 
Die Verbindung, der diese <see langword="OracleBFile" /> zugeordnet ist, wurde geschlossen.</exception>
        <exception cref="T:System.ObjectDisposedException">Das <see langword="OracleBFile" />-Objekt ist geschlossen oder freigegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="DirectoryName">
      <MemberSignature Language="C#" Value="public string DirectoryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.DirectoryName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DirectoryName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectoryName : string" Usage="System.Data.OracleClient.OracleBFile.DirectoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des DIRECTORY-Objekts ab, dem ein <see cref="T:System.Data.OracleClient.OracleBFile" />-Objekt zugeordnet ist.</summary>
        <value>Der Name des DIRECTORY-Objekts.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jedes Objekt, das <xref:System.Data.OracleClient.OracleBFile> nicht NULL ist, wird zwei Entitäten zugeordnet, die den Speicherort der zugrunde liegenden physischen Datei definieren:  
  
-   Ein Oracle-DIRECTORY-Objekt, das als Datenbank-Alias für ein Verzeichnis im Dateisystem fungiert.  
  
-   Der Dateiname der zugrunde liegenden physischen Datei, die sich in dem dem DIRECTORY-Objekt zugeordneten Verzeichnis befindet.  
  
 Die <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> -Eigenschaft gibt den Namen des Verzeichnis Objekts aus der Oracle-Datenbank zurück.  
  
 Weitere Informationen zum Erstellen und Verwenden von Oracle `BFILE`finden Sie im entsprechenden Thema in der Oracle-Dokumentation.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Es wurde versucht, <see langword="DirectoryName" /> für ein geschlossenes oder freigegebenes <see langword="OracleBFile" />-Objekts aufzurufen.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="oracleBFile.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle von diesem Objekt verwendeten Ressourcen frei.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="oracleBFile.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExists">
      <MemberSignature Language="C#" Value="public bool FileExists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FileExists" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.FileExists" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileExists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FileExists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.FileExists : bool" Usage="System.Data.OracleClient.OracleBFile.FileExists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob eine physikalische Datei mit <see langword="BFILE" />-Daten im Betriebssystem vorhanden ist.</summary>
        <value><see langword="true" />, wenn eine physikalische Datei mit <see langword="BFILE" />-Daten vorhanden ist, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Das <see cref="T:System.Data.OracleClient.OracleBFile" />-Objekt ist geschlossen oder freigegeben.</exception>
        <exception cref="T:System.InvalidOperationException">Die Verbindung, der eine <see langword="BFILE" /> zugeordnet ist, wurde geschlossen.</exception>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileName : string" Usage="System.Data.OracleClient.OracleBFile.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der <see langword="BFILE" /> ohne den Pfad ab.</summary>
        <value>Der Name der BFILE.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für <xref:System.Data.OracleClient.OracleBFile.Null>wird eine leere Zeichenfolge zurückgegeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Das <see cref="T:System.Data.OracleClient.OracleBFile" />-Objekt ist geschlossen oder freigegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="oracleBFile.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wird derzeit nicht unterstützt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.IsNull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNull : bool" Usage="System.Data.OracleClient.OracleBFile.IsNull" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.SqlTypes.INullable.IsNull</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob <see cref="T:System.Data.OracleClient.OracleBFile" /> ein <see cref="F:System.Data.OracleClient.OracleBFile.Null" />-Stream ist.</summary>
        <value><see langword="true" />, wenn <see cref="T:System.Data.OracleClient.OracleBFile" /> ein <see cref="F:System.Data.OracleClient.OracleBFile.Null" />-Stream ist, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Data.OracleClient.OracleBFile.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der die Länge der physikalischen Datei in Bytes zurückgibt, der das <see cref="T:System.Data.OracleClient.OracleBFile" />-Objekt zugeordnet ist.</summary>
        <value>Ein Long-Wert, der die Länge der physikalischen Datei in Bytes darstellt.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Es wurden Methoden aufgerufen, nachdem der Stream geschlossen oder freigegeben wurde.</exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.Data.OracleClient.OracleBFile Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.OracleClient.OracleBFile Null" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleBFile.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As OracleBFile " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::OracleClient::OracleBFile ^ Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.Data.OracleClient.OracleBFile" Usage="System.Data.OracleClient.OracleBFile.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt ein <see cref="T:System.Data.OracleClient.OracleBFile" />-Objekt dar, das NULL ist und an keine physikalische Datei gebunden ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleBFile.Null>kann nützlich sein, wenn Sie eine Vergleichsoperation für eine <xref:System.Data.OracleClient.OracleBFile> durchführen möchten, um die NULL-Zulässigkeit zu ermitteln.  
  
 Jeder Versuch, einen Lesevorgang für ein <xref:System.Data.OracleClient.OracleBFile.Null> -Objekt auszuführen, wird zwar erfolgreich ausgeführt, es werden jedoch keine Daten zurückgegeben. Jeder Versuch, einen Schreibvorgang für ein <xref:System.Data.OracleClient.OracleBFile.Null> -Objekt auszuführen, generiert eine Ausnahme. Die Auswahl `BFILE` einer Spalte, die einen NULL- <xref:System.Data.OracleClient.OracleBFile.Null>Wert enthält, gibt zurück.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Data.OracleClient.OracleBFile.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die aktuelle Leseposition im <see cref="T:System.Data.OracleClient.OracleBFile" />-Stream ab.</summary>
        <value>Die aktuelle Position innerhalb des <see cref="T:System.Data.OracleClient.OracleBFile" />-Streams.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Suchen nach einem beliebigen Speicherort über die Länge des Streams wird nicht unterstützt.  
  
 Die `Position` -Eigenschaft verfolgt nicht die Anzahl der Bytes aus dem Datenstrom, die verbraucht, ausgelassen oder beides sind.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Es wurde versucht, eine Position mit einem negativen Wert oder mit einem Wert festzulegen, der größer als die Länge des Streams ist.</exception>
        <exception cref="T:System.ObjectDisposedException">Es wurden Methoden aufgerufen, nachdem der Stream geschlossen oder freigegeben wurde.</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="oracleBFile.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Ein Bytearray. Nach dem Beenden dieser Methode enthält der Puffer das angegebene Bytearray mit den Werten zwischen <paramref name="offset" /> und (<paramref name="offset" /> + <paramref name="count" />), die durch aus der aktuellen Quelle gelesene Bytes ersetzt wurden.</param>
        <param name="offset">Der nullbasierte Byteoffset im <paramref name="buffer" />, ab dem die aus dem aktuellen Stream gelesenen Daten gespeichert werden.</param>
        <param name="count">Die maximale Anzahl an Bytes, die aus dem aktuellen Stream gelesen werden sollen.</param>
        <summary>Liest eine Folge von Bytes aus dem aktuellen <see cref="T:System.Data.OracleClient.OracleBFile" />-Stream und verschiebt die Position im Stream um die Anzahl der gelesen Bytes nach vorn.</summary>
        <returns>Die Gesamtanzahl der in den Puffer gelesenen Bytes. Dies kann weniger als die Anzahl der angeforderten Bytes sein, wenn diese Anzahl an Bytes derzeit nicht verfügbar ist, oder 0 (null), wenn das Dateiende erreicht ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.OracleClient.OracleBFile.Read%2A> -Methode hat eine maximale `count` Anzahl von Bytes aus dem aktuellen Stream gelesen und `buffer` in ab `offset`gespeichert. Die aktuelle Position innerhalb des Streams wird um die Anzahl der gelesenen Bytes erweitert. Wenn jedoch eine Ausnahme auftritt, bleibt die aktuelle Position im Stream unverändert. <xref:System.Data.OracleClient.OracleBFile.Read%2A>Gibt die Anzahl der gelesenen Bytes zurück. Der Rückgabewert ist nur 0 (null), wenn sich die Position derzeit am Ende des Streams befindet. <xref:System.Data.OracleClient.OracleBFile.Read%2A>blockiert, bis mindestens ein Byte der Daten gelesen werden kann, wenn keine Daten verfügbar sind. <xref:System.Data.OracleClient.OracleBFile.Read%2A>gibt 0 (null) nur dann zurück, wenn das Ende der Datei erreicht wurde. <xref:System.Data.OracleClient.OracleBFile.Read%2A>kann weniger Bytes zurückgeben als angefordert werden, auch wenn das Ende des Streams nicht erreicht wurde.  
  
 Bei jedem Versuch, mit der <xref:System.Data.OracleClient.OracleBFile> -Methode <xref:System.Data.OracleClient.OracleBFile.Read%2A> oder <xref:System.Data.OracleClient.OracleBFile.Seek%2A> der-Methode auf <xref:System.Data.OracleClient.OracleBFile> einen geschlossenen zuzugreifen, wird automatisch ein Stream geöffnet.  
  
 Im folgenden C# Beispiel wird von diesem Schema in einer Oracle-Tabelle ausgegangen:  
  
```  
(col1 number, col2 BFILE)  
```  
  
 Das Beispiel veranschaulicht die Verwendung <xref:System.Data.OracleClient.OracleBFile.Read%2A> der <xref:System.Data.OracleClient.OracleBFile.Seek%2A> Methoden und für den <xref:System.Data.OracleClient.OracleBFile> Zugriff auf ein Objekt.  
  
```csharp  
byte[] buffer = new byte[100];  
OracleDataReader dataReader = command.ExecuteReader();  
using (dataReader) {  
    if (dataReader.Read()) {  
            OracleBFile BFile = dataReader.GetOracleBFile(1);  
        using (BFile) {  
            BFile.Seek(0, SeekOrigin.Begin);  
            BFile.Read(buffer, 0, 100);  
        }  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Summe von <paramref name="offset" /> und <paramref name="count" /> ist größer als die Pufferlänge.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> oder <paramref name="count" /> ist ein negativer Wert.</exception>
        <exception cref="T:System.InvalidOperationException">Die Verbindung, der eine <see langword="BFILE" /> zugeordnet ist, wurde geschlossen.</exception>
        <exception cref="T:System.IO.IOException">E/A-Fehler</exception>
        <exception cref="T:System.ObjectDisposedException">Es wurden Methoden aufgerufen, nachdem der Stream geschlossen oder freigegeben wurde.</exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="oracleBFile.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">Ein Byteoffset relativ zum Ursprung. Wenn <paramref name="offset" /> negativ ist, liegt die die neue Position um die durch <paramref name="origin" /> angegebene Anzahl von Bytes vor der durch <paramref name="offset" /> angegebenen Position. Wenn <paramref name="offset" /> 0 (null) ist, ist die neue Position die durch <paramref name="origin" /> angegebene Position. Wenn <paramref name="offset" /> positiv ist, liegt die neue Position um die durch <paramref name="origin" /> angegebene Anzahl an Bytes hinter der durch <paramref name="offset" /> angegebenen Position.</param>
        <param name="origin">Ein Wert vom Typ <see langword="System.IO.SeekOrigin" />, der den Bezugspunkt angibt, von dem aus die neue Position ermittelt wird.</param>
        <summary>Legt die Position im aktuellen <see cref="T:System.Data.OracleClient.OracleBFile" />-Stream fest.</summary>
        <returns>Die neue Position innerhalb des aktuellen Streams.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `offset` negativ ist, muss die neue Position der durch angegebenen `offset`Anzahl von Bytes vorangestellt `origin` werden. Wenn `offset` 0 (null) ist, muss die neue Position die durch `origin`angegebene Position sein. Wenn `offset` positiv ist, ist die neue Position erforderlich, um die durch angegebene `offset`Anzahl `origin` von Bytes an der von angegebenen Position zu befolgen.  
  
 Das Suchen nach einem beliebigen Speicherort über die Länge des Streams wird nicht unterstützt.  
  
 Bei jedem Versuch, mit der <xref:System.Data.OracleClient.OracleBFile> -Methode <xref:System.Data.OracleClient.OracleBFile.Read%2A> oder <xref:System.Data.OracleClient.OracleBFile.Seek%2A> der-Methode auf <xref:System.Data.OracleClient.OracleBFile> einen geschlossenen zuzugreifen, wird automatisch ein Stream geöffnet.  
  
 Im folgenden C# Beispiel wird von diesem Schema in einer Oracle-Tabelle ausgegangen:  
  
```  
(col1 number, col2 BFILE)  
```  
  
 Das Beispiel veranschaulicht die Verwendung <xref:System.Data.OracleClient.OracleBFile.Read%2A> der <xref:System.Data.OracleClient.OracleBFile.Seek%2A> Methoden und für den <xref:System.Data.OracleClient.OracleBFile> Zugriff auf ein Objekt.  
  
```csharp  
byte[] buffer = new byte[100];  
OracleDataReader dataReader = command.ExecuteReader();  
using (dataReader) {  
    if (dataReader.Read()) {  
            OracleBFile BFile = dataReader.GetOracleBFile(1);  
        using (BFile) {  
            BFile.Seek(0, SeekOrigin.Begin);  
            BFile.Read(buffer, 0, 100);  
        }  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Es wurde versucht, eine Position mit einem negativen Wert oder mit einem Wert festzulegen, der größer als die Länge des Streams ist.</exception>
        <exception cref="T:System.ObjectDisposedException">Es wurden Methoden aufgerufen, nachdem der Stream geschlossen oder freigegeben wurde.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetFileName">
      <MemberSignature Language="C#" Value="public void SetFileName (string directory, string file);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFileName(string directory, string file) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFileName (directory As String, file As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFileName(System::String ^ directory, System::String ^ file);" />
      <MemberSignature Language="F#" Value="member this.SetFileName : string * string -&gt; unit" Usage="oracleBFile.SetFileName (directory, file)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directory">Der Alias des Verzeichnisobjekts, das eine physikalische Datei enthält.</param>
        <param name="file">Der Name der Datei im Betriebssystem.</param>
        <summary>Bindet das <see cref="T:System.Data.OracleClient.OracleBFile" />-Objekt an eine andere Datei im Betriebssystem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A> Vorgang muss innerhalb einer Transaktion ausgeführt werden, um erfolgreich zu sein. Wenn Sie <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A> für einen `BFILE` aufrufen, <xref:System.Data.OracleClient.OracleBFile> wird das-Objekt einer anderen Datei zugeordnet, aber die Oracle-Tabelle wird nicht aktualisiert. Um die Oracle-Tabelle nach dem <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>Aufrufen von zu aktualisieren, `Update` müssen Sie die <xref:System.Data.OracleClient.OracleDataAdapter> -Methode von aufrufen und dann einen Commit für die Transaktion durchlaufen.  
  
 Nachdem Sie die- <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> Eigenschaft <xref:System.Data.OracleClient.OracleBFile.FileName%2A> oder die-Eigenschaft abgerufen haben, <xref:System.Data.OracleClient.OracleBFile> werden Sie im-Objekt zwischengespeichert <xref:System.Data.OracleClient.OracleBFile> und sind von den <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>Aufrufen von geklonten Objekten oder `BFILE` von Änderungen an der in der Datenbank nicht betroffen. Dies bedeutet, dass Sie möglicherweise nicht die tatsächlichen Werte des `BFILE` Objekts auf dem Server darstellen.  
  
 Außerdem bewirkt das Abrufen einer der beiden<xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> Eigenschaften <xref:System.Data.OracleClient.OracleBFile.FileName%2A>(oder), dass beide Eigenschaftswerte vom <xref:System.Data.OracleClient.OracleBFile> Server abgerufen und im-Objekt zwischengespeichert werden.  
  
 Im folgenden C# Beispiel wird von diesem Schema in einer Oracle-Tabelle ausgegangen:  
  
```  
(col1 number, col2 BFILE)  
```  
  
 Das Beispiel veranschaulicht die Verwendung <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>der <xref:System.Data.OracleClient.OracleBFile.Read%2A> Methoden <xref:System.Data.OracleClient.OracleBFile.Seek%2A> , und für den <xref:System.Data.OracleClient.OracleBFile> Zugriff auf ein-Objekt.  
  
```csharp  
byte[] buffer = new byte[100];  
OracleDataReader dataReader = command.ExecuteReader();  
using (dataReader) {  
    if (dataReader.Read()) {  
        OracleBFile BFile = dataReader.GetOracleBFile(1);  
        using (BFile) {  
            BFile.Seek(0, SeekOrigin.Begin);  
            BFile.Read(buffer, 0, 100);  
            command.Transaction = connection.BeginTransaction();  
            BFile.SetFileName("TESTDIR", "File1.jpg");  
            BFile.Read(buffer, 0, 100);  
        }  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Operation muss Teil einer Transaktion sein.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="oracleBFile.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">Wird derzeit nicht unterstützt.</param>
        <summary>Wird derzeit nicht unterstützt.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Die Ausnahme, die ausgelöst wird, wenn eine aufgerufene Methode nicht unterstützt wird oder versucht wird, in einem Stream, der die aufgerufenen Funktionen nicht unterstützt, zu lesen, zu suchen oder zu schreiben.</exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Data.OracleClient.OracleBFile.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Array" /> vom Typ <see cref="T:System.Byte" /> ab, das die <see cref="T:System.Data.OracleClient.OracleBFile" />-Daten enthält.</summary>
        <value>Ein <see cref="T:System.Array" /> vom Typ <see cref="T:System.Byte" />, das die <see cref="T:System.Data.OracleClient.OracleBFile" />-Daten enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.OracleClient.OracleBFile.Value%2A> -Eigenschaft liest den `BFILE` gesamten gleichzeitig.  
  
> [!NOTE]
>  Ein Vorteil der Verwendung `BFILE`von s ist die Möglichkeit, große Datenmengen in Blöcken auf dem Client abzurufen. Wenn Sie jedoch verwenden <xref:System.Data.OracleClient.OracleBFile.Value%2A>, erhalten Sie alle Daten für die BFILE-Spalte als einen zusammenhängenden Block, der den Anwendungs Aufwand erheblich erhöhen kann.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="oracleBFile.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Wird derzeit nicht unterstützt.</param>
        <param name="offset">Wird derzeit nicht unterstützt.</param>
        <param name="count">Wird derzeit nicht unterstützt.</param>
        <summary>Wird derzeit nicht unterstützt.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Die Ausnahme, die ausgelöst wird, wenn eine aufgerufene Methode nicht unterstützt wird oder versucht wird, in einem Stream, der die aufgerufenen Funktionen nicht unterstützt, zu lesen, zu suchen oder zu schreiben.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
