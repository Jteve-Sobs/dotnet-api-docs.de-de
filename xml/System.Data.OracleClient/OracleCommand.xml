<Type Name="OracleCommand" FullName="System.Data.OracleClient.OracleCommand">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a202ecdb5445be69a4ec9a6ae797016c081872a3" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37676536" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OracleCommand : System.Data.Common.DbCommand, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleCommand extends System.Data.Common.DbCommand implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleCommand&#xA;Inherits DbCommand&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleCommand sealed : System::Data::Common::DbCommand, ICloneable" />
  <TypeSignature Language="F#" Value="type OracleCommand = class&#xA;    inherit DbCommand&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommand</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RecordsAffected")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OracleCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("OracleCommand has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ddf69-101">Represents an SQL statement or stored procedure to execute against a database.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ddf69-101">Represents an SQL statement or stored procedure to execute against a database.</span>
      </span>
      <span data-ttu-id="ddf69-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ddf69-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddf69-103">Dieser Typ ist veraltet und wird in einer zukünftigen Version von .NET Framework entfernt.</span><span class="sxs-lookup"><span data-stu-id="ddf69-103">This type is deprecated and will be removed in a future version of the .NET Framework.</span></span> <span data-ttu-id="ddf69-104">Weitere Informationen finden Sie unter [Oracle und ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).</span><span class="sxs-lookup"><span data-stu-id="ddf69-104">For more information, see [Oracle and ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).</span></span>  
  
 <span data-ttu-id="ddf69-105">Die <xref:System.Data.OracleClient.OracleCommand> Klasse stellt die folgenden Methoden zum Ausführen von Befehlen für eine Datenquelle:</span><span class="sxs-lookup"><span data-stu-id="ddf69-105">The <xref:System.Data.OracleClient.OracleCommand> class provides the following methods for executing commands against a data source:</span></span>  
  
|<span data-ttu-id="ddf69-106">Element</span><span class="sxs-lookup"><span data-stu-id="ddf69-106">Item</span></span>|<span data-ttu-id="ddf69-107">Beschreibung</span><span class="sxs-lookup"><span data-stu-id="ddf69-107">Description</span></span>|  
|----------|-----------------|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>|<span data-ttu-id="ddf69-108">Führt Befehle, die Zeilen zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="ddf69-108">Executes commands that return rows.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A>|<span data-ttu-id="ddf69-109">Führt eine SQL­Anweisung für die <xref:System.Data.OracleClient.OracleCommand.Connection%2A> und gibt die Anzahl der betroffenen Zeilen zurück.</span><span class="sxs-lookup"><span data-stu-id="ddf69-109">Executes an SQL statement against the <xref:System.Data.OracleClient.OracleCommand.Connection%2A> and returns the number of rows affected.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>|<span data-ttu-id="ddf69-110">Führt Befehle wie z. B. SQL-INSERT, DELETE, UPDATE und SET-Anweisungen.</span><span class="sxs-lookup"><span data-stu-id="ddf69-110">Executes commands such as SQL INSERT, DELETE, UPDATE, and SET statements.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>|<span data-ttu-id="ddf69-111">Ruft einen einzelnen Wert (z. B. einen Aggregatwert) aus einer Datenbank als .NET Framework-Datentyp ab.</span><span class="sxs-lookup"><span data-stu-id="ddf69-111">Retrieves a single value (for example, an aggregate value) from a database as a .NET Framework data type.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A>|<span data-ttu-id="ddf69-112">Ruft einen einzelnen Wert (z. B. einen Aggregatwert) aus einer Datenbank als eine Oracle-Datentyp ab.</span><span class="sxs-lookup"><span data-stu-id="ddf69-112">Retrieves a single value (for example, an aggregate value) from a database as an Oracle-specific data type.</span></span>|  
  
 <span data-ttu-id="ddf69-113">Können Sie Zurücksetzen der <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> -Eigenschaft und die Wiederverwendung der <xref:System.Data.OracleClient.OracleCommand> Objekt.</span><span class="sxs-lookup"><span data-stu-id="ddf69-113">You can reset the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property and reuse the <xref:System.Data.OracleClient.OracleCommand> object.</span></span>  
  
 <span data-ttu-id="ddf69-114">Wenn die Ausführung des Befehls zu einer schwerwiegenden führt <xref:System.Data.OracleClient.OracleException>, <xref:System.Data.OracleClient.OracleConnection> schließen kann.</span><span class="sxs-lookup"><span data-stu-id="ddf69-114">If execution of the command results in a fatal <xref:System.Data.OracleClient.OracleException>, the <xref:System.Data.OracleClient.OracleConnection> may close.</span></span> <span data-ttu-id="ddf69-115">Die Benutzer können die Verbindung aber erneut öffnen und fortfahren.</span><span class="sxs-lookup"><span data-stu-id="ddf69-115">However, the user can reopen the connection and continue.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ddf69-116">Im Gegensatz zu den **Befehl** Objekt in den anderen .NET Framework-Datenanbietern (SQL Server, OLE DB und ODBC), die <xref:System.Data.OracleClient.OracleCommand> Objekt unterstützt keine <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="ddf69-116">Unlike the **Command** object in the other .NET Framework data providers (SQL Server, OLE DB, and ODBC), the <xref:System.Data.OracleClient.OracleCommand> object does not support a <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> property.</span></span> <span data-ttu-id="ddf69-117">Ein Befehlstimeout Einstellung hat keine Auswirkungen, und der zurückgegebene Wert ist immer 0 (null).</span><span class="sxs-lookup"><span data-stu-id="ddf69-117">Setting a command timeout has no effect and the value returned is always zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ddf69-118">Im folgenden Beispiel wird die <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> -Methode der <xref:System.Data.OracleClient.OracleCommand>, zusammen mit <xref:System.Data.OracleClient.OracleDataReader> und <xref:System.Data.OracleClient.OracleConnection>, um Zeilen aus einer Tabelle auszuwählen.</span><span class="sxs-lookup"><span data-stu-id="ddf69-118">The following example uses the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method of <xref:System.Data.OracleClient.OracleCommand>, along with <xref:System.Data.OracleClient.OracleDataReader> and <xref:System.Data.OracleClient.OracleConnection>, to select rows from a table.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ddf69-119">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-119">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ddf69-120">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-120">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddf69-121">Basiskonstruktor initialisiert alle Felder auf ihre Standardwerte zurück.</span><span class="sxs-lookup"><span data-stu-id="ddf69-121">The base constructor initializes all fields to their default values.</span></span> <span data-ttu-id="ddf69-122">In der folgende Tabelle werden die anfänglichen Eigenschaftenwerte für eine Instanz von <xref:System.Data.OracleClient.OracleCommand>.</span><span class="sxs-lookup"><span data-stu-id="ddf69-122">The following table shows initial property values for an instance of <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
|<span data-ttu-id="ddf69-123">Eigenschaften</span><span class="sxs-lookup"><span data-stu-id="ddf69-123">Properties</span></span>|<span data-ttu-id="ddf69-124">Anfangswert</span><span class="sxs-lookup"><span data-stu-id="ddf69-124">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>|<span data-ttu-id="ddf69-125">eine leere Zeichenfolge ("")</span><span class="sxs-lookup"><span data-stu-id="ddf69-125">empty string ("")</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OracleClient.OracleCommand.Connection%2A>|<span data-ttu-id="ddf69-126">NULL</span><span class="sxs-lookup"><span data-stu-id="ddf69-126">null</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ddf69-127">Das folgende Beispiel erstellt eine <xref:System.Data.OracleClient.OracleCommand> und legt einige ihrer Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="ddf69-127">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleCommand : string -&gt; System.Data.OracleClient.OracleCommand" Usage="new System.Data.OracleClient.OracleCommand commandText" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commandText">
          <span data-ttu-id="ddf69-128">The text of the query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-128">The text of the query.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddf69-129">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" /> class with the text of the query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-129">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" /> class with the text of the query.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText, System.Data.OracleClient.OracleConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.OracleClient.OracleConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String, connection As OracleConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText, System::Data::OracleClient::OracleConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleCommand : string * System.Data.OracleClient.OracleConnection -&gt; System.Data.OracleClient.OracleCommand" Usage="new System.Data.OracleClient.OracleCommand (commandText, connection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OracleClient.OracleConnection" />
      </Parameters>
      <Docs>
        <param name="commandText">
          <span data-ttu-id="ddf69-130">The text of the query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-130">The text of the query.</span>
          </span>
        </param>
        <param name="connection">
          <span data-ttu-id="ddf69-131">An <see cref="T:System.Data.OracleClient.OracleConnection" /> object that represents the connection to a database.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-131">An <see cref="T:System.Data.OracleClient.OracleConnection" /> object that represents the connection to a database.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddf69-132">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" /> class with the text of the query and an <see cref="T:System.Data.OracleClient.OracleConnection" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-132">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" /> class with the text of the query and an <see cref="T:System.Data.OracleClient.OracleConnection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ddf69-133">Das folgende Beispiel erstellt eine <xref:System.Data.OracleClient.OracleCommand>.</span><span class="sxs-lookup"><span data-stu-id="ddf69-133">The following example creates an <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand2/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText, System.Data.OracleClient.OracleConnection connection, System.Data.OracleClient.OracleTransaction tx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.OracleClient.OracleConnection connection, class System.Data.OracleClient.OracleTransaction tx) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String, connection As OracleConnection, tx As OracleTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText, System::Data::OracleClient::OracleConnection ^ connection, System::Data::OracleClient::OracleTransaction ^ tx);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleCommand : string * System.Data.OracleClient.OracleConnection * System.Data.OracleClient.OracleTransaction -&gt; System.Data.OracleClient.OracleCommand" Usage="new System.Data.OracleClient.OracleCommand (commandText, connection, tx)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OracleClient.OracleConnection" />
        <Parameter Name="tx" Type="System.Data.OracleClient.OracleTransaction" />
      </Parameters>
      <Docs>
        <param name="commandText">
          <span data-ttu-id="ddf69-134">The text of the query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-134">The text of the query.</span>
          </span>
        </param>
        <param name="connection">
          <span data-ttu-id="ddf69-135">An <see cref="T:System.Data.OracleClient.OracleConnection" /> object that represents the connection to a database.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-135">An <see cref="T:System.Data.OracleClient.OracleConnection" /> object that represents the connection to a database.</span>
          </span>
        </param>
        <param name="tx">
          <span data-ttu-id="ddf69-136">The <see cref="T:System.Data.OracleClient.OracleTransaction" /> in which the <see cref="T:System.Data.OracleClient.OracleCommand" /> executes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-136">The <see cref="T:System.Data.OracleClient.OracleTransaction" /> in which the <see cref="T:System.Data.OracleClient.OracleCommand" /> executes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddf69-137">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" /> class with the text of the query, an <see cref="T:System.Data.OracleClient.OracleConnection" /> object, and an <see cref="T:System.Data.OracleClient.OracleTransaction" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-137">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" /> class with the text of the query, an <see cref="T:System.Data.OracleClient.OracleConnection" /> object, and an <see cref="T:System.Data.OracleClient.OracleTransaction" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddf69-138">In der folgende Tabelle werden die anfänglichen Eigenschaftenwerte für eine Instanz dieser Implementierung des der <xref:System.Data.OracleClient.OracleCommand>.</span><span class="sxs-lookup"><span data-stu-id="ddf69-138">The following table shows initial property values for an instance of this implementation of the <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
|<span data-ttu-id="ddf69-139">Eigenschaften</span><span class="sxs-lookup"><span data-stu-id="ddf69-139">Properties</span></span>|<span data-ttu-id="ddf69-140">Anfangswert</span><span class="sxs-lookup"><span data-stu-id="ddf69-140">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OracleClient.OracleCommand.Connection%2A>|<span data-ttu-id="ddf69-141">Ein neues <xref:System.Data.OracleClient.OracleConnection> , das der Wert für die `connection` Parameter.</span><span class="sxs-lookup"><span data-stu-id="ddf69-141">A new <xref:System.Data.OracleClient.OracleConnection> that is the value for the `connection` parameter.</span></span>|  
  
 <span data-ttu-id="ddf69-142">Sie können den Wert für diese Parameter ändern, indem Sie die entsprechende Eigenschaft festlegen.</span><span class="sxs-lookup"><span data-stu-id="ddf69-142">You can change the value for any of these parameters by setting the related property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ddf69-143">Das folgende Beispiel erstellt eine <xref:System.Data.OracleClient.OracleCommand> und legt einige ihrer Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="ddf69-143">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand3/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand3/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public override void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Cancel();" />
      <MemberSignature Language="F#" Value="override this.Cancel : unit -&gt; unit" Usage="oracleCommand.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ddf69-144">Attempts to cancel the execution of an <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-144">Attempts to cancel the execution of an <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddf69-145">Wenn es keine Werte Abbrechen, geschieht nichts.</span><span class="sxs-lookup"><span data-stu-id="ddf69-145">If there is nothing to cancel, nothing happens.</span></span> <span data-ttu-id="ddf69-146">Wenn jedoch das Abbrechen für einen aktuell ausgeführten Befehl fehlschlägt, wird keine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="ddf69-146">However, if there is a command in process, and the attempt to cancel fails, no exception is generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ddf69-147">Das folgende Beispiel erstellt eine <xref:System.Data.OracleClient.OracleCommand>, führt ihn aus, und bricht die Ausführung ab.</span><span class="sxs-lookup"><span data-stu-id="ddf69-147">The following example creates an <xref:System.Data.OracleClient.OracleCommand>, executes it, then cancels the execution.</span></span> <span data-ttu-id="ddf69-148">Um dies zu erreichen, wird die Methode übergeben, eine Zeichenfolge, die eine SQL-SELECT-Anweisung ist und eine Zeichenfolge, für die Verbindung mit der Datenbank verwendet.</span><span class="sxs-lookup"><span data-stu-id="ddf69-148">To accomplish this, the method is passed a string that is an SQL SELECT statement and a string to use to connect to the database.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.Cancel#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Cancel/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Cancel#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Cancel/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="oracleCommand.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ddf69-149">Creates a copy of this <see cref="T:System.Data.OracleClient.OracleCommand" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-149">Creates a copy of this <see cref="T:System.Data.OracleClient.OracleCommand" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ddf69-150">A new <see cref="T:System.Data.OracleClient.OracleCommand" /> object in which all property values are the same as the original.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-150">A new <see cref="T:System.Data.OracleClient.OracleCommand" /> object in which all property values are the same as the original.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public override string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandText : string with get, set" Usage="System.Data.OracleClient.OracleCommand.CommandText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Oracle.Design.OracleCommandTextEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddf69-151">Gets or sets the SQL statement or stored procedure to execute against the database.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-151">Gets or sets the SQL statement or stored procedure to execute against the database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddf69-152">Die SQL-Anweisung oder gespeicherte Prozedur, die ausgeführt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-152">The SQL statement or stored procedure to execute.</span>
          </span>
          <span data-ttu-id="ddf69-153">Der Standardwert ist eine leere Zeichenfolge („“).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-153">The default value is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddf69-154">Wenn die <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> -Eigenschaftensatz auf `StoredProcedure`, <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> -Eigenschaft sollte auf den Namen der gespeicherten Prozedur festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="ddf69-154">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="ddf69-155">Der Benutzer möglicherweise erforderlich, um Escapezeichensyntax verwenden, wenn der Name der gespeicherten Prozedur keine Sonderzeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="ddf69-155">The user may be required to use escape character syntax if the stored procedure name contains any special characters.</span></span> <span data-ttu-id="ddf69-156">Der Befehl führt diese gespeicherte Prozedur auf, wenn Sie eine der Execute-Methoden aufrufen.</span><span class="sxs-lookup"><span data-stu-id="ddf69-156">The command executes this stored procedure when you call one of the Execute methods.</span></span>  
  
 <span data-ttu-id="ddf69-157">Die .NET Framework-Datenanbieter für Oracle unterstützt keine Fragezeichenplatzhalter (?) aus, für die Übergabe von Parametern an eine SQL-Anweisung wird aufgerufen, indem ein <xref:System.Data.OracleClient.OracleCommand> von `CommandType.Text`.</span><span class="sxs-lookup"><span data-stu-id="ddf69-157">The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`.</span></span> <span data-ttu-id="ddf69-158">In diesem Fall müssen benannten Parameter verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="ddf69-158">In this case, named parameters must be used.</span></span> <span data-ttu-id="ddf69-159">Zum Beispiel:</span><span class="sxs-lookup"><span data-stu-id="ddf69-159">For example:</span></span>  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 <span data-ttu-id="ddf69-160">Bei Verwendung von benannten Parametern in einer SQL­Anweisung wird aufgerufen, durch eine <xref:System.Data.OracleClient.OracleCommand> von `CommandType.Text`, müssen Sie den Namen des Parameters mit einem Doppelpunkt (:).) voranstellen.</span><span class="sxs-lookup"><span data-stu-id="ddf69-160">When using named parameters in an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`, you must precede the parameter name with a colon (:).</span></span> <span data-ttu-id="ddf69-161">Allerdings in einer gespeicherten Prozedur oder beim Verweisen auf einen benannten Parameter an anderer Stelle in Ihrem Code (z. B. beim Hinzufügen von <xref:System.Data.OracleClient.OracleParameter> Objekte die <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> Eigenschaft), fügen Sie vor den benannten Parameter mit einem Doppelpunkt (:).</span><span class="sxs-lookup"><span data-stu-id="ddf69-161">However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding <xref:System.Data.OracleClient.OracleParameter> objects to the <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> property), do not precede the named parameter with a colon (:).</span></span> <span data-ttu-id="ddf69-162">Die .NET Framework-Datenanbieter für Oracle stellt den Doppelpunkt automatisch bereit.</span><span class="sxs-lookup"><span data-stu-id="ddf69-162">The .NET Framework Data Provider for Oracle supplies the colon automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ddf69-163">Das folgende Beispiel erstellt eine <xref:System.Data.OracleClient.OracleCommand> und legt einige ihrer Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="ddf69-163">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.CommandText#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandText/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.CommandText#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandText/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public override int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CommandTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTimeout : int with get, set" Usage="System.Data.OracleClient.OracleCommand.CommandTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddf69-164">Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-164">Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddf69-165">Die Zeit in Sekunden, während der auf die Ausführung des Befehls gewartet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-165">The time (in seconds) to wait for the command to execute.</span>
          </span>
          <span data-ttu-id="ddf69-166">Der Standardwert ist 30 Sekunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-166">The default value is 30 seconds.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddf69-167">Ein <xref:System.ArgumentException> wird generiert, wenn die zugewiesene <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> -Eigenschaftswert ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="ddf69-167">An <xref:System.ArgumentException> is generated if the assigned <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> property value is less than 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public override System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberSignature Language="F#" Value="member this.CommandType : System.Data.CommandType with get, set" Usage="System.Data.OracleClient.OracleCommand.CommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddf69-168">Gets or sets a value indicating how the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> property is interpreted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-168">Gets or sets a value indicating how the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> property is interpreted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddf69-169">Einer der <see cref="T:System.Data.CommandType" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-169">One of the <see cref="T:System.Data.CommandType" /> values.</span>
          </span>
          <span data-ttu-id="ddf69-170">Die Standardeinstellung ist <see langword="Text" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-170">The default is <see langword="Text" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddf69-171">Wenn die <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> -Eigenschaftensatz auf `StoredProcedure`, legen Sie die <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> Eigenschaft, um die vollständige Oracle Call-Syntax.</span><span class="sxs-lookup"><span data-stu-id="ddf69-171">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, you should set the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property to the full Oracle call syntax.</span></span> <span data-ttu-id="ddf69-172">Der Befehl führt dann diese gespeicherte Prozedur, wenn Sie eine der Execute-Methoden aufrufen (z. B. <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> oder <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>).</span><span class="sxs-lookup"><span data-stu-id="ddf69-172">The command then executes this stored procedure when you call one of the Execute methods (for example, <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> or <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>).</span></span>  
  
 <span data-ttu-id="ddf69-173">Die <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> und <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> Eigenschaften können nicht festgelegt werden, wenn die aktuelle Verbindung einen Execute- oder Fetch-Vorgang ausführt.</span><span class="sxs-lookup"><span data-stu-id="ddf69-173">The <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> and <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> properties cannot be set if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="ddf69-174">Die .NET Framework-Datenanbieter für Oracle unterstützt keine Fragezeichenplatzhalter (?) aus, für die Übergabe von Parametern an eine SQL-Anweisung wird aufgerufen, indem ein <xref:System.Data.OracleClient.OracleCommand> von `CommandType.Text`.</span><span class="sxs-lookup"><span data-stu-id="ddf69-174">The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`.</span></span> <span data-ttu-id="ddf69-175">In diesem Fall müssen benannten Parameter verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="ddf69-175">In this case, named parameters must be used.</span></span> <span data-ttu-id="ddf69-176">Zum Beispiel:</span><span class="sxs-lookup"><span data-stu-id="ddf69-176">For example:</span></span>  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 <span data-ttu-id="ddf69-177">Bei Verwendung von benannten Parametern in einer SQL­Anweisung wird aufgerufen, durch eine <xref:System.Data.OracleClient.OracleCommand> von `CommandType.Text`, müssen Sie den Namen des Parameters mit einem Doppelpunkt (:).) voranstellen.</span><span class="sxs-lookup"><span data-stu-id="ddf69-177">When using named parameters in an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`, you must precede the parameter name with a colon (:).</span></span> <span data-ttu-id="ddf69-178">Allerdings in einer gespeicherten Prozedur oder beim Verweisen auf einen benannten Parameter an anderer Stelle in Ihrem Code (z. B. beim Hinzufügen von <xref:System.Data.OracleClient.OracleParameter> Objekte die <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> Eigenschaft), fügen Sie vor den benannten Parameter mit einem Doppelpunkt (:).</span><span class="sxs-lookup"><span data-stu-id="ddf69-178">However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding <xref:System.Data.OracleClient.OracleParameter> objects to the <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> property), do not precede the named parameter with a colon (:).</span></span> <span data-ttu-id="ddf69-179">Die .NET Framework-Datenanbieter für Oracle stellt den Doppelpunkt automatisch bereit.</span><span class="sxs-lookup"><span data-stu-id="ddf69-179">The .NET Framework Data Provider for Oracle supplies the colon automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ddf69-180">Das folgende Beispiel erstellt eine Instanz einer abgeleiteten Klasse <xref:System.Data.OracleClient.OracleCommand> und legt einige ihrer Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="ddf69-180">The following example creates an instance of a derived class <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.CommandType#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandType/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.CommandType#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ddf69-181">The value was not a valid <see cref="T:System.Data.CommandType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-181">The value was not a valid <see cref="T:System.Data.CommandType" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As OracleConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleConnection ^ Connection { System::Data::OracleClient::OracleConnection ^ get(); void set(System::Data::OracleClient::OracleConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.OracleClient.OracleConnection with get, set" Usage="System.Data.OracleClient.OracleCommand.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddf69-182">Gets or sets the <see cref="T:System.Data.OracleClient.OracleConnection" /> used by this instance of the <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-182">Gets or sets the <see cref="T:System.Data.OracleClient.OracleConnection" /> used by this instance of the <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddf69-183">Die Verbindung mit einer Datenquelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-183">The connection to a data source.</span>
          </span>
          <span data-ttu-id="ddf69-184">Der Standard ist ein NULL-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-184">The default is a null value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddf69-185">Sie können nicht festgelegt werden die <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>, und <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> Eigenschaften auf, wenn die aktuelle Verbindung einen Execute- oder Fetch-Vorgang ausführt.</span><span class="sxs-lookup"><span data-stu-id="ddf69-185">You cannot set the <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>, and <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> properties if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="ddf69-186">Wenn Sie <xref:System.Data.OracleClient.OracleCommand.Connection%2A> festlegen, während eine Transaktion ausgeführt wird und die <xref:System.Data.OracleClient.OracleCommand.Transaction%2A>-Eigenschaft nicht NULL ist, wird eine <xref:System.InvalidOperationException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="ddf69-186">If you set <xref:System.Data.OracleClient.OracleCommand.Connection%2A> while a transaction is in progress and the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property is not null, an <xref:System.InvalidOperationException> is generated.</span></span> <span data-ttu-id="ddf69-187">Setzen Sie <xref:System.Data.OracleClient.OracleCommand.Connection%2A> nach dem Commit oder Rollback ausgeführt, für die Transaktion und die <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> Eigenschaft ist nicht null ist, die <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> Eigenschaft klicken Sie dann auf den Wert null festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="ddf69-187">If you set <xref:System.Data.OracleClient.OracleCommand.Connection%2A> after the transaction has been committed or rolled back, and the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property is not null, the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property is then set to a null value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ddf69-188">Das folgende Beispiel erstellt eine <xref:System.Data.OracleClient.OracleCommand> und legt einige ihrer Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="ddf69-188">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.Connection#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Connection/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Connection#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Connection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ddf69-189">The <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> property was changed while a transaction was in progress.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-189">The <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> property was changed while a transaction was in progress.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDbParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameter CreateDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbParameter CreateDbParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.CreateDbParameter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbParameter () As DbParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbParameter ^ CreateDbParameter();" />
      <MemberSignature Language="F#" Value="override this.CreateDbParameter : unit -&gt; System.Data.Common.DbParameter" Usage="oracleCommand.CreateDbParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As OracleParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleParameter ^ CreateParameter();" />
      <MemberSignature Language="F#" Value="override this.CreateParameter : unit -&gt; System.Data.OracleClient.OracleParameter" Usage="oracleCommand.CreateParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ddf69-190">Creates a new instance of an <see cref="T:System.Data.OracleClient.OracleParameter" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-190">Creates a new instance of an <see cref="T:System.Data.OracleClient.OracleParameter" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ddf69-191">An <see cref="T:System.Data.OracleClient.OracleParameter" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-191">An <see cref="T:System.Data.OracleClient.OracleParameter" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddf69-192">Die <xref:System.Data.OracleClient.OracleCommand.CreateParameter%2A> Methode ist eine stark typisierte Version <xref:System.Data.IDbCommand.CreateParameter%2A>.</span><span class="sxs-lookup"><span data-stu-id="ddf69-192">The <xref:System.Data.OracleClient.OracleCommand.CreateParameter%2A> method is a strongly-typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); void set(System::Data::Common::DbConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbConnection : System.Data.Common.DbConnection with get, set" Usage="System.Data.OracleClient.OracleCommand.DbConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbParameterCollection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbParameterCollection DbParameterCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbParameterCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbParameterCollection As DbParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbParameterCollection ^ DbParameterCollection { System::Data::Common::DbParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbParameterCollection : System.Data.Common.DbParameterCollection" Usage="System.Data.OracleClient.OracleCommand.DbParameterCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction DbTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction DbTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbTransaction" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbTransaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbTransaction ^ DbTransaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbTransaction : System.Data.Common.DbTransaction with get, set" Usage="System.Data.OracleClient.OracleCommand.DbTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeVisible">
      <MemberSignature Language="C#" Value="public override bool DesignTimeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeVisible" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DesignTimeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DesignTimeVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DesignTimeVisible : bool with get, set" Usage="System.Data.OracleClient.OracleCommand.DesignTimeVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddf69-193">Gets or sets a value indicating whether the command object should be visible in a customized interface control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-193">Gets or sets a value indicating whether the command object should be visible in a customized interface control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddf69-194">
            <see langword="true" />, wenn das Befehlsobjekt in einem Steuerelement sichtbar sein soll andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-194">
              <see langword="true" />, if the command object should be visible in a control; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ddf69-195">Die Standardeinstellung ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-195">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader ExecuteDbDataReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDbDataReader (behavior As CommandBehavior) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbDataReader ^ ExecuteDbDataReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDbDataReader : System.Data.CommandBehavior -&gt; System.Data.Common.DbDataReader" Usage="oracleCommand.ExecuteDbDataReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public override int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ExecuteNonQuery();" />
      <MemberSignature Language="F#" Value="override this.ExecuteNonQuery : unit -&gt; int" Usage="oracleCommand.ExecuteNonQuery " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ddf69-196">Executes an SQL statement against the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and returns the number of rows affected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-196">Executes an SQL statement against the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and returns the number of rows affected.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ddf69-197">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-197">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span>
          </span>
          <span data-ttu-id="ddf69-198">For CREATE TABLE and DROP TABLE statements, the return value is 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-198">For CREATE TABLE and DROP TABLE statements, the return value is 0.</span>
          </span>
          <span data-ttu-id="ddf69-199">For all other types of statements, the return value is -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-199">For all other types of statements, the return value is -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddf69-200">Können Sie <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> zum Ausführen von Katalogoperationen (z. B. die Struktur einer Datenbank Abfragen oder Erstellen von Datenbankobjekten, z. B. Tabellen) oder So ändern Sie die Daten in einer Datenbank ohne Verwendung einer <xref:System.Data.DataSet>, durch Ausführen von Update-, INSERT- oder zu löschen -Anweisungen.</span><span class="sxs-lookup"><span data-stu-id="ddf69-200">You can use <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables); or to change the data in a database, without using a <xref:System.Data.DataSet>, by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="ddf69-201">Obwohl <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> nicht Zeilen zurückgibt, alle Ausgabeparameter oder Rückgabewerte Parametern zugeordnete mit Daten aufgefüllt werden.</span><span class="sxs-lookup"><span data-stu-id="ddf69-201">Although <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> does not return any rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 <span data-ttu-id="ddf69-202">Für Update-, INSERT- und DELETE-Anweisungen ist der Rückgabewert die Anzahl der Zeilen, die von dem Befehl betroffen sind.</span><span class="sxs-lookup"><span data-stu-id="ddf69-202">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="ddf69-203">Für CREATE TABLE und DROP TABLE-Anweisungen ist der Rückgabewert 0.</span><span class="sxs-lookup"><span data-stu-id="ddf69-203">For CREATE TABLE and DROP TABLE statements, the return value is 0.</span></span> <span data-ttu-id="ddf69-204">Für alle anderen Anweisungstypen ist der Rückgabewert -1.</span><span class="sxs-lookup"><span data-stu-id="ddf69-204">For all other types of statements, the return value is -1.</span></span> <span data-ttu-id="ddf69-205">Wenn ein Rollback ausgeführt wird, ist der Rückgabewert auch -1.</span><span class="sxs-lookup"><span data-stu-id="ddf69-205">If a rollback occurs, the return value is also -1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ddf69-206">Das folgende Beispiel erstellt eine <xref:System.Data.OracleClient.OracleCommand> und führt ihn dann mithilfe von <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>.</span><span class="sxs-lookup"><span data-stu-id="ddf69-206">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and then executes it by using <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>.</span></span> <span data-ttu-id="ddf69-207">Im Beispiel wird übergeben, eine Zeichenfolge, die eine SQL-Anweisung (z. B. Update-, INSERT- oder DELETE) ist und eine Zeichenfolge, für die Verbindung mit der Datenbank verwendet.</span><span class="sxs-lookup"><span data-stu-id="ddf69-207">The example is passed a string that is an SQL statement (such as UPDATE, INSERT, or DELETE) and a string to use to connect to the database.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteNonQuery#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteNonQuery/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteNonQuery#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteNonQuery/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ddf69-208">The connection does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-208">The connection does not exist.</span>
          </span>
          <span data-ttu-id="ddf69-209">-or-  The connection is not open.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-209">-or-  The connection is not open.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteOracleNonQuery">
      <MemberSignature Language="C#" Value="public int ExecuteOracleNonQuery (out System.Data.OracleClient.OracleString rowid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteOracleNonQuery([out] valuetype System.Data.OracleClient.OracleString&amp; rowid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteOracleNonQuery (ByRef rowid As OracleString) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteOracleNonQuery([Runtime::InteropServices::Out] System::Data::OracleClient::OracleString % rowid);" />
      <MemberSignature Language="F#" Value="member this.ExecuteOracleNonQuery :  -&gt; int" Usage="oracleCommand.ExecuteOracleNonQuery rowid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowid" Type="System.Data.OracleClient.OracleString&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rowid">
          <span data-ttu-id="ddf69-210">A base64 string representation of the actual row ID in the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-210">A base64 string representation of the actual row ID in the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddf69-211">Executes an SQL statement against the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and returns the number of rows affected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-211">Executes an SQL statement against the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and returns the number of rows affected.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ddf69-212">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-212">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span>
          </span>
          <span data-ttu-id="ddf69-213">For CREATE TABLE and DROP TABLE statements, the return value is 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-213">For CREATE TABLE and DROP TABLE statements, the return value is 0.</span>
          </span>
          <span data-ttu-id="ddf69-214">For all other types of statements, the return value is -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-214">For all other types of statements, the return value is -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddf69-215">Können Sie <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> zum Ausführen von Katalogoperationen (z. B. die Struktur einer Datenbank Abfragen oder Erstellen von Datenbankobjekten, z. B. Tabellen) oder So ändern Sie die Daten in einer Datenbank ohne Verwendung einer <xref:System.Data.DataSet>, durch Ausführen von Update-, INSERT- oder zu löschen -Anweisungen.</span><span class="sxs-lookup"><span data-stu-id="ddf69-215">You can use <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables); or to change the data in a database, without using a <xref:System.Data.DataSet>, by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="ddf69-216"><xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> unterscheidet sich von <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> darin, dass es zurückgegeben `rowid` als ein Ausgabeparameter, wenn eine INSERT-, DELETE- oder UPDATE-Anweisung ausgeführt werden, die genau eine Zeile betrifft.</span><span class="sxs-lookup"><span data-stu-id="ddf69-216"><xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> differs from <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> in that it returns `rowid` as an output parameter if you are executing an INSERT, DELETE, or UPDATE statement that affects exactly one row.</span></span> <span data-ttu-id="ddf69-217">Dadurch können Sie eine Zeile in der Oracle-Datenbank, eindeutig zu identifizieren, die Sie zum Erhöhen der Leistung in nachfolgenden, ähnlichen Abfragen ermöglichen können.</span><span class="sxs-lookup"><span data-stu-id="ddf69-217">This allows you to uniquely identify a row in the Oracle database, which can allow you to increase performance in subsequent, related queries.</span></span>  
  
 <span data-ttu-id="ddf69-218">Obwohl <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> nicht Zeilen zurückgibt, alle Ausgabeparameter oder Rückgabewerte Parametern zugeordnete mit Daten aufgefüllt werden.</span><span class="sxs-lookup"><span data-stu-id="ddf69-218">Although <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> does not return any rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ddf69-219">The connection does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-219">The connection does not exist.</span>
          </span>
          <span data-ttu-id="ddf69-220">-or-  The connection is not open.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-220">-or-  The connection is not open.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteOracleScalar">
      <MemberSignature Language="C#" Value="public object ExecuteOracleScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ExecuteOracleScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteOracleScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteOracleScalar();" />
      <MemberSignature Language="F#" Value="member this.ExecuteOracleScalar : unit -&gt; obj" Usage="oracleCommand.ExecuteOracleScalar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ddf69-221">Executes the query, and returns the first column of the first row in the result set returned by the query as an Oracle-specific data type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-221">Executes the query, and returns the first column of the first row in the result set returned by the query as an Oracle-specific data type.</span>
          </span>
          <span data-ttu-id="ddf69-222">Extra columns or rows are ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-222">Extra columns or rows are ignored.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ddf69-223">The first column of the first row in the result set as an Oracle-specific data type, or a null reference if the result is a <see langword="REF CURSOR" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-223">The first column of the first row in the result set as an Oracle-specific data type, or a null reference if the result is a <see langword="REF CURSOR" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddf69-224">Verwenden der <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> Methode, um einen einzelnen Wert (z. B. einen Aggregatwert) aus einer Datenbank abzurufen.</span><span class="sxs-lookup"><span data-stu-id="ddf69-224">Use the <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database.</span></span> <span data-ttu-id="ddf69-225">Dies erfordert weniger Code als die Verwendung der <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> -Methode, und klicken Sie dann die Vorgänge, die zum Generieren des einzelnen Werts aus den Daten, die vom Durchführen einer <xref:System.Data.OracleClient.OracleDataReader>.</span><span class="sxs-lookup"><span data-stu-id="ddf69-225">This requires less code than using the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method, and then performing the operations necessary to generate the single value from the data returned by an <xref:System.Data.OracleClient.OracleDataReader>.</span></span>  
  
 <span data-ttu-id="ddf69-226">Eine typische <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> Abfrage wie im folgenden C#-Beispiel formatiert werden kann:</span><span class="sxs-lookup"><span data-stu-id="ddf69-226">A typical <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> query can be formatted as in the following C# example:</span></span>  
  
```  
command.CommandText = "SELECT COUNT(*) AS NumberOfRegions FROM Region";  
count = command.ExecuteOracleScalar();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ddf69-227">Sends the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> to the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and builds an <see cref="T:System.Data.OracleClient.OracleDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-227">Sends the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> to the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and builds an <see cref="T:System.Data.OracleClient.OracleDataReader" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As OracleDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleDataReader ^ ExecuteReader();" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : unit -&gt; System.Data.OracleClient.OracleDataReader" Usage="oracleCommand.ExecuteReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ddf69-228">Sends the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> to the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and builds an <see cref="T:System.Data.OracleClient.OracleDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-228">Sends the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> to the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and builds an <see cref="T:System.Data.OracleClient.OracleDataReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ddf69-229">An <see cref="T:System.Data.OracleClient.OracleDataReader" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-229">An <see cref="T:System.Data.OracleClient.OracleDataReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddf69-230">Wenn die <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> -Eigenschaftensatz auf `StoredProcedure`, <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> -Eigenschaft sollte auf den Namen der gespeicherten Prozedur festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="ddf69-230">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="ddf69-231">Der Befehl führt dann diese gespeicherte Prozedur beim Aufrufen <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.</span><span class="sxs-lookup"><span data-stu-id="ddf69-231">The command then executes this stored procedure when you call <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="ddf69-232">Mehr als eine <xref:System.Data.OracleClient.OracleDataReader> können gleichzeitig geöffnet sein.</span><span class="sxs-lookup"><span data-stu-id="ddf69-232">More than one <xref:System.Data.OracleClient.OracleDataReader> can be open at any given time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ddf69-233">Das folgende Beispiel erstellt eine <xref:System.Data.OracleClient.OracleCommand>, und klicken Sie dann führt sie durch Übergeben einer Zeichenfolge mit einer SQL SELECT-Anweisung und eine Zeichenfolge, für die Verbindung mit der Datenquelle verwendet.</span><span class="sxs-lookup"><span data-stu-id="ddf69-233">The following example creates an <xref:System.Data.OracleClient.OracleCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteReader1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader1/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteReader1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As OracleDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : System.Data.CommandBehavior -&gt; System.Data.OracleClient.OracleDataReader" Usage="oracleCommand.ExecuteReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">
          <span data-ttu-id="ddf69-234">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-234">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddf69-235">Sends the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> to the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" />, and builds an <see cref="T:System.Data.OracleClient.OracleDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-235">Sends the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> to the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" />, and builds an <see cref="T:System.Data.OracleClient.OracleDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ddf69-236">An <see cref="T:System.Data.OracleClient.OracleDataReader" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-236">An <see cref="T:System.Data.OracleClient.OracleDataReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddf69-237">Wenn Sie erwarten, die SQL-Anweisung dass, um nur eine einzelne Zeile zurückgeben, wird durch Angabe `SingleRow` als die <xref:System.Data.CommandBehavior> Wert kann die Anwendungsleistung verbessern.</span><span class="sxs-lookup"><span data-stu-id="ddf69-237">If you expect your SQL statement to return only a single row, specifying `SingleRow` as the <xref:System.Data.CommandBehavior> value may improve application performance.</span></span>  
  
 <span data-ttu-id="ddf69-238">Wenn die <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> -Eigenschaftensatz auf `StoredProcedure`, <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> -Eigenschaft sollte auf den Namen der gespeicherten Prozedur festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="ddf69-238">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="ddf69-239">Der Befehl führt dann diese gespeicherte Prozedur beim Aufrufen <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.</span><span class="sxs-lookup"><span data-stu-id="ddf69-239">The command then executes this stored procedure when you call <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="ddf69-240">Die <xref:System.Data.OracleClient.OracleDataReader> unterstützt einen speziellen Modus, der große binäre Werte effizient gelesen werden kann.</span><span class="sxs-lookup"><span data-stu-id="ddf69-240">The <xref:System.Data.OracleClient.OracleDataReader> supports a special mode that enables large binary values to be read efficiently.</span></span> <span data-ttu-id="ddf69-241">Weitere Informationen finden Sie unter den `SequentialAccess` zum <xref:System.Data.CommandBehavior>.</span><span class="sxs-lookup"><span data-stu-id="ddf69-241">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="ddf69-242">Mehr als eine <xref:System.Data.OracleClient.OracleDataReader> können gleichzeitig geöffnet sein.</span><span class="sxs-lookup"><span data-stu-id="ddf69-242">More than one <xref:System.Data.OracleClient.OracleDataReader> can be open at any given time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ddf69-243">Das folgende Beispiel erstellt eine <xref:System.Data.OracleClient.OracleCommand>, und klicken Sie dann führt sie durch Übergeben einer Zeichenfolge mit einer SQL SELECT-Anweisung und eine Zeichenfolge, für die Verbindung mit der Datenbank verwendet.</span><span class="sxs-lookup"><span data-stu-id="ddf69-243">The following example creates an <xref:System.Data.OracleClient.OracleCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the database.</span></span> <span data-ttu-id="ddf69-244"><xref:System.Data.CommandBehavior> Legen Sie dann auf <xref:System.Data.CommandBehavior.CloseConnection>.</span><span class="sxs-lookup"><span data-stu-id="ddf69-244"><xref:System.Data.CommandBehavior> is then set to <xref:System.Data.CommandBehavior.CloseConnection>.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteReader2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader2/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteReader2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader2/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public override object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ExecuteScalar();" />
      <MemberSignature Language="F#" Value="override this.ExecuteScalar : unit -&gt; obj" Usage="oracleCommand.ExecuteScalar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ddf69-245">Executes the query, and returns the first column of the first row in the result set returned by the query as a .NET Framework data type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-245">Executes the query, and returns the first column of the first row in the result set returned by the query as a .NET Framework data type.</span>
          </span>
          <span data-ttu-id="ddf69-246">Extra columns or rows are ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-246">Extra columns or rows are ignored.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ddf69-247">The first column of the first row in the result set as a .NET Framework data type, or a null reference if the result set is empty or the result is a <see langword="REF CURSOR" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-247">The first column of the first row in the result set as a .NET Framework data type, or a null reference if the result set is empty or the result is a <see langword="REF CURSOR" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddf69-248">Verwenden der <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> Methode, um einen einzelnen Wert (z. B. einen Aggregatwert) aus einer Datenbank abzurufen.</span><span class="sxs-lookup"><span data-stu-id="ddf69-248">Use the <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database.</span></span> <span data-ttu-id="ddf69-249">Dies erfordert weniger Code als die Verwendung der <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> -Methode, und klicken Sie dann die Vorgänge, die zum Generieren des einzelnen Werts aus den Daten, die vom Durchführen einer <xref:System.Data.OracleClient.OracleDataReader>.</span><span class="sxs-lookup"><span data-stu-id="ddf69-249">This requires less code than using the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method, and then performing the operations necessary to generate the single value from the data returned by an <xref:System.Data.OracleClient.OracleDataReader>.</span></span>  
  
 <span data-ttu-id="ddf69-250">Eine typische <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> Abfrage wie im folgenden C#-Beispiel formatiert werden kann:</span><span class="sxs-lookup"><span data-stu-id="ddf69-250">A typical <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> query can be formatted as in the following C# example:</span></span>  
  
```  
CommandText = "SELECT COUNT(*) FROM Region";  
Int32 count = (int32) ExecuteScalar();  
```  
  
   
  
## Examples  
 <span data-ttu-id="ddf69-251">Das folgende Beispiel erstellt eine <xref:System.Data.OracleClient.OracleCommand> und führt dann mit <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>.</span><span class="sxs-lookup"><span data-stu-id="ddf69-251">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and then executes it using <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>.</span></span> <span data-ttu-id="ddf69-252">Im Beispiel wird übergeben, eine Zeichenfolge, die eine SQL-Anweisung ist, die eine aggregierte Ergebnis zurückgibt, und eine Zeichenfolge, für die Verbindung mit der Datenbank verwendet.</span><span class="sxs-lookup"><span data-stu-id="ddf69-252">The example is passed a string that is an SQL statement that returns an aggregate result, and a string to use to connect to the database.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteScalar/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteScalar/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As OracleParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleParameterCollection ^ Parameters { System::Data::OracleClient::OracleParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Data.OracleClient.OracleParameterCollection" Usage="System.Data.OracleClient.OracleCommand.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddf69-253">Gets the <see cref="T:System.Data.OracleClient.OracleParameterCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-253">Gets the <see cref="T:System.Data.OracleClient.OracleParameterCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddf69-254">Die Parameter der SQL-Anweisung bzw. der gespeicherten Prozedur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-254">The parameters of the SQL statement or stored procedure.</span>
          </span>
          <span data-ttu-id="ddf69-255">Der Standard ist eine leere Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-255">The default is an empty collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddf69-256">Wenn die <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> -Eigenschaftensatz auf `StoredProcedure`, <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> -Eigenschaft sollte auf den Namen der gespeicherten Prozedur festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="ddf69-256">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="ddf69-257">Der Benutzer möglicherweise erforderlich, um Escapezeichensyntax verwenden, wenn der Name der gespeicherten Prozedur keine Sonderzeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="ddf69-257">The user may be required to use escape character syntax if the stored procedure name contains any special characters.</span></span> <span data-ttu-id="ddf69-258">Der Befehl führt diese gespeicherte Prozedur auf, wenn Sie eine der Execute-Methoden aufrufen.</span><span class="sxs-lookup"><span data-stu-id="ddf69-258">The command executes this stored procedure when you call one of the Execute methods.</span></span>  
  
 <span data-ttu-id="ddf69-259">Die .NET Framework-Datenanbieter für Oracle unterstützt keine Fragezeichenplatzhalter (?) aus, für die Übergabe von Parametern an eine SQL-Anweisung wird aufgerufen, indem ein <xref:System.Data.OracleClient.OracleCommand> von `CommandType.Text`.</span><span class="sxs-lookup"><span data-stu-id="ddf69-259">The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`.</span></span> <span data-ttu-id="ddf69-260">In diesem Fall müssen benannten Parameter verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="ddf69-260">In this case, named parameters must be used.</span></span> <span data-ttu-id="ddf69-261">Zum Beispiel:</span><span class="sxs-lookup"><span data-stu-id="ddf69-261">For example:</span></span>  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 <span data-ttu-id="ddf69-262">Bei Verwendung von benannten Parametern in einer SQL­Anweisung wird aufgerufen, durch eine <xref:System.Data.OracleClient.OracleCommand> von `CommandType.Text`, müssen Sie den Namen des Parameters mit einem Doppelpunkt (:).) voranstellen.</span><span class="sxs-lookup"><span data-stu-id="ddf69-262">When using named parameters in an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`, you must precede the parameter name with a colon (:).</span></span> <span data-ttu-id="ddf69-263">Allerdings in einer gespeicherten Prozedur oder beim Verweisen auf einen benannten Parameter an anderer Stelle in Ihrem Code (z. B. beim Hinzufügen von <xref:System.Data.OracleClient.OracleParameter> Objekte die <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> Eigenschaft), fügen Sie vor den benannten Parameter mit einem Doppelpunkt (:).</span><span class="sxs-lookup"><span data-stu-id="ddf69-263">However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding <xref:System.Data.OracleClient.OracleParameter> objects to the <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> property), do not precede the named parameter with a colon (:).</span></span> <span data-ttu-id="ddf69-264">Die .NET Framework-Datenanbieter für Oracle stellt den Doppelpunkt automatisch bereit.</span><span class="sxs-lookup"><span data-stu-id="ddf69-264">The .NET Framework Data Provider for Oracle supplies the colon automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ddf69-265">Das folgende Beispiel erstellt eine <xref:System.Data.OracleClient.OracleCommand> und seine Parameter werden angezeigt.</span><span class="sxs-lookup"><span data-stu-id="ddf69-265">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and displays its parameters.</span></span> <span data-ttu-id="ddf69-266">Um dies zu erreichen, wird die Methode übergeben eine <xref:System.Data.OracleClient.OracleConnection>, eine Abfragezeichenfolge, die eine SQL SELECT-Anweisung, und ein Array von <xref:System.Data.OracleClient.OracleParameter> Objekte.</span><span class="sxs-lookup"><span data-stu-id="ddf69-266">To accomplish this, the method is passed an <xref:System.Data.OracleClient.OracleConnection>, a query string that is an SQL SELECT statement, and an array of <xref:System.Data.OracleClient.OracleParameter> objects.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.Parameters#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Parameters/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Parameters#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Parameters/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public override void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Prepare();" />
      <MemberSignature Language="F#" Value="override this.Prepare : unit -&gt; unit" Usage="oracleCommand.Prepare " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ddf69-267">Creates a prepared (or compiled) version of the command at the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-267">Creates a prepared (or compiled) version of the command at the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddf69-268">Vor dem Aufruf <xref:System.Data.OracleClient.OracleCommand.Prepare%2A>, geben Sie den Datentyp jedes Parameters in der Anweisung vorbereitet werden.</span><span class="sxs-lookup"><span data-stu-id="ddf69-268">Before you call <xref:System.Data.OracleClient.OracleCommand.Prepare%2A>, specify the data type of each parameter in the statement to be prepared.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ddf69-269">The <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> is not set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-269">The <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> is not set.</span>
          </span>
          <span data-ttu-id="ddf69-270">-or-  The <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> is not <see cref="M:System.Data.OracleClient.OracleConnection.Open" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-270">-or-  The <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> is not <see cref="M:System.Data.OracleClient.OracleConnection.Open" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResetCommandTimeout">
      <MemberSignature Language="C#" Value="public void ResetCommandTimeout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCommandTimeout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ResetCommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCommandTimeout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCommandTimeout();" />
      <MemberSignature Language="F#" Value="member this.ResetCommandTimeout : unit -&gt; unit" Usage="oracleCommand.ResetCommandTimeout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ddf69-271">Resets the <see cref="P:System.Data.OracleClient.OracleCommand.CommandTimeout" /> property to the default value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-271">Resets the <see cref="P:System.Data.OracleClient.OracleCommand.CommandTimeout" /> property to the default value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddf69-272">Der Standardwert der <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> beträgt 30 Sekunden.</span><span class="sxs-lookup"><span data-stu-id="ddf69-272">The default value of the <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> is 30 seconds.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.CreateParameter">
      <MemberSignature Language="C#" Value="System.Data.IDbDataParameter IDbCommand.CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbDataParameter System.Data.IDbCommand.CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.System#Data#IDbCommand#CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Function CreateParameter () As IDbDataParameter Implements IDbCommand.CreateParameter" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbDataParameter ^ System.Data.IDbCommand.CreateParameter() = System::Data::IDbCommand::CreateParameter;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.CreateParameter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbDataParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.ExecuteReader">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDbCommand.ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDbCommand.ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.System#Data#IDbCommand#ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Function ExecuteReader () As IDataReader Implements IDbCommand.ExecuteReader" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDbCommand.ExecuteReader() = System::Data::IDbCommand::ExecuteReader;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteReader</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.ExecuteReader">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDbCommand.ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDbCommand.ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Function ExecuteReader (behavior As CommandBehavior) As IDataReader Implements IDbCommand.ExecuteReader" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDbCommand.ExecuteReader(System::Data::CommandBehavior behavior) = System::Data::IDbCommand::ExecuteReader;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As OracleTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleTransaction ^ Transaction { System::Data::OracleClient::OracleTransaction ^ get(); void set(System::Data::OracleClient::OracleTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transaction : System.Data.OracleClient.OracleTransaction with get, set" Usage="System.Data.OracleClient.OracleCommand.Transaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddf69-273">Gets or sets the <see cref="T:System.Data.OracleClient.OracleTransaction" /> within which the <see cref="T:System.Data.OracleClient.OracleCommand" /> executes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-273">Gets or sets the <see cref="T:System.Data.OracleClient.OracleTransaction" /> within which the <see cref="T:System.Data.OracleClient.OracleCommand" /> executes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddf69-274">Eine <see cref="T:System.Data.OracleClient.OracleTransaction" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-274">An <see cref="T:System.Data.OracleClient.OracleTransaction" />.</span>
          </span>
          <span data-ttu-id="ddf69-275">Der Standard ist ein NULL-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-275">The default is a null value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddf69-276">Sie können keine Festlegen der <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> Eigenschaft, wenn sie bereits auf einen bestimmten Wert festgelegt ist, und der Befehl während der Ausführung ist.</span><span class="sxs-lookup"><span data-stu-id="ddf69-276">You cannot set the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property if it is already set to a specific value, and the command is in the process of executing.</span></span> <span data-ttu-id="ddf69-277">Wenn Sie die Transaktionseigenschaft auf eine <xref:System.Data.OracleClient.OracleTransaction> -Objekt, das auf die gleiche unverbunden ist <xref:System.Data.OracleClient.OracleConnection> als die <xref:System.Data.OracleClient.OracleCommand> Objekt ist, wird eine Ausnahme wird ausgelöst, wenn Sie das nächste Mal mit dem Sie versuchen, eine Anweisung auszuführen.</span><span class="sxs-lookup"><span data-stu-id="ddf69-277">If you set the transaction property to an <xref:System.Data.OracleClient.OracleTransaction> object that is not connected to the same <xref:System.Data.OracleClient.OracleConnection> as the <xref:System.Data.OracleClient.OracleCommand> object, an exception will be thrown the next time you attempt to execute a statement.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedRowSource : System.Data.UpdateRowSource with get, set" Usage="System.Data.OracleClient.OracleCommand.UpdatedRowSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddf69-278">Gets or sets a value that specifies how the <see langword="Update" /> method should apply command results to the <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-278">Gets or sets a value that specifies how the <see langword="Update" /> method should apply command results to the <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddf69-279">Einer der <see cref="T:System.Data.UpdateRowSource" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-279">One of the <see cref="T:System.Data.UpdateRowSource" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddf69-280">Der Standardwert <xref:System.Data.UpdateRowSource> Wert `Both` , sofern der Befehl automatisch generiert wurde (wie im Fall von der <xref:System.Data.OracleClient.OracleCommandBuilder>), in diesem Fall ist die Standardeinstellung `None`.</span><span class="sxs-lookup"><span data-stu-id="ddf69-280">The default <xref:System.Data.UpdateRowSource> value is `Both` unless the command is automatically generated (as in the case of the <xref:System.Data.OracleClient.OracleCommandBuilder>), in which case the default is `None`.</span></span>  
  
 <span data-ttu-id="ddf69-281">Weitere Informationen zur Verwendung der <xref:System.Data.UpdateRowSource> -Eigenschaft finden Sie unter [DataAdapter-Parameter](~/docs/framework/data/adonet/dataadapter-parameters.md).</span><span class="sxs-lookup"><span data-stu-id="ddf69-281">For more information about using the <xref:System.Data.UpdateRowSource> property, see [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ddf69-282">The value entered was not one of the <see cref="T:System.Data.UpdateRowSource" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddf69-282">The value entered was not one of the <see cref="T:System.Data.UpdateRowSource" /> values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>