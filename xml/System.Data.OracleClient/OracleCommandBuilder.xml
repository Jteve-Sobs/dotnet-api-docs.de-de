<Type Name="OracleCommandBuilder" FullName="System.Data.OracleClient.OracleCommandBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="85fd707025e775d611d26d100fb1536b400fb13f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36684555" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OracleCommandBuilder : System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleCommandBuilder extends System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleCommandBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleCommandBuilder&#xA;Inherits DbCommandBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleCommandBuilder sealed : System::Data::Common::DbCommandBuilder" />
  <TypeSignature Language="F#" Value="type OracleCommandBuilder = class&#xA;    inherit DbCommandBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommandBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("OracleCommandBuilder has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Generiert automatisch Befehle für einzelne Tabellen, durch die an einem <see cref="T:System.Data.DataSet" /> vorgenommene Änderungen mit der zugeordneten Datenbank abgeglichen werden. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Typ ist veraltet und wird in einer zukünftigen Version von .NET Framework entfernt. Weitere Informationen finden Sie unter [Oracle und ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).  
  
 Die <xref:System.Data.OracleClient.OracleDataAdapter> generiert die SQL-Anweisungen zum Abstimmen von Änderungen an nicht automatisch eine <xref:System.Data.DataSet> der Datenbank zugeordnet. Allerdings können Sie erstellen eine <xref:System.Data.OracleClient.OracleCommandBuilder> -Objekt, generiert der SQL-Anweisungen für einzelne Tabellen Updates durch Festlegen, der <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> Eigenschaft von der <xref:System.Data.OracleClient.OracleDataAdapter>. Anschließend wird die <xref:System.Data.OracleClient.OracleCommandBuilder> generiert zusätzlichen SQL­Anweisungen, die Sie nicht festlegen.  
  
 Die Beziehung zwischen einer <xref:System.Data.OracleClient.OracleDataAdapter> und dem zugehörigen <xref:System.Data.OracleClient.OracleCommandBuilder> ist immer 1: 1. Um diese Zuordnung zu erstellen, legen Sie die <xref:System.Data.OracleClient.OracleDataAdapter> Eigenschaft von der <xref:System.Data.OracleClient.OracleCommandBuilder> Objekt. Dies bewirkt, dass die <xref:System.Data.OracleClient.OracleCommandBuilder> selbst registrieren als Listener, die Ausgabe des erzeugt <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> Ereignisse mit Auswirkungen auf die <xref:System.Data.DataSet>.  
  
 Zum Generieren von INSERT-, Update- oder DELETE-Anweisungen, die <xref:System.Data.OracleClient.OracleCommandBuilder> verwendet die <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> Eigenschaft, um die erforderlichen Metadaten abzurufen.  
  
 Die <xref:System.Data.OracleClient.OracleCommandBuilder> verwendet auch die <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, und <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> Eigenschaften verweist die <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A>.  
  
 Beim Aufrufen <xref:System.Data.Common.DbDataAdapter.Dispose%2A>, <xref:System.Data.OracleClient.OracleCommandBuilder> aufgehoben ist die <xref:System.Data.OracleClient.OracleDataAdapter>, und die generierten Befehle sind nicht mehr verwendet.  
  
   
  
## Examples  
 Im folgenden Beispiel wird <xref:System.Data.OracleClient.OracleCommand>, zusammen mit <xref:System.Data.OracleClient.OracleDataAdapter> und <xref:System.Data.OracleClient.OracleConnection>, um Zeilen aus einer Datenbank auszuwählen. Im Beispiel wird eine initialisierte übergeben <xref:System.Data.DataSet>, eine Verbindungszeichenfolge, eine Abfragezeichenfolge, die eine SQL SELECT-Anweisung und eine Zeichenfolge, die den Namen der Datenbanktabelle ist. Klicken Sie dann das Beispiel erstellt eine <xref:System.Data.OracleClient.OracleCommandBuilder>.  
  
```vb  
Private Function SelectOracleRows(connection As String, queryString As String, tableName As String) As DataSet  
  
   Dim connection As New OracleConnection(connection)  
   Dim dataAdapter As New OracleDataAdapter()  
   Dim dataSet As DataSet = New DataSet  
  
   dataAdapter.SelectCommand = New OracleCommand(queryString, connection)  
  
   Dim cmdBuilder As OracleCommandBuilder = New OracleCommandBuilder(dataAdapter)  
  
   connection.Open()  
   dataAdapter.Fill(dataSet, tableName)  
      ' Code to modify data in DataSet here   
      ' Without the OracleCommandBuilder this line would fail.  
   dataAdapter.Update(dataSet, tableName)  
   connection.Close()  
End Function  
```  
  
```csharp  
public static DataSet SelectOracleSrvRows(string myConnection, string mySelectQuery, string myTableName)  
{  
   OracleConnection myConn = new OracleConnection(myConnection);  
   OracleDataAdapter myDataAdapter = new OracleDataAdapter();  
   myDataAdapter.SelectCommand = new OracleCommand(mySelectQuery, myConn);  
   OracleCommandBuilder cb = new OracleCommandBuilder(myDataAdapter);  
  
   myConn.Open();  
   DataSet ds = new DataSet();  
   myDataAdapter.Fill(ds, myTableName);  
  
   //Code to modify data in DataSet goes here...  
  
   //Without the OracleCommandBuilder this line would fail.  
   myDataAdapter.Update(ds, myTableName);  
   myConn.Close();  
   return ds;  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz des <see cref="T:System.Data.OracleClient.OracleCommandBuilder" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommandBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz des <see cref="T:System.Data.OracleClient.OracleCommandBuilder" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.OracleClient.OracleCommandBuilder> registriert sich selbst als einen Listener für <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> Ereignisse, die generiert werden, indem Sie die <xref:System.Data.OracleClient.OracleDataAdapter> in dieser Eigenschaft angegeben.  
  
 Beim Erstellen einer neuen Instanz der <xref:System.Data.OracleClient.OracleCommandBuilder>, alle vorhandenen <xref:System.Data.OracleClient.OracleCommandBuilder> zugeordnete <xref:System.Data.OracleClient.OracleDataAdapter> freigegeben wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommandBuilder (System.Data.OracleClient.OracleDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.OracleClient.OracleDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.#ctor(System.Data.OracleClient.OracleDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (adapter As OracleDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommandBuilder(System::Data::OracleClient::OracleDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleCommandBuilder : System.Data.OracleClient.OracleDataAdapter -&gt; System.Data.OracleClient.OracleCommandBuilder" Usage="new System.Data.OracleClient.OracleCommandBuilder adapter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.OracleClient.OracleDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">Ein <see cref="T:System.Data.OracleClient.OracleDataAdapter" />-Objekt, das diesem <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> zugeordnet werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.OracleClient.OracleCommandBuilder" />-Klasse mit dem zugeordneten <see cref="T:System.Data.OracleClient.OracleDataAdapter" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.OracleClient.OracleCommandBuilder> registriert sich selbst als einen Listener für <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> Ereignisse, die generiert werden, indem Sie die <xref:System.Data.OracleClient.OracleDataAdapter> in dieser Eigenschaft angegeben.  
  
 Beim Erstellen einer neuen Instanz der <xref:System.Data.OracleClient.OracleCommandBuilder>, alle vorhandenen <xref:System.Data.OracleClient.OracleCommandBuilder> zugeordnete <xref:System.Data.OracleClient.OracleDataAdapter> freigegeben wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyParameterInfo">
      <MemberSignature Language="C#" Value="protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ApplyParameterInfo(class System.Data.Common.DbParameter parameter, class System.Data.DataRow datarow, valuetype System.Data.StatementType statementType, bool whereClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ApplyParameterInfo(System::Data::Common::DbParameter ^ parameter, System::Data::DataRow ^ datarow, System::Data::StatementType statementType, bool whereClause);" />
      <MemberSignature Language="F#" Value="override this.ApplyParameterInfo : System.Data.Common.DbParameter * System.Data.DataRow * System.Data.StatementType * bool -&gt; unit" Usage="oracleCommandBuilder.ApplyParameterInfo (parameter, datarow, statementType, whereClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
        <Parameter Name="datarow" Type="System.Data.DataRow" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="whereClause" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <param name="datarow">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="whereClause">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogLocation">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CatalogLocation CatalogLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Common.CatalogLocation CatalogLocation" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.CatalogLocation" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CatalogLocation As CatalogLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::Common::CatalogLocation CatalogLocation { System::Data::Common::CatalogLocation get(); void set(System::Data::Common::CatalogLocation value); };" />
      <MemberSignature Language="F#" Value="member this.CatalogLocation : System.Data.Common.CatalogLocation with get, set" Usage="System.Data.OracleClient.OracleCommandBuilder.CatalogLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.CatalogLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Legt die <see cref="T:System.Data.Common.CatalogLocation" /> für eine Instanz der <see cref="T:System.Data.Common.DbCommandBuilder" />-Klasse fest oder ruft diese ab.</summary>
        <value>Ein <see cref="T:System.Data.Common.CatalogLocation" />-Objekt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogSeparator">
      <MemberSignature Language="C#" Value="public override string CatalogSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.CatalogSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CatalogSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CatalogSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CatalogSeparator : string with get, set" Usage="System.Data.OracleClient.OracleCommandBuilder.CatalogSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Legt eine Zeichenfolge als Katalogtrennzeichen für eine Instanz der <see cref="T:System.Data.Common.DbCommandBuilder" />-Klasse fest oder ruft diese ab.</summary>
        <value>Eine Zeichenfolge, die das Katalogtrennzeichen zur Verwendung mit einer Instanz der <see cref="T:System.Data.Common.DbCommandBuilder" />-Klasse angibt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataAdapter">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDataAdapter DataAdapter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleDataAdapter DataAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.DataAdapter" />
      <MemberSignature Language="VB.NET" Value="Public Property DataAdapter As OracleDataAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleDataAdapter ^ DataAdapter { System::Data::OracleClient::OracleDataAdapter ^ get(); void set(System::Data::OracleClient::OracleDataAdapter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataAdapter : System.Data.OracleClient.OracleDataAdapter with get, set" Usage="System.Data.OracleClient.OracleCommandBuilder.DataAdapter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDataAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Data.OracleClient.OracleDataAdapter" />-Objekt ab, für das dieses <see cref="T:System.Data.OracleClient.OracleCommandBuilder" />-Objekt SQL-Anweisungen generiert, oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.Data.OracleClient.OracleDataAdapter" />-Objekt, das diesem <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> zugeordnet ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.OracleClient.OracleCommandBuilder> registriert sich selbst als einen Listener für <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> Ereignisse, die generiert werden, indem Sie die <xref:System.Data.OracleClient.OracleDataAdapter> in dieser Eigenschaft angegeben.  
  
 Beim Erstellen einer neuen Instanz der <xref:System.Data.OracleClient.OracleCommandBuilder>, alle vorhandenen <xref:System.Data.OracleClient.OracleCommandBuilder> zugeordnete <xref:System.Data.OracleClient.OracleDataAdapter> freigegeben wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeriveParameters">
      <MemberSignature Language="C#" Value="public static void DeriveParameters (System.Data.OracleClient.OracleCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeriveParameters(class System.Data.OracleClient.OracleCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeriveParameters (command As OracleCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeriveParameters(System::Data::OracleClient::OracleCommand ^ command);" />
      <MemberSignature Language="F#" Value="static member DeriveParameters : System.Data.OracleClient.OracleCommand -&gt; unit" Usage="System.Data.OracleClient.OracleCommandBuilder.DeriveParameters command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.OracleClient.OracleCommand" />
      </Parameters>
      <Docs>
        <param name="command">Der <see cref="T:System.Data.OracleClient.OracleCommand" />, der auf die gespeicherte Prozedur verweist, von der die Parameterinformationen abgeleitet werden sollen. Die abgeleiteten Parameter werden der <see cref="P:System.Data.OracleClient.OracleCommand.Parameters" />-Auflistung von <see cref="T:System.Data.OracleClient.OracleCommand" /> hinzugefügt.</param>
        <summary>Ruft Parameterinformationen aus der im <see cref="T:System.Data.OracleClient.OracleCommand" /> angegebenen gespeicherten Prozedur ab und füllt die <see cref="P:System.Data.OracleClient.OracleCommand.Parameters" />-Auflistung des angegebenen <see cref="T:System.Data.OracleClient.OracleCommand" />-Objekts auf.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> überschreibt alle vorhandenen Parameterinformationen für die <xref:System.Data.OracleClient.OracleCommand>.  
  
 <xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> erfordert einen zusätzlichen Aufruf an die Datenbank, um Informationen zu erhalten. Wenn die Parameterinformationen im Voraus bekannt ist, ist es effizienter, die Parameters-Auflistung auffüllen, indem Sie die Informationen explizit festlegen.  
  
 Sie können nur <xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> mit gespeicherten Prozeduren. Sie können keine <xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> zum Auffüllen der <xref:System.Data.OracleClient.OracleParameterCollection> mit beliebigen Transact-SQL-Anweisungen, wie z. B. eine parametrisierte SELECT-Anweisung.  
  
 Weitere Informationen finden Sie unter [Konfigurieren von Parametern und Parameterdatentypen](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der Befehlstext ist kein gültiger Name für eine gespeicherte Prozedur, oder der angegebene <see cref="T:System.Data.CommandType" /> ist nicht <see cref="F:System.Data.CommandType.StoredProcedure" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDeleteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft das automatisch generierte <see cref="T:System.Data.OracleClient.OracleCommand" />-Objekt ab, das für die Ausführung von Löschvorgängen in der Datenbank erforderlich ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Können Sie die <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> Methode für die Informations- oder zur Problembehandlung zu Anzeigezwecken, da es sich bei Rückgabe der <xref:System.Data.OracleClient.OracleCommand> Objekt, das ausgeführt werden.  
  
 Sie können auch <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> als Grundlage für einen geänderten Befehl. Rufen Sie z. B. möglicherweise <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> und Ändern der <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> -Wert aus, und klicken Sie dann explizit festlegen, die auf die <xref:System.Data.OracleClient.OracleDataAdapter>.  
  
 Die SQL-Anweisungen werden zuerst generiert, wenn die Anwendung, entweder aufruft <xref:System.Data.Common.DbDataAdapter.Update%2A> oder <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>.  
  
 Weitere Informationen finden Sie unter [Generieren von Befehlen mit CommandBuilder-Objekten](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetDeleteCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetDeleteCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand () As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetDeleteCommand();" />
      <MemberSignature Language="F#" Value="override this.GetDeleteCommand : unit -&gt; System.Data.OracleClient.OracleCommand" Usage="oracleCommandBuilder.GetDeleteCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft das automatisch generierte <see cref="T:System.Data.OracleClient.OracleCommand" />-Objekt ab, das für die Ausführung von Löschvorgängen in der Datenbank erforderlich ist.</summary>
        <returns>Das für Löschvorgänge erforderliche, automatisch generierte <see cref="T:System.Data.OracleClient.OracleCommand" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Können Sie die <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> Methode für die Informations- oder zur Problembehandlung zu Anzeigezwecken, da es sich bei Rückgabe der <xref:System.Data.OracleClient.OracleCommand> Objekt, das ausgeführt werden.  
  
 Sie können auch <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> als Grundlage für einen geänderten Befehl. Rufen Sie z. B. möglicherweise <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> und Ändern der <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> -Wert aus, und klicken Sie dann explizit festlegen, die auf die <xref:System.Data.OracleClient.OracleDataAdapter>.  
  
 Die SQL-Anweisungen werden zuerst generiert, wenn die Anwendung, entweder aufruft <xref:System.Data.Common.DbDataAdapter.Update%2A> oder <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>.  
  
 Weitere Informationen finden Sie unter [Generieren von Befehlen mit CommandBuilder-Objekten](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetDeleteCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetDeleteCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand (useColumnsForParameterNames As Boolean) As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetDeleteCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="override this.GetDeleteCommand : bool -&gt; System.Data.OracleClient.OracleCommand" Usage="oracleCommandBuilder.GetDeleteCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">Generiert bei einem Wert von true Parameternamen, die den Spaltennamen entsprechen (falls möglich). Generiert @p1, @p2, usw., wenn FALSE.</param>
        <summary>Ruft das automatisch generierte <see cref="T:System.Data.OracleClient.OracleCommand" />-Objekt ab, das für die Ausführung von Löschvorgängen in der Datenbank erforderlich ist.</summary>
        <returns>Das für Löschvorgänge erforderliche, automatisch generierte <see cref="T:System.Data.OracleClient.OracleCommand" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Können Sie die <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> Methode für die Informations- oder zur Problembehandlung zu Anzeigezwecken, da es sich bei Rückgabe der <xref:System.Data.OracleClient.OracleCommand> Objekt, das ausgeführt werden.  
  
 Sie können auch <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> als Grundlage für einen geänderten Befehl. Rufen Sie z. B. möglicherweise <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> und Ändern der <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> -Wert aus, und klicken Sie dann explizit festlegen, die auf die <xref:System.Data.OracleClient.OracleDataAdapter>.  
  
 Die SQL-Anweisungen werden zuerst generiert, wenn die Anwendung, entweder aufruft <xref:System.Data.Common.DbDataAdapter.Update%2A> oder <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>.  
  
 Das Standardverhalten, das beim Generieren von Parameternamen, ist die Verwendung @p1, @p2, und so weiter für die verschiedenen Parameter. Übergeben von `true` für die `useColumnsForParameterNames` Parameter können Sie erzwingen die <xref:System.Data.Common.DbCommandBuilder> Parameter basierend auf den Spaltennamen stattdessen generieren. sein. Dies gelingt nur, wenn die folgenden Bedingungen erfüllt sind:  
  
-   Die <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> angegeben wurde und seine Länge ist gleich oder größer als die generierten Parameternamen.  
  
-   Der Name des generierten Parameters im angegebenen Kriterien entspricht der <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> reguläre Ausdrücke.  
  
-   Ein <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> angegeben ist.  
  
 Weitere Informationen finden Sie unter [Generieren von Befehlen mit CommandBuilder-Objekten](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInsertCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft das automatisch generierte <see cref="T:System.Data.OracleClient.OracleCommand" />-Objekt ab, das für das Ausführen von Einfügevorgängen in der Datenbank erforderlich ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Können Sie die <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> Methode für die Informations- oder zur Problembehandlung zu Anzeigezwecken, da es sich bei Rückgabe der <xref:System.Data.OracleClient.OracleCommand> Objekt, das ausgeführt werden.  
  
 Sie können auch <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> als Grundlage für einen geänderten Befehl. Rufen Sie z. B. möglicherweise <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> und Ändern der <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> -Wert aus, und klicken Sie dann explizit festlegen, die auf die <xref:System.Data.OracleClient.OracleDataAdapter>.  
  
 Die SQL-Anweisungen werden zuerst generiert, wenn die Anwendung, entweder aufruft <xref:System.Data.Common.DbDataAdapter.Update%2A> oder <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>.  
  
 Weitere Informationen finden Sie unter [Generieren von Befehlen mit CommandBuilder-Objekten](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetInsertCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetInsertCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand () As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetInsertCommand();" />
      <MemberSignature Language="F#" Value="override this.GetInsertCommand : unit -&gt; System.Data.OracleClient.OracleCommand" Usage="oracleCommandBuilder.GetInsertCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft das automatisch generierte <see cref="T:System.Data.OracleClient.OracleCommand" />-Objekt ab, das für das Ausführen von Einfügevorgängen in der Datenbank erforderlich ist.</summary>
        <returns>Das für Einfügevorgänge erforderliche, automatisch generierte <see cref="T:System.Data.OracleClient.OracleCommand" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Können Sie die <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> Methode für die Informations- oder zur Problembehandlung zu Anzeigezwecken, da es sich bei Rückgabe der <xref:System.Data.OracleClient.OracleCommand> Objekt, das ausgeführt werden.  
  
 Sie können auch <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> als Grundlage für einen geänderten Befehl. Rufen Sie z. B. möglicherweise <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> und Ändern der <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> -Wert aus, und klicken Sie dann explizit festlegen, die auf die <xref:System.Data.OracleClient.OracleDataAdapter>.  
  
 Die SQL-Anweisungen werden zuerst generiert, wenn die Anwendung, entweder aufruft <xref:System.Data.Common.DbDataAdapter.Update%2A> oder <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>.  
  
 Weitere Informationen finden Sie unter [Generieren von Befehlen mit CommandBuilder-Objekten](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetInsertCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetInsertCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand (useColumnsForParameterNames As Boolean) As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetInsertCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="override this.GetInsertCommand : bool -&gt; System.Data.OracleClient.OracleCommand" Usage="oracleCommandBuilder.GetInsertCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">Generiert bei einem Wert von true Parameternamen, die den Spaltennamen entsprechen (falls möglich). Generiert @p1, @p2, usw., wenn FALSE.</param>
        <summary>Ruft das automatisch generierte <see cref="T:System.Data.OracleClient.OracleCommand" />-Objekt ab, das für das Ausführen von Einfügevorgängen in der Datenbank erforderlich ist.</summary>
        <returns>Das für Einfügevorgänge erforderliche, automatisch generierte <see cref="T:System.Data.OracleClient.OracleCommand" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Können Sie die <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> Methode für die Informations- oder zur Problembehandlung zu Anzeigezwecken, da es sich bei Rückgabe der <xref:System.Data.OracleClient.OracleCommand> Objekt, das ausgeführt werden.  
  
 Sie können auch <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> als Grundlage für einen geänderten Befehl. Rufen Sie z. B. möglicherweise <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> und Ändern der <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> -Wert aus, und klicken Sie dann explizit festlegen, die auf die <xref:System.Data.OracleClient.OracleDataAdapter>.  
  
 Die SQL-Anweisungen werden zuerst generiert, wenn die Anwendung, entweder aufruft <xref:System.Data.Common.DbDataAdapter.Update%2A> oder <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>.  
  
 Das Standardverhalten, das beim Generieren von Parameternamen, ist die Verwendung @p1, @p2, und so weiter für die verschiedenen Parameter. Übergeben von `true` für die `useColumnsForParameterNames` Parameter können Sie erzwingen die <xref:System.Data.Common.DbCommandBuilder> Parameter basierend auf den Spaltennamen stattdessen generieren. sein. Dies gelingt nur, wenn die folgenden Bedingungen erfüllt sind:  
  
-   Die <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> angegeben wurde und seine Länge ist gleich oder größer als die generierten Parameternamen.  
  
-   Der Name des generierten Parameters im angegebenen Kriterien entspricht der <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> reguläre Ausdrücke.  
  
-   Ein <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> angegeben ist.  
  
 Weitere Informationen finden Sie unter [Generieren von Befehlen mit CommandBuilder-Objekten](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetParameterName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(int parameterOrdinal);" />
      <MemberSignature Language="F#" Value="override this.GetParameterName : int -&gt; string" Usage="oracleCommandBuilder.GetParameterName parameterOrdinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(System::String ^ parameterName);" />
      <MemberSignature Language="F#" Value="override this.GetParameterName : string -&gt; string" Usage="oracleCommandBuilder.GetParameterName parameterName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterPlaceholder">
      <MemberSignature Language="C#" Value="protected override string GetParameterPlaceholder (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterPlaceholder(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetParameterPlaceholder(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterPlaceholder (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterPlaceholder(int parameterOrdinal);" />
      <MemberSignature Language="F#" Value="override this.GetParameterPlaceholder : int -&gt; string" Usage="oracleCommandBuilder.GetParameterPlaceholder parameterOrdinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUpdateCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft das automatisch generierte <see cref="T:System.Data.OracleClient.OracleCommand" />-Objekt ab, das für das Ausführen von Aktualisierungen in der Datenbank erforderlich ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Können Sie die <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> Methode für die Informations- oder zur Problembehandlung zu Anzeigezwecken, da es sich bei Rückgabe der <xref:System.Data.OracleClient.OracleCommand> Objekt, das ausgeführt werden.  
  
 Sie können auch <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> als Grundlage für einen geänderten Befehl. Rufen Sie z. B. möglicherweise <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> und Ändern der <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> -Wert aus, und klicken Sie dann explizit festlegen, die auf die <xref:System.Data.OracleClient.OracleDataAdapter>.  
  
 Die SQL-Anweisungen werden zuerst generiert, wenn die Anwendung, entweder aufruft <xref:System.Data.Common.DbDataAdapter.Update%2A> oder <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>.  
  
 Weitere Informationen finden Sie unter [Generieren von Befehlen mit CommandBuilder-Objekten](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetUpdateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetUpdateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand () As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetUpdateCommand();" />
      <MemberSignature Language="F#" Value="override this.GetUpdateCommand : unit -&gt; System.Data.OracleClient.OracleCommand" Usage="oracleCommandBuilder.GetUpdateCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft das automatisch generierte <see cref="T:System.Data.OracleClient.OracleCommand" />-Objekt ab, das für das Ausführen von Aktualisierungen in der Datenbank erforderlich ist.</summary>
        <returns>Das für Aktualisierungen erforderliche, automatisch generierte <see cref="T:System.Data.OracleClient.OracleCommand" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Können Sie die <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> Methode für die Informations- oder zur Problembehandlung zu Anzeigezwecken, da es sich bei Rückgabe der <xref:System.Data.OracleClient.OracleCommand> Objekt, das ausgeführt werden.  
  
 Sie können auch <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> als Grundlage für einen geänderten Befehl. Rufen Sie z. B. möglicherweise <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> und Ändern der <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> -Wert aus, und klicken Sie dann explizit festlegen, die auf die <xref:System.Data.OracleClient.OracleDataAdapter>.  
  
 Die SQL-Anweisungen werden zuerst generiert, wenn die Anwendung, entweder aufruft <xref:System.Data.Common.DbDataAdapter.Update%2A> oder <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>.  
  
 Weitere Informationen finden Sie unter [Generieren von Befehlen mit CommandBuilder-Objekten](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetUpdateCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetUpdateCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand (useColumnsForParameterNames As Boolean) As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetUpdateCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="override this.GetUpdateCommand : bool -&gt; System.Data.OracleClient.OracleCommand" Usage="oracleCommandBuilder.GetUpdateCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">Generiert bei einem Wert von true Parameternamen, die den Spaltennamen entsprechen (falls möglich). Generiert @p1, @p2, usw., wenn FALSE.</param>
        <summary>Ruft das automatisch generierte <see cref="T:System.Data.OracleClient.OracleCommand" />-Objekt ab, das für das Ausführen von Aktualisierungen in der Datenbank erforderlich ist.</summary>
        <returns>Das für Aktualisierungen erforderliche, automatisch generierte <see cref="T:System.Data.OracleClient.OracleCommand" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Können Sie die <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> Methode für die Informations- oder zur Problembehandlung zu Anzeigezwecken, da es sich bei Rückgabe der <xref:System.Data.OracleClient.OracleCommand> Objekt, das ausgeführt werden.  
  
 Sie können auch <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> als Grundlage für einen geänderten Befehl. Rufen Sie z. B. möglicherweise <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> und Ändern der <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> -Wert aus, und klicken Sie dann explizit festlegen, die auf die <xref:System.Data.OracleClient.OracleDataAdapter>.  
  
 Die SQL-Anweisungen werden zuerst generiert, wenn die Anwendung, entweder aufruft <xref:System.Data.Common.DbDataAdapter.Update%2A> oder <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>.  
  
 Das Standardverhalten, das beim Generieren von Parameternamen, ist die Verwendung @p1, @p2, und so weiter für die verschiedenen Parameter. Übergeben von `true` für die `useColumnsForParameterNames` Parameter können Sie erzwingen die <xref:System.Data.Common.DbCommandBuilder> Parameter basierend auf den Spaltennamen stattdessen generieren. sein. Dies gelingt nur, wenn die folgenden Bedingungen erfüllt sind:  
  
-   Die <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> angegeben wurde und seine Länge ist gleich oder größer als die generierten Parameternamen.  
  
-   Der Name des generierten Parameters im angegebenen Kriterien entspricht der <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> reguläre Ausdrücke.  
  
-   Ein <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> angegeben ist.  
  
 Weitere Informationen finden Sie unter [Generieren von Befehlen mit CommandBuilder-Objekten](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public override string QuoteIdentifier (string unquotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string QuoteIdentifier(string unquotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.QuoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function QuoteIdentifier (unquotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier);" />
      <MemberSignature Language="F#" Value="override this.QuoteIdentifier : string -&gt; string" Usage="oracleCommandBuilder.QuoteIdentifier unquotedIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">Der ursprüngliche Bezeichner ohne Anführungszeichen.</param>
        <summary>Bei einem Bezeichner ohne Anführungszeichen in der richtigen Katalogschreibweise wird die korrekte Form des jeweiligen Bezeichners mit Anführungszeichen zurückgegeben, einschließlich der ordnungsgemäßen Escapezeichen für ggf. vorhandene eingebettete Anführungszeichen im Bezeichner.</summary>
        <returns>Die Version des Bezeichners mit Anführungszeichen. Eingebettete Anführungszeichen im Bezeichner werden ordnungsgemäß mit Escapezeichen versehen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaSeparator">
      <MemberSignature Language="C#" Value="public override string SchemaSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SchemaSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.SchemaSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SchemaSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SchemaSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SchemaSeparator : string with get, set" Usage="System.Data.OracleClient.OracleCommandBuilder.SchemaSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das als Trennzeichen zwischen dem Schemabezeichner und anderen Bezeichnern zu verwendende Zeichen ab oder legt dieses fest.</summary>
        <value>Das Zeichen, das als Schematrennzeichen verwendet werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Im Allgemeinen wird das Schema für einen Bezeichner Datenbankserver durch die Trennung der Schemaname durch ein Zeichen vom Bezeichner angegeben. Beispielsweise verwendet SQL Server einen Doppelpunkt vollständige Bezeichner, z. B. Person: CustomerName, wobei "Person" ist der Schemaname und "Kundenname" ist der Bezeichner zu erstellen. Durch Festlegen dieser Eigenschaft kann Entwickler dieses Verhalten zu ändern.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetRowUpdatingHandler(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetRowUpdatingHandler (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetRowUpdatingHandler(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="override this.SetRowUpdatingHandler : System.Data.Common.DbDataAdapter -&gt; unit" Usage="oracleCommandBuilder.SetRowUpdatingHandler adapter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public override string UnquoteIdentifier (string quotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string UnquoteIdentifier(string quotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.UnquoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnquoteIdentifier (quotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier);" />
      <MemberSignature Language="F#" Value="override this.UnquoteIdentifier : string -&gt; string" Usage="oracleCommandBuilder.UnquoteIdentifier quotedIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">Der Bezeichner, dessen eingebettete Anführungszeichen entfernt werden.</param>
        <summary>Bei einem Bezeichner mit Anführungszeichen wird die richtige Form des Bezeichners ohne Anführungszeichen zurückgegeben. Dies schließt ein, dass Escapezeichen für eingebettete Anführungszeichen im Bezeichner ordnungsgemäß entfernt werden.</summary>
        <returns>Der Bezeichner ohne Anführungszeichen, bei dem die Escapezeichen für eingebettete Anführungszeichen ordnungsgemäß entfernt wurden.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>