<Type Name="OracleBinary" FullName="System.Data.OracleClient.OracleBinary">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5ddcebd7e6d74dd75bd138a23a5a27aa0343a5e6" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70526281" /></Metadata><TypeSignature Language="C#" Value="public struct OracleBinary : IComparable, System.Data.SqlTypes.INullable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit OracleBinary extends System.ValueType implements class System.Data.SqlTypes.INullable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleBinary" />
  <TypeSignature Language="VB.NET" Value="Public Structure OracleBinary&#xA;Implements IComparable, INullable" />
  <TypeSignature Language="C++ CLI" Value="public value class OracleBinary : IComparable, System::Data::SqlTypes::INullable" />
  <TypeSignature Language="F#" Value="type OracleBinary = struct&#xA;    interface INullable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.SqlTypes.INullable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="d1194-101">Stellt einen binären Datenstream variabler Länge dar, der in einer Datenbank gespeichert oder aus dieser abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="d1194-101">Represents a variable-length stream of binary data to be stored in or retrieved from a database.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1194-102">Rufen Sie zum <xref:System.Data.OracleClient.OracleBinary> Abrufen eines-Objekts <xref:System.Data.OracleClient.OracleDataReader.GetOracleBinary%2A> die-Methode auf.</span><span class="sxs-lookup"><span data-stu-id="d1194-102">To obtain an <xref:System.Data.OracleClient.OracleBinary> object, call the <xref:System.Data.OracleClient.OracleDataReader.GetOracleBinary%2A> method.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleBinary (byte[] b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (b As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleBinary(cli::array &lt;System::Byte&gt; ^ b);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleBinary : byte[] -&gt; System.Data.OracleClient.OracleBinary" Usage="new System.Data.OracleClient.OracleBinary b" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="b" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="b"><span data-ttu-id="d1194-103">Das Bytearray, das in der <see cref="P:System.Data.OracleClient.OracleBinary.Value" />-Eigenschaft gespeichert werden soll.</span><span class="sxs-lookup"><span data-stu-id="d1194-103">The byte array to be stored in the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property.</span></span></param>
        <summary><span data-ttu-id="d1194-104">Initialisiert eine neue Instanz der <see langword="OracleBinary" />-Struktur und legt die <see cref="P:System.Data.OracleClient.OracleBinary.Value" />-Eigenschaft auf den Inhalt des bereitgestellten Bytearrays fest.</span><span class="sxs-lookup"><span data-stu-id="d1194-104">Initializes a new instance of the <see langword="OracleBinary" /> structure, setting the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property to the contents of the supplied byte array.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="oracleBinary.CompareTo obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="d1194-105">Das mit dieser <see langword="OracleBinary" />-Struktur zu vergleichende Objekt.</span><span class="sxs-lookup"><span data-stu-id="d1194-105">The object to be compared to this <see langword="OracleBinary" /> structure.</span></span></param>
        <summary><span data-ttu-id="d1194-106">Vergleicht dieses <see cref="T:System.Data.OracleClient.OracleBinary" />-Objekt mit dem bereitgestellten Objekt und gibt eine Angabe über das Verhältnis der jeweiligen Werte zurück.</span><span class="sxs-lookup"><span data-stu-id="d1194-106">Compares this <see cref="T:System.Data.OracleClient.OracleBinary" /> object to the supplied object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="d1194-107">Eine Zahl mit Vorzeichen, die das Verhältnis zwischen dem Wert dieser <see langword="OracleBinary" />-Struktur und dem Objekt angibt.</span><span class="sxs-lookup"><span data-stu-id="d1194-107">A signed number indicating the relative values of this <see langword="OracleBinary" /> structure and the object.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="d1194-108">Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="d1194-108">Return Value</span></span> 
 </term><description> <span data-ttu-id="d1194-109">Bedingung</span><span class="sxs-lookup"><span data-stu-id="d1194-109">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="d1194-110">Kleiner als 0 (null)</span><span class="sxs-lookup"><span data-stu-id="d1194-110">Less than zero</span></span> 
 </term><description> <span data-ttu-id="d1194-111">Der Wert dieses <see langword="OracleBinary" />-Objekts ist kleiner als das Objekt.</span><span class="sxs-lookup"><span data-stu-id="d1194-111">The value of this <see langword="OracleBinary" /> object is less than the object.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="d1194-112">Zero</span><span class="sxs-lookup"><span data-stu-id="d1194-112">Zero</span></span> 
 </term><description> <span data-ttu-id="d1194-113">Dieses <see langword="OracleBinary" />-Objekt ist mit dem Objekt identisch.</span><span class="sxs-lookup"><span data-stu-id="d1194-113">This <see langword="OracleBinary" /> object is the same as the object.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="d1194-114">Größer als 0 (null)</span><span class="sxs-lookup"><span data-stu-id="d1194-114">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="d1194-115">Dieses <see langword="OracleBinary" />-Objekt ist größer als das Objekt.</span><span class="sxs-lookup"><span data-stu-id="d1194-115">This <see langword="OracleBinary" /> object is greater than the object.</span></span>  
  
<span data-ttu-id="d1194-116">- oder -</span><span class="sxs-lookup"><span data-stu-id="d1194-116">-or-</span></span> 
<span data-ttu-id="d1194-117">Das Objekt ist ein NULL-Verweis.</span><span class="sxs-lookup"><span data-stu-id="d1194-117">The object is a null reference.</span></span>  
  
 </description></item></list></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBinary Concat (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBinary Concat(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.Concat(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (x As OracleBinary, y As OracleBinary) As OracleBinary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBinary Concat(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member Concat : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBinary" Usage="System.Data.OracleClient.OracleBinary.Concat (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBinary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d1194-118">Eine <see langword="OracleBinary" />-Struktur.</span><span class="sxs-lookup"><span data-stu-id="d1194-118">An <see langword="OracleBinary" /> structure.</span></span></param>
        <param name="y"><span data-ttu-id="d1194-119">Eine <see langword="OracleBinary" />-Struktur.</span><span class="sxs-lookup"><span data-stu-id="d1194-119">An <see langword="OracleBinary" /> structure.</span></span></param>
        <summary><span data-ttu-id="d1194-120">Verkettet zwei <see cref="T:System.Data.OracleClient.OracleBinary" />-Strukturen, um eine neue <see langword="OracleBinary" />-Struktur zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="d1194-120">Concatenates two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to create a new <see langword="OracleBinary" /> structure.</span></span></summary>
        <returns><span data-ttu-id="d1194-121">Eine <see langword="OracleBinary" />-Struktur mit verketteten Werten des <paramref name="x" />-Parameters und des <paramref name="y" />-Parameters.</span><span class="sxs-lookup"><span data-stu-id="d1194-121">An <see langword="OracleBinary" /> structure with the concatenated values of the <paramref name="x" /> and <paramref name="y" /> parameters.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1194-122">Vergleicht zwei <see cref="T:System.Data.OracleClient.OracleBinary" />-Strukturen auf Gleichheit.</span><span class="sxs-lookup"><span data-stu-id="d1194-122">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if they are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="oracleBinary.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d1194-123">Das zu vergleichende Objekt.</span><span class="sxs-lookup"><span data-stu-id="d1194-123">The object to be compared.</span></span></param>
        <summary><span data-ttu-id="d1194-124">Vergleicht den angegebenen Objektparameter mit der <see cref="P:System.Data.OracleClient.OracleBinary.Value" />-Eigenschaft des <see cref="T:System.Data.OracleClient.OracleBinary" />-Objekts.</span><span class="sxs-lookup"><span data-stu-id="d1194-124">Compares the supplied object parameter to the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property of the <see cref="T:System.Data.OracleClient.OracleBinary" /> object.</span></span></summary>
        <returns><span data-ttu-id="d1194-125"><see langword="true" />, wenn das Objekt eine Instanz von <see cref="T:System.Data.OracleClient.OracleBinary" /> und gleich diesem ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d1194-125"><see langword="true" /> if object is an instance of <see cref="T:System.Data.OracleClient.OracleBinary" /> and the two are equal; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean Equals (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean Equals(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.Equals(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean Equals(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="System.Data.OracleClient.OracleBinary.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d1194-126">Eine <see langword="OracleBinary" />-Struktur.</span><span class="sxs-lookup"><span data-stu-id="d1194-126">An <see langword="OracleBinary" /> structure.</span></span></param>
        <param name="y"><span data-ttu-id="d1194-127">Eine <see langword="OracleBinary" />-Struktur.</span><span class="sxs-lookup"><span data-stu-id="d1194-127">An <see langword="OracleBinary" /> structure.</span></span></param>
        <summary><span data-ttu-id="d1194-128">Vergleicht zwei <see cref="T:System.Data.OracleClient.OracleBinary" />-Strukturen auf Gleichheit.</span><span class="sxs-lookup"><span data-stu-id="d1194-128">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if they are equal.</span></span></summary>
        <returns><span data-ttu-id="d1194-129">Ein <see cref="T:System.Data.OracleClient.OracleBoolean" />, der <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> ist, wenn die beiden Instanzen gleich sind, und der <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> ist, wenn die beiden Instanzen nicht gleich sind.</span><span class="sxs-lookup"><span data-stu-id="d1194-129">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are not equal.</span></span> <span data-ttu-id="d1194-130">Wenn eine Instanz von <see langword="OracleBinary" /> NULL ist, ist der <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> von <see langword="OracleBoolean" /> gleich <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="d1194-130">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="oracleBinary.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1194-131">Gibt den Hashcode für diese <see cref="T:System.Data.OracleClient.OracleBinary" />-Struktur zurück.</span><span class="sxs-lookup"><span data-stu-id="d1194-131">Returns the hash code for this <see cref="T:System.Data.OracleClient.OracleBinary" /> structure.</span></span></summary>
        <returns><span data-ttu-id="d1194-132">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d1194-132">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean GreaterThan (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean GreaterThan(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.GreaterThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreaterThan (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean GreaterThan(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member GreaterThan : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="System.Data.OracleClient.OracleBinary.GreaterThan (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d1194-133">Eine <see langword="OracleBinary" />-Struktur.</span><span class="sxs-lookup"><span data-stu-id="d1194-133">An <see langword="OracleBinary" /> structure.</span></span></param>
        <param name="y"><span data-ttu-id="d1194-134">Eine <see langword="OracleBinary" />-Struktur.</span><span class="sxs-lookup"><span data-stu-id="d1194-134">An <see langword="OracleBinary" /> structure.</span></span></param>
        <summary><span data-ttu-id="d1194-135">Vergleicht zwei <see cref="T:System.Data.OracleClient.OracleBinary" />-Strukturen, um zu bestimmen, ob die erste größer als die zweite ist.</span><span class="sxs-lookup"><span data-stu-id="d1194-135">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is greater than the second.</span></span></summary>
        <returns><span data-ttu-id="d1194-136">Ein <see cref="T:System.Data.OracleClient.OracleBoolean" />, der <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist, andernfalls <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="d1194-136">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="d1194-137">Wenn eine Instanz von <see langword="OracleBinary" /> NULL ist, ist der <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> von <see langword="OracleBoolean" /> gleich <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="d1194-137">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean GreaterThanOrEqual (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean GreaterThanOrEqual(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.GreaterThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreaterThanOrEqual (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean GreaterThanOrEqual(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member GreaterThanOrEqual : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="System.Data.OracleClient.OracleBinary.GreaterThanOrEqual (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d1194-138">Eine <see langword="OracleBinary" />-Struktur.</span><span class="sxs-lookup"><span data-stu-id="d1194-138">An <see langword="OracleBinary" /> structure.</span></span></param>
        <param name="y"><span data-ttu-id="d1194-139">Eine <see langword="OracleBinary" />-Struktur.</span><span class="sxs-lookup"><span data-stu-id="d1194-139">An <see langword="OracleBinary" /> structure.</span></span></param>
        <summary><span data-ttu-id="d1194-140">Vergleicht zwei <see cref="T:System.Data.OracleClient.OracleBinary" />-Strukturen, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</span><span class="sxs-lookup"><span data-stu-id="d1194-140">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is greater than or equal to the second.</span></span></summary>
        <returns><span data-ttu-id="d1194-141">Ein <see cref="T:System.Data.OracleClient.OracleBoolean" />, der <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist, andernfalls <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="d1194-141">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="d1194-142">Wenn eine Instanz von <see langword="OracleBinary" /> NULL ist, ist der <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> von <see langword="OracleBoolean" /> gleich <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="d1194-142">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBinary.IsNull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNull : bool" Usage="System.Data.OracleClient.OracleBinary.IsNull" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.SqlTypes.INullable.IsNull</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1194-143">Ruft einen Wert ab, der angibt, ob die <see cref="P:System.Data.OracleClient.OracleBinary.Value" />-Eigenschaft der <see cref="T:System.Data.OracleClient.OracleBinary" />-Struktur NULL ist.</span><span class="sxs-lookup"><span data-stu-id="d1194-143">Gets a value indicating whether the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property of the <see cref="T:System.Data.OracleClient.OracleBinary" /> structure is null.</span></span></summary>
        <value><span data-ttu-id="d1194-144"><see langword="true" />, wenn <see langword="Value" /> NULL ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d1194-144"><see langword="true" /> if <see langword="Value" /> is null, otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public byte this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBinary.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte default[int] { System::Byte get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : byte" Usage="System.Data.OracleClient.OracleBinary.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d1194-145">Die Position des abzurufenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="d1194-145">The position of the byte to be retrieved.</span></span></param>
        <summary><span data-ttu-id="d1194-146">Ruft aus der <see langword="Value" />-Eigenschaft das einzelne Byte ab, das sich an der durch den Ganzzahlparameter <paramref name="index" /> angegebenen Position befindet.</span><span class="sxs-lookup"><span data-stu-id="d1194-146">Gets the single byte from the <see langword="Value" /> property located at the position indicated by the integer parameter, <paramref name="index" />.</span></span> <span data-ttu-id="d1194-147">Wenn <paramref name="index" /> eine Position hinter dem Ende des Bytearrays angibt, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d1194-147">If <paramref name="index" /> indicates a position beyond the end of the byte array, an exception is raised.</span></span></summary>
        <value><span data-ttu-id="d1194-148">Das Byte, das sich an der durch den ganzzahligen Parameter angegebenen Position befindet.</span><span class="sxs-lookup"><span data-stu-id="d1194-148">The byte located at the position indicated by the integer parameter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1194-149">Überprüfen Sie vor `OracleNullValueException`dem Lesen <xref:System.Data.OracleClient.OracleBinary.IsNull%2A> `this`stets die-Eigenschaft und `Length` die-Eigenschaft, um zu vermeiden, dass eine-</span><span class="sxs-lookup"><span data-stu-id="d1194-149">To avoid raising an `OracleNullValueException`, always check the <xref:System.Data.OracleClient.OracleBinary.IsNull%2A> property and the `Length` property before reading `this`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBinary.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.Data.OracleClient.OracleBinary.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1194-150">Ruft die Länge der <see cref="P:System.Data.OracleClient.OracleBinary.Value" />-Eigenschaft in Bytes ab.</span><span class="sxs-lookup"><span data-stu-id="d1194-150">Gets the length in bytes of the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property.</span></span> <span data-ttu-id="d1194-151">Diese Eigenschaft ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="d1194-151">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="d1194-152">Die Länge der Binärdaten in der <see langword="Value" />-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="d1194-152">The length of the binary data in the <see langword="Value" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1194-153">Überprüfen Sie vor `OracleNullValueException`dem Lesen der `Length` Eigenschaft <xref:System.Data.OracleClient.OracleBinary.IsNull%2A> stets die-Eigenschaft, um zu vermeiden, dass eine-</span><span class="sxs-lookup"><span data-stu-id="d1194-153">To avoid raising an `OracleNullValueException`, always check the <xref:System.Data.OracleClient.OracleBinary.IsNull%2A> property before reading the `Length` property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LessThan">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean LessThan (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean LessThan(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.LessThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LessThan (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean LessThan(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member LessThan : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="System.Data.OracleClient.OracleBinary.LessThan (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d1194-154">Eine <see langword="OracleBinary" />-Struktur.</span><span class="sxs-lookup"><span data-stu-id="d1194-154">An <see langword="OracleBinary" /> structure.</span></span></param>
        <param name="y"><span data-ttu-id="d1194-155">Eine <see langword="OracleBinary" />-Struktur.</span><span class="sxs-lookup"><span data-stu-id="d1194-155">An <see langword="OracleBinary" /> structure.</span></span></param>
        <summary><span data-ttu-id="d1194-156">Vergleicht zwei <see cref="T:System.Data.OracleClient.OracleBinary" />-Strukturen, um zu bestimmen, ob die erste kleiner als die zweite ist.</span><span class="sxs-lookup"><span data-stu-id="d1194-156">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is less than the second.</span></span></summary>
        <returns><span data-ttu-id="d1194-157">Ein <see cref="T:System.Data.OracleClient.OracleBoolean" />, der <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist, andernfalls <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="d1194-157">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="d1194-158">Wenn eine Instanz von <see langword="OracleBinary" /> NULL ist, ist der <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> von <see langword="OracleBoolean" /> gleich <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="d1194-158">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean LessThanOrEqual (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean LessThanOrEqual(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.LessThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LessThanOrEqual (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean LessThanOrEqual(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member LessThanOrEqual : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="System.Data.OracleClient.OracleBinary.LessThanOrEqual (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d1194-159">Eine <see langword="OracleBinary" />-Struktur.</span><span class="sxs-lookup"><span data-stu-id="d1194-159">An <see langword="OracleBinary" /> structure.</span></span></param>
        <param name="y"><span data-ttu-id="d1194-160">Eine <see langword="OracleBinary" />-Struktur.</span><span class="sxs-lookup"><span data-stu-id="d1194-160">An <see langword="OracleBinary" /> structure.</span></span></param>
        <summary><span data-ttu-id="d1194-161">Vergleicht zwei <see cref="T:System.Data.OracleClient.OracleBinary" />-Strukturen, um zu bestimmen, ob die erste kleiner oder gleich der zweiten ist.</span><span class="sxs-lookup"><span data-stu-id="d1194-161">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is less than or equal to the second.</span></span></summary>
        <returns><span data-ttu-id="d1194-162">Ein <see cref="T:System.Data.OracleClient.OracleBoolean" />, der <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist, andernfalls <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="d1194-162">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="d1194-163">Wenn eine Instanz von <see langword="OracleBinary" /> NULL ist, ist der <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> von <see langword="OracleBoolean" /> gleich <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="d1194-163">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotEquals">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean NotEquals (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean NotEquals(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.NotEquals(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotEquals (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean NotEquals(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member NotEquals : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="System.Data.OracleClient.OracleBinary.NotEquals (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d1194-164">Eine <see langword="OracleBinary" />-Struktur.</span><span class="sxs-lookup"><span data-stu-id="d1194-164">An <see langword="OracleBinary" /> structure.</span></span></param>
        <param name="y"><span data-ttu-id="d1194-165">Eine <see langword="OracleBinary" />-Struktur.</span><span class="sxs-lookup"><span data-stu-id="d1194-165">An <see langword="OracleBinary" /> structure.</span></span></param>
        <summary><span data-ttu-id="d1194-166">Vergleicht zwei <see cref="T:System.Data.OracleClient.OracleBinary" />-Strukturen auf Ungleichheit.</span><span class="sxs-lookup"><span data-stu-id="d1194-166">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if they are not equal.</span></span></summary>
        <returns><span data-ttu-id="d1194-167">Ein <see cref="T:System.Data.OracleClient.OracleBoolean" />, der <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> ist, wenn die beiden Instanzen gleich sind.</span><span class="sxs-lookup"><span data-stu-id="d1194-167">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are not equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are equal.</span></span> <span data-ttu-id="d1194-168">Wenn eine Instanz von <see langword="OracleBinary" /> NULL ist, ist der <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> von <see langword="OracleBoolean" /> gleich <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="d1194-168">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.Data.OracleClient.OracleBinary Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Data.OracleClient.OracleBinary Null" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleBinary.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As OracleBinary " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::OracleClient::OracleBinary Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.Data.OracleClient.OracleBinary" Usage="System.Data.OracleClient.OracleBinary.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBinary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1194-169">Stellt einen NULL-Wert dar, der der <see cref="P:System.Data.OracleClient.OracleBinary.Value" />-Eigenschaft einer <see cref="T:System.Data.OracleClient.OracleBinary" />-Struktur zugewiesen werden kann.</span><span class="sxs-lookup"><span data-stu-id="d1194-169">Represents a null value that can be assigned to the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property of an <see cref="T:System.Data.OracleClient.OracleBinary" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1194-170">`Null`fungiert als Konstante für die `OracleBinary` -Struktur.</span><span class="sxs-lookup"><span data-stu-id="d1194-170">`Null` functions as a constant for the `OracleBinary` structure.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OracleClient.OracleBinary.IsNull" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBinary operator + (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBinary op_Addition(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_Addition(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (x As OracleBinary, y As OracleBinary) As OracleBinary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBinary operator +(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBinary" Usage="x + y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBinary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d1194-171">Ein <see langword="OracleBinary" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="d1194-171">An <see langword="OracleBinary" /> object.</span></span></param>
        <param name="y"><span data-ttu-id="d1194-172">Ein <see langword="OracleBinary" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="d1194-172">An <see langword="OracleBinary" /> object.</span></span></param>
        <summary><span data-ttu-id="d1194-173">Verkettet die beiden <see cref="T:System.Data.OracleClient.OracleBinary" />-Parameter, um eine neue <see langword="OracleBinary" />-Struktur zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="d1194-173">Concatenates the two <see cref="T:System.Data.OracleClient.OracleBinary" /> parameters to create a new <see langword="OracleBinary" /> structure.</span></span></summary>
        <returns><span data-ttu-id="d1194-174">Die verketteten Werte des <paramref name="x" />-Parameters und des <paramref name="y" />-Parameters.</span><span class="sxs-lookup"><span data-stu-id="d1194-174">The concatenated values of the <paramref name="x" /> and <paramref name="y" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1194-175">`x`wird zuerst in der resultierenden `OracleBinary`angezeigt, gefolgt von. `y`</span><span class="sxs-lookup"><span data-stu-id="d1194-175">`x` will appear first in the resulting `OracleBinary`, followed by `y`.</span></span>  
  
 <span data-ttu-id="d1194-176">[Visual Basic]</span><span class="sxs-lookup"><span data-stu-id="d1194-176">[Visual Basic]</span></span>  
  
 <span data-ttu-id="d1194-177">In Visual Basic können Sie die von einer Klasse definierten Operatoren verwenden, aber Sie können Sie nicht überschreiben oder eigene erstellen.</span><span class="sxs-lookup"><span data-stu-id="d1194-177">In Visual Basic, you can use the operators defined by a class, but you cannot override them or create your own.</span></span>  
  
 <span data-ttu-id="d1194-178">Die äquivalente Methode für diesen Operator ist.<xref:System.Data.OracleClient.OracleBinary.Concat%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d1194-178">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.Concat%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator == (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_Equality(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_Equality(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator ==(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="x = y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d1194-179">Ein <see langword="OracleBinary" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="d1194-179">An <see langword="OracleBinary" /> object.</span></span></param>
        <param name="y"><span data-ttu-id="d1194-180">Ein <see langword="OracleBinary" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="d1194-180">An <see langword="OracleBinary" /> object.</span></span></param>
        <summary><span data-ttu-id="d1194-181">Vergleicht zwei <see cref="T:System.Data.OracleClient.OracleBinary" />-Strukturen auf Gleichheit.</span><span class="sxs-lookup"><span data-stu-id="d1194-181">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if they are equal.</span></span></summary>
        <returns><span data-ttu-id="d1194-182">Ein <see cref="T:System.Data.OracleClient.OracleBoolean" />, der <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> ist, wenn die beiden Instanzen gleich sind, und der <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> ist, wenn die beiden Instanzen nicht gleich sind.</span><span class="sxs-lookup"><span data-stu-id="d1194-182">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are not equal.</span></span> <span data-ttu-id="d1194-183">Wenn eine Instanz von <see langword="OracleBinary" /> NULL ist, ist der <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> von <see langword="OracleBoolean" /> gleich <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="d1194-183">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="d1194-184">Die äquivalente Methode für diesen Operator ist.<xref:System.Data.OracleClient.OracleBinary.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d1194-184">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator byte[] (System.Data.OracleClient.OracleBinary x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int8[] op_Explicit(valuetype System.Data.OracleClient.OracleBinary x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_Explicit(System.Data.OracleClient.OracleBinary)~System.Byte[]" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (x As OracleBinary) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator cli::array &lt;System::Byte&gt; ^(System::Data::OracleClient::OracleBinary x);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Data.OracleClient.OracleBinary -&gt; byte[]" Usage="System.Data.OracleClient.OracleBinary.op_Explicit x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d1194-185">Eine <see cref="T:System.Data.OracleClient.OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="d1194-185">An <see cref="T:System.Data.OracleClient.OracleBinary" />.</span></span></param>
        <summary><span data-ttu-id="d1194-186">Ruft den Inhalt der <see cref="P:System.Data.OracleClient.OracleBinary.Value" />-Eigenschaft des <see cref="T:System.Data.OracleClient.OracleBinary" />-Parameters als Bytearray ab.</span><span class="sxs-lookup"><span data-stu-id="d1194-186">Gets the contents of the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property of the <see cref="T:System.Data.OracleClient.OracleBinary" /> parameter as an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="d1194-187">Ein Bytearray.</span><span class="sxs-lookup"><span data-stu-id="d1194-187">An array of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1194-188">[Visual Basic]</span><span class="sxs-lookup"><span data-stu-id="d1194-188">[Visual Basic]</span></span>  
  
 <span data-ttu-id="d1194-189">In Visual Basic können Sie die Konvertierungen verwenden, die von der-Klasse definiert werden, Sie können Sie jedoch nicht überschreiben oder eigene erstellen.</span><span class="sxs-lookup"><span data-stu-id="d1194-189">In Visual Basic, you can use the conversions defined by the class, but you cannot override them or create your own.</span></span> <span data-ttu-id="d1194-190">Wenn Option Strict festgelegt ist, müssen Sie den \<CType-Operator > verwenden, <xref:System.Data.OracleClient.OracleBinary> um den in ein binäres Objekt zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="d1194-190">If Option Strict is set, you must use the \<CType operator> to convert the <xref:System.Data.OracleClient.OracleBinary> to a binary object.</span></span>  
  
 <span data-ttu-id="d1194-191">Die äquivalente Methode für diesen Operator ist.<xref:System.Data.OracleClient.OracleBinary.Value?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d1194-191">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.Value?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator &gt; (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_GreaterThan(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_GreaterThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator &gt;(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="x &gt; y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d1194-192">Ein <see langword="OracleBinary" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="d1194-192">An <see langword="OracleBinary" /> object.</span></span></param>
        <param name="y"><span data-ttu-id="d1194-193">Ein <see langword="OracleBinary" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="d1194-193">An <see langword="OracleBinary" /> object.</span></span></param>
        <summary><span data-ttu-id="d1194-194">Vergleicht zwei <see cref="T:System.Data.OracleClient.OracleBinary" />-Strukturen, um zu bestimmen, ob die erste größer als die zweite ist.</span><span class="sxs-lookup"><span data-stu-id="d1194-194">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is greater than the second.</span></span></summary>
        <returns><span data-ttu-id="d1194-195">Ein <see cref="T:System.Data.OracleClient.OracleBoolean" />, der <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> ist, wenn die erste Instanz größer als die zweite Instanz ist, andernfalls <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="d1194-195">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="d1194-196">Wenn eine Instanz von <see langword="OracleBinary" /> NULL ist, ist der <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> von <see langword="OracleBoolean" /> gleich <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="d1194-196">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="d1194-197">Die äquivalente Methode für diesen Operator ist.<xref:System.Data.OracleClient.OracleBinary.GreaterThan%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d1194-197">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.GreaterThan%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator &gt;= (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_GreaterThanOrEqual(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_GreaterThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator &gt;=(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="x &gt;= y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d1194-198">Ein <see langword="OracleBinary" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="d1194-198">An <see langword="OracleBinary" /> object.</span></span></param>
        <param name="y"><span data-ttu-id="d1194-199">Ein <see langword="OracleBinary" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="d1194-199">An <see langword="OracleBinary" /> object.</span></span></param>
        <summary><span data-ttu-id="d1194-200">Vergleicht zwei <see cref="T:System.Data.OracleClient.OracleBinary" />-Strukturen, um zu bestimmen, ob die erste größer oder gleich der zweiten ist.</span><span class="sxs-lookup"><span data-stu-id="d1194-200">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is greater than or equal to the second.</span></span></summary>
        <returns><span data-ttu-id="d1194-201">Ein <see cref="T:System.Data.OracleClient.OracleBoolean" />, der <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> ist, wenn die erste Instanz größer oder gleich der zweiten Instanz ist, andernfalls <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="d1194-201">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="d1194-202">Wenn eine Instanz von <see langword="OracleBinary" /> NULL ist, ist der <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> von <see langword="OracleBoolean" /> gleich <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="d1194-202">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="d1194-203">Die äquivalente Methode für diesen Operator ist.<xref:System.Data.OracleClient.OracleBinary.GreaterThanOrEqual%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d1194-203">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.GreaterThanOrEqual%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Data.OracleClient.OracleBinary (byte[] b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBinary op_Implicit(unsigned int8[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_Implicit(System.Byte[])~System.Data.OracleClient.OracleBinary" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (b As Byte()) As OracleBinary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Data::OracleClient::OracleBinary(cli::array &lt;System::Byte&gt; ^ b);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : byte[] -&gt; System.Data.OracleClient.OracleBinary" Usage="System.Data.OracleClient.OracleBinary.op_Implicit b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBinary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="b"><span data-ttu-id="d1194-204">Das zu konvertierende Bytearray.</span><span class="sxs-lookup"><span data-stu-id="d1194-204">The array of bytes to be converted.</span></span></param>
        <summary><span data-ttu-id="d1194-205">Konvertiert ein Bytearray in eine <see cref="T:System.Data.OracleClient.OracleBinary" />-Struktur.</span><span class="sxs-lookup"><span data-stu-id="d1194-205">Converts an array of bytes to an <see cref="T:System.Data.OracleClient.OracleBinary" /> structure.</span></span></summary>
        <returns><span data-ttu-id="d1194-206">Eine <see langword="OracleBinary" />-Struktur, die das konvertierte Bytearray darstellt.</span><span class="sxs-lookup"><span data-stu-id="d1194-206">An <see langword="OracleBinary" /> structure that represents the converted array of bytes.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator != (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_Inequality(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_Inequality(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator !=(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="System.Data.OracleClient.OracleBinary.op_Inequality (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d1194-207">Ein <see langword="OracleBinary" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="d1194-207">An <see langword="OracleBinary" /> object.</span></span></param>
        <param name="y"><span data-ttu-id="d1194-208">Ein <see langword="OracleBinary" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="d1194-208">An <see langword="OracleBinary" /> object.</span></span></param>
        <summary><span data-ttu-id="d1194-209">Vergleicht zwei <see cref="T:System.Data.OracleClient.OracleBinary" />-Strukturen auf Gleichheit.</span><span class="sxs-lookup"><span data-stu-id="d1194-209">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if they are equal.</span></span></summary>
        <returns><span data-ttu-id="d1194-210">Ein <see cref="T:System.Data.OracleClient.OracleBoolean" />, der <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> ist, wenn die beiden Instanzen nicht gleich sind, und der <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> ist, wenn die beiden Instanzen gleich sind.</span><span class="sxs-lookup"><span data-stu-id="d1194-210">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are not equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are equal.</span></span> <span data-ttu-id="d1194-211">Wenn eine Instanz von <see langword="OracleBinary" /> NULL ist, ist der <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> von <see langword="OracleBoolean" /> gleich <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="d1194-211">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="d1194-212">Die äquivalente Methode für diesen Operator ist.<xref:System.Data.OracleClient.OracleBinary.NotEquals%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d1194-212">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.NotEquals%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator &lt; (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_LessThan(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_LessThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator &lt;(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="x &lt; y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d1194-213">Ein <see langword="OracleBinary" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="d1194-213">An <see langword="OracleBinary" /> object.</span></span></param>
        <param name="y"><span data-ttu-id="d1194-214">Ein <see langword="OracleBinary" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="d1194-214">An <see langword="OracleBinary" /> object.</span></span></param>
        <summary><span data-ttu-id="d1194-215">Vergleicht zwei <see cref="T:System.Data.OracleClient.OracleBinary" />-Strukturen, um zu bestimmen, ob die erste kleiner als die zweite ist.</span><span class="sxs-lookup"><span data-stu-id="d1194-215">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is less than the second.</span></span></summary>
        <returns><span data-ttu-id="d1194-216">Ein <see cref="T:System.Data.OracleClient.OracleBoolean" />, der <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> ist, wenn die erste Instanz kleiner als die zweite Instanz ist, andernfalls <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="d1194-216">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="d1194-217">Wenn eine Instanz von <see langword="OracleBinary" /> NULL ist, ist der <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> von <see langword="OracleBoolean" /> gleich <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="d1194-217">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="d1194-218">Die äquivalente Methode für diesen Operator ist.<xref:System.Data.OracleClient.OracleBinary.LessThan%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d1194-218">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.LessThan%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator &lt;= (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_LessThanOrEqual(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_LessThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator &lt;=(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : System.Data.OracleClient.OracleBinary * System.Data.OracleClient.OracleBinary -&gt; System.Data.OracleClient.OracleBoolean" Usage="x &lt;= y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d1194-219">Ein <see langword="OracleBinary" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="d1194-219">An <see langword="OracleBinary" /> object.</span></span></param>
        <param name="y"><span data-ttu-id="d1194-220">Ein <see langword="OracleBinary" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="d1194-220">An <see langword="OracleBinary" /> object.</span></span></param>
        <summary><span data-ttu-id="d1194-221">Vergleicht zwei <see cref="T:System.Data.OracleClient.OracleBinary" />-Strukturen, um zu bestimmen, ob die erste kleiner oder gleich der zweiten ist.</span><span class="sxs-lookup"><span data-stu-id="d1194-221">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is less than or equal to the second.</span></span></summary>
        <returns><span data-ttu-id="d1194-222">Ein <see cref="T:System.Data.OracleClient.OracleBoolean" />, der <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> ist, wenn die erste Instanz kleiner oder gleich der zweiten Instanz ist, andernfalls <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="d1194-222">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="d1194-223">Wenn eine Instanz von <see langword="OracleBinary" /> NULL ist, ist der <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> von <see langword="OracleBoolean" /> gleich <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="d1194-223">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="d1194-224">Die äquivalente Methode für diesen Operator ist.<xref:System.Data.OracleClient.OracleBinary.LessThanOrEqual%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d1194-224">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.LessThanOrEqual%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public byte[] Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBinary.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Value { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : byte[]" Usage="System.Data.OracleClient.OracleBinary.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1194-225">Ruft den Wert der <see cref="T:System.Data.OracleClient.OracleBinary" />-Struktur ab.</span><span class="sxs-lookup"><span data-stu-id="d1194-225">Gets the value of the <see cref="T:System.Data.OracleClient.OracleBinary" /> structure.</span></span> <span data-ttu-id="d1194-226">Diese Eigenschaft ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="d1194-226">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="d1194-227">Der Wert der <see langword="OracleBinary" />-Struktur.</span><span class="sxs-lookup"><span data-stu-id="d1194-227">The value of the <see langword="OracleBinary" /> structure.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1194-228">Überprüfen Sie vor `OracleNullValueException`dem Lesen der `Value` Eigenschaft <xref:System.Data.OracleClient.OracleBinary.IsNull%2A> stets die-Eigenschaft, um zu vermeiden, dass eine-</span><span class="sxs-lookup"><span data-stu-id="d1194-228">To avoid raising an `OracleNullValueException`, always check the <xref:System.Data.OracleClient.OracleBinary.IsNull%2A> property before reading the `Value` property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
