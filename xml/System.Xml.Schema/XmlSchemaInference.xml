<Type Name="XmlSchemaInference" FullName="System.Xml.Schema.XmlSchemaInference">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d440fc4a8c97eac63b5cbe2bc248d008853f8715" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75180551" /></Metadata><TypeSignature Language="C#" Value="public sealed class XmlSchemaInference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlSchemaInference extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaInference" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlSchemaInference" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaInference sealed" />
  <TypeSignature Language="F#" Value="type XmlSchemaInference = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Leitet ein XSD-Schema (XML Schema Definition) von einem XML-Dokument ab. Die <see cref="T:System.Xml.Schema.XmlSchemaInference" />-Klasse kann nicht geerbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
> -   Verwenden Sie keine Schemas aus unbekannten oder nicht vertrauenswürdigen Quellen oder Speicherorten. Dadurch wird die Sicherheit Ihres Codes beeinträchtigt.  
> -   XML-Schemas (einschließlich Inline Schemas) sind von Natur aus anfällig für Denial-of-Service-Angriffe. akzeptieren Sie Sie nicht in nicht vertrauenswürdigen Szenarien.  
> -   Schema Validierungs Fehlermeldungen und-Ausnahmen können vertrauliche Informationen über das Inhalts Modell oder URI-Pfade zur Schema Datei verfügbar machen. Achten Sie darauf, diese Informationen nicht für nicht vertrauenswürdige Aufrufer verfügbar zu machen.  
  
 Mit der <xref:System.Xml.Schema.XmlSchemaInference>-Klasse im <xref:System.Xml.Schema?displayProperty=nameWithType>-Namespace können Sie ein XSD-Schema (XML Schema Definition Language) aus der Struktur eines XML-Dokuments ableiten. Die <xref:System.Xml.Schema.XmlSchemaInference>-Klasse gibt ein XML-Schema zur Validierung des XML-Dokuments aus.  
  
 Die <xref:System.Xml.Schema.XmlSchemaInference>-Klasse unterstützt die W3C-XML-und XML-Schemas-Standards. Sie kann verwendet werden, um ein neues Schema abzuleiten oder ein vorhandenes Schema zu verfeinern.  
  
   
  
## Examples  
 In diesem Beispiel wird eine XML-Datei als Eingabe angenommen und ein Schema generiert, mit dem die XML-Beispieldatei überprüft werden kann.  
  
 [!code-cpp[XmlSchemaInferenceExamples#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#1)]
 [!code-csharp[XmlSchemaInferenceExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#1)]
 [!code-vb[XmlSchemaInferenceExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#1)]  
  
 Im folgenden finden Sie die XML-Eingabedatei.  
  
 [!code-xml[XmlSchemaInferenceExamples#5](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xml#5)]  
  
 Im folgenden wird das aus dem XML-Dokument herleitet Schema angezeigt.  
  
 [!code-xml[XmlSchemaInferenceExamples#6](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xsd#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaInference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaInference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaInference" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InferSchema">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Leitet ein XSD-Schema (XML Schema Definition) vom angegebenen XML-Dokument ab.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InferSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaSet InferSchema(class System.Xml.XmlReader instanceDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function InferSchema (instanceDocument As XmlReader) As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaSet ^ InferSchema(System::Xml::XmlReader ^ instanceDocument);" />
      <MemberSignature Language="F#" Value="member this.InferSchema : System.Xml.XmlReader -&gt; System.Xml.Schema.XmlSchemaSet" Usage="xmlSchemaInference.InferSchema instanceDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceDocument" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="instanceDocument">Ein <see cref="T:System.Xml.XmlReader" />-Objekt, das das XML-Dokument enthält, von dem ein Schema abgeleitet werden soll.</param>
        <summary>Leitet ein XSD-Schema (XML Schema Definition) von dem XML-Dokument ab, das im angegebenen <see cref="T:System.Xml.XmlReader" />-Objekt enthalten ist.</summary>
        <returns>Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Objekt, das die abgeleiteten Schemas enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>-Methode leitet mindestens ein W3C-XSD-Schema (XML Schema Definition Language) aus dem XML-Instanzdokument ab, das im angegebenen <xref:System.Xml.XmlReader>-Objekt enthalten ist. Wenn das XML-Dokument Elemente und Attribute aus mehreren Namespaces enthält, werden mehrere Schemas generiert: eine für jeden Namespace, der im Dokument verwendet wird. Das primäre Schema ist das Schema, mit dem das gesamte XML-Dokument überprüft werden kann, und der Ziel Namespace entspricht dem Namespace des Document-Elements des XML-Dokuments.  
  
 Beachten Sie die folgenden wichtigen Hinweise, wenn Sie die <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>-Methode verwenden.  
  
-   Die <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>-Methode ignoriert alle `xsi:type`-, `xsi:schemaLocation`-oder `xsi:noNamespaceSchemaLocation` Attribute im XML-Dokument.  
  
-   Wenn das <xref:System.Xml.XmlReader> Objekt eingegeben wird, werden die darin enthaltenen Typinformationen ignoriert.  
  
-   Wenn das <xref:System.Xml.XmlReader>-Objekt auf einem Element positioniert ist, das nicht das Stamm Element des XML-Dokuments ist, wird ein Schema nur für dieses Element abgeleitet. Wenn das <xref:System.Xml.XmlReader> Objekt nicht auf einem Element positioniert ist, wird die <xref:System.Xml.XmlReader.Read%2A>-Methode für den <xref:System.Xml.XmlReader>-Parameter aufgerufen, bis ein Element gefunden wird (z. b. wenn <xref:System.Xml.XmlReader.NodeType%2A> <xref:System.Xml.XmlNodeType.Element>ist). An diesem Punkt beginnt der Rückschluss Prozess von diesem Element. Wenn bis zum Ende des Dokuments kein Element gefunden wird, wird ein <xref:System.ArgumentException> ausgelöst.  
  
   
  
## Examples  
 In diesem Beispiel wird eine XML-Datei als Eingabe angenommen und ein Schema generiert, mit dem die XML-Beispieldatei überprüft werden kann.  
  
 [!code-cpp[XmlSchemaInferenceExamples#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#1)]
 [!code-csharp[XmlSchemaInferenceExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#1)]
 [!code-vb[XmlSchemaInferenceExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#1)]  
  
 Im folgenden finden Sie die XML-Eingabedatei.  
  
 [!code-xml[XmlSchemaInferenceExamples#5](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xml#5)]  
  
 Im folgenden wird das aus dem XML-Dokument herleitet Schema angezeigt.  
  
 [!code-xml[XmlSchemaInferenceExamples#6](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xsd#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Das XML-Dokument ist nicht wohlgeformt.</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">Das <see cref="T:System.Xml.XmlReader" />-Objekt ist nicht auf dem Stammknoten oder auf einem Element positioniert. Während des Schemarückschlussprozesses tritt ein Fehler auf.</exception>
      </Docs>
    </Member>
    <Member MemberName="InferSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument, System.Xml.Schema.XmlSchemaSet schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaSet InferSchema(class System.Xml.XmlReader instanceDocument, class System.Xml.Schema.XmlSchemaSet schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function InferSchema (instanceDocument As XmlReader, schemas As XmlSchemaSet) As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaSet ^ InferSchema(System::Xml::XmlReader ^ instanceDocument, System::Xml::Schema::XmlSchemaSet ^ schemas);" />
      <MemberSignature Language="F#" Value="member this.InferSchema : System.Xml.XmlReader * System.Xml.Schema.XmlSchemaSet -&gt; System.Xml.Schema.XmlSchemaSet" Usage="xmlSchemaInference.InferSchema (instanceDocument, schemas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceDocument" Type="System.Xml.XmlReader" />
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="instanceDocument">Ein <see cref="T:System.Xml.XmlReader" />-Objekt, das das XML-Dokument enthält, von dem ein Schema abgeleitet werden soll.</param>
        <param name="schemas">Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Objekt, das ein vorhandenes Schema enthält, das zum Anpassen des abgeleiteten Schemas verwendet wurde.</param>
        <summary>Leitet ein XSD-Schema (XML Schema Definition) von dem XML-Dokument ab, das im angegebenen <see cref="T:System.Xml.XmlReader" />-Objekt enthalten ist, und passt das abgeleitete Schema mithilfe eines im <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Objekt vorhandenen Schemas an, das mit demselben Zielnamespace angegeben ist.</summary>
        <returns>Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Objekt, das die abgeleiteten Schemas enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>-Methode leitet mindestens ein W3C-XSD-Schema (XML Schema Definition Language) aus dem XML-Instanzdokument ab, das im angegebenen <xref:System.Xml.XmlReader>-Objekt enthalten ist. Wenn das XML-Dokument Elemente und Attribute aus mehreren Namespaces enthält, werden mehrere Schemas generiert: eine für jeden Namespace, der im Dokument verwendet wird. Das primäre Schema ist das Schema, mit dem das gesamte XML-Dokument überprüft werden kann, und der Ziel Namespace entspricht dem Namespace des Document-Elements des XML-Dokuments.  
  
 Beachten Sie die folgenden wichtigen Hinweise, wenn Sie die <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>-Methode verwenden.  
  
-   Die <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>-Methode ignoriert alle `xsi:type`-, `xsi:schemaLocation`-oder `xsi:noNamespaceSchemaLocation` Attribute im XML-Dokument.  
  
-   Wenn das <xref:System.Xml.XmlReader> Objekt eingegeben wird, werden die darin enthaltenen Typinformationen ignoriert.  
  
-   Wenn das <xref:System.Xml.XmlReader>-Objekt auf einem Element positioniert ist, das nicht das Stamm Element des XML-Dokuments ist, wird ein Schema nur für dieses Element abgeleitet. Wenn das <xref:System.Xml.XmlReader> Objekt nicht auf einem Element positioniert ist, wird die <xref:System.Xml.XmlReader.Read%2A>-Methode für den <xref:System.Xml.XmlReader>-Parameter aufgerufen, bis ein Element gefunden wird (z. b. wenn <xref:System.Xml.XmlReader.NodeType%2A> <xref:System.Xml.XmlNodeType.Element>ist). An diesem Punkt beginnt der Rückschluss Prozess von diesem Element. Wenn bis zum Ende des Dokuments kein Element gefunden wird, wird ein <xref:System.ArgumentException> ausgelöst.  
  
-   Wenn ein <xref:System.Xml.Schema.XmlSchemaSet> Objekt als Parameter übergeben wird und das Element, auf dem das <xref:System.Xml.XmlReader>-Objekt positioniert ist, in einem der Schemas im <xref:System.Xml.Schema.XmlSchemaSet>definiert ist, wird das abhergelegte Schema verwendet, um ein vorhandenes Schema im <xref:System.Xml.Schema.XmlSchemaSet> Parameter mit demselben Ziel Namespace zu verfeinern. Andernfalls wird für den Namespace ein neues Schema abgeleitet.  
  
   
  
## Examples  
 Im folgenden Beispielcode wird das XML-Dokument 1 als Eingabe und ein Schema generiert, das XML-Dokument 1 validieren kann. Der Beispielcode nimmt dann das XML-Dokument 2 an und verfeinert das Schema, das aus dem XML-Dokument 1 generiert wurde, basierend auf den in XML-Dokument 2 gefundenen Änderungen.  
  
 Folgendes ist das XML-Dokument 1.  
  
 [!code-xml[XmlSchemaInferenceExamples#13](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/item1.xml#13)]  
  
 Folgendes ist das XML-Dokument 2.  
  
 [!code-xml[XmlSchemaInferenceExamples#14](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/item2.xml#14)]  
  
 Der folgende Beispielcode leitet ein Schema aus dem ersten XML-Dokument ab, das in `reader`enthalten ist, und verfeinert dann das abherzustellte Schema mit den Änderungen, die im zweiten XML-Dokument in `reader1`enthalten sind. Im Beispielcode wird die erste überladene <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>-Methode verwendet, um das Schema abzuleiten, und die zweite überladene <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> Methode, um das vorhandene Schema im <xref:System.Xml.Schema.XmlSchemaSet>-Objekt zu verfeinern.  
  
 [!code-cpp[XmlSchemaInferenceExamples#4](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#4)]
 [!code-csharp[XmlSchemaInferenceExamples#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#4)]
 [!code-vb[XmlSchemaInferenceExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#4)]  
  
 Das folgende Schema ist das Schema, das aus dem XML-Dokument 1 abgeleitet wurde.  
  
 [!code-xml[XmlSchemaInferenceExamples#15](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/InferSchema1.xml#15)]  
  
 Das folgende Schema ist die raffinierte Version des obigen Schemas, basierend auf dem XML-Dokument 2.  
  
 [!code-xml[XmlSchemaInferenceExamples#16](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/InferSchema2.xml#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Das XML-Dokument ist nicht wohlgeformt.</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">Das <see cref="T:System.Xml.XmlReader" />-Objekt ist nicht auf dem Stammknoten oder auf einem Element positioniert. Während des Schemarückschlussprozesses tritt ein Fehler auf.</exception>
      </Docs>
    </Member>
    <Member MemberName="Occurrence">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaInference.InferenceOption Occurrence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaInference/InferenceOption Occurrence" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaInference.Occurrence" />
      <MemberSignature Language="VB.NET" Value="Public Property Occurrence As XmlSchemaInference.InferenceOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaInference::InferenceOption Occurrence { System::Xml::Schema::XmlSchemaInference::InferenceOption get(); void set(System::Xml::Schema::XmlSchemaInference::InferenceOption value); };" />
      <MemberSignature Language="F#" Value="member this.Occurrence : System.Xml.Schema.XmlSchemaInference.InferenceOption with get, set" Usage="System.Xml.Schema.XmlSchemaInference.Occurrence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaInference+InferenceOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />-Wert ab, der sich auf die vom XML-Dokument abgeleiteten Deklarationen von Schemavorkommen auswirkt, oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />-Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A>-Eigenschaft auf <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>festgelegt ist, wird die Schema Deklaration als `minOccurs="1"`abgeleitet, wenn Elemente im XML-Dokument zum ersten Mal gefunden werden. Wenn Attribute gefunden werden, wird die Schema Deklaration als `use="required"`abgeleitet.  
  
 Wenn die <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A>-Eigenschaft auf <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>festgelegt ist, werden Element Schema Deklarationen als `minOccurs="0"`abgeleitet, und Attribut Schema Deklarationen werden als `use="optional"`abgeleitet.  
  
 Der Standardwert der <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A>-Eigenschaft ist <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>.  
  
   
  
## Examples  
 In diesem Beispiel wird veranschaulicht, wie das Vorkommen von der <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A>-Eigenschaft beeinflusst wird. Der Beispielcode leitet das Vorkommen von einer XML-Datei auf zwei verschiedene Arten ab: gelockert und eingeschränkt. Im folgenden finden Sie die Beispiel-XML-Datei.  
  
 [!code-xml[XmlSchemaInferenceExamples#7](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence1.xml#7)]  
  
 Der folgende Beispielcode weist die <xref:System.Xml.Schema.XmlSchemaInference>-Klasse an, das Vorkommen von Elementen und Attributen auf eine gelockerte Weise abzuleiten.  
  
 [!code-cpp[XmlSchemaInferenceExamples#2](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#2)]
 [!code-csharp[XmlSchemaInferenceExamples#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#2)]
 [!code-vb[XmlSchemaInferenceExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#2)]  
  
 Da die <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A>-Eigenschaft auf <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>festgelegt wurde, wurde das folgende Schema generiert.  
  
 [!code-xml[XmlSchemaInferenceExamples#8](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence2.xml#8)]  
  
 Wenn die <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A>-Eigenschaft im obigen Beispielcode nicht auf <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>festgelegt wurde, wurde die <xref:System.Xml.Schema.XmlSchemaInference>-Klasse standardmäßig auf <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted> festgelegt und das folgende Schema generiert.  
  
 [!code-xml[XmlSchemaInferenceExamples#9](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence3.xml#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInference">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaInference.InferenceOption TypeInference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaInference/InferenceOption TypeInference" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaInference.TypeInference" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeInference As XmlSchemaInference.InferenceOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaInference::InferenceOption TypeInference { System::Xml::Schema::XmlSchemaInference::InferenceOption get(); void set(System::Xml::Schema::XmlSchemaInference::InferenceOption value); };" />
      <MemberSignature Language="F#" Value="member this.TypeInference : System.Xml.Schema.XmlSchemaInference.InferenceOption with get, set" Usage="System.Xml.Schema.XmlSchemaInference.TypeInference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaInference+InferenceOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />-Wert ab, der sich auf vom XML-Dokument abgeleitete Typen auswirkt, oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />-Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A>-Eigenschaft auf <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>festgelegt ist, werden die abzurufenden Elemente und Attribute im XML-Dokument mit einfachem Inhalt immer `xs:string`. Wenn die <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A>-Eigenschaft auf <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>festgelegt ist, werden spezifischere Typen abgeleitet, z. b. `xs:date`, `xs:decimal`, `xs:unsignedByte`usw.  
  
 Der Standardwert der <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A>-Eigenschaft ist <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>.  
  
   
  
## Examples  
 Dieses Beispiel veranschaulicht, wie sich die <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A>-Eigenschaft auf den Typrückschluss auswirkt. Der Beispielcode leitet Typen aus einer XML-Datei auf zwei verschiedene Arten ab: gelockert und eingeschränkt. Im folgenden finden Sie die Beispiel-XML-Datei.  
  
 [!code-xml[XmlSchemaInferenceExamples#10](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference1.xml#10)]  
  
 Der folgende Beispielcode weist die <xref:System.Xml.Schema.XmlSchemaInference>-Klasse an, `xs:string` für Elemente und Attribute mit einfachem Inhalt abzuleiten.  
  
 [!code-cpp[XmlSchemaInferenceExamples#3](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#3)]
 [!code-csharp[XmlSchemaInferenceExamples#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#3)]
 [!code-vb[XmlSchemaInferenceExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#3)]  
  
 Da die <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A>-Eigenschaft auf <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>festgelegt wurde, wurde das folgende Schema generiert.  
  
 [!code-xml[XmlSchemaInferenceExamples#11](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference2.xml#11)]  
  
 Wenn die <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A>-Eigenschaft im obigen Beispielcode nicht auf <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>festgelegt wurde, wurde die <xref:System.Xml.Schema.XmlSchemaInference>-Klasse standardmäßig auf <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted> festgelegt und das folgende Schema generiert.  
  
 [!code-xml[XmlSchemaInferenceExamples#12](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference3.xml#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
