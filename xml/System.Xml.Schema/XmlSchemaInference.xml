<Type Name="XmlSchemaInference" FullName="System.Xml.Schema.XmlSchemaInference">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62876c02d7e8ba8a0dbc83e63c28148c0155698a" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39845577" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlSchemaInference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlSchemaInference extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaInference" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlSchemaInference" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaInference sealed" />
  <TypeSignature Language="F#" Value="type XmlSchemaInference = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Leitet ein XSD-Schema (XML Schema Definition) von einem XML-Dokument ab. Die <see cref="T:System.Xml.Schema.XmlSchemaInference" />-Klasse kann nicht geerbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  -   Verwenden Sie die Schemas aus unbekannten oder nicht vertrauenswürdigen Quellen oder Standorte nicht zu. Auf diese Weise wird die Sicherheit Ihres Codes gefährdet werden.  
> -   XML-Schemas (auch Inlineschemas) sind von Natur aus anfällig für DOS-Angriffe; Akzeptieren Sie sie nicht in nicht vertrauenswürdigen Szenarios.  
> -   Schema-Validation-Fehlermeldungen und Ausnahmen können vertrauliche Informationen über die Content-Modell oder das URI-Pfade zur Schemadatei verfügbar machen. Achten Sie darauf, dass Sie nicht diese Informationen, um nicht vertrauenswürdige Aufrufer verfügbar zu machen.  
  
 Die <xref:System.Xml.Schema.XmlSchemaInference> -Klasse in der <xref:System.Xml.Schema?displayProperty=nameWithType> Namespace ermöglicht Ihnen das Herleiten eines Schemas XML Schema Definition Language (XSD) aus der Struktur eines XML-Dokuments. Die <xref:System.Xml.Schema.XmlSchemaInference>-Klasse gibt ein XML-Schema zur Validierung des XML-Dokuments aus.  
  
 Die <xref:System.Xml.Schema.XmlSchemaInference> Klasse unterstützt die W3C-XML und XML-Schemas Standards. Sie können ein neues Schema ableiten oder Anpassen eines vorhandenen Schemas verwendet werden.  
  
   
  
## Examples  
 In diesem Beispiel wird eine XML-Datei als Eingabe akzeptiert, und generiert ein Schema, die die Beispiel-XML validieren kann.  
  
 [!code-cpp[XmlSchemaInferenceExamples#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#1)]
 [!code-csharp[XmlSchemaInferenceExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#1)]
 [!code-vb[XmlSchemaInferenceExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#1)]  
  
 Im folgenden finden die XML-Eingabedatei.  
  
 [!code-xml[XmlSchemaInferenceExamples#5](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xml#5)]  
  
 Im folgenden wird das aus dem XML-Dokument hergeleitete Schema.  
  
 [!code-xml[XmlSchemaInferenceExamples#6](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xsd#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaInference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaInference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaInference" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InferSchema">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Leitet ein XSD-Schema (XML Schema Definition) vom angegebenen XML-Dokument ab.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InferSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaSet InferSchema(class System.Xml.XmlReader instanceDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function InferSchema (instanceDocument As XmlReader) As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaSet ^ InferSchema(System::Xml::XmlReader ^ instanceDocument);" />
      <MemberSignature Language="F#" Value="member this.InferSchema : System.Xml.XmlReader -&gt; System.Xml.Schema.XmlSchemaSet" Usage="xmlSchemaInference.InferSchema instanceDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceDocument" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="instanceDocument">Ein <see cref="T:System.Xml.XmlReader" />-Objekt, das das XML-Dokument enthält, von dem ein Schema abgeleitet werden soll.</param>
        <summary>Leitet ein XSD-Schema (XML Schema Definition) von dem XML-Dokument ab, das im angegebenen <see cref="T:System.Xml.XmlReader" />-Objekt enthalten ist.</summary>
        <returns>Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Objekt, das die abgeleiteten Schemas enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> Methode leitet eine oder mehrere W3C XML Schema Definition Language (XSD)-Schemas aus der XML-Instanz im enthaltenen Dokument die <xref:System.Xml.XmlReader> Objekt angegeben wird. Wenn das XML-Dokument enthält Elemente und Attribute aus mehreren Namespaces, mehrere Schemas generiert: eine für jeden Namespace, die in diesem Dokument verwendet. Das primäre Schema ist das Schema, das das gesamte XML-Dokument überprüfen kann, und der Zielnamespace ist der Namespace des XML-Dokument das Dokumentelement identisch.  
  
 Im folgenden sind wichtige Hinweise, berücksichtigen bei Verwendung der <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> Methode.  
  
-   Die <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> Methode ignoriert alle `xsi:type`, `xsi:schemaLocation`, oder `xsi:noNamespaceSchemaLocation` Attribute im XML-Dokument.  
  
-   Wenn die <xref:System.Xml.XmlReader> Objekt typisiert ist, werden die darin enthaltenen Typinformationen wird ignoriert.  
  
-   Wenn die <xref:System.Xml.XmlReader> -Objekt positioniert ist, auf ein Element, das nicht das Stammelement des XML-Dokuments ist, ein Schema nur für dieses Element abgeleitet ist. Wenn die <xref:System.Xml.XmlReader> Objekt befindet sich nicht auf ein Element, die <xref:System.Xml.XmlReader.Read%2A> Methode wird aufgerufen, auf die <xref:System.Xml.XmlReader> Parameter, bis ein Element gefunden wird (z. B. wenn <xref:System.Xml.XmlReader.NodeType%2A> ist <xref:System.Xml.XmlNodeType.Element>). An diesem Punkt startet die Ableitung von diesem Element. Wenn kein Element, bis zum Ende des Dokuments gefunden wird eine <xref:System.ArgumentException> ausgelöst.  
  
   
  
## Examples  
 In diesem Beispiel wird eine XML-Datei als Eingabe akzeptiert, und generiert ein Schema, die die Beispiel-XML validieren kann.  
  
 [!code-cpp[XmlSchemaInferenceExamples#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#1)]
 [!code-csharp[XmlSchemaInferenceExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#1)]
 [!code-vb[XmlSchemaInferenceExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#1)]  
  
 Im folgenden finden die XML-Eingabedatei.  
  
 [!code-xml[XmlSchemaInferenceExamples#5](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xml#5)]  
  
 Im folgenden wird das aus dem XML-Dokument hergeleitete Schema.  
  
 [!code-xml[XmlSchemaInferenceExamples#6](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xsd#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Das XML-Dokument ist nicht wohlgeformt.</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">Das <see cref="T:System.Xml.XmlReader" />-Objekt ist nicht auf dem Stammknoten oder auf einem Element positioniert. Während des Schemarückschlussprozesses tritt ein Fehler auf.</exception>
      </Docs>
    </Member>
    <Member MemberName="InferSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument, System.Xml.Schema.XmlSchemaSet schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaSet InferSchema(class System.Xml.XmlReader instanceDocument, class System.Xml.Schema.XmlSchemaSet schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function InferSchema (instanceDocument As XmlReader, schemas As XmlSchemaSet) As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaSet ^ InferSchema(System::Xml::XmlReader ^ instanceDocument, System::Xml::Schema::XmlSchemaSet ^ schemas);" />
      <MemberSignature Language="F#" Value="member this.InferSchema : System.Xml.XmlReader * System.Xml.Schema.XmlSchemaSet -&gt; System.Xml.Schema.XmlSchemaSet" Usage="xmlSchemaInference.InferSchema (instanceDocument, schemas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceDocument" Type="System.Xml.XmlReader" />
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="instanceDocument">Ein <see cref="T:System.Xml.XmlReader" />-Objekt, das das XML-Dokument enthält, von dem ein Schema abgeleitet werden soll.</param>
        <param name="schemas">Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Objekt, das ein vorhandenes Schema enthält, das zum Anpassen des abgeleiteten Schemas verwendet wurde.</param>
        <summary>Leitet ein XSD-Schema (XML Schema Definition) von dem XML-Dokument ab, das im angegebenen <see cref="T:System.Xml.XmlReader" />-Objekt enthalten ist, und passt das abgeleitete Schema mithilfe eines im <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Objekt vorhandenen Schemas an, das mit demselben Zielnamespace angegeben ist.</summary>
        <returns>Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Objekt, das die abgeleiteten Schemas enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> Methode leitet eine oder mehrere W3C XML Schema Definition Language (XSD)-Schemas aus der XML-Instanz im enthaltenen Dokument die <xref:System.Xml.XmlReader> Objekt angegeben wird. Wenn das XML-Dokument Elemente und Attribute aus mehreren Namespaces enthält, werden mehrere Schemas generiert: eine für jeden Namespace, die in diesem Dokument verwendet. Das primäre Schema ist das Schema, das das gesamte XML-Dokument überprüfen kann, und der Zielnamespace ist der Namespace des XML-Dokument das Dokumentelement identisch.  
  
 Im folgenden sind wichtige Hinweise, berücksichtigen bei Verwendung der <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> Methode.  
  
-   Die <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> Methode ignoriert alle `xsi:type`, `xsi:schemaLocation`, oder `xsi:noNamespaceSchemaLocation` Attribute im XML-Dokument.  
  
-   Wenn die <xref:System.Xml.XmlReader> Objekt typisiert ist, werden die darin enthaltenen Typinformationen wird ignoriert.  
  
-   Wenn die <xref:System.Xml.XmlReader> -Objekt positioniert ist, auf ein Element, das nicht das Stammelement des XML-Dokuments ist, ein Schema nur für dieses Element abgeleitet ist. Wenn die <xref:System.Xml.XmlReader> Objekt befindet sich nicht auf ein Element, die <xref:System.Xml.XmlReader.Read%2A> Methode wird aufgerufen, auf die <xref:System.Xml.XmlReader> Parameter, bis ein Element gefunden wird (z. B. wenn <xref:System.Xml.XmlReader.NodeType%2A> ist <xref:System.Xml.XmlNodeType.Element>). An diesem Punkt startet die Ableitung von diesem Element. Wenn kein Element, bis zum Ende des Dokuments gefunden wird eine <xref:System.ArgumentException> ausgelöst.  
  
-   Wenn ein <xref:System.Xml.Schema.XmlSchemaSet> Objekt wird als Parameter an und das Element auf dem Übergeben der <xref:System.Xml.XmlReader> -Objekt positioniert ist in eines der Schemas in definiert ist der <xref:System.Xml.Schema.XmlSchemaSet>, des abgeleiteten Schemas wird zum Anpassen eines vorhandenen Schemas in der <xref:System.Xml.Schema.XmlSchemaSet> Parameter mit den gleichen Zielnamespace; Andernfalls wird ein neues Schema für den Namespace abgeleitet.  
  
   
  
## Examples  
 Der folgende Beispielcode akzeptiert XML-Dokument 1 als Eingabe und erzeugt ein Schema, das XML-Dokument 1 überprüfen kann. Im Beispielcode wird dann akzeptiert XML-Dokument 2 und passt das Schema aus der XML-Dokument 1, basierend auf den Änderungen finden Sie in der XML-Dokument 2 generiert.  
  
 Im folgenden finden XML-Dokument 1.  
  
 [!code-xml[XmlSchemaInferenceExamples#13](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/item1.xml#13)]  
  
 Im folgenden finden XML-Dokument 2.  
  
 [!code-xml[XmlSchemaInferenceExamples#14](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/item2.xml#14)]  
  
 Der folgende Beispielcode leitet ein Schema aus dem ersten XML-Dokument, die in enthaltenen `reader`, und klicken Sie dann passt das abgeleitete Schema mit den Änderungen finden Sie in das zweite XML-Dokument, die in enthaltenen `reader1`. Der Beispielcode verwendet die erste überladene <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> überladene Methode, um das Schema, und die zweite ableiten <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> Methode zum Anpassen des vorhandenen Schemas in der <xref:System.Xml.Schema.XmlSchemaSet> Objekt.  
  
 [!code-cpp[XmlSchemaInferenceExamples#4](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#4)]
 [!code-csharp[XmlSchemaInferenceExamples#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#4)]
 [!code-vb[XmlSchemaInferenceExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#4)]  
  
 Das folgende Schema ist das Schema von XML-Dokument 1 abgeleitet.  
  
 [!code-xml[XmlSchemaInferenceExamples#15](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/InferSchema1.xml#15)]  
  
 Das folgende Schema basiert die angepasste Version des obigen Schemas für XML-Dokument 2.  
  
 [!code-xml[XmlSchemaInferenceExamples#16](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/InferSchema2.xml#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">Das XML-Dokument ist nicht wohlgeformt.</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">Das <see cref="T:System.Xml.XmlReader" />-Objekt ist nicht auf dem Stammknoten oder auf einem Element positioniert. Während des Schemarückschlussprozesses tritt ein Fehler auf.</exception>
      </Docs>
    </Member>
    <Member MemberName="Occurrence">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaInference.InferenceOption Occurrence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaInference/InferenceOption Occurrence" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaInference.Occurrence" />
      <MemberSignature Language="VB.NET" Value="Public Property Occurrence As XmlSchemaInference.InferenceOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaInference::InferenceOption Occurrence { System::Xml::Schema::XmlSchemaInference::InferenceOption get(); void set(System::Xml::Schema::XmlSchemaInference::InferenceOption value); };" />
      <MemberSignature Language="F#" Value="member this.Occurrence : System.Xml.Schema.XmlSchemaInference.InferenceOption with get, set" Usage="System.Xml.Schema.XmlSchemaInference.Occurrence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaInference+InferenceOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />-Wert ab, der sich auf die vom XML-Dokument abgeleiteten Deklarationen von Schemavorkommen auswirkt, oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />-Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> -Eigenschaftensatz auf <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>, die erste Uhrzeitelemente in der XML-Dokument erkannt werden, wird die Schemadeklaration als `minOccurs="1"`. Wenn Attribute gefunden werden, wird die Schemadeklaration als `use="required"`.  
  
 Wenn die <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> -Eigenschaftensatz auf <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, Schema-Elementdeklarationen als hergeleitet werden `minOccurs="0"`, und Attributdeklarationen-Schema abgeleitet werden, als `use="optional"`.  
  
 Der Standardwert der <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> Eigenschaft <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>.  
  
   
  
## Examples  
 In diesem Beispiel wird veranschaulicht, wie Vorkommen betroffen ist die <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> Eigenschaft. Der Beispielcode leitet Vorkommen aus einer XML-Datei auf zwei Arten: gelockert und beschränkt. Im folgenden finden die Beispiel-XML-Datei.  
  
 [!code-xml[XmlSchemaInferenceExamples#7](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence1.xml#7)]  
  
 Der folgende Beispielcode weist der <xref:System.Xml.Schema.XmlSchemaInference> Klasse, um die Vorkommen von Elementen und Attributen in einer weniger strengen Weise abzuleiten.  
  
 [!code-cpp[XmlSchemaInferenceExamples#2](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#2)]
 [!code-csharp[XmlSchemaInferenceExamples#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#2)]
 [!code-vb[XmlSchemaInferenceExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#2)]  
  
 Da die <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> -Eigenschaft wurde festgelegt, um <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, das folgende Schema generiert wurde.  
  
 [!code-xml[XmlSchemaInferenceExamples#8](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence2.xml#8)]  
  
 Im obigen Beispielcode die <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> Eigenschaft wurde nicht festgelegt, um <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, <xref:System.Xml.Schema.XmlSchemaInference> Klasse Standardwert von <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted> und generiert das folgende Schema.  
  
 [!code-xml[XmlSchemaInferenceExamples#9](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence3.xml#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInference">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaInference.InferenceOption TypeInference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaInference/InferenceOption TypeInference" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaInference.TypeInference" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeInference As XmlSchemaInference.InferenceOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaInference::InferenceOption TypeInference { System::Xml::Schema::XmlSchemaInference::InferenceOption get(); void set(System::Xml::Schema::XmlSchemaInference::InferenceOption value); };" />
      <MemberSignature Language="F#" Value="member this.TypeInference : System.Xml.Schema.XmlSchemaInference.InferenceOption with get, set" Usage="System.Xml.Schema.XmlSchemaInference.TypeInference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaInference+InferenceOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />-Wert ab, der sich auf vom XML-Dokument abgeleitete Typen auswirkt, oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />-Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> -Eigenschaftensatz auf <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, der abgeleitete Typ der Elemente und Attribute im XML-Dokument mit einfachem Inhalt ist immer `xs:string`. Wenn die <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> -Eigenschaftensatz auf <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>, spezifische Typen abgeleitet werden, z. B. `xs:date`, `xs:decimal`, `xs:unsignedByte`und so weiter.  
  
 Der Standardwert der <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> Eigenschaft <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>.  
  
   
  
## Examples  
 In diesem Beispiel wird veranschaulicht, wie Typrückschluss betroffen ist die <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> Eigenschaft. Im Beispielcode abgeleitet Typen aus einer XML-Datei auf zwei Arten: gelockert und beschränkt. Im folgenden finden die Beispiel-XML-Datei.  
  
 [!code-xml[XmlSchemaInferenceExamples#10](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference1.xml#10)]  
  
 Der folgende Beispielcode weist der <xref:System.Xml.Schema.XmlSchemaInference> -Klasse zum Herleiten `xs:string` für Elemente und Attribute mit einfachem Inhalt.  
  
 [!code-cpp[XmlSchemaInferenceExamples#3](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#3)]
 [!code-csharp[XmlSchemaInferenceExamples#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#3)]
 [!code-vb[XmlSchemaInferenceExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#3)]  
  
 Da die <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> -Eigenschaft wurde festgelegt, um <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, das folgende Schema generiert wurde.  
  
 [!code-xml[XmlSchemaInferenceExamples#11](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference2.xml#11)]  
  
 Im obigen Beispielcode die <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> Eigenschaft wurde nicht festgelegt, um <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, <xref:System.Xml.Schema.XmlSchemaInference> Klasse Standardwert von <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted> und generiert das folgende Schema.  
  
 [!code-xml[XmlSchemaInferenceExamples#12](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference3.xml#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>