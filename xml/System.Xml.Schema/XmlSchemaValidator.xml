<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlSchemaValidator.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5593dcfff13b2f3c4579da94de3116830777dc050.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">593dcfff13b2f3c4579da94de3116830777dc050</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Represents an XML Schema Definition Language (XSD) Schema validation engine.</source>
          <target state="translated">Stellt ein XSD-Schema-Validierungsmodul (XML Schema Definition Language) dar.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> class cannot be inherited.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph>-Klasse kann nicht geerbt werden.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Do not use schemas from unknown or untrusted sources or locations.</source>
          <target state="translated">Verwenden Sie keine Schemata aus unbekannten oder nicht vertrauenswürdigen Quellen oder Speicherorte.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Doing so will compromise the security of your code.</source>
          <target state="translated">Auf diese Weise gefährdet die Sicherheit des Codes.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.</source>
          <target state="translated">XML-Schemas (auch Inlineschemas) sind von Natur aus anfällig für DOS-Angriffe. Akzeptieren Sie diese nicht in nicht vertrauenswürdigen Szenarien.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file.</source>
          <target state="translated">Schema-Validation-Fehlermeldungen und Ausnahmen möglicherweise vertrauliche Informationen zu den Inhaltsmodell oder die Pfade der URI der Schemadatei verfügbar machen.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Be careful not to expose this information to untrusted callers.</source>
          <target state="translated">Achten Sie darauf, dass Sie nicht diese Informationen nicht vertrauenswürdige Aufrufer verfügbar zu machen.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class provides an efficient, high-performance mechanism to validate XML data against XML schemas in a push-based manner.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph>-Klasse stellt eine effiziente leistungsstarke Methode zum Validieren von XML-Daten anhand von XML-Schemata in einem Push-Verfahren bereit.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>For example, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class allows you to validate an XML infoset in-place without having to serialize it as an XML document and then reparse the document using a validating XML reader.</source>
          <target state="translated">Zum Beispiel ermöglicht Ihnen die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph>-Klasse das direkte Validieren eines XML-Infosets, ohne es als XML-Dokument serialisieren zu müssen, und das anschließende erneute Analysieren des XML-Infosets mithilfe eines validierenden XML-Readers.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class can also be used to build validation engines over custom XML data sources or as a way to build a validating XML writer.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> Klasse kann auch verwendet werden, um das Erstellen von Validierungsmodulen für benutzerdefinierte XML-Datenquellen oder als eine Möglichkeit zum Erstellen eines validierenden XML-Writers.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>For more information about the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class, see the <bpt id="p1">[</bpt>XmlSchemaValidator Push-Based Validation<ept id="p1">](~/docs/standard/data/xml/xmlschemavalidator-push-based-validation.md)</ept> topic.</source>
          <target state="translated">Weitere Informationen zu den <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> Klasse, finden Sie unter der <bpt id="p1">[</bpt>XmlSchemaValidator pushbasierte Validierung<ept id="p1">](~/docs/standard/data/xml/xmlschemavalidator-push-based-validation.md)</ept> Thema.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> validation flags of an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object are not set be default.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> und <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> Validierungsflag eines ein <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> Objekt sind nicht standardmäßig sein.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Additionally, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;</ph> property of an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object is <ph id="ph3">`null`</ph> by default.</source>
          <target state="translated">Darüber hinaus die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;</ph> Eigenschaft ein <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> Objekt <ph id="ph3">`null`</ph> standardmäßig.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.</source>
          <target state="translated">Daher werden enthalten externe Schemata in verwiesen wird, Importe oder Redefine Elemente nicht standardmäßig aufgelöst.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">Das folgende Beispiel überprüft die <ph id="ph1">`contosoBooks.xml`</ph> -Datei anhand der <ph id="ph2">`contosoBooks.xsd`</ph> Schema.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">Im Beispiel wird mit der <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>-Klasse die <ph id="ph2">`contosoBooks.xml`</ph>-Datei deserialisiert, und der Wert der Knoten wird an die Methoden der <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph>-Klasse übergeben.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">In diesem Beispiel wird die Datei <ph id="ph1">`contosoBooks.xml`</ph> als Eingabe verwendet.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">In diesem Beispiel wird auch <ph id="ph1">`contosoBooks.xsd`</ph> als Eingabe verwendet.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> object containing element and attribute names as atomized strings.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph>-Objekt, das Element- und Attributnamen als atomisierte Zeichenfolgen enthält.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> object containing the XML Schema Definition Language (XSD) schemas used for validation.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>-Objekt, das die für die Validierung verwendeten XSD-Schemas (XML Schema Definition Language) enthält.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> object used for resolving namespaces encountered during validation.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph>-Objekt mit dem Namespaces aufgelöst werden, die während der Validierung gefunden werden.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidationFlags" /&gt;</ph> value specifying schema validation options.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidationFlags" /&gt;</ph>-Wert, der Schemavalidierungsoptionen angibt.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">Im folgenden sind wichtige Hinweise zum Verwenden der <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt;</ph> Konstruktor.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>The contents of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> parameter are copied into an internal <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object when the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> or the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> validation options are set.</source>
          <target state="translated">Den Inhalt des der <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> Parameter werden in eine interne kopiert <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> Objekt bei der <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> oder <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> Überprüfungsoptionen festgelegt sind.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>As a result, changes to the input <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object during validation do not affect the outcome of validation.</source>
          <target state="translated">Daher ändert sich in der Eingabe <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> Objekts während der Validierung wirken sich nicht auf das Ergebnis der Überprüfung.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> parameter specified is not compiled, its <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> method is called.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> angegebene Parameter wird nicht kompiliert, die <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> -Methode aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> parameter is especially important for validating <ph id="ph2">`xs:QName`</ph> types.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> Parameter ist besonders wichtig für die Validierung <ph id="ph2">`xs:QName`</ph> Typen.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class does not copy the in-scope namespaces from the <ph id="ph2">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> object but instead holds a reference to it.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> Klasse kopiert keine in-Scope Namespaces aus der <ph id="ph2">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> Objekt, sondern einen Verweis darauf enthält.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>This allows new namespaces to be added to the <ph id="ph1">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> object during the validation process.</source>
          <target state="translated">Dadurch können neue Namespaces hinzugefügt werden die <ph id="ph1">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;</ph> Objekt während des Überprüfungsprozesses.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> validation flags of an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object are not set be default.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> und <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> Validierungsflag eines ein <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> Objekt sind nicht standardmäßig sein.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>Additionally, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;</ph> property of an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object is <ph id="ph3">`null`</ph> by default.</source>
          <target state="translated">Darüber hinaus die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;</ph> Eigenschaft ein <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> Objekt <ph id="ph3">`null`</ph> standardmäßig.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.</source>
          <target state="translated">Daher werden enthalten externe Schemata in verwiesen wird, Importe oder Redefine Elemente nicht standardmäßig aufgelöst.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>For an example of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt;</ph> constructor, see the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class reference topic.</source>
          <target state="translated">Ein Beispiel für die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt;</ph> Konstruktor finden Sie unter der <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> Referenzthema-Klasse.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>One or more of the parameters specified are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Mindestens einer der angegebenen Parameter ist <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
          <source>An error occurred while compiling schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> parameter.</source>
          <target state="translated">Während des Kompilierens von Schemas im <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>-Parameter ist ein Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object to add to the set of schemas used for validation.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph>-Objekt, das den für die Validierung verwendeten Schemas hinzugefügt werden soll.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>Adds an XML Schema Definition Language (XSD) schema to the set of schemas used for validation.</source>
          <target state="translated">Fügt den für die Validierung verwendeten Schemas ein XSD-Schema (XML Schema Definition Language) hinzu.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden sind wichtige Hinweise zum Verwenden der <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A&gt;</ph> method can be used to simulate the effect of encountering an inline XML schema in the XML document being validated.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A&gt;</ph> Methode kann verwendet werden, um die Auswirkungen des Findens eines XML-Inlineschemas in das XML-Dokument validiert zu simulieren.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>The target namespace of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> parameter cannot match that of any element or attribute already encountered by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object.</source>
          <target state="translated">Der Zielnamespace des <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>-Parameters darf nicht mit dem Namespace eines der Elemente oder Attribute übereinstimmen, die bereits vom <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph>-Objekt gefunden wurden.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> validation option is not set, the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A&gt;</ph> method does nothing.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> -Validierungsoption nicht festgelegt ist, die <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.AddSchema%2A&gt;</ph> Methode hat keine Funktion.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> parameter specified is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der angegebene <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph>-Parameter ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>The target namespace of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> parameter matches that of any element or attribute already encountered by the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object.</source>
          <target state="translated">Der Zielnamespace des <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph>-Parameters stimmt mit dem aller Elemente oder Attribute überein, die vom <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph>-Objekt bereits gefunden wurden.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> parameter is invalid.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph>-Parameter ist ungültig.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.EndValidation">
          <source>Ends validation and checks identity constraints for the entire XML document.</source>
          <target state="translated">Beendet die Validierung und überprüft die Identitätseinschränkungen für das gesamte XML-Dokument.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.EndValidation">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A&gt;</ph> method ends validation and checks identity constraints for the entire XML document if the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> validation option is set.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A&gt;</ph> -Methode beendet die Validierung und überprüft identitätseinschränkungen für das gesamte XML-Dokument an, ob die <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> -Validierungsoption festgelegt ist.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.EndValidation">
          <source>An identity constraint error was found in the XML document.</source>
          <target state="translated">Ein Identitätseinschränkungsfehler wurde im XML-Dokument gefunden.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes">
          <source>Returns the expected attributes for the current element context.</source>
          <target state="translated">Gibt die erwarteten Attribute für den Kontext des aktuellen Elements zurück.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> objects or an empty array if there are no expected attributes.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph>-Objekten oder ein leeres Array, wenn keine erwarteten Attribute vorhanden sind.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden sind wichtige Hinweise zum Verwenden der <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A&gt;</ph> method is called immediately after the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;</ph> method, all the attributes that could appear in the XML document are returned.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A&gt;</ph> Methode wird aufgerufen, unmittelbar nach der <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;</ph> -Methode, alle Attribute, die im XML-Dokument erscheinen konnte werden zurückgegeben.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A&gt;</ph> method is called after one or more calls to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method, the attributes that haven't yet been validated for the current element are returned.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes%2A&gt;</ph> Methode wird aufgerufen, nachdem eine oder mehrere Aufrufe an die <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> -Methode, die Attribute, die für das aktuelle Element noch nicht validiert wurden zurückgegeben.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>Returns the expected particles in the current element context.</source>
          <target state="translated">Gibt die erwarteten Partikel im Kontext des aktuellen Elements zurück.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaParticle" /&gt;</ph> objects or an empty array if there are no expected particles.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaParticle" /&gt;</ph>-Objekten oder ein leeres Array, wenn keine erwarteten Partikel vorhanden sind.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>The valid particles that can be returned by the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> method are instances of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaAny&gt;</ph> classes.</source>
          <target state="translated">Die gültigen Partikel, die von der <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph>-Methode zurückgegeben werden können, sind Instanzen der <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph>-Klasse und der <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaAny&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>When the compositor for the content model is an <ph id="ph1">`xs:sequence`</ph>, only the next particle in the sequence is returned.</source>
          <target state="translated">Wenn der Compositor für das Inhaltsmodell eine <ph id="ph1">`xs:sequence`</ph> ist, wird nur der nächste Partikel in der Abfolge zurückgegeben.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>If the compositor for the content model is an <ph id="ph1">`xs:all`</ph> or an <ph id="ph2">`xs:choice`</ph>, then all valid particles that could follow in the current element context are returned.</source>
          <target state="translated">Wenn der Compositor für das Inhaltsmodell <ph id="ph1">`xs:all`</ph> oder <ph id="ph2">`xs:choice`</ph> ist, werden alle gültigen Partikel zurückgegeben, die im aktuellen Elementkontext folgen können.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>For example, in the XML Schema Definition Language (XSD) schema and XML document that follow, after validating the <ph id="ph1">`book`</ph> element, the <ph id="ph2">`book`</ph> element is the current element context.</source>
          <target state="translated">Im folgenden XSD-Schema (XML Schema Definition Language) und XML-Dokument entspricht z. B. nach dem Validieren des <ph id="ph1">`book`</ph>-Elements das <ph id="ph2">`book`</ph>-Element dem aktuellen Elementkontext.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> method returns an array containing a single <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> object representing the <ph id="ph3">`title`</ph> element.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph>-Methode gibt ein Array mit einem einzelnen <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph>-Objekt zurück, das das <ph id="ph3">`title`</ph>-Element darstellt.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>When the validation context is the <ph id="ph1">`title`</ph> element, the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> method returns an empty array.</source>
          <target state="translated">Wenn der Validierungskontext dem <ph id="ph1">`title`</ph>-Element entspricht, gibt die <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph>-Methode ein leeres Array zurück.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> method is called after the <ph id="ph2">`title`</ph> element has been validated but before the <ph id="ph3">`description`</ph> element has been validated, it returns an array containing a single <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> object representing the <ph id="ph5">`description`</ph> element.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph>-Methode aufgerufen wird, nachdem das <ph id="ph2">`title`</ph>-Element validiert wurde und bevor das <ph id="ph3">`description`</ph>-Element validiert wurde, gibt sie ein Array mit einem einzelnen <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph>-Objekt zurück, das das <ph id="ph5">`description`</ph>-Element darstellt.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph> method is called after the <ph id="ph2">`description`</ph> element has been validated then it returns an array containing a single <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaAny&gt;</ph> object representing the wildcard.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles%2A&gt;</ph>-Methode aufgerufen wird, nachdem das <ph id="ph2">`description`</ph>-Element validiert wurde, gibt sie ein Array mit einem einzelnen <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaAny&gt;</ph>-Objekt zurück, das den Platzhalter darstellt.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>The example takes the following XML as input.</source>
          <target state="translated">In diesem Beispiel wird der folgende XML-Code als Eingabe verwendet.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
          <source>The example takes the following XSD schema as input.</source>
          <target state="translated">In diesem Beispiel wird das folgende XSD-Schema als Eingabe verwendet.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> to populate with <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> objects for any attributes not yet encountered during validation in the element context.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>, die mit <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph>-Objekten für die Attribute gefüllt werden soll, die während der Validierung im Elementkontext noch nicht gefunden wurden.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)">
          <source>Validates identity constraints on the default attributes and populates the <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> specified with <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> objects for any attributes with default values that have not been previously validated using the <ph id="ph3">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> method in the element context.</source>
          <target state="translated">Validiert Identitätseinschränkungen bei den Standardattributen und füllt die <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>, die mit <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph>-Objekten für Attribute mit Standardwerten angegeben ist, die noch nicht mithilfe der <ph id="ph3">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>-Methode im Elementkontext validiert wurden.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> method must be called after validating all the attributes for the current element with the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> Methode muss aufgerufen werden, nachdem alle Attribute für das aktuelle Element mit überprüft die <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> method should be used to determine what default attributes are to be inserted into the XML document being validated.</source>
          <target state="translated">Mit der <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph>-Methode muss bestimmt werden, welche Standardattribute in das XML-Dokument eingefügt werden sollen, das validiert wird.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Initializes the state of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object.</source>
          <target state="translated">Initialisiert den Zustand des <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph>-Objekts.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
          <source>Initializes the state of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object.</source>
          <target state="translated">Initialisiert den Zustand des <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph>-Objekts.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> method is only valid if called immediately after the construction of an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object or after a call to <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> Methode ist nur gültig, wenn Sie aufgerufen, unmittelbar nach der Erstellung einer <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> Objekt oder nach einem Aufruf von <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">Das folgende Beispiel überprüft die <ph id="ph1">`contosoBooks.xml`</ph> -Datei anhand der <ph id="ph2">`contosoBooks.xsd`</ph> Schema.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">Im Beispiel wird mit der <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>-Klasse die <ph id="ph2">`contosoBooks.xml`</ph>-Datei deserialisiert, und der Wert der Knoten wird an die Methoden der <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph>-Klasse übergeben.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">In diesem Beispiel wird die Datei <ph id="ph1">`contosoBooks.xml`</ph> als Eingabe verwendet.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">In diesem Beispiel wird auch <ph id="ph1">`contosoBooks.xsd`</ph> als Eingabe verwendet.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
          <source>Calling the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /&gt;</ph> method is valid immediately after the construction of an <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object or after a call to <ph id="ph3">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /&gt;</ph> only.</source>
          <target state="translated">Das Aufrufen der <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /&gt;</ph>-Methode ist nur sofort nach dem Erstellen eines <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph>-Objekts oder nach einem Aufruf von <ph id="ph3">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /&gt;</ph> gültig.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph>, or <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph> object used to initialize the validation context of the <ph id="ph4">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object for partial validation.</source>
          <target state="translated">Ein Objekt vom Typ <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> oder <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph>, mit dessen Hilfe der Validierungskontext des <ph id="ph4">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph>-Objekts für die teilweise Validierung initialisiert wird.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>Initializes the state of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object using the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> specified for partial validation.</source>
          <target state="translated">Initialisiert den Zustand des <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph>-Objekts mit dem für die teilweise Validierung angegebenen <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> method that takes an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph> as a parameter initializes an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object to its starting state for partial validation.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph>-Methode, die ein <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph> als Parameter annimmt, initialisiert ein <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph>-Objekt mit dessen anfänglichem Zustand zur teilweisen Validierung.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>In the following example, an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph> is initialized for partial validation using the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden Beispiel wird ein <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph> mithilfe der <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph>-Methode zur teilweisen Validierung initialisiert.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">`orderNumber`</ph> schema element is passed by selecting the schema element by <ph id="ph2">&lt;xref:System.Xml.XmlQualifiedName&gt;</ph> in the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaObjectTable&gt;</ph> collection returned by the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.GlobalElements%2A&gt;</ph> property of the <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object.</source>
          <target state="translated">Das <ph id="ph1">`orderNumber`</ph>-Schemaelement wird durch Auswählen des Schemaelements durch <ph id="ph2">&lt;xref:System.Xml.XmlQualifiedName&gt;</ph> in der <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaObjectTable&gt;</ph>-Auflistung übergeben, die von der <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.GlobalElements%2A&gt;</ph>-Eigenschaft des <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>-Objekts zurückgegeben wurde.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object then validates this specific element.</source>
          <target state="translated">Das <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph>-Objekt validiert dann dieses bestimmte Element.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>The example takes the following XML schema as input.</source>
          <target state="translated">In diesem Beispiel wird das folgende XML-Schema als Eingabe verwendet.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>Calling the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /&gt;</ph> method is valid immediately after the construction of an <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object or after a call to <ph id="ph3">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /&gt;</ph> only.</source>
          <target state="translated">Das Aufrufen der <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /&gt;</ph>-Methode ist nur sofort nach dem Erstellen eines <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph>-Objekts oder nach einem Aufruf von <ph id="ph3">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /&gt;</ph> gültig.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> parameter is not an <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph>, or <ph id="ph4">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph> object.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>-Parameter ist kein Objekt vom Typ <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaAttribute" /&gt;</ph> oder <ph id="ph4">&lt;see cref="T:System.Xml.Schema.XmlSchemaType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>-Parameter darf nicht <ph id="ph2">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider">
          <source>Gets or sets the line number information for the XML node being validated.</source>
          <target state="translated">Ruft die Zeilennummerninformationen für den derzeit validierten XML-Knoten ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.IXmlLineInfo" /&gt;</ph> object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.IXmlLineInfo" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider">
          <source>Line information is reported by any <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> thrown during the validation process.</source>
          <target state="translated">Zeileninformationen wird von gemeldet <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> während der Überprüfung ausgelöst.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider">
          <source>The default <ph id="ph1">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider%2A&gt;</ph> property returns 0 for the <ph id="ph3">&lt;xref:System.Xml.IXmlLineInfo.LineNumber%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Xml.IXmlLineInfo.LinePosition%2A&gt;</ph> properties.</source>
          <target state="translated">Die Standardeinstellung <ph id="ph1">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph> zurückgegebenes Objekt die <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider%2A&gt;</ph> Eigenschaft gibt 0 für die <ph id="ph3">&lt;xref:System.Xml.IXmlLineInfo.LineNumber%2A&gt;</ph> und <ph id="ph4">&lt;xref:System.Xml.IXmlLineInfo.LinePosition%2A&gt;</ph> Eigenschaften.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set if the current element content is successfully skipped.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph>-Objekt, dessen Eigenschaften festgelegt werden, wenn der Inhalt des aktuellen Elements erfolgreich übersprungen wird.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>Skips validation of the current element content and prepares the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object to validate content in the parent element's context.</source>
          <target state="translated">Überspringt die Validierung des aktuellen Elementinhalts und bereitet das <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph>-Objekt zum Validieren des Inhalts im Kontext des übergeordneten Elements vor.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden sind wichtige Hinweise zum Verwenden der <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A&gt;</ph> method skips validation of the current element content and prepares the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object to validate content in the parent element's context; it is equivalent to skipping validation for all the children of the current element and then calling the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement%2A&gt;</ph> -Methode überspringt die Validierung des aktuellen Elementinhalts und bereitet die <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> -Objekt zum Validieren des Inhalts im Kontext des übergeordneten Elements; Dies entspricht dem Überspringen der Validierung aller untergeordneten Elemente des aktuellen Elements und dann Aufrufen der <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>If the current element content is successfully skipped, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidity.NotKnown&gt;</ph>.</source>
          <target state="translated">Wenn der Inhalt des aktuellen Elements erfolgreich übersprungen wird, die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> des Objekts (falls angegeben) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> -Eigenschaftensatz auf <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidity.NotKnown&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>No validation errors are reported on skipped content.</source>
          <target state="translated">Für übersprungene Inhalte werden keine Validierungsfehler gemeldet.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>-Methode wurde nicht in der richtigen Reihenfolge aufgerufen.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>For example, calling <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> after calling <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</source>
          <target state="translated">Beispiel: <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> wird nach <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> aufgerufen.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaValidator.SourceUri">
          <source>Gets or sets the source URI for the XML node being validated.</source>
          <target state="translated">Ruft den Quell-URI für den derzeit validierten XML-Knoten ab oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.SourceUri">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> object representing the source URI for the XML node being validated; the default is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>-Objekt, das den Quell-URI für den derzeit validierten XML-Knoten darstellt. Der Standardwert ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.SourceUri">
          <source>The source URI is reported by any <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> thrown during the validation process.</source>
          <target state="translated">Der URI, von einer gemeldet wird Quelle <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> während der Überprüfung ausgelöst.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.SourceUri">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.SourceUri%2A&gt;</ph> property is not set, the file name for the XML document is <ph id="ph2">&lt;xref:System.String.Empty&gt;</ph> in validation error messages.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.SourceUri%2A&gt;</ph> Eigenschaft nicht festgelegt ist, wird der Dateiname für das XML-Dokument <ph id="ph2">&lt;xref:System.String.Empty&gt;</ph> in Überprüfungsfehlermeldungen.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Validates the attribute in the current element context.</source>
          <target state="translated">Überprüft das Attribut im Kontext des aktuellen Elements.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The local name of the attribute to validate.</source>
          <target state="translated">Der lokale Name des zu validierenden Attributs.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The namespace URI of the attribute to validate.</source>
          <target state="translated">Der Namespace-URI des zu validierenden Attributs.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The value of the attribute to validate.</source>
          <target state="translated">Der Wert des zu validierenden Attributs.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set on successful validation of the attribute.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph>-Objekt, dessen Eigenschaften nach der erfolgreichen Validierung des Attributs festgelegt werden.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>Validates the attribute name, namespace URI, and value in the current element context.</source>
          <target state="translated">Überprüft den Attributnamen, den Namespace-URI und den Wert im aktuellen Kontext des aktuellen Elements.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The validated attribute's value.</source>
          <target state="translated">Der Wert des validierten Attributs.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden sind wichtige Hinweise zum Verwenden der <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> method must be called after validating all the attributes for the current element with the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> Methode muss aufgerufen werden, nachdem alle Attribute für das aktuelle Element mit überprüft die <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>If an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> object was passed to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> method, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method validates the attribute against the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> object.</source>
          <target state="translated">Wenn ein <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> wurde, übergeben die <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> -Methode, die <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> Methode überprüft, ob das Attribut für die <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>If the attribute is successfully validated in the current element context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> properties are set with the results of the validation.</source>
          <target state="translated">Wenn das Attribut im aktuellen Elementkontext erfolgreich validiert wurden, ist die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> des Objekts (falls angegeben) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, und <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> Eigenschaften werden mit den Ergebnissen der Validierung festgelegt.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">Das folgende Beispiel überprüft die <ph id="ph1">`contosoBooks.xml`</ph> -Datei anhand der <ph id="ph2">`contosoBooks.xsd`</ph> Schema.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">Im Beispiel wird mit der <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>-Klasse die <ph id="ph2">`contosoBooks.xml`</ph>-Datei deserialisiert, und der Wert der Knoten wird an die Methoden der <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph>-Klasse übergeben.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">In diesem Beispiel wird die Datei <ph id="ph1">`contosoBooks.xml`</ph> als Eingabe verwendet.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">In diesem Beispiel wird auch <ph id="ph1">`contosoBooks.xsd`</ph> als Eingabe verwendet.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The attribute is not valid in the current element context.</source>
          <target state="translated">Das Attribut ist im Kontext des aktuellen Elements nicht gültig.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>-Methode wurde nicht in der richtigen Reihenfolge aufgerufen.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>For example, calling <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> after calling <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</source>
          <target state="translated">Beispiel: <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> wird nach <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> aufgerufen.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>One or more of the parameters specified are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Mindestens einer der angegebenen Parameter ist <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The local name of the attribute to validate.</source>
          <target state="translated">Der lokale Name des zu validierenden Attributs.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The namespace URI of the attribute to validate.</source>
          <target state="translated">Der Namespace-URI des zu validierenden Attributs.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph><ph id="ph2">&lt;see langword="delegate" /&gt;</ph> used to pass the attribute's value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph>-<ph id="ph2">&lt;see langword="delegate" /&gt;</ph>, mit dem der Attributwert als CLR-Typ (Common Language Runtime) übergeben wird, der mit dem XSD-Typ (XML Schema Definition Language) des Attributs kompatibel ist.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set on successful validation of the attribute.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph>-Objekt, dessen Eigenschaften nach der erfolgreichen Validierung des Attributs festgelegt werden.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>This parameter and can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>Validates the attribute name, namespace URI, and value in the current element context.</source>
          <target state="translated">Überprüft den Attributnamen, den Namespace-URI und den Wert im aktuellen Kontext des aktuellen Elements.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The validated attribute's value.</source>
          <target state="translated">Der Wert des validierten Attributs.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden sind wichtige Hinweise zum Verwenden der <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> method must be called after validating all the attributes for the current element with the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> Methode muss aufgerufen werden, nachdem alle Attribute für das aktuelle Element mit überprüft die <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>If an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> object was passed to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> method, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> method validates the attribute against the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> object.</source>
          <target state="translated">Wenn ein <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> wurde, übergeben die <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;</ph> -Methode, die <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</ph> Methode überprüft, ob das Attribut für die <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>If the attribute is successfully validated in the current element context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> properties are set with the results of the validation.</source>
          <target state="translated">Wenn das Attribut im aktuellen Elementkontext erfolgreich validiert wurden, ist die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> des Objekts (falls angegeben) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, und <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> Eigenschaften werden mit den Ergebnissen der Validierung festgelegt.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">Das folgende Beispiel überprüft die <ph id="ph1">`contosoBooks.xml`</ph> -Datei anhand der <ph id="ph2">`contosoBooks.xsd`</ph> Schema.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">Im Beispiel wird mit der <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>-Klasse die <ph id="ph2">`contosoBooks.xml`</ph>-Datei deserialisiert, und der Wert der Knoten wird an die Methoden der <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph>-Klasse übergeben.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">In diesem Beispiel wird die Datei <ph id="ph1">`contosoBooks.xml`</ph> als Eingabe verwendet.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">In diesem Beispiel wird auch <ph id="ph1">`contosoBooks.xsd`</ph> als Eingabe verwendet.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The attribute is not valid in the current element context.</source>
          <target state="translated">Das Attribut ist im Kontext des aktuellen Elements nicht gültig.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>-Methode wurde nicht in der richtigen Reihenfolge aufgerufen.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>For example, calling <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> after calling <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</source>
          <target state="translated">Beispiel: <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> wird nach <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> aufgerufen.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
          <source>One or more of the parameters specified are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Mindestens einer der angegebenen Parameter ist <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Validates the element in the current context.</source>
          <target state="translated">Validiert das Element im aktuellen Kontext.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The local name of the element to validate.</source>
          <target state="translated">Der lokale Name des zu validierenden Elements.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The namespace URI of the element to validate.</source>
          <target state="translated">Der Namespace-URI des zu validierenden Elements.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set on successful validation of the element's name.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph>-Objekt, dessen Eigenschaften nach erfolgreicher Validierung des Elementnamens festgelegt werden.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>Validates the element in the current context.</source>
          <target state="translated">Validiert das Element im aktuellen Kontext.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden sind wichtige Hinweise zum Verwenden der <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>If the element name is successfully validated in the current context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> properties are set with the results of the validation.</source>
          <target state="translated">Wenn der Elementname im aktuellen Kontext erfolgreich validiert wurde die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> des Objekts (falls angegeben) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt;</ph>, und <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> Eigenschaften werden mit den Ergebnissen der Validierung festgelegt.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>If the element name or any of its attributes are invalid the current context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Invalid&gt;</ph>; otherwise the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property is set to <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidity.NotKnown&gt;</ph>.</source>
          <target state="translated">Wenn der Elementname oder eines seiner Attribute ungültig sind den aktuellen Kontext der <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> -Eigenschaftensatz auf <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Invalid&gt;</ph>andernfalls die <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> -Eigenschaftensatz auf <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidity.NotKnown&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">Das folgende Beispiel überprüft die <ph id="ph1">`contosoBooks.xml`</ph> -Datei anhand der <ph id="ph2">`contosoBooks.xsd`</ph> Schema.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">Im Beispiel wird mit der <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>-Klasse die <ph id="ph2">`contosoBooks.xml`</ph>-Datei deserialisiert, und der Wert der Knoten wird an die Methoden der <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph>-Klasse übergeben.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">In diesem Beispiel wird die Datei <ph id="ph1">`contosoBooks.xml`</ph> als Eingabe verwendet.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">In diesem Beispiel wird auch <ph id="ph1">`contosoBooks.xsd`</ph> als Eingabe verwendet.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The element's name is not valid in the current context.</source>
          <target state="translated">Der Name des Elements ist im aktuellen Kontext nicht gültig.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph>-Methode wurde nicht in der richtigen Reihenfolge aufgerufen.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
          <source>For example, the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph> method is called after calling <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</source>
          <target state="translated">Beispiel: Die <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph>-Methode wird nach dem Aufruf von <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> aufgerufen.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The local name of the element to validate.</source>
          <target state="translated">Der lokale Name des zu validierenden Elements.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The namespace URI of the element to validate.</source>
          <target state="translated">Der Namespace-URI des zu validierenden Elements.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set on successful validation of the element's name.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph>-Objekt, dessen Eigenschaften nach erfolgreicher Validierung des Elementnamens festgelegt werden.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>xsi:Type<ept id="p1">&lt;/c&gt;</ept> attribute value of the element.</source>
          <target state="translated">Der <bpt id="p1">&lt;c&gt;</bpt>xsi:Type<ept id="p1">&lt;/c&gt;</ept>-Attributwert des Elements.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>xsi:Nil<ept id="p1">&lt;/c&gt;</ept> attribute value of the element.</source>
          <target state="translated">Der <bpt id="p1">&lt;c&gt;</bpt>xsi:Nil<ept id="p1">&lt;/c&gt;</ept>-Attributwert des Elements.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>xsi:SchemaLocation<ept id="p1">&lt;/c&gt;</ept> attribute value of the element.</source>
          <target state="translated">Der <bpt id="p1">&lt;c&gt;</bpt>xsi:SchemaLocation<ept id="p1">&lt;/c&gt;</ept>-Attributwert des Elements.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>xsi:NoNamespaceSchemaLocation<ept id="p1">&lt;/c&gt;</ept> attribute value of the element.</source>
          <target state="translated">Der <bpt id="p1">&lt;c&gt;</bpt>xsi:NoNamespaceSchemaLocation<ept id="p1">&lt;/c&gt;</ept>-Attributwert des Elements.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>Validates the element in the current context with the <bpt id="p1">&lt;c&gt;</bpt>xsi:Type<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>xsi:Nil<ept id="p2">&lt;/c&gt;</ept>, <bpt id="p3">&lt;c&gt;</bpt>xsi:SchemaLocation<ept id="p3">&lt;/c&gt;</ept>, and <bpt id="p4">&lt;c&gt;</bpt>xsi:NoNamespaceSchemaLocation<ept id="p4">&lt;/c&gt;</ept> attribute values specified.</source>
          <target state="translated">Validiert das Element im aktuellen Kontext mit den angegebenen Attributwerten <bpt id="p1">&lt;c&gt;</bpt>xsi: Type<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>xsi: Nil<ept id="p2">&lt;/c&gt;</ept>, <bpt id="p3">&lt;c&gt;</bpt>xsi: SchemaLocation<ept id="p3">&lt;/c&gt;</ept>, und <bpt id="p4">&lt;c&gt;</bpt>xsi: NoNamespaceSchemaLocation<ept id="p4">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden sind wichtige Hinweise zum Verwenden der <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>If the element name is successfully validated in the current context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> properties are set with the results of the validation.</source>
          <target state="translated">Wenn der Elementname im aktuellen Kontext erfolgreich validiert wurde die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> des Objekts (falls angegeben) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt;</ph>, und <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> Eigenschaften werden mit den Ergebnissen der Validierung festgelegt.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>If the element name or any of its attributes are invalid in the current context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Invalid&gt;</ph>; otherwise the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property is set to <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidity.NotKnown&gt;</ph>.</source>
          <target state="translated">Wenn der Elementname oder eines seiner Attribute im aktuellen Kontext ungültig sind die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> -Eigenschaftensatz auf <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Invalid&gt;</ph>andernfalls die <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> -Eigenschaftensatz auf <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidity.NotKnown&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> value was not passed as a parameter to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt;</ph> constructor, <ph id="ph3">`xsi:SchemaLocation`</ph> and <ph id="ph4">`xsi:NoNamespaceSchemaLocation`</ph> attribute values are ignored.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> Wert wurde nicht übergeben, als Parameter an die <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt;</ph> Konstruktor <ph id="ph3">`xsi:SchemaLocation`</ph> und <ph id="ph4">`xsi:NoNamespaceSchemaLocation`</ph> Attributwerte werden ignoriert.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The element's name is not valid in the current context.</source>
          <target state="translated">Der Name des Elements ist im aktuellen Kontext nicht gültig.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph>-Methode wurde nicht in der richtigen Reihenfolge aufgerufen.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
          <source>For example, the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph> method is called after calling <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</source>
          <target state="translated">Beispiel: Die <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /&gt;</ph>-Methode wird nach dem Aufruf von <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> aufgerufen.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Verifies if the text content of the element is valid according to its data type for elements with simple content, and verifies if the content of the current element is complete for elements with complex content.</source>
          <target state="translated">Überprüft, ob der Textinhalt des Elements gemäß seinem Datentyp für Elemente mit einfachem Inhalt gültig ist, und überprüft darüber hinaus, ob der Inhalt des aktuellen Elements für Elemente mit komplexem Inhalt vollständig ist.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set on successful validation of the element.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph>-Objekt, dessen Eigenschaften nach erfolgreicher Validierung des Elements festgelegt werden.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>Verifies if the text content of the element is valid according to its data type for elements with simple content, and verifies if the content of the current element is complete for elements with complex content.</source>
          <target state="translated">Überprüft, ob der Textinhalt des Elements gemäß seinem Datentyp für Elemente mit einfachem Inhalt gültig ist, und überprüft darüber hinaus, ob der Inhalt des aktuellen Elements für Elemente mit komplexem Inhalt vollständig ist.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The parsed, typed text value of the element if the element has simple content.</source>
          <target state="translated">Der analysierte, typisierte Textwert des Elements, wenn das Element über einfachen Inhalt verfügt.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden sind wichtige Hinweise zum Verwenden der <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>For elements with simple content, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method verifies that the text content of the element is valid according to its data type and returns the parsed typed value.</source>
          <target state="translated">Für Elemente mit einfachem Inhalt der <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> Methode überprüft, dass das Textinhalt des Elements gemäß seinem Datentyp gültig ist und den analysierten, typisierten Wert zurückgibt.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The text content of the element is obtained from the results of previous calls to <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph>.</source>
          <target state="translated">Das Textinhalt des Elements abgerufen wird, aus den Ergebnissen der vorherigen Aufrufe von <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>For elements with complex content, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method verifies if the content of the current element is complete.</source>
          <target state="translated">Für Elemente mit komplexem Inhalt der <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> Methode überprüft, ob der Inhalt des aktuellen Elements abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>If the element has a default value, the value returned from the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method is the default value for the element.</source>
          <target state="translated">Wenn das Element über einen Standardwert verfügt, wird der Wert zurückgegeben, aus der <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> Methode ist der Standardwert für das Element.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object was constructed with the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> value as a parameter, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method checks the identity constraint rules (if any) that apply to the element.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> Objekt wurde erstellt, mit der <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> Wert als Parameter verwendet, die <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> -Methode überprüft die Identity-Einschränkung Regeln (sofern vorhanden), die für das Element gelten.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>If the element is successfully validated in the current context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> properties are set with the results of the validation.</source>
          <target state="translated">Wenn das Element im aktuellen Kontext erfolgreich validiert wurden, ist die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> des Objekts (falls angegeben) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, und <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> Eigenschaften werden mit den Ergebnissen der Validierung festgelegt.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The element's content is not valid.</source>
          <target state="translated">Der Inhalt des Elements ist nicht gültig.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph>-Methode wurde nicht in der richtigen Reihenfolge aufgerufen.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
          <source>For example, if the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph> method is called after calling <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</source>
          <target state="translated">Beispiel: Die <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph>-Methode wird nach einem Aufruf von <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> aufgerufen.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set on successful validation of the text content of the element.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph>-Objekt, dessen Eigenschaften nach erfolgreicher Validierung des Textinhalts des Elements festgelegt werden.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The typed text content of the element.</source>
          <target state="translated">Der typisierte Textinhalt des Elements.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>Verifies if the text content of the element specified is valid according to its data type.</source>
          <target state="translated">Überprüft, ob der Textinhalt des angegebenen Elements gemäß seinem Datentyp gültig ist.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The parsed, typed simple content of the element.</source>
          <target state="translated">Der analysierte, typisierte einfache Inhalt des Elements.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>If you are validating against the <ph id="ph1">`xs:key`</ph>, <ph id="ph2">`xs:keyref`</ph>, or <ph id="ph3">`xs:unique`</ph> identity constraints, do not use the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method overload.</source>
          <target state="translated">Wenn Sie gegen Überprüfen der <ph id="ph1">`xs:key`</ph>, <ph id="ph2">`xs:keyref`</ph>, oder <ph id="ph3">`xs:unique`</ph> identitätseinschränkungen, verwenden Sie nicht die <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> -methodenüberladung.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>Instead, call the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> method and pass it the value of the element.</source>
          <target state="translated">Rufen Sie stattdessen die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> Methode und übergeben sie den Wert des Elements.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>Then call the  <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method overload, which takes <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> as an argument, to verify that the text content of the element is valid according to its data type.</source>
          <target state="translated">Rufen Sie anschließend die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> methodenüberladung, die akzeptiert <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> als Argument, um sicherzustellen, dass der Textinhalt des Elements gemäß seinem Datentyp gültig ist.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden sind wichtige Hinweise zum Verwenden der <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>For elements with simple content, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A?displayProperty=nameWithType&gt;</ph> method verifies that the text content of the element is valid according to its data type and returns the parsed typed value.</source>
          <target state="translated">Für Elemente mit einfachem Inhalt der <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A?displayProperty=nameWithType&gt;</ph> Methode überprüft, dass das Textinhalt des Elements gemäß seinem Datentyp gültig ist und den analysierten, typisierten Wert zurückgibt.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The text content of the element is obtained from the typed content passed as a parameter.</source>
          <target state="translated">Das Textinhalt des Elements wird aus der eingegebenem Inhalt, der als Parameter übergebenen abgerufen.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>If calls to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> method have been previously made, an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">Wenn Aufrufe von der <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> Methode zuvor vorgenommen wurden, ein <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>If the element has complex content an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">Wenn das Element mit komplexen Inhalt verfügt ein <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object was constructed with the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> value as a parameter, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method checks the identity constraint rules (if any) that apply to the element.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> Objekt wurde erstellt, mit der <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> Wert als Parameter verwendet, die <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> -Methode überprüft die Identity-Einschränkung Regeln (sofern vorhanden), die für das Element gelten.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>If the element is successfully validated in the current context, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> properties are set with the results of the validation.</source>
          <target state="translated">Wenn das Element im aktuellen Kontext erfolgreich validiert wurden, ist die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> des Objekts (falls angegeben) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;</ph>, und <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> Eigenschaften werden mit den Ergebnissen der Validierung festgelegt.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">Das folgende Beispiel überprüft die <ph id="ph1">`contosoBooks.xml`</ph> -Datei anhand der <ph id="ph2">`contosoBooks.xsd`</ph> Schema.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">Im Beispiel wird mit der <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>-Klasse die <ph id="ph2">`contosoBooks.xml`</ph>-Datei deserialisiert, und der Wert der Knoten wird an die Methoden der <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph>-Klasse übergeben.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">In diesem Beispiel wird die Datei <ph id="ph1">`contosoBooks.xml`</ph> als Eingabe verwendet.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">In diesem Beispiel wird auch <ph id="ph1">`contosoBooks.xsd`</ph> als Eingabe verwendet.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The element's text content is not valid.</source>
          <target state="translated">Der Textinhalt des Elements ist nicht gültig.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph> method was not called in the correct sequence (for example, if the <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph> method is called after calling <ph id="ph3">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>), calls to the <ph id="ph4">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> method have been previously made, or the element has complex content.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph>-Methode wurde nicht in der richtigen Reihenfolge aufgerufen (die <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /&gt;</ph>-Methode wurde z. B. vor <ph id="ph3">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> aufgerufen), Aufrufe der <ph id="ph4">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph>-Methode wurden bereits ausgeführt, oder das Element weist einen komplexen Inhalt auf.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
          <source>The typed text content parameter cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der typisierte Textinhaltsparameter kann nicht <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph> object whose properties are set on successful verification that all the required attributes in the element context are present.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaInfo" /&gt;</ph>-Objekt, dessen Eigenschaften nach erfolgreicher Überprüfung auf das Vorhandensein aller erforderlichen Attribute im Elementkontext festgelegt werden.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>This parameter can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Dieser Parameter kann <ph id="ph1">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>Verifies whether all the required attributes in the element context are present and prepares the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object to validate the child content of the element.</source>
          <target state="translated">Überprüft, ob alle erforderlichen Attribute im Elementkontext vorhanden sind, und bereitet das <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph>-Objekt auf das Validieren des untergeordneten Inhalts des Elements vor.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden sind wichtige Hinweise zum Verwenden der <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> method should always be called before <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</ph> Methode sollte immer aufgerufen werden, bevor <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A&gt;</ph> method must be called before proceeding with validation of an element's content.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes%2A&gt;</ph> -Methode muss aufgerufen werden, bevor Sie fortfahren, mit der Validierung des Inhalts eines Elements.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>If all the required attributes in the element context are present, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> object's (if specified) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Valid&gt;</ph>.</source>
          <target state="translated">Wenn Sie die erforderlichen Attribute im Elementkontext vorhanden sind die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;</ph> des Objekts (falls angegeben) <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</ph> -Eigenschaftensatz auf <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidity.Valid&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">Das folgende Beispiel überprüft die <ph id="ph1">`contosoBooks.xml`</ph> -Datei anhand der <ph id="ph2">`contosoBooks.xsd`</ph> Schema.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">Im Beispiel wird mit der <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>-Klasse die <ph id="ph2">`contosoBooks.xml`</ph>-Datei deserialisiert, und der Wert der Knoten wird an die Methoden der <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph>-Klasse übergeben.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">In diesem Beispiel wird die Datei <ph id="ph1">`contosoBooks.xml`</ph> als Eingabe verwendet.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">In diesem Beispiel wird auch <ph id="ph1">`contosoBooks.xsd`</ph> als Eingabe verwendet.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>One or more of the required attributes in the current element context were not found.</source>
          <target state="translated">Mindestens ein erforderliches Attribut im aktuellen Elementkontext wurde nicht gefunden.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>-Methode wurde nicht in der richtigen Reihenfolge aufgerufen.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>For example, calling <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> after calling <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph>.</source>
          <target state="translated">Beispiel: <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> wird nach <ph id="ph2">&lt;see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /&gt;</ph> aufgerufen.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
          <source>One or more of the parameters specified are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Mindestens einer der angegebenen Parameter ist <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Validates whether text is allowed in the current element context, and accumulates the text for validation if the current element has simple content.</source>
          <target state="translated">Validiert, ob Text im aktuellen Elementkontext zulässig ist, und sammelt den Text zum Validieren, ob das aktuelle Element einfachen Inhalt aufweist.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>A text <ph id="ph1">&lt;see langword="string" /&gt;</ph> to validate in the current element context.</source>
          <target state="translated">Ein im aktuellen Elementkontext zu überprüfender Text-<ph id="ph1">&lt;see langword="string" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>Validates whether the text <ph id="ph1">&lt;see langword="string" /&gt;</ph> specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.</source>
          <target state="translated">Überprüft, ob der angegebene Text-<ph id="ph1">&lt;see langword="string" /&gt;</ph> im aktuellen Elementkontext zulässig ist und sammelt den Text für die Validierung, wenn das aktuelle Element einen einfachen Inhalt aufweist.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden sind wichtige Hinweise zum Verwenden der <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>If the element has simple content, the text <ph id="ph1">`string`</ph> specified is concatenated on each call to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> method until the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method is called.</source>
          <target state="translated">Verfügt das Element einfachen Inhalt, den Text <ph id="ph1">`string`</ph> angegebenen verkettet wird, bei jedem Aufruf der <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> Methode erst die <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> Methode wird aufgerufen.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method is called, all the text is validated.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> -Methode aufgerufen wird, wird der gesamte Text überprüft.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>If the element has complex content, no text concatenation occurs.</source>
          <target state="translated">Wenn das Element über komplexen Inhalt verfügt, tritt keine textverkettungsoperatoren.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>The text <ph id="ph1">&lt;see langword="string" /&gt;</ph> specified is not allowed in the current element context.</source>
          <target state="translated">Der angegebene Text-<ph id="ph1">&lt;see langword="string" /&gt;</ph> ist im aktuellen Elementkontext nicht zulässig.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph>-Methode wurde nicht in der richtigen Reihenfolge aufgerufen.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>For example, the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> method is called after calling <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</source>
          <target state="translated">Beispiel: Die <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph>-Methode wird nach dem Aufruf von <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> aufgerufen.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
          <source>The text <ph id="ph1">&lt;see langword="string" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der Text-<ph id="ph1">&lt;see langword="string" /&gt;</ph>-Parameter darf nicht <ph id="ph2">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph><ph id="ph2">&lt;see langword="delegate" /&gt;</ph> used to pass the text value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph>-<ph id="ph2">&lt;see langword="delegate" /&gt;</ph>, mit dem der Textwert als CLR-Typ (Common Language Runtime) übergeben wird, der mit dem XSD-Typ des Attributs kompatibel ist.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>Validates whether the text returned by the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph> object specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.</source>
          <target state="translated">Überprüft, ob der vom angegebenen <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph>-Objekt zurückgegebene Text im aktuellen Elementkontext zulässig ist und sammelt den Text für die Validierung, wenn das aktuelle Element einen einfachen Inhalt aufweist.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden sind wichtige Hinweise zum Verwenden der <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>If the element has simple content, the text <ph id="ph1">`string`</ph> specified is concatenated on each call to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> method until the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method is called.</source>
          <target state="translated">Verfügt das Element einfachen Inhalt, den Text <ph id="ph1">`string`</ph> angegebenen verkettet wird, bei jedem Aufruf der <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</ph> Methode erst die <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> Methode wird aufgerufen.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> method is called, all the text is validated.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</ph> -Methode aufgerufen wird, wird der gesamte Text überprüft.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>If the element has complex content, no text concatenation occurs.</source>
          <target state="translated">Wenn das Element über komplexen Inhalt verfügt, tritt keine textverkettungsoperatoren.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>The text <ph id="ph1">&lt;see langword="string" /&gt;</ph> specified is not allowed in the current element context.</source>
          <target state="translated">Der angegebene Text-<ph id="ph1">&lt;see langword="string" /&gt;</ph> ist im aktuellen Elementkontext nicht zulässig.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph>-Methode wurde nicht in der richtigen Reihenfolge aufgerufen.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>For example, the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph> method is called after calling <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</source>
          <target state="translated">Beispiel: Die <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /&gt;</ph>-Methode wird nach dem Aufruf von <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> aufgerufen.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
          <source>The text <ph id="ph1">&lt;see langword="string" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der Text-<ph id="ph1">&lt;see langword="string" /&gt;</ph>-Parameter darf nicht <ph id="ph2">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidator">
          <source>Validates whether white space is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.</source>
          <target state="translated">Überprüft, ob Leerraum im aktuellen Elementkontext zulässig ist und sammelt den Leerraum für die Validierung, wenn das aktuelle Element einen einfachen Inhalt aufweist.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
          <source>A white space <ph id="ph1">&lt;see langword="string" /&gt;</ph> to validate in the current element context.</source>
          <target state="translated">Ein im aktuellen Elementkontext zu überprüfender Leerraum-<ph id="ph1">&lt;see langword="string" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
          <source>Validates whether the white space in the <ph id="ph1">&lt;see langword="string" /&gt;</ph> specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.</source>
          <target state="translated">Überprüft, ob der im <ph id="ph1">&lt;see langword="string" /&gt;</ph> angegebene Leerraum im aktuellen Elementkontext zulässig ist und sammelt den Leerraum für die Validierung, wenn das aktuelle Element einen einfachen Inhalt aufweist.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
          <source>White space is not allowed in the current element context.</source>
          <target state="translated">Leerraum ist im aktuellen Elementkontext nicht zulässig.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph>-Methode wurde nicht in der richtigen Reihenfolge aufgerufen.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
          <source>For example, if the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph> method is called after calling <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</source>
          <target state="translated">Beispiel: Die <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph>-Methode wird nach einem Aufruf von <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> aufgerufen.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph><ph id="ph2">&lt;see langword="delegate" /&gt;</ph> used to pass the white space value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph>-<ph id="ph2">&lt;see langword="delegate" /&gt;</ph>, mit dem der Leerraumwert als CLR-Typ (Common Language Runtime) übergeben wird, der mit dem XSD-Typ des Attributs kompatibel ist.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
          <source>Validates whether the white space returned by the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph> object specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.</source>
          <target state="translated">Überprüft, ob der vom angegebenen <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlValueGetter" /&gt;</ph>-Objekt zurückgegebene Leerraum im aktuellen Elementkontext zulässig ist und sammelt den Leerraum für die Validierung, wenn das aktuelle Element einen einfachen Inhalt aufweist.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
          <source>White space is not allowed in the current element context.</source>
          <target state="translated">Leerraum ist im aktuellen Elementkontext nicht zulässig.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph> method was not called in the correct sequence.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph>-Methode wurde nicht in der richtigen Reihenfolge aufgerufen.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
          <source>For example, if the <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph> method is called after calling <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph>.</source>
          <target state="translated">Beispiel: Die <ph id="ph1">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /&gt;</ph>-Methode wird nach einem Aufruf von <ph id="ph2">&lt;see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /&gt;</ph> aufgerufen.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> that receives schema validation warnings and errors encountered during schema validation.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph>, der Schemavalidierungswarnungen und Fehler empfängt, die während der Schemavalidierung auftreten.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
          <source>If no <ph id="ph1">&lt;xref:System.Xml.Schema.ValidationEventHandler&gt;</ph> is specified, an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> is thrown for all schema validation errors with an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph> value of <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSeverityType.Error&gt;</ph>.</source>
          <target state="translated">Wenn kein <ph id="ph1">&lt;xref:System.Xml.Schema.ValidationEventHandler&gt;</ph> angegeben wird, ein <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> wird für alle Schemavalidierungsfehler mit ausgelöst ein <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph> Wert <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSeverityType.Error&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
          <source>An <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> is not thrown for validation warnings with an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph> value of <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSeverityType.Warning&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> wird für validierungswarnungen mit ausgelöst, wenn ein <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph> Wert <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSeverityType.Warning&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
          <source>The following example validates the <ph id="ph1">`contosoBooks.xml`</ph> file against the <ph id="ph2">`contosoBooks.xsd`</ph> schema.</source>
          <target state="translated">Das folgende Beispiel überprüft die <ph id="ph1">`contosoBooks.xml`</ph> -Datei anhand der <ph id="ph2">`contosoBooks.xsd`</ph> Schema.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize the <ph id="ph2">`contosoBooks.xml`</ph> file and pass the value of the nodes to the methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">Im Beispiel wird mit der <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>-Klasse die <ph id="ph2">`contosoBooks.xml`</ph>-Datei deserialisiert, und der Wert der Knoten wird an die Methoden der <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph>-Klasse übergeben.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
          <source>The example takes the <ph id="ph1">`contosoBooks.xml`</ph> file as input.</source>
          <target state="translated">In diesem Beispiel wird die Datei <ph id="ph1">`contosoBooks.xml`</ph> als Eingabe verwendet.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
          <source>The example also takes the <ph id="ph1">`contosoBooks.xsd`</ph> as an input.</source>
          <target state="translated">In diesem Beispiel wird auch <ph id="ph1">`contosoBooks.xsd`</ph> als Eingabe verwendet.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaValidator.ValidationEventSender">
          <source>Gets or sets the object sent as the sender object of a validation event.</source>
          <target state="translated">Ruft das als das Absenderobjekt eines Validierungsereignisses gesendete Objekt ab oder legt dieses fest.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.ValidationEventSender">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>; the default is this <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>. Der Standardwert ist dieses <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.ValidationEventSender">
          <source>For an example of a validation event, see the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler&gt;</ph> event.</source>
          <target state="translated">Ein Beispiel eines Validierungsereignisses finden Sie unter der <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler&gt;</ph> Ereignis.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> object used to resolve <bpt id="p1">&lt;c&gt;</bpt>xs:import<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>xs:include<ept id="p2">&lt;/c&gt;</ept> elements as well as <bpt id="p3">&lt;c&gt;</bpt>xsi:schemaLocation<ept id="p3">&lt;/c&gt;</ept> and <bpt id="p4">&lt;c&gt;</bpt>xsi:noNamespaceSchemaLocation<ept id="p4">&lt;/c&gt;</ept> attributes.</source>
          <target state="translated">Legt das <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph>Objekt zum Auflösen von <bpt id="p1">&lt;c&gt;</bpt>xs: import<ept id="p1">&lt;/c&gt;</ept>- und <bpt id="p2">&lt;c&gt;</bpt>xs: include<ept id="p2">&lt;/c&gt;</ept>-Elementen fest, sowie <bpt id="p3">&lt;c&gt;</bpt>xsi: schemaLocation<ept id="p3">&lt;/c&gt;</ept>- und <bpt id="p4">&lt;c&gt;</bpt>xsi: noNamespaceSchemaLocation<ept id="p4">&lt;/c&gt;</ept>-Attributn.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> object; the default is an <ph id="ph2">&lt;see cref="T:System.Xml.XmlUrlResolver" /&gt;</ph> object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph>-Objekt. Der Standardwert ist ein <ph id="ph2">&lt;see cref="T:System.Xml.XmlUrlResolver" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> validation flags of an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object are not set be default.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> und <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> Validierungsflag eines ein <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> Objekt sind nicht standardmäßig sein.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver">
          <source>Additionally, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;</ph> property of an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> object is <ph id="ph3">`null`</ph> by default.</source>
          <target state="translated">Darüber hinaus die <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;</ph> Eigenschaft ein <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> Objekt <ph id="ph3">`null`</ph> standardmäßig.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver">
          <source>As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.</source>
          <target state="translated">Daher werden enthalten externe Schemata in verwiesen wird, Importe oder Redefine Elemente nicht standardmäßig aufgelöst.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>