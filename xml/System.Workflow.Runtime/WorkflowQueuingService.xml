<Type Name="WorkflowQueuingService" FullName="System.Workflow.Runtime.WorkflowQueuingService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cf97ac74c2c97120fc5e510068a6cb6a1a000982" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30719774" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WorkflowQueuingService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowQueuingService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.WorkflowQueuingService" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowQueuingService" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowQueuingService" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt die Dienste für die Verwaltung von <see cref="T:System.Workflow.Runtime.WorkflowQueue" />-Objekten bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <xref:System.Workflow.Runtime.WorkflowQueuingService> stellt Methoden bereit, die Sie verwenden können, um die einer Workflowinstanz zugeordneten Workflowwarteschlangen zu verwalten.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Methode mit dem Namen `CreateQueue`, die ein <xref:System.Workflow.Runtime.WorkflowQueuingService>-Objekt initialisiert, indem sie die <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=nameWithType>-Methode aufruft. Im Code wird anschließend die <xref:System.Workflow.Runtime.WorkflowQueuingService.Exists%2A>-Methode verwendet, um zu bestimmen, ob eine <xref:System.Workflow.Runtime.WorkflowQueue> mit einem angegebenen Namen vorhanden ist. Wenn die Warteschlange nicht vorhanden ist, ruft der Code die <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A>-Methode auf. Wenn die Warteschlange vorhanden ist, ruft der Code die <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A>-Methode auf.  
  
 Dieses Codebeispiel stammt aus dem File Watcher Activity SDK-Beispiel in der Datei FileSystemEvent.cs. Weitere Informationen finden Sie unter [Systemaktivität Watcher](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).  
  
 [!code-csharp[WF_Samples#223](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#223)]
 [!code-vb[WF_Samples#223](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#223)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateWorkflowQueue">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowQueue CreateWorkflowQueue (IComparable queueName, bool transactional);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowQueue CreateWorkflowQueue(class System.IComparable queueName, bool transactional) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue(System.IComparable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflowQueue (queueName As IComparable, transactional As Boolean) As WorkflowQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowQueue ^ CreateWorkflowQueue(IComparable ^ queueName, bool transactional);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowQueue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
        <Parameter Name="transactional" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="queueName">Der Name der Warteschlange.</param>
        <param name="transactional">Ein Wert, der angibt, ob die <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> außerhalb des Umfangs der aktuellen Transaktion sichtbar ist.</param>
        <summary>Erstellt eine <see cref="T:System.Workflow.Runtime.WorkflowQueue" />, indem ein angegebener Name und ein Transaktionsbereich verwendet wird.</summary>
        <returns>Ein <see cref="T:System.Workflow.Runtime.WorkflowQueue" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine <xref:System.Workflow.Runtime.WorkflowQueue> mit dem angegebenen `queueName` wird erstellt. Wenn es sich um eine Transaktionswarteschlange handelt (`true`), ist die <xref:System.Workflow.Runtime.WorkflowQueue> nur innerhalb der aktuellen Transaktion sichtbar.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Methode mit dem Namen `CreateQueue`, die ein <xref:System.Workflow.Runtime.WorkflowQueuingService>-Objekt initialisiert, indem sie die <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=nameWithType>-Methode aufruft. Im Code wird anschließend die <xref:System.Workflow.Runtime.WorkflowQueuingService.Exists%2A>-Methode verwendet, um zu bestimmen, ob eine <xref:System.Workflow.Runtime.WorkflowQueue> mit einem angegebenen Namen vorhanden ist. Wenn die Warteschlange nicht vorhanden ist, ruft der Code die <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A>-Methode auf. Wenn die Warteschlange vorhanden ist, ruft der Code die <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A>-Methode auf.  
  
 Dieses Codebeispiel stammt aus dem File Watcher Activity SDK-Beispiel in der Datei FileSystemEvent.cs. Weitere Informationen finden Sie unter [Systemaktivität Watcher](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).  
  
 [!code-csharp[WF_Samples#223](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#223)]
 [!code-vb[WF_Samples#223](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#223)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="queueName" /> ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> mit dem unter <paramref name="queueName" /> angegebenen Namen ist bereits vorhanden.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteWorkflowQueue">
      <MemberSignature Language="C#" Value="public void DeleteWorkflowQueue (IComparable queueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteWorkflowQueue(class System.IComparable queueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueuingService.DeleteWorkflowQueue(System.IComparable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteWorkflowQueue (queueName As IComparable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteWorkflowQueue(IComparable ^ queueName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
      </Parameters>
      <Docs>
        <param name="queueName">Der Name der zu löschenden <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</param>
        <summary>Löscht die angegebene <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel zeigt eine Methode, die eine Zeichenfolge auf die Konsole schreibt und eine Instanz von <xref:System.Workflow.Runtime.WorkflowQueuingService> erstellt, indem sie die <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=nameWithType>-Methode aufruft. Zuletzt ruft der Code die <xref:System.Workflow.Runtime.WorkflowQueuingService.DeleteWorkflowQueue%2A>-Methode auf, um die Warteschlange zu löschen, die im aktuellen Workflow einer `QueueName`-Eigenschaft zugeordnet ist.  
  
 Dieses Codebeispiel stammt aus dem File Watcher Activity SDK-Beispiel in der Datei FileSystemEvent.cs. Weitere Informationen finden Sie unter [Systemaktivität Watcher](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).  
  
 [!code-csharp[WF_Samples#224](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#224)]
 [!code-vb[WF_Samples#224](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#224)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="queueName" /> ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public bool Exists (IComparable queueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Exists(class System.IComparable queueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueuingService.Exists(System.IComparable)" />
      <MemberSignature Language="VB.NET" Value="Public Function Exists (queueName As IComparable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Exists(IComparable ^ queueName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
      </Parameters>
      <Docs>
        <param name="queueName">Der Name des <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</param>
        <summary>Prüft, ob die angegebene <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> vorhanden ist.</summary>
        <returns>
          <see langword="true" />, wenn die <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> vorhanden ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel zeigt eine Methode mit dem Namen `CreateQueue`, die ein <xref:System.Workflow.Runtime.WorkflowQueuingService>-Objekt initialisiert, indem sie die <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=nameWithType>-Methode aufruft. Im Code wird anschließend die <xref:System.Workflow.Runtime.WorkflowQueuingService.Exists%2A>-Methode verwendet, um zu bestimmen, ob eine <xref:System.Workflow.Runtime.WorkflowQueue> mit einem angegebenen Namen vorhanden ist. Wenn die Warteschlange nicht vorhanden ist, ruft der Code die <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A>-Methode auf. Wenn die Warteschlange vorhanden ist, ruft der Code die <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A>-Methode auf.  
  
 Dieses Codebeispiel stammt aus dem File Watcher Activity SDK-Beispiel in der Datei FileSystemEvent.cs. Weitere Informationen finden Sie unter [Systemaktivität Watcher](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).  
  
 [!code-csharp[WF_Samples#223](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#223)]
 [!code-vb[WF_Samples#223](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#223)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="queueName" /> ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowQueue">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowQueue GetWorkflowQueue (IComparable queueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowQueue GetWorkflowQueue(class System.IComparable queueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue(System.IComparable)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowQueue (queueName As IComparable) As WorkflowQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowQueue ^ GetWorkflowQueue(IComparable ^ queueName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowQueue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
      </Parameters>
      <Docs>
        <param name="queueName">Der Name der abzurufenden <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</param>
        <summary>Ruft das angegebene <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> ab.</summary>
        <returns>Ein <see cref="T:System.Workflow.Runtime.WorkflowQueue" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel zeigt eine Methode mit dem Namen `CreateQueue`, die ein <xref:System.Workflow.Runtime.WorkflowQueuingService>-Objekt initialisiert, indem sie die <xref:System.Workflow.ComponentModel.ActivityExecutionContext.GetService%2A?displayProperty=nameWithType>-Methode aufruft. Im Code wird anschließend die <xref:System.Workflow.Runtime.WorkflowQueuingService.Exists%2A>-Methode verwendet, um zu bestimmen, ob eine <xref:System.Workflow.Runtime.WorkflowQueue> mit einem angegebenen Namen vorhanden ist. Wenn die Warteschlange nicht vorhanden ist, ruft der Code die <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A>-Methode auf. Wenn die Warteschlange vorhanden ist, ruft der Code die <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A>-Methode auf.  
  
 Dieses Codebeispiel stammt aus dem File Watcher Activity SDK-Beispiel in der Datei FileSystemEvent.cs. Weitere Informationen finden Sie unter [Systemaktivität Watcher](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).  
  
 [!code-csharp[WF_Samples#223](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#223)]
 [!code-vb[WF_Samples#223](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#223)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="queueName" /> ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">Die angegebene <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> wurde nicht gefunden.</exception>
      </Docs>
    </Member>
    <Member MemberName="PendingMessagesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty PendingMessagesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty PendingMessagesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Runtime.WorkflowQueuingService.PendingMessagesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PendingMessagesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ PendingMessagesProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Enthält die nicht verwendeten Elemente in den Workflowwarteschlangen, die diesem <see cref="T:System.Workflow.Runtime.WorkflowQueuingService" /> zugeordnet sind.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine Workflowinstanz abgeschlossen ist oder beendet wird, werden alle nicht verwendeten Elemente in ihren Workflowwarteschlangen, die diesem <xref:System.Workflow.Runtime.WorkflowQueuingService> zugeordnet sind, in die <xref:System.Workflow.Runtime.WorkflowQueuingService.PendingMessagesProperty> verschoben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>