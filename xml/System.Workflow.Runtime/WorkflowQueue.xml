<Type Name="WorkflowQueue" FullName="System.Workflow.Runtime.WorkflowQueue">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bf42065902a00030519f7093e3b4acb485264b92" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39821342" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WorkflowQueue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowQueue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.WorkflowQueue" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowQueue" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowQueue" />
  <TypeSignature Language="F#" Value="type WorkflowQueue = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="241f2-101">Stellt eine Workflowwarteschlange dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="241f2-101">Represents a workflow queue.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="241f2-102">Workflowwarteschlangen werden verwendet, um Meldungen zwischen einem Host oder Hostdiensten und den Aktivitäten in einem Workflow zu übergeben.</span><span class="sxs-lookup"><span data-stu-id="241f2-102">Workflow queues are used to pass messages between a host or host services and activities in a workflow.</span></span> <span data-ttu-id="241f2-103">Eine beliebige Aktivität kann eine <xref:System.Workflow.Runtime.WorkflowQueue> erstellen, indem sie <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A?displayProperty=nameWithType> aufruft, und ein Host, ein Dienst oder eine andere Aktivität kann <xref:System.Workflow.Runtime.WorkflowQueue.Enqueue%2A> aufrufen, um der <xref:System.Workflow.Runtime.WorkflowQueue> ein Element hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="241f2-103">Any activity can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A?displayProperty=nameWithType>, and a host, a service, or another activity can call <xref:System.Workflow.Runtime.WorkflowQueue.Enqueue%2A> to add an item to that <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="241f2-104">Sie können das <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable>-Ereignis abonnieren, um benachrichtigt zu werden, wenn in der <xref:System.Workflow.Runtime.WorkflowQueue> ein Element ankommt.</span><span class="sxs-lookup"><span data-stu-id="241f2-104">You can subscribe to the <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> event to be notified when an item arrives on the <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="241f2-105">Sie können <xref:System.Workflow.Runtime.WorkflowQueue.Peek%2A> verwenden, um ein Element am Anfang von <xref:System.Workflow.Runtime.WorkflowQueue> und <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> zu untersuchen und ein Element aus der <xref:System.Workflow.Runtime.WorkflowQueue> zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="241f2-105">You can use <xref:System.Workflow.Runtime.WorkflowQueue.Peek%2A> to examine an item at the beginning of the <xref:System.Workflow.Runtime.WorkflowQueue> and <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> to remove an item from the <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="241f2-106">Jeder <xref:System.Workflow.Runtime.WorkflowQueue> ist ein <xref:System.Workflow.Runtime.WorkflowQueuingService> zugeordnet, mit dem Sie andere Verwaltungsvorgänge für die <xref:System.Workflow.Runtime.WorkflowQueue> durchführen können, zum Beispiel das Löschen der Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="241f2-106">Each <xref:System.Workflow.Runtime.WorkflowQueue> is associated with a <xref:System.Workflow.Runtime.WorkflowQueuingService> that you can use to perform other management operations on the <xref:System.Workflow.Runtime.WorkflowQueue>, such as deleting the queue.</span></span> <span data-ttu-id="241f2-107">Der <xref:System.Workflow.Runtime.WorkflowQueue.QueuingService%2A> legt den <xref:System.Workflow.Runtime.WorkflowQueuingService> offen, der dieser <xref:System.Workflow.Runtime.WorkflowQueue> zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="241f2-107"><xref:System.Workflow.Runtime.WorkflowQueue.QueuingService%2A> exposes the <xref:System.Workflow.Runtime.WorkflowQueuingService> associated with this <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="241f2-108">Das folgende Codebeispiel zeigt, wie Sie eine <xref:System.Workflow.Runtime.WorkflowQueue> erstellen können, indem Sie die <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType>-Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="241f2-108">The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="241f2-109">Im Beispiel wird auch die <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A>-Eigenschaft verwendet, um zu bestimmen, ob in der aktuellen Warteschlange Meldungen vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="241f2-109">It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> property to determine whether any messages exist in the current queue.</span></span> <span data-ttu-id="241f2-110">Im Code wird außerdem die <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A>-Methode verwendet, um das erste Objekt in der Warteschlange zu entfernen und zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="241f2-110">Finally, the code uses the <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> method to remove and return the first object in the queue.</span></span>  
  
 <span data-ttu-id="241f2-111">Dieses Codebeispiel stammt aus dem File Watcher Activity SDK-Beispiel in der Datei FileSystemEvent.cs.</span><span class="sxs-lookup"><span data-stu-id="241f2-111">This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</span></span> <span data-ttu-id="241f2-112">Weitere Informationen finden Sie unter [Dateisystemaktivitäten Watcher](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span><span class="sxs-lookup"><span data-stu-id="241f2-112">For more information, see [File System Watcher Activity](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span></span>  
  
 [!code-csharp[WF_Samples#227](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#227)]
 [!code-vb[WF_Samples#227](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#227)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowQueue.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Workflow.Runtime.WorkflowQueue.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="241f2-113">Ruft die Anzahl der Elemente in <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-113">Gets the number of items contained in the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="241f2-114">Die Anzahl der Elemente in der Workflowwarteschlange.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-114">The number of items in the workflow queue.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="241f2-115">Das folgende Codebeispiel zeigt, wie Sie eine <xref:System.Workflow.Runtime.WorkflowQueue> erstellen können, indem Sie die <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType>-Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="241f2-115">The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="241f2-116">Im Beispiel wird auch die <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A>-Eigenschaft verwendet, um zu bestimmen, ob in der aktuellen Warteschlange Meldungen vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="241f2-116">It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> property to determine whether any messages exist in the current queue.</span></span> <span data-ttu-id="241f2-117">Im Code wird außerdem die <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A>-Methode verwendet, um das erste Objekt in der Warteschlange zu entfernen und zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="241f2-117">Finally, the code uses the <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> method to remove and return the first object in the queue.</span></span>  
  
 <span data-ttu-id="241f2-118">Dieses Codebeispiel stammt aus dem File Watcher Activity SDK-Beispiel in der Datei FileSystemEvent.cs.</span><span class="sxs-lookup"><span data-stu-id="241f2-118">This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</span></span> <span data-ttu-id="241f2-119">Weitere Informationen finden Sie unter [Dateisystemaktivitäten Watcher](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span><span class="sxs-lookup"><span data-stu-id="241f2-119">For more information, see [File System Watcher Activity](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span></span>  
  
 [!code-csharp[WF_Samples#227](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#227)]
 [!code-vb[WF_Samples#227](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#227)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dequeue">
      <MemberSignature Language="C#" Value="public object Dequeue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Dequeue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.Dequeue" />
      <MemberSignature Language="VB.NET" Value="Public Function Dequeue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dequeue();" />
      <MemberSignature Language="F#" Value="member this.Dequeue : unit -&gt; obj" Usage="workflowQueue.Dequeue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="241f2-120">Entfernt das Objekt am Anfang von <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> und gibt es zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-120">Removes and returns the object at the beginning of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="241f2-121">Das Objekt, das vom Anfang der <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> entfernt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-121">The object that is removed from the beginning of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241f2-122">Sie können den Wert unter <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> prüfen, um zu bestimmen, ob die <xref:System.Workflow.Runtime.WorkflowQueue> leer ist, bevor Sie <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> aufrufen, oder Sie können die <xref:System.InvalidOperationException> abfangen.</span><span class="sxs-lookup"><span data-stu-id="241f2-122">You can check <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> to determine whether the <xref:System.Workflow.Runtime.WorkflowQueue> is empty before you call <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A>, or you can catch the <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="241f2-123">Das folgende Codebeispiel zeigt, wie Sie eine <xref:System.Workflow.Runtime.WorkflowQueue> erstellen können, indem Sie die <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType>-Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="241f2-123">The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="241f2-124">Im Beispiel wird auch die <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A>-Eigenschaft verwendet, um zu bestimmen, ob in der aktuellen Warteschlange Meldungen vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="241f2-124">It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> property to determine whether any messages exist in the current queue.</span></span> <span data-ttu-id="241f2-125">Im Code wird außerdem die <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A>-Methode verwendet, um das erste Objekt in der Warteschlange zu entfernen und zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="241f2-125">Finally, the code uses the <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> method to remove and return the first object in the queue.</span></span>  
  
 <span data-ttu-id="241f2-126">Dieses Codebeispiel stammt aus dem File Watcher Activity SDK-Beispiel in der Datei FileSystemEvent.cs.</span><span class="sxs-lookup"><span data-stu-id="241f2-126">This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</span></span> <span data-ttu-id="241f2-127">Weitere Informationen finden Sie unter [Dateisystemaktivitäten Watcher](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span><span class="sxs-lookup"><span data-stu-id="241f2-127">For more information, see [File System Watcher Activity](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span></span>  
  
 [!code-csharp[WF_Samples#227](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#227)]
 [!code-vb[WF_Samples#227](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#227)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="241f2-128">Die <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> ist leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-128">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowQueue.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Workflow.Runtime.WorkflowQueue.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="241f2-129">Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob die <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> aktiviert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-129">Gets or sets a value that specifies whether the <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="241f2-130">
            <see langword="true" />, wenn die <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> aktiviert ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-130">
              <see langword="true" /> if the <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> is enabled; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enqueue">
      <MemberSignature Language="C#" Value="public void Enqueue (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Enqueue(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.Enqueue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Enqueue (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Enqueue(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="member this.Enqueue : obj -&gt; unit" Usage="workflowQueue.Enqueue item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="241f2-131">Das Objekt, das <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-131">The object to add to the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="241f2-132">Fügt am Ende der <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> ein Objekt hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-132">Adds an object to the end of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="241f2-133">Das <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> ist nicht aktiviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-133">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> is not enabled.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public object Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Peek();" />
      <MemberSignature Language="F#" Value="member this.Peek : unit -&gt; obj" Usage="workflowQueue.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="241f2-134">Gibt das Objekt am Anfang von <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> zurück, ohne es zu entfernen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-134">Returns the object at the beginning of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> without removing it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="241f2-135">Das Objekt am Anfang der <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-135">The object at the beginning of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241f2-136">Diese Methode ähnelt der <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A>-Methode, aber <xref:System.Workflow.Runtime.WorkflowQueue.Peek%2A> ändert die <xref:System.Workflow.Runtime.WorkflowQueue> nicht.</span><span class="sxs-lookup"><span data-stu-id="241f2-136">This method is similar to the <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> method, but <xref:System.Workflow.Runtime.WorkflowQueue.Peek%2A> does not modify the <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="241f2-137">Sie können den Wert unter <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> prüfen, um zu bestimmen, ob die <xref:System.Workflow.Runtime.WorkflowQueue> leer ist, bevor Sie <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> aufrufen, oder Sie können die <xref:System.InvalidOperationException> abfangen.</span><span class="sxs-lookup"><span data-stu-id="241f2-137">You can check <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> to determine whether the <xref:System.Workflow.Runtime.WorkflowQueue> is empty before you call <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A>, or you can catch the <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="241f2-138">Die <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> ist leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-138">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="QueueItemArrived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; QueueItemArrived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; QueueItemArrived" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueueItemArrived As EventHandler(Of QueueEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ QueueItemArrived;" />
      <MemberSignature Language="F#" Value="member this.QueueItemArrived : EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; " Usage="member this.QueueItemArrived : System.EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="241f2-139">Tritt ein, wenn ein Element an diese <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> gesendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-139">Occurs when an item is delivered on this <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241f2-140">Dieses Ereignis wird nur für Verarbeitungen verwendet, die synchron mit der Ereigniszustellung an die Workflowinstanz durchgeführt werden müssen.</span><span class="sxs-lookup"><span data-stu-id="241f2-140">This event is only used for processing that must occur synchronously with event delivery to the workflow instance.</span></span> <span data-ttu-id="241f2-141">Der Ereignishandler kann auf einem anderen Thread als einem Workflowthread ausgeführt werden. Aus diesem Grund muss der Zugriff auf gemeinsam genutzte Workflowobjekte, z.&#160;B. <xref:System.Workflow.ComponentModel.DependencyObject>, geschützt sein.</span><span class="sxs-lookup"><span data-stu-id="241f2-141">The event handler may execute on a non-workflow thread so access to any shared workflow object, for example, any <xref:System.Workflow.ComponentModel.DependencyObject>, must be protected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueItemAvailable">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; QueueItemAvailable;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; QueueItemAvailable" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueueItemAvailable As EventHandler(Of QueueEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ QueueItemAvailable;" />
      <MemberSignature Language="F#" Value="member this.QueueItemAvailable : EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; " Usage="member this.QueueItemAvailable : System.EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="241f2-142">Tritt auf, wenn ein Element in dieser <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> verfügbar ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-142">Occurs when an item is available on this <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241f2-143">Das <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable>-Ereignis wird auf asynchrone Weise ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="241f2-143">The <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> event is raised in an asynchronous manner.</span></span> <span data-ttu-id="241f2-144">Der Absender für das <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable>-Ereignis ist der <xref:System.Workflow.ComponentModel.ActivityExecutionContext> der abonnierenden <xref:System.Workflow.ComponentModel.Activity>.</span><span class="sxs-lookup"><span data-stu-id="241f2-144">The sender for the <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> event will be the <xref:System.Workflow.ComponentModel.ActivityExecutionContext> of the subscribing <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueName">
      <MemberSignature Language="C#" Value="public IComparable QueueName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IComparable QueueName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowQueue.QueueName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueueName As IComparable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IComparable ^ QueueName { IComparable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueueName : IComparable" Usage="System.Workflow.Runtime.WorkflowQueue.QueueName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IComparable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="241f2-145">Ruft den Namen der Workflowwarteschlange ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-145">Gets the name of the workflow queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="241f2-146">Der Name des <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-146">The name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241f2-147">Der Name der Workflowwarteschlange wird von der <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A>-Methode festgelegt.</span><span class="sxs-lookup"><span data-stu-id="241f2-147">The name of the workflow queue is set by the <xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueuingService">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowQueuingService QueuingService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.WorkflowQueuingService QueuingService" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowQueue.QueuingService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueuingService As WorkflowQueuingService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Runtime::WorkflowQueuingService ^ QueuingService { System::Workflow::Runtime::WorkflowQueuingService ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueuingService : System.Workflow.Runtime.WorkflowQueuingService" Usage="System.Workflow.Runtime.WorkflowQueue.QueuingService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowQueuingService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="241f2-148">Ruft den Warteschlangendienst ab, der dieser <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-148">Gets the queuing service associated with this <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="241f2-149">Ein <see cref="T:System.Workflow.Runtime.WorkflowQueuingService" />, der den Warteschlangendienst darstellt, der dieser <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-149">A <see cref="T:System.Workflow.Runtime.WorkflowQueuingService" /> that represents the queuing service associated with this <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterForQueueItemArrived">
      <MemberSignature Language="C#" Value="public void RegisterForQueueItemArrived (System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForQueueItemArrived(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemArrived(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForQueueItemArrived (eventListener As IActivityEventListener(Of QueueEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForQueueItemArrived(System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ eventListener);" />
      <MemberSignature Language="F#" Value="member this.RegisterForQueueItemArrived : System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; -&gt; unit" Usage="workflowQueue.RegisterForQueueItemArrived eventListener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="eventListener">
          <span data-ttu-id="241f2-150">Ein Abonnent für <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> (implementiert die <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" />-Schnittstelle).</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-150">A subscriber for <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> that implements the <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="241f2-151">Registriert einen Abonnenten für das <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" />-Ereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-151">Registers a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterForQueueItemAvailable">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="241f2-152">Registriert einen Abonnenten für das <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" />-Ereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-152">Registers a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241f2-153">Sie können die überladenen <xref:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable%2A>-Methoden verwenden, um einen Abonnenten für das <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable>-Ereignis zu registrieren.</span><span class="sxs-lookup"><span data-stu-id="241f2-153">You can use the overloaded <xref:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable%2A> methods to register a subscriber for the <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> event.</span></span> <span data-ttu-id="241f2-154">Das <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable>-Ereignis wird verwendet, um Abonnenten darüber zu informieren, dass ein Element (auf asynchrone Weise) an diese <xref:System.Workflow.Runtime.WorkflowQueue> gesendet wurde.</span><span class="sxs-lookup"><span data-stu-id="241f2-154">The <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable> event is used to notify subscribers that an item has been delivered (in an asynchronous manner) to this <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterForQueueItemAvailable">
      <MemberSignature Language="C#" Value="public void RegisterForQueueItemAvailable (System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForQueueItemAvailable(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForQueueItemAvailable (eventListener As IActivityEventListener(Of QueueEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForQueueItemAvailable(System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ eventListener);" />
      <MemberSignature Language="F#" Value="member this.RegisterForQueueItemAvailable : System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; -&gt; unit" Usage="workflowQueue.RegisterForQueueItemAvailable eventListener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="eventListener">
          <span data-ttu-id="241f2-155">Ein Abonnent für <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> (implementiert die <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" />-Schnittstelle).</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-155">A subscriber for <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> that implements the <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="241f2-156">Registriert einen Abonnenten für das <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" />-Ereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-156">Registers a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="241f2-157">Das folgende Codebeispiel zeigt, wie Sie eine <xref:System.Workflow.Runtime.WorkflowQueue> erstellen können, indem Sie die <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType>-Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="241f2-157">The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="241f2-158">Im Code wird auch <xref:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable%2A> verwendet, um den angegebenen Listener zu registrieren.</span><span class="sxs-lookup"><span data-stu-id="241f2-158">It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable%2A> to register the specified listener.</span></span>  
  
 <span data-ttu-id="241f2-159">Dieses Codebeispiel stammt aus dem File Watcher Activity SDK-Beispiel in der Datei FileSystemEvent.cs.</span><span class="sxs-lookup"><span data-stu-id="241f2-159">This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</span></span> <span data-ttu-id="241f2-160">Weitere Informationen finden Sie unter [Dateisystemaktivitäten Watcher](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span><span class="sxs-lookup"><span data-stu-id="241f2-160">For more information, see [File System Watcher Activity](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span></span>  
  
 [!code-csharp[WF_Samples#225](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#225)]
 [!code-vb[WF_Samples#225](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#225)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="241f2-161">
            <paramref name="eventListener" /> ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-161">
              <paramref name="eventListener" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterForQueueItemAvailable">
      <MemberSignature Language="C#" Value="public void RegisterForQueueItemAvailable (System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener, string subscriberQualifiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForQueueItemAvailable(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener, string subscriberQualifiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForQueueItemAvailable (eventListener As IActivityEventListener(Of QueueEventArgs), subscriberQualifiedName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForQueueItemAvailable(System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ eventListener, System::String ^ subscriberQualifiedName);" />
      <MemberSignature Language="F#" Value="member this.RegisterForQueueItemAvailable : System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; * string -&gt; unit" Usage="workflowQueue.RegisterForQueueItemAvailable (eventListener, subscriberQualifiedName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
        <Parameter Name="subscriberQualifiedName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventListener">
          <span data-ttu-id="241f2-162">Ein Abonnent für <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> (implementiert die <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" />-Schnittstelle).</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-162">A subscriber for <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> that implements the <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interface.</span>
          </span>
        </param>
        <param name="subscriberQualifiedName">
          <span data-ttu-id="241f2-163">Der <see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> der Aktivität, die das <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" />-Ereignis oder einen NULL-Verweis abonniert (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-163">The <see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> of the activity that is subscribing to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> event or a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="241f2-164">Registriert einen Abonnenten für das <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" />-Ereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-164">Registers a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241f2-165">Wenn der qualifizierte Name der abonnierenden Aktivität über `subscriberQualifiedName` bereitgestellt wird, wird er in <xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType> des <xref:System.Workflow.Runtime.WorkflowQueueInfo>-Elements, das dieser Warteschlange zugeordnet ist, zurückgegeben, wenn <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A?displayProperty=nameWithType> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="241f2-165">If the qualified name of the subscribing activity is supplied by `subscriberQualifiedName`, it is returned in <xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType> of <xref:System.Workflow.Runtime.WorkflowQueueInfo> associated with this queue when <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A?displayProperty=nameWithType> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="241f2-166">
            <paramref name="eventListener" /> ist ein NULL-Verweis (<see langword="Nothing" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-166">
              <paramref name="eventListener" /> is a null reference (<see langword="Nothing" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UnregisterForQueueItemArrived">
      <MemberSignature Language="C#" Value="public void UnregisterForQueueItemArrived (System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterForQueueItemArrived(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemArrived(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterForQueueItemArrived (eventListener As IActivityEventListener(Of QueueEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterForQueueItemArrived(System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ eventListener);" />
      <MemberSignature Language="F#" Value="member this.UnregisterForQueueItemArrived : System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; -&gt; unit" Usage="workflowQueue.UnregisterForQueueItemArrived eventListener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="eventListener">
          <span data-ttu-id="241f2-167">Ein Abonnent für <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> (implementiert die <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" />-Schnittstelle).</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-167">A subscriber for <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> that implements the <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="241f2-168">Hebt die Registrierung eines Abonnenten des <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" />-Ereignisses auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-168">Unregisters a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemArrived" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="241f2-169">Diese Methode ist ausschließlich für die interne Verwendung reserviert.</span><span class="sxs-lookup"><span data-stu-id="241f2-169">This method is reserved for internal use only.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="241f2-170">
            <paramref name="eventListener" /> ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-170">
              <paramref name="eventListener" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UnregisterForQueueItemAvailable">
      <MemberSignature Language="C#" Value="public void UnregisterForQueueItemAvailable (System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterForQueueItemAvailable(class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; eventListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterForQueueItemAvailable (eventListener As IActivityEventListener(Of QueueEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterForQueueItemAvailable(System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ eventListener);" />
      <MemberSignature Language="F#" Value="member this.UnregisterForQueueItemAvailable : System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; -&gt; unit" Usage="workflowQueue.UnregisterForQueueItemAvailable eventListener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventListener" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="eventListener">
          <span data-ttu-id="241f2-171">Ein Abonnent für <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> (implementiert die <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" />-Schnittstelle).</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-171">A subscriber for <see cref="T:System.Workflow.ComponentModel.QueueEventArgs" /> that implements the <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="241f2-172">Hebt die Registrierung eines Abonnenten des <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" />-Ereignisses auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-172">Unregisters a subscriber to the <see cref="E:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="241f2-173">Das folgende Codebeispiel zeigt, wie Sie eine <xref:System.Workflow.Runtime.WorkflowQueue> erstellen können, indem Sie die <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType>-Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="241f2-173">The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="241f2-174">Im Code wird auch <xref:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable%2A> verwendet, um die Registrierung des angegebenen Listeners aufzuheben.</span><span class="sxs-lookup"><span data-stu-id="241f2-174">It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable%2A> to unregister the specified listener.</span></span>  
  
 <span data-ttu-id="241f2-175">Dieses Codebeispiel stammt aus dem File Watcher Activity SDK-Beispiel in der Datei FileSystemEvent.cs.</span><span class="sxs-lookup"><span data-stu-id="241f2-175">This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file.</span></span> <span data-ttu-id="241f2-176">Weitere Informationen finden Sie unter [Dateisystemaktivitäten Watcher](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span><span class="sxs-lookup"><span data-stu-id="241f2-176">For more information, see [File System Watcher Activity](http://msdn.microsoft.com/library/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).</span></span>  
  
 [!code-csharp[WF_Samples#226](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#226)]
 [!code-vb[WF_Samples#226](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#226)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="241f2-177">
            <paramref name="eventListener" /> ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="241f2-177">
              <paramref name="eventListener" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>