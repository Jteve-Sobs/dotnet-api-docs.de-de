<Type Name="WorkflowInstance" FullName="System.Workflow.Runtime.WorkflowInstance">
  <Metadata><Meta Name="ms.openlocfilehash" Value="637fd297a240ef6844493929bfdec6a41e588c83" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70544831" /></Metadata><TypeSignature Language="C#" Value="public sealed class WorkflowInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WorkflowInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.WorkflowInstance" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WorkflowInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowInstance sealed" />
  <TypeSignature Language="F#" Value="type WorkflowInstance = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e842d-101">Stellt eine Workflowinstanz dar.</span><span class="sxs-lookup"><span data-stu-id="e842d-101">Represents a workflow instance.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="e842d-102">Die <xref:System.Workflow.Runtime.WorkflowInstance>-Klasse macht Methoden und Eigenschaften verfügbar, die verwendet werden können, um die Ausführung einer Workflowinstanz zu steuern. Es handelt sich dabei im Wesentlichen um einen Proxy der eigentlichen Workflowinstanz, die von der Workflowruntime-Engine verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="e842d-102">The <xref:System.Workflow.Runtime.WorkflowInstance> class exposes methods and properties that can be used to control the execution of a workflow instance; it is essentially a proxy to the actual workflow instance used by the workflow runtime engine.</span></span> <span data-ttu-id="e842d-103">Ein Host oder ein Dienst kann die Workflowruntime-Engine anweisen, Aktionen für eine Workflowinstanz durchzuführen, indem er die entsprechenden Methoden aufruft, die in der <xref:System.Workflow.Runtime.WorkflowInstance>-Klasse enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="e842d-103">A host or a service can instruct the workflow runtime engine to perform actions on a workflow instance by calling the appropriate methods that are contained in the <xref:System.Workflow.Runtime.WorkflowInstance> class.</span></span>  <span data-ttu-id="e842d-104">Wenn die angeforderte Aktion nicht gültig ist, z.B. wenn der Host <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> für eine Workflowinstanz aufruft, die bereits abgeschlossen wurde, löst die Workflowruntime-Engine eine entsprechende Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="e842d-104">If the requested action is not valid, for example, if the host calls <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> on a workflow instance that has already completed, the workflow runtime engine will raise an appropriate exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e842d-105">Wenn eine Workflowinstanz nicht mehr reagiert, weil für einen Aufruf der Hostanwendung keine Rückgabe erfolgt, kann die Instanz nur durch das Neustarten der Laufzeit wiederhergestellt werden.</span><span class="sxs-lookup"><span data-stu-id="e842d-105">If a workflow instance becomes unresponsive because a call on the host application does not return, the only way to recover the instance is to restart the runtime.</span></span> <span data-ttu-id="e842d-106">Wenn die Instanz jedoch zwangsweise entladen, abgebrochen oder unterbrochen wurde, können Sie sie fortsetzen, indem Sie die <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType>-Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="e842d-106">However, if the instance has been forcibly unloaded, aborted, or suspended, it can be continued by calling the <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e842d-107">Das folgende Codebeispiel zeigt, wie Sie eine <xref:System.Workflow.Runtime.WorkflowInstance> in einem Workflowhost erstellen und starten können.</span><span class="sxs-lookup"><span data-stu-id="e842d-107">The following code example demonstrates how you can create and start a <xref:System.Workflow.Runtime.WorkflowInstance> in a workflow host.</span></span> <span data-ttu-id="e842d-108">Der Code erstellt eine <xref:System.Workflow.Runtime.WorkflowRuntime>-Instanz, fügt der Laufzeit Dienste hinzu und zeigt dann die empfohlene Vorgehensweise zum Erstellen eines <xref:System.Workflow.Runtime.WorkflowInstance>-Objekts.</span><span class="sxs-lookup"><span data-stu-id="e842d-108">The code creates an instance of the <xref:System.Workflow.Runtime.WorkflowRuntime>, adds services to the runtime, and then demonstrates the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span> <span data-ttu-id="e842d-109">Im Code wird die <xref:System.Workflow.Runtime.WorkflowInstance> initialisiert, indem er die <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A>-Methode aufruft und den vorher erstellten Typ an sie übergibt.</span><span class="sxs-lookup"><span data-stu-id="e842d-109">The code initializes <xref:System.Workflow.Runtime.WorkflowInstance> by calling the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method and passing the previously created type to it.</span></span> <span data-ttu-id="e842d-110">Die <xref:System.Workflow.Runtime.WorkflowInstance> wird mit dem <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A>-Methodenaufruf gestartet.</span><span class="sxs-lookup"><span data-stu-id="e842d-110">The <xref:System.Workflow.Runtime.WorkflowInstance> is started with the <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> method call.</span></span>  
  
 <span data-ttu-id="e842d-111">Dieses Codebeispiel ist Teil des Canceling a Workflow SDK-Beispiels in der Datei Program.cs.</span><span class="sxs-lookup"><span data-stu-id="e842d-111">This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</span></span> <span data-ttu-id="e842d-112">Weitere Informationen finden Sie unter [Abbrechen eines Workflows](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span><span class="sxs-lookup"><span data-stu-id="e842d-112">For more information, see [Canceling a Workflow](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span></span>  
  
 [!code-csharp[WF_Samples#260](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#260)]
 [!code-vb[WF_Samples#260](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#260)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="e842d-113">Dieser Typ ist threadsicher.</span><span class="sxs-lookup"><span data-stu-id="e842d-113">This type is thread safe.</span></span></threadsafe>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742169(v=vs.90)"><span data-ttu-id="e842d-114">Abbrechen eines Workflows</span><span class="sxs-lookup"><span data-stu-id="e842d-114">Canceling a Workflow</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; unit" Usage="workflowInstance.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e842d-115">Bricht die Workflowinstanz ab.</span><span class="sxs-lookup"><span data-stu-id="e842d-115">Aborts the workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e842d-116">Die Workflowinstanz wird auf synchrone Weise abgebrochen. Die Rückgabe der Methode erfolgt also, nachdem die Workflowinstanz abgebrochen wurde.</span><span class="sxs-lookup"><span data-stu-id="e842d-116">The workflow instance is aborted in a synchronous manner; that is, the method returns after the workflow instance has been aborted.</span></span> <span data-ttu-id="e842d-117">Die Workflowruntime-Engine macht die Workflowinstanz im Arbeitsspeicher ungültig und löscht den <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.</span><span class="sxs-lookup"><span data-stu-id="e842d-117">The workflow runtime engine invalidates the workflow instance in memory and clears the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.</span></span> <span data-ttu-id="e842d-118">Wenn die Workflowinstanz einen Persistenzdienst verwendet hat, werden die Arbeitsschritte verworfen, die seit dem letzten Persistenzpunkt ausgeführt wurden.</span><span class="sxs-lookup"><span data-stu-id="e842d-118">If a persistence service was used by your workflow instance, all work performed since the last persistence point is thrown away.</span></span> <span data-ttu-id="e842d-119">Nachdem es die Workflowinstanz abgebrochen hat, löst die Workflowruntime-Engine das <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted>-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="e842d-119">After it aborts the workflow instance, the workflow runtime engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted> event.</span></span> <span data-ttu-id="e842d-120">Sie können <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> aufrufen, um die Workflowinstanz neu zu laden und am letzten Persistenzpunkt zu beginnen.</span><span class="sxs-lookup"><span data-stu-id="e842d-120">You can call <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> to reload the workflow instance and start from its last persistence point.</span></span>  
  
 <span data-ttu-id="e842d-121">`Abort` unterscheidet sich von <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> wie folgt: `Abort` löscht einfach die Workflowinstanz im Arbeitsspeicher, und Sie können am letzten Persistenzpunkt neu beginnen, während 'Terminate' die Workflowinstanz im Arbeitsspeicher löscht und den Persistenzdienst informiert, dass die Instanz aus dem Arbeitsspeicher gelöscht wurde.</span><span class="sxs-lookup"><span data-stu-id="e842d-121">`Abort` is different from <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> in that while `Abort` simply clears the in-memory workflow instance and can be restarted from the last persistence point, Terminate clears the in-memory workflow instance and informs the persistence service that the instance has been cleared from memory.</span></span> <span data-ttu-id="e842d-122">Für den <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> bedeutet dies, dass alle Zustandsinformationen für diese Workflowinstanz bei der Beendigung aus der Datenbank gelöscht werden.</span><span class="sxs-lookup"><span data-stu-id="e842d-122">For the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>, this means that all state information for that workflow instance is deleted from the database upon termination.</span></span> <span data-ttu-id="e842d-123">Sie können die Workflowinstanz dann nicht mehr von einem vorher gespeicherten Persistenzpunkt neu laden.</span><span class="sxs-lookup"><span data-stu-id="e842d-123">You will not be able to reload the workflow instance from a previously stored persistence point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e842d-124">Das folgende Beispiel zeigt den Aufruf zum Abbrechen einer Workflowinstanz vom Typ 'Workflow1'.</span><span class="sxs-lookup"><span data-stu-id="e842d-124">The following example demonstrates calling Abort on a workflow instance of type Workflow1.</span></span>  
  
 [!code-csharp[WF_Samples#13](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#13)]
 [!code-vb[WF_Samples#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e842d-125">Die Workflowruntime-Engine wird nicht ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="e842d-125">The workflow runtime engine is not running.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyWorkflowChanges">
      <MemberSignature Language="C#" Value="public void ApplyWorkflowChanges (System.Workflow.ComponentModel.WorkflowChanges workflowChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyWorkflowChanges(class System.Workflow.ComponentModel.WorkflowChanges workflowChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyWorkflowChanges(System::Workflow::ComponentModel::WorkflowChanges ^ workflowChanges);" />
      <MemberSignature Language="F#" Value="member this.ApplyWorkflowChanges : System.Workflow.ComponentModel.WorkflowChanges -&gt; unit" Usage="workflowInstance.ApplyWorkflowChanges workflowChanges" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowChanges" Type="System.Workflow.ComponentModel.WorkflowChanges" />
      </Parameters>
      <Docs>
        <param name="workflowChanges"><span data-ttu-id="e842d-126">Ein <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" />-Element, das dynamische Updates für die Workflowinstanz angibt.</span><span class="sxs-lookup"><span data-stu-id="e842d-126">A <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> specifying dynamic updates for the workflow instance.</span></span></param>
        <summary><span data-ttu-id="e842d-127">Übernimmt Änderungen für die vom <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" />-Objekt angegebene Workflowinstanz.</span><span class="sxs-lookup"><span data-stu-id="e842d-127">Applies changes to the workflow instance specified by the <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e842d-128">Wenn die Workflowinstanz nicht bereits unterbrochen wurde, unterbricht die Workflowruntime-Engine die Instanz vorübergehend, bevor die Änderungen angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="e842d-128">If the workflow instance is not already suspended, the workflow runtime engine temporarily suspends the instance before applying the changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e842d-129">Das folgende Beispiel zeigt den Aufruf von ApplyWorkflowChanges für ein <xref:System.Workflow.Runtime.WorkflowInstance>-Objekt.</span><span class="sxs-lookup"><span data-stu-id="e842d-129">The following example demonstrates calling ApplyWorkflowChanges to a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  <span data-ttu-id="e842d-130">Dieses Beispiel stammt aus dem Ordering State Machine SDK-Beispiel in der Datei Mainform.cs.</span><span class="sxs-lookup"><span data-stu-id="e842d-130">This example is from the Ordering State Machine SDK sample, from the Mainform.cs file.</span></span>  <span data-ttu-id="e842d-131">Weitere Informationen finden Sie unter dem [Beispiel zum Anordnen des Zustands Automaten](https://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span><span class="sxs-lookup"><span data-stu-id="e842d-131">For more information, see the [Ordering State Machine Sample](https://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span></span>  
  
 [!code-csharp[WF_Samples#89](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#89)]
 [!code-vb[WF_Samples#89](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#89)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e842d-132">Die Workflowruntime-Engine wird nicht ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="e842d-132">The workflow runtime engine is not running.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnqueueItem">
      <MemberSignature Language="C#" Value="public void EnqueueItem (IComparable queueName, object item, System.Workflow.Runtime.IPendingWork pendingWork, object workItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnqueueItem(class System.IComparable queueName, object item, class System.Workflow.Runtime.IPendingWork pendingWork, object workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnqueueItem (queueName As IComparable, item As Object, pendingWork As IPendingWork, workItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnqueueItem(IComparable ^ queueName, System::Object ^ item, System::Workflow::Runtime::IPendingWork ^ pendingWork, System::Object ^ workItem);" />
      <MemberSignature Language="F#" Value="member this.EnqueueItem : IComparable * obj * System.Workflow.Runtime.IPendingWork * obj -&gt; unit" Usage="workflowInstance.EnqueueItem (queueName, item, pendingWork, workItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="pendingWork" Type="System.Workflow.Runtime.IPendingWork" />
        <Parameter Name="workItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="queueName"><span data-ttu-id="e842d-133">Der Name des <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span><span class="sxs-lookup"><span data-stu-id="e842d-133">The name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></param>
        <param name="item"><span data-ttu-id="e842d-134">Das in die Warteschlange einzureihende Objekt.</span><span class="sxs-lookup"><span data-stu-id="e842d-134">The object to enqueue.</span></span></param>
        <param name="pendingWork"><span data-ttu-id="e842d-135"><see cref="T:System.Workflow.Runtime.IPendingWork" /> ermöglicht die Benachrichtigung des Absenders, wenn <paramref name="item" /> zugestellt wird.</span><span class="sxs-lookup"><span data-stu-id="e842d-135">An <see cref="T:System.Workflow.Runtime.IPendingWork" /> that allows the sender to be notified when <paramref name="item" /> is delivered.</span></span></param>
        <param name="workItem"><span data-ttu-id="e842d-136">Ein an die <see cref="T:System.Workflow.Runtime.IPendingWork" />-Methoden zu übergebendes Objekt.</span><span class="sxs-lookup"><span data-stu-id="e842d-136">An object to be passed to the <see cref="T:System.Workflow.Runtime.IPendingWork" /> methods.</span></span></param>
        <summary><span data-ttu-id="e842d-137">Sendet synchron eine Meldung an die angegebene Workflowwarteschlange.</span><span class="sxs-lookup"><span data-stu-id="e842d-137">Posts a message to the specified workflow queue synchronously.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e842d-138">Sendet das `item` an die angegebene <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="e842d-138">Sends the `item` to the specified <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="e842d-139">Wenn Sie benachrichtigt werden möchten, sobald die Meldung zugestellt wird, können Sie <xref:System.Workflow.Runtime.IPendingWork> in Ihrem Dienst implementieren und ein `workItem` und ein <xref:System.Workflow.Runtime.IPendingWork>-Objekt an <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> übergeben.</span><span class="sxs-lookup"><span data-stu-id="e842d-139">If you want to be notified when the message is delivered, you can implement <xref:System.Workflow.Runtime.IPendingWork> in your service and pass a `workItem` and an <xref:System.Workflow.Runtime.IPendingWork> object to <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span></span> <span data-ttu-id="e842d-140">Wenn Sie diese Benachrichtigung nicht verwenden möchten, können Sie einen NULL-Verweis (`Nothing` in Visual Basic) für `pendingWork` und `workItem` übergeben.</span><span class="sxs-lookup"><span data-stu-id="e842d-140">If you do not want such notification, you can pass a null reference (`Nothing` in Visual Basic) for `pendingWork` and `workItem`.</span></span>  
  
 <span data-ttu-id="e842d-141">Wenn Sie diese Methode mit einem Zustandsautomatworkflow verwenden, wird möglicherweise eine Ausnahme mit der Meldung{0}"die Warteschlange ' ist nicht aktiviert" angezeigt.</span><span class="sxs-lookup"><span data-stu-id="e842d-141">When using this method with a state machine workflow, you might get an exception with the message "Queue '{0}' is not enabled."</span></span> <span data-ttu-id="e842d-142">Dies ist der Fall, wenn der aktuelle Zustand des Statuscomputers nicht über die zur Behandlung eines bestimmten Ereignisses erforderlichen Informationen verfügt.</span><span class="sxs-lookup"><span data-stu-id="e842d-142">This happens when the current state of the state machine does not know how to handle a specific event.</span></span> <span data-ttu-id="e842d-143">Beispiel: Ein Zustand, der nicht mit dem aktuellen Zustand übereinstimmt, beinhaltet die <xref:System.Workflow.Activities.EventDrivenActivity>, die die von der Warteschlange '{0}' dargestellte <xref:System.Workflow.Activities.HandleExternalEventActivity> beinhaltet.</span><span class="sxs-lookup"><span data-stu-id="e842d-143">For example, when some state other than the current state contains the <xref:System.Workflow.Activities.EventDrivenActivity> that contains the <xref:System.Workflow.Activities.HandleExternalEventActivity> that is represented by the queue '{0}'.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e842d-144">Für Meldungen wird nicht garantiert, dass sie von der Workflowinstanz in der Reihenfolge empfangen werden, in der sie gesendet wurden.</span><span class="sxs-lookup"><span data-stu-id="e842d-144">Messages are not guaranteed to be received by the workflow instance in the order that they were sent.</span></span> <span data-ttu-id="e842d-145">Wenn der Empfang einer Meldung in einer vorhandenen Warteschlange (Warteschlange A) z.&#160;B. dazu führt, dass eine weitere Warteschlange (Warteschlange B) erstellt wird, die nach der ersten Meldung auf eine weitere Meldung wartet, trifft die zweite Meldung ggf. zuerst ein und wird nicht empfangen, weil die dazugehörige Warteschlange noch nicht erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="e842d-145">For example, if receiving a message in an existing queue (Queue A) causes a workflow to create another queue (Queue B), which then listens for another message sent after the first message, it is possible that the second message will arrive first, and will not be received due to its queue not being created yet.</span></span> <span data-ttu-id="e842d-146">Um dies zu verhindern, sollte die zweite Meldung nicht gesendet werden, bevor das Vorhandensein der zweiten Warteschlange sichergestellt ist (mithilfe von <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A>.)</span><span class="sxs-lookup"><span data-stu-id="e842d-146">To prevent this issue, the second message should not be sent until the presence of the second queue is verified (using <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A>.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e842d-147">Das folgende Codebeispiel zeigt die Verwendung von <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="e842d-147">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span></span> <span data-ttu-id="e842d-148">Wenn das <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled>-Ereignis eintritt, wird die in diesem Beispiel definierte `OnWorkflowIdled`-Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="e842d-148">When the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event occurs, the `OnWorkflowIdled` method defined in this example is called.</span></span> <span data-ttu-id="e842d-149">Sie bestimmt, welcher Workflow mithilfe der <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A>-Eigenschaft in den Leerlauf versetzt wird, und ruft anschließend eine Auflistung mit in der Warteschlange befindlichen Elementen für den Workflow ab, indem die <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A>-Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="e842d-149">It determines which workflow is idled using the <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> property and then gets a collection of queued items for the workflow instance by calling the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> method.</span></span> <span data-ttu-id="e842d-150">Der Code durchläuft die Auflistung, um zu ermitteln, welche Aktivität auf das Ereignis wartet, das den Workflow in den Leerlauf versetzt hat.</span><span class="sxs-lookup"><span data-stu-id="e842d-150">The code iterates over the collection to determine which activity is waiting for the event that idled the workflow.</span></span> <span data-ttu-id="e842d-151">Anschließend sendet er eine Ausnahme an die Workflowwarteschlange, indem er die <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>-Methode zusammen mit dem Namen des Ereigniswarteschlangenelements verwendet.</span><span class="sxs-lookup"><span data-stu-id="e842d-151">It then sends an exception to the workflow queue using the <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> method along with the name of the event queue item.</span></span>  
  
 <span data-ttu-id="e842d-152">Dieses Codebeispiel ist Teil des Canceling a Workflow SDK-Beispiels in der Datei Program.cs.</span><span class="sxs-lookup"><span data-stu-id="e842d-152">This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</span></span> <span data-ttu-id="e842d-153">Weitere Informationen finden Sie unter [Abbrechen eines Workflows](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span><span class="sxs-lookup"><span data-stu-id="e842d-153">For more information, see [Canceling a Workflow](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span></span>  
  
 [!code-csharp[WF_Samples#261](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#261)]
 [!code-vb[WF_Samples#261](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#261)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e842d-154"><paramref name="queueName" /> ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="e842d-154"><paramref name="queueName" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e842d-155">Die Workflowruntime-Engine wird nicht ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="e842d-155">The workflow runtime engine is not running.</span></span>  
  
<span data-ttu-id="e842d-156">- oder -</span><span class="sxs-lookup"><span data-stu-id="e842d-156">-or-</span></span> 
<span data-ttu-id="e842d-157">Die <see cref="T:System.Workflow.Runtime.WorkflowQueue" />, die unter <paramref name="queueName" /> angegeben ist, ist nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="e842d-157">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specified by <paramref name="queueName" /> does not exist.</span></span>  
  
<span data-ttu-id="e842d-158">- oder -</span><span class="sxs-lookup"><span data-stu-id="e842d-158">-or-</span></span> 
<span data-ttu-id="e842d-159">Die <see cref="T:System.Workflow.Runtime.WorkflowQueue" />, die unter <paramref name="queueName" /> angegeben ist, ist nicht aktiviert.</span><span class="sxs-lookup"><span data-stu-id="e842d-159">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specified by <paramref name="queueName" /> is not enabled.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742169(v=vs.90)"><span data-ttu-id="e842d-160">Abbrechen eines Workflows</span><span class="sxs-lookup"><span data-stu-id="e842d-160">Canceling a Workflow</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnqueueItemOnIdle">
      <MemberSignature Language="C#" Value="public void EnqueueItemOnIdle (IComparable queueName, object item, System.Workflow.Runtime.IPendingWork pendingWork, object workItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnqueueItemOnIdle(class System.IComparable queueName, object item, class System.Workflow.Runtime.IPendingWork pendingWork, object workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnqueueItemOnIdle (queueName As IComparable, item As Object, pendingWork As IPendingWork, workItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnqueueItemOnIdle(IComparable ^ queueName, System::Object ^ item, System::Workflow::Runtime::IPendingWork ^ pendingWork, System::Object ^ workItem);" />
      <MemberSignature Language="F#" Value="member this.EnqueueItemOnIdle : IComparable * obj * System.Workflow.Runtime.IPendingWork * obj -&gt; unit" Usage="workflowInstance.EnqueueItemOnIdle (queueName, item, pendingWork, workItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueName" Type="System.IComparable" />
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="pendingWork" Type="System.Workflow.Runtime.IPendingWork" />
        <Parameter Name="workItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="queueName"><span data-ttu-id="e842d-161">Der Name des <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span><span class="sxs-lookup"><span data-stu-id="e842d-161">The name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" />.</span></span></param>
        <param name="item"><span data-ttu-id="e842d-162">Das in die Warteschlange einzureihende Objekt.</span><span class="sxs-lookup"><span data-stu-id="e842d-162">The object to enqueue.</span></span></param>
        <param name="pendingWork"><span data-ttu-id="e842d-163"><see cref="T:System.Workflow.Runtime.IPendingWork" /> ermöglicht die Benachrichtigung des Absenders, wenn <paramref name="item" /> zugestellt wird.</span><span class="sxs-lookup"><span data-stu-id="e842d-163">An <see cref="T:System.Workflow.Runtime.IPendingWork" /> that allows the sender to be notified when <paramref name="item" /> is delivered.</span></span></param>
        <param name="workItem"><span data-ttu-id="e842d-164">Ein an die <see cref="T:System.Workflow.Runtime.IPendingWork" />-Methoden zu übergebendes Objekt.</span><span class="sxs-lookup"><span data-stu-id="e842d-164">An object to be passed to the <see cref="T:System.Workflow.Runtime.IPendingWork" /> methods.</span></span></param>
        <summary><span data-ttu-id="e842d-165">Sendet eine Meldung an die angegebene Workflowwarteschlange, wenn sich der Workflow im Leerlauf befindet.</span><span class="sxs-lookup"><span data-stu-id="e842d-165">Posts a message to the specified workflow queue when the workflow is idle.</span></span> <span data-ttu-id="e842d-166"><see cref="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" /> wartet, bis der Workflow einen Leerlaufpunkt erreicht, und wird eingereiht, nachdem sichergestellt ist, dass sich der Workflowplaner im Leerlauf befindet (also wenn kein aktiver Vorgang ausgeführt wird).</span><span class="sxs-lookup"><span data-stu-id="e842d-166"><see cref="M:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)" /> waits until the workflow reaches an idle point and enqueues after verifying that the workflow scheduler is idle (that is, no active operation is being executed).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e842d-167">Wartet, bis sich die Workflowinstanz im Leerlauf befindet, und sendet `item` dann an die angegebene <xref:System.Workflow.Runtime.WorkflowQueue>.</span><span class="sxs-lookup"><span data-stu-id="e842d-167">Waits for the workflow instance to become idle and then sends the `item` to the specified <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span> <span data-ttu-id="e842d-168">Wenn Sie <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle%2A> aufrufen, während die Workflowinstanz unterbrochen wird, löst die Workflowruntime-Engine eine <xref:System.InvalidOperationException> aus.</span><span class="sxs-lookup"><span data-stu-id="e842d-168">If you call <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle%2A> while the workflow instance is suspended, the workflow runtime engine will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="e842d-169">Wenn Sie benachrichtigt werden möchten, sobald die Meldung zugestellt wird, können Sie <xref:System.Workflow.Runtime.IPendingWork> in Ihrem Dienst implementieren und ein `workItem` und ein <xref:System.Workflow.Runtime.IPendingWork>-Objekt an <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> übergeben.</span><span class="sxs-lookup"><span data-stu-id="e842d-169">If you want to be notified when the message is delivered, you can implement <xref:System.Workflow.Runtime.IPendingWork> in your service and pass a `workItem` and an <xref:System.Workflow.Runtime.IPendingWork> object to <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span></span> <span data-ttu-id="e842d-170">Wenn Sie diese Benachrichtigung nicht verwenden möchten, können Sie einen NULL-Verweis (`Nothing` in Visual Basic) für `pendingWork` und `workItem` übergeben.</span><span class="sxs-lookup"><span data-stu-id="e842d-170">If you do not want such notification, you can pass a null reference (`Nothing` in Visual Basic) for `pendingWork` and `workItem`.</span></span>  
  
 <span data-ttu-id="e842d-171">Wenn Sie diese Methode mit einem Zustandsautomatworkflow verwenden, erhalten Sie möglicherweise eine Ausnahme, die die Meldung enthält{0}, dass die Warteschlange ' ' nicht aktiviert ist. "</span><span class="sxs-lookup"><span data-stu-id="e842d-171">When you are using this method with a state machine workflow, you might get an exception that contains the message "Queue '{0}' is not enabled."</span></span> <span data-ttu-id="e842d-172">Dies ist der Fall, wenn der aktuelle Zustand des Statuscomputers nicht über die zur Behandlung eines bestimmten Ereignisses erforderlichen Informationen verfügt.</span><span class="sxs-lookup"><span data-stu-id="e842d-172">This occurs when the current state of the state machine does not know how to handle a specific event.</span></span> <span data-ttu-id="e842d-173">Beispiel: Ein Zustand, der nicht mit dem aktuellen Zustand übereinstimmt, beinhaltet die <xref:System.Workflow.Activities.EventDrivenActivity>, die die von der Warteschlange '{0}' dargestellte <xref:System.Workflow.Activities.HandleExternalEventActivity> beinhaltet.</span><span class="sxs-lookup"><span data-stu-id="e842d-173">For example, when some state other than the current state contains the <xref:System.Workflow.Activities.EventDrivenActivity> that contains the <xref:System.Workflow.Activities.HandleExternalEventActivity> that is represented by the queue '{0}'.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e842d-174">Das folgende Beispiel zeigt, wie Sie Informationen an eine Workflowinstanz senden, indem Sie die `EnqueueItemOnIdle`-Methode verwenden.</span><span class="sxs-lookup"><span data-stu-id="e842d-174">The following example demonstrates sending information to a workflow instance using the `EnqueueItemOnIdle` method.</span></span> <span data-ttu-id="e842d-175">Zuerst wird ein WorkflowInstance-Objekt erstellt und gestartet. Als Nächstes wird ein Objekt erstellt, das die <xref:System.Workflow.Runtime.IPendingWork>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="e842d-175">First, a WorkflowInstance object is created and started; next, an object that implements the <xref:System.Workflow.Runtime.IPendingWork> interface is created.</span></span> <span data-ttu-id="e842d-176">`EnqueueItemOnIdle` wird anschließend aufgerufen. Dabei werden Zeichenfolgenwerte für den Warteschlangenamen, das eingereihte Element und die Arbeitsaufgabe übergeben, die an die Methoden des pendingWork-Objekts übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="e842d-176">`EnqueueItemOnIdle` is then called, passing in string values for the queue name, the enqueued item, and the work item to be passed to the methods of the pendingWork object.</span></span>  
  
 [!code-csharp[WF_Samples#12](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#12)]
 [!code-vb[WF_Samples#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e842d-177"><paramref name="queueName" /> ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="e842d-177"><paramref name="queueName" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e842d-178">Die Workflowruntime-Engine wird nicht ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="e842d-178">The workflow runtime engine is not running.</span></span>  
  
<span data-ttu-id="e842d-179">- oder -</span><span class="sxs-lookup"><span data-stu-id="e842d-179">-or-</span></span> 
<span data-ttu-id="e842d-180">Die Workflowinstanz wurde unterbrochen.</span><span class="sxs-lookup"><span data-stu-id="e842d-180">The workflow instance is suspended.</span></span>  
  
<span data-ttu-id="e842d-181">- oder -</span><span class="sxs-lookup"><span data-stu-id="e842d-181">-or-</span></span> 
<span data-ttu-id="e842d-182">Die <see cref="T:System.Workflow.Runtime.WorkflowQueue" />, die unter <paramref name="queueName" /> angegeben ist, ist nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="e842d-182">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specified by <paramref name="queueName" /> does not exist.</span></span>  
  
<span data-ttu-id="e842d-183">- oder -</span><span class="sxs-lookup"><span data-stu-id="e842d-183">-or-</span></span> 
<span data-ttu-id="e842d-184">Die <see cref="T:System.Workflow.Runtime.WorkflowQueue" />, die unter <paramref name="queueName" /> angegeben ist, ist nicht aktiviert.</span><span class="sxs-lookup"><span data-stu-id="e842d-184">The <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> specified by <paramref name="queueName" /> is not enabled.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="workflowInstance.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="e842d-185">Das zu vergleichende Objekt.</span><span class="sxs-lookup"><span data-stu-id="e842d-185">The object to compare.</span></span></param>
        <summary><span data-ttu-id="e842d-186">Gibt einen Wert zurück, der angibt, ob das angegebene Objekt der <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="e842d-186">Returns a value that indicates whether the specified object is equal to the <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span></span></summary>
        <returns><span data-ttu-id="e842d-187"><see langword="true" />, wenn das angegebene Objekt der <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> entspricht, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e842d-187"><see langword="true" /> if the specified object is equal to this <see cref="T:System.Workflow.Runtime.WorkflowInstance" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e842d-188">Bei dem Objekt muss es sich um eine Instanz der <xref:System.Workflow.Runtime.WorkflowInstance>-Klasse handeln, die dieselbe <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> wie diese <xref:System.Workflow.Runtime.WorkflowInstance> hat.</span><span class="sxs-lookup"><span data-stu-id="e842d-188">The object must be an instance of the <xref:System.Workflow.Runtime.WorkflowInstance> class and have the same <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> as this <xref:System.Workflow.Runtime.WorkflowInstance>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="workflowInstance.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e842d-189">Gibt den Hashcode für diese Workflowinstanz zurück.</span><span class="sxs-lookup"><span data-stu-id="e842d-189">Returns the hash code for this workflow instance.</span></span></summary>
        <returns><span data-ttu-id="e842d-190">Der Hashcode für diese <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span><span class="sxs-lookup"><span data-stu-id="e842d-190">The hash code for this <see cref="T:System.Workflow.Runtime.WorkflowInstance" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e842d-191"><xref:System.Workflow.Runtime.WorkflowInstance.GetHashCode%2A> gibt auf Grundlage des Werts von <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> einen Hashcode zurück.</span><span class="sxs-lookup"><span data-stu-id="e842d-191"><xref:System.Workflow.Runtime.WorkflowInstance.GetHashCode%2A> returns a hash code based on the value of <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowDefinition">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Activity GetWorkflowDefinition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.ComponentModel.Activity GetWorkflowDefinition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowDefinition () As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::ComponentModel::Activity ^ GetWorkflowDefinition();" />
      <MemberSignature Language="F#" Value="member this.GetWorkflowDefinition : unit -&gt; System.Workflow.ComponentModel.Activity" Usage="workflowInstance.GetWorkflowDefinition " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e842d-192">Ruft die Stammaktivität für diese Workflowinstanz ab.</span><span class="sxs-lookup"><span data-stu-id="e842d-192">Retrieves the root activity for this workflow instance.</span></span></summary>
        <returns><span data-ttu-id="e842d-193">Ein <see cref="T:System.Workflow.ComponentModel.Activity" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="e842d-193">An <see cref="T:System.Workflow.ComponentModel.Activity" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e842d-194">Sie können die Stammaktivität verwenden, um in der Aktivitätshierarchie des Workflows zu navigieren.</span><span class="sxs-lookup"><span data-stu-id="e842d-194">You can use the root activity to navigate the activity hierarchy of the workflow.</span></span>  
  
 <span data-ttu-id="e842d-195">Diese Methode ist nicht threadsicher. Aus diesem Grund muss der Host seine Aufrufe dieser Methode synchronisieren.</span><span class="sxs-lookup"><span data-stu-id="e842d-195">This method is not thread safe, so the host should synchronize its calls to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e842d-196">Das folgende Beispiel zeigt das Abrufen der Workflowdefinition aus einer Workflowinstanz.</span><span class="sxs-lookup"><span data-stu-id="e842d-196">The following example demonstrates retrieving the workflow definition from a workflow instance.</span></span>  <span data-ttu-id="e842d-197">Dieses Beispiel stammt aus dem Ordering State Machine SDK-Beispiel in der Datei Mainform.cs.</span><span class="sxs-lookup"><span data-stu-id="e842d-197">This example is from the Ordering State Machine SDK sample, from the Mainform.cs file.</span></span>  <span data-ttu-id="e842d-198">Weitere Informationen finden Sie unter dem [Beispiel zum Anordnen des Zustands Automaten](https://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span><span class="sxs-lookup"><span data-stu-id="e842d-198">For more information, see the [Ordering State Machine Sample](https://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span></span>  
  
 [!code-csharp[WF_Samples#86](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#86)]
 [!code-vb[WF_Samples#86](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#86)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowNextTimerExpiration">
      <MemberSignature Language="C#" Value="public DateTime GetWorkflowNextTimerExpiration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime GetWorkflowNextTimerExpiration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowNextTimerExpiration () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime GetWorkflowNextTimerExpiration();" />
      <MemberSignature Language="F#" Value="member this.GetWorkflowNextTimerExpiration : unit -&gt; DateTime" Usage="workflowInstance.GetWorkflowNextTimerExpiration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e842d-199">Gibt den nächsten Zeitpunkt zurück, für den geplant ist, dass diese <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> eine Timermeldung erhält.</span><span class="sxs-lookup"><span data-stu-id="e842d-199">Returns the next point in time that this <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> is scheduled to be delivered a timer message.</span></span></summary>
        <returns><span data-ttu-id="e842d-200">Ein DateTime-Wert, der für den nächsten <see cref="P:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt" />-Zeitpunkt steht, zu dem diese <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> eine Timermeldung erhält.</span><span class="sxs-lookup"><span data-stu-id="e842d-200">A DateTime value that represents the next <see cref="P:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt" /> time this <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> will be delivered a timer message.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e842d-201">Das folgende Beispiel zeigt, wie Sie die <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration%2A>-Methode verwenden, um zu bestimmen, ob weitere Workflowtimermeldungen eingereiht werden sollen.</span><span class="sxs-lookup"><span data-stu-id="e842d-201">The following example demonstrates using the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowNextTimerExpiration%2A> method to determine if more workflow timer messages are enqueued.</span></span> <span data-ttu-id="e842d-202">Dieses Beispiel stammt aus dem WorkflowThreading SDK-Beispiel in der Datei Program.cs.</span><span class="sxs-lookup"><span data-stu-id="e842d-202">This example is from the WorkflowThreading SDK sample, from the Program.cs file.</span></span> <span data-ttu-id="e842d-203">Weitere Informationen finden Sie unter [Beispiel für Workflow Threading](https://msdn.microsoft.com/library/5b650be7-09fa-47db-a2f6-523dc8ea5ee9).</span><span class="sxs-lookup"><span data-stu-id="e842d-203">For more information, see [Workflow Threading Sample](https://msdn.microsoft.com/library/5b650be7-09fa-47db-a2f6-523dc8ea5ee9).</span></span>  
  
 [!code-csharp[WF_Samples#284](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#284)]
 [!code-vb[WF_Samples#284](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#284)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Workflow.Runtime.TimerEventSubscription" />
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowQueueData">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowQueueInfo&gt; GetWorkflowQueueData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.Runtime.WorkflowQueueInfo&gt; GetWorkflowQueueData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowQueueData () As ReadOnlyCollection(Of WorkflowQueueInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::Runtime::WorkflowQueueInfo ^&gt; ^ GetWorkflowQueueData();" />
      <MemberSignature Language="F#" Value="member this.GetWorkflowQueueData : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowQueueInfo&gt;" Usage="workflowInstance.GetWorkflowQueueData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowQueueInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e842d-204">Ruft eine Auflistung von <see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" />-Objekten ab, die die anstehenden Elemente und abonnierten Aktivitäten für die Workflowwarteschlangen enthält, die dieser Workflowinstanz zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="e842d-204">Gets a collection of <see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /> objects that contains the pending items and subscribed activities for the workflow queues associated with this workflow instance.</span></span></summary>
        <returns><span data-ttu-id="e842d-205">Eine <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> von <see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" />-Objekten.</span><span class="sxs-lookup"><span data-stu-id="e842d-205">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Workflow.Runtime.WorkflowQueueInfo" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e842d-206"><xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> gibt eine Auflistung von <xref:System.Workflow.Runtime.WorkflowQueueInfo>-Objekten zurück, die Informationen über den Status der Workflowwarteschlangen enthält, die dieser Workflowinstanz zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="e842d-206"><xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> returns a collection of <xref:System.Workflow.Runtime.WorkflowQueueInfo> objects, each of which contains information about the state of one of the workflow queues associated with this workflow instance.</span></span> <span data-ttu-id="e842d-207"><xref:System.Workflow.Runtime.WorkflowQueueInfo.Items%2A?displayProperty=nameWithType> enthält die anstehenden Elemente für <xref:System.Workflow.Runtime.WorkflowQueue> und <xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType>  enthält eine Liste der Aktivitäten, die für die Elementzustellung in einer <xref:System.Workflow.Runtime.WorkflowQueue> abonniert wurden.</span><span class="sxs-lookup"><span data-stu-id="e842d-207"><xref:System.Workflow.Runtime.WorkflowQueueInfo.Items%2A?displayProperty=nameWithType> contains the pending items for a <xref:System.Workflow.Runtime.WorkflowQueue> and <xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=nameWithType> contains a list of the activities that are subscribed for item delivery on a <xref:System.Workflow.Runtime.WorkflowQueue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e842d-208">Das folgende Codebeispiel zeigt, wie Sie mithilfe der <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A>-Methode Informationen zum Zustand aller Workflowwarteschlangen erhalten können, die einem <xref:System.Workflow.Runtime.WorkflowInstance>-Objekt zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="e842d-208">The following code example demonstrates how you can use the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> method to obtain information about the state of all workflow queues associated with a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span> <span data-ttu-id="e842d-209">Wenn das <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled>-Ereignis eintritt, wird die in diesem Beispiel definierte `OnWorkflowIdled`-Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="e842d-209">When the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event occurs, the `OnWorkflowIdled` method defined in this example is called.</span></span> <span data-ttu-id="e842d-210">Sie bestimmt, welcher Workflow mithilfe der <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A>-Eigenschaft in den Leerlauf versetzt wird, und ruft anschließend eine Auflistung mit in der Warteschlange befindlichen Elementen für den Workflow ab, indem die <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A>-Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="e842d-210">It determines which workflow is idled using the <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> property and then gets a collection of queued items for the workflow instance by calling the <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A> method.</span></span> <span data-ttu-id="e842d-211">Der Code durchläuft die Auflistung, um zu ermitteln, welche Aktivität auf das Ereignis wartet, das den Workflow in den Leerlauf versetzt hat.</span><span class="sxs-lookup"><span data-stu-id="e842d-211">The code iterates over the collection to determine which activity is waiting for the event that idled the workflow.</span></span> <span data-ttu-id="e842d-212">Anschließend sendet er eine Ausnahme an die Workflowwarteschlange, indem er die <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>-Methode zusammen mit dem Namen des Ereigniswarteschlangenelements verwendet.</span><span class="sxs-lookup"><span data-stu-id="e842d-212">It then sends an exception to the workflow queue using the <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> method along with the name of the event queue item.</span></span>  
  
 <span data-ttu-id="e842d-213">Dieses Codebeispiel ist Teil des Canceling a Workflow SDK-Beispiels in der Datei Program.cs.</span><span class="sxs-lookup"><span data-stu-id="e842d-213">This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</span></span> <span data-ttu-id="e842d-214">Weitere Informationen finden Sie unter [Abbrechen eines Workflows](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span><span class="sxs-lookup"><span data-stu-id="e842d-214">For more information, see [Canceling a Workflow](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span></span>  
  
 [!code-csharp[WF_Samples#261](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#261)]
 [!code-vb[WF_Samples#261](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#261)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e842d-215">Die Workflowruntime-Engine wird nicht ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="e842d-215">The workflow runtime engine is not running.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742169(v=vs.90)"><span data-ttu-id="e842d-216">Abbrechen eines Workflows</span><span class="sxs-lookup"><span data-stu-id="e842d-216">Canceling a Workflow</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InstanceId">
      <MemberSignature Language="C#" Value="public Guid InstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid InstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowInstance.InstanceId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid InstanceId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.InstanceId : Guid" Usage="System.Workflow.Runtime.WorkflowInstance.InstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e842d-217">Ruft den eindeutigen Bezeichner der Workflowinstanz ab.</span><span class="sxs-lookup"><span data-stu-id="e842d-217">Gets the unique identifier for the workflow instance.</span></span></summary>
        <value><span data-ttu-id="e842d-218"><see cref="T:System.Guid" /> der Workflowinstanz.</span><span class="sxs-lookup"><span data-stu-id="e842d-218">The <see cref="T:System.Guid" /> of the workflow instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e842d-219">Sie können die <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> verwenden, um auf die Workflowinstanz zu verweisen.</span><span class="sxs-lookup"><span data-stu-id="e842d-219">You can use <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> to reference the workflow instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e842d-220">Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A>-Eigenschaft verwenden können, um Informationen zu einem <xref:System.Workflow.Runtime.WorkflowInstance>-Objekt zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="e842d-220">The following code example demonstrates how you can use the <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> property to obtain information about a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span> <span data-ttu-id="e842d-221">Der erste Codeausschnitt erstellt eine <xref:System.Workflow.Runtime.WorkflowInstance>-Variable mit dem Namen `instanceId`.</span><span class="sxs-lookup"><span data-stu-id="e842d-221">The first code snippet creates a <xref:System.Workflow.Runtime.WorkflowInstance> variable named `instanceId`.</span></span>  
  
 [!code-csharp[WF_Samples#210](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#210)]
 [!code-vb[WF_Samples#210](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#210)]  
  
 <span data-ttu-id="e842d-222">Der zweite Codeausschnitt verwendet die <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A>-Eigenschaft als erstes Objekt in einem `OrderEventArgs`-Konstruktoraufruf, wenn die `CallBackForApproval`-Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="e842d-222">The second snippet uses the <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> property as the first object in an `OrderEventArgs` constructor call when the `CallBackForApproval` method is called.</span></span>  
  
 <span data-ttu-id="e842d-223">Dieses Codebeispiel ist Teil des Listen SDK-Beispiels in der Datei OrderServiceImple.cs.</span><span class="sxs-lookup"><span data-stu-id="e842d-223">This code example is part of the Listen SDK Sample from the OrderServiceImple.cs file.</span></span> <span data-ttu-id="e842d-224">Weitere Informationen finden Sie unter Abhör [Beispiel](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span><span class="sxs-lookup"><span data-stu-id="e842d-224">For more information, see [Listen Sample](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span></span>  
  
 [!code-csharp[WF_Samples#211](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#211)]
 [!code-vb[WF_Samples#211](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#211)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)"><span data-ttu-id="e842d-225">Lauschbeispiel</span><span class="sxs-lookup"><span data-stu-id="e842d-225">Listen Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Load" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load();" />
      <MemberSignature Language="F#" Value="member this.Load : unit -&gt; unit" Usage="workflowInstance.Load " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e842d-226">Lädt eine vorher entladene Workflowinstanz.</span><span class="sxs-lookup"><span data-stu-id="e842d-226">Loads a previously unloaded workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e842d-227"><xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> ist synchron. Wenn die Workflowinstanz geladen werden kann, wird <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> zurückgegeben, nachdem die Workflowinstanz in den Arbeitsspeicher geladen und von der Workflowruntime-Engine geplant wurde.</span><span class="sxs-lookup"><span data-stu-id="e842d-227"><xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> is synchronous; if the workflow instance can be loaded, <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> will return after the workflow instance has been loaded into memory and scheduled by the workflow runtime engine.</span></span> <span data-ttu-id="e842d-228">Die Laufzeit löst das <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded>-Ereignis aus, nachdem der Persistenzdienst die Workflowinstanz im Arbeitsspeicher wiederhergestellt hat, aber bevor die Workflowruntime-Engine die Instanz plant.</span><span class="sxs-lookup"><span data-stu-id="e842d-228">The runtime raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> event after the persistence service has restored the workflow instance in memory, but before the workflow runtime engine schedules the instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e842d-229">Das folgende Beispiel zeigt, wie ein vorher entladenes <xref:System.Workflow.Runtime.WorkflowInstance>-Objekt geladen wird.</span><span class="sxs-lookup"><span data-stu-id="e842d-229">The following example demonstrates how to load a previously unloaded <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#10](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#10)]
 [!code-vb[WF_Samples#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e842d-230">Die Workflowruntime-Engine wird nicht ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="e842d-230">The workflow runtime engine is not running.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReloadTrackingProfiles">
      <MemberSignature Language="C#" Value="public void ReloadTrackingProfiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReloadTrackingProfiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReloadTrackingProfiles ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReloadTrackingProfiles();" />
      <MemberSignature Language="F#" Value="member this.ReloadTrackingProfiles : unit -&gt; unit" Usage="workflowInstance.ReloadTrackingProfiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e842d-231">Laden Sie die Verfolgungsprofile für diese Workflowinstanz neu.</span><span class="sxs-lookup"><span data-stu-id="e842d-231">Reload the tracking profiles for this workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e842d-232">Die Laufzeitverfolgungsinfrastruktur lädt jedes <xref:System.Workflow.Runtime.Tracking.TrackingProfile> für diese Workflowinstanz neu, das ihren Verfolgungskanälen zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="e842d-232">The runtime tracking infrastructure will reload each <xref:System.Workflow.Runtime.Tracking.TrackingProfile> for this workflow instance associated with its tracking channels.</span></span> <span data-ttu-id="e842d-233">Wenn er sich nicht bereits im unterbrochenen Zustand befindet, wird der Workflow von der Laufzeitverfolgungsinfrastruktur vorübergehend unterbrochen, während die Verfolgungsprofile neu geladen werden.</span><span class="sxs-lookup"><span data-stu-id="e842d-233">If it is not already in a suspended state, the workflow is temporarily suspended by the runtime tracking infrastructure while the tracking profiles are reloaded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e842d-234">Die Workflowruntime-Engine wird nicht ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="e842d-234">The workflow runtime engine is not running.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="workflowInstance.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e842d-235">Setzt die Ausführung einer vorher unterbrochenen Workflowinstanz fort.</span><span class="sxs-lookup"><span data-stu-id="e842d-235">Resumes execution of a previously suspended workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e842d-236">Der Host kann <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A> aufrufen, um die Ausführung einer Workflowinstanz fortzusetzen, die vorher unterbrochen wurde.</span><span class="sxs-lookup"><span data-stu-id="e842d-236">The host can call <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A> to resume execution of a workflow instance that has been previously suspended.</span></span> <span data-ttu-id="e842d-237">Wenn die Workflowinstanz sich nicht im unterbrochenen Zustand befindet, wird keine Aktion ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="e842d-237">If the workflow instance is not in the suspended state, no action is taken.</span></span> <span data-ttu-id="e842d-238">Die Laufzeit löst nur das <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed>-Ereignis aus, bevor die Ausführung der Workflowinstanz fortgesetzt wird.</span><span class="sxs-lookup"><span data-stu-id="e842d-238">The runtime raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> event just before execution of the workflow instance is resumed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e842d-239">Das folgende Beispiel zeigt den Aufruf zum Fortsetzen einer vorher unterbrochenen Workflowinstanz.</span><span class="sxs-lookup"><span data-stu-id="e842d-239">The following example demonstrates calling Resume on a previously suspended workflow instance.</span></span>  <span data-ttu-id="e842d-240">Dieses Beispiel stammt aus dem Suspend and Terminate SDK-Beispiel.</span><span class="sxs-lookup"><span data-stu-id="e842d-240">This example is from the Suspend and Terminate SDK sample.</span></span>  <span data-ttu-id="e842d-241">Weitere Informationen finden Sie unter [Beispiel zum aussetzen und beenden](https://msdn.microsoft.com/library/f4dffa58-d01e-44fb-b5a1-3b283d2c4517).</span><span class="sxs-lookup"><span data-stu-id="e842d-241">For more information, see [Suspend and Terminate Sample](https://msdn.microsoft.com/library/f4dffa58-d01e-44fb-b5a1-3b283d2c4517).</span></span>  
  
 [!code-csharp[WF_Samples#172](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#172)]
 [!code-vb[WF_Samples#172](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#172)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e842d-242">Die Workflowruntime-Engine wird nicht ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="e842d-242">The workflow runtime engine is not running.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="workflowInstance.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e842d-243">Startet die Ausführung der Workflowinstanz.</span><span class="sxs-lookup"><span data-stu-id="e842d-243">Starts the execution of the workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e842d-244"><xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> ruft <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A> für die Stammaktivität dieser Workflowinstanz auf.</span><span class="sxs-lookup"><span data-stu-id="e842d-244"><xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> calls <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A> on the root activity of this workflow instance.</span></span> <span data-ttu-id="e842d-245">Wenn <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> eine Ausnahme erkennt, wird die Workflowinstanz beendet, indem <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> aufgerufen wird. Dabei wird die <xref:System.Exception.Message%2A>-Eigenschaft der Ausnahme als Grund für die Beendigung übergeben.</span><span class="sxs-lookup"><span data-stu-id="e842d-245">If <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> encounters an exception, it terminates the workflow instance by calling <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> with the <xref:System.Exception.Message%2A> property of the exception passed as the reason for the termination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e842d-246">Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A>-Methode verwenden können, um eine <xref:System.Workflow.Runtime.WorkflowInstance> für einen Workflowhost zu starten.</span><span class="sxs-lookup"><span data-stu-id="e842d-246">The following code example demonstrates how you can use the <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> method to start a <xref:System.Workflow.Runtime.WorkflowInstance> in a workflow host.</span></span> <span data-ttu-id="e842d-247">Der Code erstellt eine <xref:System.Workflow.Runtime.WorkflowRuntime>-Instanz, fügt der Laufzeit Dienste hinzu und zeigt dann die empfohlene Vorgehensweise zum Erstellen eines <xref:System.Workflow.Runtime.WorkflowInstance>-Objekts.</span><span class="sxs-lookup"><span data-stu-id="e842d-247">The code creates an instance of the <xref:System.Workflow.Runtime.WorkflowRuntime>, adds services to the runtime, and then demonstrates the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span> <span data-ttu-id="e842d-248">Er erstellt ein <xref:System.Type>-Objekt und wandelt es in eines der Workflowobjekte um, die dem Host zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="e842d-248">It creates a <xref:System.Type> object and casts it to one of the workflow objects with which the host is associated.</span></span> <span data-ttu-id="e842d-249">Im Code im nächsten Schritt wird die <xref:System.Workflow.Runtime.WorkflowInstance> initialisiert, indem der Code die <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A>-Methode aufruft und den vorher erstellten Typ an sie übergibt.</span><span class="sxs-lookup"><span data-stu-id="e842d-249">The code next initializes <xref:System.Workflow.Runtime.WorkflowInstance> by calling the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method and passing the previously created type to it.</span></span> <span data-ttu-id="e842d-250">Die <xref:System.Workflow.Runtime.WorkflowInstance> wird mit dem <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A>-Methodenaufruf gestartet.</span><span class="sxs-lookup"><span data-stu-id="e842d-250">The <xref:System.Workflow.Runtime.WorkflowInstance> is started with the <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A> method call.</span></span>  
  
 <span data-ttu-id="e842d-251">Dieses Codebeispiel ist Teil des Canceling a Workflow SDK-Beispiels in der Datei Program.cs.</span><span class="sxs-lookup"><span data-stu-id="e842d-251">This code example is part of the Canceling a Workflow SDK sample from the Program.cs file.</span></span> <span data-ttu-id="e842d-252">Weitere Informationen finden Sie unter [Abbrechen eines Workflows](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span><span class="sxs-lookup"><span data-stu-id="e842d-252">For more information, see [Canceling a Workflow](https://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).</span></span>  
  
 [!code-csharp[WF_Samples#260](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#260)]
 [!code-vb[WF_Samples#260](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#260)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e842d-253">Die Workflowruntime-Engine wird nicht ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="e842d-253">The workflow runtime engine is not running.</span></span>  
  
 <span data-ttu-id="e842d-254">- oder - </span><span class="sxs-lookup"><span data-stu-id="e842d-254">-or-</span></span>  
  
 <span data-ttu-id="e842d-255">Die Workflowinstanz wurde bereits gestartet.</span><span class="sxs-lookup"><span data-stu-id="e842d-255">The workflow instance has already been started.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742169(v=vs.90)"><span data-ttu-id="e842d-256">Abbrechen eines Workflows</span><span class="sxs-lookup"><span data-stu-id="e842d-256">Canceling a Workflow</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Suspend">
      <MemberSignature Language="C#" Value="public void Suspend (string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Suspend(string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Suspend(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Suspend (error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Suspend(System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.Suspend : string -&gt; unit" Usage="workflowInstance.Suspend error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="error"><span data-ttu-id="e842d-257">Eine Beschreibung des Grunds für die Unterbrechung der Workflowinstanz.</span><span class="sxs-lookup"><span data-stu-id="e842d-257">A description of the reason for suspending the workflow instance.</span></span></param>
        <summary><span data-ttu-id="e842d-258">Unterbricht die Workflowinstanz.</span><span class="sxs-lookup"><span data-stu-id="e842d-258">Suspends the workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e842d-259">Die Workflowinstanz wird auf synchrone Weise unterbrochen.</span><span class="sxs-lookup"><span data-stu-id="e842d-259">The workflow instance is suspended in a synchronous manner.</span></span> <span data-ttu-id="e842d-260">Wenn die Workflowinstanz bereits unterbrochen wurde, wird keine Aktion ausgeführt. Andernfalls unterbricht die Workflowruntime-Engine die Workflowinstanz, löst das <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended>-Ereignis aus und übergibt `reason` in einem <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs>-Element.</span><span class="sxs-lookup"><span data-stu-id="e842d-260">If the workflow instance is already suspended, no action is taken; otherwise, the workflow runtime engine suspends the workflow instance, raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> event and passes `reason` in a <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e842d-261"><xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A> entlädt die Workflowinstanz nicht.</span><span class="sxs-lookup"><span data-stu-id="e842d-261"><xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A> does not unload the workflow instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e842d-262">Das folgende Codebeispiel zeigt den Aufruf zum Unterbrechen eines <xref:System.Workflow.Runtime.WorkflowInstance>-Objekts.</span><span class="sxs-lookup"><span data-stu-id="e842d-262">The following code example demonstrates calling Suspend on a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#9](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#9)]
 [!code-vb[WF_Samples#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e842d-263">Die Workflowruntime-Engine wird nicht ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="e842d-263">The workflow runtime engine is not running.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Terminate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.Terminate : string -&gt; unit" Usage="workflowInstance.Terminate error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="error"><span data-ttu-id="e842d-264">Eine Beschreibung des Grunds für die Beendigung der Workflowinstanz.</span><span class="sxs-lookup"><span data-stu-id="e842d-264">A description of the reason for terminating the workflow instance.</span></span></param>
        <summary><span data-ttu-id="e842d-265">Beendet die Workflowinstanz auf synchrone Weise.</span><span class="sxs-lookup"><span data-stu-id="e842d-265">Terminates the workflow instance in a synchronous manner.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e842d-266">Die Workflowinstanz wird auf synchrone Weise beendet.</span><span class="sxs-lookup"><span data-stu-id="e842d-266">The workflow instance is terminated in a synchronous manner.</span></span> <span data-ttu-id="e842d-267">Der Host ruft <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> auf, um die Workflowinstanz zu beenden.</span><span class="sxs-lookup"><span data-stu-id="e842d-267">The host calls <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> to terminate the workflow instance.</span></span> <span data-ttu-id="e842d-268">Die Workflowruntime-Engine löscht die Workflowinstanz im Arbeitsspeicher und informiert den Persistenzdienst darüber, dass die Instanz aus dem Arbeitsspeicher gelöscht wurde.</span><span class="sxs-lookup"><span data-stu-id="e842d-268">The workflow runtime engine clears the in-memory workflow instance and informs the persistence service that the instance has been cleared from memory.</span></span> <span data-ttu-id="e842d-269">Für den <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> bedeutet dies, dass alle Zustandsinformationen für diese Workflowinstanz bei der Beendigung aus der Datenbank gelöscht werden.</span><span class="sxs-lookup"><span data-stu-id="e842d-269">For the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>, this means that all state information for that workflow instance is deleted from the database upon termination.</span></span> <span data-ttu-id="e842d-270">Sie können die Workflowinstanz dann nicht mehr von einem vorher gespeicherten Persistenzpunkt neu laden.</span><span class="sxs-lookup"><span data-stu-id="e842d-270">You will not be able to reload the workflow instance from a previously stored persistence point.</span></span>  
  
 <span data-ttu-id="e842d-271">Nachdem die Workflowinstanz im Arbeitsspeicher gelöscht und der Persistenzdienst über die Beendigung informiert wurde, löst die `Terminate`-Methode das <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated>-Ereignis aus und übergibt `reason` in der <xref:System.Exception.Message%2A>-Eigenschaft einer <xref:System.Workflow.ComponentModel.WorkflowTerminatedException>, die in <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs> enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="e842d-271">After the in-memory workflow instance is cleared and the persistence service is informed of the termination, the `Terminate` method raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> event and passes `reason` in the <xref:System.Exception.Message%2A> property of a <xref:System.Workflow.ComponentModel.WorkflowTerminatedException> contained in the <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs>.</span></span>  
  
 <span data-ttu-id="e842d-272">`Terminate` unterscheidet sich von <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A> wie folgt: 'Terminate' löscht die Workflowinstanz im Arbeitsspeicher und informiert den Persistenzdienst über die Beendigung, während `Abort` einfach die Workflowinstanz im Arbeitsspeicher löscht, die Sie dann am letzten Persistenzpunkt neu starten können.</span><span class="sxs-lookup"><span data-stu-id="e842d-272">`Terminate` is different from <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A> in that while Terminate clears the in-memory workflow instance and informs the persistence service of the termination, `Abort` simply clears the in-memory workflow instance, which can then be restarted from the last persistence point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e842d-273">Das folgende Codebeispiel zeigt den Aufruf zum Beenden eines <xref:System.Workflow.Runtime.WorkflowInstance>-Objekts.</span><span class="sxs-lookup"><span data-stu-id="e842d-273">The following code example demonstrates calling Terminate on a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#8](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#8)]
 [!code-vb[WF_Samples#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e842d-274">Die Workflowruntime-Engine wird nicht ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="e842d-274">The workflow runtime engine is not running.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryUnload">
      <MemberSignature Language="C#" Value="public bool TryUnload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryUnload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.TryUnload" />
      <MemberSignature Language="VB.NET" Value="Public Function TryUnload () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryUnload();" />
      <MemberSignature Language="F#" Value="member this.TryUnload : unit -&gt; bool" Usage="workflowInstance.TryUnload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e842d-275">Entlädt die Workflowinstanz aus dem Arbeitsspeicher in den Persistenzspeicher, wenn die Instanz unterbrochen wird oder sich im Leerlauf befindet.</span><span class="sxs-lookup"><span data-stu-id="e842d-275">Unloads the workflow instance from memory to the persistence store when the instance is suspended or idle.</span></span></summary>
        <returns><span data-ttu-id="e842d-276"><see langword="true" />, wenn die Workflowinstanz entladen wurde; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e842d-276"><see langword="true" /> if the workflow instance was unloaded; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e842d-277">Wenn die Workflowinstanz sich im Leerlauf befindet oder unterbrochen wurde, verwendet <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> den Persistenzdienst, um die Workflowinstanz aus dem Arbeitsspeicher zu entfernen und in einem Datenspeicher beizubehalten.</span><span class="sxs-lookup"><span data-stu-id="e842d-277">If the workflow instance is idle or suspended, <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> uses the persistence service to remove the workflow instance from memory and persist it to a data store.</span></span> <span data-ttu-id="e842d-278">Wenn für <xref:System.Workflow.Runtime.WorkflowRuntime> kein Persistenzdienst registriert ist, löst <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> eine <xref:System.InvalidOperationException> aus.</span><span class="sxs-lookup"><span data-stu-id="e842d-278">If there is no persistence service registered with the <xref:System.Workflow.Runtime.WorkflowRuntime>, <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="e842d-279">Wenn die Workflow Instanz erfolgreich beibehalten wird, löst die Laufzeit das <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> -Ereignis aus und `true`gibt zurück.</span><span class="sxs-lookup"><span data-stu-id="e842d-279">If the workflow instance is successfully persisted, the runtime raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> event, and returns `true`.</span></span> <span data-ttu-id="e842d-280"><xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A>gibt `false` zurück, wenn die Workflow Instanz bereits entladen, beendet, abgebrochen oder bereits abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="e842d-280"><xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> returns `false` if the workflow instance has already been unloaded, has been terminated, has been aborted, or has already completed.</span></span>  
  
 <span data-ttu-id="e842d-281">Der Host kann <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> verwenden, um Systemressourcen eines im Leerlauf befindlichen Workflows freizugeben.</span><span class="sxs-lookup"><span data-stu-id="e842d-281">The host can use <xref:System.Workflow.Runtime.WorkflowInstance.TryUnload%2A> to reclaim system resources from an idle workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e842d-282">Das folgende Beispiel zeigt, wie Sie die TryUnload-Methode verwenden, um einen Workflow zu entladen, wenn das <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled>-Ereignis ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="e842d-282">The following example demonstrates using the TryUnload method to unload a workflow when the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event fires.</span></span> <span data-ttu-id="e842d-283">Dieses Beispiel stammt aus dem Using Persistence Services SDK-Beispiel in der Datei Program.cs.</span><span class="sxs-lookup"><span data-stu-id="e842d-283">This example is from the Using Persistence Services SDK sample, from the Program.cs file.</span></span> <span data-ttu-id="e842d-284">Weitere Informationen finden Sie unter [Verwenden von persistenzdienstbeispielen](https://msdn.microsoft.com/library/3176b7e7-ae49-4d5c-802b-85032d6ebde6).</span><span class="sxs-lookup"><span data-stu-id="e842d-284">For more information, see [Using Persistence Services Sample](https://msdn.microsoft.com/library/3176b7e7-ae49-4d5c-802b-85032d6ebde6).</span></span>  
  
 [!code-csharp[WF_Samples#280](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#280)]
 [!code-vb[WF_Samples#280](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#280)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e842d-285">Für die Workflowruntime-Engine ist kein Persistenzdienst registriert.</span><span class="sxs-lookup"><span data-stu-id="e842d-285">There is no persistence service registered with the workflow runtime engine.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowInstance.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload();" />
      <MemberSignature Language="F#" Value="member this.Unload : unit -&gt; unit" Usage="workflowInstance.Unload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e842d-286">Entlädt die Workflowinstanz aus dem Arbeitsspeicher in den Persistenzspeicher.</span><span class="sxs-lookup"><span data-stu-id="e842d-286">Unloads the workflow instance from memory to the persistence store.</span></span> <span data-ttu-id="e842d-287">Dieser Aufruf wird so lange blockiert, bis die derzeit geplante Arbeit beendet bzw. das Ende des Transaktionsumfangs erreicht ist.</span><span class="sxs-lookup"><span data-stu-id="e842d-287">This call blocks until after the currently scheduled work is finished, or the end of a transaction scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e842d-288"><xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A>Das Entladen verläuft synchron. Das heißt, die Rückgabe erfolgt, nachdem alle auszuführenden Aktionen abgeschlossen sind.</span><span class="sxs-lookup"><span data-stu-id="e842d-288"><xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> is synchronous; that is, it returns after completing any action that it performs.</span></span> <span data-ttu-id="e842d-289">Wenn sich die Workflowinstanz nicht im Leerlauf befindet, wartet die Laufzeit, bis die Instanz unterbrochen werden kann.</span><span class="sxs-lookup"><span data-stu-id="e842d-289">If the workflow instance is not idle, the runtime waits until the instance can be interrupted.</span></span> <span data-ttu-id="e842d-290">Eine Instanz kann nur unterbrochen werden, nachdem die Bearbeitung des geplanten Arbeitsschritts abgeschlossen ist. In der Regel ist dies der Fall, wenn die momentan ausgeführte Aktivität von der <xref:System.Workflow.ComponentModel.Activity.Execute%2A>-Methode zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="e842d-290">An instance can only be interrupted after the currently scheduled work item completes; this is typically when the currently running Activity returns from its <xref:System.Workflow.ComponentModel.Activity.Execute%2A> method.</span></span> <span data-ttu-id="e842d-291">Wenn die Instanz jedoch eine <xref:System.Workflow.ComponentModel.TransactionScopeActivity> ausführt, muss der Transaktionsumfang die Ausführung abschließen, bevor die Instanz unterbrochen werden kann.</span><span class="sxs-lookup"><span data-stu-id="e842d-291">However, if the instance is executing a <xref:System.Workflow.ComponentModel.TransactionScopeActivity>, the transaction scope must complete execution before the instance can be interrupted.</span></span> <span data-ttu-id="e842d-292">Der Entladevorgang verwendet dann den Persistenzdienst, um die Workflowinstanz aus dem Arbeitsspeicher zu entfernen, und behält sie in einem Datenspeicher bei.</span><span class="sxs-lookup"><span data-stu-id="e842d-292">Unload then uses the persistence service to remove the workflow instance from memory and persists it to a data store.</span></span> <span data-ttu-id="e842d-293">Wenn für <xref:System.Workflow.Runtime.WorkflowRuntime> kein Persistenzdienst registriert ist, löst <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> eine <xref:System.InvalidOperationException> aus.</span><span class="sxs-lookup"><span data-stu-id="e842d-293">If there is no persistence service registered with the <xref:System.Workflow.Runtime.WorkflowRuntime>, <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="e842d-294">Wenn die Workflowinstanz erfolgreich beibehalten wird, löst die Laufzeit das <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded>-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="e842d-294">If the workflow instance is successfully persisted, the runtime raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> event.</span></span>  
  
 <span data-ttu-id="e842d-295">Der Host kann <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> verwenden, um Systemressourcen eines im Leerlauf befindlichen Workflows freizugeben.</span><span class="sxs-lookup"><span data-stu-id="e842d-295">The host can use <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> to reclaim system resources from an idle workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e842d-296">Das folgende Codebeispiel zeigt, wie Sie <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> für ein <xref:System.Workflow.Runtime.WorkflowInstance>-Objekt aufrufen.</span><span class="sxs-lookup"><span data-stu-id="e842d-296">The following example demonstrates calling <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> on a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#11](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#11)]
 [!code-vb[WF_Samples#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e842d-297">Für die Workflowruntime-Engine ist kein Persistenzdienst registriert.</span><span class="sxs-lookup"><span data-stu-id="e842d-297">There is no persistence service registered with the workflow runtime engine.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WorkflowRuntime">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowRuntime WorkflowRuntime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.WorkflowRuntime WorkflowRuntime" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkflowRuntime As WorkflowRuntime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Runtime::WorkflowRuntime ^ WorkflowRuntime { System::Workflow::Runtime::WorkflowRuntime ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WorkflowRuntime : System.Workflow.Runtime.WorkflowRuntime" Usage="System.Workflow.Runtime.WorkflowInstance.WorkflowRuntime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowRuntime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e842d-298">Ruft <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> für diese Workflowinstanz ab.</span><span class="sxs-lookup"><span data-stu-id="e842d-298">Gets the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> for this workflow instance.</span></span></summary>
        <value><span data-ttu-id="e842d-299"><see cref="T:System.Workflow.Runtime.WorkflowRuntime" />, die die Ausführungsumgebung darstellt, in der diese Workflowinstanz ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="e842d-299">A <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> that represents the execution environment in which this workflow instance is running.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e842d-300">Das folgende Beispiel zeigt, wie Sie auf die Ausführung der <xref:System.Workflow.Runtime.WorkflowRuntime> eines <xref:System.Workflow.Runtime.WorkflowInstance>-Objekts zugreifen.</span><span class="sxs-lookup"><span data-stu-id="e842d-300">The following example demonstrates accessing the executing <xref:System.Workflow.Runtime.WorkflowRuntime> of a <xref:System.Workflow.Runtime.WorkflowInstance> object.</span></span>  
  
 [!code-csharp[WF_Samples#7](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#7)]
 [!code-vb[WF_Samples#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
