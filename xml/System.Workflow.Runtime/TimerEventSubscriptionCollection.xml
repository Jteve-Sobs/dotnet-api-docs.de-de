<Type Name="TimerEventSubscriptionCollection" FullName="System.Workflow.Runtime.TimerEventSubscriptionCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="20a84a0916bca8fe7ce408d79d2dd461ef2a29c6" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69416940" /></Metadata><TypeSignature Language="C#" Value="public class TimerEventSubscriptionCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TimerEventSubscriptionCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class TimerEventSubscriptionCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class TimerEventSubscriptionCollection : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type TimerEventSubscriptionCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4b59e-101">Stellt eine geordnete Liste von <see cref="T:System.Workflow.Runtime.TimerEventSubscription" />-Objekten dar.</span><span class="sxs-lookup"><span data-stu-id="4b59e-101">Represents an ordered list of <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="4b59e-102">Eine <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> stellt die Warteschlange von <xref:System.Workflow.Runtime.TimerEventSubscription>-Objekten dar, die einer Workflowinstanz zugeordnet sind, und stellt Methoden zum Verwalten dieser Warteschlange bereit.</span><span class="sxs-lookup"><span data-stu-id="4b59e-102">A <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> represents the queue of <xref:System.Workflow.Runtime.TimerEventSubscription> objects associated with a workflow instance and provides methods to manage this queue.</span></span> <span data-ttu-id="4b59e-103">Abonnements sind in der Warteschlange basierend auf ihren <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A>-Werten geordnet. Abonnements mit niedrigeren <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A>-Werten sind vor Abonnements mit höheren <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A>-Werten angeordnet.</span><span class="sxs-lookup"><span data-stu-id="4b59e-103">Subscriptions are ordered in the queue based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> values; those with smaller <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> values are positioned before those with larger <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> values.</span></span> <span data-ttu-id="4b59e-104">Sie können die von dieser Klasse bereitgestellten Methoden verwenden, um die Auflistung von aktiven Timerereignisabonnements zu verwalten, die von <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty> für die einzelnen Workflowinstanzen offengelegt werden.</span><span class="sxs-lookup"><span data-stu-id="4b59e-104">You can use the methods provided by this class to manage the collection of active timer event subscriptions exposed by <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty> for each workflow instance.</span></span> <span data-ttu-id="4b59e-105">Sie können <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A> oder <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%2A> verwenden, um Abonnements der Timerwarteschlange hinzuzufügen oder daraus zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="4b59e-105">You can use <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A> or <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%2A> to add or remove subscriptions from the timer queue.</span></span> <span data-ttu-id="4b59e-106">Wenn sich das erste Element in der Timerwarteschlange ändert, wird jeweils der <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> aufgerufen, um das Timerereignis zu beenden, das sich vorher am Anfang der Warteschlange befunden hat, und um das neue Timerereignis zu planen.</span><span class="sxs-lookup"><span data-stu-id="4b59e-106">Whenever the first element in the timer queue changes, the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> is called to cancel the timer event that was previously at the beginning of the queue and schedule the new timer event.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Workflow.Runtime.TimerEventSubscription item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Workflow.Runtime.TimerEventSubscription item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add(System.Workflow.Runtime.TimerEventSubscription)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As TimerEventSubscription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Workflow::Runtime::TimerEventSubscription ^ item);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Workflow.Runtime.TimerEventSubscription -&gt; unit" Usage="timerEventSubscriptionCollection.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.Runtime.TimerEventSubscription" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="4b59e-107">Das <see cref="T:System.Workflow.Runtime.TimerEventSubscription" />, das der Zeitgeberwarteschlange hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="4b59e-107">The <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> to add to the timer queue.</span></span></param>
        <summary><span data-ttu-id="4b59e-108">Fügt der Zeitgeberwarteschlange ein <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> hinzu.</span><span class="sxs-lookup"><span data-stu-id="4b59e-108">Adds a <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> to the timer queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b59e-109">Fügt das <xref:System.Workflow.Runtime.TimerEventSubscription> der Timerwarteschlange hinzu.</span><span class="sxs-lookup"><span data-stu-id="4b59e-109">Adds the <xref:System.Workflow.Runtime.TimerEventSubscription> to the timer queue.</span></span> <span data-ttu-id="4b59e-110">Abonnements sind in der Warteschlange basierend auf ihren <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType>-Werten geordnet. Abonnements mit niedrigeren Werten sind vor Abonnements mit höheren Werten angeordnet.</span><span class="sxs-lookup"><span data-stu-id="4b59e-110">Subscriptions in the queue are positioned based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType> values; those with smaller values are positioned in front of those with larger values.</span></span> <span data-ttu-id="4b59e-111">Wenn das neue Abonnement am Anfang der Warteschlange hinzugefügt wird, wird <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType> aufgerufen, um das Zeitgeberereignis abzubrechen, das sich vorher am Anfang der Warteschlange befunden hat, und <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType> wird aufgerufen, um das neue Zeitgeberereignis zu planen.</span><span class="sxs-lookup"><span data-stu-id="4b59e-111">If the new subscription is added at the beginning of the queue, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType> is called to cancel the timer event that was previously at the beginning of the queue and <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType> is called to schedule the new timer event.</span></span> <span data-ttu-id="4b59e-112"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A> sperrt die <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>, bevor das neue Abonnement hinzugefügt wird. Daher ist dieser Vorgang threadsicher.</span><span class="sxs-lookup"><span data-stu-id="4b59e-112"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A> locks the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> before adding the new subscription and is, therefore, thread safe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4b59e-113"><paramref name="item" /> ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="4b59e-113"><paramref name="item" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="timerEventSubscriptionCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="4b59e-114">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> kopierten Elemente ist.</span><span class="sxs-lookup"><span data-stu-id="4b59e-114">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />.</span></span> <span data-ttu-id="4b59e-115">Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="4b59e-115">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="4b59e-116">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</span><span class="sxs-lookup"><span data-stu-id="4b59e-116">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="4b59e-117">Kopiert die <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />-Elemente in ein vorhandenes eindimensionales <see cref="T:System.Array" />, beginnend beim angegebenen Arrayindex.</span><span class="sxs-lookup"><span data-stu-id="4b59e-117">Copies the <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> elements to an existing one-dimensional <see cref="T:System.Array" />, starting at the specified array index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b59e-118"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo%2A> ist threadsicher.</span><span class="sxs-lookup"><span data-stu-id="4b59e-118"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo%2A> is thread safe.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Workflow.Runtime.TimerEventSubscriptionCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b59e-119">Ruft die Anzahl der <see cref="T:System.Workflow.Runtime.TimerEventSubscription" />-Objekte ab, die sich in der Zeitgeberwarteschlange befinden.</span><span class="sxs-lookup"><span data-stu-id="4b59e-119">Gets the number of <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> objects in the timer queue.</span></span></summary>
        <value><span data-ttu-id="4b59e-120">Die Anzahl der <see cref="T:System.Workflow.Runtime.TimerEventSubscription" />-Objekte in der Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="4b59e-120">The number of <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> objects in the queue.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="timerEventSubscriptionCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4b59e-121">Gibt einen Enumerator zurück, der die <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> durchläuft.</span><span class="sxs-lookup"><span data-stu-id="4b59e-121">Returns an enumerator that iterates through the <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />.</span></span></summary>
        <returns><span data-ttu-id="4b59e-122">Ein <see cref="T:System.Collections.IEnumerator" /> für das <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />.</span><span class="sxs-lookup"><span data-stu-id="4b59e-122">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b59e-123">Der Zugriff auf die <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> ist synchronisiert. Die Enumeration einer Auflistung ist systemintern jedoch keine threadsichere Prozedur.</span><span class="sxs-lookup"><span data-stu-id="4b59e-123">Access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="4b59e-124">Ein Enumerator bleibt gültig, solange die Auflistung unverändert ist.</span><span class="sxs-lookup"><span data-stu-id="4b59e-124">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="4b59e-125">Werden an der Auflistung Änderungen wie z. B. Hinzufügen, Bearbeiten oder Entfernen von Elementen vorgenommen, verliert der Enumerator unwiederbringlich seine Gültigkeit und sein Verhalten ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="4b59e-125">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span> <span data-ttu-id="4b59e-126">Der Enumerator hat keinen exklusiven Zugriff auf die Auflistung. Daher ist die Enumeration einer Auflistung systemintern keine threadsichere Prozedur.</span><span class="sxs-lookup"><span data-stu-id="4b59e-126">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="4b59e-127">Um Threadsicherheit während der Enumeration zu gewährleisten, können Sie die <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> während der gesamten Enumeration sperren, indem Sie <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> verwenden.</span><span class="sxs-lookup"><span data-stu-id="4b59e-127">To guarantee thread safety during enumeration, you can lock the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> during the entire enumeration by using <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b59e-128">Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> synchronisiert (threadsicher) ist.</span><span class="sxs-lookup"><span data-stu-id="4b59e-128">Gets a value that indicates whether the access to the <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="4b59e-129">Gibt immer <see langword="true" /> zurück. Dies gibt an, dass der Zugriff auf die <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> synchronisiert (threadsicher) ist.</span><span class="sxs-lookup"><span data-stu-id="4b59e-129">Always returns <see langword="true" /> indicating that access to the <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> is synchronized (thread safe).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b59e-130">Der Zugriff auf die <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> ist synchronisiert. Die Enumeration einer Auflistung ist systemintern jedoch keine threadsichere Prozedur.</span><span class="sxs-lookup"><span data-stu-id="4b59e-130">Access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="4b59e-131">Selbst wenn eine Auflistung synchronisiert wird, besteht die Möglichkeit, dass andere Threads sie ändern. Dies führt dazu, dass der Enumerator eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="4b59e-131">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="4b59e-132">Um während der Enumeration Threadsicherheit zu gewährleisten, können Sie entweder die Auflistung während der gesamten Enumeration sperren oder die Ausnahmen, die aus von anderen Threads stammenden Änderungen resultieren, abfangen.</span><span class="sxs-lookup"><span data-stu-id="4b59e-132">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span> <span data-ttu-id="4b59e-133"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> gibt ein Objekt zurück, mit dem der Zugriff auf <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> synchronisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="4b59e-133"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.TimerEventSubscription Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.TimerEventSubscription Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek () As TimerEventSubscription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::TimerEventSubscription ^ Peek();" />
      <MemberSignature Language="F#" Value="member this.Peek : unit -&gt; System.Workflow.Runtime.TimerEventSubscription" Usage="timerEventSubscriptionCollection.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.TimerEventSubscription</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4b59e-134">Gibt das <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> am Anfang der Timerwarteschlange zurück, ohne es zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="4b59e-134">Returns the <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> at the beginning of the timer queue without removing it.</span></span></summary>
        <returns><span data-ttu-id="4b59e-135">Das <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> am Anfang der Timerwarteschlange oder ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn die Timerwarteschlange leer ist.</span><span class="sxs-lookup"><span data-stu-id="4b59e-135">The <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> at the beginning of the timer queue or a null reference (<see langword="Nothing" /> in Visual Basic) if the timer queue is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b59e-136"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek%2A> ist threadsicher.</span><span class="sxs-lookup"><span data-stu-id="4b59e-136"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek%2A> is thread safe.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4b59e-137">Entfernt das angegebene <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> aus der Timerwarteschlange.</span><span class="sxs-lookup"><span data-stu-id="4b59e-137">Removes the specified <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> from the timer queue.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (Guid timerSubscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(valuetype System.Guid timerSubscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (timerSubscriptionId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(Guid timerSubscriptionId);" />
      <MemberSignature Language="F#" Value="member this.Remove : Guid -&gt; unit" Usage="timerEventSubscriptionCollection.Remove timerSubscriptionId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timerSubscriptionId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="timerSubscriptionId"><span data-ttu-id="4b59e-138">Die <see cref="T:System.Guid" /> des zu entfernenden <see cref="T:System.Workflow.Runtime.TimerEventSubscription" />.</span><span class="sxs-lookup"><span data-stu-id="4b59e-138">The <see cref="T:System.Guid" /> of the <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> to remove.</span></span></param>
        <summary><span data-ttu-id="4b59e-139">Entfernt das <see cref="T:System.Workflow.Runtime.TimerEventSubscription" />, das über die angegebene Abonnement-ID der Timerwarteschlange verfügt.</span><span class="sxs-lookup"><span data-stu-id="4b59e-139">Removes the <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> that has the specified subscription id from the timer queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b59e-140">Entfernt das <xref:System.Workflow.Runtime.TimerEventSubscription> mit der angegebenen Abonnement-ID aus der Timerwarteschlange.</span><span class="sxs-lookup"><span data-stu-id="4b59e-140">Removes the <xref:System.Workflow.Runtime.TimerEventSubscription> with the specified subscription id from the timer queue.</span></span> <span data-ttu-id="4b59e-141">Abonnements sind in der Warteschlange basierend auf ihren <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType>-Werten geordnet. Abonnements mit niedrigeren Werten sind vor Abonnements mit höheren Werten angeordnet.</span><span class="sxs-lookup"><span data-stu-id="4b59e-141">Subscriptions in the queue are positioned based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType> values; those with smaller values are positioned in front of those with larger values.</span></span> <span data-ttu-id="4b59e-142">Wenn das entfernte Abonnement sich am Anfang der Warteschlange befunden hat, wird <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType> aufgerufen, um das Zeitgeberereignis abzubrechen, das dem Abonnement zugeordnet ist, und <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType> wird aufgerufen, um ein Zeitgeberereignis für das Abonnement zu planen, das sich jetzt am Anfang der Warteschlange befindet.</span><span class="sxs-lookup"><span data-stu-id="4b59e-142">If the subscription removed was the subscription at the beginning of the queue, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType> is called to cancel the timer event associated with this subscription and <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType> is called to schedule a timer event for the subscription that is now at the beginning of the queue.</span></span> <span data-ttu-id="4b59e-143"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29> ist threadsicher.</span><span class="sxs-lookup"><span data-stu-id="4b59e-143"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29> is thread safe.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Workflow.Runtime.TimerEventSubscription item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Workflow.Runtime.TimerEventSubscription item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Workflow.Runtime.TimerEventSubscription)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As TimerEventSubscription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Workflow::Runtime::TimerEventSubscription ^ item);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Workflow.Runtime.TimerEventSubscription -&gt; unit" Usage="timerEventSubscriptionCollection.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.Runtime.TimerEventSubscription" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="4b59e-144">Das <see cref="T:System.Workflow.Runtime.TimerEventSubscription" />, das aus der Timerwarteschlange entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="4b59e-144">The <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> to remove from the timer queue.</span></span></param>
        <summary><span data-ttu-id="4b59e-145">Entfernt das <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> aus der Timerwarteschlange.</span><span class="sxs-lookup"><span data-stu-id="4b59e-145">Removes the <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> from the timer queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b59e-146">Entfernt das <xref:System.Workflow.Runtime.TimerEventSubscription> aus der Timerwarteschlange.</span><span class="sxs-lookup"><span data-stu-id="4b59e-146">Removes the <xref:System.Workflow.Runtime.TimerEventSubscription> from the timer queue.</span></span> <span data-ttu-id="4b59e-147">Abonnements sind in der Warteschlange basierend auf ihren <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType>-Werten geordnet. Abonnements mit niedrigeren Werten sind vor Abonnements mit höheren Werten angeordnet.</span><span class="sxs-lookup"><span data-stu-id="4b59e-147">Subscriptions in the queue are positioned based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=nameWithType> values; those with smaller values are positioned in front of those with larger values.</span></span> <span data-ttu-id="4b59e-148">Wenn das entfernte Abonnement sich am Anfang der Warteschlange befunden hat, wird <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType> aufgerufen, um das Zeitgeberereignis abzubrechen, das dem Abonnement zugeordnet ist, und <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType> wird aufgerufen, um ein Zeitgeberereignis für das Abonnement zu planen, das sich jetzt am Anfang der Warteschlange befindet.</span><span class="sxs-lookup"><span data-stu-id="4b59e-148">If the subscription removed was the subscription at the beginning of the queue, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=nameWithType> is called to cancel the timer event associated with this subscription and <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=nameWithType> is called to schedule a timer event for the subscription that is now at the beginning of the queue.</span></span> <span data-ttu-id="4b59e-149"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29> ist threadsicher.</span><span class="sxs-lookup"><span data-stu-id="4b59e-149"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29> is thread safe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4b59e-150"><paramref name="item" /> ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="4b59e-150"><paramref name="item" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b59e-151">Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> synchronisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="4b59e-151">Gets an object that can be used to synchronize access to the <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />.</span></span></summary>
        <value><span data-ttu-id="4b59e-152">Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" /> synchronisiert wird.</span><span class="sxs-lookup"><span data-stu-id="4b59e-152">An object used to synchronize access to the <see cref="T:System.Workflow.Runtime.TimerEventSubscriptionCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b59e-153"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> gibt ein Objekt zurück, mit dem der Zugriff auf <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> synchronisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="4b59e-153"><xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>.</span></span>  
  
 <span data-ttu-id="4b59e-154">Der Zugriff auf die <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> ist synchronisiert. Die Enumeration einer Auflistung ist systemintern jedoch keine threadsichere Prozedur.</span><span class="sxs-lookup"><span data-stu-id="4b59e-154">Access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="4b59e-155">Selbst wenn eine Auflistung synchronisiert wird, besteht die Möglichkeit, dass andere Threads sie ändern. Dies führt dazu, dass der Enumerator eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="4b59e-155">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="4b59e-156">Um während der Enumeration Threadsicherheit zu gewährleisten, können Sie entweder die <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> während der gesamten Enumeration sperren, indem Sie <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> verwenden, oder Sie können die durch andere Threads aufgrund von Änderungen ausgelösten Ausnahmen abfangen.</span><span class="sxs-lookup"><span data-stu-id="4b59e-156">To guarantee thread safety during enumeration, you can either lock the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> during the entire enumeration by using <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimerCollectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty TimerCollectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty TimerCollectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TimerCollectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ TimerCollectionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TimerCollectionProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b59e-157">Eine Timerwarteschlange, die einer Workflowinstanz zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="4b59e-157">Timer queue associated with a workflow instance.</span></span> <span data-ttu-id="4b59e-158">Diese Warteschlange enthält nach Zeit geordnete <see cref="T:System.Workflow.Runtime.TimerEventSubscription" />-Objekte für einen Workflow.</span><span class="sxs-lookup"><span data-stu-id="4b59e-158">This queue contains time ordered <see cref="T:System.Workflow.Runtime.TimerEventSubscription" /> objects for a workflow.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
