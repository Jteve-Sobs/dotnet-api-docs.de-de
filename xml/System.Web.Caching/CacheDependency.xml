<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CacheDependency.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5971848a65c6d20655c657ffc94cd2e88f373bb0d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">971848a65c6d20655c657ffc94cd2e88f373bb0d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Caching.CacheDependency">
          <source>Establishes a dependency relationship between an item stored in an ASP.NET application's <ph id="ph1">&lt;see cref="T:System.Web.Caching.Cache" /&gt;</ph> object and a file, cache key, an array of either, or another <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object.</source>
          <target state="translated">Legt eine Abhängigkeitsbeziehung zwischen einem Element, das im <ph id="ph1">&lt;see cref="T:System.Web.Caching.Cache" /&gt;</ph>-Objekt einer ASP.NET-Anwendung gespeichert ist, und einer Datei, einem Cacheschlüssel, einem Datei- oder Cacheschlüsselarray oder einem anderen <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>-Objekt fest.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.Caching.CacheDependency">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class monitors the dependency relationships so that when any of them changes, the cached item will be automatically removed.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>-Klasse überwacht die Abhängigkeitsbeziehungen, sodass bei Änderung beliebiger dieser Beziehungen das zwischengespeicherte Element automatisch entfernt wird.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>If you add an item to the cache that is dependent on another object, such as a file or array of files, the dependent item is automatically removed from the cache when the object changes.</source>
          <target state="translated">Wenn Sie ein Element mit dem Cache hinzufügen, die auf einem anderen Objekt, z. B. eine Datei oder ein Array von Dateien abhängig ist wird das abhängige Element automatisch aus dem Cache entfernt, wenn das Objekt ändert.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>For example, suppose you create a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object based on data in an XML file.</source>
          <target state="translated">Nehmen wir beispielsweise an, die Sie erstellen eine <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> -Objekt auf der Grundlage von Daten in eine XML-Datei.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>You can add the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> to the cache with a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object that makes the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> dependent on the XML file.</source>
          <target state="translated">Können Sie hinzufügen, die <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> in den Cache mit einer <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> Objekt, mit der, die <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> abhängig von der XML-Datei.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>If the XML file changes, the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is removed from the cache.</source>
          <target state="translated">Wenn die XML-Datei geändert wird, die <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> aus dem Cache entfernt wird.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>You can add items with dependencies to your application's cache with the <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Add%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">Sie können Elemente mit Abhängigkeiten Anwendungscache mit Hinzufügen der <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Add%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>You cannot use the <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Item%2A&gt;</ph> property to add items to the cache with dependencies.</source>
          <target state="translated">Sie können keine der <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Item%2A&gt;</ph> Eigenschaft, um den Cache mit Abhängigkeiten Elemente hinzuzufügen.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>To set up a dependency, you create an instance of the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class, specifying the files, keys, or directories on which the item is dependent, and then pass the dependency to the <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Add%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Um eine Abhängigkeit einzurichten, erstellen Sie eine Instanz von der <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> Klasse angeben, die Dateien, Schlüssel oder Verzeichnisse auf dem das Element abhängig ist, und übergeben Sie dann die Abhängigkeit der <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Add%2A&gt;</ph> oder <ph id="ph3">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> instance can represent a single file or directory, an array of files or directories, or an array of files or directories along with an array of cache keys (these represent other items stored in the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> object).</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> Instanz kann eine einzelne Datei oder Verzeichnis, ein Array von Dateien oder Verzeichnisse oder ein Array von Dateien oder Verzeichnisse zusammen mit der ein Array von Cacheschlüsseln darstellen (diese anderen im gespeicherten Elementen darstellen der <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> Objekt).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.HasChanged%2A&gt;</ph> property to determine whether a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> changed since the previous request for an item in the <ph id="ph3">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung der <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.HasChanged%2A&gt;</ph> -Eigenschaft können Sie bestimmen, ob eine <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> geändert, seit der vorherigen Anforderung für ein Element in der <ph id="ph3">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>The <ph id="ph1">`dt`</ph> value passed in the <ph id="ph2">`start`</ph> parameter is set to <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">`dt`</ph> übergebene Wert den <ph id="ph2">`start`</ph> Parametersatz auf <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Web.Caching.CacheDependency">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor">
          <source>If you want to derive your own class from <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>, implement this version of the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">Wenn Sie, leiten Sie eine eigene Klasse von möchten <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>, implementieren Sie diese Version von den <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.%23ctor%2A&gt;</ph> Konstruktor.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor">
          <source>The following code example is a class that implements this version of the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> constructor as all classes that derive from <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> are required to.</source>
          <target state="translated">Im folgenden Codebeispiel wird eine Klasse, die von dieser Version implementiert die <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> Konstruktor wie alle Klassen, die davon Herleiten <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> sind erforderlich, um.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>The path to a file or directory that the cached object is dependent upon.</source>
          <target state="translated">Der Pfad einer Datei oder eines Verzeichnisses, von der bzw. dem das zwischengespeicherte Objekt abhängig ist.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>When this resource changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">Wenn diese Ressource geändert wird, ist das zwischengespeicherte Objekt veraltet und wird aus dem Cache entfernt.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors a file or directory for changes.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>-Klasse, die eine Datei oder ein Verzeichnis auf Änderungen überwacht.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>If the directory or file specified in the <ph id="ph1">`filename`</ph> parameter is not found in the file system, it will be treated as missing.</source>
          <target state="translated">Wenn das Verzeichnis oder die Datei im angegebenen der <ph id="ph1">`filename`</ph> Parameter wurde nicht gefunden im Dateisystem, wird Sie als fehlend behandelt werden.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>If the directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when the directory or file is created.</source>
          <target state="translated">Wenn das Verzeichnis oder die Datei nicht vorhanden ist. wenn das Objekt mit der Abhängigkeit wird hinzugefügt der <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, das zwischengespeicherte Objekt daraus die <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> Wenn das Verzeichnis oder Datei erstellt wird.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">Nehmen wir beispielsweise an, dass Sie ein Objekt, das Hinzufügen der <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> mit einer Abhängigkeit von den folgenden Dateipfad: c:\stocks\xyz.dat.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">Wenn diese Datei nicht gefunden wurde die <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> Objekt wird erstellt, aber später erstellt wird, wird das zwischengespeicherte Objekt bei der Erstellung der Datei xyz.dat entfernt.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>The following code example creates an instance of the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class with a dependency on an XML file.</source>
          <target state="translated">Das folgende Codebeispiel erstellt eine Instanz von der <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> Klasse mit einer Abhängigkeit auf eine XML-Datei.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> method then adds an item to the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> that is dependent upon that file.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> Methode fügt dann ein Element aus, um die <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> , ist diese Datei abhängt.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>You can also use the following technique to add an item to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on a file.</source>
          <target state="translated">Sie können auch das folgende Verfahren zum Hinzufügen eines Elements auf der <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> mit einer Abhängigkeit auf eine Datei.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>An array of paths (to files or directories) that the cached object is dependent upon.</source>
          <target state="translated">Ein Array von Pfaden (zu Dateien oder Verzeichnissen), von dem das zwischengespeicherte Objekt abhängig ist.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">Wenn eine dieser Ressourcen geändert wird, ist das zwischengespeicherte Objekt veraltet und wird aus dem Cache entfernt.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors an array of paths (to files or directories) for changes.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>-Klasse, die ein Array von Pfaden (zu Dateien oder Verzeichnissen) auf Änderungen überwacht.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>If any of the files or directories in the array changes or is removed from the array, the cached item becomes obsolete and is removed from the application's <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> object.</source>
          <target state="translated">Wenn eine der Dateien oder Verzeichnisse in das Array ändert oder aus dem Array entfernt das zwischengespeicherte Element ist veraltet und wird aus der Anwendungsverzeichnis entfernt <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>Also, if any of the directories or files specified in the <ph id="ph1">`filenames`</ph> parameter is not found in the file system, it is treated as missing.</source>
          <target state="translated">Auch wenn die Verzeichnisse oder die angegebenen Dateien in der <ph id="ph1">`filenames`</ph> Parameter wurde nicht gefunden im Dateisystem, wird er als fehlend behandelt.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>If a directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when that directory or file is created.</source>
          <target state="translated">Wenn ein Verzeichnis oder eine Datei nicht vorhanden ist. wenn das Objekt mit der Abhängigkeit wird hinzugefügt der <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, das zwischengespeicherte Objekt daraus die <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> Wenn dieses Verzeichnis oder Datei erstellt wird.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">Nehmen wir beispielsweise an, dass Sie ein Objekt, das Hinzufügen der <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> mit einer Abhängigkeit von den folgenden Dateipfad: c:\stocks\xyz.dat.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">Wenn diese Datei nicht gefunden wurde die <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> Objekt wird erstellt, aber später erstellt wird, wird das zwischengespeicherte Objekt bei der Erstellung der Datei xyz.dat entfernt.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>When you create the array that contains the file dependencies, you must define the number of files that the item you are adding to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> is dependent on.</source>
          <target state="translated">Bei der Erstellung des Arrays, die die Abhängigkeiten enthält, müssen Sie die Anzahl der Dateien definieren, dass das Element Sie zum Hinzufügen der <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> abhängig ist.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> method to add an item to the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> with dependencies on an array of files.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie die <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> Methode zum Hinzufügen eines Elements auf der <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> mit Abhängigkeiten auf ein Array von Dateien.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>You can also make the item dependent on an array of directories.</source>
          <target state="translated">Sie können auch das Element ein Array von Verzeichnissen abhängig machen.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>The path to a file or directory that the cached object is dependent upon.</source>
          <target state="translated">Der Pfad einer Datei oder eines Verzeichnisses, von der bzw. dem das zwischengespeicherte Objekt abhängig ist.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>When this resource changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">Wenn diese Ressource geändert wird, ist das zwischengespeicherte Objekt veraltet und wird aus dem Cache entfernt.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>The time against which to check the last modified date of the directory or file.</source>
          <target state="translated">Die Zeit, mit der das Datum der letzten Änderung des Verzeichnisses oder der Datei verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors a file or directory for changes.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>-Klasse, die eine Datei oder ein Verzeichnis auf Änderungen überwacht.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>If the directory or file specified in the <ph id="ph1">`filename`</ph> parameter is not found in the file system, it will be treated as missing.</source>
          <target state="translated">Wenn das Verzeichnis oder die Datei im angegebenen der <ph id="ph1">`filename`</ph> Parameter wurde nicht gefunden im Dateisystem, wird Sie als fehlend behandelt werden.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>If the directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when the directory or file is created.</source>
          <target state="translated">Wenn das Verzeichnis oder die Datei nicht vorhanden ist. wenn das Objekt mit der Abhängigkeit wird hinzugefügt der <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, das zwischengespeicherte Objekt daraus die <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> Wenn das Verzeichnis oder Datei erstellt wird.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">Nehmen wir beispielsweise an, dass Sie ein Objekt, das Hinzufügen der <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> mit einer Abhängigkeit von den folgenden Dateipfad: c:\stocks\xyz.dat.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">Wenn diese Datei nicht gefunden wurde die <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> Objekt wird erstellt, aber später erstellt wird, wird das zwischengespeicherte Objekt bei der Erstellung der Datei xyz.dat entfernt.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>Change tracking begins immediately and is not directly based on the <ph id="ph1">`start`</ph> parameter.</source>
          <target state="translated">Nachverfolgen von Änderungen beginnt sofort und basiert nicht direkt auf die <ph id="ph1">`start`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>Use the <ph id="ph1">`start`</ph> parameter to pass a date and time in the past against which you want to check the last modified date of the directory or file passed in the <ph id="ph2">`filename`</ph> parameter.</source>
          <target state="translated">Verwenden der <ph id="ph1">`start`</ph> Parameter übergeben wird, ein Datum und eine Uhrzeit in der Vergangenheit für das Überprüfen der letzten Änderung des Verzeichnisses Datum oder die Datei übergeben werden sollen die <ph id="ph2">`filename`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>If the last modified date is later than the date and time set passed in the <ph id="ph1">`start`</ph> parameter, the cached item is removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">Wenn es sich bei der letzten Änderung Datum liegt nach dem Datum und Uhrzeit übergeben der <ph id="ph1">`start`</ph> Parameter das zwischengespeicherte Element wird entfernt, von der <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>The following code example uses this constructor to instantiate a <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object, then inserts an item into the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> with that dependency.</source>
          <target state="translated">Das folgende Codebeispiel verwendet diesen Konstruktor zum Instanziieren einer <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> -Objekt und fügt ein Element in der <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> mit dieser Abhängigkeit.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>The <ph id="ph1">`dt`</ph> value passed in the <ph id="ph2">`start`</ph> parameter is set to <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">`dt`</ph> übergebene Wert den <ph id="ph2">`start`</ph> Parametersatz auf <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>An array of paths (to files or directories) that the cached object is dependent upon.</source>
          <target state="translated">Ein Array von Pfaden (zu Dateien oder Verzeichnissen), von dem das zwischengespeicherte Objekt abhängig ist.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">Wenn eine dieser Ressourcen geändert wird, ist das zwischengespeicherte Objekt veraltet und wird aus dem Cache entfernt.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>The time against which to check the last modified date of the objects in the array.</source>
          <target state="translated">Die Zeit, mit der das Datum der letzten Änderung der Objekte im Array verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors an array of paths (to files or directories) for changes and specifies a time when change monitoring begins.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>-Klasse, die ein Array von Pfaden (zu Dateien oder Verzeichnissen) auf Änderungen überwacht, und gibt an, wann die Änderungsüberwachung beginnt.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>If any of the directories or files specified in the <ph id="ph1">`filenames`</ph> parameter is not found in the file system, it is treated as missing.</source>
          <target state="translated">Wenn die Verzeichnisse oder die angegebenen Dateien in den <ph id="ph1">`filenames`</ph> Parameter wurde nicht gefunden im Dateisystem, wird er als fehlend behandelt.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>If a directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when that directory or file is created.</source>
          <target state="translated">Wenn ein Verzeichnis oder eine Datei nicht vorhanden ist. wenn das Objekt mit der Abhängigkeit wird hinzugefügt der <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, das zwischengespeicherte Objekt daraus die <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> Wenn dieses Verzeichnis oder Datei erstellt wird.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">Nehmen wir beispielsweise an, dass Sie ein Objekt, das Hinzufügen der <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> mit einer Abhängigkeit von den folgenden Dateipfad: c:\stocks\xyz.dat.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">Wenn diese Datei nicht gefunden wurde die <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> Objekt wird erstellt, aber später erstellt wird, wird das zwischengespeicherte Objekt bei der Erstellung der Datei xyz.dat entfernt.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>Change tracking begins immediately and is not directly based on the <ph id="ph1">`start`</ph> parameter.</source>
          <target state="translated">Nachverfolgen von Änderungen beginnt sofort und basiert nicht direkt auf die <ph id="ph1">`start`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>Use the <ph id="ph1">`start`</ph> parameter to pass a date and time in the past against which you want to check the last modified date of the array passed in the <ph id="ph2">`filenames`</ph> parameter.</source>
          <target state="translated">Verwenden der <ph id="ph1">`start`</ph> übergebene Parameter übergeben wird, ein Datum und eine Uhrzeit in der Vergangenheit für die Sie das Datum das letzte Änderung des Arrays überprüfen möchten die <ph id="ph2">`filenames`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>If the last modified date of any object in the array is later than the date and time set passed in the <ph id="ph1">`start`</ph> parameter, the cached item is removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">Wenn es sich bei der letzten Änderung Datum eines beliebigen Objekts im Array liegt nach dem Datum und Uhrzeit übergeben der <ph id="ph1">`start`</ph> Parameter das zwischengespeicherte Element wird entfernt, von der <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object that passes two XML files and a <ph id="ph2">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph> value when the object is included as a parameter argument in an <ph id="ph3">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> method call.</source>
          <target state="translated">Das folgende Codebeispiel erstellt eine <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> -Objekt, das zwei XML-Dateien übergibt und ein <ph id="ph2">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph> Wert, wenn das Objekt als im Parameterargument enthalten ist ein <ph id="ph3">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> -Methodenaufruf.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>An array of paths (to files or directories) that the cached object is dependent upon.</source>
          <target state="translated">Ein Array von Pfaden (zu Dateien oder Verzeichnissen), von dem das zwischengespeicherte Objekt abhängig ist.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">Wenn eine dieser Ressourcen geändert wird, ist das zwischengespeicherte Objekt veraltet und wird aus dem Cache entfernt.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>An array of cache keys that the new object monitors for changes.</source>
          <target state="translated">Ein Array von Cacheschlüsseln, bei dem Änderungen durch das neue Objekt überwacht werden.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</source>
          <target state="translated">Bei einer Änderung an einem dieser Cacheschlüssel ist das zwischengespeicherte Objekt, das diesem Abhängigkeitsobjekt zugeordnet ist, veraltet und wird aus dem Cache entfernt.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>-Klasse, die ein Array von Pfaden (zu Dateien oder Verzeichnissen), ein Array von Cacheschlüsseln oder beides auf Änderungen überwacht.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>Also, if any of the directories or files specified in the <ph id="ph1">`filenames`</ph> parameter is not found in the file system, it is treated as missing.</source>
          <target state="translated">Auch wenn die Verzeichnisse oder die angegebenen Dateien in der <ph id="ph1">`filenames`</ph> Parameter wurde nicht gefunden im Dateisystem, wird er als fehlend behandelt.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>If a directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when that directory or file is created.</source>
          <target state="translated">Wenn ein Verzeichnis oder eine Datei nicht vorhanden ist. wenn das Objekt mit der Abhängigkeit wird hinzugefügt der <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, das zwischengespeicherte Objekt daraus die <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> Wenn dieses Verzeichnis oder Datei erstellt wird.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">Nehmen wir beispielsweise an, dass Sie ein Objekt, das Hinzufügen der <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> mit einer Abhängigkeit von den folgenden Dateipfad: c:\stocks\xyz.dat.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">Wenn diese Datei nicht gefunden wurde die <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> Objekt wird erstellt, aber später erstellt wird, wird das zwischengespeicherte Objekt bei der Erstellung der Datei xyz.dat entfernt.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>However, the <ph id="ph1">`cachekeys`</ph> dependency does not work the same way.</source>
          <target state="translated">Allerdings die <ph id="ph1">`cachekeys`</ph> Abhängigkeit kann nicht die gleiche Weise verwendet werden.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>If at least one value in the <ph id="ph1">`cachekeys`</ph> parameter does not exist at the time of an insert, the insert fails.</source>
          <target state="translated">Wenn mindestens ein in Wert der <ph id="ph1">`cachekeys`</ph> Parameter zum Zeitpunkt einer Einfügung nicht vorhanden, der Vorgang schlägt fehl.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>Note that there is no exception thrown for this scenario.</source>
          <target state="translated">Beachten Sie, dass es keine Ausnahme ausgelöst, die für dieses Szenario ist.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>The following code fragment demonstrates how to insert an item into your application's <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on a key to another item placed in the cache.</source>
          <target state="translated">Das folgende Codefragment zeigt, wie zum Einfügen eines Elements in der Anwendungsverzeichnis <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> mit einer Abhängigkeit zu einem Schlüssel für ein anderes Element im Cache gespeichert.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>Since this method uses array syntax, you must define the number of keys on which the item you are adding to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> is dependent.</source>
          <target state="translated">Da diese Methode den Array-Syntax verwendet, müssen Sie definieren, die Anzahl der Schlüssel auf dem das Element hinzufügen der <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> richtet.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>An array of paths (to files or directories) that the cached object is dependent upon.</source>
          <target state="translated">Ein Array von Pfaden (zu Dateien oder Verzeichnissen), von dem das zwischengespeicherte Objekt abhängig ist.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">Wenn eine dieser Ressourcen geändert wird, ist das zwischengespeicherte Objekt veraltet und wird aus dem Cache entfernt.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>An array of cache keys that the new object monitors for changes.</source>
          <target state="translated">Ein Array von Cacheschlüsseln, bei dem Änderungen durch das neue Objekt überwacht werden.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</source>
          <target state="translated">Bei einer Änderung an einem dieser Cacheschlüssel ist das zwischengespeicherte Objekt, das diesem Abhängigkeitsobjekt zugeordnet ist, veraltet und wird aus dem Cache entfernt.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>The date and time against which to check the last modified date of the objects passed in the <bpt id="p1">&lt;c&gt;</bpt>filenames<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>cachekeys<ept id="p2">&lt;/c&gt;</ept> arrays.</source>
          <target state="translated">Datum und Uhrzeit, mit denen das Datum der letzten Änderung der im <bpt id="p1">&lt;c&gt;</bpt>filenames<ept id="p1">&lt;/c&gt;</ept>-Array und <bpt id="p2">&lt;c&gt;</bpt>cachekeys<ept id="p2">&lt;/c&gt;</ept>-Array übergebenen Objekte verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>-Klasse, die ein Array von Pfaden (zu Dateien oder Verzeichnissen), ein Array von Cacheschlüsseln oder beides auf Änderungen überwacht.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>Also, if any of the directories or files specified in the <ph id="ph1">`filenames`</ph> parameter is not found in the file system, it is treated as missing.</source>
          <target state="translated">Auch wenn die Verzeichnisse oder die angegebenen Dateien in der <ph id="ph1">`filenames`</ph> Parameter wurde nicht gefunden im Dateisystem, wird er als fehlend behandelt.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>If a directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when that directory or file is created.</source>
          <target state="translated">Wenn ein Verzeichnis oder eine Datei nicht vorhanden ist. wenn das Objekt mit der Abhängigkeit wird hinzugefügt der <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, das zwischengespeicherte Objekt daraus die <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> Wenn dieses Verzeichnis oder Datei erstellt wird.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">Nehmen wir beispielsweise an, dass Sie ein Objekt, das Hinzufügen der <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> mit einer Abhängigkeit von den folgenden Dateipfad: c:\stocks\xyz.dat.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">Wenn diese Datei nicht gefunden wurde die <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> Objekt wird erstellt, aber später erstellt wird, wird das zwischengespeicherte Objekt bei der Erstellung der Datei xyz.dat entfernt.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>However, the <ph id="ph1">`cachekeys`</ph> dependency does not work the same way.</source>
          <target state="translated">Allerdings die <ph id="ph1">`cachekeys`</ph> Abhängigkeit kann nicht die gleiche Weise verwendet werden.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>If at least one value in the <ph id="ph1">`cachekeys`</ph> parameter does not exist at the time of an insert, the insert fails.</source>
          <target state="translated">Wenn mindestens ein in Wert der <ph id="ph1">`cachekeys`</ph> Parameter zum Zeitpunkt einer Einfügung nicht vorhanden, der Vorgang schlägt fehl.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>Note that there is no exception thrown for this scenario.</source>
          <target state="translated">Beachten Sie, dass es keine Ausnahme ausgelöst, die für dieses Szenario ist.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>Change tracking begins immediately and is not directly based on the <ph id="ph1">`start`</ph> parameter.</source>
          <target state="translated">Nachverfolgen von Änderungen beginnt sofort und basiert nicht direkt auf die <ph id="ph1">`start`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>Use the <ph id="ph1">`start`</ph> parameter to pass a date and time in the past against which you want to check the last modified date of any object passed in the <ph id="ph2">`filenames`</ph> or <ph id="ph3">`cachekeys`</ph> parameters.</source>
          <target state="translated">Verwenden der <ph id="ph1">`start`</ph> übergebene Parameter übergeben wird, ein Datum und eine Uhrzeit in der Vergangenheit in der Datum das letzte Änderung eines Objekts überprüft werden sollen die <ph id="ph2">`filenames`</ph> oder <ph id="ph3">`cachekeys`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>If the last modified date of any of those objects is later than the date and time set passed in the <ph id="ph1">`start`</ph> parameter, the cached item is removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">Wenn es sich bei der letzten Änderung eines dieser Objekte liegt nach dem Datum und die festgelegte Zeit übergeben der <ph id="ph1">`start`</ph> Parameter das zwischengespeicherte Element wird entfernt, von der <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>The following code example creates a <ph id="ph1">`CreateDependency`</ph> method.</source>
          <target state="translated">Das folgende Codebeispiel erstellt eine <ph id="ph1">`CreateDependency`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>When this method is called, it creates a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object and the <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType&gt;</ph> property is used to add an item to the cache with a <ph id="ph3">`key`</ph> parameter of <ph id="ph4">`key1`</ph> and a value of <ph id="ph5">`Value 1`</ph>.</source>
          <target state="translated">Wenn diese Methode aufgerufen wird, erstellt eine <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> Objekt und die <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft dient zum Hinzufügen eines Elements in den Cache mit einer <ph id="ph3">`key`</ph> Parameter des <ph id="ph4">`key1`</ph> und den Wert <ph id="ph5">`Value 1`</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>An array of strings, <ph id="ph1">`dependencyKey`</ph>, is then created with the value of <ph id="ph2">`key1`</ph> as well.</source>
          <target state="translated">Ein Array von Zeichenfolgen, <ph id="ph1">`dependencyKey`</ph>, wird dann erstellt, wobei der Wert der <ph id="ph2">`key1`</ph> ebenfalls.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>This <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> constructor then instantiates a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object that passes <ph id="ph3">`dependencyKey`</ph> and the <ph id="ph4">&lt;xref:System.DateTime&gt;</ph> object as parameter arguments.</source>
          <target state="translated">Dies <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> Konstruktor dann instanziiert einen <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> -Objekt, das übergibt <ph id="ph3">`dependencyKey`</ph> und <ph id="ph4">&lt;xref:System.DateTime&gt;</ph> Objekt als Parameterargumente.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> method is called next, using the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object as a parameter.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> Methode wird aufgerufen als Nächstes mit der <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> -Objekt als Parameter.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>This makes the object added to the cache using the <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A&gt;</ph> method dependent on the <ph id="ph2">`key1`</ph> key.</source>
          <target state="translated">Dadurch wird das Objekt hinzugefügt, den Cache mithilfe der <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A&gt;</ph> Methode abhängig von der <ph id="ph2">`key1`</ph> Schlüssel.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>An array of paths (to files or directories) that the cached object is dependent upon.</source>
          <target state="translated">Ein Array von Pfaden (zu Dateien oder Verzeichnissen), von dem das zwischengespeicherte Objekt abhängig ist.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">Wenn eine dieser Ressourcen geändert wird, ist das zwischengespeicherte Objekt veraltet und wird aus dem Cache entfernt.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>An array of cache keys that the new object monitors for changes.</source>
          <target state="translated">Ein Array von Cacheschlüsseln, bei dem Änderungen durch das neue Objekt überwacht werden.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</source>
          <target state="translated">Bei einer Änderung an einem dieser Cacheschlüssel ist das zwischengespeicherte Objekt, das diesem Abhängigkeitsobjekt zugeordnet ist, veraltet und wird aus dem Cache entfernt.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>Another instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that this instance is dependent upon.</source>
          <target state="translated">Eine andere Instanz der <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>-Klasse, von dem diese Instanz abhängig ist.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>-Klasse, die ein Array von Pfaden (zu Dateien oder Verzeichnissen), ein Array von Cacheschlüsseln oder beides auf Änderungen überwacht.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>It also makes itself dependent upon a separate instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class.</source>
          <target state="translated">Außerdem wird eine Abhängigkeit zu einer separaten Instanz der <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>-Klasse hergestellt.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>Also, if any of the directories or files specified in the <ph id="ph1">`filenames`</ph> parameter is not found in the file system, it is treated as missing.</source>
          <target state="translated">Auch wenn die Verzeichnisse oder die angegebenen Dateien in der <ph id="ph1">`filenames`</ph> Parameter wurde nicht gefunden im Dateisystem, wird er als fehlend behandelt.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>If a directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when that directory or file is created.</source>
          <target state="translated">Wenn ein Verzeichnis oder eine Datei nicht vorhanden ist. wenn das Objekt mit der Abhängigkeit wird hinzugefügt der <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, das zwischengespeicherte Objekt daraus die <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> Wenn dieses Verzeichnis oder Datei erstellt wird.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">Nehmen wir beispielsweise an, dass Sie ein Objekt, das Hinzufügen der <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> mit einer Abhängigkeit von den folgenden Dateipfad: c:\stocks\xyz.dat.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">Wenn diese Datei nicht gefunden wurde die <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> Objekt wird erstellt, aber später erstellt wird, wird das zwischengespeicherte Objekt bei der Erstellung der Datei xyz.dat entfernt.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>However, the <ph id="ph1">`cachekeys`</ph> dependency does not work the same way.</source>
          <target state="translated">Allerdings die <ph id="ph1">`cachekeys`</ph> Abhängigkeit kann nicht die gleiche Weise verwendet werden.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>If at least one value in the <ph id="ph1">`cachekeys`</ph> parameter does not exist at the time of an insert, the insert fails.</source>
          <target state="translated">Wenn mindestens ein in Wert der <ph id="ph1">`cachekeys`</ph> Parameter zum Zeitpunkt einer Einfügung nicht vorhanden, der Vorgang schlägt fehl.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>Note that there is no exception thrown for this scenario.</source>
          <target state="translated">Beachten Sie, dass es keine Ausnahme ausgelöst, die für dieses Szenario ist.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>The following code example creates a <ph id="ph1">`CreateDependency`</ph> method.</source>
          <target state="translated">Das folgende Codebeispiel erstellt eine <ph id="ph1">`CreateDependency`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>When this method is called, it uses the <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType&gt;</ph> property to add an item to the cache with a <ph id="ph2">`key`</ph> parameter of <ph id="ph3">`key1`</ph> and a value of <ph id="ph4">`Value 1`</ph>.</source>
          <target state="translated">Wenn diese Methode aufgerufen wird, verwendet der <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft zum Hinzufügen eines Elements in den Cache mit eine <ph id="ph2">`key`</ph> Parameter <ph id="ph3">`key1`</ph> und den Wert <ph id="ph4">`Value 1`</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>An array of strings, <ph id="ph1">`dependencyKey`</ph>, is then created with the value of <ph id="ph2">`key1`</ph> as well.</source>
          <target state="translated">Ein Array von Zeichenfolgen, <ph id="ph1">`dependencyKey`</ph>, wird dann erstellt, wobei der Wert der <ph id="ph2">`key1`</ph> ebenfalls.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor is used to create a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object, <ph id="ph3">`dep1`</ph>, which passes <ph id="ph4">`dependencyKey`</ph> as a parameter argument.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType&gt;</ph> Konstruktor dient zum Erstellen einer <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> Objekt <ph id="ph3">`dep1`</ph>, übergibt <ph id="ph4">`dependencyKey`</ph> als Parameterargument.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>A second <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object, <ph id="ph2">`dep2`</ph>, is created using this constructor, with <ph id="ph3">`dep1`</ph> passed as the third parameter argument.</source>
          <target state="translated">Ein zweites <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> Objekt <ph id="ph2">`dep2`</ph>, wird mit diesem Konstruktor erstellt <ph id="ph3">`dep1`</ph> als drittes Parameterargument übergeben.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>This second dependency is dependent on the first.</source>
          <target state="translated">Diese zweite Abhängigkeit ist abhängig von der ersten.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> method is called next, using the second <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object as a parameter.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> Methode mit dem zweiten als Nächstes heißt <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> -Objekt als Parameter.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>If the first dependency changes in any way, the cached item will be invalidated.</source>
          <target state="translated">Wenn die erste Abhängigkeit in keiner Weise geändert wird, wird das zwischengespeicherte Element für ungültig erklärt.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>An array of paths (to files or directories) that the cached object is dependent upon.</source>
          <target state="translated">Ein Array von Pfaden (zu Dateien oder Verzeichnissen), von dem das zwischengespeicherte Objekt abhängig ist.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">Wenn eine dieser Ressourcen geändert wird, ist das zwischengespeicherte Objekt veraltet und wird aus dem Cache entfernt.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>An array of cache keys that the new object monitors for changes.</source>
          <target state="translated">Ein Array von Cacheschlüsseln, bei dem Änderungen durch das neue Objekt überwacht werden.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</source>
          <target state="translated">Bei einer Änderung an einem dieser Cacheschlüssel ist das zwischengespeicherte Objekt, das diesem Abhängigkeitsobjekt zugeordnet ist, veraltet und wird aus dem Cache entfernt.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>Another instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that this instance is dependent upon.</source>
          <target state="translated">Eine andere Instanz der <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>-Klasse, von dem diese Instanz abhängig ist.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>The time against which to check the last modified date of the objects in the arrays and the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object.</source>
          <target state="translated">Die Zeit, mit der das Datum der letzten Änderung der Objekte in den Arrays und des <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>-Objekts verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>-Klasse, die ein Array von Pfaden (zu Dateien oder Verzeichnissen), ein Array von Cacheschlüsseln oder beides auf Änderungen überwacht.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>It also makes itself dependent upon another instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class and a time when the change monitoring begins.</source>
          <target state="translated">Außerdem wird eine Abhängigkeit zu einer anderen Instanz der <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>-Klasse und einem Zeitpunkt hergestellt, an dem die Änderungsüberwachung beginnt.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>Also, if any of the directories or files specified in the <ph id="ph1">`filenames`</ph> parameter is not found in the file system, it is treated as missing.</source>
          <target state="translated">Auch wenn die Verzeichnisse oder die angegebenen Dateien in der <ph id="ph1">`filenames`</ph> Parameter wurde nicht gefunden im Dateisystem, wird er als fehlend behandelt.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>If a directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when that directory or file is created.</source>
          <target state="translated">Wenn ein Verzeichnis oder eine Datei nicht vorhanden ist. wenn das Objekt mit der Abhängigkeit wird hinzugefügt der <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, das zwischengespeicherte Objekt daraus die <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> Wenn dieses Verzeichnis oder Datei erstellt wird.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">Nehmen wir beispielsweise an, dass Sie ein Objekt, das Hinzufügen der <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> mit einer Abhängigkeit von den folgenden Dateipfad: c:\stocks\xyz.dat.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">Wenn diese Datei nicht gefunden wurde die <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> Objekt wird erstellt, aber später erstellt wird, wird das zwischengespeicherte Objekt bei der Erstellung der Datei xyz.dat entfernt.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>However, the <ph id="ph1">`cachekeys`</ph> dependency does not work the same way.</source>
          <target state="translated">Allerdings die <ph id="ph1">`cachekeys`</ph> Abhängigkeit kann nicht die gleiche Weise verwendet werden.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>If at least one value in the <ph id="ph1">`cachekeys`</ph> parameter does not exist at the time of an insert, the insert fails.</source>
          <target state="translated">Wenn mindestens ein in Wert der <ph id="ph1">`cachekeys`</ph> Parameter zum Zeitpunkt einer Einfügung nicht vorhanden, der Vorgang schlägt fehl.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>Note that there is no exception thrown for this scenario.</source>
          <target state="translated">Beachten Sie, dass es keine Ausnahme ausgelöst, die für dieses Szenario ist.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>Change tracking begins immediately and is not directly based on the <ph id="ph1">`start`</ph> parameter.</source>
          <target state="translated">Nachverfolgen von Änderungen beginnt sofort und basiert nicht direkt auf die <ph id="ph1">`start`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>Use the <ph id="ph1">`start`</ph> parameter to pass a date and time in the past against which you want to check the last modified date of any of the objects passed in the <ph id="ph2">`filenames`</ph>, <ph id="ph3">`cachekeys`</ph>, or <ph id="ph4">`dependency`</ph> parameters.</source>
          <target state="translated">Verwenden der <ph id="ph1">`start`</ph> übergebene Parameter übergeben wird, ein Datum und eine Uhrzeit in der Vergangenheit in der Datum das letzte Änderung der eines der Objekte überprüft werden sollen die <ph id="ph2">`filenames`</ph>, <ph id="ph3">`cachekeys`</ph>, oder <ph id="ph4">`dependency`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>If the last modified date for any of those objects is later than the date and time passed in the <ph id="ph1">`start`</ph> parameter, the cached item is removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">Wenn es sich bei der letzten Änderung für einen Hostobjekte Datum liegt nach dem Datum und Uhrzeit übergeben der <ph id="ph1">`start`</ph> Parameter das zwischengespeicherte Element wird entfernt, von der <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>The following code example shows a <ph id="ph1">`CreateDependency`</ph> method.</source>
          <target state="translated">Das folgende Codebeispiel zeigt eine <ph id="ph1">`CreateDependency`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>When this method is called, it creates a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object and the <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType&gt;</ph> property is used to add an item to the cache with a key parameter of <ph id="ph3">`key1`</ph> and a value of <ph id="ph4">`Value 1`</ph>.</source>
          <target state="translated">Wenn diese Methode aufgerufen wird, erstellt er eine <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> Objekt und die <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft wird verwendet, um ein Element in den Cache mit einem Schlüssel Parameter hinzufügen <ph id="ph3">`key1`</ph> und den Wert <ph id="ph4">`Value 1`</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>An array of strings, <ph id="ph1">`dependencyKey`</ph>, is then created with the value at its first (and only) index set to the value of <ph id="ph2">`key1`</ph> as well.</source>
          <target state="translated">Ein Array von Zeichenfolgen, <ph id="ph1">`dependencyKey`</ph>, wird mit dem Wert auf die erste (und einzige) Index, legen Sie auf den Wert des erstellt <ph id="ph2">`key1`</ph> ebenfalls.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor is then used to create a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object, <ph id="ph3">`dep1`</ph>, which passes <ph id="ph4">`dependencyKey`</ph> as a parameter argument.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType&gt;</ph> Konstruktor wird dann zum Erstellen einer <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> Objekt <ph id="ph3">`dep1`</ph>, übergibt <ph id="ph4">`dependencyKey`</ph> als Parameterargument.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>A second <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object, <ph id="ph2">`dep2`</ph>, is then created using this constructor, with <ph id="ph3">`dep1`</ph> and the <ph id="ph4">&lt;xref:System.DateTime&gt;</ph> object passed as parameter arguments.</source>
          <target state="translated">Ein zweites <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> Objekt <ph id="ph2">`dep2`</ph>, wird dann mit diesem Konstruktor mit erstellt <ph id="ph3">`dep1`</ph> und die <ph id="ph4">&lt;xref:System.DateTime&gt;</ph> Objekt als Parameterargumente übergeben.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>This second dependency is dependent on the first, and dependency monitoring will begin 10 seconds after the <ph id="ph1">`CreateDependency`</ph> method is called.</source>
          <target state="translated">Diese zweite Abhängigkeit ist abhängig von der ersten und Abhängigkeit Überwachung des Webdatenverkehrs beginnt nach 10 Sekunden die <ph id="ph1">`CreateDependency`</ph> -Methode aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> method is called next, using the second <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object as a parameter.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> Methode mit dem zweiten als Nächstes heißt <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> -Objekt als Parameter.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>If the first dependency changes in any way, the cached item will be invalidated.</source>
          <target state="translated">Wenn die erste Abhängigkeit in keiner Weise geändert wird, wird das zwischengespeicherte Element für ungültig erklärt.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.DependencyDispose">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class and any classes that derive from <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>.</source>
          <target state="translated">Gibt die Ressourcen frei, die von der <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>-Klasse sowie allen Klassen verwendet werden, die von <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> abgeleitet sind.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.DependencyDispose">
          <source>Any class that derives from the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class is required to implement this method to clean up resources the derived class has used.</source>
          <target state="translated">Jede Klasse, die von abgeleitet ist die <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> Klasse ist erforderlich, um implementieren Sie diese Methode zum Bereinigen von Ressourcen die abgeleitete Klasse verwendet wurde.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.DependencyDispose">
          <source>The following code example shows a class that inherits from the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class and overrides the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.DependencyDispose%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden Codebeispiel wird gezeigt, eine Klasse, die von erben die <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> -Klasse ab und überschreibt die <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.DependencyDispose%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.DependencyDispose">
          <source>When this method is called, it sets a custom Boolean property named <ph id="ph1">`Disposed`</ph> to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Wenn diese Methode aufgerufen wird, wird eine benutzerdefinierte boolesche Eigenschaft, die mit dem Namen <ph id="ph1">`Disposed`</ph> auf <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.Dispose">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object.</source>
          <target state="translated">Gibt die vom <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>-Objekt verwendeten Ressourcen frei.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.FinishInit">
          <source>Completes initialization of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object.</source>
          <target state="translated">Schließt die Initialisierung des <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>-Objekts ab.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.FinishInit">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.FinishInit%2A&gt;</ph> method completes the initialization of the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.FinishInit%2A&gt;</ph> Methode schließt die Initialisierung der <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.FinishInit">
          <source>This method is called by all <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> constructors.</source>
          <target state="translated">Diese Methode wird aufgerufen, indem alle <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> Konstruktoren.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.FinishInit">
          <source>The <ph id="ph1">&lt;see cref="M:System.Web.Caching.CacheDependency.FinishInit" /&gt;</ph> method must be called at the end of the constructor for derived classes to complete the initialization of the <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="M:System.Web.Caching.CacheDependency.FinishInit" /&gt;</ph> -Methode muss aufgerufen werden, am Ende des Konstruktors für abgeleitete Klassen für die Initialisierung von der <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.GetFileDependencies">
          <source>Gets the file dependencies.</source>
          <target state="translated">Ruft die Dateiabhängigkeiten ab.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.GetFileDependencies">
          <source>The file dependencies.</source>
          <target state="translated">Die Dateiabhängigkeiten.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>Retrieves a unique identifier for a <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object.</source>
          <target state="translated">Ruft einen eindeutigen Bezeichner für ein <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>-Objekt ab.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>The unique identifier for the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object.</source>
          <target state="translated">Der eindeutige Bezeichner für das <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>This method can be particularly useful for tracking multiple instances of the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class associated with an item or an application.</source>
          <target state="translated">Diese Methode ist besonders hilfreich für das Nachverfolgen von mehreren Instanzen von der <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> Klasse ein Element oder einer Anwendung zugeordnet.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>The identifier is a combination of either the file name (for a file dependency) or the key name (for a cache-key dependency) and a string that this method assigns to the dependency.</source>
          <target state="translated">Der Bezeichner ist eine Kombination aus den Dateinamen (für eine Abhängigkeit Datei) oder den Schlüsselnamen (für eine Abhängigkeit Cacheschlüssel) und eine Zeichenfolge, die diese Methode die Abhängigkeit zuweist.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>In classes that derive from the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class, you can override this method to customize how it generates the unique identifier.</source>
          <target state="translated">In abgeleitete Klassen die <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> -Klasse, überschreiben Sie diese Methode, um anzupassen, wie den eindeutigen Bezeichner generiert.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>The following code example creates an <ph id="ph1">&lt;xref:System.Web.Caching.AggregateCacheDependency&gt;</ph> object, named <ph id="ph2">`aggDep`</ph>, with two <ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> objects in its array.</source>
          <target state="translated">Das folgende Codebeispiel erstellt eine <ph id="ph1">&lt;xref:System.Web.Caching.AggregateCacheDependency&gt;</ph> Objekt, mit dem Namen <ph id="ph2">`aggDep`</ph>, mit zwei <ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> Objekte im Array.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>Once <ph id="ph1">`aggDep`</ph> is instantiated, the code calls the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.GetUniqueID%2A&gt;</ph> method to generate a unique identifier for both dependencies that <ph id="ph3">`aggDep`</ph> contains and displays the identifiers to the containing page.</source>
          <target state="translated">Einmal <ph id="ph1">`aggDep`</ph> instanziiert wird, ruft der Code die <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.GetUniqueID%2A&gt;</ph> Methode, um einen eindeutigen Bezeichner für beide Abhängigkeiten zu generieren, die <ph id="ph3">`aggDep`</ph> enthält, und zeigt die IDs auf der Seite an.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>An item is then added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, using the <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Insert%2A&gt;</ph> method, with <ph id="ph3">`aggDep`</ph> as a dependency.</source>
          <target state="translated">Ein Element wird dann hinzugefügt, um die <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>unter Verwendung der <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Insert%2A&gt;</ph> -Methode, mit <ph id="ph3">`aggDep`</ph> als Abhängigkeit.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object has changed.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob sich das <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>-Objekt geändert hat.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object has changed; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn sich das <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>-Objekt geändert hat. Andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source>You can add an item to an ASP.NET application's <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>.</source>
          <target state="translated">Sie können ein Element an einer ASP.NET-Anwendung hinzufügen <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> mit einem <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source>When the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> changes, the item added to the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> is invalidated and removed from the cache.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> geändert wird, handelt es sich bei das hinzugefügten Element der <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> für ungültig erklärt und aus dem Cache entfernt wird.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source>You can use this property to determine whether a <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> has changed, and recreate the item in the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> if that has occurred.</source>
          <target state="translated">Sie können diese Eigenschaft verwenden, um zu bestimmen, ob eine <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> geändert wurde, und erstellen Sie das Element in der <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> Wenn, die aufgetreten ist.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.HasChanged%2A&gt;</ph> property to determine whether a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> changed since the previous request for an item in the <ph id="ph3">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung der <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.HasChanged%2A&gt;</ph> -Eigenschaft können Sie bestimmen, ob eine <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> geändert, seit der vorherigen Anforderung für ein Element in der <ph id="ph3">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source>The <ph id="ph1">`dt`</ph> value passed in the <ph id="ph2">`start`</ph> parameter is set to <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">`dt`</ph> übergebene Wert den <ph id="ph2">`start`</ph> Parametersatz auf <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.ItemRemoved">
          <source>Called when a monitored cache entry is removed.</source>
          <target state="translated">Wird aufgerufen, wenn ein überwachter Cacheeintrag entfernt wird.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.KeepDependenciesAlive">
          <source>Updates the last access time of every cache item that depends on this item.</source>
          <target state="translated">Aktualisiert den Zeitpunkt des letzten Zugriffs von jedem Cacheelement, das von diesem Element abhängig ist.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>The source of the event.</source>
          <target state="translated">Die Quelle des Ereignisses.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> object that contains the event data.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>-Objekt, das die Ereignisdaten enthält.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>Notifies the base <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object that the dependency represented by a derived <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class has changed.</source>
          <target state="translated">Benachrichtigt das Basis-<ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>-Objekt darüber, dass die durch eine abgeleitete <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>-Klasse dargestellte Abhängigkeit geändert wurde.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>Any class that derives from the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class must implement this method.</source>
          <target state="translated">Jede Klasse, die von abgeleitet ist die <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> Klasse muss diese Methode implementieren.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>When you derive from the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class, you use the base functionality of any method or property that you have not overridden.</source>
          <target state="translated">Beim Ableiten von der <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> -Klasse, verwenden Sie die Basisfunktionalität eine beliebige Methode oder Eigenschaft, die Sie nicht außer Kraft gesetzt haben.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>When you create an instance of the derived class, it represents the files, cache keys, database tables, or other arbitrary objects that you want to make a cached item dependent upon.</source>
          <target state="translated">Wenn Sie eine Instanz der abgeleiteten Klasse erstellen, stellt es die Dateien, Cacheschlüssel, Datenbanktabellen oder andere beliebige Objekte, denen ein zwischengespeichertes Elements von abhängig machen möchten.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>When a dependency item changes, this method notifies the base functionality of the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class that the item has changed, so that the values of the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.HasChanged%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency.UtcLastModified%2A&gt;</ph> properties can be updated.</source>
          <target state="translated">Wenn eine Abhängigkeit geändert wird, wird diese Methode die Basisfunktionalität benachrichtigt die <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> -Klasse, die das Element geändert wurde, so, dass die Werte der der <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.HasChanged%2A&gt;</ph> und <ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency.UtcLastModified%2A&gt;</ph> Eigenschaften können aktualisiert werden.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>The following code example shows a class that inherits from the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class.</source>
          <target state="translated">Im folgenden Codebeispiel wird gezeigt, eine Klasse, die von erben die <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>It creates a public method, <ph id="ph1">`ResetDependency`</ph>, that uses the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A&gt;</ph> method to change the time at which the dependency was modified, and then calls the <ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A&gt;</ph> method.</source>
          <target state="translated">Erstellt eine öffentliche Methode <ph id="ph1">`ResetDependency`</ph>, verwendet der <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A&gt;</ph> -Methode, um die Uhrzeit zu ändern, zu dem die Abhängigkeit geändert wurde, und ruft dann die <ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.SetCacheDependencyChanged(System.Action{System.Object,System.EventArgs})">
          <source>The dependency changed action.</source>
          <target state="translated">Die Änderungsaktion für die Abhängigkeit.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.SetCacheDependencyChanged(System.Action{System.Object,System.EventArgs})">
          <source>Adds an Action method to handle notifying interested party in changes to this dependency.</source>
          <target state="translated">Fügt eine Aktionsmethode zum Behandeln von Benachrichtigungen der beteiligten Partei über Änderungen an dieser Abhängigkeit hinzu.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.SetUtcLastModified(System.DateTime)">
          <source>The time when the dependency last changed.</source>
          <target state="translated">Die Zeit, zu der die Abhängigkeit zuletzt geändert wurde.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.SetUtcLastModified(System.DateTime)">
          <source>Marks the time when a dependency last changed.</source>
          <target state="translated">Markiert die Zeit, zu der eine Abhängigkeit zuletzt geändert wurde.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.SetUtcLastModified(System.DateTime)">
          <source>The following code example shows a class that inherits from the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class.</source>
          <target state="translated">Im folgenden Codebeispiel wird gezeigt, eine Klasse, die von erben die <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.SetUtcLastModified(System.DateTime)">
          <source>It creates a public method, <ph id="ph1">`ResetDependency`</ph>, that uses the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A&gt;</ph> method to change the time at which the dependency was modified, and then calls the <ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A&gt;</ph> method.</source>
          <target state="translated">Erstellt eine öffentliche Methode <ph id="ph1">`ResetDependency`</ph>, verwendet der <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A&gt;</ph> -Methode, um die Uhrzeit zu ändern, zu dem die Abhängigkeit geändert wurde, und ruft dann die <ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.TakeOwnership">
          <source>Allows the first user to declare exclusive ownership of this dependency.</source>
          <target state="translated">Ermöglicht es dem ersten Benutzer, den exklusiven Besitz dieser Abhängigkeit zu deklarieren.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.TakeOwnership">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph><ph id="ph2">
</ph><ph id="ph3">&lt;see langword="true" /&gt;</ph> if the item was the first to take ownership otherwise <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph><ph id="ph2">
</ph><ph id="ph3">&lt;see langword="true" /&gt;</ph>, wenn der Besitz für das Element durch den ersten Zugriff bestimmt wird, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.TakeOwnership">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.TakeOwnership">
          <source>This method declares that the dependency is used.</source>
          <target state="translated">Diese Methode deklariert, dass die Abhängigkeit verwendet wird.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.TakeOwnership">
          <source>If another item previously called this method and took ownership, <ph id="ph1">`false`</ph> is returned.</source>
          <target state="translated">Wenn ein anderes Element zuvor diese Methode aufgerufen wird und übernommen, <ph id="ph1">`false`</ph> wird zurückgegeben.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.TakeOwnership">
          <source>A  <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> can only be used by one cache entry.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> kann nur verwendet werden, indem ein Cacheeintrag.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.TakeOwnership">
          <source>When an item is added to a cache with any cache dependencies specified, the cache should take ownership of those dependencies to make sure that they are not reused somewhere else.</source>
          <target state="translated">Wenn ein Element in einen Cache mit Abhängigkeiten Cache angegeben hinzugefügt wird, sollte der Cache Besitz solcher Abhängigkeiten, um sicherzustellen, dass sie an einer beliebigen Stelle nicht else wiederverwendet werden.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="P:System.Web.Caching.CacheDependency.UtcLastModified">
          <source>Gets the time when the dependency was last changed.</source>
          <target state="translated">Ruft die Zeit ab, zu der die Abhängigkeit zuletzt geändert wurde.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.UtcLastModified">
          <source>The time when the dependency was last changed.</source>
          <target state="translated">Die Zeit, zu der die Abhängigkeit zuletzt geändert wurde.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.UtcLastModified">
          <source>This property is measured in Coordinated Universal Time (UTC) (also known as Greenwich Mean Time).</source>
          <target state="translated">Diese Eigenschaft wird in Coordinated Universal Time (UTC) (auch bekannt als Greenwich Mean Time) gemessen.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.UtcLastModified">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Web.Caching.AggregateCacheDependency&gt;</ph> class to add an item, with two <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object dependencies, to the <ph id="ph3">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">Im folgenden Codebeispiel wird mit der <ph id="ph1">&lt;xref:System.Web.Caching.AggregateCacheDependency&gt;</ph> Klasse zum Hinzufügen eines Elements, mit zwei <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> -Objekt Abhängigkeiten, die <ph id="ph3">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.UtcLastModified">
          <source>When a request for the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> item is made, the code checks whether the item is in the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">Wenn eine Anforderung für die <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> Element erfolgt, der Code überprüft, ob das Element in der <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.UtcLastModified">
          <source>If it is, the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.UtcLastModified%2A&gt;</ph> property is converted to a string and displayed on the page.</source>
          <target state="translated">Wenn dies der Fall, die <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.UtcLastModified%2A&gt;</ph> Eigenschaft in eine Zeichenfolge konvertiert und auf der Seite angezeigt wird.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.UtcLastModified">
          <source>If it is not, the item and its two dependencies are created and added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">Wenn es nicht der Fall ist, das Element und seine zwei Abhängigkeiten erstellt und hinzugefügt die <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>