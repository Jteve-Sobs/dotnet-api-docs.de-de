<Type Name="Cache" FullName="System.Web.Caching.Cache">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9898a825a2e90770ebcff9ce24b2c6b0485fddff" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52201117" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Cache : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Cache extends System.Object implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Caching.Cache" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Cache&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Cache sealed : System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type Cache = class&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Implementiert den Cache für eine Webanwendung. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Instanz dieser Klasse wird pro Anwendungsdomäne erstellt, und es bleibt gültig, solange die Anwendungsdomäne aktiv bleibt. Informationen zu einer Instanz dieser Klasse steht über den `Cache` Eigenschaft der <xref:System.Web.HttpContext> Objekt oder die `Cache` Eigenschaft der <xref:System.Web.UI.Page> Objekt.  
  
> [!NOTE]
>  Die <xref:System.Web.Caching.Cache> Klasse ist nicht vorgesehen, für die Verwendung außerhalb von ASP.NET-Anwendungen. Es wurde entworfen und getestet werden, für die Verwendung in ASP.NET für das Zwischenspeichern für Webanwendungen zu ermöglichen. Verwenden Sie für andere Arten von Anwendungen, z. B. konsolenanwendungen oder Windows Forms-Anwendungen, die <xref:System.Runtime.Caching.ObjectCache> Klasse.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Seite, die Benutzer ein Element im Cache zugewiesenen Wert angezeigt, und benachrichtigt sie dann, wenn das Element aus dem Cache entfernt wird. Erstellt eine `RemovedCallback` -Methode, die die Signatur wurde von der `CacheItemRemovedCallback` Delegat, der nach Benutzer benachrichtigen, wenn das Element im Cache entfernt, und er verwendet die <xref:System.Web.Caching.CacheItemRemovedReason> Enumeration zum erzählen, weshalb es entfernt wurde. Darüber hinaus verwendet er die <xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType> Eigenschaft, um Objekte in den Cache hinzufügen und Abrufen des Werts dieser Objekte. In der `AddItemToCache` -Methode, die es verwendet die <xref:System.Web.Caching.Cache.Add%2A?displayProperty=nameWithType> Methode, um ein Element mit dem Cache hinzuzufügen. Verwenden der `CacheItemRemovedCallback` zu delegieren, müssen Sie ein Element mit dem Cache hinzufügen, mit dieser Methode oder der <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> Methode so, dass ASP.NET automatisch die richtige Methode vornehmen, können aufgerufen werden, wenn das Element entfernt wird. Die benutzerdefinierte `RemoveItemFromCache` -Methode verwendet die <xref:System.Web.Caching.Cache.Remove%2A?displayProperty=nameWithType> Methode, um das Element explizit aus dem Cache löschen verursacht die `RemovedCallback` Methode aufgerufen wird.  
  
> [!NOTE]
>  Die Instanz des Caches, der von den folgenden Codeausschnitt zugegriffen wird, ist ein Mitglied der <xref:System.Web.UI.Page> Objekt, das in diesem Beispiel erbt.  
  
 [!code-aspx-csharp[System.Web.Caching Examples#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#1)]
 [!code-aspx-vb[System.Web.Caching Examples#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#1)]
  
 ]]></format>
    </remarks>
    <threadsafe>Dieser Typ ist threadsicher.</threadsafe>
    <altmember cref="T:System.Web.HttpContext" />
    <altmember cref="T:System.Web.Caching.CacheDependency" />
    <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
    <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Zwischenspeichern von Anwendungsdaten</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Caching.Cache" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public object Add (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemPriority priority, System.Web.Caching.CacheItemRemovedCallback onRemoveCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Add(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, valuetype System.Web.Caching.CacheItemPriority priority, class System.Web.Caching.CacheItemRemovedCallback onRemoveCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan, priority As CacheItemPriority, onRemoveCallback As CacheItemRemovedCallback) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Add(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System::Web::Caching::CacheItemPriority priority, System::Web::Caching::CacheItemRemovedCallback ^ onRemoveCallback);" />
      <MemberSignature Language="F#" Value="member this.Add : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan * System.Web.Caching.CacheItemPriority * System.Web.Caching.CacheItemRemovedCallback -&gt; obj" Usage="cache.Add (key, value, dependencies, absoluteExpiration, slidingExpiration, priority, onRemoveCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Web.Caching.CacheItemPriority" />
        <Parameter Name="onRemoveCallback" Type="System.Web.Caching.CacheItemRemovedCallback" />
      </Parameters>
      <Docs>
        <param name="key">Der Cacheschlüssel, mit dem auf das Element verwiesen wird.</param>
        <param name="value">Das Element, das dem Cache hinzugefügt werden soll.</param>
        <param name="dependencies">Die Datei- oder Cacheschlüsselabhängigkeiten des Elements. Wenn sich eine der Abhängigkeiten ändert, wird das Objekt ungültig und aus dem Cache entfernt. Wenn keine Abhängigkeiten bestehen, enthält dieser Parameter <see langword="null" />.</param>
        <param name="absoluteExpiration">Der Zeitpunkt, an dem das hinzugefügte Objekt abläuft und aus dem Cache entfernt wird. Wenn Sie die gleitende Ablaufzeit verwenden, muss der <paramref name="absoluteExpiration" />-Parameter <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" /> sein.</param>
        <param name="slidingExpiration">Das Intervall zwischen dem letzten Zugreifen auf das hinzugefügte Objekt und dem Ablaufen des Objekts. Wenn dieser Wert 20 Minuten entspricht, läuft das Objekt 20 Minuten nach dem zuletzt erfolgten Zugriff ab und wird aus dem Cache entfernt. Wenn Sie die absolute Ablaufzeit verwenden, muss der <paramref name="slidingExpiration" />-Parameter <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" /> sein.</param>
        <param name="priority">Die relative Priorität des Objekts, die durch die <see cref="T:System.Web.Caching.CacheItemPriority" />-Enumeration ausgedrückt wird. Der Cache verwendet diesen Wert beim Entfernen von Objekten. Objekte mit niedrigerer Priorität werden vor Objekten mit höherer Priorität aus dem Cache entfernt.</param>
        <param name="onRemoveCallback">Wenn bereitgestellt, ein Delegat, der beim Entfernen eines Objekts aus dem Cache aufgerufen wird. Hiermit können Sie Anwendungen benachrichtigen lassen, wenn zugehörige Objekte aus dem Cache gelöscht werden.</param>
        <summary>Fügt dem <see cref="T:System.Web.Caching.Cache" />-Objekt das angegebene Element mit Abhängigkeiten, Ablauf- und Prioritätsrichtlinien sowie einem Delegaten hinzu, mit dem die Anwendung über das Entfernen des eingefügten Elements aus dem<see langword="Cache" /> benachrichtigt werden kann.</summary>
        <returns>Ein Objekt, das das Element darstellt, das hinzugefügt wurde, wenn das Element zuvor im Cache gespeichert wurde, andernfalls <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aufrufe dieser Methode schlägt fehl, wenn ein Element mit dem gleichen `key` Parameter befindet sich bereits in der `Cache`. Zum Überschreiben einer vorhandenen `Cache` Element mit dem gleichen `key` verwenden die <xref:System.Web.Caching.Cache.Insert%2A> Methode.  
  
 Sie können nicht zusammen festgelegt die `absoluteExpiration` und `slidingExpiration` Parameter. Wenn Sie das Element im Cache ablaufen zu einem bestimmten Zeitpunkt möchten, legen Sie die `absoluteExpiration` Parameter, um die Uhrzeit, und die `slidingExpiration` Parameter <xref:System.Web.Caching.Cache.NoSlidingExpiration>.  
  
 Wenn Sie beabsichtigen, dass das Element im Cache nach einem bestimmten Zeitraum abläuft, ist abgelaufen, seit des letzten Zugriffs auf das Element, legen Sie die `slidingExpiration` Parameter, um das Ablaufintervall und `absoluteExpiration` Parameter <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine `AddItemToCache` Methode. Wenn diese Methode aufgerufen wird, wird ein `itemRemoved` Eigenschaft `false` und registriert eine `onRemove` Methode durch eine neue Instanz der der <xref:System.Web.Caching.CacheItemRemovedCallback> delegieren. Die Signatur des Delegaten werden in der `RemovedCallback` Methode. Die `AddItemToCache` Methode überprüft dann den Wert der `Key1` Schlüssel im Cache. Wenn der Wert ist `null`, `Add` -Methode setzt ein Element im Cache mit einem Schlüssel von `Key1`, einen Wert von `Value 1`, ein absoluter Ablauf von 60 Sekunden, und eine hohe datenbankcacheprioritäten. Darüber hinaus verwendet er die `onRemove` Methode als Argument. Dadurch wird die `RemovedCallback` -Methode aufgerufen wird, wenn dieses Element aus dem Cache entfernt wird.  
  
> [!NOTE]
>  Beispiele zur Verwendung der <xref:System.Web.Caching.CacheDependency> Klasse und die <xref:System.Web.Caching.CacheItemRemovedCallback> delegieren, finden Sie unter [Zwischenspeichern von Anwendungsdaten](https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)).  
  
 [!code-csharp[System.Web.Caching Examples#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#3)]
 [!code-vb[System.Web.Caching Examples#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="key" />-Parameter oder der <paramref name="value" />-Parameter ist auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="slidingExpiration" />-Parameter ist auf einen Wert festgelegt, der kleiner als <see langword="TimeSpan.Zero" /> ist oder mehr als ein Jahr beträgt.</exception>
        <exception cref="T:System.ArgumentException">Für das Element, das Sie dem <see langword="Cache" /> hinzufügen möchten, sind sowohl der <paramref name="absoluteExpiration" />-Parameter als auch der <paramref name="slidingExpiration" />-Parameter festgelegt.</exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
        <altmember cref="T:System.Web.Caching.CacheItemPriority" />
        <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Zwischenspeichern von Anwendungsdaten</related>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.Caching.Cache.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Elemente im Cache ab.</summary>
        <value>Die Anzahl der im Cache gespeicherten Elemente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft kann bei der Überwachung der Leistung Ihrer Anwendung oder bei Verwendung von ASP.NET Ablaufverfolgungsfunktionen nützlich sein.  
  
   
  
## Examples  
 Im folgende Beispiel ruft den Wert ab der `Count` -Eigenschaft in eine Zeichenfolge konvertiert, und weist Sie die Zeichenfolge, die die <xref:System.Web.UI.WebControls.Label.Text%2A> Eigenschaft eine <xref:System.Web.UI.WebControls.Label> Webserver-Steuerelement, `Label1`.  
  
 [!code-csharp[System.Web.Caching.Cache.Count#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.Cache.Count/CS/cachecountcs.aspx#1)]
 [!code-vb[System.Web.Caching.Cache.Count#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.Cache.Count/VB/cachecountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EffectivePercentagePhysicalMemoryLimit">
      <MemberSignature Language="C#" Value="public long EffectivePercentagePhysicalMemoryLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 EffectivePercentagePhysicalMemoryLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EffectivePercentagePhysicalMemoryLimit As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long EffectivePercentagePhysicalMemoryLimit { long get(); };" />
      <MemberSignature Language="F#" Value="member this.EffectivePercentagePhysicalMemoryLimit : int64" Usage="System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Prozentsatz des physischen Arbeitsspeichers ab, der von einer Anwendung verbraucht werden kann, bevor ASP.NET damit beginnt, Elemente aus dem Cache zu entfernen.</summary>
        <value>Der Prozentsatz des für die Anwendung verfügbaren physischen Arbeitsspeichers.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A> -Eigenschaft gibt den Prozentsatz des physischen Speichers, der für die Anwendung verfügbar ist. Wenn der Prozentsatz der verfügbaren nahezu erschöpft ist, wird das Entfernen von Elementen aus dem Cache.  
  
 Die <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A> Eigenschaft kann festgelegt werden, mit der `percentagePhysicalMemoryUsedLimit` Attribut der [cache-Element für caching ((ASP.NET Einstellungsschema)](https://msdn.microsoft.com/library/68fa0040-5abf-4c73-93fc-17e3c6af3299) Element in der Anwendungskonfigurationsdatei. Wenn die `percentagePhysicalMemoryUsedLimit` Attribut nicht festgelegt ist, der Cachealgorithmus bestimmt die maximale Größe des Caches, und die <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A> -Eigenschaft berechnet wird.  
  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      </Docs>
    </Member>
    <Member MemberName="EffectivePrivateBytesLimit">
      <MemberSignature Language="C#" Value="public long EffectivePrivateBytesLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 EffectivePrivateBytesLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EffectivePrivateBytesLimit As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long EffectivePrivateBytesLimit { long get(); };" />
      <MemberSignature Language="F#" Value="member this.EffectivePrivateBytesLimit : int64" Usage="System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Bytes ab, die für den Cache zur Verfügung steht.</summary>
        <value>Die Anzahl von Bytes, die für den Cache zur Verfügung steht.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A> Eigenschaft gibt die Anzahl der Bytes, die von der der Anwendungsprozess verwendet werden kann. Sobald dieser Grenzwert erreicht ist, beginnt der Cachealgorithmus Aufräumvorgang aggressiv auf den Cache.  
  
 Die <xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A> Eigenschaft kann festgelegt werden, mit der `privateBytesLimit` Attribut der [cache-Element für caching ((ASP.NET Einstellungsschema)](https://msdn.microsoft.com/library/68fa0040-5abf-4c73-93fc-17e3c6af3299) Element in der Anwendungskonfigurationsdatei. Wenn die `privateBytesLimit` Attribut nicht festgelegt ist, der Cachealgorithmus bestimmt die maximale Größe des Caches, und die <xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A> Eigenschaft enthält die Größe, die vom Algorithmus ausgewählt.  
  
   
  
## Examples  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public object Get (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Get(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Get(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.Get : string -&gt; obj" Usage="cache.Get key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Bezeichner des abzurufenden Elements im Cache.</param>
        <summary>Ruft das angegebene Element aus dem <see cref="T:System.Web.Caching.Cache" />-Objekt ab.</summary>
        <returns>Das abgerufene Element im Cache oder <see langword="null" />, wenn der Schlüssel nicht gefunden wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie zum Abrufen des Werts für ein ASP.NET-Serversteuerelement für Text Box zwischengespeichert wird.  
  
 [!code-csharp[Classic Cache.Get Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Get Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Get Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Get Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Zwischenspeichern von Anwendungsdaten</related>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="cache.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft einen Wörterbuchenumerator ab, der für das Durchlaufen der Schlüsseleinstellungen und ihrer Werte im Cache verwendet wird.</summary>
        <returns>Ein Enumerator zum Durchlaufen des <see cref="T:System.Web.Caching.Cache" />-Objekts.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Elemente können hinzugefügt oder aus dem Cache entfernt werden, solange die Elemente dieser Methode durchläuft.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Collections.IDictionaryEnumerator> Objekt `CacheEnum`unter Verwendung der `GetEnumerator` Methode. Der Enumerator durchläuft den Cache konvertiert den Wert der einzelnen Elemente in eine Zeichenfolge und schreibt dann die Werte in einer Web Forms-Seite.  
  
 [!code-csharp[Cache.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Cache.GetEnumerator/CS/getenumcs.aspx#1)]
 [!code-vb[Cache.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Cache.GetEnumerator/VB/getenumvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Insert">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt ein Element in das <see cref="T:System.Web.Caching.Cache" />-Objekt ein. Verwenden Sie eine der Versionen dieser Methode, um ein vorhandenes <see langword="Cache" />-Element durch denselben <paramref name="key" />-Parameter zu überschreiben.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj -&gt; unit" Usage="cache.Insert (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">Der Cacheschlüssel, mit dem auf das Element verwiesen wird.</param>
        <param name="value">Das Objekt, das in den Cache eingefügt werden soll.</param>
        <summary>Fügt ein Element mit einem Cacheschlüssel, der auf den Speicherort verweist, in das <see cref="T:System.Web.Caching.Cache" />-Objekt ein, wobei von der <see cref="T:System.Web.Caching.CacheItemPriority" />-Enumeration bereitgestellte Standardwerte verwendet werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode überschreibt ein vorhandenes Cacheelement, dessen Schlüssel entspricht, der `key` Parameter. Das Objekt im Cache, die mit dieser Überladung der der `Insert` Methode eingefügt wird, ohne Datei- oder Abhängigkeiten, eine Priorität von <xref:System.Web.Caching.CacheItemPriority.Default>, einen gleitenden Ablaufwert, der <xref:System.Web.Caching.Cache.NoSlidingExpiration>, und eines absoluten Ablaufwerts von <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie ein Element in einer Anwendung den Cache eingefügt wird.  
  
 [!code-csharp[Classic Cache.Insert Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="key" />-Parameter oder der <paramref name="value" />-Parameter ist <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Zwischenspeichern von Anwendungsdaten</related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency -&gt; unit" Usage="cache.Insert (key, value, dependencies)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
      </Parameters>
      <Docs>
        <param name="key">Der Cacheschlüssel, mit dem das Element angegeben wird.</param>
        <param name="value">Das Objekt, das in den Cache eingefügt werden soll.</param>
        <param name="dependencies">Die Datei- oder Cacheschlüsselabhängigkeiten des eingefügten Objekts. Wenn sich eine der Abhängigkeiten ändert, wird das Objekt ungültig und aus dem Cache entfernt. Wenn keine Abhängigkeiten bestehen, enthält dieser Parameter <see langword="null" />.</param>
        <summary>Fügt ein Objekt in den <see cref="T:System.Web.Caching.Cache" /> ein, das Datei- oder Schlüsselabhängigkeiten besitzt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode überschreibt ein vorhandenes Cacheelement, dessen Schlüssel entspricht, der `key` Parameter. Das Objekt im Cache, die mit dieser Überladung der der `Insert` Methode eingefügt wird, ohne Datei- oder Abhängigkeiten, eine Priorität von <xref:System.Web.Caching.CacheItemPriority.Default>, einen gleitenden Ablaufwert, der <xref:System.Web.Caching.Cache.NoSlidingExpiration>, und eines absoluten Ablaufwerts von <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>.  
  
   
  
## Examples  
 Im folgende Beispiel wird veranschaulicht, wie Sie ein Element in den Cache einer Anwendung mit einer Cacheabhängigkeit für eine XML-Konfigurationsdatei einfügen.  
  
 [!code-csharp[Classic Cache.Insert1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert1 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="key" />-Parameter oder der <paramref name="value" />-Parameter ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan -&gt; unit" Usage="cache.Insert (key, value, dependencies, absoluteExpiration, slidingExpiration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="key">Der Cacheschlüssel, mit dem auf das Objekt verwiesen wird.</param>
        <param name="value">Das Objekt, das in den Cache eingefügt werden soll.</param>
        <param name="dependencies">Die Datei- oder Cacheschlüsselabhängigkeiten des eingefügten Objekts. Wenn sich eine der Abhängigkeiten ändert, wird das Objekt ungültig und aus dem Cache entfernt. Wenn keine Abhängigkeiten bestehen, enthält dieser Parameter <see langword="null" />.</param>
        <param name="absoluteExpiration">Der Zeitpunkt, an dem das eingefügte Objekt abläuft und aus dem Cache entfernt wird. Um mögliche Probleme mit der lokalen Zeit zu vermeiden, z. B. Änderungen von der Standardzeit zur Sommerzeit, verwenden Sie für diesen Parameterwert <see cref="P:System.DateTime.UtcNow" /> statt <see cref="P:System.DateTime.Now" />. Wenn Sie die absolute Ablaufzeit verwenden, muss der <paramref name="slidingExpiration" />-Parameter <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" /> sein.</param>
        <param name="slidingExpiration">Der Zeitraum zwischen dem Zeitpunkt des letzten Zugriffs auf das eingefügte Objekt und dem Zeitpunkt des Ablaufs dieses Objekts. Wenn dieser Wert 20 Minuten entspricht, läuft das Objekt 20 Minuten nach dem letzten Zugriff ab und wird aus dem Cache entfernt. Wenn Sie die gleitende Ablaufzeit verwenden, muss der <paramref name="absoluteExpiration" />-Parameter <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" /> sein.</param>
        <summary>Fügt ein Objekt mit Abhängigkeiten und Ablaufrichtlinien in den <see cref="T:System.Web.Caching.Cache" /> ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode überschreibt eine vorhandene `Cache` Element mit dem gleichen `key` Parameter.  
  
 Wenn die `slidingExpiration` Parametersatz zu <xref:System.Web.Caching.Cache.NoSlidingExpiration>, gleitende Ablaufzeit ist deaktiviert. Setzen Sie die `slidingExpiration` Parameter größer als <xref:System.TimeSpan.Zero>, wird die `absoluteExpiration` Parametersatz zu <xref:System.DateTime.Now%2A> sowie den Wert im der `slidingExpiration` Parameter. Wenn das Element aus dem Cache, bevor Sie die Zeitspanne, die gemäß angefordert wird der `absoluteExpiration` Parameter das Element wird in diesem Fall im Cache platziert werden und `absoluteExpiration` erneut festgelegt `DateTime.Now` sowie den Wert im der `slidingExpiration` Parameter. Wenn das Element nicht aus dem Cache, vor dem Datum in angefordert wird der `absoluteExpiration` Parameter, der das Element aus dem Cache entfernt wird. sein. Das Element dem Cache, die mit dieser Überladung der Insert-Methode hinzugefügt wird eingefügt, mit der Priorität <xref:System.Web.Caching.CacheItemPriority.Default>.  
  
   
  
## Examples  
 Im folgende Beispiel wird veranschaulicht, wie Sie ein Element in den Cache einer Anwendung mit einer absoluten Ablaufzeit einfügen.  
  
> [!NOTE]
>  Da diese Form der der `Insert` Methode unterstützt cacheabhängigkeiten aus, wenn das Element keine Abhängigkeiten aufweist, müssen Sie deklarieren die `dependency` Parameter als `null` (`Nothing` in Visual Basic) in der durch Trennzeichen getrennte Liste von Parametern.  
  
 [!code-csharp[Classic Cache.Insert2 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert2 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert2 Example/VB/source.vb#1)]  
  
 Im folgenden Beispiel wird veranschaulicht, wie ein Element mit einer gleitenden Ablaufzeit in den Cache eingefügt wird.  
  
 [!code-csharp[Classic Cache.Insert2 Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert2 Example/CS/source.cs#2)]
 [!code-vb[Classic Cache.Insert2 Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert2 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="key" />-Parameter oder der <paramref name="value" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="slidingExpiration" />-Parameter wurde auf weniger als <see langword="TimeSpan.Zero" /> oder die Entsprechung von mehr als einem Jahr fest.</exception>
        <exception cref="T:System.ArgumentException">Für das Element, das Sie dem <see langword="Cache" /> hinzufügen möchten, sind sowohl der <paramref name="absoluteExpiration" />-Parameter als auch der <paramref name="slidingExpiration" />-Parameter festgelegt.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Zwischenspeichern von Anwendungsdaten</related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemUpdateCallback onUpdateCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, class System.Web.Caching.CacheItemUpdateCallback onUpdateCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemUpdateCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan, onUpdateCallback As CacheItemUpdateCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System::Web::Caching::CacheItemUpdateCallback ^ onUpdateCallback);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan * System.Web.Caching.CacheItemUpdateCallback -&gt; unit" Usage="cache.Insert (key, value, dependencies, absoluteExpiration, slidingExpiration, onUpdateCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
        <Parameter Name="onUpdateCallback" Type="System.Web.Caching.CacheItemUpdateCallback" />
      </Parameters>
      <Docs>
        <param name="key">Der Cacheschlüssel, mit dem auf das Objekt verwiesen wird.</param>
        <param name="value">Das Objekt, das in den Cache eingefügt werden soll.</param>
        <param name="dependencies">Die Datei- oder Cacheschlüsselabhängigkeiten des Elements. Wenn sich eine der Abhängigkeiten ändert, wird das Objekt ungültig und aus dem Cache entfernt. Wenn keine Abhängigkeiten bestehen, enthält dieser Parameter <see langword="null" />.</param>
        <param name="absoluteExpiration">Der Zeitpunkt, an dem das eingefügte Objekt abläuft und aus dem Cache entfernt wird. Um mögliche Probleme mit der lokalen Zeit zu vermeiden, z. B. Änderungen von der Standardzeit zur Sommerzeit, verwenden Sie für diesen Parameterwert <see cref="P:System.DateTime.UtcNow" /> statt <see cref="P:System.DateTime.Now" />. Wenn Sie die absolute Ablaufzeit verwenden, muss der <paramref name="slidingExpiration" />-Parameter auf <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" /> festgelegt werden.</param>
        <param name="slidingExpiration">Das Intervall zwischen dem letzten Zugriff auf das zwischengespeicherte Objekt und dem Ablaufzeitpunkt des Objekts. Wenn dieser Wert 20 Minuten entspricht, läuft das Objekt 20 Minuten nach dem letzten Zugriff ab und wird aus dem Cache entfernt. Wenn Sie die gleitende Ablaufzeit verwenden, muss der <paramref name="absoluteExpiration" />-Parameter auf <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" /> festgelegt werden.</param>
        <param name="onUpdateCallback">Ein Delegat, der vor dem Entfernen eines Objekts aus dem Cache aufgerufen wird. Hiermit kann das zwischengespeicherte Element aktualisiert und sichergestellt werden, dass es nicht aus dem Cache entfernt wird.</param>
        <summary>Fügt ein Objekt in das <see cref="T:System.Web.Caching.Cache" />-Objekt mit Abhängigkeiten, Ablaufrichtlinien sowie einem Delegaten ein, mit dem die Anwendung vor dem Entfernen des Elements aus dem Cache benachrichtigt werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Caching.Cache.Insert%2A> Methode können Sie ein neues Element im Cache einfügen, und geben Sie einen Delegaten, der aufgerufen wird, bevor das Element aus dem Cache entfernt wird. In den Delegaten können Sie das zwischengespeicherte Element aktualisiert und dadurch verhindern, dass er aus dem Cache entfernt wird.  
  
 Diese Methode überschreibt eine vorhandene `Cache` Element mit dem gleichen `key` Parameter.  
  
 Sie können nicht zusammen festgelegt die `absoluteExpiration` und `slidingExpiration` Parameter. Wenn Sie das Element im Cache ablaufen zu einem bestimmten Zeitpunkt möchten, legen Sie die `absoluteExpiration` Parameter, um die Uhrzeit, und die `slidingExpiration` Parameter <xref:System.Web.Caching.Cache.NoSlidingExpiration>.  
  
 Wenn Sie beabsichtigen, dass das Element im Cache läuft nach einer festgelegten Dauer der Zeit seit dem Element zuletzt zugegriffen wurde, legen Sie die `slidingExpiration` Parametersatz Ablaufintervall, und Sie die `absoluteExpiration` Parameter <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der Parameter <paramref name="key" />, <paramref name="value" /> oder <paramref name="onUpdateCallback" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="slidingExpiration" />-Parameter wurde auf weniger als <see langword="TimeSpan.Zero" /> oder die Entsprechung von mehr als einem Jahr fest.</exception>
        <exception cref="T:System.ArgumentException">Für das Element, das Sie dem <see langword="Cache" /> hinzufügen möchten, sind sowohl der <paramref name="absoluteExpiration" />-Parameter als auch der <paramref name="slidingExpiration" />-Parameter festgelegt.  
  
- oder -  
Der <paramref name="dependencies" />-Parameter ist <see langword="null" />, der <paramref name="absoluteExpiration" />-Parameter ist auf <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" /> festgelegt, und der <paramref name="slidingExpiration" />-Parameter ist auf <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" /> festgelegt.</exception>
        <altmember cref="T:System.Web.Caching.CacheItemUpdateCallback" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemPriority priority, System.Web.Caching.CacheItemRemovedCallback onRemoveCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, valuetype System.Web.Caching.CacheItemPriority priority, class System.Web.Caching.CacheItemRemovedCallback onRemoveCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan, priority As CacheItemPriority, onRemoveCallback As CacheItemRemovedCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System::Web::Caching::CacheItemPriority priority, System::Web::Caching::CacheItemRemovedCallback ^ onRemoveCallback);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan * System.Web.Caching.CacheItemPriority * System.Web.Caching.CacheItemRemovedCallback -&gt; unit" Usage="cache.Insert (key, value, dependencies, absoluteExpiration, slidingExpiration, priority, onRemoveCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Web.Caching.CacheItemPriority" />
        <Parameter Name="onRemoveCallback" Type="System.Web.Caching.CacheItemRemovedCallback" />
      </Parameters>
      <Docs>
        <param name="key">Der Cacheschlüssel, mit dem auf das Objekt verwiesen wird.</param>
        <param name="value">Das Objekt, das in den Cache eingefügt werden soll.</param>
        <param name="dependencies">Die Datei- oder Cacheschlüsselabhängigkeiten des Elements. Wenn sich eine der Abhängigkeiten ändert, wird das Objekt ungültig und aus dem Cache entfernt. Wenn keine Abhängigkeiten bestehen, enthält dieser Parameter <see langword="null" />.</param>
        <param name="absoluteExpiration">Der Zeitpunkt, an dem das eingefügte Objekt abläuft und aus dem Cache entfernt wird. Um mögliche Probleme mit der lokalen Zeit zu vermeiden, z. B. Änderungen von der Standardzeit zur Sommerzeit, verwenden Sie für diesen Parameterwert <see cref="P:System.DateTime.UtcNow" /> statt <see cref="P:System.DateTime.Now" />. Wenn Sie die absolute Ablaufzeit verwenden, muss der <paramref name="slidingExpiration" />-Parameter <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" /> sein.</param>
        <param name="slidingExpiration">Das Intervall zwischen dem letzten Zugreifen auf das eingefügte Objekt und dem Ablaufen des Objekts. Wenn dieser Wert 20 Minuten entspricht, läuft das Objekt 20 Minuten nach dem letzten Zugriff ab und wird aus dem Cache entfernt. Wenn Sie die gleitende Ablaufzeit verwenden, muss der <paramref name="absoluteExpiration" />-Parameter <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" /> sein.</param>
        <param name="priority">Die Priorität des Objekts im Verhältnis zu den anderen im Cache gespeicherten Elementen, der durch die <see cref="T:System.Web.Caching.CacheItemPriority" />-Enumeration ausgedrückt wird. Dieser Wert wird vom Cache beim Entfernen von Objekten verwendet. Objekte mit niedrigerer Priorität werden vor Objekten mit höherer Priorität aus dem Cache entfernt.</param>
        <param name="onRemoveCallback">Wenn bereitgestellt, ein Delegat, der beim Entfernen eines Objekts aus dem Cache aufgerufen wird. Hiermit können Sie Anwendungen benachrichtigen lassen, wenn zugehörige Objekte aus dem Cache gelöscht werden.</param>
        <summary>Fügt ein Objekt in das <see cref="T:System.Web.Caching.Cache" />-Objekt ein, einschließlich von Abhängigkeiten, Ablauf- und Prioritätsrichtlinien sowie einem Delegaten, mit dem die Anwendung über das Entfernen des eingefügten Elements aus <see langword="Cache" /> benachrichtigt werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode überschreibt eine vorhandene `Cache` Element mit dem gleichen `key` Parameter.  
  
 Sie können nicht zusammen festgelegt die `absoluteExpiration` und `slidingExpiration` Parameter. Wenn Sie das Element im Cache ablaufen zu einem bestimmten Zeitpunkt möchten, legen Sie die `absoluteExpiration` Parameter, um die Uhrzeit, und die `slidingExpiration` Parameter <xref:System.Web.Caching.Cache.NoSlidingExpiration>.  
  
 Wenn Sie beabsichtigen, dass das Element im Cache nach einem bestimmten Zeitraum abläuft, verstrichen seit dem letzten Zugriff auf das Element, legen Sie die `slidingExpiration` Parameter, um das Ablaufintervall und `absoluteExpiration` Parameter <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>.  
  
   
  
## Examples  
 Im folgende Beispiel wird veranschaulicht, wie eine Element mit hoher Priorität zugewiesen, wenn Sie es in Ihrer Anwendungsverzeichnis einfügen `Cache` Objekt.  
  
> [!NOTE]
>  Weitere Informationen dazu, wie Sie diese Methode mit der <xref:System.Web.Caching.CacheItemRemovedCallback> delegieren, finden Sie unter [Vorgehensweise: benachrichtigen, eine Anwendung bei der ein Element wird entfernt aus dem Cache](https://msdn.microsoft.com/library/38c33aa0-afe9-40ba-a1a4-1ebab95286ef).  
  
 [!code-csharp[Classic Cache.Insert3 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert3 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="key" />-Parameter oder der <paramref name="value" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="slidingExpiration" />-Parameter wurde auf weniger als <see langword="TimeSpan.Zero" /> oder die Entsprechung von mehr als einem Jahr fest.</exception>
        <exception cref="T:System.ArgumentException">Für das Element, das Sie dem <see langword="Cache" /> hinzufügen möchten, sind sowohl der <paramref name="absoluteExpiration" />-Parameter als auch der <paramref name="slidingExpiration" />-Parameter festgelegt.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.Web.Caching.CacheItemPriority" />
        <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Zwischenspeichern von Anwendungsdaten</related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ key); void set(System::String ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Web.Caching.Cache.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Ein <see cref="T:System.String" />-Objekt, das den Schlüssel für das Element im Cache darstellt.</param>
        <summary>Ruft das Element im Cache am angegebenen Schlüssel ab oder legt dieses fest.</summary>
        <value>Das angegebene Element im Cache.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Eigenschaft zum Abrufen des Werts des angegebenen Elements im Cache oder ein Element und einen Schlüssel für die es dem Cache hinzufügen. Hinzufügen eines Caches mit den <xref:System.Web.Caching.Cache.Item%2A> Eigenschaft entspricht dem Aufrufen der <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> Methode.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die `Item` Eigenschaft zum Abrufen des Werts eines zwischengespeicherten Objekts zugeordneten der `Key1` Schlüssel. Anschließend wird mithilfe der <xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType> Methode, um den Wert "und" Einführungstext "und" B HTML-Elements zu einer Web Forms-Seite zu schreiben.  
  
 [!code-csharp[System.Web.Caching Examples#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#5)]
 [!code-vb[System.Web.Caching Examples#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#5)]  
  
 Das folgende Beispiel zeigt die Verwendung dieser Eigenschaft auf den Wert eines Textfelds in den Cache einzufügen.  
  
 [!code-csharp[Classic Cache.this Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.this Example/CS/source.cs#2)]
 [!code-vb[Classic Cache.this Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.this Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Zwischenspeichern von Anwendungsdaten</related>
      </Docs>
    </Member>
    <Member MemberName="NoAbsoluteExpiration">
      <MemberSignature Language="C#" Value="public static readonly DateTime NoAbsoluteExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTime NoAbsoluteExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoAbsoluteExpiration As DateTime " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTime NoAbsoluteExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoAbsoluteExpiration : DateTime" Usage="System.Web.Caching.Cache.NoAbsoluteExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wird im <paramref name="absoluteExpiration" />-Parameter in einem <see cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />-Methodenaufruf verwendet, um anzugeben, dass das Element nie ablaufen soll. Dieses Feld ist schreibgeschützt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei Verwendung dieses Feld festlegt der `absoluteExpiration` Parameter gleich <xref:System.DateTime.MaxValue>, ist eine Konstante, die größten möglichen `DateTime` Wert 12/31/9999 11:59:59 Uhr.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die `NoAbsoluteExpiration` Feld absolute Ablaufzeiten deaktiviert beim Einfügen eines Elements in der `Cache`.  
  
 [!code-csharp[Classic Cache.NoAbsoluteExpiration Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.NoAbsoluteExpiration Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.NoAbsoluteExpiration Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.NoAbsoluteExpiration Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="NoSlidingExpiration">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan NoSlidingExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Web.Caching.Cache.NoSlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoSlidingExpiration As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoSlidingExpiration : TimeSpan" Usage="System.Web.Caching.Cache.NoSlidingExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wird als <paramref name="slidingExpiration" />-Parameter in einem <see cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />-Methodenaufruf oder <see cref="M:System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" />-Methodenaufruf verwendet, um die gleitende Ablaufzeit zu deaktivieren. Dieses Feld ist schreibgeschützt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei Verwendung dieses Feld festlegt der `slidingExpiration` Parameter, um die <xref:System.TimeSpan.Zero?displayProperty=nameWithType> -Feld, das ein konstanter Wert von 0 (null) ist. Das zwischengespeicherte Element läuft ab in Übereinstimmung mit der `absoluteExpiration` zugeordneten Parameter die `Insert` oder `Add` Methodenaufruf.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die Insert-Methode zum Hinzufügen eines Elements auf die <xref:System.Web.Caching.Cache> -Objekt unter Verwendung der `NoSlidingExpiration` Feld.  
  
 [!code-csharp[Classic Cache.NoSlidingExpiration Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.NoSlidingExpiration Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.NoSlidingExpiration Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.NoSlidingExpiration Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.TimeSpan.Zero" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public object Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Remove(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; obj" Usage="cache.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Ein <see cref="T:System.String" />-Bezeichner für das zu entfernende Element im Cache.</param>
        <summary>Entfernt das angegebene Element aus dem <see cref="T:System.Web.Caching.Cache" />-Objekt der Anwendung.</summary>
        <returns>Das aus <see langword="Cache" /> entfernte Element. Gibt <see langword="null" /> zurück, wenn der Wert im Schlüsselparameter nicht gefunden wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel erstellt eine `RemoveItemFromCache` Methode. Wenn diese Methode aufgerufen wird, verwendet es die <xref:System.Web.Caching.Cache.Item%2A> Eigenschaft zu überprüfen, ob der Cache ein Objekt enthält, die zugeordnet wird eine `Key1` Schlüsselwert. Wenn dies der Fall ist, die `Remove` aufgerufen, um das Objekt zu entfernen.  
  
 [!code-csharp[System.Web.Caching Examples#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#4)]
 [!code-vb[System.Web.Caching Examples#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Zwischenspeichern von Anwendungsdaten</related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Enumerator zurück, der die <see cref="T:System.Web.Caching.Cache" />-Objektauflistung durchlaufen kann.</summary>
        <returns>Ein Enumerator, der die <see cref="T:System.Web.Caching.Cache" />-Objektauflistung durchlaufen kann.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>