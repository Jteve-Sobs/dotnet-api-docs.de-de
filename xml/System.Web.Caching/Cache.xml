<Type Name="Cache" FullName="System.Web.Caching.Cache">
  <Metadata><Meta Name="ms.openlocfilehash" Value="05f01a5b48f2713ffbfceb10a6b4257ec2124e63" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82358401" /></Metadata><TypeSignature Language="C#" Value="public sealed class Cache : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Cache extends System.Object implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Caching.Cache" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Cache&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Cache sealed : System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type Cache = class&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Implementiert den Cache für eine Webanwendung. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 Eine Instanz dieser Klasse wird pro Anwendungsdomäne erstellt und bleibt gültig, solange die Anwendungsdomäne aktiv bleibt. Informationen zu einer Instanz dieser Klasse sind über die `Cache`-Eigenschaft des <xref:System.Web.HttpContext>-Objekts oder die `Cache`-Eigenschaft des <xref:System.Web.UI.Page> Objekts verfügbar.

> [!NOTE]
>  Die <xref:System.Web.Caching.Cache>-Klasse ist nicht für die Verwendung außerhalb von ASP.NET-Anwendungen vorgesehen. Es wurde für die Verwendung in ASP.net entworfen und getestet, um das Zwischenspeichern für Webanwendungen bereitzustellen. Verwenden Sie für andere Anwendungs Typen, z. b. Konsolen Anwendungen oder Windows Forms Anwendungen, die <xref:System.Runtime.Caching.ObjectCache>-Klasse.



## Examples
 Im folgenden Beispiel wird eine Seite angezeigt, auf der Benutzer den einem Element im Cache zugewiesenen Wert anzeigen und dann benachrichtigt werden, wenn das Element aus dem Cache entfernt wird. Er erstellt eine `RemovedCallback` Methode mit der Signatur des `CacheItemRemovedCallback` Delegaten, um Benutzer zu benachrichtigen, wenn das Cache Element entfernt wird, und verwendet die <xref:System.Web.Caching.CacheItemRemovedReason>-Enumeration, um Ihnen mitzuteilen, warum Sie entfernt wurde. Außerdem wird die <xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType>-Eigenschaft verwendet, um dem Cache Objekte hinzuzufügen und den Wert dieser Objekte abzurufen. In der `AddItemToCache`-Methode wird die <xref:System.Web.Caching.Cache.Add%2A?displayProperty=nameWithType>-Methode verwendet, um dem Cache ein Element hinzuzufügen. Wenn Sie den `CacheItemRemovedCallback` Delegaten verwenden möchten, müssen Sie dem Cache mit dieser Methode oder der <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType>-Methode ein Element hinzufügen, damit ASP.NET automatisch die richtigen Methodenaufrufe durchführen kann, wenn das Element entfernt wird. Die benutzerdefinierte `RemoveItemFromCache`-Methode verwendet die <xref:System.Web.Caching.Cache.Remove%2A?displayProperty=nameWithType>-Methode, um das Element explizit aus dem Cache zu löschen, wodurch die `RemovedCallback`-Methode aufgerufen wird.

> [!NOTE]
>  Die Cache Instanz, auf die der folgende Code Ausschnitt zugreift, ist ein Member des <xref:System.Web.UI.Page> Objekts, das in diesem Beispiel erbt.

 [!code-aspx-csharp[System.Web.Caching Examples#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#1)]
 [!code-aspx-vb[System.Web.Caching Examples#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#1)]

 ]]></format>
    </remarks>
    <threadsafe>Dieser Typ ist threadsicher.</threadsafe>
    <altmember cref="T:System.Web.HttpContext" />
    <altmember cref="T:System.Web.Caching.CacheDependency" />
    <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)">Zwischenspeichern von Anwendungsdaten</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.Web.Caching.Cache" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public object Add (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemPriority priority, System.Web.Caching.CacheItemRemovedCallback onRemoveCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Add(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, valuetype System.Web.Caching.CacheItemPriority priority, class System.Web.Caching.CacheItemRemovedCallback onRemoveCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan, priority As CacheItemPriority, onRemoveCallback As CacheItemRemovedCallback) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Add(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System::Web::Caching::CacheItemPriority priority, System::Web::Caching::CacheItemRemovedCallback ^ onRemoveCallback);" />
      <MemberSignature Language="F#" Value="member this.Add : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan * System.Web.Caching.CacheItemPriority * System.Web.Caching.CacheItemRemovedCallback -&gt; obj" Usage="cache.Add (key, value, dependencies, absoluteExpiration, slidingExpiration, priority, onRemoveCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Web.Caching.CacheItemPriority" />
        <Parameter Name="onRemoveCallback" Type="System.Web.Caching.CacheItemRemovedCallback" />
      </Parameters>
      <Docs>
        <param name="key">Der Cacheschlüssel, mit dem auf das Element verwiesen wird.</param>
        <param name="value">Das Element, das dem Cache hinzugefügt werden soll.</param>
        <param name="dependencies">Die Datei- oder Cacheschlüsselabhängigkeiten des Elements. Wenn sich eine der Abhängigkeiten ändert, wird das Objekt ungültig und aus dem Cache entfernt. Wenn keine Abhängigkeiten bestehen, enthält dieser Parameter <see langword="null" />.</param>
        <param name="absoluteExpiration">Der Zeitpunkt, an dem das hinzugefügte Objekt abläuft und aus dem Cache entfernt wird. Wenn Sie die gleitende Ablaufzeit verwenden, muss der <paramref name="absoluteExpiration" />-Parameter <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" /> sein.</param>
        <param name="slidingExpiration">Das Intervall zwischen dem letzten Zugreifen auf das hinzugefügte Objekt und dem Ablaufen des Objekts. Wenn dieser Wert 20 Minuten entspricht, läuft das Objekt 20 Minuten nach dem zuletzt erfolgten Zugriff ab und wird aus dem Cache entfernt. Wenn Sie die absolute Ablaufzeit verwenden, muss der <paramref name="slidingExpiration" />-Parameter <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" /> sein.</param>
        <param name="priority">Die relative Priorität des Objekts, die durch die <see cref="T:System.Web.Caching.CacheItemPriority" />-Enumeration ausgedrückt wird. Der Cache verwendet diesen Wert beim Entfernen von Objekten. Objekte mit niedrigerer Priorität werden vor Objekten mit höherer Priorität aus dem Cache entfernt.</param>
        <param name="onRemoveCallback">Wenn bereitgestellt, ein Delegat, der beim Entfernen eines Objekts aus dem Cache aufgerufen wird. Hiermit können Sie Anwendungen benachrichtigen lassen, wenn zugehörige Objekte aus dem Cache gelöscht werden.</param>
        <summary>Fügt dem <see cref="T:System.Web.Caching.Cache" />-Objekt das angegebene Element mit Abhängigkeiten, Ablauf- und Prioritätsrichtlinien sowie einem Delegaten hinzu, mit dem die Anwendung über das Entfernen des eingefügten Elements aus dem<see langword="Cache" /> benachrichtigt werden kann.</summary>
        <returns>Ein Objekt, das das Element darstellt, das hinzugefügt wurde, wenn das Element zuvor im Cache gespeichert wurde, andernfalls <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Bei Aufrufen dieser Methode wird das unbeaufsichtigte auftreten, wenn ein Element mit demselben `key`-Parameter bereits in der `Cache`gespeichert ist. Wenn Sie ein vorhandenes `Cache` Element mithilfe desselben `key` Parameters überschreiben möchten, verwenden Sie die <xref:System.Web.Caching.Cache.Insert%2A>-Methode.

 Sie können nicht die Parameter "`absoluteExpiration`" und "`slidingExpiration`" festlegen. Wenn Sie beabsichtigen, das Cache Element zu einem bestimmten Zeitpunkt abzulaufen, legen Sie den `absoluteExpiration`-Parameter auf die jeweilige Uhrzeit fest, und legen Sie den Parameter `slidingExpiration` auf <xref:System.Web.Caching.Cache.NoSlidingExpiration>fest.

 Wenn Sie beabsichtigen, das Cache Element nach einem bestimmten Zeitraum nach dem letzten Zugriff auf das Element abzulaufen, legen Sie den `slidingExpiration`-Parameter auf das Ablauf Intervall und den `absoluteExpiration`-Parameter auf <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>fest.



## Examples
 Im folgenden Beispiel wird eine `AddItemToCache`-Methode erstellt. Wenn diese Methode aufgerufen wird, legt Sie eine `itemRemoved`-Eigenschaft auf `false` fest und registriert eine `onRemove`-Methode bei einer neuen Instanz des <xref:System.Web.Caching.CacheItemRemovedCallback> Delegaten. Die Signatur des Delegaten wird in der `RemovedCallback`-Methode verwendet. Die `AddItemToCache`-Methode überprüft dann den Wert, der dem `Key1` Schlüssel im Cache zugeordnet ist. Wenn der Wert `null`ist, platziert die `Add`-Methode ein Element im Cache mit einem Schlüssel `Key1`, einem Wert `Value 1`, einem absoluten Ablauf von 60 Sekunden und einer hohen Cache Priorität. Außerdem wird die `onRemove`-Methode als Argument verwendet. Dadurch kann die `RemovedCallback`-Methode aufgerufen werden, wenn dieses Element aus dem Cache entfernt wird.

> [!NOTE]
>  Beispiele für die Verwendung der <xref:System.Web.Caching.CacheDependency>-Klasse und des <xref:System.Web.Caching.CacheItemRemovedCallback> Delegaten finden Sie unter zwischen [Speichern von Anwendungsdaten](https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)).

 [!code-csharp[System.Web.Caching Examples#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#3)]
 [!code-vb[System.Web.Caching Examples#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#3)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="key" />-Parameter oder der <paramref name="value" />-Parameter ist auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="slidingExpiration" />-Parameter ist auf einen Wert festgelegt, der kleiner als <see langword="TimeSpan.Zero" /> ist oder mehr als ein Jahr beträgt.</exception>
        <exception cref="T:System.ArgumentException">Für das Element, das Sie dem <paramref name="absoluteExpiration" /> hinzufügen möchten, sind sowohl der <paramref name="slidingExpiration" />-Parameter als auch der <see langword="Cache" />-Parameter festgelegt.</exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
        <altmember cref="T:System.Web.Caching.CacheItemPriority" />
        <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)">Zwischenspeichern von Anwendungsdaten</related>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.Caching.Cache.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Elemente im Cache ab.</summary>
        <value>Die Anzahl der im Cache gespeicherten Elemente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Diese Eigenschaft kann nützlich sein, wenn Sie die Leistung Ihrer Anwendung überwachen oder wenn Sie die ASP.net-Ablauf Verfolgungs Funktion verwenden.



## Examples
 Im folgenden Beispiel wird der Wert der `Count`-Eigenschaft abgerufen, in eine Zeichenfolge konvertiert und die Zeichenfolge der <xref:System.Web.UI.WebControls.Label.Text%2A>-Eigenschaft eines <xref:System.Web.UI.WebControls.Label>-Webserver Steuer Elements `Label1`zugewiesen.

 [!code-csharp[System.Web.Caching.Cache.Count#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.Cache.Count/CS/cachecountcs.aspx#1)]
 [!code-vb[System.Web.Caching.Cache.Count#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.Cache.Count/VB/cachecountvb.aspx#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EffectivePercentagePhysicalMemoryLimit">
      <MemberSignature Language="C#" Value="public long EffectivePercentagePhysicalMemoryLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 EffectivePercentagePhysicalMemoryLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EffectivePercentagePhysicalMemoryLimit As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long EffectivePercentagePhysicalMemoryLimit { long get(); };" />
      <MemberSignature Language="F#" Value="member this.EffectivePercentagePhysicalMemoryLimit : int64" Usage="System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Prozentsatz des physischen Arbeitsspeichers ab, der von einer Anwendung verbraucht werden kann, bevor ASP.NET damit beginnt, Elemente aus dem Cache zu entfernen.</summary>
        <value>Der Prozentsatz des für die Anwendung verfügbaren physischen Arbeitsspeichers.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A>-Eigenschaft gibt den Prozentsatz des physischen Arbeitsspeichers zurück, der für die Anwendung verfügbar ist. Wenn der verfügbare Prozentsatz gering ist, beginnt der Cache Algorithmus, Elemente aus dem Cache zu entfernen.

 Die <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A>-Eigenschaft kann mit dem Attribut `percentagePhysicalMemoryUsedLimit` des [Cache Elements für das Caching-Element (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms228248(v=vs.100)) in der Konfigurationsdatei der Anwendung festgelegt werden. Wenn das `percentagePhysicalMemoryUsedLimit`-Attribut nicht festgelegt ist, bestimmt der Cache Algorithmus die maximale Größe des Caches, und die <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A>-Eigenschaft wird berechnet.

 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A> wird in .NET Framework Version 3,5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      </Docs>
    </Member>
    <Member MemberName="EffectivePrivateBytesLimit">
      <MemberSignature Language="C#" Value="public long EffectivePrivateBytesLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 EffectivePrivateBytesLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EffectivePrivateBytesLimit As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long EffectivePrivateBytesLimit { long get(); };" />
      <MemberSignature Language="F#" Value="member this.EffectivePrivateBytesLimit : int64" Usage="System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Bytes ab, die für den Cache zur Verfügung steht.</summary>
        <value>Die Anzahl von Bytes, die für den Cache zur Verfügung steht.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A>-Eigenschaft gibt die Anzahl der Bytes zurück, die vom Anwendungsprozess verwendet werden können. Sobald dieser Grenzwert erreicht ist, beginnt der Cache Algorithmus aggressiv, den Cache zu leeren.

 Die <xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A>-Eigenschaft kann mit dem Attribut `privateBytesLimit` des [Cache Elements für das Caching-Element (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms228248(v=vs.100)) in der Konfigurationsdatei der Anwendung festgelegt werden. Wenn das `privateBytesLimit`-Attribut nicht festgelegt ist, bestimmt der Cache Algorithmus die maximale Größe des Caches, und die <xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A>-Eigenschaft enthält die Größe, die vom Algorithmus ausgewählt wird.



## Examples
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public object Get (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Get(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Get(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.Get : string -&gt; obj" Usage="cache.Get key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Bezeichner für das abzurufende Cacheelement.</param>
        <summary>Ruft das angegebene Element aus dem <see cref="T:System.Web.Caching.Cache" />-Objekt ab.</summary>
        <returns>Das abgerufene Element im Cache oder <see langword="null" />, wenn der Schlüssel nicht gefunden wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 Im folgenden Beispiel wird veranschaulicht, wie der Wert, der für ein ASP.net Text Feld-Server Steuerelement zwischengespeichert wird, abgerufen

 [!code-csharp[Classic Cache.Get Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Get Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Get Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Get Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)">Zwischenspeichern von Anwendungsdaten</related>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="cache.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft einen Wörterbuchenumerator ab, der für das Durchlaufen der Schlüsseleinstellungen und ihrer Werte im Cache verwendet wird.</summary>
        <returns>Ein Enumerator zum Durchlaufen des <see cref="T:System.Web.Caching.Cache" />-Objekts.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Elemente können dem Cache hinzugefügt oder daraus entfernt werden, während diese Methode die Elemente auflistet.



## Examples
 Im folgenden Beispiel wird mithilfe der `GetEnumerator`-Methode ein <xref:System.Collections.IDictionaryEnumerator> Objekt erstellt `CacheEnum`. Der Enumerator durchläuft den Cache, konvertiert den Wert jedes zwischengespeicherten Elements in eine Zeichenfolge und schreibt dann die Werte auf eine Web Forms Seite.

 [!code-csharp[Cache.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Cache.GetEnumerator/CS/getenumcs.aspx#1)]
 [!code-vb[Cache.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Cache.GetEnumerator/VB/getenumvb.aspx#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Insert">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt ein Element in das <see cref="T:System.Web.Caching.Cache" />-Objekt ein. Verwenden Sie eine der Versionen dieser Methode, um ein vorhandenes <see langword="Cache" />-Element durch denselben <paramref name="key" />-Parameter zu überschreiben.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj -&gt; unit" Usage="cache.Insert (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">Der Cacheschlüssel, mit dem auf das Element verwiesen wird.</param>
        <param name="value">Das Objekt, das in den Cache eingefügt werden soll.</param>
        <summary>Fügt ein Element mit einem Cacheschlüssel, der auf den Speicherort verweist, in das <see cref="T:System.Web.Caching.Cache" />-Objekt ein, wobei von der <see cref="T:System.Web.Caching.CacheItemPriority" />-Enumeration bereitgestellte Standardwerte verwendet werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Diese Methode überschreibt ein vorhandenes Cache Element, dessen Schlüssel mit dem `key`-Parameter übereinstimmt. Das Objekt, das mit dieser Überladung der `Insert` Methode dem Cache hinzugefügt wird, wird ohne Datei-oder Cache Abhängigkeiten, einer Priorität von <xref:System.Web.Caching.CacheItemPriority.Default>, einem gleitenden Ablauf Wert von <xref:System.Web.Caching.Cache.NoSlidingExpiration>und einem absoluten Ablauf Wert <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>eingefügt.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie ein Element in den Cache einer Anwendung eingefügt wird.

 [!code-csharp[Classic Cache.Insert Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="key" />-Parameter oder der <paramref name="value" />-Parameter ist <see langword="null" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)">Zwischenspeichern von Anwendungsdaten</related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency -&gt; unit" Usage="cache.Insert (key, value, dependencies)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
      </Parameters>
      <Docs>
        <param name="key">Der Cacheschlüssel, mit dem das Element angegeben wird.</param>
        <param name="value">Das Objekt, das in den Cache eingefügt werden soll.</param>
        <param name="dependencies">Die Datei- oder Cacheschlüsselabhängigkeiten des eingefügten Objekts. Wenn sich eine der Abhängigkeiten ändert, wird das Objekt ungültig und aus dem Cache entfernt. Wenn keine Abhängigkeiten bestehen, enthält dieser Parameter <see langword="null" />.</param>
        <summary>Fügt ein Objekt in den <see cref="T:System.Web.Caching.Cache" /> ein, das Datei- oder Schlüsselabhängigkeiten besitzt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Diese Methode überschreibt ein vorhandenes Cache Element, dessen Schlüssel mit dem `key`-Parameter übereinstimmt. Das Objekt, das mit dieser Überladung der `Insert` Methode dem Cache hinzugefügt wird, wird ohne Datei-oder Cache Abhängigkeiten, einer Priorität von <xref:System.Web.Caching.CacheItemPriority.Default>, einem gleitenden Ablauf Wert von <xref:System.Web.Caching.Cache.NoSlidingExpiration>und einem absoluten Ablauf Wert <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>eingefügt.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie ein Element mit einer Cache Abhängigkeit von einer XML-Konfigurationsdatei in den Cache einer Anwendung eingefügt wird.

 [!code-csharp[Classic Cache.Insert1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert1 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert1 Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="key" />-Parameter oder der <paramref name="value" />-Parameter ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan -&gt; unit" Usage="cache.Insert (key, value, dependencies, absoluteExpiration, slidingExpiration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="key">Der Cacheschlüssel, mit dem auf das Objekt verwiesen wird.</param>
        <param name="value">Das Objekt, das in den Cache eingefügt werden soll.</param>
        <param name="dependencies">Die Datei- oder Cacheschlüsselabhängigkeiten des eingefügten Objekts. Wenn sich eine der Abhängigkeiten ändert, wird das Objekt ungültig und aus dem Cache entfernt. Wenn keine Abhängigkeiten bestehen, enthält dieser Parameter <see langword="null" />.</param>
        <param name="absoluteExpiration">Der Zeitpunkt, an dem das eingefügte Objekt abläuft und aus dem Cache entfernt wird. Um mögliche Probleme mit der lokalen Zeit zu vermeiden, z. B. Änderungen von der Standardzeit zur Sommerzeit, verwenden Sie für diesen Parameterwert <see cref="P:System.DateTime.UtcNow" /> statt <see cref="P:System.DateTime.Now" />. Wenn Sie die absolute Ablaufzeit verwenden, muss der <paramref name="slidingExpiration" />-Parameter <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" /> sein.</param>
        <param name="slidingExpiration">Der Zeitraum zwischen dem Zeitpunkt des letzten Zugriffs auf das eingefügte Objekt und dem Zeitpunkt des Ablaufs dieses Objekts. Wenn dieser Wert 20 Minuten entspricht, läuft das Objekt 20 Minuten nach dem letzten Zugriff ab und wird aus dem Cache entfernt. Wenn Sie die gleitende Ablaufzeit verwenden, muss der <paramref name="absoluteExpiration" />-Parameter <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" /> sein.</param>
        <summary>Fügt ein Objekt mit Abhängigkeiten und Ablaufrichtlinien in den <see cref="T:System.Web.Caching.Cache" /> ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Mit dieser Methode wird ein vorhandenes `Cache` Element mit dem gleichen `key` Parameter überschrieben.

 Wenn der `slidingExpiration`-Parameter auf <xref:System.Web.Caching.Cache.NoSlidingExpiration>festgelegt ist, ist der gleitende Ablauf deaktiviert. Wenn Sie den `slidingExpiration`-Parameter auf größer als <xref:System.TimeSpan.Zero>festlegen, wird der `absoluteExpiration`-Parameter auf <xref:System.DateTime.Now%2A> Plus auf den Wert festgelegt, der im `slidingExpiration`-Parameter enthalten ist. Wenn das Element vor der vom `absoluteExpiration`-Parameter angegebenen Zeitspanne aus dem Cache angefordert wird, wird das Element erneut in den Cache eingefügt, und `absoluteExpiration` wird wieder auf `DateTime.Now` zuzüglich des im `slidingExpiration`-Parameter enthaltenen Werts festgelegt. Wenn das Element vor dem Datum im `absoluteExpiration`-Parameter nicht aus dem Cache angefordert wird, wird das Element aus dem Cache entfernt. Das Element, das mit dieser Überladung der Insert-Methode dem Cache hinzugefügt wird, wird mit der Priorität <xref:System.Web.Caching.CacheItemPriority.Default>eingefügt.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie ein Element mit einem absoluten Ablauf in den Cache einer Anwendung eingefügt wird.

> [!NOTE]
>  Da diese Form der `Insert`-Methode Cache Abhängigkeiten unterstützt, müssen Sie den `dependency`-Parameter als `null` (`Nothing` in Visual Basic) in der durch Trennzeichen getrennten Liste von Parametern deklarieren, wenn das Element über keine Abhängigkeiten verfügt.

 [!code-csharp[Classic Cache.Insert2 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert2 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert2 Example/VB/source.vb#1)]

 Im folgenden Beispiel wird veranschaulicht, wie ein Element mit einem gleitenden Ablauf in den Cache eingefügt wird.

 [!code-csharp[Classic Cache.Insert2 Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert2 Example/CS/source.cs#2)]
 [!code-vb[Classic Cache.Insert2 Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert2 Example/VB/source.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="key" />-Parameter oder der <paramref name="value" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="slidingExpiration" />-Parameter wurde auf weniger als <see langword="TimeSpan.Zero" /> oder die Entsprechung von mehr als einem Jahr fest.</exception>
        <exception cref="T:System.ArgumentException">Für das Element, das Sie dem <paramref name="absoluteExpiration" /> hinzufügen möchten, sind sowohl der <paramref name="slidingExpiration" />-Parameter als auch der <see langword="Cache" />-Parameter festgelegt.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)">Zwischenspeichern von Anwendungsdaten</related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemUpdateCallback onUpdateCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, class System.Web.Caching.CacheItemUpdateCallback onUpdateCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemUpdateCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan, onUpdateCallback As CacheItemUpdateCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System::Web::Caching::CacheItemUpdateCallback ^ onUpdateCallback);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan * System.Web.Caching.CacheItemUpdateCallback -&gt; unit" Usage="cache.Insert (key, value, dependencies, absoluteExpiration, slidingExpiration, onUpdateCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="onUpdateCallback" Type="System.Web.Caching.CacheItemUpdateCallback" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Der Cacheschlüssel, mit dem auf das Objekt verwiesen wird.</param>
        <param name="value">Das Objekt, das in den Cache eingefügt werden soll.</param>
        <param name="dependencies">Die Datei- oder Cacheschlüsselabhängigkeiten des Elements. Wenn sich eine der Abhängigkeiten ändert, wird das Objekt ungültig und aus dem Cache entfernt. Wenn keine Abhängigkeiten bestehen, enthält dieser Parameter <see langword="null" />.</param>
        <param name="absoluteExpiration">Der Zeitpunkt, an dem das eingefügte Objekt abläuft und aus dem Cache entfernt wird. Um mögliche Probleme mit der lokalen Zeit zu vermeiden, z. B. Änderungen von der Standardzeit zur Sommerzeit, verwenden Sie für diesen Parameterwert <see cref="P:System.DateTime.UtcNow" /> statt <see cref="P:System.DateTime.Now" />. Wenn Sie die absolute Ablaufzeit verwenden, muss der <paramref name="slidingExpiration" />-Parameter auf <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" /> festgelegt werden.</param>
        <param name="slidingExpiration">Das Intervall zwischen dem letzten Zugriff auf das zwischengespeicherte Objekt und dem Ablaufzeitpunkt des Objekts. Wenn dieser Wert 20 Minuten entspricht, läuft das Objekt 20 Minuten nach dem letzten Zugriff ab und wird aus dem Cache entfernt. Wenn Sie die gleitende Ablaufzeit verwenden, muss der <paramref name="absoluteExpiration" />-Parameter auf <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" /> festgelegt werden.</param>
        <param name="onUpdateCallback">Ein Delegat, der vor dem Entfernen eines Objekts aus dem Cache aufgerufen wird. Hiermit kann das zwischengespeicherte Element aktualisiert und sichergestellt werden, dass es nicht aus dem Cache entfernt wird.</param>
        <summary>Fügt ein Objekt in das <see cref="T:System.Web.Caching.Cache" />-Objekt mit Abhängigkeiten, Ablaufrichtlinien sowie einem Delegaten ein, mit dem die Anwendung vor dem Entfernen des Elements aus dem Cache benachrichtigt werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.Caching.Cache.Insert%2A>-Methode ermöglicht das Einfügen eines neuen Elements in den Cache und das Bereitstellen eines Delegaten, der aufgerufen wird, bevor das Element aus dem Cache entfernt wird. Im-Delegaten können Sie das zwischengespeicherte Element aktualisieren und dadurch verhindern, dass es aus dem Cache entfernt wird.

 Mit dieser Methode wird ein vorhandenes `Cache` Element mit dem gleichen `key` Parameter überschrieben.

 Sie können nicht die Parameter "`absoluteExpiration`" und "`slidingExpiration`" festlegen. Wenn Sie beabsichtigen, das Cache Element zu einem bestimmten Zeitpunkt abzulaufen, legen Sie den `absoluteExpiration`-Parameter auf die jeweilige Uhrzeit fest, und legen Sie den Parameter `slidingExpiration` auf <xref:System.Web.Caching.Cache.NoSlidingExpiration>fest.

 Wenn Sie beabsichtigen, das Cache Element nach einem festgelegten Zeitraum nach dem letzten Zugriff auf das Element zu ablaufen, legen Sie den `slidingExpiration`-Parameter auf das Ablauf Intervall fest, und legen Sie den `absoluteExpiration`-Parameter auf <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>fest.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der Parameter <paramref name="key" />, <paramref name="value" /> oder <paramref name="onUpdateCallback" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="slidingExpiration" />-Parameter wurde auf weniger als <see langword="TimeSpan.Zero" /> oder die Entsprechung von mehr als einem Jahr fest.</exception>
        <exception cref="T:System.ArgumentException">Für das Element, das Sie dem <paramref name="absoluteExpiration" /> hinzufügen möchten, sind sowohl der <paramref name="slidingExpiration" />-Parameter als auch der <see langword="Cache" />-Parameter festgelegt.

Oder

Der <paramref name="dependencies" />-Parameter ist <see langword="null" />, der <paramref name="absoluteExpiration" />-Parameter ist auf <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" /> festgelegt, und der <paramref name="slidingExpiration" />-Parameter ist auf <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" /> festgelegt.</exception>
        <altmember cref="T:System.Web.Caching.CacheItemUpdateCallback" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemPriority priority, System.Web.Caching.CacheItemRemovedCallback onRemoveCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, valuetype System.Web.Caching.CacheItemPriority priority, class System.Web.Caching.CacheItemRemovedCallback onRemoveCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan, priority As CacheItemPriority, onRemoveCallback As CacheItemRemovedCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System::Web::Caching::CacheItemPriority priority, System::Web::Caching::CacheItemRemovedCallback ^ onRemoveCallback);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan * System.Web.Caching.CacheItemPriority * System.Web.Caching.CacheItemRemovedCallback -&gt; unit" Usage="cache.Insert (key, value, dependencies, absoluteExpiration, slidingExpiration, priority, onRemoveCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Web.Caching.CacheItemPriority" />
        <Parameter Name="onRemoveCallback" Type="System.Web.Caching.CacheItemRemovedCallback" />
      </Parameters>
      <Docs>
        <param name="key">Der Cacheschlüssel, mit dem auf das Objekt verwiesen wird.</param>
        <param name="value">Das Objekt, das in den Cache eingefügt werden soll.</param>
        <param name="dependencies">Die Datei- oder Cacheschlüsselabhängigkeiten des Elements. Wenn sich eine der Abhängigkeiten ändert, wird das Objekt ungültig und aus dem Cache entfernt. Wenn keine Abhängigkeiten bestehen, enthält dieser Parameter <see langword="null" />.</param>
        <param name="absoluteExpiration">Der Zeitpunkt, an dem das eingefügte Objekt abläuft und aus dem Cache entfernt wird. Um mögliche Probleme mit der lokalen Zeit zu vermeiden, z. B. Änderungen von der Standardzeit zur Sommerzeit, verwenden Sie für diesen Parameterwert <see cref="P:System.DateTime.UtcNow" /> statt <see cref="P:System.DateTime.Now" />. Wenn Sie die absolute Ablaufzeit verwenden, muss der <paramref name="slidingExpiration" />-Parameter <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" /> sein.</param>
        <param name="slidingExpiration">Das Intervall zwischen dem letzten Zugreifen auf das eingefügte Objekt und dem Ablaufen des Objekts. Wenn dieser Wert 20 Minuten entspricht, läuft das Objekt 20 Minuten nach dem letzten Zugriff ab und wird aus dem Cache entfernt. Wenn Sie die gleitende Ablaufzeit verwenden, muss der <paramref name="absoluteExpiration" />-Parameter <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" /> sein.</param>
        <param name="priority">Die Priorität des Objekts im Verhältnis zu den anderen im Cache gespeicherten Elementen, der durch die <see cref="T:System.Web.Caching.CacheItemPriority" />-Enumeration ausgedrückt wird. Dieser Wert wird vom Cache beim Entfernen von Objekten verwendet. Objekte mit niedrigerer Priorität werden vor Objekten mit höherer Priorität aus dem Cache entfernt.</param>
        <param name="onRemoveCallback">Wenn bereitgestellt, ein Delegat, der beim Entfernen eines Objekts aus dem Cache aufgerufen wird. Hiermit können Sie Anwendungen benachrichtigen lassen, wenn zugehörige Objekte aus dem Cache gelöscht werden.</param>
        <summary>Fügt ein Objekt in das <see cref="T:System.Web.Caching.Cache" />-Objekt ein, einschließlich von Abhängigkeiten, Ablauf- und Prioritätsrichtlinien sowie einem Delegaten, mit dem die Anwendung über das Entfernen des eingefügten Elements aus <see langword="Cache" /> benachrichtigt werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Mit dieser Methode wird ein vorhandenes `Cache` Element mit dem gleichen `key` Parameter überschrieben.

 Sie können nicht die Parameter "`absoluteExpiration`" und "`slidingExpiration`" festlegen. Wenn Sie beabsichtigen, das Cache Element zu einem bestimmten Zeitpunkt abzulaufen, legen Sie den `absoluteExpiration`-Parameter auf die jeweilige Uhrzeit fest, und legen Sie den Parameter `slidingExpiration` auf <xref:System.Web.Caching.Cache.NoSlidingExpiration>fest.

 Wenn Sie beabsichtigen, das Cache Element abzulaufen, nachdem eine bestimmte Zeitspanne seit dem letzten Zugriff auf das Element abgelaufen ist, legen Sie den `slidingExpiration`-Parameter auf das Ablauf Intervall und den `absoluteExpiration`-Parameter auf <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>fest.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie Sie ein Element mit hoher Priorität zuweisen, wenn Sie es in das `Cache` Objekt Ihrer Anwendung einfügen.

> [!NOTE]
>  Weitere Informationen zur Verwendung dieser Methode mit dem <xref:System.Web.Caching.CacheItemRemovedCallback>-Delegaten finden Sie unter Gewusst [wie: Benachrichtigen einer Anwendung, wenn ein Element aus dem Cache entfernt wird](https://docs.microsoft.com/previous-versions/aspnet/7kxdx246(v=vs.100)).

 [!code-csharp[Classic Cache.Insert3 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert3 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert3 Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="key" />-Parameter oder der <paramref name="value" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="slidingExpiration" />-Parameter wurde auf weniger als <see langword="TimeSpan.Zero" /> oder die Entsprechung von mehr als einem Jahr fest.</exception>
        <exception cref="T:System.ArgumentException">Für das Element, das Sie dem <paramref name="absoluteExpiration" /> hinzufügen möchten, sind sowohl der <paramref name="slidingExpiration" />-Parameter als auch der <see langword="Cache" />-Parameter festgelegt.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.Web.Caching.CacheItemPriority" />
        <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)">Zwischenspeichern von Anwendungsdaten</related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ key); void set(System::String ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Web.Caching.Cache.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Ein <see cref="T:System.String" />-Objekt, das den Schlüssel für das Element im Cache darstellt.</param>
        <summary>Ruft das Element im Cache am angegebenen Schlüssel ab oder legt dieses fest.</summary>
        <value>Das angegebene Element im Cache.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Mit dieser Eigenschaft können Sie den Wert eines angegebenen Cache Elements abrufen oder dem Cache ein Element und einen Schlüssel hinzufügen. Das Hinzufügen eines Cache Elements mithilfe der <xref:System.Web.Caching.Cache.Item%2A>-Eigenschaft entspricht dem Aufrufen der <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType>-Methode.



## Examples
 Im folgenden Beispiel wird die `Item`-Eigenschaft verwendet, um den Wert eines zwischengespeicherten Objekts abzurufen, das dem `Key1` Schlüssel zugeordnet ist. Anschließend wird die <xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType>-Methode verwendet, um den Wert und einführenden Text sowie das B-HTML-Element in eine Web Forms Seite zu schreiben.

 [!code-csharp[System.Web.Caching Examples#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#5)]
 [!code-vb[System.Web.Caching Examples#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#5)]

 Im folgenden Beispiel wird veranschaulicht, wie diese Eigenschaft verwendet wird, um den Wert eines Textfelds in den Cache einzufügen.

 [!code-csharp[Classic Cache.this Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.this Example/CS/source.cs#2)]
 [!code-vb[Classic Cache.this Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.this Example/VB/source.vb#2)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)">Zwischenspeichern von Anwendungsdaten</related>
      </Docs>
    </Member>
    <Member MemberName="NoAbsoluteExpiration">
      <MemberSignature Language="C#" Value="public static readonly DateTime NoAbsoluteExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTime NoAbsoluteExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoAbsoluteExpiration As DateTime " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTime NoAbsoluteExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoAbsoluteExpiration : DateTime" Usage="System.Web.Caching.Cache.NoAbsoluteExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wird im <paramref name="absoluteExpiration" />-Parameter in einem <see cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />-Methodenaufruf verwendet, um anzugeben, dass das Element nie ablaufen soll. Dieses Feld ist schreibgeschützt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn dieses Feld verwendet wird, wird der `absoluteExpiration`-Parameter auf <xref:System.DateTime.MaxValue>festgelegt. dabei handelt es sich um eine Konstante, die den größtmöglichen `DateTime` Wert, 12/31/9999 11:59:59 Uhr, darstellt.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie das `NoAbsoluteExpiration`-Feld verwendet wird, um beim Einfügen eines Elements im `Cache`absolute Abläufe zu deaktivieren.

 [!code-csharp[Classic Cache.NoAbsoluteExpiration Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.NoAbsoluteExpiration Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.NoAbsoluteExpiration Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.NoAbsoluteExpiration Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="NoSlidingExpiration">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan NoSlidingExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Web.Caching.Cache.NoSlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoSlidingExpiration As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoSlidingExpiration : TimeSpan" Usage="System.Web.Caching.Cache.NoSlidingExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wird als <paramref name="slidingExpiration" />-Parameter in einem <see cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />-Methodenaufruf oder <see cref="M:System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" />-Methodenaufruf verwendet, um die gleitende Ablaufzeit zu deaktivieren. Dieses Feld ist schreibgeschützt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn dieses Feld verwendet wird, wird der `slidingExpiration`-Parameter auf das <xref:System.TimeSpan.Zero?displayProperty=nameWithType> Feld festgelegt, das den konstanten Wert 0 (null) aufweist. Das zwischengespeicherte Element läuft in Übereinstimmung mit dem `absoluteExpiration`-Parameter ab, der dem `Insert` oder `Add` Methoden Aufrufes zugeordnet ist.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie mithilfe der Insert-Methode dem <xref:System.Web.Caching.Cache>-Objekt mithilfe des `NoSlidingExpiration` Felds ein Element hinzugefügt wird.

 [!code-csharp[Classic Cache.NoSlidingExpiration Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.NoSlidingExpiration Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.NoSlidingExpiration Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.NoSlidingExpiration Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="F:System.TimeSpan.Zero" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public object Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Remove(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; obj" Usage="cache.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Ein <see cref="T:System.String" />-Bezeichner für das zu entfernende Element im Cache.</param>
        <summary>Entfernt das angegebene Element aus dem <see cref="T:System.Web.Caching.Cache" />-Objekt der Anwendung.</summary>
        <returns>Das aus <see langword="Cache" /> entfernte Element. Gibt <see langword="null" /> zurück, wenn der Wert im Schlüsselparameter nicht gefunden wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 Im folgenden Beispiel wird eine `RemoveItemFromCache`-Methode erstellt. Wenn diese Methode aufgerufen wird, verwendet Sie die <xref:System.Web.Caching.Cache.Item%2A>-Eigenschaft, um zu überprüfen, ob der Cache ein Objekt enthält, das einem `Key1` Schlüsselwert zugeordnet ist. Wenn dies der Fall ist, wird die `Remove`-Methode aufgerufen, um das Objekt zu entfernen.

 [!code-csharp[System.Web.Caching Examples#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#4)]
 [!code-vb[System.Web.Caching Examples#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#4)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)">Zwischenspeichern von Anwendungsdaten</related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="cache.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Enumerator zurück, der die <see cref="T:System.Web.Caching.Cache" />-Objektauflistung durchlaufen kann.</summary>
        <returns>Ein Enumerator, der die <see cref="T:System.Web.Caching.Cache" />-Objektauflistung durchlaufen kann.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
