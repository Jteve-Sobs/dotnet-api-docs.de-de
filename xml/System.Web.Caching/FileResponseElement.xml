<Type Name="FileResponseElement" FullName="System.Web.Caching.FileResponseElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3c4c1bca8e65f2e0fc16a3b054cb7ab2439bf045" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86618165" /></Metadata><TypeSignature Language="C#" Value="public class FileResponseElement : System.Web.Caching.ResponseElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit FileResponseElement extends System.Web.Caching.ResponseElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.Caching.FileResponseElement" />
  <TypeSignature Language="VB.NET" Value="Public Class FileResponseElement&#xA;Inherits ResponseElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileResponseElement : System::Web::Caching::ResponseElement" />
  <TypeSignature Language="F#" Value="type FileResponseElement = class&#xA;    inherit ResponseElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Caching.ResponseElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt einen Teil eines Ausgabecacheeintrags dar, der als Datei gespeichert wurde.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.Caching.FileResponseElement> Klasse stellt den Textteil (anstelle des-Headers) eines Ausgabe Cache Eintrags dar. Die Daten eines- <xref:System.Web.Caching.FileResponseElement> Objekts können entweder als Teil oder als gesamte Datei gespeichert werden. Sowohl ASP.net als auch benutzerdefinierte Ausgabe Cache Anbieter können eine Antwort in mehreren Teilen mit einer beliebigen Kombination von Objekten zurückgeben <xref:System.Web.Caching.FileResponseElement> . Ein Anbieter kann z. b. eine Antwort zurückgeben, die in drei verschiedene Objekte segmentiert ist <xref:System.Web.Caching.FileResponseElement> , und jedes Objekt kann von einem Offset in eine andere physische Datei abgerufen werden.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileResponseElement (string path, long offset, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, int64 offset, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.FileResponseElement.#ctor(System.String,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, offset As Long, length As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileResponseElement(System::String ^ path, long offset, long length);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.FileResponseElement : string * int64 * int64 -&gt; System.Web.Caching.FileResponseElement" Usage="new System.Web.Caching.FileResponseElement (path, offset, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="path">Der vollqualifizierte Pfad der Datei.</param>
        <param name="offset">Die Position in der Datei, an der die Zeichenfolge beginnt.</param>
        <param name="length">Die Länge der Daten, beginnend beim Offset, die die Ausgabecachedaten in der von <paramref name="path" /> definierten Datei darstellen.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Caching.FileResponseElement" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die vollständige Ausgabe Cache Antwort in einer einzelnen Datei enthalten ist, initialisiert ein Anbieter die <xref:System.Web.Caching.FileResponseElement> Klasse mit einem Offset von 0 (null) und einer Länge, die der Größe der gesamten Datei entspricht. Wenn die gesamte Ausgabe Cache Antwort nur in einem Teil einer Datei enthalten ist, initialisiert ein Anbieter die <xref:System.Web.Caching.FileResponseElement> Klasse mit dem Offset in der Datei, in der die Ausgabe Cache Antwort beginnt, und einer Länge, die der Größe der Ausgabe Cache Antwort entspricht, die in der Datei gespeichert ist.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="path" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> oder <paramref name="length" /> ist kleiner als 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.FileResponseElement.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Web.Caching.FileResponseElement.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Größe der Daten ab, beginnend beim Offset, die die Daten für eine <see cref="T:System.Web.Caching.FileResponseElement" />-Instanz enthalten.</summary>
        <value>Die Größe der Daten.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die vollständige Ausgabe Cache Antwort in einer einzelnen Datei enthalten ist, initialisiert ein Ausgabe Cache Anbieter die-Klasse mit einer Länge, die der <xref:System.Web.Caching.FileResponseElement> Größe der gesamten Datei entspricht. Wenn die gesamte Ausgabe Cache Antwort nur in einem Teil einer Datei enthalten ist, initialisiert ein Anbieter die <xref:System.Web.Caching.FileResponseElement> Klasse, indem er eine Länge verwendet, die der Größe der Ausgabe Cache Antwort entspricht, die in der Datei gespeichert ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public long Offset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.FileResponseElement.Offset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Offset { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Offset : int64" Usage="System.Web.Caching.FileResponseElement.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Position in der Datei ab, ab der die Daten aus einer <see cref="T:System.Web.Caching.FileResponseElement" /> Instanz beginnen.</summary>
        <value>Der Ausgangspunkt der Daten in der Datei.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die gesamte Ausgabe Cache Antwort in einer einzelnen Datei enthalten ist, initialisiert ein Anbieter die <xref:System.Web.Caching.FileResponseElement> Klasse mit einem Offset von 0 (null), wenn die gesamte Ausgabe Cache Antwort nur in einem Teil einer Datei enthalten ist. ein Anbieter initialisiert die <xref:System.Web.Caching.FileResponseElement> Klasse mit dem Offset in der Datei, in der die Ausgabe Cache Antwort gestartet wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.FileResponseElement.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.Web.Caching.FileResponseElement.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Speicherort der Datei ab, die Daten aus einer <see cref="T:System.Web.Caching.FileResponseElement" />-Instanz enthält.</summary>
        <value>Der vollqualifizierte Pfad der Datei.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
