<Type Name="CacheItemUpdateCallback" FullName="System.Web.Caching.CacheItemUpdateCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="82e44fba2d4f5397da4461bdbde79602da204e3e" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="70362181" /></Metadata><TypeSignature Language="C#" Value="public delegate void CacheItemUpdateCallback(string key, CacheItemUpdateReason reason, out object expensiveObject, out CacheDependency dependency, out DateTime absoluteExpiration, out TimeSpan slidingExpiration);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CacheItemUpdateCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Web.Caching.CacheItemUpdateCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub CacheItemUpdateCallback(key As String, reason As CacheItemUpdateReason, ByRef expensiveObject As Object, ByRef dependency As CacheDependency, ByRef absoluteExpiration As DateTime, ByRef slidingExpiration As TimeSpan)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void CacheItemUpdateCallback(System::String ^ key, CacheItemUpdateReason reason, [Runtime::InteropServices::Out] System::Object ^ % expensiveObject, [Runtime::InteropServices::Out] CacheDependency ^ % dependency, [Runtime::InteropServices::Out] DateTime % absoluteExpiration, [Runtime::InteropServices::Out] TimeSpan % slidingExpiration);" />
  <TypeSignature Language="F#" Value="type CacheItemUpdateCallback = delegate of string * CacheItemUpdateReason * obj * CacheDependency * DateTime * TimeSpan -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="key" Type="System.String" />
    <Parameter Name="reason" Type="System.Web.Caching.CacheItemUpdateReason" />
    <Parameter Name="expensiveObject" Type="System.Object" RefType="out" />
    <Parameter Name="dependency" Type="System.Web.Caching.CacheDependency" RefType="out" />
    <Parameter Name="absoluteExpiration" Type="System.DateTime" RefType="out" />
    <Parameter Name="slidingExpiration" Type="System.TimeSpan" RefType="out" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="key">Der Bezeichner des Elements, das aus dem Cache entfernt werden soll.</param>
    <param name="reason">Der Grund, aus dem das Element aus dem Cache entfernt werden soll.</param>
    <param name="expensiveObject">Enthält nach Rückgabe dieser Methode das zwischengespeicherte Elementobjekt, das die Updates enthält.</param>
    <param name="dependency">Enthält nach Rückgabe dieser Methode das Objekt, das die Abhängigkeit zwischen dem Elementobjekt und einer Datei, einem Cacheschlüssel, einem Array aus Dateien oder Cacheschlüsseln oder einem anderen <see cref="T:System.Web.Caching.CacheDependency" />-Objekt definiert.</param>
    <param name="absoluteExpiration">Enthält nach Rückgabe dieser Methode die Uhrzeit, zu der das Objekt abgelaufen ist.</param>
    <param name="slidingExpiration">Enthält nach Rückgabe dieser Methode das Intervall zwischen dem Zeitpunkt des letzten Zugriffs auf das Objekt und dem Ablaufzeitpunkt des Objekts.</param>
    <summary>Definiert eine Rückrufmethode zur Benachrichtigung von Anwendungen, bevor ein zwischengespeichertes Element aus dem Cache entfernt wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Objekt im Cache abläuft, ruft ASP.net die <xref:System.Web.Caching.CacheItemUpdateCallback> -Methode mit dem Schlüssel für das Cache Element und dem Grund auf, warum Sie das Element aktualisieren möchten. Die verbleibenden Parameter dieser Methode sind out-Parameter. Sie stellen das neue zwischengespeicherte Element sowie optionale Ablauf-und Abhängigkeits Werte bereit, die beim Aktualisieren des zwischengespeicherten Elements verwendet werden sollen.  
  
 Der Update Rückruf wird nicht aufgerufen, wenn das zwischengespeicherte Element explizit entfernt wird, indem ein Aufruf von verwendet wird <xref:System.Web.Caching.Cache.Remove%2A> .  
  
 Wenn Sie möchten, dass das zwischengespeicherte Element aus dem Cache entfernt wird, müssen Sie im-Parameter zurückgeben `null` `expensiveObject` . Andernfalls geben Sie mithilfe des-Parameters einen Verweis auf die neuen zwischengespeicherten Daten zurück `expensiveObject` . Wenn Sie keine Ablauf-oder Abhängigkeits Werte angeben, wird das Element nur dann aus dem Cache entfernt, wenn Arbeitsspeicher benötigt wird.  
  
 Wenn die Rückruf Methode eine Ausnahme auslöst, wird die Ausnahme von ASP.net unterdrückt und der zwischengespeicherte Wert entfernt.  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>
