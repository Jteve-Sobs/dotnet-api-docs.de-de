<Type Name="ObjectQuery&lt;T&gt;" FullName="System.Data.Objects.ObjectQuery&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c425390170366dd2695c3b67aa0c050f2dd4b23e" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83926465" /></Metadata><TypeSignature Language="C#" Value="public class ObjectQuery&lt;T&gt; : System.Data.Objects.ObjectQuery, System.Collections.Generic.IEnumerable&lt;T&gt;, System.ComponentModel.IListSource, System.Linq.IOrderedQueryable&lt;T&gt;, System.Linq.IQueryable&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectQuery`1&lt;T&gt; extends System.Data.Objects.ObjectQuery implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.IEnumerable, class System.ComponentModel.IListSource, class System.Linq.IOrderedQueryable, class System.Linq.IOrderedQueryable`1&lt;!T&gt;, class System.Linq.IQueryable, class System.Linq.IQueryable`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectQuery`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectQuery(Of T)&#xA;Inherits ObjectQuery&#xA;Implements IEnumerable(Of T), IListSource, IOrderedQueryable(Of T), IQueryable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ObjectQuery : System::Data::Objects::ObjectQuery, System::Collections::Generic::IEnumerable&lt;T&gt;, System::ComponentModel::IListSource, System::Linq::IOrderedQueryable&lt;T&gt;, System::Linq::IQueryable&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type ObjectQuery&lt;'T&gt; = class&#xA;    inherit ObjectQuery&#xA;    interface IOrderedQueryable&lt;'T&gt;&#xA;    interface IQueryable&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface IOrderedQueryable&#xA;    interface IQueryable&#xA;    interface IEnumerable&#xA;    interface IListSource" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
  <TypeSignature Language="F#" Value="type ObjectQuery&lt;'T&gt; = class&#xA;    inherit ObjectQuery&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface IQueryable&lt;'T&gt;&#xA;    interface IQueryable&#xA;    interface IOrderedQueryable&lt;'T&gt;&#xA;    interface IOrderedQueryable&#xA;    interface IListSource" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Data.Objects.ObjectQuery</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IOrderedQueryable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IOrderedQueryable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="8d707-101">Der Entitätstyp der Abfrage.</span><span class="sxs-lookup"><span data-stu-id="8d707-101">The entity type of the query.</span></span></typeparam>
    <summary><span data-ttu-id="8d707-102">Stellt eine typisierte Abfrage für ein Konzeptmodell in einem gegebenen Objektkontext dar.</span><span class="sxs-lookup"><span data-stu-id="8d707-102">Represents a typed query against a conceptual model in a given object context.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8d707-103">Die generische <xref:System.Data.Objects.ObjectQuery%601>-Klasse stellt eine Abfrage dar, die eine Auflistung von null oder mehr Objekten eines bestimmten Typs zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="8d707-103">The <xref:System.Data.Objects.ObjectQuery%601> generic class represents a query that returns a collection of zero or more objects of a specific type.</span></span> <span data-ttu-id="8d707-104">Der <xref:System.Data.Objects.ObjectContext> muss definiert werden, bevor eine Objektabfrage ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="8d707-104">The <xref:System.Data.Objects.ObjectContext> must be defined before an object query can be executed.</span></span> <span data-ttu-id="8d707-105">Dieser Kontext stellt die Verbindungs- und Metadateninformationen bereit, die zum Verfassen und Ausführen der Abfrage erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="8d707-105">This context provides the connection and metadata information that is required to compose and execute the query.</span></span> <span data-ttu-id="8d707-106">Eine Objektabfrage wird in den folgenden Szenarios ausgeführt:</span><span class="sxs-lookup"><span data-stu-id="8d707-106">An object query is executed in the following scenarios:</span></span>

-   <span data-ttu-id="8d707-107">Wenn eine Aktion darauf ausgeführt wird, z. B. während einer `foreach`- (C#) bzw. `For Each`-Enumeration (Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="8d707-107">When it is acted upon, such as during a `foreach` (C#) or `For Each` (Visual Basic) enumeration.</span></span>

-   <span data-ttu-id="8d707-108">Wenn sie zum Füllen einer <xref:System.Collections.Generic.List%601>-Auflistung zugewiesen ist.</span><span class="sxs-lookup"><span data-stu-id="8d707-108">When it is assigned to fill a <xref:System.Collections.Generic.List%601> collection.</span></span>

-   <span data-ttu-id="8d707-109">Wenn die <xref:System.Data.Objects.ObjectQuery%601.Execute%2A>-Methode explizit aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8d707-109">When the <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> method is explicitly called.</span></span>

 <span data-ttu-id="8d707-110">Die Abfrage selbst kann mithilfe einer [!INCLUDE[esql](~/includes/esql-md.md)]-Anweisung oder einer LINQ-Abfrage erstellt werden. Sie kann auch mithilfe der in der Klasse enthaltenen Abfrage-Generator-Methoden inkrementell erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="8d707-110">The query itself can be created by using an [!INCLUDE[esql](~/includes/esql-md.md)] statement or a LINQ query, or it can be incrementally built by using the query builder methods included in the class.</span></span> <span data-ttu-id="8d707-111">In jedem Fall ist das Ergebnis eine neue <xref:System.Data.Objects.ObjectQuery%601>-Instanz, die bei expliziter Ausführung oder Enumeration die Abfrage zur Ausführung an die Datenquelle sendet und die Ergebnisse zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="8d707-111">In every case, the result is a new <xref:System.Data.Objects.ObjectQuery%601> instance that, when explicitly executed or enumerated over, will send the query to the data source for execution and return the results.</span></span>

 <span data-ttu-id="8d707-112">Eine <xref:System.Data.Objects.ObjectQuery%601> weist häufig einen Entitätstyp auf, es kann sich jedoch auch um einen <xref:System.Data.Common.DbDataRecord>-Typ bei Projektionen auf einen anonymen Typ oder um einen primitiven Typ wie eine Ganzzahl oder Zeichenfolge handeln.</span><span class="sxs-lookup"><span data-stu-id="8d707-112">An <xref:System.Data.Objects.ObjectQuery%601> is frequently of an entity type, but it can also be of <xref:System.Data.Common.DbDataRecord> type, for projections to an anonymous type, or of a primitive type, such as an integer or string.</span></span> <span data-ttu-id="8d707-113">Weitere Informationen finden Sie unter [Objekt Abfragen](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896241(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="8d707-113">For more information, see [Object Queries](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896241(v=vs.100)).</span></span>



## Examples
 <span data-ttu-id="8d707-114">Das Beispiel in diesem Thema basiert auf den [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span><span class="sxs-lookup"><span data-stu-id="8d707-114">The example in this topic is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span>

 <span data-ttu-id="8d707-115">In dem Beispiel wird veranschaulicht, wie eine Instanz der <xref:System.Data.Objects.ObjectQuery%601>-Klasse erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="8d707-115">The example shows how to construct an instance of the <xref:System.Data.Objects.ObjectQuery%601> class.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery)]

 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/9e7d8837-28c5-429d-a824-7bafb59724cf"><span data-ttu-id="8d707-116">Entity SQL-Sprache</span><span class="sxs-lookup"><span data-stu-id="8d707-116">Entity SQL Language</span></span></related>
    <related type="Article" href="/dotnet/framework/data/adonet/ef/language-reference/linq-to-entities"><span data-ttu-id="8d707-117">LINQ to Entities</span><span class="sxs-lookup"><span data-stu-id="8d707-117">LINQ to Entities</span></span></related>
    <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="8d707-118">Abfragen von Daten als Objekte (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="8d707-118">Querying Data as Objects (Entity Framework)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d707-119">Initialisiert eine neue Instanz der <see cref="T:System.Data.Objects.ObjectQuery`1" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="8d707-119">Initializes a new instance of the <see cref="T:System.Data.Objects.ObjectQuery`1" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8d707-120">Eine <xref:System.Data.Objects.ObjectQuery%601> kann in solcher Weise initialisiert werden, dass sie ein einzelnes skalares Ergebnis und keine Auflistung von skalaren Ergebnissen darstellt.</span><span class="sxs-lookup"><span data-stu-id="8d707-120">An <xref:System.Data.Objects.ObjectQuery%601> can be initialized in such a way that it represents a single scalar result and not a collection of scalar results.</span></span> <span data-ttu-id="8d707-121">Einige Erweiterungsmethoden erfordern Auflistungsergebnisse als Eingabe.</span><span class="sxs-lookup"><span data-stu-id="8d707-121">Some extension methods require collection results as input.</span></span> <span data-ttu-id="8d707-122">In diesem Fall wird eine <xref:System.ArgumentException> ausgelöst, wenn eine dieser Methoden aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8d707-122">In this case, an <xref:System.ArgumentException> is thrown when one of these methods is called.</span></span> <span data-ttu-id="8d707-123">Weitere Informationen finden Sie unter [Objekt Abfragen](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896241(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="8d707-123">For more information, see [Object Queries](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896241(v=vs.100)).</span></span>

 <span data-ttu-id="8d707-124">Wenn Ihre Anwendung Entity SQL Abfragen zur Laufzeit generiert, sollten Sie alle Einschränkungen der Befehls Länge der Datenquelle beachten.</span><span class="sxs-lookup"><span data-stu-id="8d707-124">When your application generates Entity SQL queries at runtime, you should be aware of any command length limitations of the data source.</span></span> <span data-ttu-id="8d707-125">Entity SQL erzwingen keine Einschränkungen bezüglich der Länge des Befehls Texts in Abfragen.</span><span class="sxs-lookup"><span data-stu-id="8d707-125">Entity SQL does not enforce limitations on the length of the command text in queries.</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="8d707-126">Abfragen von Daten als Objekte und Strukturieren von Ergebnissen (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="8d707-126">Querying Data as Objects and Shaping Results (Entity Framework)</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectQuery (string commandText, System.Data.Objects.ObjectContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.Objects.ObjectContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String, context As ObjectContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectQuery(System::String ^ commandText, System::Data::Objects::ObjectContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectQuery&lt;'T&gt; : string * System.Data.Objects.ObjectContext -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="new System.Data.Objects.ObjectQuery&lt;'T&gt; (commandText, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="context" Type="System.Data.Objects.ObjectContext" />
      </Parameters>
      <Docs>
        <param name="commandText"><span data-ttu-id="8d707-127">Die [!INCLUDE[esql](~/includes/esql-md.md)]-Abfrage.</span><span class="sxs-lookup"><span data-stu-id="8d707-127">The [!INCLUDE[esql](~/includes/esql-md.md)] query.</span></span></param>
        <param name="context"><span data-ttu-id="8d707-128">Der <see cref="T:System.Data.Objects.ObjectContext" />, für den die Abfrage ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="8d707-128">The <see cref="T:System.Data.Objects.ObjectContext" /> on which to execute the query.</span></span></param>
        <summary><span data-ttu-id="8d707-129">Erstellt eine neue <see cref="T:System.Data.Objects.ObjectQuery`1" />-Instanz mit dem angegebenen [!INCLUDE[esql](~/includes/esql-md.md)]-Befehl als erste Abfrage.</span><span class="sxs-lookup"><span data-stu-id="8d707-129">Creates a new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance using the specified [!INCLUDE[esql](~/includes/esql-md.md)] command as the initial query.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8d707-130">Wenn Ihre Anwendung Entity SQL Abfragen zur Laufzeit generiert, sollten Sie alle Einschränkungen der Befehls Länge der Datenquelle beachten.</span><span class="sxs-lookup"><span data-stu-id="8d707-130">When your application generates Entity SQL queries at runtime, you should be aware of any command length limitations of the data source.</span></span> <span data-ttu-id="8d707-131">Entity SQL erzwingen keine Einschränkungen bezüglich der Länge des Befehls Texts in Abfragen.</span><span class="sxs-lookup"><span data-stu-id="8d707-131">Entity SQL does not enforce limitations on the length of the command text in queries.</span></span>



## Examples
 <span data-ttu-id="8d707-132">Das Beispiel in diesem Thema basiert auf den [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span><span class="sxs-lookup"><span data-stu-id="8d707-132">The example in this topic is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="8d707-133">In dem Beispiel wird veranschaulicht, wie eine Instanz der <xref:System.Data.Objects.ObjectQuery%601>-Klasse erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="8d707-133">The example shows how to construct an instance of the <xref:System.Data.Objects.ObjectQuery%601> class.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery)]

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="8d707-134">Abfragen von Daten als Objekte (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="8d707-134">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectQuery (string commandText, System.Data.Objects.ObjectContext context, System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.Objects.ObjectContext context, valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String, context As ObjectContext, mergeOption As MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectQuery(System::String ^ commandText, System::Data::Objects::ObjectContext ^ context, System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectQuery&lt;'T&gt; : string * System.Data.Objects.ObjectContext * System.Data.Objects.MergeOption -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="new System.Data.Objects.ObjectQuery&lt;'T&gt; (commandText, context, mergeOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="context" Type="System.Data.Objects.ObjectContext" />
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="commandText"><span data-ttu-id="8d707-135">Die [!INCLUDE[esql](~/includes/esql-md.md)]-Abfrage.</span><span class="sxs-lookup"><span data-stu-id="8d707-135">The [!INCLUDE[esql](~/includes/esql-md.md)] query.</span></span></param>
        <param name="context"><span data-ttu-id="8d707-136">Der <see cref="T:System.Data.Objects.ObjectContext" />, für den die Abfrage ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="8d707-136">The <see cref="T:System.Data.Objects.ObjectContext" /> on which to execute the query.</span></span></param>
        <param name="mergeOption"><span data-ttu-id="8d707-137">Gibt an, wie die Entitäten, die mit dieser Abfrage abgerufen werden, mit den Entitäten zusammengeführt werden sollen, die von vorherigen Abfragen für denselben <see cref="T:System.Data.Objects.ObjectContext" /> zurückgegeben wurden.</span><span class="sxs-lookup"><span data-stu-id="8d707-137">Specifies how the entities that are retrieved through this query should be merged with the entities that have been returned from previous queries against the same <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></param>
        <summary><span data-ttu-id="8d707-138">Erstellt eine neue <see cref="T:System.Data.Objects.ObjectQuery`1" />-Instanz mit dem angegebenen [!INCLUDE[esql](~/includes/esql-md.md)]-Befehl als erste Abfrage und der angegebenen Mergeoption.</span><span class="sxs-lookup"><span data-stu-id="8d707-138">Creates a new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance using the specified [!INCLUDE[esql](~/includes/esql-md.md)] command as the initial query and the specified merge option.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8d707-139">Wenn Ihre Anwendung Entity SQL Abfragen zur Laufzeit generiert, sollten Sie alle Einschränkungen der Befehls Länge der Datenquelle beachten.</span><span class="sxs-lookup"><span data-stu-id="8d707-139">When your application generates Entity SQL queries at runtime, you should be aware of any command length limitations of the data source.</span></span> <span data-ttu-id="8d707-140">Entity SQL erzwingen keine Einschränkungen bezüglich der Länge des Befehls Texts in Abfragen.</span><span class="sxs-lookup"><span data-stu-id="8d707-140">Entity SQL does not enforce limitations on the length of the command text in queries.</span></span>



## Examples
 <span data-ttu-id="8d707-141">Dieses Beispiel basiert auf den [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span><span class="sxs-lookup"><span data-stu-id="8d707-141">This example is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="8d707-142">Die <xref:System.Data.Objects.ObjectQuery%601> wird mit der angegebenen Abfrage, dem angegebenen <xref:System.Data.Objects.ObjectContext> und der angegebenen <xref:System.Data.Objects.MergeOption> initialisiert.</span><span class="sxs-lookup"><span data-stu-id="8d707-142">The <xref:System.Data.Objects.ObjectQuery%601> is initialized with the specified query, <xref:System.Data.Objects.ObjectContext>, and <xref:System.Data.Objects.MergeOption>.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Select](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_select)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Select](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_select)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Distinct">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Distinct ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Distinct() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Distinct" />
      <MemberSignature Language="VB.NET" Value="Public Function Distinct () As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Distinct();" />
      <MemberSignature Language="F#" Value="member this.Distinct : unit -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Distinct " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d707-143">Schränkt die Abfrage auf eindeutige Ergebnisse ein.</span><span class="sxs-lookup"><span data-stu-id="8d707-143">Limits the query to unique results.</span></span></summary>
        <returns><span data-ttu-id="8d707-144">Eine neue <see cref="T:System.Data.Objects.ObjectQuery`1" />-Instanz, die der ursprünglichen Instanz entspricht, für die jedoch <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/select-entity-sql">SELECT DISTINCT</see> festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="8d707-144">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/select-entity-sql">SELECT DISTINCT</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8d707-145">Diese Abfrage-Generator-Methode gibt eine <xref:System.Data.Objects.ObjectQuery%601>-Instanz zurück, die der ursprünglichen Abfrage entspricht, bei der SELECT-unter [schiedliche](/dotnet/framework/data/adonet/ef/language-reference/select-entity-sql) verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="8d707-145">This query builder method returns an <xref:System.Data.Objects.ObjectQuery%601> instance that is equivalent to the original query with [SELECT DISTINCT](/dotnet/framework/data/adonet/ef/language-reference/select-entity-sql) applied.</span></span>

 <span data-ttu-id="8d707-146">Der `DISTINCT`-Operator kann nicht auf ein Objekt angewendet werden, das eine Zuordnung zu einer nicht vergleichbaren Spalte in der Datenquelle (z. b. ntext) einschließt.</span><span class="sxs-lookup"><span data-stu-id="8d707-146">The `DISTINCT` operator cannot be applied to an object that includes a mapping to a non-comparable column in the data source (such as ntext).</span></span>



## Examples
 <span data-ttu-id="8d707-147">Das Beispiel in diesem Thema basiert auf den [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span><span class="sxs-lookup"><span data-stu-id="8d707-147">The example in this topic is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="8d707-148">In dem Beispiel wird die <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A>-Methode zur Erstellung eines neuen <xref:System.Data.Objects.ObjectQuery%601>-Objekts verwendet.</span><span class="sxs-lookup"><span data-stu-id="8d707-148">The example uses <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> method to create a new <xref:System.Data.Objects.ObjectQuery%601> object.</span></span> <span data-ttu-id="8d707-149">Anschließend wird <xref:System.Data.Objects.ObjectQuery%601.Distinct%2A> für das neue <xref:System.Data.Objects.ObjectQuery%601>-Objekt aufgerufen, um die eindeutigen Ergebnisse dieser Abfrage abzurufen.</span><span class="sxs-lookup"><span data-stu-id="8d707-149">Then it calls <xref:System.Data.Objects.ObjectQuery%601.Distinct%2A> on the new <xref:System.Data.Objects.ObjectQuery%601> object to get the unique results of this query.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_distinct_unionall)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_distinct_unionall)]

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="8d707-150">Abfragen von Daten als Objekte (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="8d707-150">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Except">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Except (System.Data.Objects.ObjectQuery&lt;T&gt; query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Except(class System.Data.Objects.ObjectQuery`1&lt;!T&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Except(System.Data.Objects.ObjectQuery{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Except (query As ObjectQuery(Of T)) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Except(System::Data::Objects::ObjectQuery&lt;T&gt; ^ query);" />
      <MemberSignature Language="F#" Value="member this.Except : System.Data.Objects.ObjectQuery&lt;'T&gt; -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Except query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Objects.ObjectQuery&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="8d707-151">Eine <see cref="T:System.Data.Objects.ObjectQuery`1" />, die die von der Abfrage auszuschließenden Ergebnisse darstellt.</span><span class="sxs-lookup"><span data-stu-id="8d707-151">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the results to exclude from the query.</span></span></param>
        <summary><span data-ttu-id="8d707-152">Schränkt die Abfrageergebnisse ein, indem Ergebnisse aufgrund von Ergebnissen einer anderen Objektabfrage ausgeschlossen werden.</span><span class="sxs-lookup"><span data-stu-id="8d707-152">Limits the query results by excluding results based on the results of another object query.</span></span></summary>
        <returns><span data-ttu-id="8d707-153">Eine neue <see cref="T:System.Data.Objects.ObjectQuery`1" />-Instanz, die der ursprünglichen Instanz entspricht, für die jedoch <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/except-entity-sql">EXCEPT</see> auf Grundlage der angegebenen <paramref name="query" /> festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="8d707-153">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/except-entity-sql">EXCEPT</see> applied based on the specified <paramref name="query" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8d707-154">Der angegebene `query`, der die auszuschließenden Ergebnisse definiert, muss denselben Typ aufweisen oder einen Typ aufweisen, der mit dem <xref:System.Data.Objects.ObjectQuery%601>kompatibel ist.</span><span class="sxs-lookup"><span data-stu-id="8d707-154">The supplied `query` that defines results to exclude must be of the same type or of a type that is compatible with the <xref:System.Data.Objects.ObjectQuery%601>.</span></span>

 <span data-ttu-id="8d707-155">Parameter, die in der angegebenen `query` definiert sind, werden mit Parametern zusammengeführt, die in der <xref:System.Data.Objects.ObjectQuery%601> Instanz definiert sind.</span><span class="sxs-lookup"><span data-stu-id="8d707-155">Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance.</span></span> <span data-ttu-id="8d707-156">Parameter müssen in der kombinierten <xref:System.Data.Objects.ObjectParameterCollection> eindeutig sein.</span><span class="sxs-lookup"><span data-stu-id="8d707-156">Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="8d707-157">In der kombinierten Auflistung dürfen sich nicht zwei Parameter mit demselben Namen befinden.</span><span class="sxs-lookup"><span data-stu-id="8d707-157">There cannot be two parameters in the combined collection with the same name.</span></span> <span data-ttu-id="8d707-158">Weitere Informationen finden Sie unter [Abfrage-Generator-Methoden](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896238(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="8d707-158">For more information, see [Query Builder Methods](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896238(v=vs.100)).</span></span>

 <span data-ttu-id="8d707-159">Die resultierende Abfrage erbt die Verbindung von der <xref:System.Data.Objects.ObjectQuery%601>-Instanz, für die <xref:System.Data.Objects.ObjectQuery%601.Except%2A> aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="8d707-159">The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which <xref:System.Data.Objects.ObjectQuery%601.Except%2A> was called.</span></span>



## Examples
 <span data-ttu-id="8d707-160">Dieses Beispiel basiert auf den [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span><span class="sxs-lookup"><span data-stu-id="8d707-160">This example is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="8d707-161">In dem Beispiel wird die <xref:System.Data.Objects.ObjectQuery%601.Except%2A>-Methode verwendet, um ein neues <xref:System.Data.Objects.ObjectQuery%601>-Objekt zu erstellen. Anschließend wird das Ergebnis der neuen Abfrage durchlaufen.</span><span class="sxs-lookup"><span data-stu-id="8d707-161">The example uses <xref:System.Data.Objects.ObjectQuery%601.Except%2A> method to create a new <xref:System.Data.Objects.ObjectQuery%601> object and then iterates through the result of the new query.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Except](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_except)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Except](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_except)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d707-162">Der <paramref name="query" />-Parameter ist <see langword="null" /> oder eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="8d707-162">The <paramref name="query" /> parameter is <see langword="null" /> or an empty string.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="8d707-163">Abfragen von Daten als Objekte und Strukturieren von Ergebnissen (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="8d707-163">Querying Data as Objects and Shaping Results (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectResult&lt;T&gt; Execute (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectResult`1&lt;!T&gt; Execute(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Execute(System.Data.Objects.MergeOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute (mergeOption As MergeOption) As ObjectResult(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectResult&lt;T&gt; ^ Execute(System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Data.Objects.MergeOption -&gt; System.Data.Objects.ObjectResult&lt;'T&gt;" Usage="objectQuery.Execute mergeOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectResult&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption"><span data-ttu-id="8d707-164">Die beim Ausführen der Abfrage zu verwendende <see cref="T:System.Data.Objects.MergeOption" />.</span><span class="sxs-lookup"><span data-stu-id="8d707-164">The <see cref="T:System.Data.Objects.MergeOption" /> to use when executing the query.</span></span> <span data-ttu-id="8d707-165">Der Standardwert ist <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.</span><span class="sxs-lookup"><span data-stu-id="8d707-165">The default is <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.</span></span></param>
        <summary><span data-ttu-id="8d707-166">Führt die Objektabfrage mit der angegebenen Zusammenführungsoption aus.</span><span class="sxs-lookup"><span data-stu-id="8d707-166">Executes the object query with the specified merge option.</span></span></summary>
        <returns><span data-ttu-id="8d707-167">Ein <see cref="T:System.Data.Objects.ObjectResult`1" />, das eine Auflistung der von dieser Abfrage zurückgegebenen Entitätsobjekte enthält.</span><span class="sxs-lookup"><span data-stu-id="8d707-167">An <see cref="T:System.Data.Objects.ObjectResult`1" /> that contains a collection of entity objects returned by the query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8d707-168">Die Standardmergeoption für Objektabfragen ist <xref:System.Data.Objects.MergeOption.AppendOnly>.</span><span class="sxs-lookup"><span data-stu-id="8d707-168">The default merge option for object queries is <xref:System.Data.Objects.MergeOption.AppendOnly>.</span></span> <span data-ttu-id="8d707-169">Weitere Informationen finden Sie unter [Identitäts Auflösung, Zustands Verwaltung und Änderungsnachverfolgung](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896269(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="8d707-169">For more information, see [Identity Resolution, State Management, and Change Tracking](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896269(v=vs.100)).</span></span>



## Examples
 <span data-ttu-id="8d707-170">Dieses Beispiel basiert auf den [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span><span class="sxs-lookup"><span data-stu-id="8d707-170">This example is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="8d707-171">Im Beispiel wird ein <xref:System.Data.Objects.ObjectResult%601> von der <xref:System.Data.Objects.ObjectQuery.Execute%2A>-Methode zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="8d707-171">The example returns an <xref:System.Data.Objects.ObjectResult%601> from <xref:System.Data.Objects.ObjectQuery.Execute%2A> method.</span></span> <span data-ttu-id="8d707-172">Anschließend wird ein Enumerator abgerufen, und die Abfrageergebnisse werden durchlaufen.</span><span class="sxs-lookup"><span data-stu-id="8d707-172">Then it gets an enumerator and iterates through the query results.</span></span> <span data-ttu-id="8d707-173">Abschließend werden der Enumerator und das <xref:System.Data.Objects.ObjectResult%601>-Objekt freigegeben.</span><span class="sxs-lookup"><span data-stu-id="8d707-173">At the end it releases the enumerator and the <xref:System.Data.Objects.ObjectResult%601> object.</span></span>

 [!code-csharp[DP ObjectServices Concepts#QueryResult](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#queryresult)]
 [!code-vb[DP ObjectServices Concepts#QueryResult](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#queryresult)]

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="8d707-174">Abfragen von Daten als Objekte (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="8d707-174">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GroupBy">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt; GroupBy (string keys, string projection, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;class System.Data.Common.DbDataRecord&gt; GroupBy(string keys, string projection, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.GroupBy(System.String,System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupBy (keys As String, projection As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of DbDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;System::Data::Common::DbDataRecord ^&gt; ^ GroupBy(System::String ^ keys, System::String ^ projection, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.GroupBy : string * string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;" Usage="objectQuery.GroupBy (keys, projection, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
        <Parameter Name="projection" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="8d707-175">Die Schlüsselspalten, nach denen die Ergebnisse gruppiert werden.</span><span class="sxs-lookup"><span data-stu-id="8d707-175">The key columns by which to group the results.</span></span></param>
        <param name="projection"><span data-ttu-id="8d707-176">Die Liste ausgewählter Eigenschaften, mit denen die Projektion definiert wird.</span><span class="sxs-lookup"><span data-stu-id="8d707-176">The list of selected properties that defines the projection.</span></span></param>
        <param name="parameters"><span data-ttu-id="8d707-177">Null oder mehr Parameter, die in dieser Methode verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="8d707-177">Zero or more parameters that are used in this method.</span></span></param>
        <summary><span data-ttu-id="8d707-178">Gruppiert die Abfrageergebnisse nach den angegebenen Kriterien.</span><span class="sxs-lookup"><span data-stu-id="8d707-178">Groups the query results by the specified criteria.</span></span></summary>
        <returns><span data-ttu-id="8d707-179">Eine neue <see cref="T:System.Data.Objects.ObjectQuery`1" />-Instanz des Typs <see cref="T:System.Data.Common.DbDataRecord" />, die der ursprünglichen Instanz entspricht, für die jedoch <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/group-by-entity-sql">GROUP BY</see> festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="8d707-179">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance of type <see cref="T:System.Data.Common.DbDataRecord" /> that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/group-by-entity-sql">GROUP BY</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8d707-180"><xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A> wendet die Projektion an, die vom `projection`-Parameter angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="8d707-180"><xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A> applies the projection specified by the `projection` parameter.</span></span> <span data-ttu-id="8d707-181">Dies bedeutet, dass die von der <xref:System.Data.Objects.ObjectQuery%601>-Methode zurückgegebene <xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A> stets den Typ <xref:System.Data.Common.DbDataRecord> aufweist.</span><span class="sxs-lookup"><span data-stu-id="8d707-181">This means that the <xref:System.Data.Objects.ObjectQuery%601> returned by the <xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A> method is always of type <xref:System.Data.Common.DbDataRecord>.</span></span> <span data-ttu-id="8d707-182">Weitere Informationen finden Sie unter [Objekt Abfragen](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896241(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="8d707-182">For more information, see [Object Queries](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896241(v=vs.100)).</span></span>



## Examples
 <span data-ttu-id="8d707-183">Dieses Beispiel basiert auf den [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span><span class="sxs-lookup"><span data-stu-id="8d707-183">This example is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span>

 <span data-ttu-id="8d707-184">In diesem Beispiel wird ein neues <xref:System.Data.Objects.ObjectQuery%601>-Objekt erstellt, das die Ergebnisse der bestehenden Abfrage nach Produktname gruppiert enthält.</span><span class="sxs-lookup"><span data-stu-id="8d707-184">This example creates a new <xref:System.Data.Objects.ObjectQuery%601> object that contains the results of the existing query grouped by product name.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_GroupBy](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_groupby)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_GroupBy](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_groupby)]

 <span data-ttu-id="8d707-185">In diesem Beispiel wird ein Satz von gruppierten Datensätzen zurückgegeben, die die `Contact.LastName` Spalte enthalten, die nach dem ersten Buchstaben `Contact.LastName`gruppiert und alphabetisch sortiert werden.</span><span class="sxs-lookup"><span data-stu-id="8d707-185">This example returns a set of nested data records that contain the `Contact.LastName` column, grouped and sorted alphabetically by the first letter of `Contact.LastName`.</span></span>

 [!code-csharp[DP ObjectServices Concepts#Projection_GroupBy](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#projection_groupby)]
 [!code-vb[DP ObjectServices Concepts#Projection_GroupBy](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#projection_groupby)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d707-186">Der <paramref name="query" />-Parameter ist <see langword="null" /> oder eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="8d707-186">The <paramref name="query" /> parameter is <see langword="null" /> or an empty string.</span></span>

<span data-ttu-id="8d707-187">- oder -</span><span class="sxs-lookup"><span data-stu-id="8d707-187">-or-</span></span>

<span data-ttu-id="8d707-188">Der <paramref name="projection" />-Parameter ist <see langword="null" /> oder eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="8d707-188">The <paramref name="projection" /> parameter is <see langword="null" /> or an empty string.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="8d707-189">Abfragen von Daten als Objekte (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="8d707-189">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Include">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Include (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Include(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Include(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Include (path As String) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Include(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.Include : string -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Include path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="8d707-190">Durch Punkte getrennte Liste verbundener Objekte, die in den Abfrageergebnissen zurückgegeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="8d707-190">Dot-separated list of related objects to return in the query results.</span></span></param>
        <summary><span data-ttu-id="8d707-191">Gibt die verknüpften Objekte an, die in die Abfrageergebnisse eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="8d707-191">Specifies the related objects to include in the query results.</span></span></summary>
        <returns><span data-ttu-id="8d707-192">Eine neue <see cref="T:System.Data.Objects.ObjectQuery`1" /> mit dem definierten Abfragepfad.</span><span class="sxs-lookup"><span data-stu-id="8d707-192">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> with the defined query path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8d707-193">Abfragepfade können mit Entity SQL- und LINQ-Abfragen verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="8d707-193">Query paths can be used with Entity SQL and LINQ queries.</span></span>

 <span data-ttu-id="8d707-194">Pfade sind allumfassend.</span><span class="sxs-lookup"><span data-stu-id="8d707-194">Paths are all-inclusive.</span></span> <span data-ttu-id="8d707-195">Wenn z. b. ein Include-Befehl `Include("Orders.OrderLines")`angibt, wird nicht nur `OrderLines` eingeschlossen, sondern auch `Orders`.</span><span class="sxs-lookup"><span data-stu-id="8d707-195">For example, if an include call indicates `Include("Orders.OrderLines")`, not only will `OrderLines` be included, but also `Orders`.</span></span> <span data-ttu-id="8d707-196">Weitere Informationen finden Sie unter [Laden verwandter Objekte](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896272(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="8d707-196">For more information, see [Loading Related Objects](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896272(v=vs.100)).</span></span>

 <span data-ttu-id="8d707-197">Beim Aufruf der <xref:System.Data.Objects.ObjectQuery%601.Include%2A>-Methode ist der Abfragepfad nur für die zurückgegebene Instanz der <xref:System.Data.Objects.ObjectQuery%601> gültig.</span><span class="sxs-lookup"><span data-stu-id="8d707-197">When you call the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method, the query path is only valid on the returned instance of the <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="8d707-198">Andere Instanzen von <xref:System.Data.Objects.ObjectQuery%601> und der Objektkontext selbst werden nicht beeinflusst.</span><span class="sxs-lookup"><span data-stu-id="8d707-198">Other instances of <xref:System.Data.Objects.ObjectQuery%601> and the object context itself are not affected.</span></span>

 <span data-ttu-id="8d707-199">Da die <xref:System.Data.Objects.ObjectQuery%601.Include%2A>-Methode das Abfrageobjekt zurückgibt, kann diese Methode mehrmals für eine <xref:System.Data.Objects.ObjectQuery%601> aufgerufen werden, um, wie im folgenden Beispiel, mehrere Pfade für die Abfrage anzugeben:</span><span class="sxs-lookup"><span data-stu-id="8d707-199">Because the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method returns the query object, you can call this method multiple times on an <xref:System.Data.Objects.ObjectQuery%601> to specify multiple paths for the query, as in the following example:</span></span>

 [!code-csharp[DP ObjectServices Concepts#SpanOnlyWithMultiplePaths](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#spanonlywithmultiplepaths)]
 [!code-vb[DP ObjectServices Concepts#SpanOnlyWithMultiplePaths](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#spanonlywithmultiplepaths)]



## Examples
 [!code-csharp[DP ObjectServices Concepts#QueryWithSpan](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#querywithspan)]
 [!code-vb[DP ObjectServices Concepts#QueryWithSpan](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#querywithspan)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d707-200"><paramref name="path" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d707-200"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d707-201"><paramref name="path" /> ist <see langword="empty" />.</span><span class="sxs-lookup"><span data-stu-id="8d707-201"><paramref name="path" /> is <see langword="empty" />.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="8d707-202">Abfragen von Daten als Objekte (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="8d707-202">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Intersect (System.Data.Objects.ObjectQuery&lt;T&gt; query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Intersect(class System.Data.Objects.ObjectQuery`1&lt;!T&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Intersect(System.Data.Objects.ObjectQuery{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (query As ObjectQuery(Of T)) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Intersect(System::Data::Objects::ObjectQuery&lt;T&gt; ^ query);" />
      <MemberSignature Language="F#" Value="member this.Intersect : System.Data.Objects.ObjectQuery&lt;'T&gt; -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Intersect query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Objects.ObjectQuery&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="8d707-203">Eine <see cref="T:System.Data.Objects.ObjectQuery`1" />, die die in die Abfrage einzuschließenden Ergebnisse darstellt.</span><span class="sxs-lookup"><span data-stu-id="8d707-203">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the results to include in the query.</span></span></param>
        <summary><span data-ttu-id="8d707-204">Schränkt die Abfrageergebnisse ein, indem nur die Ergebnisse eingeschlossen werden, die in einer anderen Objektabfrage vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="8d707-204">Limits the query results by including only the results that exist in another object query.</span></span></summary>
        <returns><span data-ttu-id="8d707-205">Eine neue <see cref="T:System.Data.Objects.ObjectQuery`1" />-Instanz, die der ursprünglichen Instanz entspricht, für die <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/intersect-entity-sql">INTERSECT</see> auf Grundlage der angegebenen <paramref name="query" /> festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="8d707-205">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/intersect-entity-sql">INTERSECT</see> applied based on the specified <paramref name="query" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8d707-206">Der angegebene `query`, der die einzuschließenden Ergebnisse definiert, muss vom gleichen Typ oder von einem Typ sein, der mit dem <xref:System.Data.Objects.ObjectQuery%601>kompatibel ist.</span><span class="sxs-lookup"><span data-stu-id="8d707-206">The supplied `query` that defines results to include must be of the same type or of a type that is compatible with the <xref:System.Data.Objects.ObjectQuery%601>.</span></span>

 <span data-ttu-id="8d707-207">Parameter, die in der angegebenen `query` definiert sind, werden mit Parametern zusammengeführt, die in der <xref:System.Data.Objects.ObjectQuery%601> Instanz definiert sind.</span><span class="sxs-lookup"><span data-stu-id="8d707-207">Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance.</span></span> <span data-ttu-id="8d707-208">Parameter müssen in der kombinierten <xref:System.Data.Objects.ObjectParameterCollection> eindeutig sein.</span><span class="sxs-lookup"><span data-stu-id="8d707-208">Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="8d707-209">In der kombinierten Auflistung dürfen sich nicht zwei Parameter mit demselben Namen befinden.</span><span class="sxs-lookup"><span data-stu-id="8d707-209">There cannot be two parameters in the combined collection with the same name.</span></span> <span data-ttu-id="8d707-210">Weitere Informationen finden Sie unter [Abfrage-Generator-Methoden](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896238(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="8d707-210">For more information, see [Query Builder Methods](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896238(v=vs.100)).</span></span>

 <span data-ttu-id="8d707-211">Die resultierende Abfrage erbt die Verbindung von der <xref:System.Data.Objects.ObjectQuery%601>-Instanz, für die die <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A>-Methode aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="8d707-211">The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which the <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> method was called.</span></span>



## Examples
 <span data-ttu-id="8d707-212">Das Beispiel in diesem Thema basiert auf den [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span><span class="sxs-lookup"><span data-stu-id="8d707-212">The example in this topic is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="8d707-213">In diesem Beispiel wird ein neues <xref:System.Data.Objects.ObjectQuery%601>-Objekt erstellt, das die Ergebnisse von zwei anderen Abfragen enthält.</span><span class="sxs-lookup"><span data-stu-id="8d707-213">This example creates a new <xref:System.Data.Objects.ObjectQuery%601> object that contains the results of two other queries.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Intersect](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_intersect)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Intersect](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_intersect)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d707-214">Der <paramref name="query" />-Parameter ist <see langword="null" /> oder eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="8d707-214">The <paramref name="query" /> parameter is <see langword="null" /> or is an empty string.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="8d707-215">Abfragen von Daten als Objekte (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="8d707-215">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery`1.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Data.Objects.ObjectQuery&lt;'T&gt;.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d707-216">Ruft den Namen dieser Objektabfrage ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="8d707-216">Gets or sets the name of this object query.</span></span></summary>
        <value><span data-ttu-id="8d707-217">Ein <see langword="string" />-Wert, der den Namen der <see cref="T:System.Data.Objects.ObjectQuery`1" /> darstellt.</span><span class="sxs-lookup"><span data-stu-id="8d707-217">A <see langword="string" /> value that is the name of this <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8d707-218">Der Name der Objektabfrage identifiziert beim Erstellen von Abfrage-Generator-Methoden die aktuelle Objektabfrage in der Sequenz nach deren Namen.</span><span class="sxs-lookup"><span data-stu-id="8d707-218">The name of the object query identifies the current object query in the sequence by name when constructing query builder methods.</span></span> <span data-ttu-id="8d707-219">Standardmäßig ist der Abfrage Name `it`.</span><span class="sxs-lookup"><span data-stu-id="8d707-219">By default, the query name is `it`.</span></span> <span data-ttu-id="8d707-220">Dies kann beim Verweisen auf die aktuelle Sequenz in Joins innerhalb der <xref:System.Data.Objects.ObjectQuery`1.Where*>-Methode oder in der <xref:System.Data.Objects.ObjectQuery`1.SelectValue*>-Methode nützlich sein.</span><span class="sxs-lookup"><span data-stu-id="8d707-220">This can be useful when referring to the current sequence in joins inside the <xref:System.Data.Objects.ObjectQuery`1.Where*> method or in the <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> method.</span></span> <span data-ttu-id="8d707-221">Weitere Informationen finden Sie unter [Abfrage-Generator-Methoden](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896238(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="8d707-221">For more information, see [Query Builder Methods](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896238(v=vs.100)).</span></span>

 <span data-ttu-id="8d707-222">Wenn die <xref:System.Data.Objects.ObjectQuery%601.Name%2A>-Eigenschaft einer <xref:System.Data.Objects.ObjectQuery%601> festgelegt wird, wird dieser Wert in nachfolgenden Methoden als Alias verwendet.</span><span class="sxs-lookup"><span data-stu-id="8d707-222">When you set the <xref:System.Data.Objects.ObjectQuery%601.Name%2A> property of an <xref:System.Data.Objects.ObjectQuery%601>, that value becomes the alias in successive methods.</span></span>

 <span data-ttu-id="8d707-223">Der Wert der <xref:System.Data.Objects.ObjectQuery%601.Name%2A>-Eigenschaft muss mit einem Buchstaben beginnen und kann Buchstaben, Ziffern und Unterstriche enthalten.</span><span class="sxs-lookup"><span data-stu-id="8d707-223">The value of the <xref:System.Data.Objects.ObjectQuery%601.Name%2A> property must start with a letter and can contain letters, digits, and underscores.</span></span>



## Examples
 <span data-ttu-id="8d707-224">In diesem Beispiel wird der Name der ersten <xref:System.Data.Objects.ObjectQuery%601> auf "product" festgelegt. Dieser Alias wird in der nachfolgenden <xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A>-Methode verwendet.</span><span class="sxs-lookup"><span data-stu-id="8d707-224">This example sets the name of the first <xref:System.Data.Objects.ObjectQuery%601> to "product" and then uses this alias in the successive <xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> method.</span></span> <span data-ttu-id="8d707-225">Das Beispiel in diesem Thema basiert auf den [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span><span class="sxs-lookup"><span data-stu-id="8d707-225">The example in this topic is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span>

 [!code-csharp[DP ObjectServices Concepts#QueryWithAliasNamed](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#querywithaliasnamed)]
 [!code-vb[DP ObjectServices Concepts#QueryWithAliasNamed](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#querywithaliasnamed)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d707-226">Der dafür angegebene Wert ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="8d707-226">The value specified on set is not valid.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="8d707-227">Abfragen von Daten als Objekte (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="8d707-227">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OfType&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;TResultType&gt; OfType&lt;TResultType&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!!TResultType&gt; OfType&lt;TResultType&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.OfType``1" />
      <MemberSignature Language="VB.NET" Value="Public Function OfType(Of TResultType) () As ObjectQuery(Of TResultType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResultType&gt;&#xA; System::Data::Objects::ObjectQuery&lt;TResultType&gt; ^ OfType();" />
      <MemberSignature Language="F#" Value="member this.OfType : unit -&gt; System.Data.Objects.ObjectQuery&lt;'ResultType&gt;" Usage="objectQuery.OfType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;TResultType&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TResultType"><span data-ttu-id="8d707-228">Der Typ des zurückgegebenen <see cref="T:System.Data.Objects.ObjectResult`1" />, wenn die Abfrage mit dem angewendeten Filter ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="8d707-228">The type of the <see cref="T:System.Data.Objects.ObjectResult`1" /> returned when the query is executed with the applied filter.</span></span></typeparam>
        <summary><span data-ttu-id="8d707-229">Beschränkt die Abfrage auf Ergebnisse eines bestimmten Typs.</span><span class="sxs-lookup"><span data-stu-id="8d707-229">Limits the query to only results of a specific type.</span></span></summary>
        <returns><span data-ttu-id="8d707-230">Eine neue <see cref="T:System.Data.Objects.ObjectQuery`1" />-Instanz, die der ursprünglichen Instanz entspricht, für die jedoch <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/oftype-entity-sql">OFTYPE</see> festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="8d707-230">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/oftype-entity-sql">OFTYPE</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
<span data-ttu-id="8d707-231"><xref:System.Data.Objects.ObjectQuery`1.OfType*> wird verwendet, um Abfrageergebnisse nach einer bestimmten Entität oder einem komplexen Typ zu filtern.</span><span class="sxs-lookup"><span data-stu-id="8d707-231"><xref:System.Data.Objects.ObjectQuery`1.OfType*> is used to filter query results by a specific entity or complex type.</span></span> <span data-ttu-id="8d707-232">Dies unterstützt ein konzeptionelles Modell mit Objekt Vererbung.</span><span class="sxs-lookup"><span data-stu-id="8d707-232">This supports a conceptual model with object inheritance.</span></span> <span data-ttu-id="8d707-233">Weitere Informationen finden Sie unter [Entity Data Model: Vererbung](/dotnet/framework/data/adonet/entity-data-model-inheritance).</span><span class="sxs-lookup"><span data-stu-id="8d707-233">For more information, see [Entity Data Model: Inheritance](/dotnet/framework/data/adonet/entity-data-model-inheritance).</span></span>

<span data-ttu-id="8d707-234">Die <xref:System.Data.Objects.ObjectQuery`1.OfType*>-Methode kann nur auf eine <xref:System.Data.Objects.ObjectQuery%601> eines Entitäts Typs oder eines komplexen Typs angewendet werden, der im EDM definiert ist.</span><span class="sxs-lookup"><span data-stu-id="8d707-234">The <xref:System.Data.Objects.ObjectQuery`1.OfType*> method can only be applied to an <xref:System.Data.Objects.ObjectQuery%601> of an entity type or complex type that is defined in the EDM.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Data.EntitySqlException"><span data-ttu-id="8d707-235">Der angegebene Typ ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="8d707-235">The type specified is not valid.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/be01614e-070e-41be-9746-bb674b41e488(v=vs.90)"><span data-ttu-id="8d707-236">Gewusst wie: Erstellen und Ausführen von Objektabfragen mithilfe der 'Tabelle pro Hierarchie'-Vererbung (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="8d707-236">How to: Create and Execute Object Queries using Table-per-Hierarchy Inheritance (Entity Framework)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="8d707-237">Abfragen von Daten als Objekte (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="8d707-237">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; OrderBy (string keys, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; OrderBy(string keys, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.OrderBy(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function OrderBy (keys As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ OrderBy(System::String ^ keys, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.OrderBy : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.OrderBy (keys, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="8d707-238">Die Schlüsselspalten, nach denen die Ergebnisse geordnet werden.</span><span class="sxs-lookup"><span data-stu-id="8d707-238">The key columns by which to order the results.</span></span></param>
        <param name="parameters"><span data-ttu-id="8d707-239">Null oder mehr Parameter, die in dieser Methode verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="8d707-239">Zero or more parameters that are used in this method.</span></span></param>
        <summary><span data-ttu-id="8d707-240">Ordnet die Abfrageergebnisse nach den angegebenen Kriterien.</span><span class="sxs-lookup"><span data-stu-id="8d707-240">Orders the query results by the specified criteria.</span></span></summary>
        <returns><span data-ttu-id="8d707-241">Eine neue <see cref="T:System.Data.Objects.ObjectQuery`1" />-Instanz, die der ursprünglichen Instanz entspricht, für die jedoch <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/order-by-entity-sql">ORDER BY</see> festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="8d707-241">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/order-by-entity-sql">ORDER BY</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8d707-242">Die Sortierung von Ergebnissen in einer geschachtelten Abfrage kann nicht garantiert werden.</span><span class="sxs-lookup"><span data-stu-id="8d707-242">The ordering of results in a nested query cannot be guaranteed.</span></span>

 <span data-ttu-id="8d707-243"><xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> sollte immer die endgültige Abfrage-Generator-Methode in der Sequenz sein.</span><span class="sxs-lookup"><span data-stu-id="8d707-243"><xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> should always be the final query builder method in the sequence.</span></span>



## Examples
 <span data-ttu-id="8d707-244">Dieses Beispiel basiert auf den [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span><span class="sxs-lookup"><span data-stu-id="8d707-244">This example is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="8d707-245">Im Beispiel wird ein neues <xref:System.Data.Objects.ObjectQuery%601>-Objekt erstellt, das die Ergebnisse der vorhandenen Abfrage Reihenfolge `ProductID`enthält.</span><span class="sxs-lookup"><span data-stu-id="8d707-245">The example creates a new <xref:System.Data.Objects.ObjectQuery%601> object that contains the results of the existing query order by `ProductID`.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_OrderBy](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_orderby)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_OrderBy](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_orderby)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d707-246">Der <paramref name="keys" />-Parameter oder der <paramref name="parameters" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d707-246">The <paramref name="keys" /> or <paramref name="parameters" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d707-247">Der <paramref name="key" /> ist eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="8d707-247">The <paramref name="key" /> is an empty string.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="8d707-248">Abfragen von Daten als Objekte (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="8d707-248">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt; Select (string projection, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;class System.Data.Common.DbDataRecord&gt; Select(string projection, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Select(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (projection As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of DbDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;System::Data::Common::DbDataRecord ^&gt; ^ Select(System::String ^ projection, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Select : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;" Usage="objectQuery.Select (projection, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projection" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="projection"><span data-ttu-id="8d707-249">Die Liste ausgewählter Eigenschaften, mit denen die Projektion definiert wird.</span><span class="sxs-lookup"><span data-stu-id="8d707-249">The list of selected properties that defines the projection.</span></span></param>
        <param name="parameters"><span data-ttu-id="8d707-250">Null oder mehr Parameter, die in dieser Methode verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="8d707-250">Zero or more parameters that are used in this method.</span></span></param>
        <summary><span data-ttu-id="8d707-251">Beschränkt die Abfrageergebnisse auf die Eigenschaften, die in der angegebenen Projektion definiert sind.</span><span class="sxs-lookup"><span data-stu-id="8d707-251">Limits the query results to only the properties that are defined in the specified projection.</span></span></summary>
        <returns><span data-ttu-id="8d707-252">Eine neue <see cref="T:System.Data.Objects.ObjectQuery`1" />-Instanz des Typs <see cref="T:System.Data.Common.DbDataRecord" />, die der ursprünglichen Instanz entspricht, für die jedoch <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/select-entity-sql">SELECT</see> festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="8d707-252">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance of type <see cref="T:System.Data.Common.DbDataRecord" /> that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/select-entity-sql">SELECT</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8d707-253"><xref:System.Data.Objects.ObjectQuery%601.Select%2A> wendet die Projektion an, die vom `projection`-Parameter angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="8d707-253"><xref:System.Data.Objects.ObjectQuery%601.Select%2A> applies the projection specified by the `projection` parameter.</span></span> <span data-ttu-id="8d707-254">Die von der <xref:System.Data.Objects.ObjectQuery%601>-Methode zurückgegebene <xref:System.Data.Objects.ObjectQuery%601.Select%2A> weist stets einen Zeilentyp von <xref:System.Data.Common.DbDataRecord> auf.</span><span class="sxs-lookup"><span data-stu-id="8d707-254">The <xref:System.Data.Objects.ObjectQuery%601> returned by the <xref:System.Data.Objects.ObjectQuery%601.Select%2A> method is always a row type of <xref:System.Data.Common.DbDataRecord>.</span></span> <span data-ttu-id="8d707-255">Verwenden Sie die <xref:System.Data.Objects.ObjectQuery`1.SelectValue*>-Methode, um Werte zurückzugeben, bei denen es sich um einfache Typen, Entitätstypen oder komplexe Typen handelt.</span><span class="sxs-lookup"><span data-stu-id="8d707-255">Use the <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> method to return values that are simple types, entity types, or complex types.</span></span> <span data-ttu-id="8d707-256">Weitere Informationen finden Sie unter [LINQ to Entities](/dotnet/framework/data/adonet/ef/language-reference/linq-to-entities).</span><span class="sxs-lookup"><span data-stu-id="8d707-256">For more information, see [LINQ to Entities](/dotnet/framework/data/adonet/ef/language-reference/linq-to-entities).</span></span>

 <span data-ttu-id="8d707-257">Wenn in der Projektion eine Navigationseigenschaft enthalten ist, enthalten die Abfrageergebnisse eine Auflistung geschachtelter <xref:System.Data.Common.DbDataRecord>-Objekte.</span><span class="sxs-lookup"><span data-stu-id="8d707-257">When a navigation property is included in the projection, the query results include a collection of nested <xref:System.Data.Common.DbDataRecord> objects.</span></span> <span data-ttu-id="8d707-258">Weitere Informationen finden Sie unter Gewusst [wie: Navigieren in Beziehungen mithilfe von Navigations Eigenschaften](https://msdn.microsoft.com/library/b1d71c7d-16a7-4b46-96ac-690176bd5057).</span><span class="sxs-lookup"><span data-stu-id="8d707-258">For more information, see [How to: Navigate Relationships Using Navigation Properties](https://msdn.microsoft.com/library/b1d71c7d-16a7-4b46-96ac-690176bd5057).</span></span>



## Examples
 <span data-ttu-id="8d707-259">Dieses Beispiel basiert auf den [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span><span class="sxs-lookup"><span data-stu-id="8d707-259">This example is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="8d707-260">Im Beispiel wird ein neues <xref:System.Data.Objects.ObjectQuery%601> erstellt, dessen Ergebnisse Datensätze sind, die die `ProductID` Felder der Ergebnisse dieser Abfrage enthalten.</span><span class="sxs-lookup"><span data-stu-id="8d707-260">The example creates a new <xref:System.Data.Objects.ObjectQuery%601> whose results are data records that contain the `ProductID` fields of the results of this query.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Select](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_select)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Select](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_select)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d707-261"><paramref name="projection" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d707-261"><paramref name="projection" /> is <see langword="null" />.</span></span>

<span data-ttu-id="8d707-262">- oder -</span><span class="sxs-lookup"><span data-stu-id="8d707-262">-or-</span></span>

 <span data-ttu-id="8d707-263"><paramref name="parameters" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d707-263"><paramref name="parameters" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d707-264">Der <paramref name="projection" /> ist eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="8d707-264">The <paramref name="projection" /> is an empty string.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="8d707-265">Abfragen von Daten als Objekte (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="8d707-265">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SelectValue&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;TResultType&gt; SelectValue&lt;TResultType&gt; (string projection, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!!TResultType&gt; SelectValue&lt;TResultType&gt;(string projection, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectValue(Of TResultType) (projection As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of TResultType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResultType&gt;&#xA; System::Data::Objects::ObjectQuery&lt;TResultType&gt; ^ SelectValue(System::String ^ projection, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.SelectValue : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'ResultType&gt;" Usage="objectQuery.SelectValue (projection, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;TResultType&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="projection" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TResultType"><span data-ttu-id="8d707-266">Der Typ der <see cref="T:System.Data.Objects.ObjectQuery`1" />, die von der <see cref="M:System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])" />-Methode zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="8d707-266">The type of the <see cref="T:System.Data.Objects.ObjectQuery`1" /> returned by the <see cref="M:System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])" /> method.</span></span></typeparam>
        <param name="projection"><span data-ttu-id="8d707-267">Die Projektionsliste.</span><span class="sxs-lookup"><span data-stu-id="8d707-267">The projection list.</span></span></param>
        <param name="parameters"><span data-ttu-id="8d707-268">Ein optionaler Satz von Abfrageparametern, die sich beim Analysieren im Gültigkeitsbereich befinden sollten.</span><span class="sxs-lookup"><span data-stu-id="8d707-268">An optional set of query parameters that should be in scope when parsing.</span></span></param>
        <summary><span data-ttu-id="8d707-269">Beschränkt die Abfrageergebnisse auf die Eigenschaft, die in der Projektion angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="8d707-269">Limits the query results to only the property specified in the projection.</span></span></summary>
        <returns><span data-ttu-id="8d707-270">Eine neue <see cref="T:System.Data.Objects.ObjectQuery`1" />-Instanz eines Typs, der mit der angegebenen Projektion kompatibel ist.</span><span class="sxs-lookup"><span data-stu-id="8d707-270">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance of a type compatible with the specific projection.</span></span> <span data-ttu-id="8d707-271">Die zurückgegebene <see cref="T:System.Data.Objects.ObjectQuery`1" /> entspricht der ursprünglichen Instanz, es ist jedoch <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/select-entity-sql">SELECT VALUE</see> für sie festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8d707-271">The returned <see cref="T:System.Data.Objects.ObjectQuery`1" /> is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/select-entity-sql">SELECT VALUE</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8d707-272"><xref:System.Data.Objects.ObjectQuery`1.SelectValue*> wird verwendet, um Werte zurückzugeben, bei denen es sich um einfache Typen, Entitätstypen oder komplexe Typen handelt.</span><span class="sxs-lookup"><span data-stu-id="8d707-272"><xref:System.Data.Objects.ObjectQuery`1.SelectValue*> is used to return values that are simple types, entity types, or complex types.</span></span> <span data-ttu-id="8d707-273">Die <xref:System.Data.Objects.ObjectQuery%601.Select%2A>-Methode wird für Projektionen verwendet, die anstelle eines Werttyps einen Zeilentyp erfordern.</span><span class="sxs-lookup"><span data-stu-id="8d707-273">Use the <xref:System.Data.Objects.ObjectQuery%601.Select%2A> method for projections that require a row type instead of a value type.</span></span> <span data-ttu-id="8d707-274">Weitere Informationen finden Sie unter [Objekt Abfragen](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896241(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="8d707-274">For more information, see [Object Queries](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896241(v=vs.100)).</span></span>

 <span data-ttu-id="8d707-275">Die <xref:System.Data.Objects.ObjectQuery`1.SelectValue*>-Methode wendet die vom `projection`-Parameter angegebene Projektion an.</span><span class="sxs-lookup"><span data-stu-id="8d707-275">The <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> method applies the projection specified by the `projection` parameter.</span></span> <span data-ttu-id="8d707-276">Die von der <xref:System.Data.Objects.ObjectQuery%601>-Methode zurückgegebene <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> muss einen Werttyp aufweisen, der mit der Projektion kompatibel ist und dem Typ von <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> entspricht.</span><span class="sxs-lookup"><span data-stu-id="8d707-276">The <xref:System.Data.Objects.ObjectQuery%601> returned by the <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> method must be of a value type that is compatible with the projection and must be the same type as the type of <xref:System.Data.Objects.ObjectQuery`1.SelectValue*>.</span></span>



## Examples
 <span data-ttu-id="8d707-277">Dieses Beispiel basiert auf den [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span><span class="sxs-lookup"><span data-stu-id="8d707-277">This example is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="8d707-278">Im Beispiel wird eine neue <xref:System.Data.Objects.ObjectQuery%601> erstellt, die Ergebnisse enthält, die eine Sequenz von `ProductID` Werten sind, die aus den Ergebnissen der vorhandenen Abfrage projiziert wurden.</span><span class="sxs-lookup"><span data-stu-id="8d707-278">The example creates a new <xref:System.Data.Objects.ObjectQuery%601> that contains results that are a sequence of `ProductID` values projected from the results of the existing query.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_SelectValue](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_selectvalue)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_SelectValue](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_selectvalue)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d707-279"><paramref name="projection" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d707-279"><paramref name="projection" /> is <see langword="null" />.</span></span>

<span data-ttu-id="8d707-280">- oder -</span><span class="sxs-lookup"><span data-stu-id="8d707-280">-or-</span></span>

 <span data-ttu-id="8d707-281"><paramref name="parameters" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d707-281"><paramref name="parameters" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d707-282">Der <paramref name="projection" /> ist eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="8d707-282">The <paramref name="projection" /> is an empty string.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="8d707-283">Abfragen von Daten als Objekte (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="8d707-283">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Skip (string keys, string count, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Skip(string keys, string count, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Skip(System.String,System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Skip (keys As String, count As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Skip(System::String ^ keys, System::String ^ count, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Skip : string * string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Skip (keys, count, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
        <Parameter Name="count" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="8d707-284">Die Schlüsselspalten, nach denen die Ergebnisse geordnet werden.</span><span class="sxs-lookup"><span data-stu-id="8d707-284">The key columns by which to order the results.</span></span></param>
        <param name="count"><span data-ttu-id="8d707-285">Die Anzahl zu überspringender Ergebnisse.</span><span class="sxs-lookup"><span data-stu-id="8d707-285">The number of results to skip.</span></span> <span data-ttu-id="8d707-286">Dabei muss es sich um eine Konstante oder einen Parameterverweis handeln.</span><span class="sxs-lookup"><span data-stu-id="8d707-286">This must be either a constant or a parameter reference.</span></span></param>
        <param name="parameters"><span data-ttu-id="8d707-287">Ein optionaler Satz von Abfrageparametern, die sich beim Analysieren im Gültigkeitsbereich befinden sollten.</span><span class="sxs-lookup"><span data-stu-id="8d707-287">An optional set of query parameters that should be in scope when parsing.</span></span></param>
        <summary><span data-ttu-id="8d707-288">Ordnet die Abfrageergebnisse nach den angegebenen Kriterien und überspringt eine bestimmte Anzahl von Ergebnissen.</span><span class="sxs-lookup"><span data-stu-id="8d707-288">Orders the query results by the specified criteria and skips a specified number of results.</span></span></summary>
        <returns><span data-ttu-id="8d707-289">Eine neue <see cref="T:System.Data.Objects.ObjectQuery`1" />-Instanz, die der ursprünglichen Instanz entspricht, für die jedoch <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/order-by-entity-sql">ORDER BY</see> und [SKIP](/dotnet/framework/data/adonet/ef/language-reference/skip-entity-sql) festgelegt sind.</span><span class="sxs-lookup"><span data-stu-id="8d707-289">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with both <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/order-by-entity-sql">ORDER BY</see> and [SKIP](/dotnet/framework/data/adonet/ef/language-reference/skip-entity-sql) applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8d707-290">Die <xref:System.Data.Objects.ObjectQuery%601.Skip%2A>-Methode kann nicht nach der <xref:System.Data.Objects.ObjectQuery%601.Top%2A>-Methode verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="8d707-290">The <xref:System.Data.Objects.ObjectQuery%601.Skip%2A> method cannot be used after the <xref:System.Data.Objects.ObjectQuery%601.Top%2A> method.</span></span> <span data-ttu-id="8d707-291">Wenn Sie <xref:System.Data.Objects.ObjectQuery%601.Top%2A> nach <xref:System.Data.Objects.ObjectQuery%601.Skip%2A>verwenden, funktioniert es wie die [Limit](/dotnet/framework/data/adonet/ef/language-reference/limit-entity-sql) -Anweisung einer-Klausel.</span><span class="sxs-lookup"><span data-stu-id="8d707-291">When you use <xref:System.Data.Objects.ObjectQuery%601.Top%2A> after <xref:System.Data.Objects.ObjectQuery%601.Skip%2A>, it functions like the [LIMIT](/dotnet/framework/data/adonet/ef/language-reference/limit-entity-sql) statement of an  clause.</span></span>



## Examples
 <span data-ttu-id="8d707-292">In diesem Beispiel werden fünf `Product` Objekte abgerufen, nachdem die ersten drei Objekte im Abfrageergebnis übersprungen wurden, sortiert nach `Product.ListPrice`.</span><span class="sxs-lookup"><span data-stu-id="8d707-292">This example gets five `Product` objects after skipping the first three in the query result, sorted by `Product.ListPrice`.</span></span>

 [!code-csharp[DP ObjectServices Concepts#Projection_SkipLimit](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#projection_skiplimit)]
 [!code-vb[DP ObjectServices Concepts#Projection_SkipLimit](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#projection_skiplimit)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d707-293">Jedes Argument ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d707-293">Any argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d707-294"><paramref name="keys" /> ist eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="8d707-294"><paramref name="keys" /> is an empty string.</span></span>

<span data-ttu-id="8d707-295">- oder -</span><span class="sxs-lookup"><span data-stu-id="8d707-295">-or-</span></span>

 <span data-ttu-id="8d707-296"><paramref name="count" /> ist eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="8d707-296"><paramref name="count" /> is an empty string.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="8d707-297">Abfragen von Daten als Objekte (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="8d707-297">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;&#xA;override this.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;" Usage="objectQuery.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d707-298">Gibt einen Enumerator zurück, der die Ergebnisse der Abfrage durchläuft.</span><span class="sxs-lookup"><span data-stu-id="8d707-298">Returns an enumerator that iterates through the results of the query.</span></span></summary>
        <returns><span data-ttu-id="8d707-299">Ein <see cref="T:System.Collections.Generic.IEnumerator`1" />-Objekt, mit dem die Ergebnisse durchlaufen werden können.</span><span class="sxs-lookup"><span data-stu-id="8d707-299">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the results.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8d707-300">Das Aufrufen von <xref:System.Data.Objects.ObjectQuery%601.System%23Collections%23Generic%23IEnumerable%7BT%7D%23GetEnumerator%2A> veranlasst die Ausführung der Abfrage.</span><span class="sxs-lookup"><span data-stu-id="8d707-300">Calling <xref:System.Data.Objects.ObjectQuery%601.System%23Collections%23Generic%23IEnumerable%7BT%7D%23GetEnumerator%2A> executes the query.</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="8d707-301">Abfragen von Daten als Objekte (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="8d707-301">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Top (string count, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Top(string count, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Top(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Top (count As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Top(System::String ^ count, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Top : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Top (count, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="8d707-302">Die Anzahl der Elemente in den Ergebnissen als Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="8d707-302">The number of items in the results as a string.</span></span></param>
        <param name="parameters"><span data-ttu-id="8d707-303">Ein optionaler Satz von Abfrageparametern, die sich beim Analysieren im Gültigkeitsbereich befinden sollten.</span><span class="sxs-lookup"><span data-stu-id="8d707-303">An optional set of query parameters that should be in scope when parsing.</span></span></param>
        <summary><span data-ttu-id="8d707-304">Beschränkt die Abfrageergebnisse auf eine bestimmte Anzahl von Elementen.</span><span class="sxs-lookup"><span data-stu-id="8d707-304">Limits the query results to a specified number of items.</span></span></summary>
        <returns><span data-ttu-id="8d707-305">Eine neue <see cref="T:System.Data.Objects.ObjectQuery`1" />-Instanz, die der ursprünglichen Instanz entspricht, für die jedoch <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/top-entity-sql">TOP</see> festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="8d707-305">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/top-entity-sql">TOP</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8d707-306">Wenn die Abfrage nicht sortiert ist, ist <xref:System.Data.Objects.ObjectQuery%601.Top%2A> nicht deterministisch.</span><span class="sxs-lookup"><span data-stu-id="8d707-306"><xref:System.Data.Objects.ObjectQuery%601.Top%2A> is nondeterministic unless the query is sorted.</span></span>

 <span data-ttu-id="8d707-307">Wenn Sie die <xref:System.Data.Objects.ObjectQuery%601.Top%2A>-Methode nach der <xref:System.Data.Objects.ObjectQuery%601.Skip%2A>-Methode verwenden, funktioniert Sie wie die [Limit](/dotnet/framework/data/adonet/ef/language-reference/limit-entity-sql) -Anweisung einer [Order by](/dotnet/framework/data/adonet/ef/language-reference/order-by-entity-sql) -Klausel.</span><span class="sxs-lookup"><span data-stu-id="8d707-307">When you use the <xref:System.Data.Objects.ObjectQuery%601.Top%2A> method after the <xref:System.Data.Objects.ObjectQuery%601.Skip%2A> method, it functions like the [LIMIT](/dotnet/framework/data/adonet/ef/language-reference/limit-entity-sql) statement of an [ORDER BY](/dotnet/framework/data/adonet/ef/language-reference/order-by-entity-sql) clause.</span></span>



## Examples
 <span data-ttu-id="8d707-308">Diese Beispiele basieren auf den [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span><span class="sxs-lookup"><span data-stu-id="8d707-308">These examples are based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span>

 <span data-ttu-id="8d707-309">In diesem Beispiel wird eine neue <xref:System.Data.Objects.ObjectQuery%601> erstellt, die die ersten beiden Ergebnisse der bestehenden Abfrage enthält.</span><span class="sxs-lookup"><span data-stu-id="8d707-309">This example creates a new <xref:System.Data.Objects.ObjectQuery%601> that contains the first two results of the existing query.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Top](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_top)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Top](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_top)]

 <span data-ttu-id="8d707-310">In diesem Beispiel werden fünf `Product` Objekte abgerufen, nachdem die ersten drei Objekte im Abfrageergebnis übersprungen wurden, sortiert nach `Product.ListPrice`.</span><span class="sxs-lookup"><span data-stu-id="8d707-310">This example gets five `Product` objects after skipping the first three in the query result, sorted by `Product.ListPrice`.</span></span> <span data-ttu-id="8d707-311"><xref:System.Data.Objects.ObjectQuery%601.Top%2A> wird anstelle von [Limit](/dotnet/framework/data/adonet/ef/language-reference/limit-entity-sql) für Paging verwendet.</span><span class="sxs-lookup"><span data-stu-id="8d707-311"><xref:System.Data.Objects.ObjectQuery%601.Top%2A> is used instead of [LIMIT](/dotnet/framework/data/adonet/ef/language-reference/limit-entity-sql) for paging.</span></span>

 [!code-csharp[DP ObjectServices Concepts#Projection_SkipLimit](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#projection_skiplimit)]
 [!code-vb[DP ObjectServices Concepts#Projection_SkipLimit](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#projection_skiplimit)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d707-312"><paramref name="count" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d707-312"><paramref name="count" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d707-313"><paramref name="count" /> ist eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="8d707-313"><paramref name="count" /> is an empty string.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="8d707-314">Abfragen von Daten als Objekte (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="8d707-314">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Union (System.Data.Objects.ObjectQuery&lt;T&gt; query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Union(class System.Data.Objects.ObjectQuery`1&lt;!T&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Union(System.Data.Objects.ObjectQuery{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (query As ObjectQuery(Of T)) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Union(System::Data::Objects::ObjectQuery&lt;T&gt; ^ query);" />
      <MemberSignature Language="F#" Value="member this.Union : System.Data.Objects.ObjectQuery&lt;'T&gt; -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Union query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Objects.ObjectQuery&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="8d707-315">Eine <see cref="T:System.Data.Objects.ObjectQuery`1" />, die die hinzuzufügenden Ergebnisse darstellt.</span><span class="sxs-lookup"><span data-stu-id="8d707-315">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the results to add.</span></span></param>
        <summary><span data-ttu-id="8d707-316">Kombiniert die Ergebnisse der Abfrage mit den Ergebnissen einer anderen Objektabfrage ohne Duplikate.</span><span class="sxs-lookup"><span data-stu-id="8d707-316">Combines the results of the query with the results of another object query, without any duplicates.</span></span></summary>
        <returns><span data-ttu-id="8d707-317">Eine neue <see cref="T:System.Data.Objects.ObjectQuery`1" />-Instanz, die der ursprünglichen Instanz entspricht, für die jedoch <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/union-entity-sql">UNION</see> festgelegt ist, um die Ergebnisse der angegebenen <paramref name="query" /> hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="8d707-317">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/union-entity-sql">UNION</see> applied to add the results of the specified <paramref name="query" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8d707-318"><xref:System.Data.Objects.ObjectQuery%601.Union%2A> fügt die Ergebnisse der angegebenen `query` ohne Duplikate hinzu.</span><span class="sxs-lookup"><span data-stu-id="8d707-318"><xref:System.Data.Objects.ObjectQuery%601.Union%2A> adds the results of the supplied `query` without any duplicates.</span></span>

 <span data-ttu-id="8d707-319">Der angegebene `query`, der die hinzu zufügenden Ergebnisse definiert, muss vom gleichen Typ oder von einem Typ sein, der zum Typ dieses <xref:System.Data.Objects.ObjectQuery%601>herauf gestuft werden kann.</span><span class="sxs-lookup"><span data-stu-id="8d707-319">The supplied `query` that defines the results to add must be of the same type or of a type that can be promoted to the type of this <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="8d707-320">Beispielsweise ist Folgendes gültig, da `DiscontinuedProducts` zu `Products`herauf gestuft werden können:</span><span class="sxs-lookup"><span data-stu-id="8d707-320">For example, the following is valid because `DiscontinuedProducts` can be promoted to `Products`:</span></span>

```
ObjectQuery<Product>.Union(ObjectQuery<DiscontinuedProduct>)
```

 <span data-ttu-id="8d707-321">Im folgenden wird eine Ausnahme ausgelöst, da `Products` nicht zu `DiscontinuedProducts`herauf gestuft werden kann.</span><span class="sxs-lookup"><span data-stu-id="8d707-321">The following will throw an exception because `Products` cannot be promoted to `DiscontinuedProducts`.</span></span>

```
ObjectQuery <DiscontinuedProduct>.Union(ObjectQuery<Product>)
```

 <span data-ttu-id="8d707-322">Für eine <xref:System.Data.Objects.ObjectQuery%601> vom Typ <xref:System.Data.Common.DbDataRecord>müssen die Datensätze in beiden Abfragen die gleiche Anzahl von Spalten aufweisen, und die Typen in den Spalten des <xref:System.Data.Common.DbDataRecord> der bestandenen `query` müssen zu den Typen der Spalten im <xref:System.Data.Common.DbDataRecord> der <xref:System.Data.Objects.ObjectQuery%601>heraufstufbar sein.</span><span class="sxs-lookup"><span data-stu-id="8d707-322">For an <xref:System.Data.Objects.ObjectQuery%601> of type <xref:System.Data.Common.DbDataRecord>, the records in both queries must have the same number of columns, and the types in the columns of the <xref:System.Data.Common.DbDataRecord> of the passed `query` must be promotable to the types of the columns in the <xref:System.Data.Common.DbDataRecord> of the <xref:System.Data.Objects.ObjectQuery%601>.</span></span>

 <span data-ttu-id="8d707-323">Parameter, die in der angegebenen `query` definiert sind, werden mit Parametern zusammengeführt, die in der <xref:System.Data.Objects.ObjectQuery%601> Instanz definiert sind.</span><span class="sxs-lookup"><span data-stu-id="8d707-323">Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance.</span></span> <span data-ttu-id="8d707-324">Parameter müssen in der kombinierten <xref:System.Data.Objects.ObjectParameterCollection> eindeutig sein.</span><span class="sxs-lookup"><span data-stu-id="8d707-324">Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="8d707-325">In der kombinierten Auflistung dürfen sich nicht zwei Parameter mit demselben Namen befinden.</span><span class="sxs-lookup"><span data-stu-id="8d707-325">There cannot be two parameters in the combined collection with the same name.</span></span> <span data-ttu-id="8d707-326">Weitere Informationen finden Sie unter [Abfrage-Generator-Methoden](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896238(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="8d707-326">For more information, see [Query Builder Methods](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896238(v=vs.100)).</span></span>

 <span data-ttu-id="8d707-327">Die resultierende Abfrage erbt die Verbindung von der <xref:System.Data.Objects.ObjectQuery%601>-Instanz, für die <xref:System.Data.Objects.ObjectQuery%601.Union%2A> aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="8d707-327">The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which <xref:System.Data.Objects.ObjectQuery%601.Union%2A> was called.</span></span>



## Examples
 <span data-ttu-id="8d707-328">Dieses Beispiel basiert auf den [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span><span class="sxs-lookup"><span data-stu-id="8d707-328">This example is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="8d707-329">In dem Beispiel wird die <xref:System.Data.Objects.ObjectQuery%601.Union%2A>-Methode verwendet, um ein neues <xref:System.Data.Objects.ObjectQuery%601>-Objekt zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="8d707-329">The example uses <xref:System.Data.Objects.ObjectQuery%601.Union%2A> method to creates a new <xref:System.Data.Objects.ObjectQuery%601> object.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Distinct_Union](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_distinct_union)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Distinct_Union](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_distinct_union)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d707-330">Der <paramref name="query" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d707-330">The <paramref name="query" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="8d707-331">Abfragen von Daten als Objekte (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="8d707-331">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UnionAll">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; UnionAll (System.Data.Objects.ObjectQuery&lt;T&gt; query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; UnionAll(class System.Data.Objects.ObjectQuery`1&lt;!T&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.UnionAll(System.Data.Objects.ObjectQuery{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function UnionAll (query As ObjectQuery(Of T)) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ UnionAll(System::Data::Objects::ObjectQuery&lt;T&gt; ^ query);" />
      <MemberSignature Language="F#" Value="member this.UnionAll : System.Data.Objects.ObjectQuery&lt;'T&gt; -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.UnionAll query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Objects.ObjectQuery&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="8d707-332">Eine <see cref="T:System.Data.Objects.ObjectQuery`1" />, die die hinzuzufügenden Ergebnisse darstellt.</span><span class="sxs-lookup"><span data-stu-id="8d707-332">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the results to add.</span></span></param>
        <summary><span data-ttu-id="8d707-333">Kombiniert die Ergebnisse der Abfrage mit den Ergebnissen einer anderen Objektabfrage einschließlich aller Duplikate.</span><span class="sxs-lookup"><span data-stu-id="8d707-333">Combines the results of the query with the results of another object query, including all duplicates.</span></span></summary>
        <returns><span data-ttu-id="8d707-334">Eine neue <see cref="T:System.Data.Objects.ObjectQuery`1" />-Instanz, die der ursprünglichen Instanz entspricht, für die jedoch <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/union-entity-sql">UNION ALL</see> festgelegt ist, um die Ergebnisse der angegebenen <paramref name="query" /> hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="8d707-334">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/union-entity-sql">UNION ALL</see> applied to add the results of the specified <paramref name="query" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8d707-335"><xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> fügt die Ergebnisse der angegebenen `query` einschließlich aller Duplikate hinzu.</span><span class="sxs-lookup"><span data-stu-id="8d707-335"><xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> adds the results of the supplied `query` including all duplicates.</span></span>

 <span data-ttu-id="8d707-336">Der angegebene `query`, der die hinzu zufügenden Ergebnisse definiert, muss vom gleichen Typ oder von einem Typ sein, der zum Typ dieses <xref:System.Data.Objects.ObjectQuery%601>herauf gestuft werden kann.</span><span class="sxs-lookup"><span data-stu-id="8d707-336">The supplied `query` that defines results to add must be of the same type or of a type that can be promoted to the type of this <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="8d707-337">Beispielsweise ist Folgendes gültig, da `DiscontinuedProducts` zu `Products`herauf gestuft werden können:</span><span class="sxs-lookup"><span data-stu-id="8d707-337">For example, the following is valid because `DiscontinuedProducts` can be promoted to `Products`:</span></span>

```
ObjectQuery<Product>.Union(ObjectQuery<DiscontinuedProduct>)
```

 <span data-ttu-id="8d707-338">Im folgenden wird eine Ausnahme ausgelöst, da `Products` nicht zu `DiscontinuedProducts`herauf gestuft werden kann.</span><span class="sxs-lookup"><span data-stu-id="8d707-338">The following will throw an exception because `Products` cannot be promoted to `DiscontinuedProducts`.</span></span>

```
ObjectQuery <DiscontinuedProduct>.Union(ObjectQuery<Product>)
```

 <span data-ttu-id="8d707-339">Für eine <xref:System.Data.Objects.ObjectQuery%601> vom Typ <xref:System.Data.Common.DbDataRecord>müssen die Datensätze in beiden Abfragen die gleiche Anzahl von Spalten aufweisen, und die Typen in den Spalten des <xref:System.Data.Common.DbDataRecord> der bestandenen `query` müssen zu den Typen der Spalten im <xref:System.Data.Common.DbDataRecord> der <xref:System.Data.Objects.ObjectQuery%601>heraufstufbar sein.</span><span class="sxs-lookup"><span data-stu-id="8d707-339">For an <xref:System.Data.Objects.ObjectQuery%601> of type <xref:System.Data.Common.DbDataRecord>, the records in both queries must have the same number of columns, and the types in the columns of the <xref:System.Data.Common.DbDataRecord> of the passed `query` must be promotable to the types of the columns in the <xref:System.Data.Common.DbDataRecord> of the <xref:System.Data.Objects.ObjectQuery%601>.</span></span>

 <span data-ttu-id="8d707-340">Parameter, die in der angegebenen `query` definiert sind, werden mit Parametern zusammengeführt, die in der <xref:System.Data.Objects.ObjectQuery%601> Instanz definiert sind.</span><span class="sxs-lookup"><span data-stu-id="8d707-340">Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance.</span></span> <span data-ttu-id="8d707-341">Parameter müssen in der kombinierten <xref:System.Data.Objects.ObjectParameterCollection> eindeutig sein.</span><span class="sxs-lookup"><span data-stu-id="8d707-341">Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="8d707-342">In der kombinierten Auflistung dürfen sich nicht zwei Parameter mit demselben Namen befinden.</span><span class="sxs-lookup"><span data-stu-id="8d707-342">There cannot be two parameters in the combined collection with the same name.</span></span> <span data-ttu-id="8d707-343">Weitere Informationen finden Sie unter [Abfrage-Generator-Methoden](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896238(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="8d707-343">For more information, see [Query Builder Methods](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896238(v=vs.100)).</span></span>

 <span data-ttu-id="8d707-344">Die resultierende Abfrage erbt die Verbindung von der <xref:System.Data.Objects.ObjectQuery%601>-Instanz, für die <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="8d707-344">The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> was called.</span></span>



## Examples
 <span data-ttu-id="8d707-345">Das Beispiel in diesem Thema basiert auf den [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span><span class="sxs-lookup"><span data-stu-id="8d707-345">The example in this topic is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="8d707-346">In dem Beispiel wird die <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A>-Methode zur Erstellung eines neuen <xref:System.Data.Objects.ObjectQuery%601>-Objekts verwendet.</span><span class="sxs-lookup"><span data-stu-id="8d707-346">The example uses the <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> method to create a new <xref:System.Data.Objects.ObjectQuery%601> object.</span></span> <span data-ttu-id="8d707-347">Anschließend wird die <xref:System.Data.Objects.ObjectQuery%601.Distinct%2A>-Methode für das neue <xref:System.Data.Objects.ObjectQuery%601>-Objekt aufgerufen, um die eindeutigen Ergebnisse dieser Abfrage abzurufen.</span><span class="sxs-lookup"><span data-stu-id="8d707-347">Then it calls the <xref:System.Data.Objects.ObjectQuery%601.Distinct%2A> method on the new <xref:System.Data.Objects.ObjectQuery%601> object to get the unique results of this query.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_distinct_unionall)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_distinct_unionall)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d707-348">Der <paramref name="query" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d707-348">The <paramref name="query" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="8d707-349">Abfragen von Daten als Objekte (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="8d707-349">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Where">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Where (string predicate, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Where(string predicate, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Where(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Where (predicate As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Where(System::String ^ predicate, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Where : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Where (predicate, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="predicate"><span data-ttu-id="8d707-350">Das Filterprädikat.</span><span class="sxs-lookup"><span data-stu-id="8d707-350">The filter predicate.</span></span></param>
        <param name="parameters"><span data-ttu-id="8d707-351">Null oder mehr Parameter, die in dieser Methode verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="8d707-351">Zero or more parameters that are used in this method.</span></span></param>
        <summary><span data-ttu-id="8d707-352">Beschränkt die Abfrage auf Ergebnisse, die bestimmten Filterkriterien entsprechen.</span><span class="sxs-lookup"><span data-stu-id="8d707-352">Limits the query to results that match specified filtering criteria.</span></span></summary>
        <returns><span data-ttu-id="8d707-353">Eine neue <see cref="T:System.Data.Objects.ObjectQuery`1" />-Instanz, die der ursprünglichen Instanz entspricht, für die jedoch <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/where-entity-sql">WHERE</see> festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="8d707-353">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/where-entity-sql">WHERE</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="8d707-354">Dieses Beispiel basiert auf den [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span><span class="sxs-lookup"><span data-stu-id="8d707-354">This example is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="8d707-355">In diesem Beispiel wird eine neue <xref:System.Data.Objects.ObjectQuery%601> erstellt, die anhand folgender Kriterien gefilterte Ergebnisse der bestehenden Abfrage enthält: `"it.ProductID = 900"`.</span><span class="sxs-lookup"><span data-stu-id="8d707-355">The example creates a new <xref:System.Data.Objects.ObjectQuery%601> that contains results of the existing query filtered by the following criteria: `"it.ProductID = 900"`.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Where](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_where)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Where](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_where)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d707-356"><paramref name="predicate" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d707-356"><paramref name="predicate" /> is <see langword="null" />.</span></span>

<span data-ttu-id="8d707-357">- oder -</span><span class="sxs-lookup"><span data-stu-id="8d707-357">-or-</span></span>

 <span data-ttu-id="8d707-358"><paramref name="parameters" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d707-358"><paramref name="parameters" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d707-359">Der <paramref name="predicate" /> ist eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="8d707-359">The <paramref name="predicate" /> is an empty string.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="8d707-360">Abfragen von Daten als Objekte (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="8d707-360">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
