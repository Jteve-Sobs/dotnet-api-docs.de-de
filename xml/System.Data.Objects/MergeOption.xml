<Type Name="MergeOption" FullName="System.Data.Objects.MergeOption">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a0b696fe28851ef6026576b007358d54bd37f08c" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70507521" /></Metadata><TypeSignature Language="C#" Value="public enum MergeOption" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MergeOption extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.MergeOption" />
  <TypeSignature Language="VB.NET" Value="Public Enum MergeOption" />
  <TypeSignature Language="C++ CLI" Value="public enum class MergeOption" />
  <TypeSignature Language="F#" Value="type MergeOption = " />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Gibt an, wie Objekte, die in den Objektkontext geladen werden, mit bereits im Objektkontext vorhandenen Objekten zusammengeführt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Entity Framework verwaltet nur eine einzelne Instanz eines Objekts mit einem bestimmten Entitäts Schlüssel im Cache. Die <xref:System.Data.EntityKey> -Objekte sind unveränderliche Objekte, die die Identität des Objekts darstellen. Entitätsschlüssel werden für die Identitätsauflösung im Objektkontext verwendet. Weitere Informationen finden Sie unter [Arbeiten mit Entitäts Schlüsseln](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/dd283139(v=vs.100)). Wenn eine Entität mit der gleichen Identität bereits nachverfolgt wird, werden die Daten aus der Datenquelle und die Daten, die sich bereits im Zustands-Manager befinden <xref:System.Data.Objects.MergeOption> , entsprechend der der Abfrage zusammengeführt.  

### <a name="additional-information-on-mergeoptionpreservechanges"></a>Weitere Informationen zu`MergeOption.PreserveChanges`

 Wenn der Zustand der Entität <xref:System.Data.EntityState.Unchanged?displayProperty=nameWithType> ist, werden die aktuellen und ursprünglichen Werte des Eintrags mit Datenquellenwerten überschrieben. Der Zustand der Entität bleibt <xref:System.Data.EntityState.Unchanged?displayProperty=nameWithType>, und es werden keine Eigenschaften als geändert markiert.  
  
 Wenn der Zustand der Entität <xref:System.Data.EntityState.Modified?displayProperty=nameWithType> ist, werden die aktuellen Werte geänderter Eigenschaften nicht mit Datenquellenwerten überschrieben. Die ursprünglichen Werte ungeänderter Eigenschaften werden mit den Werten der Datenquelle überschrieben.  
  
 In .NET Framework 4 vergleicht der Entity Framework die aktuellen Werte unveränderter Eigenschaften mit den Werten, die von der Datenquelle zurückgegeben wurden. Wenn die Werte nicht identisch sind, wird die Eigenschaft als geändert markiert.  
  
 In .NET Framework 3,5 SP1 wird die Eigenschaft von der Entity Framework nicht als geändert markiert, auch wenn der Wert in der Datenquelle anders ist.  
  
 Nur geänderte Eigenschaften werden beim Aufrufen von <xref:System.Data.Objects.ObjectContext.SaveChanges%2A?displayProperty=nameWithType> in der Datenquelle beibehalten.  
  
 Legen Sie auf <xref:System.Data.Objects.ObjectContextOptions.UseLegacyPreserveChangesBehavior%2A?displayProperty=nameWithType> `true`fest, um das .NET Framework 3,5 SP1-Verhalten beizubehalten. Die Option `PreserveChanges` kann verwendet werden, um Ausnahmen bzgl. vollständiger Parallelität aufzulösen und gleichzeitig Änderungen im lokalen Kontext beizubehalten. Weitere Informationen finden Sie unter [Speichern von Änderungen und verwalten](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738618(v=vs.100))von Parallelität.
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AppendOnly">
      <MemberSignature Language="C#" Value="AppendOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption AppendOnly = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Objects.MergeOption.AppendOnly" />
      <MemberSignature Language="VB.NET" Value="AppendOnly" />
      <MemberSignature Language="C++ CLI" Value="AppendOnly" />
      <MemberSignature Language="F#" Value="AppendOnly = 0" Usage="System.Data.Objects.MergeOption.AppendOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Objekte, die nicht im Objektkontext vorhanden sind, werden an den Kontext angefügt. Wenn sich ein Objekt bereits im Kontext befindet, werden die aktuellen und ursprünglichen Werte der Objekteigenschaften im Eintrag nicht mit Datenquellenwerten überschrieben. Der Zustand des Objekteintrags und der Objekteigenschaften des Eintrags werden nicht geändert. <see cref="F:System.Data.Objects.MergeOption.AppendOnly" /> ist die Standardzusammenführungsoption.</summary>
      </Docs>
    </Member>
    <Member MemberName="NoTracking">
      <MemberSignature Language="C#" Value="NoTracking" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption NoTracking = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Objects.MergeOption.NoTracking" />
      <MemberSignature Language="VB.NET" Value="NoTracking" />
      <MemberSignature Language="C++ CLI" Value="NoTracking" />
      <MemberSignature Language="F#" Value="NoTracking = 3" Usage="System.Data.Objects.MergeOption.NoTracking" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Objekte werden im <see cref="F:System.Data.EntityState.Detached" />-Zustand beibehalten und nicht im <see cref="T:System.Data.Objects.ObjectStateManager" /> nachverfolgt. [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]-generierte Entitäten und POCO-Entitäten mit Proxys behalten jedoch einen Verweis auf den Objektkontext bei, um das Laden von verknüpften Objekten zu erleichtern.</summary>
      </Docs>
    </Member>
    <Member MemberName="OverwriteChanges">
      <MemberSignature Language="C#" Value="OverwriteChanges" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption OverwriteChanges = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Objects.MergeOption.OverwriteChanges" />
      <MemberSignature Language="VB.NET" Value="OverwriteChanges" />
      <MemberSignature Language="C++ CLI" Value="OverwriteChanges" />
      <MemberSignature Language="F#" Value="OverwriteChanges = 1" Usage="System.Data.Objects.MergeOption.OverwriteChanges" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Objekte, die nicht im Objektkontext vorhanden sind, werden an den Kontext angefügt. Wenn sich ein Objekt bereits im Kontext befindet, werden die aktuellen und ursprünglichen Werte der Objekteigenschaften im Eintrag mit Datenquellenwerten überschrieben. Der Zustand des Objekteintrags wird auf <see cref="F:System.Data.EntityState.Unchanged" /> festgelegt. Dabei werden keine Eigenschaften als geändert markiert.</summary>
      </Docs>
    </Member>
    <Member MemberName="PreserveChanges">
      <MemberSignature Language="C#" Value="PreserveChanges" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption PreserveChanges = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Objects.MergeOption.PreserveChanges" />
      <MemberSignature Language="VB.NET" Value="PreserveChanges" />
      <MemberSignature Language="C++ CLI" Value="PreserveChanges" />
      <MemberSignature Language="F#" Value="PreserveChanges = 2" Usage="System.Data.Objects.MergeOption.PreserveChanges" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Objekte, die nicht im Objektkontext vorhanden sind, werden an den Kontext angefügt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
