<Type Name="ObjectQuery" FullName="System.Data.Objects.ObjectQuery">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a341f492b0fea39adae37ffb760f4157c4821e84" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78814693" /></Metadata><TypeSignature Language="C#" Value="public abstract class ObjectQuery : System.Collections.IEnumerable, System.ComponentModel.IListSource, System.Linq.IOrderedQueryable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ObjectQuery extends System.Object implements class System.Collections.IEnumerable, class System.ComponentModel.IListSource, class System.Linq.IOrderedQueryable, class System.Linq.IQueryable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectQuery" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ObjectQuery&#xA;Implements IEnumerable, IListSource, IOrderedQueryable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectQuery abstract : System::Collections::IEnumerable, System::ComponentModel::IListSource, System::Linq::IOrderedQueryable" />
  <TypeSignature Language="F#" Value="type ObjectQuery = class&#xA;    interface IOrderedQueryable&#xA;    interface IQueryable&#xA;    interface IEnumerable&#xA;    interface IListSource" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
  <TypeSignature Language="F#" Value="type ObjectQuery = class&#xA;    interface IEnumerable&#xA;    interface IQueryable&#xA;    interface IOrderedQueryable&#xA;    interface IListSource" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IOrderedQueryable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="3d996-101">Implementiert allgemeine Funktionen für Abfragen eines konzeptionellen Modells mit LINQ to Entities und <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span><span class="sxs-lookup"><span data-stu-id="3d996-101">Implements common functionality for queries against a conceptual model using both LINQ to Entities and <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3d996-102"><xref:System.Data.Objects.ObjectQuery> ist die Basisklasse für Abfragen eines konzeptionellen Modells.</span><span class="sxs-lookup"><span data-stu-id="3d996-102"><xref:System.Data.Objects.ObjectQuery> is the base class for queries against a conceptual model.</span></span> <span data-ttu-id="3d996-103"><xref:System.Data.Objects.ObjectQuery> bereitgestellt wird, um sicherzustellen, dass LINQ to Entities Abfragen die gleiche Funktionalität wie Abfragen mit <xref:System.Data.Objects.ObjectQuery%601>aufweisen.</span><span class="sxs-lookup"><span data-stu-id="3d996-103"><xref:System.Data.Objects.ObjectQuery> is provided to ensure that LINQ to Entities queries have the same functionality as queries executed using <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="3d996-104">Sie müssen <xref:System.Data.Objects.ObjectQuery%601> mit einem angegebenen Typ verwenden, um ein konzeptionelles Modell abzufragen.</span><span class="sxs-lookup"><span data-stu-id="3d996-104">You must use <xref:System.Data.Objects.ObjectQuery%601> with a specified type to query a conceptual model.</span></span> <span data-ttu-id="3d996-105">Weitere Informationen finden Sie unter [Objekt Abfragen](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896241(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="3d996-105">For more information, see [Object Queries](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896241(v=vs.100)).</span></span>

 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/ef/language-reference/linq-to-entities.md"><span data-ttu-id="3d996-106">LINQ to Entities</span><span class="sxs-lookup"><span data-stu-id="3d996-106">LINQ to Entities</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public string CommandText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandText : string" Usage="System.Data.Objects.ObjectQuery.CommandText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d996-107">Gibt den Befehlstext für die Abfrage zurück.</span><span class="sxs-lookup"><span data-stu-id="3d996-107">Returns the command text for the query.</span></span></summary>
        <value><span data-ttu-id="3d996-108">Ein <see langword="string" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="3d996-108">A <see langword="string" /> value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As ObjectContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::ObjectContext ^ Context { System::Data::Objects::ObjectContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Data.Objects.ObjectContext" Usage="System.Data.Objects.ObjectQuery.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d996-109">Ruft den dieser Objektabfrage zugeordneten Objektkontext ab.</span><span class="sxs-lookup"><span data-stu-id="3d996-109">Gets the object context associated with this object query.</span></span></summary>
        <value><span data-ttu-id="3d996-110">Der dieser <see cref="T:System.Data.Objects.ObjectContext" />-Instanz zugeordnete <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span><span class="sxs-lookup"><span data-stu-id="3d996-110">The <see cref="T:System.Data.Objects.ObjectContext" /> associated with this <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3d996-111">Der Kontext der Abfrage umfasst die Verbindung, den Cache und die Metadaten.</span><span class="sxs-lookup"><span data-stu-id="3d996-111">The context for the query includes the connection, cache, and metadata.</span></span> <span data-ttu-id="3d996-112">Weitere Informationen finden Sie unter [Übersicht über Object Services (Entity Framework)](https://docs.microsoft.com/previous-versions/bb386871(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="3d996-112">For more information, see [Object Services Overview (Entity Framework)](https://docs.microsoft.com/previous-versions/bb386871(v=vs.100)).</span></span>

 <span data-ttu-id="3d996-113">Die Verbindungseigenschaft ist änderbar und muss festgelegt werden, damit eine Abfrage ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="3d996-113">The connection property is mutable and must be set before a query can be executed.</span></span> <span data-ttu-id="3d996-114">Weitere Informationen finden Sie unter [Verwalten von Verbindungen in Object Services (Entity Framework)](https://docs.microsoft.com/previous-versions/bb738582(v=vs.90)).</span><span class="sxs-lookup"><span data-stu-id="3d996-114">For more information, see [Managing Connections in Object Services (Entity Framework)](https://docs.microsoft.com/previous-versions/bb738582(v=vs.90)).</span></span>



## Examples
 <span data-ttu-id="3d996-115">Das Beispiel in diesem Thema basiert auf den [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span><span class="sxs-lookup"><span data-stu-id="3d996-115">The example in this topic is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="3d996-116">Im Beispiel wird das <xref:System.Data.Objects.ObjectContext>-Objekt abgerufen, das diesem <xref:System.Data.Objects.ObjectQuery%601>-Objekt zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="3d996-116">The example gets the <xref:System.Data.Objects.ObjectContext> object associated with this <xref:System.Data.Objects.ObjectQuery%601> object.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Context](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_context)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Context](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_context)]

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="3d996-117">Abfragen von Daten als Objekte und Strukturieren von Ergebnissen (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="3d996-117">Querying Data as Objects and Shaping Results (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnablePlanCaching">
      <MemberSignature Language="C#" Value="public bool EnablePlanCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePlanCaching" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.EnablePlanCaching" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePlanCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePlanCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePlanCaching : bool with get, set" Usage="System.Data.Objects.ObjectQuery.EnablePlanCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d996-118">Ruft einen Wert ab, der angibt, ob der Abfrageplan zwischengespeichert werden soll, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="3d996-118">Gets or sets a value that indicates whether the query plan should be cached.</span></span></summary>
        <value><span data-ttu-id="3d996-119">Ein Wert, der angibt, ob der Abfrageplan zwischengespeichert werden soll.</span><span class="sxs-lookup"><span data-stu-id="3d996-119">A value that indicates whether the query plan should be cached.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3d996-120">Weitere Informationen finden Sie unter zwischen [Speichern von Abfrage Plänen](~/docs/framework/data/adonet/ef/language-reference/query-plan-caching-entity-sql.md).</span><span class="sxs-lookup"><span data-stu-id="3d996-120">For more information, see [Query Plan Caching](~/docs/framework/data/adonet/ef/language-reference/query-plan-caching-entity-sql.md).</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="3d996-121">Abfragen von Daten als Objekte (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="3d996-121">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectResult Execute (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectResult Execute(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.Execute(System.Data.Objects.MergeOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute (mergeOption As MergeOption) As ObjectResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectResult ^ Execute(System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="member this.Execute : System.Data.Objects.MergeOption -&gt; System.Data.Objects.ObjectResult" Usage="objectQuery.Execute mergeOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption"><span data-ttu-id="3d996-122">Die beim Ausführen der Abfrage zu verwendende <see cref="T:System.Data.Objects.MergeOption" />.</span><span class="sxs-lookup"><span data-stu-id="3d996-122">The <see cref="T:System.Data.Objects.MergeOption" /> to use when executing the query.</span></span> <span data-ttu-id="3d996-123">Der Standardwert ist <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.</span><span class="sxs-lookup"><span data-stu-id="3d996-123">The default is <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.</span></span></param>
        <summary><span data-ttu-id="3d996-124">Führt die nicht typisierte Objektabfrage mit der angegebenen Zusammenführungsoption aus.</span><span class="sxs-lookup"><span data-stu-id="3d996-124">Executes the untyped object query with the specified merge option.</span></span></summary>
        <returns><span data-ttu-id="3d996-125">Ein <see cref="T:System.Data.Objects.ObjectResult`1" />, das eine Auflistung der von dieser Abfrage zurückgegebenen Entitätsobjekte enthält.</span><span class="sxs-lookup"><span data-stu-id="3d996-125">An <see cref="T:System.Data.Objects.ObjectResult`1" /> that contains a collection of entity objects returned by the query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3d996-126">Die Standardmergeoption für Objektabfragen ist <xref:System.Data.Objects.MergeOption.AppendOnly>.</span><span class="sxs-lookup"><span data-stu-id="3d996-126">The default merge option for object queries is <xref:System.Data.Objects.MergeOption.AppendOnly>.</span></span> <span data-ttu-id="3d996-127">Weitere Informationen finden Sie unter [Identitäts Auflösung, Zustands Verwaltung und Änderungsnachverfolgung](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896269(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="3d996-127">For more information, see [Identity Resolution, State Management, and Change Tracking](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896269(v=vs.100)).</span></span>

 <span data-ttu-id="3d996-128">Ruft die <xref:System.Data.Objects.ObjectQuery%601.Execute%2A>-Methode für <xref:System.Data.Objects.ObjectQuery%601> für typisierte Objekt Abfragen auf.</span><span class="sxs-lookup"><span data-stu-id="3d996-128">Call the <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> method on <xref:System.Data.Objects.ObjectQuery%601> for typed object queries.</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="3d996-129">Abfragen von Daten als Objekte (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="3d996-129">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetResultType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.TypeUsage GetResultType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.TypeUsage GetResultType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.GetResultType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResultType () As TypeUsage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::TypeUsage ^ GetResultType();" />
      <MemberSignature Language="F#" Value="member this.GetResultType : unit -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="objectQuery.GetResultType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3d996-130">Gibt Informationen über den Ergebnistyp der Abfrage zurück.</span><span class="sxs-lookup"><span data-stu-id="3d996-130">Returns information about the result type of the query.</span></span></summary>
        <returns><span data-ttu-id="3d996-131">Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" />-Wert, der Informationen über den Ergebnistyp der Abfrage enthält.</span><span class="sxs-lookup"><span data-stu-id="3d996-131">A <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> value that contains information about the result type of the query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="3d996-132">Dieses Beispiel basiert auf den [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span><span class="sxs-lookup"><span data-stu-id="3d996-132">This example is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="3d996-133">Im Beispiel wird eine <xref:System.Data.Objects.ObjectQuery%601> des Typs <xref:System.Data.Common.DbDataRecord> erstellt, und mit <xref:System.Data.Objects.ObjectQuery.GetResultType%2A> wird ermittelt, ob der zurückgegebene Typ eine Zeile darstellt.</span><span class="sxs-lookup"><span data-stu-id="3d996-133">The example creates an <xref:System.Data.Objects.ObjectQuery%601> of type <xref:System.Data.Common.DbDataRecord> and uses <xref:System.Data.Objects.ObjectQuery.GetResultType%2A> to determine whether the type returned represents a row.</span></span>

 [!code-csharp[DP ObjectServices Concepts#GetResultType](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#getresulttype)]
 [!code-vb[DP ObjectServices Concepts#GetResultType](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#getresulttype)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/bb738582(v=vs.90)"><span data-ttu-id="3d996-134">Verwalten von Verbindungen in Objektdiensten (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="3d996-134">Managing Connections in Object Services (Entity Framework)</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/bb399207(v=vs.90)"><span data-ttu-id="3d996-135">ADO.NET-Metadaten</span><span class="sxs-lookup"><span data-stu-id="3d996-135">ADO.NET Metadata</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MergeOption">
      <MemberSignature Language="C#" Value="public System.Data.Objects.MergeOption MergeOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Objects.MergeOption MergeOption" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.MergeOption" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeOption As MergeOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::MergeOption MergeOption { System::Data::Objects::MergeOption get(); void set(System::Data::Objects::MergeOption value); };" />
      <MemberSignature Language="F#" Value="member this.MergeOption : System.Data.Objects.MergeOption with get, set" Usage="System.Data.Objects.ObjectQuery.MergeOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d996-136">Ruft ab oder legt fest, wie dem Objektkontext von einer Abfrage zurückgegebene Objekte hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="3d996-136">Gets or sets how objects returned from a query are added to the object context.</span></span></summary>
        <value><span data-ttu-id="3d996-137">Die <see cref="T:System.Data.Objects.MergeOption" /> der Abfrage.</span><span class="sxs-lookup"><span data-stu-id="3d996-137">The query <see cref="T:System.Data.Objects.MergeOption" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3d996-138">Wenn keine <xref:System.Data.Objects.MergeOption> angegeben wird, lautet der Standardwert <xref:System.Data.Objects.MergeOption.AppendOnly>.</span><span class="sxs-lookup"><span data-stu-id="3d996-138">If no <xref:System.Data.Objects.MergeOption> is specified, the default value is <xref:System.Data.Objects.MergeOption.AppendOnly>.</span></span> <span data-ttu-id="3d996-139">Weitere Informationen finden Sie unter [Identitäts Auflösung, Zustands Verwaltung und Änderungsnachverfolgung](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896269(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="3d996-139">For more information, see [Identity Resolution, State Management, and Change Tracking](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896269(v=vs.100)).</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="3d996-140">Abfragen von Daten als Objekte und Strukturieren von Ergebnissen (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="3d996-140">Querying Data as Objects and Shaping Results (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As ObjectParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::ObjectParameterCollection ^ Parameters { System::Data::Objects::ObjectParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Data.Objects.ObjectParameterCollection" Usage="System.Data.Objects.ObjectQuery.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d996-141">Ruft die Parameterauflistung für diese Objektabfrage ab.</span><span class="sxs-lookup"><span data-stu-id="3d996-141">Gets the parameter collection for this object query.</span></span></summary>
        <value><span data-ttu-id="3d996-142">Die Parameterauflistung für diese <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span><span class="sxs-lookup"><span data-stu-id="3d996-142">The parameter collection for this <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3d996-143">Geben Sie Parameter, die an die Abfrage übergeben werden, mit der zurückgegebenen <xref:System.Data.Objects.ObjectParameterCollection> an.</span><span class="sxs-lookup"><span data-stu-id="3d996-143">Use the returned <xref:System.Data.Objects.ObjectParameterCollection> to specify parameters that are passed to the query.</span></span> <span data-ttu-id="3d996-144">Weitere Informationen finden Sie unter [Abfrage-Generator-Methoden](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896238(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="3d996-144">For more information, see [Query Builder Methods](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896238(v=vs.100)).</span></span>



## Examples
 <span data-ttu-id="3d996-145">Dieses Beispiel basiert auf den [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span><span class="sxs-lookup"><span data-stu-id="3d996-145">This example is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="3d996-146">In diesem Beispiel werden der Auflistung neue Parameter hinzugefügt und dann die Parameterauflistung für diese <xref:System.Data.Objects.ObjectQuery%601> abgerufen.</span><span class="sxs-lookup"><span data-stu-id="3d996-146">The example adds new parameters to the collection and then gets the parameter collection for this <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="3d996-147">Daraufhin wird die <xref:System.Data.Objects.ObjectParameterCollection> durchlaufen, und für jeden Parameter in der Auflistung werden Name, Typ und Wert angezeigt.</span><span class="sxs-lookup"><span data-stu-id="3d996-147">Then it iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="3d996-148">Abfragen von Daten als Objekte (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="3d996-148">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="objectQuery.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3d996-149">Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</span><span class="sxs-lookup"><span data-stu-id="3d996-149">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="3d996-150">Ein <see cref="T:System.Collections.IEnumerator" />, der zum Durchlaufen der Auflistung verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="3d996-150">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3d996-151">Durch Aufrufen von <xref:System.Data.Objects.ObjectQuery.System%23Collections%23IEnumerable%23GetEnumerator%2A> wird die Abfrage mit der in der <xref:System.Data.Objects.ObjectQuery.MergeOption%2A>-Eigenschaft angegeben Mergeoption ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="3d996-151">Calling <xref:System.Data.Objects.ObjectQuery.System%23Collections%23IEnumerable%23GetEnumerator%2A> executes the query with the merge option that is specified by the <xref:System.Data.Objects.ObjectQuery.MergeOption%2A> property.</span></span>

 <span data-ttu-id="3d996-152">Die `foreach`-Anweisung der Programmiersprache C# (`For Each` in Visual Basic) verbirgt die Komplexität der Enumeratoren.</span><span class="sxs-lookup"><span data-stu-id="3d996-152">The `foreach` statement of the C# language (`For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="3d996-153">Daher empfiehlt es sich, `foreach` zu verwenden und den Enumerator nicht direkt zu ändern.</span><span class="sxs-lookup"><span data-stu-id="3d996-153">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>

 <span data-ttu-id="3d996-154">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="3d996-154">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="3d996-155">Abfragen von Daten als Objekte (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="3d996-155">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::IListSource::ContainsListCollection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.ComponentModel.IListSource.ContainsListCollection : bool" Usage="System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IListSource.ContainsListCollection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d996-156">Ruft einen Wert ab, der angibt, ob die von der Abfrage zurückgegebene Auflistung Auflistungsobjekte enthält.</span><span class="sxs-lookup"><span data-stu-id="3d996-156">Gets a value that indicates whether the collection returned by the query contains collection objects.</span></span></summary>
        <value><span data-ttu-id="3d996-157">Ein boolescher Wert.</span><span class="sxs-lookup"><span data-stu-id="3d996-157">A Boolean value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3d996-158">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="3d996-158">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3d996-159">Er kann nur verwendet werden, wenn die <xref:System.Data.Objects.ObjectQuery%601>-Instanz in eine <xref:System.ComponentModel.IListSource>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="3d996-159">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>

 <span data-ttu-id="3d996-160">Diese Eigenschaft gibt immer `false` zurück, da die von der Abfrage zurückgegebene Auflistung Objekte und keine Auflistungen enthält.</span><span class="sxs-lookup"><span data-stu-id="3d996-160">This property always returns `false` because the collection returned by the query contains objects and not collections.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberSignature Language="F#" Value="abstract member System.ComponentModel.IListSource.GetList : unit -&gt; System.Collections.IList&#xA;override this.System.ComponentModel.IListSource.GetList : unit -&gt; System.Collections.IList" Usage="objectQuery.System.ComponentModel.IListSource.GetList " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IListSource.GetList</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3d996-161">Gibt die Auflistung als <see cref="T:System.Collections.IList" /> zurück, die für die Datenbindung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="3d996-161">Returns the collection as an <see cref="T:System.Collections.IList" /> used for data binding.</span></span></summary>
        <returns><span data-ttu-id="3d996-162">Eine <see cref="T:System.Collections.IList" /> von Entitätsobjekten.</span><span class="sxs-lookup"><span data-stu-id="3d996-162">An <see cref="T:System.Collections.IList" /> of entity objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3d996-163">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="3d996-163">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3d996-164">Er kann nur verwendet werden, wenn die <xref:System.Data.Objects.ObjectQuery%601>-Instanz in eine <xref:System.ComponentModel.IListSource>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="3d996-164">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>

 <span data-ttu-id="3d996-165">Diese Methode ermöglicht die Datenbindung zum Ergebnis der Abfrage.</span><span class="sxs-lookup"><span data-stu-id="3d996-165">This method enables data binding to the result of the query.</span></span> <span data-ttu-id="3d996-166">Sie wird von dem Steuerelement aufgerufen, das an die Auflistung gebunden ist.</span><span class="sxs-lookup"><span data-stu-id="3d996-166">It is called by the control bound to the collection.</span></span> <span data-ttu-id="3d996-167">Weitere Informationen finden Sie unter [Binden von Objekten an Steuerelemente](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738469(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="3d996-167">For more information, see [Binding Objects to Controls](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738469(v=vs.100)).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryable.ElementType">
      <MemberSignature Language="C#" Value="Type System.Linq.IQueryable.ElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type System.Linq.IQueryable.ElementType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ElementType As Type Implements IQueryable.ElementType" />
      <MemberSignature Language="C++ CLI" Value="property Type ^ System::Linq::IQueryable::ElementType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Linq.IQueryable.ElementType : Type" Usage="System.Linq.IQueryable.ElementType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Linq.IQueryable.ElementType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d996-168">Ruft den Ergebniselementtyp für diese Abfrageinstanz ab.</span><span class="sxs-lookup"><span data-stu-id="3d996-168">Gets the result element type for this query instance.</span></span></summary>
        <value><span data-ttu-id="3d996-169">Ein <see cref="T:System.Type" />, der der Ergebniselementtyp für diese Abfrageinstanz ist.</span><span class="sxs-lookup"><span data-stu-id="3d996-169">A <see cref="T:System.Type" /> that is the result element type for this query instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3d996-170">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="3d996-170">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3d996-171">Er kann nur verwendet werden, wenn die <xref:System.Data.Objects.ObjectQuery%601>-Instanz in eine <xref:System.ComponentModel.IListSource>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="3d996-171">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryable.Expression">
      <MemberSignature Language="C#" Value="System.Linq.Expressions.Expression System.Linq.IQueryable.Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression System.Linq.IQueryable.Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Expression As Expression Implements IQueryable.Expression" />
      <MemberSignature Language="C++ CLI" Value="property System::Linq::Expressions::Expression ^ System::Linq::IQueryable::Expression { System::Linq::Expressions::Expression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Linq.IQueryable.Expression : System.Linq.Expressions.Expression" Usage="System.Linq.IQueryable.Expression" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Linq.IQueryable.Expression</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d996-172">Ruft den Ausdruck ab, der diese Abfrage beschreibt.</span><span class="sxs-lookup"><span data-stu-id="3d996-172">Gets the expression describing this query.</span></span></summary>
        <value><span data-ttu-id="3d996-173">Der LINQ-<see cref="T:System.Linq.Expressions.Expression" />, der diese Abfrage beschreibt.</span><span class="sxs-lookup"><span data-stu-id="3d996-173">The LINQ <see cref="T:System.Linq.Expressions.Expression" /> that describes this query.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3d996-174">Bei Abfragen, die mit LINQ-Erstellungsmustern erstellt werden, wird eine vollständige LINQ-Ausdrucksbaumstruktur zurückgegeben, andernfalls ein konstanter Ausdruck, der diese Abfrage umschließt.</span><span class="sxs-lookup"><span data-stu-id="3d996-174">For queries built by using LINQ builder patterns, this returns a full LINQ expression tree; otherwise, it returns a constant expression that wraps this query.</span></span> <span data-ttu-id="3d996-175">Beachten Sie, dass der Standardausdruck nicht zwischengespeichert wird.</span><span class="sxs-lookup"><span data-stu-id="3d996-175">Note that the default expression is not cached.</span></span> <span data-ttu-id="3d996-176">Dadurch kann das Framework LINQ- und Entity SQL-Abfragen unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="3d996-176">This allows the framework to differentiate between LINQ and Entity SQL queries.</span></span>

 <span data-ttu-id="3d996-177">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="3d996-177">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3d996-178">Er kann nur verwendet werden, wenn die <xref:System.Data.Objects.ObjectQuery%601>-Instanz in eine <xref:System.ComponentModel.IListSource>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="3d996-178">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryable.Provider">
      <MemberSignature Language="C#" Value="System.Linq.IQueryProvider System.Linq.IQueryable.Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.IQueryProvider System.Linq.IQueryable.Provider" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Provider As IQueryProvider Implements IQueryable.Provider" />
      <MemberSignature Language="C++ CLI" Value="property System::Linq::IQueryProvider ^ System::Linq::IQueryable::Provider { System::Linq::IQueryProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Linq.IQueryable.Provider : System.Linq.IQueryProvider" Usage="System.Linq.IQueryable.Provider" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Linq.IQueryable.Provider</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3d996-179">Ruft den LINQ-<see cref="T:System.Linq.IQueryProvider" /> ab, der dieser Abfrageinstanz zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="3d996-179">Gets the LINQ <see cref="T:System.Linq.IQueryProvider" /> associated with this query instance.</span></span></summary>
        <value><span data-ttu-id="3d996-180">Der dieser Abfrageinstanz zugeordnete <see cref="T:System.Linq.IQueryProvider" />.</span><span class="sxs-lookup"><span data-stu-id="3d996-180">The <see cref="T:System.Linq.IQueryProvider" /> associated with this query instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3d996-181">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="3d996-181">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3d996-182">Er kann nur verwendet werden, wenn die <xref:System.Data.Objects.ObjectQuery%601>-Instanz in eine <xref:System.ComponentModel.IListSource>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="3d996-182">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTraceString">
      <MemberSignature Language="C#" Value="public string ToTraceString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToTraceString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.ToTraceString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToTraceString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToTraceString();" />
      <MemberSignature Language="F#" Value="member this.ToTraceString : unit -&gt; string" Usage="objectQuery.ToTraceString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3d996-183">Gibt die Befehle zurück, die für den Datenspeicher ausgeführt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="3d996-183">Returns the commands to execute against the data source.</span></span></summary>
        <returns><span data-ttu-id="3d996-184">Ein <see langword="string" />, der die Befehle darstellt, die von der Abfrage für den Datenspeicher ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="3d996-184">A <see langword="string" /> that represents the commands that the query executes against the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="3d996-185">Das Beispiel in diesem Thema basiert auf den [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span><span class="sxs-lookup"><span data-stu-id="3d996-185">The example in this topic is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_ToTraceString](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_totracestring)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_ToTraceString](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_totracestring)]

 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="3d996-186">Abfragen von Daten als Objekte und Strukturieren von Ergebnissen (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="3d996-186">Querying Data as Objects and Shaping Results (Entity Framework)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
