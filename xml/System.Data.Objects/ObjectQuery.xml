<Type Name="ObjectQuery" FullName="System.Data.Objects.ObjectQuery">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="efc90bae61fa4c7b9c5d71fef372a7dc73a85417" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39824813" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ObjectQuery : System.Collections.IEnumerable, System.ComponentModel.IListSource, System.Linq.IOrderedQueryable, System.Linq.IQueryable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ObjectQuery extends System.Object implements class System.Collections.IEnumerable, class System.ComponentModel.IListSource, class System.Linq.IOrderedQueryable, class System.Linq.IQueryable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectQuery" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ObjectQuery&#xA;Implements IEnumerable, IListSource, IOrderedQueryable, IQueryable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectQuery abstract : System::Collections::IEnumerable, System::ComponentModel::IListSource, System::Linq::IOrderedQueryable, System::Linq::IQueryable" />
  <TypeSignature Language="F#" Value="type ObjectQuery = class&#xA;    interface IEnumerable&#xA;    interface IQueryable&#xA;    interface IOrderedQueryable&#xA;    interface IListSource" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IOrderedQueryable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Implementiert allgemeine Funktionen für Abfragen eines konzeptionellen Modells mit LINQ to Entities und <see cref="T:System.Data.Objects.ObjectQuery`1" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.ObjectQuery> ist die Basisklasse für Abfragen eines konzeptionellen Modells. <xref:System.Data.Objects.ObjectQuery> wird bereitgestellt, um sicherzustellen, dass LINQ to Entities-Abfragen weisen die gleiche Funktionalität wie Abfragen ausgeführt, mit <xref:System.Data.Objects.ObjectQuery%601>. Verwenden Sie <xref:System.Data.Objects.ObjectQuery%601> mit einem angegebenen Typ zum Abfragen eines konzeptionellen Modells. Weitere Informationen finden Sie unter [Objektabfragen](http://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public string CommandText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandText : string" Usage="System.Data.Objects.ObjectQuery.CommandText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt den Befehlstext für die Abfrage zurück.</summary>
        <value>Ein <see langword="string" />-Wert.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As ObjectContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::ObjectContext ^ Context { System::Data::Objects::ObjectContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Data.Objects.ObjectContext" Usage="System.Data.Objects.ObjectQuery.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den dieser Objektabfrage zugeordneten Objektkontext ab.</summary>
        <value>Der dieser <see cref="T:System.Data.Objects.ObjectContext" />-Instanz zugeordnete <see cref="T:System.Data.Objects.ObjectQuery`1" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Kontext der Abfrage umfasst die Verbindung, den Cache und die Metadaten. Weitere Informationen finden Sie unter [Übersicht über Object Services (Entity Framework)](http://msdn.microsoft.com/library/43014cf9-c9cb-4538-bfbb-197820b60038).  
  
 Die Verbindungseigenschaft ist änderbar und muss festgelegt werden, damit eine Abfrage ausgeführt werden kann. Weitere Informationen finden Sie unter [Verwalten von Verbindungen in Objektdiensten (Entity Framework)](http://msdn.microsoft.com/library/a1df87ef-6441-417d-b264-bb58360e5d67).  
  
   
  
## Examples  
 Im Beispiel in diesem Thema basiert auf der [AdventureWorks Sales-Modell](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). Im Beispiel wird das <xref:System.Data.Objects.ObjectContext>-Objekt abgerufen, das diesem <xref:System.Data.Objects.ObjectQuery%601>-Objekt zugeordnet ist.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Context](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_context)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Context](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_context)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePlanCaching">
      <MemberSignature Language="C#" Value="public bool EnablePlanCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePlanCaching" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.EnablePlanCaching" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePlanCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePlanCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePlanCaching : bool with get, set" Usage="System.Data.Objects.ObjectQuery.EnablePlanCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Abfrageplan zwischengespeichert werden soll, oder legt diesen fest.</summary>
        <value>Ein Wert, der angibt, ob der Abfrageplan zwischengespeichert werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen finden Sie unter [Abfrage Zwischenspeichern planen](~/docs/framework/data/adonet/ef/language-reference/query-plan-caching-entity-sql.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectResult Execute (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectResult Execute(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.Execute(System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectResult ^ Execute(System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="member this.Execute : System.Data.Objects.MergeOption -&gt; System.Data.Objects.ObjectResult" Usage="objectQuery.Execute mergeOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption">Die beim Ausführen der Abfrage zu verwendende <see cref="T:System.Data.Objects.MergeOption" />. Der Standardwert ist <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.</param>
        <summary>Führt die nicht typisierte Objektabfrage mit der angegebenen Zusammenführungsoption aus.</summary>
        <returns>Ein <see cref="T:System.Data.Objects.ObjectResult`1" />, das eine Auflistung der von dieser Abfrage zurückgegebenen Entitätsobjekte enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Standardzusammenführungsoption für Objektabfragen ist <xref:System.Data.Objects.MergeOption.AppendOnly>. Weitere Informationen finden Sie unter [Identitätsauflösung, Zustandsverwaltung und Änderungsnachverfolgung](http://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).  
  
 Rufen Sie die <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> Methode <xref:System.Data.Objects.ObjectQuery%601> für typisiertes Objektabfragen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResultType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.TypeUsage GetResultType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.TypeUsage GetResultType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.GetResultType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResultType () As TypeUsage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::TypeUsage ^ GetResultType();" />
      <MemberSignature Language="F#" Value="member this.GetResultType : unit -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="objectQuery.GetResultType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt Informationen über den Ergebnistyp der Abfrage zurück.</summary>
        <returns>Ein <see cref="T:System.Data.Metadata.Edm.TypeUsage" />-Wert, der Informationen über den Ergebnistyp der Abfrage enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 In diesem Beispiel basiert auf der [AdventureWorks Sales-Modell](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). Im Beispiel wird eine <xref:System.Data.Objects.ObjectQuery%601> des Typs <xref:System.Data.Common.DbDataRecord> erstellt, und mit <xref:System.Data.Objects.ObjectQuery.GetResultType%2A> wird ermittelt, ob der zurückgegebene Typ eine Zeile darstellt.  
  
 [!code-csharp[DP ObjectServices Concepts#GetResultType](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#getresulttype)]
 [!code-vb[DP ObjectServices Concepts#GetResultType](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#getresulttype)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeOption">
      <MemberSignature Language="C#" Value="public System.Data.Objects.MergeOption MergeOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Objects.MergeOption MergeOption" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.MergeOption" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeOption As MergeOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::MergeOption MergeOption { System::Data::Objects::MergeOption get(); void set(System::Data::Objects::MergeOption value); };" />
      <MemberSignature Language="F#" Value="member this.MergeOption : System.Data.Objects.MergeOption with get, set" Usage="System.Data.Objects.ObjectQuery.MergeOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt fest, wie dem Objektkontext von einer Abfrage zurückgegebene Objekte hinzugefügt werden.</summary>
        <value>Die <see cref="T:System.Data.Objects.MergeOption" /> der Abfrage.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn keine <xref:System.Data.Objects.MergeOption> angegeben wird, lautet der Standardwert <xref:System.Data.Objects.MergeOption.AppendOnly>. Weitere Informationen finden Sie unter [Identitätsauflösung, Zustandsverwaltung und Änderungsnachverfolgung](http://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As ObjectParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::ObjectParameterCollection ^ Parameters { System::Data::Objects::ObjectParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Data.Objects.ObjectParameterCollection" Usage="System.Data.Objects.ObjectQuery.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Parameterauflistung für diese Objektabfrage ab.</summary>
        <value>Die Parameterauflistung für diese <see cref="T:System.Data.Objects.ObjectQuery`1" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Geben Sie Parameter, die an die Abfrage übergeben werden, mit der zurückgegebenen <xref:System.Data.Objects.ObjectParameterCollection> an. Weitere Informationen finden Sie unter [Abfrage-Generator-Methoden](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
   
  
## Examples  
 In diesem Beispiel basiert auf der [AdventureWorks Sales-Modell](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). In diesem Beispiel werden der Auflistung neue Parameter hinzugefügt und dann die Parameterauflistung für diese <xref:System.Data.Objects.ObjectQuery%601> abgerufen. Daraufhin wird die <xref:System.Data.Objects.ObjectParameterCollection> durchlaufen, und für jeden Parameter in der Auflistung werden Name, Typ und Wert angezeigt.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Enumerator zurück, der eine Auflistung durchläuft.</summary>
        <returns>Ein <see cref="T:System.Collections.IEnumerator" />, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch Aufrufen von <xref:System.Data.Objects.ObjectQuery.System%23Collections%23IEnumerable%23GetEnumerator%2A> wird die Abfrage mit der in der <xref:System.Data.Objects.ObjectQuery.MergeOption%2A>-Eigenschaft angegeben Zusammenführungsoption ausgeführt.  
  
 Die `foreach`-Anweisung der Programmiersprache C# (`For Each` in Visual Basic) verbirgt die Komplexität der Enumeratoren. Daher empfiehlt es sich, `foreach` zu verwenden und den Enumerator nicht direkt zu ändern.  
  
 Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::IListSource::ContainsListCollection { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die von der Abfrage zurückgegebene Auflistung Auflistungsobjekte enthält.</summary>
        <value>Ein boolescher Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Data.Objects.ObjectQuery%601>-Instanz in eine <xref:System.ComponentModel.IListSource>-Schnittstelle umgewandelt wird.  
  
 Gibt diese Eigenschaft immer `false` , da die Auflistung, die von der Abfrage zurückgegebenen Objekte und keine Auflistungen enthält.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die Auflistung als <see cref="T:System.Collections.IList" /> zurück, die für die Datenbindung verwendet wird.</summary>
        <returns>Eine <see cref="T:System.Collections.IList" /> von Entitätsobjekten.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Data.Objects.ObjectQuery%601>-Instanz in eine <xref:System.ComponentModel.IListSource>-Schnittstelle umgewandelt wird.  
  
 Diese Methode ermöglicht die Datenbindung zum Ergebnis der Abfrage. Sie wird von dem Steuerelement aufgerufen, das an die Auflistung gebunden ist. Weitere Informationen finden Sie unter [Binden von Objekten an Steuerelemente](http://msdn.microsoft.com/library/2fd34855-929b-4303-a91e-4bb69d958f2b).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryable.ElementType">
      <MemberSignature Language="C#" Value="Type System.Linq.IQueryable.ElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type System.Linq.IQueryable.ElementType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ElementType As Type Implements IQueryable.ElementType" />
      <MemberSignature Language="C++ CLI" Value="property Type ^ System::Linq::IQueryable::ElementType { Type ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Linq.IQueryable.ElementType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Ergebniselementtyp für diese Abfrageinstanz ab.</summary>
        <value>Ein <see cref="T:System.Type" />, der der Ergebniselementtyp für diese Abfrageinstanz ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Data.Objects.ObjectQuery%601>-Instanz in eine <xref:System.ComponentModel.IListSource>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryable.Expression">
      <MemberSignature Language="C#" Value="System.Linq.Expressions.Expression System.Linq.IQueryable.Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression System.Linq.IQueryable.Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Expression As Expression Implements IQueryable.Expression" />
      <MemberSignature Language="C++ CLI" Value="property System::Linq::Expressions::Expression ^ System::Linq::IQueryable::Expression { System::Linq::Expressions::Expression ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Linq.IQueryable.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Ausdruck ab, der diese Abfrage beschreibt.</summary>
        <value>Der LINQ-<see cref="T:System.Linq.Expressions.Expression" />, der diese Abfrage beschreibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei Abfragen, die mit LINQ-Erstellungsmustern erstellt werden, wird eine vollständige LINQ-Ausdrucksbaumstruktur zurückgegeben, andernfalls ein konstanter Ausdruck, der diese Abfrage umschließt. Beachten Sie, dass der Standardausdruck nicht zwischengespeichert wird. Dadurch kann das Framework LINQ- und Entity SQL-Abfragen unterscheiden.  
  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Data.Objects.ObjectQuery%601>-Instanz in eine <xref:System.ComponentModel.IListSource>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryable.Provider">
      <MemberSignature Language="C#" Value="System.Linq.IQueryProvider System.Linq.IQueryable.Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.IQueryProvider System.Linq.IQueryable.Provider" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Provider As IQueryProvider Implements IQueryable.Provider" />
      <MemberSignature Language="C++ CLI" Value="property System::Linq::IQueryProvider ^ System::Linq::IQueryable::Provider { System::Linq::IQueryProvider ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Linq.IQueryable.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den LINQ-<see cref="T:System.Linq.IQueryProvider" /> ab, der dieser Abfrageinstanz zugeordnet ist.</summary>
        <value>Der dieser Abfrageinstanz zugeordnete <see cref="T:System.Linq.IQueryProvider" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Data.Objects.ObjectQuery%601>-Instanz in eine <xref:System.ComponentModel.IListSource>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTraceString">
      <MemberSignature Language="C#" Value="public string ToTraceString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToTraceString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.ToTraceString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToTraceString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToTraceString();" />
      <MemberSignature Language="F#" Value="member this.ToTraceString : unit -&gt; string" Usage="objectQuery.ToTraceString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die Befehle zurück, die für den Datenspeicher ausgeführt werden sollen.</summary>
        <returns>Ein <see langword="string" />, der die Befehle darstellt, die von der Abfrage für den Datenspeicher ausgeführt werden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im Beispiel in diesem Thema basiert auf der [AdventureWorks Sales-Modell](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_ToTraceString](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_totracestring)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_ToTraceString](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_totracestring)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>