<Type Name="ObjectStateManager" FullName="System.Data.Objects.ObjectStateManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f04f4935d24342a218e24f876ef947e04cc5635e" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39952886" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectStateManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectStateManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectStateManager" />
  <TypeSignature Language="F#" Value="type ObjectStateManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Speichert Objektstatus und Identitätsverwaltung für Entitätstypinstanzen und Beziehungsinstanzen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.ObjectStateManager> verfolgt Abfrageergebnisse nach und stellt die Logik zum Zusammenführen mehrerer überlappender Abfrageergebnisse bereit. Weiterhin führt es eine speicherinterne Änderungsnachverfolgung durch, wenn ein Benutzer Objekte einfügt, löscht oder ändert, und es stellt den Änderungssatz für Aktualisierungen bereit. Dieses Changeset wird vom Änderungsprozessor verwendet, um Änderungen persistent zu speichern.  
  
 Diese Klasse wird in der Regel von <xref:System.Data.Objects.ObjectContext> und nicht direkt in Anwendungen verwendet.  
  
   
  
## Examples  
 Diese Beispiele beruhen auf der [AdventureWorks Sales-Modell](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).  
  
 Im folgenden Beispiel wird der <xref:System.Data.Objects.ObjectStateManager> aus dem <xref:System.Data.Objects.ObjectContext> abgerufen und für den Zugriff auf ein Objekt im Kontext verwendet.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectstatemanager)]
 [!code-vb[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectstatemanager)]  
  
 Im folgenden Beispiel wird die <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29>-Methode für den zurückgegebenen <xref:System.Data.Objects.ObjectStateManager> verwendet, um ein Objekt auf Grundlage des zugehörigen Entitätsschlüssels abzurufen.  
  
 [!code-csharp[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#applyitemupdates)]
 [!code-vb[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#applyitemupdates)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectStateManager (System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.#ctor(System.Data.Metadata.Edm.MetadataWorkspace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectStateManager(System::Data::Metadata::Edm::MetadataWorkspace ^ metadataWorkspace);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectStateManager : System.Data.Metadata.Edm.MetadataWorkspace -&gt; System.Data.Objects.ObjectStateManager" Usage="new System.Data.Objects.ObjectStateManager metadataWorkspace" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="metadataWorkspace" Type="System.Data.Metadata.Edm.MetadataWorkspace" />
      </Parameters>
      <Docs>
        <param name="metadataWorkspace">Der <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />, der Zuordnungs- und Metadateninformationen bereitstellt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Objects.ObjectStateManager" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeObjectState">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry ChangeObjectState (object entity, System.Data.EntityState entityState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry ChangeObjectState(object entity, valuetype System.Data.EntityState entityState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.ChangeObjectState(System.Object,System.Data.EntityState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ ChangeObjectState(System::Object ^ entity, System::Data::EntityState entityState);" />
      <MemberSignature Language="F#" Value="member this.ChangeObjectState : obj * System.Data.EntityState -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.ChangeObjectState (entity, entityState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="entityState" Type="System.Data.EntityState" />
      </Parameters>
      <Docs>
        <param name="entity">Das Objekt, dessen Zustand geändert werden muss.</param>
        <param name="entityState">Der neue Zustand des Objekts.</param>
        <summary>Ändert den Zustand des <see cref="T:System.Data.Objects.ObjectStateEntry" /> für ein bestimmtes Objekt in den angegebenen <paramref name="entityState" />.</summary>
        <returns>Der <see cref="T:System.Data.Objects.ObjectStateEntry" /> für die angegebene <paramref name="entity" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aufrufen der <xref:System.Data.Objects.ObjectStateManager.ChangeObjectState%2A> Methode zum Ändern des Zustands eines Objekts auf <xref:System.Data.EntityState.Deleted> bewirkt nicht verknüpfte Objekte in einer eingeschränkten Beziehung gelöscht werden soll.  
  
 Ändern des Zustands eines Objekts, hat dies keine Auswirkungen auf Verknüpfte Objekte im Objektdiagramm.  
  
 Wenn Sie ändern die <xref:System.Data.EntityState> des einen Eintrag in einer Entität Objekt <xref:System.Data.EntityState.Modified>, alle Eigenschaften des Objekts werden als geändert markiert, unabhängig von den aktuellen oder den ursprünglichen Werten.  
  
 Wenn die <xref:System.Data.EntityState> eines Entitätsobjekts Eintrag geändert wird, um <xref:System.Data.EntityState.Added>, <xref:System.Data.EntityState.Deleted>, oder <xref:System.Data.EntityState.Detached>, Beziehungseinträge für das Objekt werden ebenfalls aktualisiert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wenn <paramref name="entity" /><see langword="null" /> ist.</exception>
        <exception cref="T:System.InvalidOperationException">Wenn das Objekt nicht getrennt ist und keine Eintrag im Status-Manager aufweist.  
  
- oder -  
Beim Versuch, den Zustand aus einem anderen <see cref="F:System.Data.EntityState.Detached" /> in <see cref="T:System.Data.EntityState" /> zu ändern  
  
- oder -  
Wenn <paramref name="state" /> kein gültiger <see cref="T:System.Data.EntityState" />-Wert ist.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ChangeRelationshipState">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ändert den Zustand der angegebenen Beziehung zwischen zwei Entitätsobjekten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird nicht für Beziehungen unterstützt, die auf einer Fremdschlüsselzuordnung basieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChangeRelationshipState">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry ChangeRelationshipState (object sourceEntity, object targetEntity, string navigationProperty, System.Data.EntityState relationshipState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry ChangeRelationshipState(object sourceEntity, object targetEntity, string navigationProperty, valuetype System.Data.EntityState relationshipState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeRelationshipState (sourceEntity As Object, targetEntity As Object, navigationProperty As String, relationshipState As EntityState) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ ChangeRelationshipState(System::Object ^ sourceEntity, System::Object ^ targetEntity, System::String ^ navigationProperty, System::Data::EntityState relationshipState);" />
      <MemberSignature Language="F#" Value="member this.ChangeRelationshipState : obj * obj * string * System.Data.EntityState -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.ChangeRelationshipState (sourceEntity, targetEntity, navigationProperty, relationshipState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEntity" Type="System.Object" />
        <Parameter Name="targetEntity" Type="System.Object" />
        <Parameter Name="navigationProperty" Type="System.String" />
        <Parameter Name="relationshipState" Type="System.Data.EntityState" />
      </Parameters>
      <Docs>
        <param name="sourceEntity">Die Objektinstanz oder der <see cref="T:System.Data.EntityKey" /> der Quellentität an einem Ende der Beziehung.</param>
        <param name="targetEntity">Die Objektinstanz oder der <see cref="T:System.Data.EntityKey" /> der Zielentität am anderen Ende der Beziehung.</param>
        <param name="navigationProperty">Der Name der Navigationseigenschaft für <c>source</c>, die das angegebene <c>target</c> zurückgibt.</param>
        <param name="relationshipState">Der angeforderte <see cref="T:System.Data.EntityState" /> der angegebenen Beziehung.</param>
        <summary>Ändert den Zustand der Beziehung zwischen zwei Entitätsobjekten, der auf Grundlage der beiden verknüpften Objekte und des Namens der Navigationseigenschaft angegeben wird.</summary>
        <returns>Der <see cref="T:System.Data.Objects.ObjectStateEntry" /> für die geänderte Beziehung.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Einträge für die Objekte an beiden Enden der angegebenen Beziehung müssen vorhanden sein, der <xref:System.Data.Objects.ObjectStateManager>.  
  
> [!NOTE]
>  Diese Methode wird nicht für Beziehungen unterstützt, die auf einer Fremdschlüsselzuordnung basieren.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wenn <paramref name="source" /> oder <paramref name="target" /><see langword="null" /> ist.</exception>
        <exception cref="T:System.InvalidOperationException">Beim Versuch, den Zustand der Beziehung in einen Zustand ungleich <see cref="F:System.Data.EntityState.Deleted" /> oder <see cref="F:System.Data.EntityState.Detached" /> zu ändern, wenn <paramref name="source" /> oder <paramref name="target" /> in einem <see cref="F:System.Data.EntityState.Deleted" />-Zustand ist.  
  
- oder -  
Beim Versuch, den Zustand der Beziehung in einen Zustand ungleich <see cref="F:System.Data.EntityState.Added" /> oder <see cref="F:System.Data.EntityState.Detached" /> zu ändern, wenn <paramref name="source" /> oder <paramref name="target" /> in einem <see cref="F:System.Data.EntityState.Added" />-Zustand ist.  
  
- oder -  
Wenn <paramref name="state" /> kein gültiger <see cref="T:System.Data.EntityState" />-Wert ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeRelationshipState">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry ChangeRelationshipState (object sourceEntity, object targetEntity, string relationshipName, string targetRoleName, System.Data.EntityState relationshipState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry ChangeRelationshipState(object sourceEntity, object targetEntity, string relationshipName, string targetRoleName, valuetype System.Data.EntityState relationshipState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeRelationshipState (sourceEntity As Object, targetEntity As Object, relationshipName As String, targetRoleName As String, relationshipState As EntityState) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ ChangeRelationshipState(System::Object ^ sourceEntity, System::Object ^ targetEntity, System::String ^ relationshipName, System::String ^ targetRoleName, System::Data::EntityState relationshipState);" />
      <MemberSignature Language="F#" Value="member this.ChangeRelationshipState : obj * obj * string * string * System.Data.EntityState -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.ChangeRelationshipState (sourceEntity, targetEntity, relationshipName, targetRoleName, relationshipState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEntity" Type="System.Object" />
        <Parameter Name="targetEntity" Type="System.Object" />
        <Parameter Name="relationshipName" Type="System.String" />
        <Parameter Name="targetRoleName" Type="System.String" />
        <Parameter Name="relationshipState" Type="System.Data.EntityState" />
      </Parameters>
      <Docs>
        <param name="sourceEntity">Die Objektinstanz oder der <see cref="T:System.Data.EntityKey" /> der Quellentität an einem Ende der Beziehung.</param>
        <param name="targetEntity">Die Objektinstanz oder der <see cref="T:System.Data.EntityKey" /> der Zielentität am anderen Ende der Beziehung.</param>
        <param name="relationshipName">Der Name der Beziehung.</param>
        <param name="targetRoleName">Der Rollenname am <c>Ziel</c>ende der Beziehung.</param>
        <param name="relationshipState">Der angeforderte <see cref="T:System.Data.EntityState" /> der angegebenen Beziehung.</param>
        <summary>Ändert den Zustand der Beziehung zwischen zwei Entitätsobjekten, der auf Grundlage der beiden verknüpften Objekte und der Eigenschaften der Beziehung angegeben wird.</summary>
        <returns>Der <see cref="T:System.Data.Objects.ObjectStateEntry" /> für die geänderte Beziehung.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Einträge für die Objekte an beiden Enden der angegebenen Beziehung müssen vorhanden sein, der <xref:System.Data.Objects.ObjectStateManager>.  
  
> [!NOTE]
>  Diese Methode wird nicht für Beziehungen unterstützt, die auf einer fremdschlüsselzuordnung basieren. Weitere Informationen finden Sie unter [definieren und Verwalten von Beziehungen](http://msdn.microsoft.com/library/2c92c097-56bd-4145-989e-16d92475ecda)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wenn <paramref name="source" /> oder <paramref name="target" /><see langword="null" /> ist.</exception>
        <exception cref="T:System.InvalidOperationException">Beim Versuch, den Zustand der Beziehung in einen Zustand ungleich <see cref="F:System.Data.EntityState.Deleted" /> oder <see cref="F:System.Data.EntityState.Detached" /> zu ändern, wenn <paramref name="source" /> oder <paramref name="target" /> in einem <see cref="F:System.Data.EntityState.Deleted" />-Zustand ist.  
  
- oder -  
Beim Versuch, den Zustand der Beziehung in einen Zustand ungleich <see cref="F:System.Data.EntityState.Added" /> oder <see cref="F:System.Data.EntityState.Detached" /> zu ändern, wenn <paramref name="source" /> oder <paramref name="target" /> in einem <see cref="F:System.Data.EntityState.Added" />-Zustand ist.  
  
- oder -  
Wenn <paramref name="state" /> kein gültiger <see cref="T:System.Data.EntityState" />-Wert ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeRelationshipState&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry ChangeRelationshipState&lt;TEntity&gt; (TEntity sourceEntity, object targetEntity, System.Linq.Expressions.Expression&lt;Func&lt;TEntity,object&gt;&gt; navigationPropertySelector, System.Data.EntityState relationshipState) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry ChangeRelationshipState&lt;class TEntity&gt;(!!TEntity sourceEntity, object targetEntity, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TEntity, object&gt;&gt; navigationPropertySelector, valuetype System.Data.EntityState relationshipState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeRelationshipState(Of TEntity As Class) (sourceEntity As TEntity, targetEntity As Object, navigationPropertySelector As Expression(Of Func(Of TEntity, Object)), relationshipState As EntityState) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class System::Data::Objects::ObjectStateEntry ^ ChangeRelationshipState(TEntity sourceEntity, System::Object ^ targetEntity, System::Linq::Expressions::Expression&lt;Func&lt;TEntity, System::Object ^&gt; ^&gt; ^ navigationPropertySelector, System::Data::EntityState relationshipState);" />
      <MemberSignature Language="F#" Value="member this.ChangeRelationshipState : 'Entity * obj * System.Linq.Expressions.Expression&lt;Func&lt;'Entity, obj&gt;&gt; * System.Data.EntityState -&gt; System.Data.Objects.ObjectStateEntry (requires 'Entity : null)" Usage="objectStateManager.ChangeRelationshipState (sourceEntity, targetEntity, navigationPropertySelector, relationshipState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="sourceEntity" Type="TEntity" />
        <Parameter Name="targetEntity" Type="System.Object" />
        <Parameter Name="navigationPropertySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntity,System.Object&gt;&gt;" />
        <Parameter Name="relationshipState" Type="System.Data.EntityState" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">Der Entitätstyp der <c>Quelle</c> Objekt.</typeparam>
        <param name="sourceEntity">Die Objektinstanz oder der <see cref="T:System.Data.EntityKey" /> der Quellentität an einem Ende der Beziehung.</param>
        <param name="targetEntity">Die Objektinstanz oder der <see cref="T:System.Data.EntityKey" /> der Zielentität am anderen Ende der Beziehung.</param>
        <param name="navigationPropertySelector">Ein LINQ-Ausdruck, der die Navigationseigenschaft für <c>source</c> auswählt, die das angegebene <c>target</c> zurückgibt.</param>
        <param name="relationshipState">Der angeforderte <see cref="T:System.Data.EntityState" /> der angegebenen Beziehung.</param>
        <summary>Ändert den Zustand der Beziehung zwischen zwei Entitätsobjekten, der auf Grundlage der beiden verknüpften Objekte und eines LINQ-Ausdrucks, der die Navigationseigenschaft definiert, angegeben wird.</summary>
        <returns>Der <see cref="T:System.Data.Objects.ObjectStateEntry" /> für die geänderte Beziehung.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Einträge für die Objekte an beiden Enden der angegebenen Beziehung müssen vorhanden sein, der <xref:System.Data.Objects.ObjectStateManager>.  
  
> [!NOTE]
>  Diese Methode wird nicht für Beziehungen unterstützt, die auf einer fremdschlüsselzuordnung basieren.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wenn <paramref name="source" />, <paramref name="target" /> oder <paramref name="selector" /><see langword="null" /> ist.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="selector" /> ist falsch formatiert oder kann keine Navigationseigenschaft zurückgeben.</exception>
        <exception cref="T:System.InvalidOperationException">Beim Versuch, den Zustand der Beziehung in einen Zustand ungleich <see cref="F:System.Data.EntityState.Deleted" /> oder <see cref="F:System.Data.EntityState.Detached" /> zu ändern, wenn <paramref name="source" /> oder <paramref name="target" /> in einem <see cref="F:System.Data.EntityState.Deleted" />-Zustand ist.  
  
- oder -  
Beim Versuch, den Zustand der Beziehung in einen Zustand ungleich <see cref="F:System.Data.EntityState.Added" /> oder <see cref="F:System.Data.EntityState.Detached" /> zu ändern, wenn <paramref name="source" /> oder <paramref name="target" /> in einem <see cref="F:System.Data.EntityState.Added" />-Zustand ist.  
  
- oder -  
Wenn <paramref name="state" /> kein gültiger <see cref="T:System.Data.EntityState" />-Wert ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectStateEntries">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectStateEntry&gt; GetObjectStateEntries (System.Data.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Objects.ObjectStateEntry&gt; GetObjectStateEntries(valuetype System.Data.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntries(System.Data.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectStateEntries (state As EntityState) As IEnumerable(Of ObjectStateEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Data::Objects::ObjectStateEntry ^&gt; ^ GetObjectStateEntries(System::Data::EntityState state);" />
      <MemberSignature Language="F#" Value="member this.GetObjectStateEntries : System.Data.EntityState -&gt; seq&lt;System.Data.Objects.ObjectStateEntry&gt;" Usage="objectStateManager.GetObjectStateEntries state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectStateEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Data.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">Ein <see cref="T:System.Data.EntityState" /> zum Filtern der zurückgegebenen <see cref="T:System.Data.Objects.ObjectStateEntry" />-Objekte.</param>
        <summary>Gibt für Objekte oder Beziehungen mit dem angegebenen Status eine Auflistung von <see cref="T:System.Data.Objects.ObjectStateEntry" />-Objekten zurück.</summary>
        <returns>Eine Auflistung der <see cref="T:System.Data.Objects.ObjectStateEntry" />-Objekte im angegebenen <see cref="T:System.Data.EntityState" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.EntityState> ist ein Bitfeld, damit Statuseinträge für mehrere Status mithilfe eines bitweisen OR von mehreren <xref:System.Data.EntityState>-Werten in einem Aufruf abgerufen werden können.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wenn <paramref name="state" /><see cref="F:System.Data.EntityState.Detached" /> ist.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObjectStateEntry">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt für ein bestimmtes Objekt oder einen Beziehungseintrag einen <see cref="T:System.Data.Objects.ObjectStateEntry" /> zurück.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObjectStateEntry">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry GetObjectStateEntry (System.Data.EntityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry GetObjectStateEntry(class System.Data.EntityKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Data.EntityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectStateEntry (key As EntityKey) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ GetObjectStateEntry(System::Data::EntityKey ^ key);" />
      <MemberSignature Language="F#" Value="member this.GetObjectStateEntry : System.Data.EntityKey -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.GetObjectStateEntry key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.EntityKey" />
      </Parameters>
      <Docs>
        <param name="key">Die <see cref="T:System.Data.EntityKey" />.</param>
        <summary>Gibt für das Objekt oder den Beziehungseintrag mit dem angegebenen Schlüssel einen <see cref="T:System.Data.Objects.ObjectStateEntry" /> zurück.</summary>
        <returns>Der entsprechende <see cref="T:System.Data.Objects.ObjectStateEntry" /> für das angegebene <see cref="T:System.Data.EntityKey" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29> -Methode zur Rückgabe eine <xref:System.Data.Objects.ObjectStateEntry> Objekt ohne das Behandeln der <xref:System.InvalidOperationException> ausgelöst werden, indem die <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Data.EntityKey%29> Methode.  
  
   
  
## Examples  
 Im Beispiel in diesem Thema basiert auf der [AdventureWorks Sales-Modell](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). Im Beispiel wird der <xref:System.Data.Objects.ObjectStateEntry> für den angegebenen <xref:System.Data.EntityKey> vom <xref:System.Data.Objects.ObjectStateManager> abgerufen. Daraufhin wird den aktuellen Wert von der `SalesOrderHeader.PurchaseOrderNumber` Eigenschaft, ändert sich der Wert der Eigenschaft und die Auflistung der geänderten Eigenschaften aufgelistet.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectStateEntry](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectstateentry)]
 [!code-vb[DP ObjectServices Concepts#ObjectStateEntry](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectstateentry)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wenn <paramref name="key" /><see langword="null" /> ist.</exception>
        <exception cref="T:System.ArgumentException">Wenn der angegebene <paramref name="key" /> im Status-Manager nicht gefunden werden kann.</exception>
        <exception cref="T:System.InvalidOperationException">Es ist keine Entität mit dem angegebenen <see cref="T:System.Data.EntityKey" /> im <see cref="T:System.Data.Objects.ObjectStateManager" /> vorhanden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectStateEntry">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry GetObjectStateEntry (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry GetObjectStateEntry(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectStateEntry (entity As Object) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ GetObjectStateEntry(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetObjectStateEntry : obj -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.GetObjectStateEntry entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Das <see cref="T:System.Object" />, zu dem der abgerufene <see cref="T:System.Data.Objects.ObjectStateEntry" /> gehört.</param>
        <summary>Gibt einen <see cref="T:System.Data.Objects.ObjectStateEntry" /> für das angegebene Objekt zurück.</summary>
        <returns>Der entsprechende <see cref="T:System.Data.Objects.ObjectStateEntry" /> für das angegebene <see cref="T:System.Object" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Object%2CSystem.Data.Objects.ObjectStateEntry%40%29> -Methode zur Rückgabe eine <xref:System.Data.Objects.ObjectStateEntry> Objekt ohne das Behandeln der <xref:System.InvalidOperationException> ausgelöst werden, indem die <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Object%29> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Es ist keine Entität für das angegebenene <see cref="T:System.Object" /> im <see cref="T:System.Data.Objects.ObjectStateManager" /> vorhanden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipManager">
      <MemberSignature Language="C#" Value="public System.Data.Objects.DataClasses.RelationshipManager GetRelationshipManager (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.DataClasses.RelationshipManager GetRelationshipManager(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.GetRelationshipManager(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationshipManager (entity As Object) As RelationshipManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::DataClasses::RelationshipManager ^ GetRelationshipManager(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipManager : obj -&gt; System.Data.Objects.DataClasses.RelationshipManager" Usage="objectStateManager.GetRelationshipManager entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.DataClasses.RelationshipManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Das Objekt, für das der <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> zurückgegeben werden soll.</param>
        <summary>Gibt den <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> zurück, der vom angegebenen Objekt verwendet wird.</summary>
        <returns>Die <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> für das angegebene Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aufrufen der <xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A> Methode ist der gleiche wie das Aufrufen der <xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A> -Methode, mit dem Unterschied, dass diese Methode löst eine Ausnahme aus, anstatt aus, `false`.  
  
 Aufrufen der <xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A> Methode, um die Verarbeitung zu vermeiden der <xref:System.InvalidOperationException> auftritt, wenn eine <xref:System.Data.Objects.DataClasses.RelationshipManager> für die angegebene Entität nicht zurückgegeben werden kann.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wenn kein <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> für die angegebene <paramref name="entity" /> zurückgegeben werden kann.</exception>
      </Docs>
    </Member>
    <Member MemberName="MetadataWorkspace">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.MetadataWorkspace MetadataWorkspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.MetadataWorkspace MetadataWorkspace" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectStateManager.MetadataWorkspace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MetadataWorkspace As MetadataWorkspace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::MetadataWorkspace ^ MetadataWorkspace { System::Data::Metadata::Edm::MetadataWorkspace ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MetadataWorkspace : System.Data.Metadata.Edm.MetadataWorkspace" Usage="System.Data.Objects.ObjectStateManager.MetadataWorkspace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.MetadataWorkspace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> ab, der diesem Status-Manager zugeordnet ist.</summary>
        <value>Das dieser <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> zugeordnete <see cref="T:System.Data.Objects.ObjectStateManager" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.Metadata.Edm.MetadataWorkspace>-Klasse ist eine zentrale Programmierschnittstelle, mit deren Hilfe Sie zur Laufzeit und im Kontext einer Anwendung mit den Metadaten des Entity Data Model (EDM) interagieren können.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectStateManagerChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CollectionChangeEventHandler ObjectStateManagerChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CollectionChangeEventHandler ObjectStateManagerChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectStateManagerChanged As CollectionChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CollectionChangeEventHandler ^ ObjectStateManagerChanged;" />
      <MemberSignature Language="F#" Value="member this.ObjectStateManagerChanged : System.ComponentModel.CollectionChangeEventHandler " Usage="member this.ObjectStateManagerChanged : System.ComponentModel.CollectionChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CollectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn Entitäten dem Status-Manager hinzugefügt oder aus diesem entfernt werden.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetObjectStateEntry">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt für ein bestimmtes Objekt oder einen bestimmten Beziehungseintrag ein <see cref="T:System.Data.Objects.ObjectStateEntry" />-Objekt zurück.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetObjectStateEntry">
      <MemberSignature Language="C#" Value="public bool TryGetObjectStateEntry (System.Data.EntityKey key, out System.Data.Objects.ObjectStateEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetObjectStateEntry(class System.Data.EntityKey key, [out] class System.Data.Objects.ObjectStateEntry&amp; entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Data.EntityKey,System.Data.Objects.ObjectStateEntry@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObjectStateEntry (key As EntityKey, ByRef entry As ObjectStateEntry) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetObjectStateEntry(System::Data::EntityKey ^ key, [Runtime::InteropServices::Out] System::Data::Objects::ObjectStateEntry ^ % entry);" />
      <MemberSignature Language="F#" Value="member this.TryGetObjectStateEntry : System.Data.EntityKey *  -&gt; bool" Usage="objectStateManager.TryGetObjectStateEntry (key, entry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.EntityKey" />
        <Parameter Name="entry" Type="System.Data.Objects.ObjectStateEntry" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">Der angegebene <see cref="T:System.Data.EntityKey" />.</param>
        <param name="entry">Enthält einen <see cref="T:System.Data.Objects.ObjectStateEntry" /> für den angegebenen <see cref="T:System.Data.EntityKey" />, wenn diese Methode erfolgreich zurückkehrt. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <summary>Ruft den entsprechenden <see cref="T:System.Data.Objects.ObjectStateEntry" /> für das Objekt oder die Beziehung mit dem angegebenen <see cref="T:System.Data.EntityKey" /> ab.</summary>
        <returns>Ein boolescher Wert. Dieser ist <see langword="true" />, wenn ein entsprechender <see cref="T:System.Data.Objects.ObjectStateEntry" /> für den angegebenen <see cref="T:System.Data.EntityKey" /> vorhanden ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29>, um einen <xref:System.Data.Objects.ObjectStateEntry> zurückzugeben, ohne die von der <xref:System.InvalidOperationException>-Methode ausgelöste <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Data.EntityKey%29> behandeln zu müssen.  
  
   
  
## Examples  
 In die Beispielen in diesem Thema basieren auf der [AdventureWorks Sales-Modell](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).  
  
 Im Beispiel wird versucht, den entsprechenden <xref:System.Data.Objects.ObjectStateEntry> für den angegebenen <xref:System.Data.EntityKey> abzurufen.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectstatemanager)]
 [!code-vb[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectstatemanager)]  
  
 Im folgenden Beispiel wird die <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29>-Methode für den zurückgegebenen <xref:System.Data.Objects.ObjectStateManager> verwendet, um ein Objekt auf Grundlage des zugehörigen Entitätsschlüssels abzurufen.  
  
 [!code-csharp[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#applyitemupdates)]
 [!code-vb[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#applyitemupdates)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ein <see langword="null" />-Wert (<see langword="Nothing" /> in Visual Basic) wird für <paramref name="key" /> bereitgestellt.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetObjectStateEntry">
      <MemberSignature Language="C#" Value="public bool TryGetObjectStateEntry (object entity, out System.Data.Objects.ObjectStateEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetObjectStateEntry(object entity, [out] class System.Data.Objects.ObjectStateEntry&amp; entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Object,System.Data.Objects.ObjectStateEntry@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObjectStateEntry (entity As Object, ByRef entry As ObjectStateEntry) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetObjectStateEntry(System::Object ^ entity, [Runtime::InteropServices::Out] System::Data::Objects::ObjectStateEntry ^ % entry);" />
      <MemberSignature Language="F#" Value="member this.TryGetObjectStateEntry : obj *  -&gt; bool" Usage="objectStateManager.TryGetObjectStateEntry (entity, entry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="entry" Type="System.Data.Objects.ObjectStateEntry" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entity">Das <see cref="T:System.Object" />, zu dem der abgerufene <see cref="T:System.Data.Objects.ObjectStateEntry" /> gehört.</param>
        <param name="entry">Enthält den <see cref="T:System.Data.Objects.ObjectStateEntry" /> für den angegebenen <see cref="T:System.Data.EntityKey" />, wenn diese Methode erfolgreich zurückkehrt. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <summary>Ruft den entsprechenden <see cref="T:System.Data.Objects.ObjectStateEntry" /> für das angegebene <see cref="T:System.Object" /> ab.</summary>
        <returns>Ein boolescher Wert. Dieser ist <see langword="true" />, wenn ein entsprechender <see cref="T:System.Data.Objects.ObjectStateEntry" /> für das angegebene Objekt vorhanden ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Object%2CSystem.Data.Objects.ObjectStateEntry%40%29>-Methode, um einen <xref:System.Data.Objects.ObjectStateEntry> zurückzugeben, ohne die von der <xref:System.InvalidOperationException>-Methode ausgelöste <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Object%29> behandeln zu müssen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetRelationshipManager">
      <MemberSignature Language="C#" Value="public bool TryGetRelationshipManager (object entity, out System.Data.Objects.DataClasses.RelationshipManager relationshipManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetRelationshipManager(object entity, [out] class System.Data.Objects.DataClasses.RelationshipManager&amp; relationshipManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(System.Object,System.Data.Objects.DataClasses.RelationshipManager@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetRelationshipManager (entity As Object, ByRef relationshipManager As RelationshipManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetRelationshipManager(System::Object ^ entity, [Runtime::InteropServices::Out] System::Data::Objects::DataClasses::RelationshipManager ^ % relationshipManager);" />
      <MemberSignature Language="F#" Value="member this.TryGetRelationshipManager : obj *  -&gt; bool" Usage="objectStateManager.TryGetRelationshipManager (entity, relationshipManager)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="relationshipManager" Type="System.Data.Objects.DataClasses.RelationshipManager" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entity">Das Objekt, für das der <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> zurückgegeben werden soll.</param>
        <param name="relationshipManager">Diese Methode gibt den <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> für <c>entity</c> zurück.</param>
        <summary>Gibt den <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> zurück, der vom angegebenen Objekt verwendet wird.</summary>
        <returns>
          <see langword="true" />, wenn eine <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />-Instanz für die angegebene <paramref name="entity" /> zurückgegeben wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A> Methode dient zum Abrufen der <xref:System.Data.Objects.DataClasses.RelationshipManager> für Objekte, die keine Persistenz sind. Beim Implementieren von Objekten <xref:System.Data.Objects.DataClasses.IEntityWithRelationships> oder erben <xref:System.Data.Objects.DataClasses.EntityObject>, <xref:System.Data.Objects.DataClasses.RelationshipManager> erfolgt über die <xref:System.Data.Objects.DataClasses.IEntityWithRelationships.RelationshipManager%2A> Eigenschaft.  
  
 Die <xref:System.Data.Objects.DataClasses.RelationshipManager> nicht zurückgegeben werden, wenn das Objekt in einem <xref:System.Data.EntityState.Detached> Zustand.  
  
 Aufrufen der <xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A> Methode ist der gleiche wie das Aufrufen der <xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A> -Methode, mit dem Unterschied, dass die Rückgabe dieser Methode `false` statt eine Ausnahme auszulösen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>