<Type Name="ObjectSet&lt;TEntity&gt;" FullName="System.Data.Objects.ObjectSet&lt;TEntity&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bdd1a327ea46b646f05e1a71c1f7bfaef2b4aee7" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53516394" /></Metadata><TypeSignature Language="C#" Value="public class ObjectSet&lt;TEntity&gt; : System.Data.Objects.ObjectQuery&lt;TEntity&gt;, System.Collections.Generic.IEnumerable&lt;TEntity&gt;, System.Data.Objects.IObjectSet&lt;TEntity&gt;, System.Linq.IQueryable&lt;TEntity&gt; where TEntity : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectSet`1&lt;class TEntity&gt; extends System.Data.Objects.ObjectQuery`1&lt;!TEntity&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!TEntity&gt;, class System.Collections.IEnumerable, class System.Data.Objects.IObjectSet`1&lt;!TEntity&gt;, class System.Linq.IQueryable, class System.Linq.IQueryable`1&lt;!TEntity&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectSet`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectSet(Of TEntity)&#xA;Inherits ObjectQuery(Of TEntity)&#xA;Implements IEnumerable(Of TEntity), IObjectSet(Of TEntity), IQueryable(Of TEntity)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEntity&gt;&#xA; where TEntity : classpublic ref class ObjectSet : System::Data::Objects::ObjectQuery&lt;TEntity&gt;, System::Collections::Generic::IEnumerable&lt;TEntity&gt;, System::Data::Objects::IObjectSet&lt;TEntity&gt;, System::Linq::IQueryable&lt;TEntity&gt;" />
  <TypeSignature Language="F#" Value="type ObjectSet&lt;'Entity (requires 'Entity : null)&gt; = class&#xA;    inherit ObjectQuery&lt;'Entity (requires 'Entity : null)&gt;&#xA;    interface IObjectSet&lt;'Entity (requires 'Entity : null)&gt;&#xA;    interface IQueryable&lt;'Entity (requires 'Entity : null)&gt;&#xA;    interface seq&lt;'Entity (requires 'Entity : null)&gt;&#xA;    interface IEnumerable&#xA;    interface IQueryable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEntity">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Data.Objects.ObjectQuery&lt;TEntity&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">TEntity</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TEntity&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.Objects.IObjectSet&lt;TEntity&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable&lt;TEntity&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TEntity"><span data-ttu-id="05b60-101">Der Entitätstyp.</span><span class="sxs-lookup"><span data-stu-id="05b60-101">The entity type.</span></span></typeparam>
    <summary><span data-ttu-id="05b60-102">Stellt eine typisierte Entitätenmenge dar, die für Erstellungs-, Lese-, Aktualisierungs- und Löschvorgänge verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="05b60-102">Represents a typed entity set that is used to perform create, read, update, and delete operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05b60-103">Die <xref:System.Data.Objects.ObjectSet%601> Klasse ermöglicht Ihnen, die für eine typisierte Entitätenmenge ohne Angabe der Name der Entitätenmenge als Argument für jeden Aufruf einer Methode verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="05b60-103">The <xref:System.Data.Objects.ObjectSet%601> class allows you to operate on a typed entity set without having to specify the entity set name as an argument to each method call.</span></span> <span data-ttu-id="05b60-104">Die <xref:System.Data.Objects.ObjectSet%601> Klasse erweitert die Funktionalität von der <xref:System.Data.Objects.ObjectQuery%601> Klasse bieten die Funktionalität des Objekt-Kontext, z. B. das Hinzufügen und Löschen von Objekten, im Kontext einer typisierten Entitätenmenge festlegen, erfolgt über die <xref:System.Data.Objects.ObjectContext>.</span><span class="sxs-lookup"><span data-stu-id="05b60-104">The <xref:System.Data.Objects.ObjectSet%601> class extends the functionality of the <xref:System.Data.Objects.ObjectQuery%601> class to provide object context functionality, such as adding and deleting objects, in the context of a typed entity set that is accessed from the <xref:System.Data.Objects.ObjectContext>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public void AddObject (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddObject(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectSet`1.AddObject(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddObject (entity As TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddObject(TEntity entity);" />
      <MemberSignature Language="F#" Value="abstract member AddObject : 'Entity -&gt; unit&#xA;override this.AddObject : 'Entity -&gt; unit" Usage="objectSet.AddObject entity" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.IObjectSet`1.AddObject(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="05b60-105">Das hinzuzufügende Objekt.</span><span class="sxs-lookup"><span data-stu-id="05b60-105">The object to add.</span></span></param>
        <summary><span data-ttu-id="05b60-106">Fügt dem Objektkontext in der aktuellen Entitätenmenge ein Objekt hinzu.</span><span class="sxs-lookup"><span data-stu-id="05b60-106">Adds an object to the object context in the current entity set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05b60-107">Diese Methode ist ein Wrapper um die <xref:System.Data.Objects.ObjectContext.AddObject%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="05b60-107">This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.AddObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Objects.ObjectContext.AddObject(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ApplyCurrentValues">
      <MemberSignature Language="C#" Value="public TEntity ApplyCurrentValues (TEntity currentEntity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TEntity ApplyCurrentValues(!TEntity currentEntity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectSet`1.ApplyCurrentValues(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyCurrentValues (currentEntity As TEntity) As TEntity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TEntity ApplyCurrentValues(TEntity currentEntity);" />
      <MemberSignature Language="F#" Value="member this.ApplyCurrentValues : 'Entity -&gt; 'Entity" Usage="objectSet.ApplyCurrentValues currentEntity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="currentEntity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="currentEntity"><span data-ttu-id="05b60-108">Das getrennte Objekt, das über Eigenschaftsaktualisierungen verfügt, die für das ursprüngliche Objekt übernommen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="05b60-108">The detached object that has property updates to apply to the original object.</span></span> <span data-ttu-id="05b60-109">Der Entitätsschlüssel von <paramref name="currentEntity" /> muss zur <see cref="P:System.Data.Objects.ObjectStateEntry.EntityKey" />-Eigenschaft eines Eintrags in <see cref="T:System.Data.Objects.ObjectContext" /> passen.</span><span class="sxs-lookup"><span data-stu-id="05b60-109">The entity key of <paramref name="currentEntity" /> must match the <see cref="P:System.Data.Objects.ObjectStateEntry.EntityKey" /> property of an entry in the <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></param>
        <summary><span data-ttu-id="05b60-110">Kopiert die Skalarwerte aus dem angegebenen Objekt in das Objekt im <see cref="T:System.Data.Objects.ObjectContext" />, das über den gleichen Schlüssel verfügt.</span><span class="sxs-lookup"><span data-stu-id="05b60-110">Copies the scalar values from the supplied object into the object in the <see cref="T:System.Data.Objects.ObjectContext" /> that has the same key.</span></span></summary>
        <returns><span data-ttu-id="05b60-111">Das aktualisierte Objekt.</span><span class="sxs-lookup"><span data-stu-id="05b60-111">The updated object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05b60-112">Diese Methode ist ein Wrapper um die <xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="05b60-112">This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Objects.ObjectStateEntry.ApplyCurrentValues(System.Object)" />
        <altmember cref="M:System.Data.Objects.ObjectContext.ApplyCurrentValues``1(System.String,``0)" />
      </Docs>
    </Member>
    <Member MemberName="ApplyOriginalValues">
      <MemberSignature Language="C#" Value="public TEntity ApplyOriginalValues (TEntity originalEntity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TEntity ApplyOriginalValues(!TEntity originalEntity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectSet`1.ApplyOriginalValues(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyOriginalValues (originalEntity As TEntity) As TEntity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TEntity ApplyOriginalValues(TEntity originalEntity);" />
      <MemberSignature Language="F#" Value="member this.ApplyOriginalValues : 'Entity -&gt; 'Entity" Usage="objectSet.ApplyOriginalValues originalEntity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="originalEntity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="originalEntity"><span data-ttu-id="05b60-113">Das getrennte Objekt, das über Eigenschaftsaktualisierungen verfügt, die für das ursprüngliche Objekt übernommen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="05b60-113">The detached object that has property updates to apply to the original object.</span></span> <span data-ttu-id="05b60-114">Der Entitätsschlüssel von <paramref name="originalEntity" /> muss zur <see cref="P:System.Data.Objects.ObjectStateEntry.EntityKey" />-Eigenschaft eines Eintrags in <see cref="T:System.Data.Objects.ObjectContext" /> passen.</span><span class="sxs-lookup"><span data-stu-id="05b60-114">The entity key of <paramref name="originalEntity" /> must match the <see cref="P:System.Data.Objects.ObjectStateEntry.EntityKey" /> property of an entry in the <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></param>
        <summary><span data-ttu-id="05b60-115">Legt die <see cref="P:System.Data.Objects.ObjectStateEntry.OriginalValues" />-Eigenschaft eines <see cref="T:System.Data.Objects.ObjectStateEntry" /> entsprechend den Eigenschaftswerten eines angegebenen Objekts fest.</span><span class="sxs-lookup"><span data-stu-id="05b60-115">Sets the <see cref="P:System.Data.Objects.ObjectStateEntry.OriginalValues" /> property of an <see cref="T:System.Data.Objects.ObjectStateEntry" /> to match the property values of a supplied object.</span></span></summary>
        <returns><span data-ttu-id="05b60-116">Das aktualisierte Objekt.</span><span class="sxs-lookup"><span data-stu-id="05b60-116">The updated object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05b60-117">Diese Methode ist ein Wrapper um die <xref:System.Data.Objects.ObjectContext.ApplyOriginalValues%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="05b60-117">This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.ApplyOriginalValues%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Objects.ObjectStateEntry.ApplyOriginalValues(System.Object)" />
        <altmember cref="M:System.Data.Objects.ObjectContext.ApplyOriginalValues``1(System.String,``0)" />
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Attach(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectSet`1.Attach(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (entity As TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Attach(TEntity entity);" />
      <MemberSignature Language="F#" Value="abstract member Attach : 'Entity -&gt; unit&#xA;override this.Attach : 'Entity -&gt; unit" Usage="objectSet.Attach entity" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.IObjectSet`1.Attach(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="05b60-118">Das anzufügende Objekt.</span><span class="sxs-lookup"><span data-stu-id="05b60-118">The object to attach.</span></span></param>
        <summary><span data-ttu-id="05b60-119">Fügt ein Objekt oder Objektdiagramm an den Objektkontext in der aktuellen Entitätenmenge an.</span><span class="sxs-lookup"><span data-stu-id="05b60-119">Attaches an object or object graph to the object context in the current entity set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05b60-120">Diese Methode ist ein Wrapper um die <xref:System.Data.Objects.ObjectContext.AttachTo%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="05b60-120">This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.AttachTo%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Objects.ObjectContext.AttachTo(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public TEntity CreateObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TEntity CreateObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectSet`1.CreateObject" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateObject () As TEntity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TEntity CreateObject();" />
      <MemberSignature Language="F#" Value="member this.CreateObject : unit -&gt; 'Entity" Usage="objectSet.CreateObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TEntity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="05b60-121">Erstellt ein neues Entitätstypobjekt.</span><span class="sxs-lookup"><span data-stu-id="05b60-121">Creates a new entity type object.</span></span></summary>
        <returns><span data-ttu-id="05b60-122">Das neue Entitätstypobjekt oder eine Instanz eines Proxytyps, der dem Entitätstyp entspricht.</span><span class="sxs-lookup"><span data-stu-id="05b60-122">The new entity type object, or an instance of a proxy type that corresponds to the entity type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateObject&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T CreateObject&lt;T&gt; () where T : class, TEntity;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T CreateObject&lt;class (!TEntity) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectSet`1.CreateObject``1" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateObject(Of T As {Class, TEntity}) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class, TEntity T CreateObject();" />
      <MemberSignature Language="F#" Value="member this.CreateObject : unit -&gt; 'T" Usage="objectSet.CreateObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>TEntity</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="05b60-123">Der Typ des zurückzugebenden Objekts.</span><span class="sxs-lookup"><span data-stu-id="05b60-123">Type of object to be returned.</span></span></typeparam>
        <summary><span data-ttu-id="05b60-124">Erstellt eine Instanz des angegebenen Typs.</span><span class="sxs-lookup"><span data-stu-id="05b60-124">Creates an instance of the specified type.</span></span></summary>
        <returns><span data-ttu-id="05b60-125">Eine Instanz des angeforderten <paramref name="T" />-Typs oder eine Instanz eines Proxytyps, der dem <paramref name="T" />-Typ entspricht.</span><span class="sxs-lookup"><span data-stu-id="05b60-125">An instance of the requested type <paramref name="T" />, or an instance of a proxy type that corresponds to the type <paramref name="T" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteObject">
      <MemberSignature Language="C#" Value="public void DeleteObject (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteObject(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectSet`1.DeleteObject(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteObject (entity As TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteObject(TEntity entity);" />
      <MemberSignature Language="F#" Value="abstract member DeleteObject : 'Entity -&gt; unit&#xA;override this.DeleteObject : 'Entity -&gt; unit" Usage="objectSet.DeleteObject entity" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.IObjectSet`1.DeleteObject(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="05b60-126">Ein Objekt, das die löschende Entität darstellt.</span><span class="sxs-lookup"><span data-stu-id="05b60-126">An object that represents the entity to delete.</span></span> <span data-ttu-id="05b60-127">Das Objekt kann jeden Status außer <see cref="F:System.Data.EntityState.Detached" /> haben.</span><span class="sxs-lookup"><span data-stu-id="05b60-127">The object can be in any state except <see cref="F:System.Data.EntityState.Detached" />.</span></span></param>
        <summary><span data-ttu-id="05b60-128">Markiert ein Objekt zum Löschen.</span><span class="sxs-lookup"><span data-stu-id="05b60-128">Marks an object for deletion.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05b60-129">Diese Methode ist ein Wrapper um die <xref:System.Data.Objects.ObjectContext.DeleteObject%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="05b60-129">This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.DeleteObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Objects.ObjectContext.DeleteObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="public void Detach (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Detach(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectSet`1.Detach(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Detach (entity As TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Detach(TEntity entity);" />
      <MemberSignature Language="F#" Value="abstract member Detach : 'Entity -&gt; unit&#xA;override this.Detach : 'Entity -&gt; unit" Usage="objectSet.Detach entity" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.IObjectSet`1.Detach(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="05b60-130">Zu trennendes Objekt.</span><span class="sxs-lookup"><span data-stu-id="05b60-130">Object to be detached.</span></span> <span data-ttu-id="05b60-131">Es wird nur die <paramref name="entity" /> entfernt. Wenn verknüpfte Objekte vorhanden sind, die von demselben <see cref="T:System.Data.Objects.ObjectStateManager" /> nachverfolgt werden, werden diese nicht automatisch getrennt.</span><span class="sxs-lookup"><span data-stu-id="05b60-131">Only the <paramref name="entity" /> is removed; if there are any related objects that are being tracked by the same <see cref="T:System.Data.Objects.ObjectStateManager" />, those will not be detached automatically.</span></span></param>
        <summary><span data-ttu-id="05b60-132">Entfernt das Objekt aus dem Objektkontext.</span><span class="sxs-lookup"><span data-stu-id="05b60-132">Removes the object from the object context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05b60-133">Diese Methode ist ein Wrapper um die <xref:System.Data.Objects.ObjectContext.Detach%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="05b60-133">This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.Detach%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Objects.ObjectContext.Detach(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="EntitySet">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntitySet EntitySet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.EntitySet EntitySet" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectSet`1.EntitySet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntitySet As EntitySet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::EntitySet ^ EntitySet { System::Data::Metadata::Edm::EntitySet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntitySet : System.Data.Metadata.Edm.EntitySet" Usage="System.Data.Objects.ObjectSet&lt;'Entity (requires 'Entity : null)&gt;.EntitySet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntitySet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05b60-134">Ruft die Metadaten der von dieser <see cref="T:System.Data.Objects.ObjectSet`1" />-Instanz dargestellten Entitätenmenge ab.</span><span class="sxs-lookup"><span data-stu-id="05b60-134">Gets the metadata of the entity set represented by this <see cref="T:System.Data.Objects.ObjectSet`1" /> instance.</span></span></summary>
        <value><span data-ttu-id="05b60-135">Ein <see cref="T:System.Data.Metadata.Edm.EntitySet" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="05b60-135">An <see cref="T:System.Data.Metadata.Edm.EntitySet" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>