<Type Name="ObjectContextOptions" FullName="System.Data.Objects.ObjectContextOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5bf144f0c62d969a330ec7275877444b313b4707" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ObjectContextOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectContextOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectContextOptions" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectContextOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectContextOptions sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0092d-101">Definiert Optionen, die das Verhalten von <see cref="T:System.Data.Objects.ObjectContext" /> beeinflussen.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0092d-101">Defines options that affect the behavior of the <see cref="T:System.Data.Objects.ObjectContext" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0092d-102">Hier wird kein Inhalt aktualisiert; fügen Sie hier kein Material hinzu.</span><span class="sxs-lookup"><span data-stu-id="0092d-102">No content here will be updated; please do not add material here.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="LazyLoadingEnabled">
      <MemberSignature Language="C#" Value="public bool LazyLoadingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LazyLoadingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property LazyLoadingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LazyLoadingEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0092d-103">Ruft einen booleschen Wert ab, der bestimmt, ob verbundene Objekte beim Zugriff auf eine Navigationseigenschaft automatisch geladen werden, oder legt diesen Wert fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0092d-103">Gets or sets a Boolean value that determines whether related objects are loaded automatically when a navigation property is accessed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0092d-104">
            <see langword="true" />, wenn Lazy Loading (verzögertes Laden) aktiviert ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0092d-104">
              <see langword="true" /> if lazy loading is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyCreationEnabled">
      <MemberSignature Language="C#" Value="public bool ProxyCreationEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProxyCreationEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContextOptions.ProxyCreationEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ProxyCreationEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProxyCreationEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0092d-105">Ruft einen booleschen Wert ab, der bestimmt, ob für benutzerdefinierte Datenklassen, die Persistenz ignorieren, Proxyinstanzen erstellt werden, oder legt diesen Wert fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0092d-105">Gets or sets a Boolean value that determines whether proxy instances are created for custom data classes that are persistence ignorant.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0092d-106">
            <see langword="true" />, wenn Proxys erstellt werden; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0092d-106">
              <see langword="true" /> if proxies are created; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0092d-107">Der Standardwert ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0092d-107">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseConsistentNullReferenceBehavior">
      <MemberSignature Language="C#" Value="public bool UseConsistentNullReferenceBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseConsistentNullReferenceBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContextOptions.UseConsistentNullReferenceBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property UseConsistentNullReferenceBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseConsistentNullReferenceBehavior { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0092d-108">Ruft einen booleschen Wert ab oder legt diesen fest, der bestimmt, ob das einheitliche NullReference-Verhalten verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0092d-108">Gets or sets a Boolean value that determines whether to use the consistent NullReference behavior.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0092d-109">
            <see langword="true" />, wenn das einheitliche NullReference-Verhalten verwendet werden soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0092d-109">
              <see langword="true" /> if the consistent NullReference behavior should be used; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0092d-110">Wenn dieses Flag, um festgelegt ist `false`, und klicken Sie dann die Value-Eigenschaft festlegen der <xref:System.Data.Objects.DataClasses.EntityReference%601> für eine Beziehung FK auf null bereits null wird er hat keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="0092d-110">If this flag is set to `false`, then setting the Value property of the <xref:System.Data.Objects.DataClasses.EntityReference%601> for an FK relationship to null when it is already null will have no effect.</span></span> <span data-ttu-id="0092d-111">Wenn dieses Flag festgelegt ist, um `true`, und klicken Sie dann den Wert auf null setzen immer bewirkt die FK, gelöscht werden und die Beziehung gelöscht werden soll, selbst wenn der Wert derzeit null ist.</span><span class="sxs-lookup"><span data-stu-id="0092d-111">When this flag is set to `true`, then setting the value to null will always cause the FK to be nulled and the relationship to be deleted even if the value is currently null.</span></span> <span data-ttu-id="0092d-112">Der Standardwert ist `false` bei Verwendung von ObjectContext und `true` bei Verwendung von ' DbContext '.</span><span class="sxs-lookup"><span data-stu-id="0092d-112">The default value is `false` when using ObjectContext and `true` when using DbContext.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCSharpNullComparisonBehavior">
      <MemberSignature Language="C#" Value="public bool UseCSharpNullComparisonBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCSharpNullComparisonBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContextOptions.UseCSharpNullComparisonBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCSharpNullComparisonBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCSharpNullComparisonBehavior { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0092d-113">Ruft einen booleschen Wert ab oder legt diesen fest, der bestimmt, ob das C#-Verhalten von NullComparison verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0092d-113">Gets or sets a Boolean value that determines whether to use the C# NullComparison behavior.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0092d-114">
            <see langword="true" />, wenn das C# NullComparison-Verhalten verwendet werden soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0092d-114">
              <see langword="true" /> if the C# NullComparison behavior should be used; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseLegacyPreserveChangesBehavior">
      <MemberSignature Language="C#" Value="public bool UseLegacyPreserveChangesBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseLegacyPreserveChangesBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContextOptions.UseLegacyPreserveChangesBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property UseLegacyPreserveChangesBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseLegacyPreserveChangesBehavior { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0092d-115">Ruft einen booleschen Wert ab, der bestimmt, ob das PreserveChanges-Legacyverhalten verwendet wird, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0092d-115">Gets or sets a Boolean value that determines whether to use the legacy PreserveChanges behavior.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0092d-116">
            <see langword="true" />, wenn das PreserveChanges-Legacyverhalten verwendet werden soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0092d-116">
              <see langword="true" /> if the legacy PreserveChanges behavior should be used; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>