<Type Name="ObjectParameter" FullName="System.Data.Objects.ObjectParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3dbfee907fc55a563c22f34251ce91461b35faf7" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36686570" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ObjectParameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectParameter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectParameter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectParameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectParameter sealed" />
  <TypeSignature Language="F#" Value="type ObjectParameter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a query parameter that is passed to an object query.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt einen Abfrageparameter dar, der an eine <xref:System.Data.Objects.ObjectQuery%601> oder eine Abfrage-Generator-Methode übergeben wird. Weitere Informationen finden Sie unter [Abfrage-Generator-Methoden](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
 Objektparameter bestehen aus einem Namen, einem Typ und einem Wert.  
  
 Diese Klasse kann nicht vererbt werden. Weitere Informationen finden Sie unter <xref:System.Data.Objects.ObjectParameterCollection>.  
  
   
  
## Examples  
 Das Beispiel in diesem Thema beruht auf dem [AdventureWorks Sales-Modell](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). Im Beispiel werden der Auflistung neue Parameter hinzugefügt. Die <xref:System.Data.Objects.ObjectParameterCollection> wird durchlaufen, und für jeden Parameter in der Auflistung werden Name, Typ und Wert angezeigt.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Data.Objects.ObjectParameter" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectParameter (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameter.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectParameter(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectParameter : string * obj -&gt; System.Data.Objects.ObjectParameter" Usage="new System.Data.Objects.ObjectParameter (name, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The parameter name. This name should not include the "@" parameter marker that is used in [!INCLUDE[esql](~/includes/esql-md.md)] statements, only the actual name. The first character of the expression must be a letter. Any successive characters in the expression must be either letters, numbers, or an underscore (_) character.</param>
        <param name="value">The initial value (and inherently, the type) of the parameter.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Data.Objects.ObjectParameter" /> class with the specified name and value.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor erstellt aus dem angegebenen Namen und Wert einen Parameter. Der Typ des Parameters wird aus dem Wert hergeleitet.  
  
 Nach dem Hinzufügen zur <xref:System.Data.Objects.ObjectParameterCollection> kann der Parametername nicht mehr geändert werden. Der Parameterwert kann über die <xref:System.Data.Objects.ObjectParameter.Value%2A>-Eigenschaft geändert werden. Nach dem Kompilieren der Abfrage kann der Wert nicht mehr geändert werden. Weitere Informationen finden Sie unter [Abfrage-Generator-Methoden](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
   
  
## Examples  
 Das Beispiel in diesem Thema beruht auf dem [AdventureWorks Sales-Modell](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). Im Beispiel werden der Auflistung neue Parameter hinzugefügt. Die <xref:System.Data.Objects.ObjectParameterCollection> wird durchlaufen, und für jeden Parameter in der Auflistung werden Name, Typ und Wert angezeigt.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">If the value of either argument is null.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">If the value of the name argument is not valid. Parameter names must start with a letter and can only contain letters, numbers, and underscores.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectParameter (string name, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameter.#ctor(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectParameter(System::String ^ name, Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectParameter : string * Type -&gt; System.Data.Objects.ObjectParameter" Usage="new System.Data.Objects.ObjectParameter (name, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name">The parameter name. This name should not include the "@" parameter marker that is used in the [!INCLUDE[esql](~/includes/esql-md.md)] statements, only the actual name. The first character of the expression must be a letter. Any successive characters in the expression must be either letters, numbers, or an underscore (_) character.</param>
        <param name="type">The common language runtime (CLR) type of the parameter.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Data.Objects.ObjectParameter" /> class with the specified name and type.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nach dem Instanziieren kann der Parametername nicht mehr geändert werden. Der Parameterwert kann über die <xref:System.Data.Objects.ObjectParameter.Value%2A>-Eigenschaft festgelegt oder geändert werden. Nach dem Kompilieren der Abfrage kann der Wert nicht mehr geändert werden. Weitere Informationen finden Sie unter [Abfrage-Generator-Methoden](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">If the value of either argument is null.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">If the value of the name argument is invalid. Parameter names must start with a letter and can only contain letters, numbers, and underscores.</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameter.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Data.Objects.ObjectParameter.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the parameter name, which can only be set through a constructor.</summary>
        <value>Der Parametername, der nur über einen Konstruktor festgelegt werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nach dem Instanziieren kann der Parametername nicht mehr geändert werden. Der Parameterwert kann über die <xref:System.Data.Objects.ObjectParameter.Value%2A>-Eigenschaft festgelegt oder geändert werden. Nach dem Kompilieren der Abfrage kann der Wert nicht mehr geändert werden. Weitere Informationen finden Sie unter [Abfrage-Generator-Methoden](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
   
  
## Examples  
 Das Beispiel in diesem Thema beruht auf dem [AdventureWorks Sales-Modell](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). Im Beispiel werden der Auflistung neue Parameter hinzugefügt. Die <xref:System.Data.Objects.ObjectParameterCollection> wird durchlaufen, und für jeden Parameter in der Auflistung werden Name, Typ und Wert angezeigt.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterType">
      <MemberSignature Language="C#" Value="public Type ParameterType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ParameterType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameter.ParameterType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ParameterType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParameterType : Type" Usage="System.Data.Objects.ObjectParameter.ParameterType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the parameter type.</summary>
        <value>Der <see cref="T:System.Type" /> des Parameters.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Parametername kann nur über einen Konstruktor festgelegt werden.  
  
   
  
## Examples  
 Das Beispiel in diesem Thema beruht auf dem [AdventureWorks Sales-Modell](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). Im Beispiel werden der Auflistung neue Parameter hinzugefügt. Die <xref:System.Data.Objects.ObjectParameterCollection> wird durchlaufen, und für jeden Parameter in der Auflistung werden Name, Typ und Wert angezeigt.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Data.Objects.ObjectParameter.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the parameter value.</summary>
        <value>Der Parameterwert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nach dem Kompilieren der Abfrage kann der Wert nicht mehr geändert werden. Weitere Informationen finden Sie unter [Abfrage-Generator-Methoden](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
 Wenn der neue Wert nicht kompatibel mit dem im Konstruktor deklarierten Typ ist, kann möglicherweise eine Laufzeitausnahme ausgelöst werden. Der Anbieter muss ermitteln, ob der Wert mit dem deklarierten Typ kompatibel ist. Wenn der ursprüngliche Typ beispielsweise <xref:System.Int32> und der neue Wert <xref:System.Guid> ist, wird möglicherweise eine Ausnahme ausgelöst.  
  
   
  
## Examples  
 Das Beispiel in diesem Thema beruht auf dem [AdventureWorks Sales-Modell](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). Im Beispiel werden der Auflistung neue Parameter hinzugefügt. Die <xref:System.Data.Objects.ObjectParameterCollection> wird durchlaufen, und für jeden Parameter in der Auflistung werden Name, Typ und Wert angezeigt.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>