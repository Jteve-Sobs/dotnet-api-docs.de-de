<Type Name="ObjectParameterCollection" FullName="System.Data.Objects.ObjectParameterCollection">
  <TypeSignature Language="C#" Value="public sealed class ObjectParameterCollection : System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;, System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectParameterCollection extends System.Object implements class System.Collections.Generic.ICollection`1&lt;class System.Data.Objects.ObjectParameter&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Objects.ObjectParameter&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectParameterCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectParameterCollection&#xA;Implements ICollection(Of ObjectParameter), IEnumerable(Of ObjectParameter)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectParameterCollection sealed : System::Collections::Generic::ICollection&lt;System::Data::Objects::ObjectParameter ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Data::Objects::ObjectParameter ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="4d828-101">Stellt die Abfrageparameter als <see cref="T:System.Data.Objects.ObjectParameter" />-Objekte dar, die in einer <see cref="T:System.Data.Objects.ObjectQuery`1" /> definiert sind.</span><span class="sxs-lookup"><span data-stu-id="4d828-101">Represents the query parameters as <see cref="T:System.Data.Objects.ObjectParameter" /> objects that are defined in an <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d828-102">Stellt die Abfrageparameter als <xref:System.Data.Objects.ObjectParameter>-Objekte dar, die in einer <xref:System.Data.Objects.ObjectQuery%601> definiert sind.</span><span class="sxs-lookup"><span data-stu-id="4d828-102">Represents the query parameters as <xref:System.Data.Objects.ObjectParameter> objects defined in an <xref:System.Data.Objects.ObjectQuery%601>.</span></span>  
  
 <span data-ttu-id="4d828-103">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="4d828-103">This class cannot be inherited.</span></span>  
  
 <span data-ttu-id="4d828-104">Die Parameter, die an Abfrage-Generator-Methoden übergeben werden, werden von aufeinander folgenden Instanzen einer <xref:System.Data.Objects.ObjectQuery%601> in der Sequenz aggregiert.</span><span class="sxs-lookup"><span data-stu-id="4d828-104">The parameters that are passed to query builder methods are aggregated by successive instances of an <xref:System.Data.Objects.ObjectQuery%601> in the sequence.</span></span> <span data-ttu-id="4d828-105">Auf diese kann mithilfe der <xref:System.Data.Objects.ObjectQuery.Parameters%2A>-Eigenschaft zugegriffen werden, die die <xref:System.Data.Objects.ObjectParameterCollection> zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="4d828-105">They can be accessed by using the <xref:System.Data.Objects.ObjectQuery.Parameters%2A> property, which returns the <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="4d828-106">Hinzugefügte Parameter können aus der Auflistung entfernt und die Auflistung kann gelöscht werden, solange die Abfrage nicht kompiliert oder ausgeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="4d828-106">After parameters have been added, they can be removed from the collection and the collection can be cleared, as long as the query has not been compiled or executed.</span></span> <span data-ttu-id="4d828-107">Parameternamen können nicht geändert werden, Werte können jedoch jederzeit geändert werden.</span><span class="sxs-lookup"><span data-stu-id="4d828-107">Parameter names cannot be changed, but values can be changed at any time.</span></span>  
  
 <span data-ttu-id="4d828-108">Die Parameter müssen in der <xref:System.Data.Objects.ObjectParameterCollection> eindeutig sein.</span><span class="sxs-lookup"><span data-stu-id="4d828-108">Parameters must be unique in the <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="4d828-109">Es können sich nicht zwei Parameter mit demselben Namen in der Auflistung befinden.</span><span class="sxs-lookup"><span data-stu-id="4d828-109">There cannot be two parameters in the collection with the same name.</span></span>  
  
 <span data-ttu-id="4d828-110">Bei Zusammensetzungsmethoden wie <xref:System.Data.Objects.ObjectQuery%601.Union%2A>, <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A>, <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> und <xref:System.Data.Objects.ObjectQuery%601.Except%2A> werden die Parameter zusammengeführt.</span><span class="sxs-lookup"><span data-stu-id="4d828-110">When using composition methods, such as <xref:System.Data.Objects.ObjectQuery%601.Union%2A>, <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A>, <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> and <xref:System.Data.Objects.ObjectQuery%601.Except%2A>, the parameters are merged.</span></span> <span data-ttu-id="4d828-111">Wenn die Sätze von Parametern nicht kompatibel oder unvollständig sind, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="4d828-111">An exception is thrown when the sets of parameters are incompatible or incomplete.</span></span> <span data-ttu-id="4d828-112">Weitere Informationen finden Sie unter [Abfrage-Generator-Methoden](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span><span class="sxs-lookup"><span data-stu-id="4d828-112">For more information, see [Query Builder Methods](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d828-113">Das Beispiel in diesem Thema beruht auf dem [AdventureWorks Sales-Modell](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="4d828-113">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="4d828-114">In diesem Beispiel werden der Auflistung neue Parameter hinzugefügt, und die Anzahl der Parameter in der Auflistung wird abgerufen.</span><span class="sxs-lookup"><span data-stu-id="4d828-114">The example adds new parameters to the collection and gets the count of the parameters in the collection.</span></span> <span data-ttu-id="4d828-115">Daraufhin wird die <xref:System.Data.Objects.ObjectParameterCollection> durchlaufen, und für jeden Parameter in der Auflistung werden Name, Typ und Wert angezeigt.</span><span class="sxs-lookup"><span data-stu-id="4d828-115">Then it iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_count_add_indexer)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_count_add_indexer)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Data.Objects.ObjectParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Data.Objects.ObjectParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Add(System.Data.Objects.ObjectParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (parameter As ObjectParameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Data::Objects::ObjectParameter ^ parameter);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Objects.ObjectParameter" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="4d828-116">Der der Auflistung hinzuzufügende Parameter.</span><span class="sxs-lookup"><span data-stu-id="4d828-116">The parameter to add to the collection.</span></span></param>
        <summary><span data-ttu-id="4d828-117">Fügt der Auflistung den angegebenen <see cref="T:System.Data.Objects.ObjectParameter" /> hinzu.</span><span class="sxs-lookup"><span data-stu-id="4d828-117">Adds the specified <see cref="T:System.Data.Objects.ObjectParameter" /> to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d828-118">Hinzugefügte Parameter können aus der Auflistung entfernt und die Auflistung kann gelöscht werden, solange die Abfrage nicht kompiliert oder ausgeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="4d828-118">After parameters have been added, they can be removed from the collection and the collection can be cleared, as long as the query has not been compiled or executed.</span></span> <span data-ttu-id="4d828-119">Parameternamen können nicht geändert werden, Werte können jedoch jederzeit geändert werden.</span><span class="sxs-lookup"><span data-stu-id="4d828-119">Parameter names cannot be changed, but values can be changed at any time.</span></span>  
  
 <span data-ttu-id="4d828-120">Die Parameter müssen in der <xref:System.Data.Objects.ObjectParameterCollection> eindeutig sein.</span><span class="sxs-lookup"><span data-stu-id="4d828-120">Parameters must be unique in the <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="4d828-121">Es können sich nicht zwei Parameter mit demselben Namen in der Auflistung befinden.</span><span class="sxs-lookup"><span data-stu-id="4d828-121">There cannot be two parameters in the collection with the same name.</span></span> <span data-ttu-id="4d828-122">Weitere Informationen finden Sie unter [Abfrage-Generator-Methoden](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span><span class="sxs-lookup"><span data-stu-id="4d828-122">For more information, see [Query Builder Methods](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d828-123">Das Beispiel in diesem Thema beruht auf dem [AdventureWorks Sales-Modell](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="4d828-123">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="4d828-124">Im Beispiel werden der Auflistung neue Parameter hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="4d828-124">The example adds new parameters to the collection.</span></span> <span data-ttu-id="4d828-125">Die <xref:System.Data.Objects.ObjectParameterCollection> wird durchlaufen, und für jeden Parameter in der Auflistung werden Name, Typ und Wert angezeigt.</span><span class="sxs-lookup"><span data-stu-id="4d828-125">It iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_count_add_indexer)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_count_add_indexer)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4d828-126">Das <paramref name="parameter" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4d828-126">The <paramref name="parameter" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4d828-127">Das <paramref name="parameter" />-Argument ist bereits in der Auflistung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="4d828-127">The <paramref name="parameter" /> argument already exists in the collection.</span></span> <span data-ttu-id="4d828-128">Dieses Verhalten unterscheidet sich von dem der meisten Auflistungen, die doppelte Einträge zulassen.</span><span class="sxs-lookup"><span data-stu-id="4d828-128">This behavior differs from that of most collections that allow duplicate entries.</span></span>  
  
 <span data-ttu-id="4d828-129">- oder - </span><span class="sxs-lookup"><span data-stu-id="4d828-129">-or-</span></span>  
  
 <span data-ttu-id="4d828-130">Ein weiterer Parameter, der den gleichen Namen wie das <paramref name="parameter" />-Argument aufweist, ist bereits in der Auflistung vorhanden.</span><span class="sxs-lookup"><span data-stu-id="4d828-130">Another parameter with the same name as the <paramref name="parameter" /> argument already exists in the collection.</span></span> <span data-ttu-id="4d828-131">Beachten Sie, dass bei der Suche die Groß- und Kleinschreibung nicht beachtet wird.</span><span class="sxs-lookup"><span data-stu-id="4d828-131">Note that the lookup is case-insensitive.</span></span> <span data-ttu-id="4d828-132">Dieses Verhalten unterscheidet sich von dem der meisten Auflistungen und ähnelt dem eines <see cref="T:System.Collections.Generic.Dictionary" />.</span><span class="sxs-lookup"><span data-stu-id="4d828-132">This behavior differs from that of most collections, and is more like that of a <see cref="T:System.Collections.Generic.Dictionary" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4d828-133">Der Typ des <paramref name="parameter" /> ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="4d828-133">The type of the <paramref name="parameter" /> is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4d828-134">Löscht sämtliche <see cref="T:System.Data.Objects.ObjectParameter" />-Instanzen aus der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="4d828-134">Deletes all <see cref="T:System.Data.Objects.ObjectParameter" /> instances from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4d828-135">Überprüft nach Verweis das Vorliegen des angegebenen <see cref="T:System.Data.Objects.ObjectParameter" /> in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="4d828-135">Checks for the existence of a specified <see cref="T:System.Data.Objects.ObjectParameter" /> in the collection by reference.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Data.Objects.ObjectParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Data.Objects.ObjectParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Contains(System.Data.Objects.ObjectParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (parameter As ObjectParameter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Data::Objects::ObjectParameter ^ parameter);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Objects.ObjectParameter" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="4d828-136">Der <see cref="T:System.Data.Objects.ObjectParameter" />, der in der Auflistung gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="4d828-136">The <see cref="T:System.Data.Objects.ObjectParameter" /> to find in the collection.</span></span></param>
        <summary><span data-ttu-id="4d828-137">Überprüft nach Verweis das Vorliegen des angegebenen <see cref="T:System.Data.Objects.ObjectParameter" /> in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="4d828-137">Checks for the existence of a specified <see cref="T:System.Data.Objects.ObjectParameter" /> in the collection by reference.</span></span></summary>
        <returns><span data-ttu-id="4d828-138">Gibt <see langword="true" /> zurück, wenn das Parameterobjekt in der Auflistung gefunden wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4d828-138">Returns <see langword="true" /> if the parameter object was found in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d828-139">Dies ist eine verweisbasierte Prüfung.</span><span class="sxs-lookup"><span data-stu-id="4d828-139">This is a reference-based check.</span></span> <span data-ttu-id="4d828-140">D. h., wenn ein <xref:System.Data.Objects.ObjectParameter> wird angegeben, die den gleichen Namen wie ein Parameterobjekt in der Auflistung enthält nur von dieser Methode zurückgegeben `true` wird jedoch das gleiche Objekt.</span><span class="sxs-lookup"><span data-stu-id="4d828-140">That is, if an <xref:System.Data.Objects.ObjectParameter> is specified that contains the same name as a parameter object in the collection, this method will only return `true` if it is the same object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4d828-141">Das <paramref name="parameter" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4d828-141">The <paramref name="parameter" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4d828-142">Der Name des in der Auflistung zu suchenden Parameters.</span><span class="sxs-lookup"><span data-stu-id="4d828-142">The name of the parameter to look for in the collection.</span></span> <span data-ttu-id="4d828-143">Dieser Name sollte nur den tatsächlichen Namen und nicht die Parametermarkierung "@" enthalten, die in den [!INCLUDE[esql](~/includes/esql-md.md)]-Anweisungen verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="4d828-143">This name should not include the "@" parameter marker that is used in the [!INCLUDE[esql](~/includes/esql-md.md)] statements, only the actual name.</span></span></param>
        <summary><span data-ttu-id="4d828-144">Ermittelt, ob ein <see cref="T:System.Data.Objects.ObjectParameter" /> mit dem angegebenen Namen in der Auflistung vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="4d828-144">Determines whether an <see cref="T:System.Data.Objects.ObjectParameter" /> with the specified name is in the collection.</span></span></summary>
        <returns><span data-ttu-id="4d828-145">Gibt <see langword="true" /> zurück, wenn ein Parameter mit dem angegebenen Namen in der Auflistung gefunden wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4d828-145">Returns <see langword="true" /> if a parameter with the specified name was found in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4d828-146">Das Beispiel in diesem Thema beruht auf dem [AdventureWorks Sales-Modell](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="4d828-146">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="4d828-147">In dem Beispiel wird die <xref:System.Data.Objects.ObjectParameterCollection.Contains%2A>-Methode verwendet, um zu ermitteln, ob der angegebene Parameter in der Auflistung vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="4d828-147">The example uses the <xref:System.Data.Objects.ObjectParameterCollection.Contains%2A> method to determine whether the specified parameter is in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_StringArg](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_stringarg)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_StringArg](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_stringarg)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4d828-148">Der <paramref name="name" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4d828-148">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Data.Objects.ObjectParameter[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Data.Objects.ObjectParameter[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.CopyTo(System.Data.Objects.ObjectParameter[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As ObjectParameter(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Data.Objects.ObjectParameter[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="4d828-149">Das Array, in das die Parameter kopiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="4d828-149">The array into which to copy the parameters.</span></span></param>
        <param name="index"><span data-ttu-id="4d828-150">Der Index im Array, von dem ab die Parameter kopiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="4d828-150">The index in the array at which to start copying the parameters.</span></span></param>
        <summary><span data-ttu-id="4d828-151">Ermöglicht das Kopieren der Parameter in der Auflistung, beginnend mit dem Objekt am angegebenen Index, in ein angegebenes Array.</span><span class="sxs-lookup"><span data-stu-id="4d828-151">Allows the parameters in the collection to be copied into a supplied array, starting with the object at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4d828-152">Das Beispiel in diesem Thema beruht auf dem [AdventureWorks Sales-Modell](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="4d828-152">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="4d828-153">Im Beispiel werden die Parameter in das angegebene Array kopiert.</span><span class="sxs-lookup"><span data-stu-id="4d828-153">The example copies the parameters into the specified array.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_CopyTo](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_copyto)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_CopyTo](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_copyto)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameterCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d828-154">Ruft die aktuelle Anzahl der Parameter in der Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="4d828-154">Gets the number of parameters currently in the collection.</span></span></summary>
        <value><span data-ttu-id="4d828-155">Die Anzahl der aktuell in der Auflistung enthaltenen <see cref="T:System.Data.Objects.ObjectParameter" />-Objekte.</span><span class="sxs-lookup"><span data-stu-id="4d828-155">The number of <see cref="T:System.Data.Objects.ObjectParameter" /> objects that are currently in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4d828-156">Das Beispiel in diesem Thema beruht auf dem [AdventureWorks Sales-Modell](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="4d828-156">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="4d828-157">In diesem Beispiel werden der Auflistung neue Parameter hinzugefügt, und die Anzahl der Parameter in der Auflistung wird abgerufen.</span><span class="sxs-lookup"><span data-stu-id="4d828-157">The example adds new parameters to the collection and gets the count of the parameters in the collection.</span></span> <span data-ttu-id="4d828-158">Daraufhin wird die <xref:System.Data.Objects.ObjectParameterCollection> durchlaufen, und für jeden Parameter in der Auflistung werden Name, Typ und Wert angezeigt.</span><span class="sxs-lookup"><span data-stu-id="4d828-158">Then it iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_count_add_indexer)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_count_add_indexer)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectParameter this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectParameter Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameterCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(name As String) As ObjectParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::ObjectParameter ^ default[System::String ^] { System::Data::Objects::ObjectParameter ^ get(System::String ^ name); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4d828-159">Der Name des zu suchenden Parameters.</span><span class="sxs-lookup"><span data-stu-id="4d828-159">The name of the parameter to find.</span></span> <span data-ttu-id="4d828-160">Dieser Name sollte nur den tatsächlichen Namen und nicht die Parametermarkierung "@" enthalten, die in den [!INCLUDE[esql](~/includes/esql-md.md)]-Anweisungen verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="4d828-160">This name should not include the "@" parameter marker that is used in the [!INCLUDE[esql](~/includes/esql-md.md)] statements, only the actual name.</span></span></param>
        <summary><span data-ttu-id="4d828-161">Stellt einen Indexer bereit, der Aufrufern ermöglicht, Parameter nach Namen abzurufen.</span><span class="sxs-lookup"><span data-stu-id="4d828-161">Provides an indexer that allows callers to retrieve parameters by name.</span></span></summary>
        <value><span data-ttu-id="4d828-162">Die <see cref="T:System.Data.Objects.ObjectParameter" />-Instanz.</span><span class="sxs-lookup"><span data-stu-id="4d828-162">The <see cref="T:System.Data.Objects.ObjectParameter" /> instance.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4d828-163">Es wurde kein Parameter mit dem angegebenen Namen in der Auflistung gefunden.</span><span class="sxs-lookup"><span data-stu-id="4d828-163">No parameter with the specified name is found in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Data.Objects.ObjectParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.Data.Objects.ObjectParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Remove(System.Data.Objects.ObjectParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (parameter As ObjectParameter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Data::Objects::ObjectParameter ^ parameter);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Objects.ObjectParameter" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="4d828-164">Ein Objekt, das aus der Auflistung entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="4d828-164">An object to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="4d828-165">Entfernt nach Verweis eine Instanz eines <see cref="T:System.Data.Objects.ObjectParameter" /> aus der Auflistung, wenn dieses in der Auflistung vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="4d828-165">Removes an instance of an <see cref="T:System.Data.Objects.ObjectParameter" /> from the collection by reference if it exists in the collection.</span></span></summary>
        <returns><span data-ttu-id="4d828-166">Gibt <see langword="true" /> zurück, wenn das Parameterobjekt gefunden und aus der Auflistung entfernt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4d828-166">Returns <see langword="true" /> if the parameter object was found and removed from the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d828-167">Dies ist ein verweisbasierter Vergleich.</span><span class="sxs-lookup"><span data-stu-id="4d828-167">This is a reference-based comparison.</span></span> <span data-ttu-id="4d828-168">Dies bedeutet: Falls ein Abfrageparameterobjekt angegeben wird, der denselben Namen wie ein Parameterobjekt in der Auflistung enthält, wird der Parameter in der Auflistung nur dann entfernt, wenn es sich um dasselbe Objekt handelt.</span><span class="sxs-lookup"><span data-stu-id="4d828-168">That is, if a query parameter object is specified that contains the same name as a parameter object in the collection, the parameter in the collection will only be removed if it is the same object.</span></span> <span data-ttu-id="4d828-169">Um ein Objekt nach Name zu entfernen, verwenden Sie zunächst den Indexer, um die Parameterinstanz abzurufen, und entfernen diese dann mithilfe dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="4d828-169">To remove an object by name, first use the indexer to retrieve the parameter instance, then remove it by using this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d828-170">Das Beispiel in diesem Thema beruht auf dem [AdventureWorks Sales-Modell](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="4d828-170">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="4d828-171">In diesem Beispiel werden der Auflistung zwei Parameter hinzugefügt und wieder entfernt.</span><span class="sxs-lookup"><span data-stu-id="4d828-171">The example adds two parameters to the collection and then removes the parameters.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Remove](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_remove)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Remove](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_remove)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4d828-172">Das <paramref name="parameter" />-Argument lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4d828-172">The <paramref name="parameter" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameterCollection.System#Collections#Generic#ICollection&lt;System#Data#Objects#ObjectParameter&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of ObjectParameter).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4d828-173">Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist oder geändert werden kann.</span><span class="sxs-lookup"><span data-stu-id="4d828-173">Gets a value that indicates whether the collection is read-only or can be modified.</span></span></summary>
        <value><span data-ttu-id="4d828-174">Ein boolescher Wert. Dieser ist <see langword="true" />, wenn die Auflistung schreibgeschützt ist, und <see langword="false" />, wenn die Auflistung geändert werden kann.</span><span class="sxs-lookup"><span data-stu-id="4d828-174">A Boolean value that is <see langword="true" /> if the collection is read-only and <see langword="false" /> of the collection can be modified.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d828-175">Diese Auflistung hat stets Lese-/Schreibzugriff. Parameter können hinzugefügt, entfernt und geändert werden.</span><span class="sxs-lookup"><span data-stu-id="4d828-175">This collection is always read/write; parameters can be added, removed, and modified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Data.Objects.ObjectParameter&gt; IEnumerable&lt;ObjectParameter&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Data.Objects.ObjectParameter&gt; System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.System#Collections#Generic#IEnumerable&lt;System#Data#Objects#ObjectParameter&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of ObjectParameter) Implements IEnumerable(Of ObjectParameter).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Data::Objects::ObjectParameter ^&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Data::Objects::ObjectParameter ^&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Data.Objects.ObjectParameter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4d828-176">Gibt einen typisierten Enumerator für die Auflistung zurück.</span><span class="sxs-lookup"><span data-stu-id="4d828-176">Returns a typed enumerator over the collection.</span></span></summary>
        <returns><span data-ttu-id="4d828-177">Ein <see cref="T:System.Collections.Generic.IEnumerator`1" /> vom Typ <see cref="T:System.Data.Objects.ObjectParameter" />.</span><span class="sxs-lookup"><span data-stu-id="4d828-177">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> of type <see cref="T:System.Data.Objects.ObjectParameter" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d828-178">Gibt eine <xref:System.Collections.Generic.IEnumerator%601>-Instanz zurück.</span><span class="sxs-lookup"><span data-stu-id="4d828-178">Returns an <xref:System.Collections.Generic.IEnumerator%601> instance.</span></span> <span data-ttu-id="4d828-179">Damit kann die Auflistung durchlaufen und durchsucht werden.</span><span class="sxs-lookup"><span data-stu-id="4d828-179">This allows the collection to be iterated through and traversed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4d828-180">Gibt einen nicht typisierten Enumerator für die Auflistung zurück.</span><span class="sxs-lookup"><span data-stu-id="4d828-180">Returns an untyped enumerator over the collection.</span></span></summary>
        <returns><span data-ttu-id="4d828-181">Eine <see cref="T:System.Collections.IEnumerator" />-Instanz.</span><span class="sxs-lookup"><span data-stu-id="4d828-181">An <see cref="T:System.Collections.IEnumerator" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d828-182">Gibt einen nicht typisierten Enumerator für die Auflistung zurück.</span><span class="sxs-lookup"><span data-stu-id="4d828-182">Returns an untyped enumerator over the collection.</span></span> <span data-ttu-id="4d828-183">Damit kann die Auflistung durchlaufen und durchsucht werden.</span><span class="sxs-lookup"><span data-stu-id="4d828-183">This allows the collection to be iterated through and traversed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>