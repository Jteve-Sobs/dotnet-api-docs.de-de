<Namespace Name="System.Runtime.Remoting.Contexts">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="40aa51c114d4ab3b2669d4d437aa854fb9a8f8c4" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="05/10/2018" />
    <Meta Name="ms.locfileid" Value="30739324" />
  </Metadata>
  <Docs>
    <summary>Der <see cref="N:System.Runtime.Remoting.Contexts" />-Namespace enthält Objekte, die die Kontexte aller darin befindlichen Objekte definieren. Ein Kontext ist eine geordnete Folge von Eigenschaften, die eine Umgebung für die darin befindlichen Objekte definiert. Kontexte werden während der Aktivierung für Objekte erstellt, die so konfiguriert sind, dass bestimmte automatische Dienste für sie erforderlich sind, z. B. Synchronisierung, Transaktionen, JIT-Aktivierung (Just-In-Time), Sicherheit usw. In einem Kontext können sich mehrere Objekte befinden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein neues Objekt erstellt wird,.NET Framework sucht nach einem kompatiblen Kontext zu oder erstellt einen neuen Kontext für das Objekt. Nachdem ein Objekt in einem Kontext platziert ist, bleibt es dort Lebensdauer. Klassen, die an einen Kontext gebunden werden können, werden als kontextgebundene Klassen bezeichnet. Wenn von einem anderen Kontext zugegriffen wird, werden diese kontextgebundenen Klassen direkt mit einem Proxy verwiesen. Ein Aufruf von einem Objekt in einem Kontext auf ein Objekt in einem anderen Kontext geht über einen Kontextproxy und, die von der Richtlinie, die von den kombinierten Kontexteigenschaften implementiert beeinflusst werden.  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>