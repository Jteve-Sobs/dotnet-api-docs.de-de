<Namespace Name="System.Runtime.Remoting.Contexts">
  <Metadata><Meta Name="ms.openlocfilehash" Value="40aa51c114d4ab3b2669d4d437aa854fb9a8f8c4" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70600892" /></Metadata><Docs>
    <summary>Der <see cref="N:System.Runtime.Remoting.Contexts" />-Namespace enthält Objekte, die die Kontexte aller darin befindlichen Objekte definieren. Ein Kontext ist eine geordnete Folge von Eigenschaften, die eine Umgebung für die darin befindlichen Objekte definiert. Kontexte werden während der Aktivierung für Objekte erstellt, die so konfiguriert sind, dass bestimmte automatische Dienste für sie erforderlich sind, z. B. Synchronisierung, Transaktionen, JIT-Aktivierung (Just-In-Time), Sicherheit usw. In einem Kontext können sich mehrere Objekte befinden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jedes Mal, wenn ein neues-Objekt erstellt wird, sucht the.NET Framework einen kompatiblen Kontext oder erstellt einen neuen Kontext für das-Objekt. Nachdem ein Objekt in einen Kontext eingefügt wurde, bleibt es für das Leben erhalten. Klassen, die an einen Kontext gebunden werden können, werden als kontextgebundene Klassen bezeichnet. Beim Zugriff über einen anderen Kontext wird auf diese Kontext gebundenen Klassen direkt mithilfe eines Proxys verwiesen. Ein Aufrufen von einem Objekt in einem Kontext zu einem Objekt in einem anderen Kontext durchläuft einen Kontext Proxy und ist von der Richtlinie betroffen, die von den kombinierten Kontexteigenschaften implementiert wird.  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>