<Type Name="RuleWriteAttribute" FullName="System.Workflow.Activities.Rules.RuleWriteAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="01566c72cdda0c6bae4644e11107d2c407fe955d" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48646657" /></Metadata><TypeSignature Language="C#" Value="public sealed class RuleWriteAttribute : System.Workflow.Activities.Rules.RuleReadWriteAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RuleWriteAttribute extends System.Workflow.Activities.Rules.RuleReadWriteAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.Rules.RuleWriteAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RuleWriteAttribute&#xA;Inherits RuleReadWriteAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class RuleWriteAttribute sealed : System::Workflow::Activities::Rules::RuleReadWriteAttribute" />
  <TypeSignature Language="F#" Value="type RuleWriteAttribute = class&#xA;    inherit RuleReadWriteAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Activities.Rules.RuleReadWriteAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method | System.AttributeTargets.Property, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt an, dass eine Eigenschaft oder ein Feld von der Methode oder der Eigenschaft geschrieben wird, auf die dieses Attribut angewendet wird. Anhand dieser Informationen bestimmt die Regel-Engine Abhängigkeiten zwischen Regeln. Diese Klasse kann nicht vererbt werden. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit diesem Attribut wird ein Vorwärtsverkettungsmodell unterstützt, das eine erneute Auswertung von Regeln basierend auf Änderungen an Feldern und Eigenschaften veranlasst. Das <xref:System.Workflow.Activities.Rules.RuleReadAttribute> und <xref:System.Workflow.Activities.Rules.RuleWriteAttribute> geben die von der Eigenschaft oder Methode, auf die das Attribut angewendet wird, gelesenen oder geschriebenen Eigenschaften an. `RuleInvokeAttributes` werden verwendet, um anzugeben, dass diese Eigenschaft oder Methode andere Methoden verwendet, die ebenfalls auf Abhängigkeiten überprüft werden muss.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuleWriteAttribute (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleWriteAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuleWriteAttribute(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.Rules.RuleWriteAttribute : string -&gt; System.Workflow.Activities.Rules.RuleWriteAttribute" Usage="new System.Workflow.Activities.Rules.RuleWriteAttribute path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Das Feld oder die Eigenschaft in derselben Klasse wie die Methode oder die Eigenschaft, auf die dieses Attribut angewendet wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Workflow.Activities.Rules.RuleWriteAttribute" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um anzugeben, dass die Methode oder Eigenschaft in ein Feld oder eine Eigenschaft eines Parameters schreibt, müssen Sie <xref:System.Workflow.Activities.Rules.RuleWriteAttribute> (Pfad `RuleAttributeTarget.Parameter`) verwenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuleWriteAttribute (string path, System.Workflow.Activities.Rules.RuleAttributeTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.Workflow.Activities.Rules.RuleAttributeTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleWriteAttribute.#ctor(System.String,System.Workflow.Activities.Rules.RuleAttributeTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, target As RuleAttributeTarget)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuleWriteAttribute(System::String ^ path, System::Workflow::Activities::Rules::RuleAttributeTarget target);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.Rules.RuleWriteAttribute : string * System.Workflow.Activities.Rules.RuleAttributeTarget -&gt; System.Workflow.Activities.Rules.RuleWriteAttribute" Usage="new System.Workflow.Activities.Rules.RuleWriteAttribute (path, target)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="target" Type="System.Workflow.Activities.Rules.RuleAttributeTarget" />
      </Parameters>
      <Docs>
        <param name="path">Das Feld oder die Eigenschaft in derselben Klasse wie die Methode oder die Eigenschaft, auf die dieses Attribut angewendet wird.</param>
        <param name="target"><see cref="T:System.Workflow.Activities.Rules.RuleAttributeTarget" />-Enumerationswert, der bestimmt, wie der Pfad verwendet wird, um das Ziel zu finden.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Workflow.Activities.Rules.RuleWriteAttribute" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um anzugeben, dass die Methode oder Eigenschaft in ein Feld oder eine Eigenschaft eines Parameters schreibt, müssen Sie <xref:System.Workflow.Activities.Rules.RuleWriteAttribute> (Pfad `RuleAttributeTarget.Parameter`) verwenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>