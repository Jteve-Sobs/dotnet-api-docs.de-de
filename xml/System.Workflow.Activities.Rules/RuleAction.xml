<Type Name="RuleAction" FullName="System.Workflow.Activities.Rules.RuleAction">
  <Metadata><Meta Name="ms.openlocfilehash" Value="112f0eb53c06e1c5678f56691ff552257de6af25" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52383331" /></Metadata><TypeSignature Language="C#" Value="public abstract class RuleAction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit RuleAction extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.Rules.RuleAction" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RuleAction" />
  <TypeSignature Language="C++ CLI" Value="public ref class RuleAction abstract" />
  <TypeSignature Language="F#" Value="type RuleAction = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ebab7-101">Stellt eine abstrakte Klasse dar, die eine Aktion definiert, die auszuführen ist, wenn die zugeordnete <see cref="P:System.Workflow.Activities.Rules.Rule.Condition" /> bei <see langword="true" /> <see cref="P:System.Workflow.Activities.Rules.Rule.ThenActions" /> ergibt, oder <see langword="false" /> bei <see cref="P:System.Workflow.Activities.Rules.Rule.ElseActions" />.</span><span class="sxs-lookup"><span data-stu-id="ebab7-101">Represents an abstract class that defines an action to be executed if the associated <see cref="P:System.Workflow.Activities.Rules.Rule.Condition" /> evaluates to <see langword="true" />, for <see cref="P:System.Workflow.Activities.Rules.Rule.ThenActions" />, or <see langword="false" />, for <see cref="P:System.Workflow.Activities.Rules.Rule.ElseActions" />.</span></span> <span data-ttu-id="ebab7-102">Die Klasse muss geerbt werden.</span><span class="sxs-lookup"><span data-stu-id="ebab7-102">This class must be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebab7-103"><xref:System.Workflow.Activities.Rules.RuleStatementAction>-Objekte (die als <xref:System.Workflow.Activities.Rules.Rule.ThenActions%2A> und auch als <xref:System.Workflow.Activities.Rules.Rule.ElseActions%2A> verwendet werden können) legen in der Regel einen Variablenwert für eine Eigenschaft der Aktivität fest, rufen eine Methode der Aktivität auf oder rufen eine statische Methode der Typen in Assemblys auf, auf die verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="ebab7-103"><xref:System.Workflow.Activities.Rules.RuleStatementAction> objects (which can be used as both <xref:System.Workflow.Activities.Rules.Rule.ThenActions%2A> and <xref:System.Workflow.Activities.Rules.Rule.ElseActions%2A>) typically set a variable value on one of the properties of the activity, call a method of the activity, or call static methods on types in referenced assemblies.</span></span>  
  
 <span data-ttu-id="ebab7-104"><xref:System.Workflow.Activities.Rules.RuleAction> ist der Basistyp, von dem die Klassen <xref:System.Workflow.Activities.Rules.RuleStatementAction>, <xref:System.Workflow.Activities.Rules.RuleHaltAction> und <xref:System.Workflow.Activities.Rules.RuleUpdateAction> abgeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="ebab7-104"><xref:System.Workflow.Activities.Rules.RuleAction> is the base type that <xref:System.Workflow.Activities.Rules.RuleStatementAction>, <xref:System.Workflow.Activities.Rules.RuleHaltAction>, and <xref:System.Workflow.Activities.Rules.RuleUpdateAction> classes derive from.</span></span> <span data-ttu-id="ebab7-105">Diese Klassen werden folgendermaßen verwendet:</span><span class="sxs-lookup"><span data-stu-id="ebab7-105">The uses of these classes is as follows:</span></span>  
  
-   <span data-ttu-id="ebab7-106"><xref:System.Workflow.Activities.Rules.RuleStatementAction> ändert eine Eigenschaft oder ruft eine Methode auf.</span><span class="sxs-lookup"><span data-stu-id="ebab7-106">A <xref:System.Workflow.Activities.Rules.RuleStatementAction> modifies a property or calls a method.</span></span>  
  
-   <span data-ttu-id="ebab7-107"><xref:System.Workflow.Activities.Rules.RuleHaltAction> beendet das Ausführen von <xref:System.Workflow.Activities.Rules.RuleSet> und übergibt die Steuerung wieder an die aufrufende Methode.</span><span class="sxs-lookup"><span data-stu-id="ebab7-107">A <xref:System.Workflow.Activities.Rules.RuleHaltAction> causes the <xref:System.Workflow.Activities.Rules.RuleSet> to stop executing and returns control to the calling method.</span></span>  
  
-   <span data-ttu-id="ebab7-108"><xref:System.Workflow.Activities.Rules.RuleUpdateAction> gibt explizit an, dass eine Regel eine Variable aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="ebab7-108">A <xref:System.Workflow.Activities.Rules.RuleUpdateAction> explicitly indicates that a rule is updating a variable.</span></span> <span data-ttu-id="ebab7-109">Dadurch werden betroffene Regeln erneut ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="ebab7-109">This causes the re-evaluation of any affected rules.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ebab7-110">Mit dem folgenden Code wird eine Aktion erstellt, die in Regelsätzen verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="ebab7-110">The following code creates an action that can be used in rule sets.</span></span> <span data-ttu-id="ebab7-111">Die Aktion wird `Log` genannt und verwendet einen einzelnen Parameter, der eine Zeichenfolge ergeben muss.</span><span class="sxs-lookup"><span data-stu-id="ebab7-111">The action is named `Log`, and takes a single parameter, which must evaluate to a string.</span></span> <span data-ttu-id="ebab7-112">Diese Aktion gibt die Zeichenfolge in der Konsole aus.</span><span class="sxs-lookup"><span data-stu-id="ebab7-112">This action outputs the string to the Console.</span></span>  
  
 <span data-ttu-id="ebab7-113">Verwenden Sie diesen Code, fügen Sie ihn einem Klassenbibliotheksprojekt hinzu, und verweisen Sie in Ihrem Workflowprojekt auf die Bibliothek.</span><span class="sxs-lookup"><span data-stu-id="ebab7-113">To use this code, add it to a Class Library project and reference the library from your workflow project.</span></span>  
  
```csharp  
using System;  
using System.CodeDom;  
using System.Collections.Generic;  
using System.Text;  
using System.Workflow.Activities.Rules;  
using System.Workflow.ComponentModel.Compiler;  
  
namespace LogRuleAction  
{  
    public class Log : RuleAction  
    {  
        CodeExpression message;  
  
        public CodeExpression Message  
        {  
            get { return message; }  
            set { message = value; }  
        }  
  
        public Log()  
        {  
            // constructor required for deserialization  
        }  
  
        public Log(CodeExpression expression)  
        {  
            // constructor required by parser  
            message = expression;  
        }  
  
        public override bool Validate(RuleValidation validator)  
        {  
            ValidationError error;  
            if (message == null)  
            {  
                error = new ValidationError("Message cannot be null", 123);  
                validator.Errors.Add(error);  
                return false;  
            }  
            else  
            {  
                RuleExpressionInfo result = RuleExpressionWalker.Validate(validator, message, false);  
                if ((result == null) || (result.ExpressionType != typeof(string)))  
                {  
                    error = new ValidationError("Message must return string result", 123);  
                    validator.Errors.Add(error);  
                    return false;  
                }  
            }  
            return (validator.Errors.Count == 0);  
        }  
  
        public override RuleAction Clone()  
        {  
            Log result = new Log();  
            result.Message = RuleExpressionWalker.Clone(message);  
            return result;  
        }  
  
        public override void Execute(RuleExecution context)  
        {  
            RuleExpressionResult result = RuleExpressionWalker.Evaluate(context, message);  
            if (result != null)  
                Console.WriteLine(result.Value);  
        }  
  
        public override ICollection<string> GetSideEffects(RuleValidation validation)  
        {  
            RuleAnalysis analysis = new RuleAnalysis(validation, true);  
            if (message != null)  
                RuleExpressionWalker.AnalyzeUsage(analysis, message, true, false, null);  
            return analysis.GetSymbols();  
        }  
  
        public override string ToString()  
        {  
            // what should be displayed by the parser  
            StringBuilder result = new StringBuilder("Log(");  
            RuleExpressionWalker.Decompile(result, message, null);  
            result.Append(")");  
            return result.ToString();  
        }  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RuleAction ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleAction.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RuleAction();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ebab7-114">Initialisiert beim Implementieren in einer abgeleiteten Klasse eine neue Instanz der <see cref="T:System.Workflow.Activities.Rules.RuleAction" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="ebab7-114">When implemented in a derived class, initializes a new instance of the <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public abstract System.Workflow.Activities.Rules.RuleAction Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Workflow.Activities.Rules.RuleAction Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleAction.Clone" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Clone () As RuleAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Workflow::Activities::Rules::RuleAction ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Workflow.Activities.Rules.RuleAction" Usage="ruleAction.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.Rules.RuleAction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ebab7-115">Erstellt eine tiefe Kopie der aktuellen <see cref="T:System.Workflow.Activities.Rules.RuleAction" />.</span><span class="sxs-lookup"><span data-stu-id="ebab7-115">Creates a deep copy of the current <see cref="T:System.Workflow.Activities.Rules.RuleAction" />.</span></span></summary>
        <returns><span data-ttu-id="ebab7-116">Eine <see cref="T:System.Workflow.Activities.Rules.RuleAction" />, die mit dieser Instanz identisch ist.</span><span class="sxs-lookup"><span data-stu-id="ebab7-116">A <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> that is identical to this instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public abstract void Execute (System.Workflow.Activities.Rules.RuleExecution context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute(class System.Workflow.Activities.Rules.RuleExecution context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleAction.Execute(System.Workflow.Activities.Rules.RuleExecution)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Execute (context As RuleExecution)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Execute(System::Workflow::Activities::Rules::RuleExecution ^ context);" />
      <MemberSignature Language="F#" Value="abstract member Execute : System.Workflow.Activities.Rules.RuleExecution -&gt; unit" Usage="ruleAction.Execute context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Workflow.Activities.Rules.RuleExecution" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="ebab7-117">Der Laufzeitzustand, in dem <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="ebab7-117">The runtime state that the <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> is executing in.</span></span></param>
        <summary><span data-ttu-id="ebab7-118">Führt <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> mithilfe der angegebenen <see cref="T:System.Workflow.Activities.Rules.RuleExecution" />-Instanz aus.</span><span class="sxs-lookup"><span data-stu-id="ebab7-118">Executes the <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> using the specified <see cref="T:System.Workflow.Activities.Rules.RuleExecution" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSideEffects">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.ICollection&lt;string&gt; GetSideEffects (System.Workflow.Activities.Rules.RuleValidation validation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.ICollection`1&lt;string&gt; GetSideEffects(class System.Workflow.Activities.Rules.RuleValidation validation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetSideEffects (validation As RuleValidation) As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ GetSideEffects(System::Workflow::Activities::Rules::RuleValidation ^ validation);" />
      <MemberSignature Language="F#" Value="abstract member GetSideEffects : System.Workflow.Activities.Rules.RuleValidation -&gt; System.Collections.Generic.ICollection&lt;string&gt;" Usage="ruleAction.GetSideEffects validation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validation" Type="System.Workflow.Activities.Rules.RuleValidation" />
      </Parameters>
      <Docs>
        <param name="validation"><span data-ttu-id="ebab7-119">Die <see cref="T:System.Workflow.Activities.Rules.RuleValidation" />, die zuvor in einem Aufruf an <see cref="M:System.Workflow.Activities.Rules.RuleAction.Validate(System.Workflow.Activities.Rules.RuleValidation)" /> verwendet wurde.</span><span class="sxs-lookup"><span data-stu-id="ebab7-119">The <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> that was used previously in a call to <see cref="M:System.Workflow.Activities.Rules.RuleAction.Validate(System.Workflow.Activities.Rules.RuleValidation)" />.</span></span></param>
        <summary><span data-ttu-id="ebab7-120">Gibt die Felder und Eigenschaften zurück, die mit <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> aktualisiert werden.</span><span class="sxs-lookup"><span data-stu-id="ebab7-120">Returns the fields and properties updated by a <see cref="T:System.Workflow.Activities.Rules.RuleAction" />.</span></span></summary>
        <returns><span data-ttu-id="ebab7-121">Eine Auflistung von Zeichenfolgen, die von <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> geänderte Namen von Feldern und Eigenschaften darstellen.</span><span class="sxs-lookup"><span data-stu-id="ebab7-121">A collection of strings that represent the names of fields and properties that are changed by a <see cref="T:System.Workflow.Activities.Rules.RuleAction" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public abstract bool Validate (System.Workflow.Activities.Rules.RuleValidation validator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Validate(class System.Workflow.Activities.Rules.RuleValidation validator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleAction.Validate(System.Workflow.Activities.Rules.RuleValidation)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Validate (validator As RuleValidation) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Validate(System::Workflow::Activities::Rules::RuleValidation ^ validator);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.Workflow.Activities.Rules.RuleValidation -&gt; bool" Usage="ruleAction.Validate validator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validator" Type="System.Workflow.Activities.Rules.RuleValidation" />
      </Parameters>
      <Docs>
        <param name="validator"><span data-ttu-id="ebab7-122"><see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> zum Verwalten der Validierung.</span><span class="sxs-lookup"><span data-stu-id="ebab7-122">The <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> to manage the validation process.</span></span></param>
        <summary><span data-ttu-id="ebab7-123">Überprüft, ob <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> ordnungsgemäß konfiguriert und fehlerfrei ist.</span><span class="sxs-lookup"><span data-stu-id="ebab7-123">Verifies that the <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> is configured correctly and has no errors.</span></span></summary>
        <returns><span data-ttu-id="ebab7-124"><see langword="true" />, um anzugeben, dass <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> ordnungsgemäß validiert wurde und fehlerfrei ist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ebab7-124"><see langword="true" /> to show that the <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> validated correctly and has no errors; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebab7-125">Wenn <xref:System.Workflow.Activities.Rules.RuleAction> Fehler aufweist (die `Validate`-Methode gibt `false` zurück), enthält <xref:System.Workflow.Activities.Rules.RuleValidation.Errors%2A?displayProperty=nameWithType> eine Liste der festgestellten Fehler.</span><span class="sxs-lookup"><span data-stu-id="ebab7-125">If the <xref:System.Workflow.Activities.Rules.RuleAction> contains errors (the `Validate` method returns `false`), then <xref:System.Workflow.Activities.Rules.RuleValidation.Errors%2A?displayProperty=nameWithType> will contain the list of errors encountered.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>