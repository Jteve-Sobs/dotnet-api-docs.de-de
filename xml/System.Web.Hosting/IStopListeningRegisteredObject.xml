<Type Name="IStopListeningRegisteredObject" FullName="System.Web.Hosting.IStopListeningRegisteredObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="42c12580eb507575fd080c643f92d4ea984fca59" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="69139003" /></Metadata><TypeSignature Language="C#" Value="public interface IStopListeningRegisteredObject : System.Web.Hosting.IRegisteredObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStopListeningRegisteredObject implements class System.Web.Hosting.IRegisteredObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.IStopListeningRegisteredObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStopListeningRegisteredObject&#xA;Implements IRegisteredObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStopListeningRegisteredObject : System::Web::Hosting::IRegisteredObject" />
  <TypeSignature Language="F#" Value="type IStopListeningRegisteredObject = interface&#xA;    interface IRegisteredObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Hosting.IRegisteredObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Überwacht <c>GL_STOP_LISTENING</c>-Benachrichtigungen der Internetinformationsdienste.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die- <xref:System.Web.Hosting.IStopListeningRegisteredObject> Schnittstelle implementieren, indem Sie ein-Objekt an die- <xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A> Methode übergeben. Das bestandene Objekt lauscht auf `GL_STOP_LISTENING` Benachrichtigungen von IIS. Diese Implementierung kann aufgerufen werden, wenn ASP.net eine `GL_STOP_LISTENING` Benachrichtigung von IIS erhält, die signalisiert, dass IIS nicht mehr auf neue Anforderungen für diese Anwendung lauscht. Der Webserver kann zulassen, dass Anforderungen, die gerade ausgeführt werden, bis zum Abschluss ausgeführt werden. Wenn Ihre Anwendung Anforderungen mit langer Ausführungszeit verarbeitet, möchten Sie möglicherweise, dass die Anwendung diese IIS-Benachrichtigungen abhört, um die Anforderung ordnungsgemäß zu durchlaufen. Die- <xref:System.Web.Hosting.IStopListeningRegisteredObject.StopListening%2A> Methode steht im Gegensatz zur- <xref:System.Web.Hosting.IRegisteredObject.Stop%2A> Methode, die das sofortige Herunterfahren der Anwendung signalisiert.  
  
 ]]></format>
    </remarks>
    <threadsafe>Instanzmember dieses Typs sind nicht garantiert Thread sicher. Die- <see cref="M:System.Web.Hosting.IStopListeningRegisteredObject.StopListening" /> Methode kann jederzeit aufgerufen werden, einschließlich der Ausführung eines Aufrufs einer anderen Methode (z. b. <see cref="M:System.Web.Hosting.IRegisteredObject.Stop(System.Boolean)" /> ) für das gleiche Objekt oder während der Ausführung von Aufrufen der Methoden anderer Objekte <see cref="M:System.Web.Hosting.IStopListeningRegisteredObject.StopListening" /> . Da die Ausführung dieser Methoden Multithreaded ist, gibt es ein Intervall, in dem die <see cref="M:System.Web.Hosting.IStopListeningRegisteredObject.StopListening" /> Methode auch nach Abschluss eines Aufrufs von aufgerufen werden kann <see cref="M:System.Web.Hosting.HostingEnvironment.UnregisterObject(System.Web.Hosting.IRegisteredObject)" /> .</threadsafe>
  </Docs>
  <Members>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="public void StopListening ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopListening() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.IStopListeningRegisteredObject.StopListening" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopListening ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopListening();" />
      <MemberSignature Language="F#" Value="abstract member StopListening : unit -&gt; unit" Usage="iStopListeningRegisteredObject.StopListening " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Beendet das Lauschen auf neue Anforderungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.Hosting.IStopListeningRegisteredObject.StopListening%2A> Methode wird nur bei Ausführung im integrierten IIS-Modus unterstützt. Die ASP.NET-Laufzeit garantiert nicht, dass die <xref:System.Web.Hosting.IStopListeningRegisteredObject.StopListening%2A> Methode jemals ausgelöst wird.  
  
 Die <xref:System.Web.Hosting.IStopListeningRegisteredObject.StopListening%2A> Methode darf keine Ausnahmen auslösen. andernfalls ist das Verhalten nicht definiert, und der Prozess wird wahrscheinlich beendet. Außerdem sollte die- <xref:System.Web.Hosting.IStopListeningRegisteredObject.StopListening%2A> Methode die Ausführung nicht blockieren, um das Erstellen von Deadlocks zu vermeiden.  
  
> [!IMPORTANT]
>  In vielen Anwendungen kann die- <xref:System.Web.Hosting.IStopListeningRegisteredObject.StopListening%2A> Methode gleichzeitig mit der-Methode ausgeführt werden <xref:System.AppDomain.Unload%2A> .  Wenn <xref:System.AppDomain> entladen auftritt, <xref:System.Web.Hosting.IStopListeningRegisteredObject.StopListening%2A> wird die Methode möglicherweise erzwungen, bevor die Ausführung beendet wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
