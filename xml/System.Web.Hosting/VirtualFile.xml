<Type Name="VirtualFile" FullName="System.Web.Hosting.VirtualFile">
  <Metadata><Meta Name="ms.openlocfilehash" Value="519605e982c3b7b0b9e07f2d38ec74f36e32602f" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64146641" /></Metadata><TypeSignature Language="C#" Value="public abstract class VirtualFile : System.Web.Hosting.VirtualFileBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VirtualFile extends System.Web.Hosting.VirtualFileBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.VirtualFile" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class VirtualFile&#xA;Inherits VirtualFileBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualFile abstract : System::Web::Hosting::VirtualFileBase" />
  <TypeSignature Language="F#" Value="type VirtualFile = class&#xA;    inherit VirtualFileBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Hosting.VirtualFileBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt ein Dateiobjekt in einem virtuellen Dateiraum oder in einem virtuellen Ressourcenraum dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Hosting.VirtualFile> Klasse ist die Basisklasse für Objekte, die Dateien in ein virtuelles Dateisystem darstellen. In der Regel implementieren Sie eine Ableitung von der <xref:System.Web.Hosting.VirtualFile> Klasse für jeden <xref:System.Web.Hosting.VirtualPathProvider> in Ihrer Webanwendung untergeordnete Objekt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine <xref:System.Web.Hosting.VirtualFile> Implementierung der Klasse, die in gespeicherten Informationen kombiniert eine <xref:System.Data.DataSet> Objekt mit einer Vorlagendatei, die HTML-Daten zurückgeben. Dieses Codebeispiel verwendet die Codebeispiele für die <xref:System.Web.Hosting.VirtualPathProvider> und <xref:System.Web.Hosting.VirtualDirectory> Klassen das Bereitstellen einer virtuelle Ressourcen aus einem zu speichern, Laden in ein <xref:System.Data.DataSet> Objekt. Für die vollständigen Anweisungen für das Kompilieren und Ausführen des Beispiels, finden Sie im Abschnitt "Beispiel" von der <xref:System.Web.Hosting.VirtualPathProvider> Übersicht über die Klasse.  
  
 In diesem Beispiel besteht aus drei Teilen: der <xref:System.Web.Hosting.VirtualFile> klassenimplementierung, einer XML-Datendatei, die zum Auffüllen verwendet die <xref:System.Data.DataSet> Objekt und die Vorlagendatei für die Seite.  
  
 Im erste Codebeispiel wird eine Implementierung der <xref:System.Web.Hosting.VirtualFile> Klasse. Der Konstruktor verwendet eine Methode in einem benutzerdefinierten <xref:System.Web.Hosting.VirtualPathProvider> zurückzugebenden Objekts eine <xref:System.Data.DataSet> Objekt. Es sucht dann das <xref:System.Data.DataSet> Objekt zum Abrufen der Informationen, die dem bereitgestellten virtuellen Dateipfad zugeordnet. In der <xref:System.Web.Hosting.VirtualFile.Open%2A> -Methode, fassen Sie die Informationen aus der <xref:System.Data.DataSet> Objekt mit einer Vorlagendatei und gibt diese Kombination wird als eine <xref:System.IO.Stream> Objekt.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#40](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SampleVirtualFile.cs#40)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#40](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SampleVirtualFile.vb#40)]  
  
 Im zweite Beispiel wird die XML-Datendatei, die zum Auffüllen der <xref:System.Data.DataSet> Objekt zurückgegeben, die vom benutzerdefinierten <xref:System.Web.Hosting.VirtualPathProvider> Objekt. Diese XML-Daten werden verwendet, zu zeigen, wie die <xref:System.Web.Hosting.VirtualPathProvider>, <xref:System.Web.Hosting.VirtualFile>, und <xref:System.Web.Hosting.VirtualDirectory> Klassen zum Abrufen von Daten aus externen Daten und richtet sich nicht um einen Datenspeicher mit Produktionsqualität darzustellen.  
  
```  
<?xml version="1.0" encoding="utf-8" ?>  
<resource type="dir"   
          path="/vrDir"   
          parentPath=""   
          content="">  
  <resource type="file"   
            path="/vrDir/Level1FileA.vrf"  
            parentPath="/vrDir"   
            content="This is the content of file Level1FileA.">  
  </resource>  
  <resource type="file"   
            path="/vrDir/Level1FileB.vrf"  
            parentPath="/vrDir"   
            content="This is the content of file Level1FileB.">  
  </resource>  
  <resource type="dir"   
            path="/vrDir/Level2DirA"   
            parentPath="/vrDir"   
            content="">  
    <resource type="file"   
              path="/vrDir/Level2DirA/Level2FileA.vrf"   
              parentPath="/vrDir/Level2DirA"   
              content="This is the content of file Level2FileA.">  
    </resource>  
    <resource type="file"   
              path="/vrDir/Level2DirA/Level2FileB.vrf"  
              parentPath="/vrDir/Level2DirA"   
              content="This is the content of file Level2FileB.">  
    </resource>  
  </resource>  
  <resource type="dir"   
            path="/vrDir/Level2DirB"   
            parentPath="/vrDir"   
            content="">  
    <resource type="file"   
              path="/vrDir/Level2DirB/Level2FileA.vrf"   
              parentPath="/vrDir/Level2DirB"   
              content="This is the content of file Level2FileA.">  
    </resource>  
    <resource type="file"   
              path="/vrDir/Level2DirB/Level2FileB.vrf"  
              parentPath="/vrDir/Level2DirB"   
              content="This is the content of file Level2FileB.">  
    </resource>  
  </resource>  
</resource>  
```  
  
 Im dritte Beispiel wird die Textdatei, die für die virtuelle Datei als Vorlage verwendet. Platzhalter in der Datei werden durch Text zwischen den Prozentzeichen (%) dargestellt. kennzeichnet, wie z. B. `%file%` und `%content%`. Zeitstempel werden zum Überwachen von Änderungen an der zwischengespeicherten Daten virtuellen verwendet.  
  
```  
<html>  
  <head>  
    <title>File name: %file%</title>  
  </head>  
  
  <body>  
    <h1>%file%</h1>  
    <p>%content%</p>  
    <p>Page timestamp: %pageTimestamp%<br>  
       Data timestamp: %dataTimestamp%<br>  
       Template timestamp: %templateTimestamp%</p>  
  </body>  
</html>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Beim Erben von der <see cref="T:System.Web.Hosting.VirtualFile" /> -Klasse, die Sie überschreiben müssen die <see cref="M:System.Web.Hosting.VirtualFile.Open" /> Methode, um einen schreibgeschützten Stream mit dem Inhalt des virtuellen Ressource zurückzugeben.</para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VirtualFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualFile.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; VirtualFile(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="new System.Web.Hosting.VirtualFile : string -&gt; System.Web.Hosting.VirtualFile" Usage="new System.Web.Hosting.VirtualFile virtualPath" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der virtuelle Pfad zu der durch diese Instanz dargestellten Ressource.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Hosting.VirtualFile" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird eine Implementierung von der <xref:System.Web.Hosting.VirtualFile.%23ctor%2A> Konstruktor, der virtuelle Dateiinformationen aus Ruft eine <xref:System.Data.DataSet> bereitgestellte durch ein benutzerdefiniertes Objekt <xref:System.Web.Hosting.VirtualPathProvider> Objekt. Für den vollständigen Code zum Ausführen des Beispiels erforderlich sind, finden Sie im Abschnitt "Beispiel" von der <xref:System.Web.Hosting.VirtualFile> Übersicht über die Klasse.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#41](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SampleVirtualFile.cs#41)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#41](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SampleVirtualFile.vb#41)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirectory">
      <MemberSignature Language="C#" Value="public override bool IsDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualFile.IsDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDirectory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDirectory { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirectory : bool" Usage="System.Web.Hosting.VirtualFile.IsDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der anzeigt, dass dies eine virtuelle Ressource ist, die als Datei behandelt werden soll.</summary>
        <value>Immer <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public abstract System.IO.Stream Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualFile.Open" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Open () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::IO::Stream ^ Open();" />
      <MemberSignature Language="F#" Value="abstract member Open : unit -&gt; System.IO.Stream" Usage="virtualFile.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse einen schreibgeschützten Stream zur virtuellen Ressource zurück.</summary>
        <returns>Ein schreibgeschützter Stream zur virtuellen Datei.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Hosting.VirtualFile.Open%2A> Methode gibt einen Stream mit den Daten, die als eine Datei mit behandelt die <xref:System.Web.Hosting.VirtualPathProvider> Klasse. Der Stream ist schreibgeschützt und kann gesucht werden (die <xref:System.IO.Stream.CanSeek%2A> Eigenschaft ist "true").  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Implementierung der <xref:System.Web.Hosting.VirtualFile.Open%2A> Methode, die virtuelle-dateispezifischer Informationen mit einer Vorlagendatei kombiniert und dann gibt die Kombination aus. Die Vorlagendatei wird zwischengespeichert, um den Aufwand für das Dateisystem zum Abrufen der Vorlagendatei mehrmals gelesen zu reduzieren. Für den vollständigen Code zum Ausführen des Beispiels erforderlich sind, finden Sie im Abschnitt "Beispiel" von der <xref:System.Web.Hosting.VirtualFile> Übersicht über die Klasse.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#42](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SampleVirtualFile.cs#42)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#42](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SampleVirtualFile.vb#42)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>In abgeleiteten Klassen der <see cref="M:System.Web.Hosting.VirtualFile.Open" /> Methode muss einen durchsuchbaren Datenstrom zurückgeben. Wenn die Methode gibt einen Datenstrom zurück, die keine Suchvorgänge unterstützt eine <see cref="T:System.NotSupportedException" /> wird ausgelöst, wenn der Stream, um übergeben wird der <see cref="T:System.Web.HttpResponse" /> Objekt, das die Daten geschrieben. Die Ausnahme tritt auf, weil es sich bei die Antwort versucht, lesen die <see cref="P:System.IO.Stream.Length" /> -Eigenschaft, und für einen Datenstrom, der nicht gesucht werden kann, versucht, auf die Eigenschaft zuzugreifen, löst eine Ausnahme. Weitere Informationen finden Sie in den Ausführungen zur <see cref="P:System.IO.Stream.CanSeek" />-Eigenschaft.</para></block>
      </Docs>
    </Member>
  </Members>
</Type>