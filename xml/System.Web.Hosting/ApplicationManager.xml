<Type Name="ApplicationManager" FullName="System.Web.Hosting.ApplicationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3fa9dd2c9f13ca0685de293d35a22629355589b7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ApplicationManager : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ApplicationManager extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.ApplicationManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ApplicationManager&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationManager sealed : MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="abc49-101">Verwaltet ASP.NET-Anwendungsdomänen für eine Anwendung, die ASP.NET hostet.</span>
      <span class="sxs-lookup">
        <span data-stu-id="abc49-101">Manages ASP.NET application domains for an ASP.NET hosting application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abc49-102">Die <xref:System.Web.Hosting.ApplicationManager> -Objekt ermöglicht die Verwaltung der Lebensdauer von Objekten in der hostumgebung für eine ASP.NET-Anwendung.</span><span class="sxs-lookup"><span data-stu-id="abc49-102">The <xref:System.Web.Hosting.ApplicationManager> object provides lifetime management of objects in the hosting environment for an ASP.NET application.</span></span> <span data-ttu-id="abc49-103">Manager ist dafür verantwortlich:</span><span class="sxs-lookup"><span data-stu-id="abc49-103">It is responsible for:</span></span>  
  
-   <span data-ttu-id="abc49-104">Aktivieren und Initialisieren von ASP.NET-Anwendungen.</span><span class="sxs-lookup"><span data-stu-id="abc49-104">Activating and initializing ASP.NET applications.</span></span>  
  
-   <span data-ttu-id="abc49-105">Verwalten der Lebensdauer der Anwendung und die Lebensdauer der Objekte registriert in der Anwendung sind.</span><span class="sxs-lookup"><span data-stu-id="abc49-105">Managing the application lifetime and the lifetime of objects registered in the application.</span></span>  
  
-   <span data-ttu-id="abc49-106">Verfügbarmachen von Objekten, die von der hostumgebung zum Verarbeiten von ASP.NET-Anforderungen-Anwendung verwendet.</span><span class="sxs-lookup"><span data-stu-id="abc49-106">Exposing objects used by the hosting environment to process ASP.NET application requests.</span></span>  
  
-   <span data-ttu-id="abc49-107">Bietet eine Liste der Anwendungen, die in den Hostprozess eines beliebigen Moments.</span><span class="sxs-lookup"><span data-stu-id="abc49-107">Providing a list of applications running in the hosting process at any given moment.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="abc49-108">Fährt alle Anwendungsdomänen herunter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-108">Shuts down all application domains.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abc49-109">Wenn ein Aufruf von der <xref:System.Web.Hosting.ApplicationManager.Close%2A> -Methode reduziert den Verweiszähler der Anwendungen, die mit der Anwendungs-Manager auf 0, die <xref:System.Web.Hosting.ApplicationManager.Close%2A> Methodenaufrufe der <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="abc49-109">If a call to the <xref:System.Web.Hosting.ApplicationManager.Close%2A> method reduces the reference count of applications using the application manager to 0, the <xref:System.Web.Hosting.ApplicationManager.Close%2A> method calls the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="abc49-110">Erstellt ein Objekt für die angegebene Anwendungsdomäne und den angegebenen Objekttyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-110">Creates an object for the specified application domain and object type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (System.Web.Hosting.IApplicationHost appHost, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(class System.Web.Hosting.IApplicationHost appHost, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.Web.Hosting.IApplicationHost,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::Web::Hosting::IApplicationHost ^ appHost, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appHost" Type="System.Web.Hosting.IApplicationHost" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appHost">
          <span data-ttu-id="abc49-111">Ein <see cref="T:System.Web.Hosting.IApplicationHost" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-111">An <see cref="T:System.Web.Hosting.IApplicationHost" /> object.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="abc49-112">Der Typ des zu erstellenden Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-112">The type of the object to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="abc49-113">Erstellt ein Objekt für die angegebene Anwendungsdomäne, basierend auf dem Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-113">Creates an object for the specified application domain, based on type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="abc49-114">Ein neues Objekt des in <paramref name="type" /> angegebenen Typs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-114">A new object of the type specified in <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abc49-115"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> wird in .NET Framework, Version 3.5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="abc49-115"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="abc49-116">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="abc49-116">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="abc49-117">Für die Anwendung ist kein physischer Pfad vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-117">A physical path for the application does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="abc49-118">
            <paramref name="appHost" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-118">
              <paramref name="appHost" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="abc49-119">\- oder –</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-119">\- or -</span>
          </span>
          <span data-ttu-id="abc49-120">
            <paramref name="type" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-120">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (string appId, Type type, string virtualPath, string physicalPath, bool failIfExists);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(string appId, class System.Type type, string virtualPath, string physicalPath, bool failIfExists) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::String ^ appId, Type ^ type, System::String ^ virtualPath, System::String ^ physicalPath, bool failIfExists);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String" />
        <Parameter Name="failIfExists" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="appId">
          <span data-ttu-id="abc49-121">Der eindeutige Bezeichner für die Anwendung, die das Objekt besitzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-121">The unique identifier for the application that owns the object.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="abc49-122">Der Typ des zu erstellenden Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-122">The type of the object to create.</span>
          </span>
        </param>
        <param name="virtualPath">
          <span data-ttu-id="abc49-123">Der virtuelle Pfad zur Anwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-123">The virtual path to the application.</span>
          </span>
        </param>
        <param name="physicalPath">
          <span data-ttu-id="abc49-124">Der physische Pfad zur Anwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-124">The physical path to the application.</span>
          </span>
        </param>
        <param name="failIfExists">
          <span data-ttu-id="abc49-125">
            <see langword="true" />, um eine Ausnahme auszulösen, wenn ein Objekt vom angegebenen Typ derzeit registriert ist, <see langword="false" />, um das vorhandene registrierte Objekt vom angegebenen Typ zurückzugeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-125">
              <see langword="true" /> to throw an exception if an object of the specified type is currently registered; <see langword="false" /> to return the existing registered object of the specified type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="abc49-126">Erstellt anhand des Typs oder virtuellen bzw. physischen Pfads ein Objekt für die angegebene Anwendungsdomäne und einen booleschen Wert, der das Verhalten bei Fehlern angibt, wenn bereits ein Objekt vom angegebenen Typ vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-126">Creates an object for the specified application domain based on type, virtual and physical paths, and a Boolean value indicating failure behavior when an object of the specified type already exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="abc49-127">Ein neues Objekt vom angegebenen <paramref name="type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-127">A new object of the specified <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abc49-128">Die <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> Methode zum Erstellen und registrieren Sie Objekte in der Anwendung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="abc49-128">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method is used to create and register objects in the application.</span></span> <span data-ttu-id="abc49-129">Nur ein Objekt der einzelnen Typen kann erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="abc49-129">Only one object of each type can be created.</span></span> <span data-ttu-id="abc49-130">Wenn Sie mehrere Objekte desselben Typs erstellen müssen, müssen Sie eine Objektfactory implementieren.</span><span class="sxs-lookup"><span data-stu-id="abc49-130">If you need to create multiple objects of the same type, you must implement an object factory.</span></span> <span data-ttu-id="abc49-131">Weitere Informationen finden Sie im Codebeispiel in diesem Thema.</span><span class="sxs-lookup"><span data-stu-id="abc49-131">For more information, see the code example in this topic.</span></span>  
  
 <span data-ttu-id="abc49-132">Jede Anwendung, die durch einen eindeutigen Bezeichner identifiziert, die in einer eigenen Anwendungsdomäne ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="abc49-132">Each application, identified by a unique application identifier, runs in its own application domain.</span></span> <span data-ttu-id="abc49-133">Die <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> -Methode erstellt ein Objekt des angegebenen Typs in der die Anwendung in der Anwendungsdomäne der `appID` Parameter.</span><span class="sxs-lookup"><span data-stu-id="abc49-133">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method creates an object of the specified type in the application domain of the application specified in the `appID` parameter.</span></span> <span data-ttu-id="abc49-134">Wenn eine Anwendungsdomäne für die angegebene Anwendung nicht vorhanden ist, wird einer erstellt, bevor das Objekt erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="abc49-134">If an application domain does not exist for the specified application, one is created before the object is created.</span></span>  
  
 <span data-ttu-id="abc49-135">Die `failIfExists` Parameter steuert das Verhalten von der <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> -Methode auf, wenn ein Objekt des angegebenen Typs in der Anwendung ist bereits vorhanden.</span><span class="sxs-lookup"><span data-stu-id="abc49-135">The `failIfExists` parameter controls the behavior of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method when an object of the specified type already exists in the application.</span></span> <span data-ttu-id="abc49-136">Wenn `failIfExists` ist `true`, <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> -Methode löst eine <xref:System.InvalidOperationException> Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="abc49-136">When `failIfExists` is `true`, the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method throws an <xref:System.InvalidOperationException> exception.</span></span>  
  
 <span data-ttu-id="abc49-137">Wenn `failIfExists` ist `false`, die <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> Methode gibt das vorhandene registrierte Objekt des angegebenen Typs zurück.</span><span class="sxs-lookup"><span data-stu-id="abc49-137">When `failIfExists` is `false`, the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method returns the existing registered object of the specified type.</span></span>  
  
 <span data-ttu-id="abc49-138">Die <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> Methode ruft die Überladung, die einen zusätzlichen `throwOnError` Parameter mit `throwOnError` festgelegt `false`.</span><span class="sxs-lookup"><span data-stu-id="abc49-138">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method calls the overload that takes an additional `throwOnError` parameter with `throwOnError` set to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abc49-139">Im folgenden Codebeispiel wird eine Implementierung der Objektfactory Entwurfsmusters für registrierte Objekte.</span><span class="sxs-lookup"><span data-stu-id="abc49-139">The following code example is an implementation of the object-factory design pattern for registered objects.</span></span> <span data-ttu-id="abc49-140">Das Diensthostfactory-Muster ermöglicht es Ihnen, mehrere Instanzen eines Objekts zu registrieren.</span><span class="sxs-lookup"><span data-stu-id="abc49-140">Using the factory pattern enables you to register multiple instances of an object.</span></span> <span data-ttu-id="abc49-141">Das Beispiel enthält zwei Objekte: `SampleComponent`, also das Objekt die Anwendung mehrere Instanzen verwenden und `SampleComponentFactory`, verwaltet eine Liste der `SampleComponent` Instanzen.</span><span class="sxs-lookup"><span data-stu-id="abc49-141">The example contains two objects: `SampleComponent`, which is the object the application will use multiple instances of, and `SampleComponentFactory`, which manages a list of `SampleComponent` instances.</span></span>  
  
 [!code-csharp[System.Web.Hosting.ApplicationManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/CS/appManagercs.aspx.cs#1)]
 [!code-vb[System.Web.Hosting.ApplicationManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/VB/appManagervb.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="abc49-142">
            <paramref name="physicalPath" /> ist gleich <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-142">
              <paramref name="physicalPath" /> is <see langword="null" /></span>
          </span>
          <span data-ttu-id="abc49-143">\- oder –</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-143">\- or -</span>
          </span>
          <span data-ttu-id="abc49-144">
            <paramref name="physicalPath" /> ist kein gültiger Anwendungspfad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-144">
              <paramref name="physicalPath" /> is not a valid application path.</span>
          </span>
          <span data-ttu-id="abc49-145">\- oder –</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-145">\- or -</span>
          </span>
          <span data-ttu-id="abc49-146">Die <see cref="T:System.Web.Hosting.IRegisteredObject" />-Schnittstelle wird von <paramref name="type" /> nicht implementiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-146">
              <paramref name="type" /> does not implement the <see cref="T:System.Web.Hosting.IRegisteredObject" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="abc49-147">
            <paramref name="appID" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-147">
              <paramref name="appID" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="abc49-148">\- oder –</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-148">\- or -</span>
          </span>
          <span data-ttu-id="abc49-149">
            <paramref name="type" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-149">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="abc49-150">
            <paramref name="failIfExists" /> ist <see langword="true" />, und ein Objekt vom angegebenen Typ ist bereits registriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-150">
              <paramref name="failIfExists" /> is <see langword="true" /> and an object of the specified type is already registered.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (string appId, Type type, string virtualPath, string physicalPath, bool failIfExists, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(string appId, class System.Type type, string virtualPath, string physicalPath, bool failIfExists, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::String ^ appId, Type ^ type, System::String ^ virtualPath, System::String ^ physicalPath, bool failIfExists, bool throwOnError);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String" />
        <Parameter Name="failIfExists" Type="System.Boolean" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="appId">
          <span data-ttu-id="abc49-151">Der eindeutige Bezeichner für die Anwendung, die das Objekt besitzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-151">The unique identifier for the application that owns the object.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="abc49-152">Der Typ des zu erstellenden Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-152">The type of the object to create.</span>
          </span>
        </param>
        <param name="virtualPath">
          <span data-ttu-id="abc49-153">Der virtuelle Pfad zur Anwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-153">The virtual path to the application.</span>
          </span>
        </param>
        <param name="physicalPath">
          <span data-ttu-id="abc49-154">Der physische Pfad zur Anwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-154">The physical path to the application.</span>
          </span>
        </param>
        <param name="failIfExists">
          <span data-ttu-id="abc49-155">
            <see langword="true" />, um eine Ausnahme auszulösen, wenn ein Objekt vom angegebenen Typ derzeit registriert ist, <see langword="false" />, um das vorhandene registrierte Objekt vom angegebenen Typ zurückzugeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-155">
              <see langword="true" /> to throw an exception if an object of the specified type is currently registered; <see langword="false" /> to return the existing registered object of the specified type.</span>
          </span>
        </param>
        <param name="throwOnError">
          <span data-ttu-id="abc49-156">
            <see langword="true" />, um bei Hostinitialisierungsfehlern Ausnahmen auszulösen, <see langword="false" />, um keine Ausnahmen bei Hostinitialisierungsfehlern auszulösen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-156">
              <see langword="true" /> to throw exceptions for hosting initialization errors; <see langword="false" /> to not throw hosting initialization exceptions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="abc49-157">Erstellt anhand des Typs oder virtuellen bzw. physischen Pfads ein Objekt für die angegebene Anwendungsdomäne, einen booleschen Wert, der das Verhalten bei Fehlern angibt, wenn bereits ein Objekt vom angegebenen Typ vorhanden ist, sowie einen booleschen Wert, der angibt, ob bei Hostinitialisierungsfehlern Ausnahmen ausgelöst werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-157">Creates an object for the specified application domain based on type, virtual and physical paths, a Boolean value indicating failure behavior when an object of the specified type already exists, and a Boolean value indicating whether hosting initialization error exceptions are thrown.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="abc49-158">Ein neues Objekt vom angegebenen <paramref name="type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-158">A new object of the specified <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abc49-159">Diese Überladung von der <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> Methode stellt der `throwOnError` -Parameter, der Sie steuern kann, ob hosting Ausnahmen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="abc49-159">This overload of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method provides the `throwOnError` parameter, which allows you to control whether hosting initialization exceptions are thrown.</span></span> <span data-ttu-id="abc49-160">Die Überladung von der <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> -Methode, die keine bietet `throwOnError` , ruft diese Überladung mit den Parametersatz hinzu `false`.</span><span class="sxs-lookup"><span data-stu-id="abc49-160">The overload of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method that does not provide `throwOnError` calls this overload with the parameter set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="abc49-161">
            <paramref name="physicalPath" /> ist gleich <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-161">
              <paramref name="physicalPath" /> is <see langword="null" /></span>
          </span>
          <span data-ttu-id="abc49-162">\- oder –</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-162">\- or -</span>
          </span>
          <span data-ttu-id="abc49-163">
            <paramref name="physicalPath" /> ist kein gültiger Anwendungspfad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-163">
              <paramref name="physicalPath" /> is not a valid application path.</span>
          </span>
          <span data-ttu-id="abc49-164">\- oder –</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-164">\- or -</span>
          </span>
          <span data-ttu-id="abc49-165">Die <see cref="T:System.Web.Hosting.IRegisteredObject" />-Schnittstelle wird von <paramref name="type" /> nicht implementiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-165">
              <paramref name="type" /> does not implement the <see cref="T:System.Web.Hosting.IRegisteredObject" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="abc49-166">
            <paramref name="appID" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-166">
              <paramref name="appID" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="abc49-167">\- oder –</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-167">\- or -</span>
          </span>
          <span data-ttu-id="abc49-168">
            <paramref name="type" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-168">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="abc49-169">
            <paramref name="failIfExists" /> ist <see langword="true" />, und ein Objekt vom angegebenen Typ ist bereits registriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-169">
              <paramref name="failIfExists" /> is <see langword="true" /> and an object of the specified type is already registered.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAppDomain">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="abc49-170">Ruft die Anwendungsdomäne einer angegebenen Anwendung ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-170">Gets the application domain of a specified application.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAppDomain">
      <MemberSignature Language="C#" Value="public AppDomain GetAppDomain (string appId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.AppDomain GetAppDomain(string appId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppDomain (appId As String) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomain ^ GetAppDomain(System::String ^ appId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appId">
          <span data-ttu-id="abc49-171">Der eindeutige Bezeichner der Anwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-171">The unique identifier for the application.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="abc49-172">Ruft die Anwendungsdomäne der angegebenen Anwendung ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-172">Gets the application domain of the specified application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="abc49-173">Die Anwendungsdomäne der Anwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-173">The application domain of the application.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppDomain">
      <MemberSignature Language="C#" Value="public AppDomain GetAppDomain (System.Web.Hosting.IApplicationHost appHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.AppDomain GetAppDomain(class System.Web.Hosting.IApplicationHost appHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.Web.Hosting.IApplicationHost)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppDomain (appHost As IApplicationHost) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomain ^ GetAppDomain(System::Web::Hosting::IApplicationHost ^ appHost);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appHost" Type="System.Web.Hosting.IApplicationHost" />
      </Parameters>
      <Docs>
        <param name="appHost">
          <span data-ttu-id="abc49-174">Der Host, für den die Anwendungsdomäne abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-174">The host to get the application domain for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="abc49-175">Ruft die Anwendungsdomäne einer Anwendung mithilfe des angegebenen Hosts ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-175">Gets the application domain of an application using the specified host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="abc49-176">Die Anwendungsdomäne der Anwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-176">The application domain of the application.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationManager">
      <MemberSignature Language="C#" Value="public static System.Web.Hosting.ApplicationManager GetApplicationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Hosting.ApplicationManager GetApplicationManager() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetApplicationManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetApplicationManager () As ApplicationManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Hosting::ApplicationManager ^ GetApplicationManager();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.ApplicationManager</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="abc49-177">Gibt die einzelne Instanz des <see cref="T:System.Web.Hosting.ApplicationManager" />-Objekts zurück, die diesem ASP.NET-Hostprozess zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-177">Returns the single instance of the <see cref="T:System.Web.Hosting.ApplicationManager" /> object associated with this ASP.NET host process.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="abc49-178">Die einzelne Instanz des <see cref="T:System.Web.Hosting.ApplicationManager" />-Objekts, die dem ASP.NET-Hostprozess zugeordnet ist, der derzeit ausgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-178">The single instance of the <see cref="T:System.Web.Hosting.ApplicationManager" /> object associated with the ASP.NET host process that is running.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abc49-179">Nur eine Instanz der <xref:System.Web.Hosting.ApplicationManager> Objekt wird von einem ASP.NET-Hostprozess in der Standardanwendungsdomäne erstellt.</span><span class="sxs-lookup"><span data-stu-id="abc49-179">Only one instance of the <xref:System.Web.Hosting.ApplicationManager> object is created by an ASP.NET host process in the default application domain.</span></span> <span data-ttu-id="abc49-180">Wenn eine Instanz von der <xref:System.Web.Hosting.ApplicationManager> Klasse ist nicht verfügbar, die <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> Methode erstellt zunächst eine Instanz von der <xref:System.Web.Hosting.ApplicationManager> Klasse, und klicken Sie dann die neu erstellte Objekt zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="abc49-180">If an instance of the <xref:System.Web.Hosting.ApplicationManager> class is not available, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method first creates an instance of the <xref:System.Web.Hosting.ApplicationManager> class and then returns the newly created object.</span></span> <span data-ttu-id="abc49-181">Wenn eine Instanz von der <xref:System.Web.Hosting.ApplicationManager> Klasse zuvor erstellt wurde, die <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> -Methode das vorhandene Objekt zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="abc49-181">If an instance of the <xref:System.Web.Hosting.ApplicationManager> class was previously created, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method returns the existing object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abc49-182">Im folgenden Codebeispiel wird mit der <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> Methode zum Abrufen der <xref:System.Web.Hosting.ApplicationManager> Instanz für eine Webanwendung.</span><span class="sxs-lookup"><span data-stu-id="abc49-182">The following code example uses the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method to retrieve the <xref:System.Web.Hosting.ApplicationManager> instance for a Web application.</span></span>  
  
 [!code-aspx-csharp[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/CS/applicationInfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/VB/applicationInfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject GetObject (string appId, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject GetObject(string appId, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetObject(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ GetObject(System::String ^ appId, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appId">
          <span data-ttu-id="abc49-183">Der eindeutige Bezeichner für die Anwendung, die das Objekt besitzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-183">The unique identifier for the application that owns the object.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="abc49-184">Der Typ des zurückzugebenden Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-184">The type of the object to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="abc49-185">Gibt das registrierte Objekt des angegebenen Typs aus der angegebenen Anwendung zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-185">Returns the registered object of the specified type from the specified application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="abc49-186">Das registrierte Objekt vom angegebenen Typ oder <see langword="null" />, wenn der Typ nicht durch einen Aufruf der <see cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" />-Methode registriert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-186">The registered object of the specified type; or <see langword="null" /> if the type has not been registered through a call to the <see cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" /> method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="abc49-187">
            <paramref name="appId" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-187">
              <paramref name="appId" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="abc49-188">– oder –</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-188">—or—</span>
          </span>
          <span data-ttu-id="abc49-189">
            <paramref name="type" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-189">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRunningApplications">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.ApplicationInfo[] GetRunningApplications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.ApplicationInfo[] GetRunningApplications() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetRunningApplications" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRunningApplications () As ApplicationInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Web::Hosting::ApplicationInfo ^&gt; ^ GetRunningApplications();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.ApplicationInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="abc49-190">Gibt eine Momentaufnahme von laufenden Anwendungen zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-190">Returns a snapshot of running applications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="abc49-191">Ein Array von <see cref="T:System.Web.Hosting.ApplicationInfo" />-Objekten, die Informationen zu den Anwendungen enthalten, die von dieser <see cref="T:System.Web.Hosting.ApplicationManager" />-Instanz verwaltet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-191">An array of <see cref="T:System.Web.Hosting.ApplicationInfo" /> objects that contain information about the applications managed by this <see cref="T:System.Web.Hosting.ApplicationManager" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="abc49-192">Im folgenden Codebeispiel wird mit der <xref:System.Web.Hosting.ApplicationManager.GetRunningApplications%2A> -Methode zum Anzeigen von Informationen über die von verwalteten Anwendungen eine <xref:System.Web.Hosting.ApplicationManager> Instanz.</span><span class="sxs-lookup"><span data-stu-id="abc49-192">The following code example uses the <xref:System.Web.Hosting.ApplicationManager.GetRunningApplications%2A> method to display information about the applications managed by an <xref:System.Web.Hosting.ApplicationManager> instance.</span></span>  
  
 [!code-aspx-csharp[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/CS/applicationInfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/VB/applicationInfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="abc49-193">Führt zu einer unendlichen Lebensdauer der Anwendungsdomäne, indem das Erstellen eines Lease verhindert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-193">Gives the application domain an infinite lifetime by preventing a lease from being created.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="abc49-194">Immer <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-194">Always <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abc49-195">Diese Methode überschreibt die <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> Methode in der Basisklasse.</span><span class="sxs-lookup"><span data-stu-id="abc49-195">This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class.</span></span> <span data-ttu-id="abc49-196">Wird immer zurückgegeben `null` und verhindert dadurch, dass eine Lease erstellt werden, die die Anwendungsdomäne Lebensdauer einschränkt.</span><span class="sxs-lookup"><span data-stu-id="abc49-196">It always returns `null` and thereby prevents a lease from being created that would limit the application domain's lifetime.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIdle">
      <MemberSignature Language="C#" Value="public bool IsIdle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsIdle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.IsIdle" />
      <MemberSignature Language="VB.NET" Value="Public Function IsIdle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsIdle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="abc49-197">Gibt einen Wert zurück, der angibt, ob sich alle vom Prozess gehosteten Anwendungen im Leerlauf befinden und keine Anforderungen verarbeiten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-197">Returns a value indicating whether all applications hosted by the process are idle and not processing requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="abc49-198">
            <see langword="true" />, wenn sich alle Anwendungen im Prozess im Leerlauf befinden, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-198">
              <see langword="true" /> if all applications in the process are idle; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abc49-199">Die <xref:System.Web.Hosting.ApplicationManager.IsIdle%2A> -Methode zurückkehrt `true` , wenn alle vom Prozess gehostete Anwendungen im Leerlauf befinden.</span><span class="sxs-lookup"><span data-stu-id="abc49-199">The <xref:System.Web.Hosting.ApplicationManager.IsIdle%2A> method returns `true` if all applications hosted by the process are idle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="abc49-200">Führt eine threadsichere Inkrementierung des Benutzerverweiszählers für die Anwendungs-Managerinstanz durch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-200">Makes a thread-safe increment to the user reference count of the application manager instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownAll">
      <MemberSignature Language="C#" Value="public void ShutdownAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShutdownAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.ShutdownAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShutdownAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShutdownAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="abc49-201">Entlädt alle Anwendungsressourcen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-201">Unloads all application resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abc49-202">Aufrufen der <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> Methode entspricht dem Aufrufen der <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> Methode in allen Anwendungsdomänen, die von diesem verwaltet <xref:System.Web.Hosting.ApplicationManager> -Instanz; allerdings die <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> Methode kann von außerhalb der verwalteten Anwendungsdomänen aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="abc49-202">Calling the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method is equivalent to calling the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> method in all application domains managed by this <xref:System.Web.Hosting.ApplicationManager> instance; however, the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method can be called from outside the managed application domains.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownApplication">
      <MemberSignature Language="C#" Value="public void ShutdownApplication (string appId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShutdownApplication(string appId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.ShutdownApplication(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShutdownApplication (appId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShutdownApplication(System::String ^ appId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appId">
          <span data-ttu-id="abc49-203">Der eindeutige Bezeichner der zu entladenden Anwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-203">The unique identifier of the application to unload.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="abc49-204">Entlädt die angegebene Anwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-204">Unloads the specified application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abc49-205">Aufrufen der <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> Methode entspricht dem Aufrufen der <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> Methode für eine bestimmte Anwendungsdomäne; allerdings die <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> Methode kann von außerhalb der verwalteten Anwendungsdomänen aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="abc49-205">Calling the <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> method is equivalent to calling the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> method for a specific application domain; however, the <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> method can be called from outside managed application domains.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="abc49-206">
            <paramref name="appId" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-206">
              <paramref name="appId" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StopObject">
      <MemberSignature Language="C#" Value="public void StopObject (string appId, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopObject(string appId, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.StopObject(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopObject(System::String ^ appId, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appId">
          <span data-ttu-id="abc49-207">Der eindeutige Bezeichner für die Anwendung, die das Objekt besitzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-207">The unique identifier for the application that owns the object.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="abc49-208">Der Typ des zu entladenden Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-208">The type of the object to unload.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="abc49-209">Entfernt das angegebene Objekt aus der Liste von registrierten Objekten in einer Anwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-209">Removes the specified object from the list of registered objects in an application.</span>
          </span>
          <span data-ttu-id="abc49-210">Wenn das zu entfernende Objekt das letzte Objekt in der Liste der in einer Anwendung registrierten Objekte ist, wird die Anwendung entladen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-210">If the object to be removed is the last remaining object in the list of registered objects in an application, the application is unloaded.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="abc49-211">
            <paramref name="appId" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-211">
              <paramref name="appId" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="abc49-212">\- oder –</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-212">\- or -</span>
          </span>
          <span data-ttu-id="abc49-213">
            <paramref name="type" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abc49-213">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>