<Type Name="IRegisteredObject" FullName="System.Web.Hosting.IRegisteredObject">
  <TypeSignature Language="C#" Value="public interface IRegisteredObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRegisteredObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.IRegisteredObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRegisteredObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRegisteredObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="af25a-101">Definiert Methoden für Objekte, die von der Hostumgebung verwaltet werden.</span><span class="sxs-lookup"><span data-stu-id="af25a-101">Defines methods for objects that are managed by the hosting environment.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af25a-102">Objekten implementieren muss, die <xref:System.Web.Hosting.IRegisteredObject> Schnittstelle, um mit der hosting-Umgebung zu registrieren und ihre Lebensdauer von der hostumgebung verwaltet werden.</span><span class="sxs-lookup"><span data-stu-id="af25a-102">Objects must implement the <xref:System.Web.Hosting.IRegisteredObject> interface in order to register with the hosting environment and have their lifetime managed by the hosting environment.</span></span>  
  
 <span data-ttu-id="af25a-103">Erstellen Sie eine Instanz eines registrierten-Objekts, durch Aufrufen der <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A?displayProperty=nameWithType> -Methode für den Anwendungs-Manager.</span><span class="sxs-lookup"><span data-stu-id="af25a-103">You can create an instance of a registered object by calling the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A?displayProperty=nameWithType> method on the application manager.</span></span> <span data-ttu-id="af25a-104">Die Anwendungs-Manager gibt das neu erstellte Objekt an den Aufrufer, der dann eine typspezifische-Methode für das Objekt aufrufen können.</span><span class="sxs-lookup"><span data-stu-id="af25a-104">The application manager returns the newly created object to the caller, which can then call a type-specific method on the object.</span></span> <span data-ttu-id="af25a-105">Während des Starts der registrierte-Objekt aufrufen sollten die <xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A?displayProperty=nameWithType> Methode, um die Registrierung des Objekts abzuschließen.</span><span class="sxs-lookup"><span data-stu-id="af25a-105">During startup, the registered object should call the <xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A?displayProperty=nameWithType> method to complete registration of the object.</span></span>  
  
 <span data-ttu-id="af25a-106">Wenn die Anwendungs-Manager einen registrierten-Objekt beendet werden muss, er ruft die <xref:System.Web.Hosting.IRegisteredObject.Stop%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="af25a-106">When the application manager needs to stop a registered object, it will call the <xref:System.Web.Hosting.IRegisteredObject.Stop%2A> method.</span></span>  
  
 <span data-ttu-id="af25a-107">Anwendungen können nur eine Instanz eines registrierten Typs verfügen.</span><span class="sxs-lookup"><span data-stu-id="af25a-107">Applications can have only one instance of a registered type.</span></span> <span data-ttu-id="af25a-108">Um mehrere Instanzen eines registrierten Typs zu erstellen, verwenden Sie die Diensthostfactory-Muster, um ein Objekt-Manager zu erstellen, die mit der Anwendung registriert ist, und klicken Sie dann verwaltet mehrere Instanzen.</span><span class="sxs-lookup"><span data-stu-id="af25a-108">To create multiple instances of a registered type, use the factory pattern to create an object manager that is registered with the application and then manages the multiple instances.</span></span> <span data-ttu-id="af25a-109">Ein Beispiel für ein Objekt das Diensthostfactory-Muster implementieren, finden Sie im Beispiel für die <xref:System.Web.Hosting.ApplicationManager> Klasse.</span><span class="sxs-lookup"><span data-stu-id="af25a-109">For an example of an object implementing the factory pattern, see the example for the <xref:System.Web.Hosting.ApplicationManager> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop (bool immediate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Stop(bool immediate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.IRegisteredObject.Stop(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop (immediate As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop(bool immediate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="immediate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="immediate">
          <span data-ttu-id="af25a-110"><see langword="true" />, um anzugeben, dass für ein registriertes Objekt vor der Rückgabe die Registrierung in der Hostumgebung aufgehoben werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="af25a-110"><see langword="true" /> to indicate the registered object should unregister from the hosting environment before returning; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="af25a-111">Fordert für ein registriertes Objekt an, dass dessen Registrierung aufgehoben werden soll.</span><span class="sxs-lookup"><span data-stu-id="af25a-111">Requests a registered object to unregister.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af25a-112">Die Anwendungs-Manager Ruft die <xref:System.Web.Hosting.IRegisteredObject.Stop%2A> Methode, um ein registriertes Objekt beim Aufheben der Registrierung zu bitten.</span><span class="sxs-lookup"><span data-stu-id="af25a-112">The application manager will call the <xref:System.Web.Hosting.IRegisteredObject.Stop%2A> method to ask a registered object to unregister.</span></span> <span data-ttu-id="af25a-113">Bei der Verarbeitung der <xref:System.Web.Hosting.IRegisteredObject.Stop%2A> -Methode, mit dem registrierten muss aufgerufen die <xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="af25a-113">During processing of the <xref:System.Web.Hosting.IRegisteredObject.Stop%2A> method, the registered object must call the <xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="af25a-114">Die <xref:System.Web.Hosting.IRegisteredObject.Stop%2A> -Methode zuerst aufgerufen wird, und die `immediate` Parametersatz auf `false`.</span><span class="sxs-lookup"><span data-stu-id="af25a-114">The <xref:System.Web.Hosting.IRegisteredObject.Stop%2A> method is first called with the `immediate` parameter set to `false`.</span></span> <span data-ttu-id="af25a-115">Das Objekt kann entweder vollständige Verarbeitung rufen die <xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A> -Methode, und klicken Sie dann zurück, oder es sofort zurückgegeben und Verarbeitung asynchron vor dem Aufruf abschließen kann die <xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="af25a-115">The object can either complete processing, call the <xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A> method, and then return or it can return immediately and complete processing asynchronously before calling the <xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A> method.</span></span>  
  
 <span data-ttu-id="af25a-116">Sollte das registrierte Objekt nicht Verarbeitungsvorgänge abgeschlossen werden, bevor die Anwendungs-Manager-Timeoutzeitraum abgelaufen ist, die <xref:System.Web.Hosting.IRegisteredObject.Stop%2A> -Methode erneut aufgerufen wird, und die `immediate` Parametersatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="af25a-116">If the registered object does not complete processing before the application manager's time-out period expires, the <xref:System.Web.Hosting.IRegisteredObject.Stop%2A> method is called again with the `immediate` parameter set to `true`.</span></span> <span data-ttu-id="af25a-117">Wenn die `immediate` Parameter ist `true`, registrierte Objekt aufrufen, muss die <xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A> Methode vor der Rückgabe hingegen wird ihre Registrierung durch die Anwendungs-Manager entfernt.</span><span class="sxs-lookup"><span data-stu-id="af25a-117">When the `immediate` parameter is `true`, the registered object must call the <xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A> method before returning; otherwise, its registration will be removed by the application manager.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>