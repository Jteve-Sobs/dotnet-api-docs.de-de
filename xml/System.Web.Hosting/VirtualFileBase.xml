<Type Name="VirtualFileBase" FullName="System.Web.Hosting.VirtualFileBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="44bcaae1402ca2e6f83b025b597ba4e5a8a0425c" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39734850" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class VirtualFileBase : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VirtualFileBase extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.VirtualFileBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class VirtualFileBase&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualFileBase abstract : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type VirtualFileBase = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt die Kernimplementierung für das <see cref="T:System.Web.Hosting.VirtualFile" />-Objekt und das <see cref="T:System.Web.Hosting.VirtualDirectory" />-Objekt bereit. Da es sich um eine abstrakte Klasse handelt, kann sie nicht instanziiert werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Hosting.VirtualFileBase> abstrakte Klasse stellt die allgemeinen Methoden und Eigenschaften gemeinsam die <xref:System.Web.Hosting.VirtualFile> und <xref:System.Web.Hosting.VirtualDirectory> Objekte. Implementierungen dieser Klassen bereitstellen, die ASP.NET-Laufzeit mit Zugriff auf Dateien und Pfade, die für die Kompilierung verwendet wird. Weitere Informationen zur Verwendung von virtuellen Dateien und Pfade finden Sie unter den <xref:System.Web.Hosting.VirtualPathProvider> Klasse.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Beim Erben von der <see cref="T:System.Web.Hosting.VirtualFileBase" /> -Klasse, die Sie überschreiben müssen die <see cref="P:System.Web.Hosting.VirtualFileBase.IsDirectory" /> Eigenschaft, um anzugeben, ob das abgeleitete Objekt ein virtuelles Verzeichnis oder eine virtuelle Datei ist. Bei der Ableitung von entweder die <see cref="T:System.Web.Hosting.VirtualFile" /> oder <see cref="T:System.Web.Hosting.VirtualDirectory" /> -Klasse, die <see cref="P:System.Web.Hosting.VirtualFileBase.IsDirectory" /> -Eigenschaft bereits festgelegt.</para>
    </block>
    <altmember cref="T:System.Web.Hosting.VirtualFile" />
    <altmember cref="T:System.Web.Hosting.VirtualDirectory" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VirtualFileBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualFileBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; VirtualFileBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert die Klasse zur Verwendung durch eine geerbte Klasseninstanz. Dieser Konstruktor kann nur von einer geerbten Klasse aufgerufen werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Auch wenn eine Instanz der nicht direkt erstellt die <xref:System.Web.Hosting.VirtualFileBase> -Klasse, Sie können dieses Konstruktors vom Konstruktor einer erbenden Klasse aufrufen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="T:System.Web.Hosting.VirtualDirectory" />
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualFileBase.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="virtualFileBase.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt zu einer unendlichen Lebensdauer der <see cref="T:System.Web.Hosting.VirtualFileBase" />-Instanz, indem das Erstellen eines Lease verhindert wird.</summary>
        <returns>Immer <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode überschreibt die <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> Methode der Basisklasse. Wird immer zurückgegeben `null` und verhindert dadurch, dass eine Lease erstellt wird, die die Lebensdauer der virtuellen Datei bzw. des Verzeichnisses einschränken würden.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="T:System.Web.Hosting.VirtualDirectory" />
      </Docs>
    </Member>
    <Member MemberName="IsDirectory">
      <MemberSignature Language="C#" Value="public abstract bool IsDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualFileBase.IsDirectory" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDirectory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDirectory { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirectory : bool" Usage="System.Web.Hosting.VirtualFileBase.IsDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob die <see cref="T:System.Web.Hosting.VirtualFileBase" />-Instanz eine virtuelle Datei oder ein virtuelles Verzeichnis darstellt.</summary>
        <value>
          <see langword="true" />, wenn die <see cref="T:System.Web.Hosting.VirtualFileBase" />-Instanz ein virtuelles Verzeichnis ist, andernfalls <see langword="false" />, wenn die <see cref="T:System.Web.Hosting.VirtualFileBase" />-Instanz eine virtuelle Datei ist.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="T:System.Web.Hosting.VirtualDirectory" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualFileBase.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.Hosting.VirtualFileBase.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Anzeigenamen der virtuellen Ressource ab.</summary>
        <value>Der Anzeigename der virtuellen Datei.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Hosting.VirtualFileBase.Name%2A> Eigenschaft ist in der Regel den Dateinamen und die Ressource zugeordnete Erweiterung auch virtuelle Ressourcen mit beliebige Namen verwenden können.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Die <see cref="P:System.Web.Hosting.VirtualFileBase.Name" /> Eigenschaft sollte die richtige Groß-/Kleinschreibung der virtuellen Ressource zurück, für den virtuellen Pfad-Anbieter. Die richtige Groß-/Kleinschreibung kann von der Groß-/Kleinschreibung im ursprünglichen Pfad unterscheiden.</para>
        </block>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="T:System.Web.Hosting.VirtualDirectory" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="public string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.Hosting.VirtualFileBase.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den virtuellen Dateipfad ab.</summary>
        <value>Der Pfad zu der virtuellen Datei.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Hosting.VirtualFileBase.VirtualPath%2A> Eigenschaft gibt den Pfad zur Datei oder des Verzeichnisses, die von diesem Objekt dargestellt.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="T:System.Web.Hosting.VirtualDirectory" />
      </Docs>
    </Member>
  </Members>
</Type>