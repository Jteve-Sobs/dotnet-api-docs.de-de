<Type Name="VirtualPathProvider" FullName="System.Web.Hosting.VirtualPathProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="85f424296a8ebcf6f6843844c34be30835987123" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37606052" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class VirtualPathProvider : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VirtualPathProvider extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.VirtualPathProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class VirtualPathProvider&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualPathProvider abstract : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type VirtualPathProvider = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Reihe von Methoden bereit, mit denen eine Webanwendung Ressourcen aus einem virtuellen Dateisystem abrufen kann.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Hosting.VirtualPathProvider> Klasse bietet eine Reihe von Methoden zum Implementieren eines virtuellen Dateisystems für eine Webanwendung. In einem virtuellen Dateisystem werden die Dateien und Verzeichnisse von einem Datenspeicher als Dateisystem bereitgestellt, die vom Betriebssystem des Servers verwaltet. Beispielsweise können Sie ein virtuelles Dateisystem, um Inhalt in einer SQL Server-Datenbank zu speichern.  
  
 Sie können eine beliebige Datei, die verarbeitet wird auf Anforderung in ein virtuelles Dateisystem speichern. Dies umfasst Folgendes:  
  
-   ASP.NET-Seiten, Masterseiten, Steuerelemente und andere Objekte.  
  
-   Standard Webseiten mit Erweiterungen wie z. B. htm- und JPG.  
  
-   Jede benutzerdefinierte Erweiterung zugeordnet werden, um eine <xref:System.Web.Compilation.BuildProvider> Instanz.  
  
-   Jeder benannte Design in der `App_Theme` Ordner.  
  
 ASP.NET Application-Ordner oder Dateien, die auf Anwendungsebene Assemblys in ein virtuelles Dateisystem zu generieren, kann nicht gespeichert werden. Dies umfasst Folgendes:  
  
-   Die Datei "Global.asax".  
  
-   Web.config-Dateien.  
  
-   Site Map-Datendateien, die von verwendet die <xref:System.Web.XmlSiteMapProvider>.  
  
-   Verzeichnisse, die Anwendungsassemblys enthalten, oder generieren Anwendungsassemblys: `Bin`, `App_Code`, `App_GlobalResources`, `App_LocalResources`.  
  
-   Der Anwendungsdatenordner `App_Data`.  
  
> [!NOTE]
>  Wenn eine Website für die Bereitstellung vorkompiliert ist, wird Inhalt von bereitgestellten eine <xref:System.Web.Hosting.VirtualPathProvider> Instanz wird nicht kompiliert, und es wird kein <xref:System.Web.Hosting.VirtualPathProvider> Instanzen werden von der vorkompilierten Site verwendet.  
  
## <a name="registering-a-virtualpathprovider"></a>Registrieren eines VirtualPathProvider  
 Eine benutzerdefinierte <xref:System.Web.Hosting.VirtualPathProvider> Instanz mit dem Kompilierungssystem von ASP.NET registriert werden soll, mithilfe der <xref:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider%2A?displayProperty=nameWithType> -Methode auf, bevor alle Seitenanalyse oder die Kompilierung von der Webanwendung ausgeführt wird.  
  
 In der Regel eine <xref:System.Web.Hosting.VirtualPathProvider> Instanz wird registriert, eine `AppInitialize` im definierte Methode der `App_Code` Verzeichnis oder während der `Application_Start` Ereignis in der `Global.asax` Datei. Ein Beispiel für die Registrierung einer <xref:System.Web.Hosting.VirtualPathProvider> -Instanz in ein `AppInitialize` -Methode finden Sie im Beispielabschnitt.  
  
 Können Sie registrieren einen <xref:System.Web.Hosting.VirtualPathProvider> Instanz während der andere Ereignisse, jedoch werden Seiten kompiliert und zwischengespeichert werden, bevor Sie die <xref:System.Web.Hosting.VirtualPathProvider> -Instanz registriert ist nicht ungültig werden, auch wenn die neue <xref:System.Web.Hosting.VirtualPathProvider> Instanz zeigten sich jetzt auf die Quelle für die zuvor kompiliert die Seite.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine <xref:System.Web.Hosting.VirtualPathProvider> klassenimplementierung, erstellt ein virtuelles Dateisystem, die mithilfe der Informationen in, einer <xref:System.Data.DataSet> Objekt. Das Codebeispiel funktioniert mit den folgenden Codebeispielen für die <xref:System.Web.Hosting.VirtualFile> und <xref:System.Web.Hosting.VirtualDirectory> Klassen das Bereitstellen einer virtuelle Ressourcen aus einem zu speichern, Laden in ein <xref:System.Data.DataSet> Objekt.  
  
 In diesem Beispiel besteht aus vier Teilen: der <xref:System.Web.Hosting.VirtualPathProvider> klassenimplementierung, einer XML-Datendatei, die zum Auffüllen verwendet die <xref:System.Data.DataSet> -Objekt, ein `AppStart` -Objekt, enthält ein `AppInitialize` Methode zum Registrieren der <xref:System.Web.Hosting.VirtualPathProvider> Klasse mit der Kompilierung System und eine ASP.NET-Seite, die Links zu den virtuellen Dateien bereitstellt.  
  
 Um diesen Beispielcode in eine Anwendung verwenden zu können, gehen Sie wie folgt vor.  
  
1.  Erstellen Sie eine beispielanwendung auf Ihrem Webserver.  
  
2.  Kopieren Sie den Quellcode für die benutzerdefinierte <xref:System.Web.Hosting.VirtualPathProvider> Objekt (siehe unten) in eine Datei in der Anwendung `App_Code` Verzeichnis.  
  
3.  Kopieren Sie den Quellcode für die benutzerdefinierte <xref:System.Web.Hosting.VirtualDirectory> Objekt (finden Sie im Abschnitt "Beispiel" in der <xref:System.Web.Hosting.VirtualDirectory> Übersichtsthema) in eine Datei in der Anwendung `App_Code` Verzeichnis.  
  
4.  Kopieren Sie den Quellcode für die benutzerdefinierte <xref:System.Web.Hosting.VirtualFile> Objekt (finden Sie im Abschnitt "Beispiel" in der <xref:System.Web.Hosting.VirtualFile> Übersichtsthema) in eine Datei in der Anwendung `App_Code` Verzeichnis.  
  
5.  Kopieren Sie den Quellcode für die `AppStart` Objekt (siehe unten) in eine Datei in der Anwendung `App_Code` Verzeichnis.  
  
6.  Kopieren Sie die XML-Daten (siehe unten) in eine Datei namens `XMLData.xml` in eine Datei in der Anwendung `App_Data` Verzeichnis.  
  
7.  Kopieren der `default.aspx` -Datei (siehe unten) in das Stammverzeichnis der beispielanwendung. Mithilfe eines Webbrowsers zum Öffnen der `default.aspx` Datei, und klicken Sie dann auf die Links auf der Seite, um den Inhalt der virtuellen Dateien anzuzeigen.  
  
 Im erste Beispiel wird eine benutzerdefinierte <xref:System.Web.Hosting.VirtualPathProvider> Klasse. Die <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> und <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> Methoden überschrieben werden, um anzugeben, ob ein angefordertes Verzeichnis im virtuellen Dateisystem vorhanden ist. Die <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> und <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> Methoden werden überschrieben, um benutzerdefinierte zurückgeben <xref:System.Web.Hosting.VirtualDirectory> und <xref:System.Web.Hosting.VirtualFile> Instanzen, die Informationen aus dem virtuellen Dateisystem enthält.  
  
 Die Klasse bietet auch eine `GetVirtualData` Methode fest, mit der <xref:System.Web.Hosting.VirtualDirectory> und <xref:System.Web.Hosting.VirtualFile> Klassen für den Zugriff auf die <xref:System.Data.DataSet> -Objekt, das Daten des virtuellen Dateisystems enthält. In eine produktionsimplementierung würde diese Methode in der Regel in einem Geschäftsobjekt verantwortlich für die Interaktion mit dem Datenspeicher implementiert werden.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#20](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#20)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#20)]  
  
 Im zweite Beispiel wird die XML-Datendatei, die zum Auffüllen der <xref:System.Data.DataSet> Objekt zurückgegeben, die vom benutzerdefinierten <xref:System.Web.Hosting.VirtualPathProvider> Objekt. Diese XML-Daten werden verwendet, zu zeigen, wie die <xref:System.Web.Hosting.VirtualPathProvider>, <xref:System.Web.Hosting.VirtualDirectory>, und <xref:System.Web.Hosting.VirtualFile> -Objekte zum Abrufen von Daten aus externen Daten und richtet sich nicht um einen Datenspeicher mit Produktionsqualität darzustellen.  
  
```  
<?xml version="1.0" encoding="utf-8" ?>  
  <resource type="dir"   
    path="/vrDir"   
    parentPath=""   
    content="">  
    <resource type="file"   
      path="/vrDir/Level1FileA.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileA.">  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level1FileB.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileB.">  
    </resource>  
    <resource type="dir"   
      path="/vrDir/Level2DirA"   
      parentPath="/vrDir"   
      content="">  
    <resource type="file"   
      path="/vrDir/Level2DirA/Level2FileA.vrf"   
      parentPath="/vrDir/Level2DirA"   
      content="This is the content of file Level2FileA.">  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level2DirA/Level2FileB.vrf"  
      parentPath="/vrDir/Level2DirA"   
      content="This is the content of file Level2FileB.">  
    </resource>  
  </resource>  
  <resource type="dir"   
    path="/vrDir/Level2DirB"   
    parentPath="/vrDir"   
    content="">  
    <resource type="file"   
      path="/vrDir/Level2DirB/Level2FileA.vrf"   
      parentPath="/vrDir/Level2DirB"   
      content="This is the content of file Level2FileA.">  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level2DirB/Level2FileB.vrf"  
      parentPath="/vrDir/Level2DirB"   
      content="This is the content of file Level2FileB.">  
    </resource>  
  </resource>  
</resource>  
```  
  
 Im dritten Beispiel wird ein `AppStart` -Objekt, enthält ein `AppInitialize` Methode. Diese Methode wird während der Initialisierung einer ASP.NET-Anwendung zum Ausführen der erforderlichen benutzerdefinierten Initialisierungen aufgerufen. In diesem Fall registriert die benutzerdefinierte <xref:System.Web.Hosting.VirtualPathProvider> Objekt mit dem ASP.NET-Buildsystem.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/AppStart.cs#10)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/AppStart.vb#10)]  
  
 Im letzte Beispiel wird eine ASP.NET-Seite, die Links zu den im virtuellen Dateisystem enthaltenen virtuellen Dateien enthält.  
  
 [!code-aspx-csharp[System.Web.Hosting.VirtualPathProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.VirtualPathProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Beim Erben von <see cref="T:System.Web.Hosting.VirtualPathProvider" />, müssen Sie die folgenden Member überschreiben:- <see cref="M:System.Web.Hosting.VirtualPathProvider.FileExists(System.String)" />   
  
-    <see cref="M:System.Web.Hosting.VirtualPathProvider.GetFile(System.String)" /> Wenn Ihre benutzerdefinierte <see cref="T:System.Web.Hosting.VirtualPathProvider" /> Klasse unterstützt die Verzeichnisse im virtuellen Dateisystem, müssen Sie die folgenden Member überschreiben.  - <see cref="M:System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)" />   
  
-    <see cref="M:System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)" /><block subset="none" type="note"><para> , Ob das virtuelle Dateisystem Designs für die Website enthalten ist (durch das Erstellen einer virtuellen <c>App_Themes</c> Verzeichnis), die benutzerdefinierte <see cref="T:System.Web.Hosting.VirtualPathProvider" /> Klasse muss Verzeichnisse unterstützen.  </para></block>  Eine benutzerdefinierte <see cref="T:System.Web.Hosting.VirtualPathProvider" /> -Klasse verwendet Klassen, die von der <see cref="T:System.Web.Hosting.VirtualFile" /> und <see cref="T:System.Web.Hosting.VirtualDirectory" /> Klassen. Implementieren Sie abgeleitete Klassen von diesen Typen, Datei- und Informationen über das virtuelle Dateisystem bereitzustellen. Ein Beispiel für eine benutzerdefinierte <see cref="T:System.Web.Hosting.VirtualFile" /> -Implementierung finden Sie im Abschnitt "Beispiel" von der <see cref="T:System.Web.Hosting.VirtualFile" /> Übersichtsthema. Ein Beispiel für eine benutzerdefinierte <see cref="T:System.Web.Hosting.VirtualDirectory" /> -Implementierung finden Sie im Abschnitt "Beispiel" von der <see cref="T:System.Web.Hosting.VirtualDirectory" /> Übersichtsthema.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VirtualPathProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; VirtualPathProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert die Klasse zur Verwendung durch eine geerbte Klasseninstanz. Dieser Konstruktor kann nur von einer geerbten Klasse aufgerufen werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Überschreiben der <xref:System.Web.Hosting.VirtualPathProvider.%23ctor%2A> Konstruktor zurückstellen Initialisierungen, die nach dem auftreten, muss die <xref:System.Web.Hosting.VirtualPathProvider> Objekt registriert ist die <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Implementierung der <xref:System.Web.Hosting.VirtualPathProvider.%23ctor%2A> Konstruktor, der eine benutzerdefinierte initialisiert <xref:System.Web.Hosting.VirtualPathProvider> Klasse. Für den vollständigen Code zum Ausführen des Beispiels erforderlich sind, finden Sie im Abschnitt "Beispiel" von der <xref:System.Web.Hosting.VirtualPathProvider> Übersichtsthema.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#25](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#25)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#25](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CombineVirtualPaths">
      <MemberSignature Language="C#" Value="public virtual string CombineVirtualPaths (string basePath, string relativePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CombineVirtualPaths(string basePath, string relativePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CombineVirtualPaths (basePath As String, relativePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CombineVirtualPaths(System::String ^ basePath, System::String ^ relativePath);" />
      <MemberSignature Language="F#" Value="abstract member CombineVirtualPaths : string * string -&gt; string&#xA;override this.CombineVirtualPaths : string * string -&gt; string" Usage="virtualPathProvider.CombineVirtualPaths (basePath, relativePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="basePath" Type="System.String" />
        <Parameter Name="relativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="basePath">Der Basispfad für die Anwendung.</param>
        <param name="relativePath">Der Pfad zur virtuellen Ressource, relativ zum Basispfad.</param>
        <summary>Kombiniert einen Basispfad mit einem relativen Pfad, um einen vollständigen Pfad zu einer virtuellen Ressource zurückzugeben.</summary>
        <returns>Der vollständige Pfad zu einer virtuellen Ressource.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths%2A> Methode zum Untersuchen des Inhalts einen relativen Pfad zu einer virtuellen Ressource, und führen Sie alle Änderungen, die erforderlich sind.  
  
 Die standardmäßige Implementierung kombiniert die `basePath` und `relativePath` Parameter gemäß standard ASP.NET Path-Verarbeitung.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie die standardmäßige Implementierung des überschreiben die <see cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" /> -Methode, Sie sind erforderlich, um eine besondere Syntax mit konvertieren die <paramref name="relativePath" /> Parameter, um einen gültigen Pfad für die virtuellen. Sie sind verantwortlich für die Syntax, die Prüfung der Pfadüberprüfung, und behandeln, fehlerhafte Eingabe als auch Grenzfälle für wohlgeformte Eingabe.  In den meisten Fällen es ist nicht erforderlich sein, die Standardeinstellung überschreiben <see cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" /> Methode. Jedoch wenn Sie den Pfad ändern müssen, es wird empfohlen, dass Sie beschränken Ihre <see cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" /> Implementierung zum Ändern von Token, die spezifisch für Ihren virtuellen Pfad-Anbieter in der <paramref name="relativeUrl" /> -Parameter, und rufen Sie dann die basisimplementierung auszuführenden normal ASP.NET-Path-Verarbeitung</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DirectoryExists">
      <MemberSignature Language="C#" Value="public virtual bool DirectoryExists (string virtualDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DirectoryExists(string virtualDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DirectoryExists (virtualDir As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool DirectoryExists(System::String ^ virtualDir);" />
      <MemberSignature Language="F#" Value="abstract member DirectoryExists : string -&gt; bool&#xA;override this.DirectoryExists : string -&gt; bool" Usage="virtualPathProvider.DirectoryExists virtualDir" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualDir">Der Pfad zum virtuellen Verzeichnis.</param>
        <summary>Ruft einen Wert ab, der angibt, ob ein Verzeichnis im virtuellen Dateisystem vorhanden ist.</summary>
        <returns>
          <see langword="true" />, wenn das Verzeichnis im virtuellen Dateisystem vorhanden ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Überschreiben der <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> Methode, um auf das Kompilierungssystem anzugeben, die die Ressource durch dargestellt `virtualDir` vorhanden ist, im virtuellen Dateisystem bereitgestellt, die von diesem <xref:System.Web.Hosting.VirtualPathProvider> Instanz.  
  
 Wenn Ihre benutzerdefinierte <xref:System.Web.Hosting.VirtualPathProvider> Klasse unterstützt keine Verzeichnisse, die <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> Methode zurückgeben soll `false`.  
  
> [!NOTE]
>  Wenn das virtuelle Dateisystem Designs für die Website enthält (durch das Erstellen einer virtuellen `App_Themes` Verzeichnis), die benutzerdefinierte <xref:System.Web.Hosting.VirtualPathProvider> Klasse muss Verzeichnisse unterstützen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Implementierung der <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> Methode in einem benutzerdefinierten <xref:System.Web.Hosting.VirtualPathProvider> Klasse. Für den vollständigen Code zum Ausführen des Beispiels erforderlich sind, finden Sie im Abschnitt "Beispiel" von der <xref:System.Web.Hosting.VirtualPathProvider> Übersichtsthema.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#22](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#22)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExists">
      <MemberSignature Language="C#" Value="public virtual bool FileExists (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FileExists(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.FileExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FileExists (virtualPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool FileExists(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="abstract member FileExists : string -&gt; bool&#xA;override this.FileExists : string -&gt; bool" Usage="virtualPathProvider.FileExists virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der Pfad zu der virtuellen Datei.</param>
        <summary>Ruft einen Wert ab, der angibt, ob eine Datei im virtuellen Dateisystem vorhanden ist.</summary>
        <returns>
          <see langword="true" />, wenn die Datei im virtuellen Dateisystem vorhanden ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Überschreiben der <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> Methode, um auf das Kompilierungssystem anzugeben, die die Ressource durch dargestellt `virtualPath` vorhanden ist, im virtuellen Dateisystem bereitgestellt, die von diesem <xref:System.Web.Hosting.VirtualPathProvider> Instanz.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Implementierung der <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> Methode in einem benutzerdefinierten <xref:System.Web.Hosting.VirtualPathProvider> Klasse. Für den vollständigen Code zum Ausführen des Beispiels erforderlich sind, finden Sie im Abschnitt "Beispiel" von der <xref:System.Web.Hosting.VirtualPathProvider> Übersichtsthema.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#21](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#21)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#21](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheDependency">
      <MemberSignature Language="C#" Value="public virtual System.Web.Caching.CacheDependency GetCacheDependency (string virtualPath, System.Collections.IEnumerable virtualPathDependencies, DateTime utcStart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Caching.CacheDependency GetCacheDependency(string virtualPath, class System.Collections.IEnumerable virtualPathDependencies, valuetype System.DateTime utcStart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCacheDependency (virtualPath As String, virtualPathDependencies As IEnumerable, utcStart As DateTime) As CacheDependency" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Caching::CacheDependency ^ GetCacheDependency(System::String ^ virtualPath, System::Collections::IEnumerable ^ virtualPathDependencies, DateTime utcStart);" />
      <MemberSignature Language="F#" Value="abstract member GetCacheDependency : string * System.Collections.IEnumerable * DateTime -&gt; System.Web.Caching.CacheDependency&#xA;override this.GetCacheDependency : string * System.Collections.IEnumerable * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="virtualPathProvider.GetCacheDependency (virtualPath, virtualPathDependencies, utcStart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.CacheDependency</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualPathDependencies" Type="System.Collections.IEnumerable" />
        <Parameter Name="utcStart" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der Pfad zur primären virtuellen Ressource.</param>
        <param name="virtualPathDependencies">Ein Array von Pfaden zu anderen Ressourcen, die von der primären virtuellen Ressource angefordert werden.</param>
        <param name="utcStart">Die UTC-Zeit, zu der die virtuellen Ressourcen gelesen wurden.</param>
        <summary>Erstellt eine auf den angegebenen virtuellen Pfaden basierende Cacheabhängigkeit.</summary>
        <returns>Ein <see cref="T:System.Web.Caching.CacheDependency" />-Objekt für die angegebenen virtuellen Ressourcen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die standardmäßige Implementierung der <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> Methodenrückgabe `null`. Cache virtuelle Ressourcen für die spätere Verwendung müssen Sie entweder überschreiben die <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> Methode oder der <xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A> Methode.  
  
   
  
## Examples  
 Das folgende Codebeispiel implementiert die <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> Methode für ein benutzerdefiniertes <xref:System.Web.Hosting.VirtualPathProvider> Klasse. Für den vollständigen Code zum Ausführen des Beispiels erforderlich sind, finden Sie im Abschnitt "Beispiel" von der <xref:System.Web.Hosting.VirtualPathProvider> Übersichtsthema.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#28](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#28)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#28](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheKey">
      <MemberSignature Language="C#" Value="public virtual string GetCacheKey (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCacheKey(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCacheKey (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetCacheKey(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="abstract member GetCacheKey : string -&gt; string&#xA;override this.GetCacheKey : string -&gt; string" Usage="virtualPathProvider.GetCacheKey virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der Pfad zur virtuellen Ressource.</param>
        <summary>Gibt einen Cacheschlüssel zurück, der für den angegebenen virtuellen Pfad verwendet werden soll.</summary>
        <returns>Ein Cacheschlüssel für die angegebene virtuelle Ressource.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A> Methode, um einen benutzerdefinierten Cacheschlüssel für virtuellen Ressourcen bereitzustellen. Wenn Sie nicht außer Kraft setzen der <xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A> -Methode, den virtuellen Pfad für den Cacheschlüssel verwendet wird.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Nur die Standardeinstellung überschreiben, <see cref="M:System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)" /> Methode, wenn erstellen einen Cacheschlüssel auf den virtuellen Pfad basierend für Ihre Anwendung nicht funktioniert.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetDirectory">
      <MemberSignature Language="C#" Value="public virtual System.Web.Hosting.VirtualDirectory GetDirectory (string virtualDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Hosting.VirtualDirectory GetDirectory(string virtualDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDirectory (virtualDir As String) As VirtualDirectory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Hosting::VirtualDirectory ^ GetDirectory(System::String ^ virtualDir);" />
      <MemberSignature Language="F#" Value="abstract member GetDirectory : string -&gt; System.Web.Hosting.VirtualDirectory&#xA;override this.GetDirectory : string -&gt; System.Web.Hosting.VirtualDirectory" Usage="virtualPathProvider.GetDirectory virtualDir" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualDirectory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualDir">Der Pfad zum virtuellen Verzeichnis.</param>
        <summary>Ruft ein virtuelles Verzeichnis aus dem virtuellen Dateisystem ab.</summary>
        <returns>Eine untergeordnete Klasse der <see cref="T:System.Web.Hosting.VirtualDirectory" />-Klasse, die ein Verzeichnis im virtuellen Dateisystem darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> Methode gibt eine Ableitung von der <xref:System.Web.Hosting.VirtualDirectory> -Klasse, die Dateien und Verzeichnisse enthalten, in dem im angegebenen Verzeichnis enthält, die `virtualDir` Parameter.  
  
 Wenn Ihre benutzerdefinierte <xref:System.Web.Hosting.VirtualPathProvider> Klasse unterstützt keine Verzeichnisse, die <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> Methode zurückgeben soll `null`.  
  
> [!NOTE]
>  Wenn das virtuelle Dateisystem Designs für die Website enthält (durch das Erstellen einer virtuellen `App_Themes` Verzeichnis), die benutzerdefinierte <xref:System.Web.Hosting.VirtualPathProvider> Klasse muss Verzeichnisse unterstützen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Implementierung der <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> Methode in einem benutzerdefinierten <xref:System.Web.Hosting.VirtualPathProvider> Klasse. Für den vollständigen Code zum Ausführen des Beispiels erforderlich sind, finden Sie im Abschnitt "Beispiel" von der <xref:System.Web.Hosting.VirtualPathProvider> Übersichtsthema.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#24](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#24)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#24](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFile">
      <MemberSignature Language="C#" Value="public virtual System.Web.Hosting.VirtualFile GetFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Hosting.VirtualFile GetFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFile (virtualPath As String) As VirtualFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Hosting::VirtualFile ^ GetFile(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="abstract member GetFile : string -&gt; System.Web.Hosting.VirtualFile&#xA;override this.GetFile : string -&gt; System.Web.Hosting.VirtualFile" Usage="virtualPathProvider.GetFile virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der Pfad zu der virtuellen Datei.</param>
        <summary>Ruft aus dem virtuellen Dateisystem eine virtuelle Datei ab.</summary>
        <returns>Eine untergeordnete Klasse der <see cref="T:System.Web.Hosting.VirtualFile" />-Klasse, die eine Datei im virtuellen Dateisystem darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> Methode gibt eine Ableitung von der <xref:System.Web.Hosting.VirtualFile> Klasse, die angegebene Datei darstellt. die `virtualPath` Parameter.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Implementierung der <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> Methode in einem benutzerdefinierten <xref:System.Web.Hosting.VirtualPathProvider> Klasse. Für den vollständigen Code zum Ausführen des Beispiels erforderlich sind, finden Sie im Abschnitt "Beispiel" von der <xref:System.Web.Hosting.VirtualPathProvider> Übersichtsthema.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#23)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileHash">
      <MemberSignature Language="C#" Value="public virtual string GetFileHash (string virtualPath, System.Collections.IEnumerable virtualPathDependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFileHash(string virtualPath, class System.Collections.IEnumerable virtualPathDependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetFileHash(System.String,System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileHash (virtualPath As String, virtualPathDependencies As IEnumerable) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetFileHash(System::String ^ virtualPath, System::Collections::IEnumerable ^ virtualPathDependencies);" />
      <MemberSignature Language="F#" Value="abstract member GetFileHash : string * System.Collections.IEnumerable -&gt; string&#xA;override this.GetFileHash : string * System.Collections.IEnumerable -&gt; string" Usage="virtualPathProvider.GetFileHash (virtualPath, virtualPathDependencies)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualPathDependencies" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der Pfad zur primären virtuellen Ressource.</param>
        <param name="virtualPathDependencies">Ein Array von Pfaden zu anderen virtuellen Ressourcen, die von der primären virtuellen Ressource angefordert werden.</param>
        <summary>Gibt einen Hash der angegebenen virtuellen Pfade zurück.</summary>
        <returns>Ein Hash der angegebenen virtuellen Pfade.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A> Methode, um einen Hash der Abhängigkeiten für eine Ressource des virtuellen Dateisystem bereitzustellen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="virtualPathProvider.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initialisiert die <see cref="T:System.Web.Hosting.VirtualPathProvider" />-Instanz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> Methode wird aufgerufen, nachdem der Anbieter das Kompilierungssystem von ASP.NET registriert ist. Die <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> Methode wird verwendet, um alle Initialisierungsschritte erforderlich sind, nach dem Bereitstellen der <xref:System.Web.Hosting.VirtualPathProvider> Instanz befindet sich in der Umgebung die Anwendung belegt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Implementierung der <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> Methode, die den Pfad in eine Datendatei aus der Anwendung festlegt <xref:System.Web.Hosting.HostingEnvironment> Instanz. Für den vollständigen Code zum Ausführen des Beispiels erforderlich sind, finden Sie im Abschnitt "Beispiel" von der <xref:System.Web.Hosting.VirtualPathProvider> Übersichtsthema.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#26](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#26)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#26](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="virtualPathProvider.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt zu einer unendlichen Lebensdauer des <see cref="T:System.Web.Hosting.VirtualPathProvider" />-Objekts, indem das Erstellen eines Lease verhindert wird.</summary>
        <returns>Immer <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode überschreibt die <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> -Methode in der Basisklasse. Wird immer zurückgegeben `null` und verhindert dadurch, dass eine Lease erstellt werden, einschränken würde, die <xref:System.Web.Hosting.VirtualPathProvider> Lebensdauer des Objekts.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenFile">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.OpenFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenFile (virtualPath As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenFile(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member OpenFile : string -&gt; System.IO.Stream" Usage="System.Web.Hosting.VirtualPathProvider.OpenFile virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der Pfad zu der virtuellen Datei.</param>
        <summary>Gibt einen Stream aus einer virtuellen Datei zurück.</summary>
        <returns>Ein schreibgeschütztes <see cref="T:System.IO.Stream" />-Objekt für die angegebene virtuelle Datei oder Ressource.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Hosting.VirtualPathProvider.OpenFile%2A> Methode ist eine Hilfsmethode, die Ihnen ermöglicht, einen Stream aus einer virtuellen Datei abrufen, ohne zu erstellen einen <xref:System.Web.Hosting.VirtualPathProvider> Instanz.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="protected internal System.Web.Hosting.VirtualPathProvider Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Hosting.VirtualPathProvider Previous" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualPathProvider.Previous" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property Previous As VirtualPathProvider" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Web::Hosting::VirtualPathProvider ^ Previous { System::Web::Hosting::VirtualPathProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Previous : System.Web.Hosting.VirtualPathProvider" Usage="System.Web.Hosting.VirtualPathProvider.Previous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualPathProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf ein vorher registriertes <see cref="T:System.Web.Hosting.VirtualPathProvider" />-Objekt im Kompilierungssystem ab.</summary>
        <value>Das nächste <see cref="T:System.Web.Hosting.VirtualPathProvider" />-Objekt im Kompilierungssystem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine <xref:System.Web.Hosting.VirtualPathProvider> -Objekt im Kompilierungssystem von ASP.NET registriert ist, wird es auf eine Kette von Anbieter hinzugefügt. Verwenden der <xref:System.Web.Hosting.VirtualPathProvider.Previous%2A> Eigenschaft für die Verarbeitung von Hand aus dem vorherigen <xref:System.Web.Hosting.VirtualPathProvider> Objekt in der Kette, wenn der angeforderte Pfad nicht, von diesem angegeben wird <xref:System.Web.Hosting.VirtualPathProvider> Instanz.  
  
 Die Kette der Pfadanbieter endet immer mit dem ASP.NET-Anbieter für Standard, die Dateien aus dem Dateisystem dient.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Implementierung der <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> Methode. Wenn das angeforderte virtuelle Verzeichnis nicht mit der Zeichenfolge beginnt `"/vrdir"`, die Methode verwendet die <xref:System.Web.Hosting.VirtualPathProvider.Previous%2A> Eigenschaft, um die Anforderung an dem nächsten übergeben <xref:System.Web.Hosting.VirtualPathProvider> Objekt in der Kette. Für den vollständigen Code zum Ausführen des Beispiels erforderlich sind, finden Sie im Abschnitt "Beispiel" von der <xref:System.Web.Hosting.VirtualPathProvider> Übersichtsthema.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#23)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>