<Type Name="CreateProperty" FullName="Microsoft.Build.Tasks.CreateProperty">
  <Metadata><Meta Name="ms.openlocfilehash" Value="71b280bb54ee27632643815a050fdd76ecfd324a" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86668449" /></Metadata><TypeSignature Language="C#" Value="public class CreateProperty : Microsoft.Build.Tasks.TaskExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CreateProperty extends Microsoft.Build.Tasks.TaskExtension" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Tasks.CreateProperty" />
  <TypeSignature Language="VB.NET" Value="Public Class CreateProperty&#xA;Inherits TaskExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class CreateProperty : Microsoft::Build::Tasks::TaskExtension" />
  <TypeSignature Language="F#" Value="type CreateProperty = class&#xA;    inherit TaskExtension" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.v3.5</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Tasks.TaskExtension</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1a8c8-101">Hierbei handelt es sich lediglich um eine direkte Weitergabe der Eingaben an die Ausgaben.</span><span class="sxs-lookup"><span data-stu-id="1a8c8-101">Just a straight pass-through of the inputs through to the outputs.</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CreateProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.CreateProperty.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CreateProperty();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a8c8-102">Initialisiert eine neue Instanz der <see cref="T:Microsoft.Build.Tasks.CreateProperty" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="1a8c8-102">Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.CreateProperty" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public override bool Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.CreateProperty.Execute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Execute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Execute();" />
      <MemberSignature Language="F#" Value="override this.Execute : unit -&gt; bool" Usage="createProperty.Execute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a8c8-103">Diese Methode erstellt die-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="1a8c8-103">Create the property.</span></span> <span data-ttu-id="1a8c8-104">Da die Eingabeeigenschaft mit der Ausgabeeigenschaft übereinstimmt, ist dies ziemlich einfach.</span><span class="sxs-lookup"><span data-stu-id="1a8c8-104">Since the input property is the same as the output property, this is rather easy.</span></span></summary>
        <returns />
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string[] Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.CreateProperty.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ Value { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string[] with get, set" Usage="Microsoft.Build.Tasks.CreateProperty.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Build.Framework.Output]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Build.Framework.Output&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a8c8-105">Hierbei handelt es sich um den Wert der Eingabe-/Ausgabeeigenschaft.</span><span class="sxs-lookup"><span data-stu-id="1a8c8-105">The in/out property value.</span></span></summary>
        <value><span data-ttu-id="1a8c8-106">Der Wert, der in die neue Eigenschaft kopiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="1a8c8-106">The value to copy to the new property</span></span></value>
        <remarks><span data-ttu-id="1a8c8-107">Also... Warum ist das eine Zeichenfolge [] anstelle einer Zeichenfolge?</span><span class="sxs-lookup"><span data-stu-id="1a8c8-107">So ... why is this a string[] instead of a string?</span></span>
<span data-ttu-id="1a8c8-108">Im Grunde, wenn der Projekt Autor Folgendes übermittelt hat:</span><span class="sxs-lookup"><span data-stu-id="1a8c8-108">Basically if the project author passed in:</span></span> 
<span data-ttu-id="1a8c8-109">Wert für "kreateproperty" = "Clean;" Build "Output Taskparameter =" Wert "PropertyName =" mytargetstobuild "/CreateProperty</span><span class="sxs-lookup"><span data-stu-id="1a8c8-109">CreateProperty Value="Clean;Build" Output TaskParameter="Value" PropertyName="MyTargetsToBuild" /CreateProperty</span></span> 
<span data-ttu-id="1a8c8-110">Wir müssen das Semikolon beachten, das er in den Wert eingefügt hat, und es muss genau so behandelt werden, als wäre es so:</span><span class="sxs-lookup"><span data-stu-id="1a8c8-110">We need to respect the semicolon that he put in the value, and need to treat this exactly as if he had done:</span></span> 
<span data-ttu-id="1a8c8-111">PropertyGroup mytargetstobuild = "Clean; Build "/PropertyGroup</span><span class="sxs-lookup"><span data-stu-id="1a8c8-111">PropertyGroup MyTargetsToBuild="Clean;Build" /PropertyGroup</span></span> 
<span data-ttu-id="1a8c8-112">Wenn wir diesen Parameter als "Zeichenfolge" festlegen, führt die Engine den Wert auf dem Weg aus der Aufgabe zurück zur Engine aus und erstellt eine Eigenschaft, die auf "Clean% 3bbuild" festgelegt ist, was dem Benutzer nicht gewünscht ist.</span><span class="sxs-lookup"><span data-stu-id="1a8c8-112">If we make this parameter a "string", then the engine will escape the value on the way out from the task back to the engine, creating a property that is set to "Clean%3BBuild", which is not what the user wanted.</span></span></remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ValueSetByTask">
      <MemberSignature Language="C#" Value="public string[] ValueSetByTask { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ValueSetByTask" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.CreateProperty.ValueSetByTask" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueSetByTask As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ ValueSetByTask { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueSetByTask : string[]" Usage="Microsoft.Build.Tasks.CreateProperty.ValueSetByTask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Build.Framework.Output]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Build.Framework.Output&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a8c8-113">Diese Eigenschaft soll MSBuild dazu bringen, nicht den üblichen TLDA-Trick anzuwenden, bei dem MSBuild, auch wenn ein Ziel auf dem neuesten Stand ist, die Eigenschaften festlegt, die über den CreateProperty-Task festgelegt werden sollten.</span><span class="sxs-lookup"><span data-stu-id="1a8c8-113">This is to fool MSBuild into not doing its little TLDA trick whereby even if a target is up-to-date, it will still set the properties that were meant to be set using the CreateProperty task.</span></span>  <span data-ttu-id="1a8c8-114">Dies liegt daran, dass MSBuild intelligent genug ist, um den Wert der Ausgabeeigenschaft zu ermitteln, ohne den Task auszuführen.</span><span class="sxs-lookup"><span data-stu-id="1a8c8-114">This is because MSBuild is smart enough to figure out the value of the output property without running the task.</span></span>
<span data-ttu-id="1a8c8-115">Wenn der Eingabeparameter jedoch anders benannt ist als der Ausgabeparameter, kann MSBuild nicht intelligent genug sein, um dies zu tun.</span><span class="sxs-lookup"><span data-stu-id="1a8c8-115">But if the input parameter is differently named than the output parameter, MSBuild can't be smart enough to do that.</span></span>  <span data-ttu-id="1a8c8-116">Dies ist ein wichtiges Szenario für Personen, die wissen möchten, ob ein bestimmtes Ziel auf dem neuesten Stand ist.</span><span class="sxs-lookup"><span data-stu-id="1a8c8-116">This is an important scenario for people who want to know whether a particular target was up-to-date or not.</span></span></summary>
        <value><span data-ttu-id="1a8c8-117">Derselbe Wert wie die <see cref="P:Microsoft.Build.Tasks.CreateProperty.Value" />-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="1a8c8-117">The same value as the <see cref="P:Microsoft.Build.Tasks.CreateProperty.Value" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a8c8-118">Verwenden Sie diese Eigenschaft nur, wenn Sie vermeiden möchten, dass die Output-Eigenschaft von festgelegt wird, [!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)] Wenn das einschließende Ziel ausgelassen wird, da die Ausgaben auf dem neuesten Stand sind.</span><span class="sxs-lookup"><span data-stu-id="1a8c8-118">Use this property only when you want to avoid having the output property set by [!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)] when it skips the enclosing target because the outputs are up-to-date.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
