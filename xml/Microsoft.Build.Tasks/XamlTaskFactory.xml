<Type Name="XamlTaskFactory" FullName="Microsoft.Build.Tasks.XamlTaskFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="307610097b6d770a091dcaf3c390307a713ada05" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70472536" /></Metadata><TypeSignature Language="C#" Value="public class XamlTaskFactory : Microsoft.Build.Framework.ITaskFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlTaskFactory extends System.Object implements class Microsoft.Build.Framework.ITaskFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Tasks.XamlTaskFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlTaskFactory&#xA;Implements ITaskFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTaskFactory : Microsoft::Build::Framework::ITaskFactory" />
  <TypeSignature Language="F#" Value="type XamlTaskFactory = class&#xA;    interface ITaskFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ITaskFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Der Aufgabenfactoryanbieter für XAML-Aufgaben.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTaskFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.XamlTaskFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTaskFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Erstellt eine Aufgabenfactory für XAML-Aufgaben.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanupTask">
      <MemberSignature Language="C#" Value="public void CleanupTask (Microsoft.Build.Framework.ITask task);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanupTask(class Microsoft.Build.Framework.ITask task) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.XamlTaskFactory.CleanupTask(Microsoft.Build.Framework.ITask)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CleanupTask (task As ITask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CleanupTask(Microsoft::Build::Framework::ITask ^ task);" />
      <MemberSignature Language="F#" Value="abstract member CleanupTask : Microsoft.Build.Framework.ITask -&gt; unit&#xA;override this.CleanupTask : Microsoft.Build.Framework.ITask -&gt; unit" Usage="xamlTaskFactory.CleanupTask task" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITaskFactory.CleanupTask(Microsoft.Build.Framework.ITask)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="task" Type="Microsoft.Build.Framework.ITask" />
      </Parameters>
      <Docs>
        <param name="task">Die zu bereinigende Aufgabe.</param>
        <summary>Bereinigt jeden Kontext oder Zustand, der für eine bestimmte Aufgabe erstellt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Einige Factorys können eine AppDomain als Teil einer einzelnen Aufgaben Instanz erstellen. Solche Factorys verwenden diese Methode zum Herunterfahren der AppDomain.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTask">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITask CreateTask (Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Framework.ITask CreateTask(class Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.XamlTaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTask (taskFactoryLoggingHost As IBuildEngine) As ITask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Build::Framework::ITask ^ CreateTask(Microsoft::Build::Framework::IBuildEngine ^ taskFactoryLoggingHost);" />
      <MemberSignature Language="F#" Value="abstract member CreateTask : Microsoft.Build.Framework.IBuildEngine -&gt; Microsoft.Build.Framework.ITask&#xA;override this.CreateTask : Microsoft.Build.Framework.IBuildEngine -&gt; Microsoft.Build.Framework.ITask" Usage="xamlTaskFactory.CreateTask taskFactoryLoggingHost" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskFactoryLoggingHost" Type="Microsoft.Build.Framework.IBuildEngine" />
      </Parameters>
      <Docs>
        <param name="taskFactoryLoggingHost">Der Aufgabenfactory-Protokollierungshost, der Meldungen im Kontext der Aufgabe protokolliert.</param>
        <summary>Erstellt eine Instanz der zu verwendenden Aufgabe.</summary>
        <returns>Die neue Taskfactory.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FactoryName">
      <MemberSignature Language="C#" Value="public string FactoryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FactoryName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.XamlTaskFactory.FactoryName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FactoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FactoryName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FactoryName : string" Usage="Microsoft.Build.Tasks.XamlTaskFactory.FactoryName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ITaskFactory.FactoryName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den in Fehlermeldungen zu verwendenden Name dieser Factory ab. Beispiel: Fehler beim Laden der Aufgabe "MeineAufgabe" aus "Factoryname".</summary>
        <value>Der Name dieser aufgabenfactory.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTaskParameters">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.TaskPropertyInfo[] GetTaskParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Framework.TaskPropertyInfo[] GetTaskParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.XamlTaskFactory.GetTaskParameters" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTaskParameters () As TaskPropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Microsoft::Build::Framework::TaskPropertyInfo ^&gt; ^ GetTaskParameters();" />
      <MemberSignature Language="F#" Value="abstract member GetTaskParameters : unit -&gt; Microsoft.Build.Framework.TaskPropertyInfo[]&#xA;override this.GetTaskParameters : unit -&gt; Microsoft.Build.Framework.TaskPropertyInfo[]" Usage="xamlTaskFactory.GetTaskParameters " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITaskFactory.GetTaskParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.TaskPropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die Typinformationen für die Parameter der Aufgabe ab.</summary>
        <returns>Die Typinformation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public bool Initialize (string taskName, System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Framework.TaskPropertyInfo&gt; taskParameters, string taskElementContents, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Initialize(string taskName, class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Framework.TaskPropertyInfo&gt; taskParameters, string taskElementContents, class Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.XamlTaskFactory.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Function Initialize (taskName As String, taskParameters As IDictionary(Of String, TaskPropertyInfo), taskElementContents As String, taskFactoryLoggingHost As IBuildEngine) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Initialize(System::String ^ taskName, System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Framework::TaskPropertyInfo ^&gt; ^ taskParameters, System::String ^ taskElementContents, Microsoft::Build::Framework::IBuildEngine ^ taskFactoryLoggingHost);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : string * System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Framework.TaskPropertyInfo&gt; * string * Microsoft.Build.Framework.IBuildEngine -&gt; bool&#xA;override this.Initialize : string * System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Framework.TaskPropertyInfo&gt; * string * Microsoft.Build.Framework.IBuildEngine -&gt; bool" Usage="xamlTaskFactory.Initialize (taskName, taskParameters, taskElementContents, taskFactoryLoggingHost)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITaskFactory.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskName" Type="System.String" />
        <Parameter Name="taskParameters" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Framework.TaskPropertyInfo&gt;" />
        <Parameter Name="taskElementContents" Type="System.String" />
        <Parameter Name="taskFactoryLoggingHost" Type="Microsoft.Build.Framework.IBuildEngine" />
      </Parameters>
      <Docs>
        <param name="taskName">Der Name der Aufgabe.</param>
        <param name="taskParameters">Die an die Aufgabe zu übergebenden Parameter.</param>
        <param name="taskElementContents">Der Elementinhalt.</param>
        <param name="taskFactoryLoggingHost">Der Aufgabenfactory-Protokollierungshost, der Meldungen im Kontext der Aufgabe protokolliert.</param>
        <summary>Initialisiert die Factory.</summary>
        <returns>Gibt <see cref="T:System.Boolean" /> zurück.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskElementContents">
      <MemberSignature Language="C#" Value="public string TaskElementContents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TaskElementContents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.XamlTaskFactory.TaskElementContents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TaskElementContents As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TaskElementContents { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TaskElementContents : string" Usage="Microsoft.Build.Tasks.XamlTaskFactory.TaskElementContents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Inhalt des UsingTask-Texts ab oder legt diesen fest.</summary>
        <value>Der Inhalt des UsingTask-Texts.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskName">
      <MemberSignature Language="C#" Value="public string TaskName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TaskName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.XamlTaskFactory.TaskName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TaskName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TaskName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TaskName : string" Usage="Microsoft.Build.Tasks.XamlTaskFactory.TaskName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Aufgabe ab, abgerufen aus XAML, oder legt diesen fest.</summary>
        <value>Der Name der Aufgabe.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskNamespace">
      <MemberSignature Language="C#" Value="public string TaskNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TaskNamespace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.XamlTaskFactory.TaskNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TaskNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TaskNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TaskNamespace : string" Usage="Microsoft.Build.Tasks.XamlTaskFactory.TaskNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namespace der Aufgabe ab, abgerufen aus XAML, oder legt diesen fest.</summary>
        <value>Der Namespace der Aufgabe.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskType">
      <MemberSignature Language="C#" Value="public Type TaskType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TaskType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.XamlTaskFactory.TaskType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TaskType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TaskType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TaskType : Type" Usage="Microsoft.Build.Tasks.XamlTaskFactory.TaskType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ITaskFactory.TaskType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ der Aufgabe ab, abgerufen aus XAML, oder legt diesen fest.</summary>
        <value>Der Tasktyp.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
