<Type Name="Vbc" FullName="Microsoft.Build.Tasks.Vbc">
  <TypeSignature Language="C#" Value="public class Vbc : Microsoft.Build.Tasks.ManagedCompiler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Vbc extends Microsoft.Build.Tasks.ManagedCompiler" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Tasks.Vbc" />
  <TypeSignature Language="VB.NET" Value="Public Class Vbc&#xA;Inherits ManagedCompiler" />
  <TypeSignature Language="C++ CLI" Value="public ref class Vbc : Microsoft::Build::Tasks::ManagedCompiler" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Tasks.ManagedCompiler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8afac-101">Implementiert die <c>Vbc</c>-Aufgabe.</span><span class="sxs-lookup"><span data-stu-id="8afac-101">Implements the <c>Vbc</c> task.</span></span> <span data-ttu-id="8afac-102">Verwenden Sie das <c>Vbc</c>-Element in der Projektdatei, um diese Aufgabe zu erstellen und auszuführen.</span><span class="sxs-lookup"><span data-stu-id="8afac-102">Use the <c>Vbc</c> element in your project file to create and execute this task.</span></span> <span data-ttu-id="8afac-103">Informationen zu Verwendung und Parametern finden Sie unter [Vbc-Aufgabe](http://msdn.microsoft.com/library/595278b1-2782-4577-b1ba-b4b5ab5625a3).</span><span class="sxs-lookup"><span data-stu-id="8afac-103">For usage and parameter information, see [Vbc Task](http://msdn.microsoft.com/library/595278b1-2782-4577-b1ba-b4b5ab5625a3).</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Vbc ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Vbc.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Vbc();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8afac-104">Initialisiert eine neue Instanz der <see cref="T:Microsoft.Build.Tasks.Vbc" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="8afac-104">Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Vbc" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddResponseFileCommands">
      <MemberSignature Language="C#" Value="protected internal override void AddResponseFileCommands (Microsoft.Build.Tasks.CommandLineBuilderExtension commandLine);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void AddResponseFileCommands(class Microsoft.Build.Tasks.CommandLineBuilderExtension commandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Vbc.AddResponseFileCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub AddResponseFileCommands (commandLine As CommandLineBuilderExtension)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void AddResponseFileCommands(Microsoft::Build::Tasks::CommandLineBuilderExtension ^ commandLine);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandLine" Type="Microsoft.Build.Tasks.CommandLineBuilderExtension" />
      </Parameters>
      <Docs>
        <param name="commandLine"><span data-ttu-id="8afac-105">Befehlszeilen-Generator, dem Argumente hinzugefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="8afac-105">Command line builder to add arguments to.</span></span></param>
        <summary><span data-ttu-id="8afac-106">Füllt den angegebenen <paramref name="commandLine" />-Parameter mit Schaltern und anderen Informationen, die in eine Antwortdatei aufgenommen werden können.</span><span class="sxs-lookup"><span data-stu-id="8afac-106">Fills the specified <paramref name="commandLine" /> parameter with switches and other information that can go into a response file.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="BaseAddress">
      <MemberSignature Language="C#" Value="public string BaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseAddress" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Vbc.BaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afac-107">Ruft die Basisadresse der DLL ab oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="8afac-107">Gets or sets the base address of the DLL.</span></span></summary>
        <value><span data-ttu-id="8afac-108">Die Basisadresse der DLL.</span><span class="sxs-lookup"><span data-stu-id="8afac-108">The base address of the DLL.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CallHostObjectToExecute">
      <MemberSignature Language="C#" Value="protected override bool CallHostObjectToExecute ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool CallHostObjectToExecute() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Vbc.CallHostObjectToExecute" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CallHostObjectToExecute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool CallHostObjectToExecute();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8afac-109">Kompiliert das Projekt über das Hostobjekt.</span><span class="sxs-lookup"><span data-stu-id="8afac-109">Compiles the project through the host object.</span></span></summary>
        <returns>
          <span data-ttu-id="8afac-110"><see langword="true" />, wenn die Kompilierung erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8afac-110"><see langword="true" /> if compilation succeeded; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afac-111">Diese Methode wird während der Ausführung aufgerufen abrufen, wenn ein Hostobjekt, um übergeben wurde die `Vbc` Aufgabe.</span><span class="sxs-lookup"><span data-stu-id="8afac-111">This method will get called during execution if a host object was passed to the `Vbc` task.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DisabledWarnings">
      <MemberSignature Language="C#" Value="public string DisabledWarnings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisabledWarnings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Vbc.DisabledWarnings" />
      <MemberSignature Language="VB.NET" Value="Public Property DisabledWarnings As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisabledWarnings { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afac-112">Ruft eine oder mehrere zu unterdrückende Warnungen ab oder legt diese fest, die vom numerischen Teil des Warnungsbezeichners angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="8afac-112">Gets or sets one or more warnings to suppress that are specified by the numeric part of the warning identifier.</span></span></summary>
        <value><span data-ttu-id="8afac-113">Die zu unterdrückenden Warnungen, die vom numerischen Teil des Warnungsbezeichners angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="8afac-113">The warnings to suppress that are specified by the numeric part of the warning identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afac-114">Mehrere Warnungen werden durch Semikolons getrennt.</span><span class="sxs-lookup"><span data-stu-id="8afac-114">Multiple warnings are separated by semicolons.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DocumentationFile">
      <MemberSignature Language="C#" Value="public string DocumentationFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentationFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Vbc.DocumentationFile" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentationFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentationFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afac-115">Aktiviert die Verarbeitung von Dokumentationskommentaren und ruft die XML-Ausgabedatei mit der Dokumentation ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="8afac-115">Turns on documentation comments processing and gets or sets the output documentation XML file.</span></span></summary>
        <value><span data-ttu-id="8afac-116">Die XML-Ausgabedatei mit der Dokumentation.</span><span class="sxs-lookup"><span data-stu-id="8afac-116">The output documentation XML file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afac-117">Diese Eigenschaft überschreibt die <xref:Microsoft.Build.Tasks.Vbc.GenerateDocumentation%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8afac-117">This property overrides the <xref:Microsoft.Build.Tasks.Vbc.GenerateDocumentation%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ErrorReport">
      <MemberSignature Language="C#" Value="public string ErrorReport { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorReport" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Vbc.ErrorReport" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorReport As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorReport { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afac-118">Ruft einen Zeichenfolgenwert ab oder legt diesen fest, der angibt, wie interne Compilerfehler von der Aufgabe gemeldet werden.</span><span class="sxs-lookup"><span data-stu-id="8afac-118">Gets or sets a string value that specifies how the task will report internal compiler errors.</span></span></summary>
        <value><span data-ttu-id="8afac-119">Ein Zeichenfolgenwert, der angibt, wie interne Compilerfehler von der Aufgabe gemeldet werden.</span><span class="sxs-lookup"><span data-stu-id="8afac-119">A string value that specifies how the task will report internal compiler errors.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afac-120">Diese Eigenschaft kann die folgenden Werte aufweisen:</span><span class="sxs-lookup"><span data-stu-id="8afac-120">This property can have the following values:</span></span>  
  
-   `prompt`  
  
-   `send`  
  
-   `none`  
  
 <span data-ttu-id="8afac-121">Wenn `prompt` angegeben ist und ein interner Compilerfehler auftritt, wird der Benutzer wird aufgefordert, mit einer Option an, der angibt, ob die Fehlerdaten an Microsoft gesendet.</span><span class="sxs-lookup"><span data-stu-id="8afac-121">If `prompt` is specified and an internal compiler error occurs, the user is prompted with an option of whether to send the error data to Microsoft.</span></span>  
  
 <span data-ttu-id="8afac-122">Wenn `send` angegeben ist und ein interner Compilerfehler auftritt, sendet die Aufgabe Fehlerdaten an Microsoft.</span><span class="sxs-lookup"><span data-stu-id="8afac-122">If `send` is specified and an internal compiler error occurs, the task sends the error data to Microsoft.</span></span>  
  
 <span data-ttu-id="8afac-123">Der Standardwert ist `none`, der Fehler im nur als Textausgabe berichtet.</span><span class="sxs-lookup"><span data-stu-id="8afac-123">The default value is `none`, which reports errors in text output only.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public override bool Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Vbc.Execute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Execute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Execute();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8afac-124">Überschreiben von "Execute", damit wir die PDB-Datei verschieben können, wenn erforderlich, nachdem der Compiler durchgeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="8afac-124">Override Execute so that we can move the PDB file, if we need to, after the compiler is done.</span></span></summary>
        <returns><span data-ttu-id="8afac-125">Gibt <see cref="T:System.Boolean" />zurück.</span><span class="sxs-lookup"><span data-stu-id="8afac-125">Returns <see cref="T:System.Boolean" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GenerateDocumentation">
      <MemberSignature Language="C#" Value="public bool GenerateDocumentation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateDocumentation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Vbc.GenerateDocumentation" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateDocumentation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateDocumentation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afac-126">Ruft einen booleschen Wert ab, der angibt, ob Dokumentationskommentare in einer XML-Datei verarbeitet werden sollen, oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="8afac-126">Gets or sets a Boolean value that specifies whether to process documentation comments to an XML file.</span></span></summary>
        <value>
          <span data-ttu-id="8afac-127"><see langword="true" /> Wenn die <c>Vbc</c> Aufgabe verarbeitet Dokumentationskommentare zu einer XML-Datei; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8afac-127"><see langword="true" /> if the <c>Vbc</c> task processes documentation comments to a XML file; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afac-128">Der Name der XML-Ausgabedatei ist der Name der ausführbaren Datei oder die Bibliothek, die der Task erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="8afac-128">The name of the output XML file is the name of the executable file or the library that the task is creating.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GenerateFullPathToTool">
      <MemberSignature Language="C#" Value="protected override string GenerateFullPathToTool ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GenerateFullPathToTool() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Vbc.GenerateFullPathToTool" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GenerateFullPathToTool () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GenerateFullPathToTool();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8afac-129">Gibt den vollständigen Pfad des Tools zurück.</span><span class="sxs-lookup"><span data-stu-id="8afac-129">Returns the full file path of the tool.</span></span></summary>
        <returns><span data-ttu-id="8afac-130">Der vollständige Dateipfad des Tools.</span><span class="sxs-lookup"><span data-stu-id="8afac-130">The full file path of the tool.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Imports">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] Imports { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] Imports" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Vbc.Imports" />
      <MemberSignature Language="VB.NET" Value="Public Property Imports As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ Imports { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afac-131">Ruft die Elementauflistungen ab oder legt diese fest, aus denen Namespaces importiert werden.</span><span class="sxs-lookup"><span data-stu-id="8afac-131">Gets or sets the item collections to import namespaces from.</span></span></summary>
        <value><span data-ttu-id="8afac-132">Die Elementauflistungen, aus denen Namespaces importiert werden.</span><span class="sxs-lookup"><span data-stu-id="8afac-132">The item collections to import namespaces from.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="InitializeHostObject">
      <MemberSignature Language="C#" Value="protected override Microsoft.Build.Utilities.HostObjectInitializationStatus InitializeHostObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype Microsoft.Build.Utilities.HostObjectInitializationStatus InitializeHostObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Vbc.InitializeHostObject" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function InitializeHostObject () As HostObjectInitializationStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override Microsoft::Build::Utilities::HostObjectInitializationStatus InitializeHostObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Utilities.HostObjectInitializationStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8afac-133">Gibt den Initialisierungsstatuswert eines Hostobjekts zurück, der die nächste zu erfolgende Aktion angibt.</span><span class="sxs-lookup"><span data-stu-id="8afac-133">Returns a host object initialization status value that indicates what the next action should be.</span></span></summary>
        <returns><span data-ttu-id="8afac-134">Ein Initialisierungsstatuswert eines Hostobjekts, der die nächste zu erfolgende Aktion angibt.</span><span class="sxs-lookup"><span data-stu-id="8afac-134">A host object initialization status value that indicates what the next action should be.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afac-135">Diese Methode wird während der Ausführung dieser Aufgabe aufgerufen abrufen, wenn ein Hostobjekt, um übergeben wurde die `Vbc` Aufgabe.</span><span class="sxs-lookup"><span data-stu-id="8afac-135">This method will get called during execution of this task if a host object was passed to the `Vbc` task.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LangVersion">
      <MemberSignature Language="C#" Value="public string LangVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LangVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Vbc.LangVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property LangVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LangVersion { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afac-136">Ruft die Version der Sprache ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="8afac-136">Gets or sets the language version.</span></span></summary>
        <value><span data-ttu-id="8afac-137">Gibt die Sprachversion zurück.</span><span class="sxs-lookup"><span data-stu-id="8afac-137">Returns the language version.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LogEventsFromTextOutput">
      <MemberSignature Language="C#" Value="protected override void LogEventsFromTextOutput (string singleLine, Microsoft.Build.Framework.MessageImportance messageImportance);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LogEventsFromTextOutput(string singleLine, valuetype Microsoft.Build.Framework.MessageImportance messageImportance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Vbc.LogEventsFromTextOutput(System.String,Microsoft.Build.Framework.MessageImportance)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LogEventsFromTextOutput(System::String ^ singleLine, Microsoft::Build::Framework::MessageImportance messageImportance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="singleLine" Type="System.String" />
        <Parameter Name="messageImportance" Type="Microsoft.Build.Framework.MessageImportance" />
      </Parameters>
      <Docs>
        <param name="singleLine"><span data-ttu-id="8afac-138">Eine aus dem STDOUT des vbc-Compilers erfasste einzelne Zeile.</span><span class="sxs-lookup"><span data-stu-id="8afac-138">A single line captured from the STDOUT of the vbc compiler</span></span></param>
        <param name="messageImportance"><span data-ttu-id="8afac-139">Die Wichtigkeit der Meldung: Hoch, niedrig, oder normal</span><span class="sxs-lookup"><span data-stu-id="8afac-139">The message importance: High,Low, or Normal</span></span></param>
        <summary><span data-ttu-id="8afac-140">Diese Methode fängt die zu protokollierenden Zeilen ab, die aus STDOUT in VBC stammen.</span><span class="sxs-lookup"><span data-stu-id="8afac-140">This method intercepts the lines to be logged coming from STDOUT from VBC.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afac-141">Sobald wir eine standard-Vb-Warnung oder Fehler angezeigt wird, klicken Sie dann wir erfassen und ziehen Sie die nächsten 3 Zeilen ein, damit wir uns die Zeilen- und Spaltennummer der IDE Berichten kann in Form einer Zeichenfolge der Form von filename.vb(Zeile) in filename.vb transformieren können , und somit den Fehler in der doppelten Groß-/Kleinschreibung für die Festlegung von Zielversionen filtern oder nur Gewundener entsprechende Token anstelle der gesamten Zeile.</span><span class="sxs-lookup"><span data-stu-id="8afac-141">Once we see a standard vb warning or error, then we capture it and grab the next 3 lines so we can transform the string form the form of FileName.vb(line) to FileName.vb(line,column) which will allow us to report the line and column to the IDE, and thus filter the error in the duplicate case for multi-targeting, or just squiggle the appropriate token instead of the entire line.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ModuleAssemblyName">
      <MemberSignature Language="C#" Value="public string ModuleAssemblyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ModuleAssemblyName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Vbc.ModuleAssemblyName" />
      <MemberSignature Language="VB.NET" Value="Public Property ModuleAssemblyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ModuleAssemblyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afac-142">Ruft den Namen der Assembly ab, die dieses Modul beinhalten wird, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="8afac-142">Gets or sets the name of the assembly that this module will be a part of.</span></span></summary>
        <value><span data-ttu-id="8afac-143">Der Name der Assembly, die dieses Modul beinhalten wird.</span><span class="sxs-lookup"><span data-stu-id="8afac-143">The name of the assembly that this module will be a part of.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NoStandardLib">
      <MemberSignature Language="C#" Value="public bool NoStandardLib { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoStandardLib" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Vbc.NoStandardLib" />
      <MemberSignature Language="VB.NET" Value="Public Property NoStandardLib As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoStandardLib { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afac-144">Ruft einen booleschen Wert ab oder legt diesen fest, der angibt, ob der Compiler nicht auf die Standardbibliotheken verweisen soll.</span><span class="sxs-lookup"><span data-stu-id="8afac-144">Gets or sets a Boolean value that specifies whether the compiler should not reference the standard libraries.</span></span></summary>
        <value>
          <span data-ttu-id="8afac-145"><see langword="true" />, wenn der Compiler nicht auf die Standardbibliotheken verweisen soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8afac-145"><see langword="true" /> if the compiler should not reference the standard libraries; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NoVBRuntimeReference">
      <MemberSignature Language="C#" Value="public bool NoVBRuntimeReference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoVBRuntimeReference" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Vbc.NoVBRuntimeReference" />
      <MemberSignature Language="VB.NET" Value="Public Property NoVBRuntimeReference As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoVBRuntimeReference { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afac-146">Ruft einen booleschen Wert ab, der angibt, ob der Compiler ohne einen Verweis auf die Visual Basic-Laufzeitbibliothek kompilieren soll, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="8afac-146">Gets or sets a Boolean value that specifies whether the compiler should compile without a reference to the Visual Basic Runtime Library.</span></span></summary>
        <value>
          <span data-ttu-id="8afac-147"><see langword="true" />, wenn der Compiler ohne einen Verweis auf die Visual Basic-Laufzeitbibliothek kompilieren soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8afac-147"><see langword="true" /> if the compiler should compile without a reference to the Visual Basic Runtime Library; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NoWarnings">
      <MemberSignature Language="C#" Value="public bool NoWarnings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoWarnings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Vbc.NoWarnings" />
      <MemberSignature Language="VB.NET" Value="Public Property NoWarnings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoWarnings { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afac-148">Ruft einen booleschen Wert ab, der angibt, ob die Aufgabe alle Warnungen unterdrückt, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="8afac-148">Gets or sets a Boolean value that specifies whether the task will suppress all warnings.</span></span></summary>
        <value>
          <span data-ttu-id="8afac-149"><see langword="true" />, wenn die Aufgabe alle Warnungen unterdrückt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8afac-149"><see langword="true" /> if the task will suppress all warnings; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="OptionCompare">
      <MemberSignature Language="C#" Value="public string OptionCompare { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OptionCompare" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Vbc.OptionCompare" />
      <MemberSignature Language="VB.NET" Value="Public Property OptionCompare As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OptionCompare { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afac-150">Ruft einen Zeichenfolgenwert ab oder legt diesen fest, der angibt, wie Zeichenfolgenvergleiche durchgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="8afac-150">Gets or sets a string value that specifies how string comparisons are made.</span></span></summary>
        <value><span data-ttu-id="8afac-151">Ein Zeichenfolgenwert, der angibt, wie Zeichenfolgenvergleiche durchgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="8afac-151">A string value that specifies how string comparisons are made.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afac-152">Diese Eigenschaft kann die folgenden Werte aufweisen:</span><span class="sxs-lookup"><span data-stu-id="8afac-152">This property can have the following values:</span></span>  
  
-   `binary`  
  
-   `text`  
  
 <span data-ttu-id="8afac-153">Der Wert `binary` gibt an, dass die Aufgabe binäre Zeichenfolgenvergleiche verwendet.</span><span class="sxs-lookup"><span data-stu-id="8afac-153">The value `binary` specifies that the task uses binary string comparisons.</span></span> <span data-ttu-id="8afac-154">Der Wert `text` gibt an, dass die Aufgabe Textzeichenfolgenvergleiche verwendet.</span><span class="sxs-lookup"><span data-stu-id="8afac-154">The value `text` specifies that the task uses text string comparisons.</span></span> <span data-ttu-id="8afac-155">Der Standardwert ist `binary`.</span><span class="sxs-lookup"><span data-stu-id="8afac-155">The default value is `binary`.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="OptionExplicit">
      <MemberSignature Language="C#" Value="public bool OptionExplicit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OptionExplicit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Vbc.OptionExplicit" />
      <MemberSignature Language="VB.NET" Value="Public Property OptionExplicit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OptionExplicit { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afac-156">Ruft einen booleschen Wert ab, der angibt, ob die explizite Deklaration von Variablen erforderlich ist, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="8afac-156">Gets or sets a Boolean value that specifies whether explicit declaration of variables is required.</span></span></summary>
        <value>
          <span data-ttu-id="8afac-157"><see langword="true" />, wenn die explizite Deklaration von Variablen erforderlich ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8afac-157"><see langword="true" /> if explicit declaration of variables is required; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="OptionInfer">
      <MemberSignature Language="C#" Value="public bool OptionInfer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OptionInfer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Vbc.OptionInfer" />
      <MemberSignature Language="VB.NET" Value="Public Property OptionInfer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OptionInfer { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afac-158">Ruft einen booleschen Wert ab, der angibt, ob in Variablendeklarationen ein lokaler Typrückschluss verwendet werden soll, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="8afac-158">Gets or sets a Boolean value that specifies whether to use local type inference in variable declarations.</span></span></summary>
        <value>
          <span data-ttu-id="8afac-159"><see langword="true" /> Wenn die <c>Vbc</c> Task verwendet einen lokalen Typrückschluss in Variablendeklarationen; anderenfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8afac-159"><see langword="true" /> if the <c>Vbc</c> task will use local type inference in variable declarations; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="OptionStrict">
      <MemberSignature Language="C#" Value="public bool OptionStrict { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OptionStrict" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Vbc.OptionStrict" />
      <MemberSignature Language="VB.NET" Value="Public Property OptionStrict As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OptionStrict { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afac-160">Dient zum Abrufen oder Festlegen eines booleschen Werts, der angibt, ob die Aufgabe eine strikte Typsemantik erzwingt, um implizite Typkonvertierungen zu beschränken.</span><span class="sxs-lookup"><span data-stu-id="8afac-160">Gets or sets a Boolean value that specifies whether the task enforces strict type semantics to restrict implicit type conversions.</span></span></summary>
        <value>
          <span data-ttu-id="8afac-161"><see langword="true" />, wenn die Aufgabe eine strikte Typsemantik erzwingt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8afac-161"><see langword="true" /> if the task enforces strict type semantics; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="OptionStrictType">
      <MemberSignature Language="C#" Value="public string OptionStrictType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OptionStrictType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Vbc.OptionStrictType" />
      <MemberSignature Language="VB.NET" Value="Public Property OptionStrictType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OptionStrictType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afac-162">Ruft einen Wert für die <see cref="P:Microsoft.Build.Tasks.Vbc.OptionStrict" />-Eigenschaft ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="8afac-162">Gets or sets a value for the <see cref="P:Microsoft.Build.Tasks.Vbc.OptionStrict" /> property.</span></span> <span data-ttu-id="8afac-163">Der Wert, der derzeit auf „Benutzerdefiniert“ festgelegt werden kann, gibt an, ob die Aufgabe Warnungen für implizite einschränkende Typkonvertierungen generiert.</span><span class="sxs-lookup"><span data-stu-id="8afac-163">Currently, the value can be set to "custom" and specifies whether the task generates warnings for implicit narrowing type conversions.</span></span></summary>
        <value><span data-ttu-id="8afac-164">Ein Wert für die <see cref="P:Microsoft.Build.Tasks.Vbc.OptionStrict" />-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8afac-164">A value for the <see cref="P:Microsoft.Build.Tasks.Vbc.OptionStrict" /> property.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="PdbFile">
      <MemberSignature Language="C#" Value="public string PdbFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PdbFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Vbc.PdbFile" />
      <MemberSignature Language="VB.NET" Value="Public Property PdbFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PdbFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afac-165">Der Pfad zur PDB-Datei.</span><span class="sxs-lookup"><span data-stu-id="8afac-165">The path to the .Pdb file.</span></span></summary>
        <value><span data-ttu-id="8afac-166">Gibt <see cref="T:System.String" />zurück.</span><span class="sxs-lookup"><span data-stu-id="8afac-166">Returns <see cref="T:System.String" />.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="RemoveIntegerChecks">
      <MemberSignature Language="C#" Value="public bool RemoveIntegerChecks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RemoveIntegerChecks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Vbc.RemoveIntegerChecks" />
      <MemberSignature Language="VB.NET" Value="Public Property RemoveIntegerChecks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RemoveIntegerChecks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afac-167">Ruft einen booleschen Wert ab, der angibt, ob Überprüfungen auf Ganzzahlüberlauf-Fehler deaktiviert werden sollen, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="8afac-167">Gets or sets a Boolean value that specifies whether to disable integer overflow error checks.</span></span></summary>
        <value>
          <span data-ttu-id="8afac-168"><see langword="true" /> Wenn die <c>Vbc</c> -Aufgabe Überprüfungen auf Ganzzahlüberlauf Fehler deaktiviert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8afac-168"><see langword="true" /> if the <c>Vbc</c> task will disable integer overflow error checks; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afac-169">Der Standardwert ist `false`.</span><span class="sxs-lookup"><span data-stu-id="8afac-169">The default value is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="RootNamespace">
      <MemberSignature Language="C#" Value="public string RootNamespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootNamespace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Vbc.RootNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Property RootNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RootNamespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afac-170">Ruft den Stammnamespace für alle Typdeklarationen ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="8afac-170">Gets or sets the root namespace for all type declarations.</span></span></summary>
        <value><span data-ttu-id="8afac-171">Der Stammnamespace für alle Typdeklarationen.</span><span class="sxs-lookup"><span data-stu-id="8afac-171">The root namespace for all type declarations.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SdkPath">
      <MemberSignature Language="C#" Value="public string SdkPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SdkPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Vbc.SdkPath" />
      <MemberSignature Language="VB.NET" Value="Public Property SdkPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SdkPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afac-172">Ruft den Speicherort von „mscorlib.dll“ und „microsoft.visualbasic.dll“ ab oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="8afac-172">Gets or sets the location of mscorlib.dll and microsoft.visualbasic.dll.</span></span></summary>
        <value><span data-ttu-id="8afac-173">Der Speicherort von „mscorlib.dll“ und „microsoft.visualbasic.dll“.</span><span class="sxs-lookup"><span data-stu-id="8afac-173">The location of mscorlib.dll and microsoft.visualbasic.dll.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TargetCompactFramework">
      <MemberSignature Language="C#" Value="public bool TargetCompactFramework { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TargetCompactFramework" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Vbc.TargetCompactFramework" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetCompactFramework As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TargetCompactFramework { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afac-174">Ruft einen booleschen Wert ab, der angibt, ob [!INCLUDE[Compact](~/includes/compact-md.md)] als Ziel verwendet werden soll, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="8afac-174">Gets or sets a Boolean value that specifies whether to target the [!INCLUDE[Compact](~/includes/compact-md.md)].</span></span></summary>
        <value>
          <span data-ttu-id="8afac-175"><see langword="true" /> Wenn die <c>Vbc</c> Task sollten als Ziel der [!INCLUDE[Compact](~/includes/compact-md.md)]ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8afac-175"><see langword="true" /> if the <c>Vbc</c> task should target the [!INCLUDE[Compact](~/includes/compact-md.md)]; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ToolName">
      <MemberSignature Language="C#" Value="protected override string ToolName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Vbc.ToolName" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ToolName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ ToolName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afac-176">Ruft den Namen der ausführbaren Datei des Tools ab (vbc.exe).</span><span class="sxs-lookup"><span data-stu-id="8afac-176">Gets the name of the tool executable file (vbc.exe).</span></span></summary>
        <value><span data-ttu-id="8afac-177">Der Name der ausführbaren Datei des Tools.</span><span class="sxs-lookup"><span data-stu-id="8afac-177">The name of the tool executable file.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="UseHostCompilerIfAvailable">
      <MemberSignature Language="C#" Value="public bool UseHostCompilerIfAvailable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseHostCompilerIfAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Vbc.UseHostCompilerIfAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Property UseHostCompilerIfAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseHostCompilerIfAvailable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afac-178">Ruft einen booleschen Wert ab, der angibt, ob das prozessinterne Compilerobjekt (falls verfügbar) verwendet werden soll, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="8afac-178">Gets or sets a Boolean value that specifies whether to use the in-process compiler object, if available.</span></span> <span data-ttu-id="8afac-179">Wird nur von Visual Studio verwendet.</span><span class="sxs-lookup"><span data-stu-id="8afac-179">Used only by Visual Studio.</span></span></summary>
        <value>
          <span data-ttu-id="8afac-180"><see langword="true" /> Wenn die <c>Vbc</c> Task verwendet das prozessinterne Compilerobjekt, falls verfügbar ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8afac-180"><see langword="true" /> if the <c>Vbc</c> task will use the in-process compiler object, if available; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ValidateParameters">
      <MemberSignature Language="C#" Value="protected override bool ValidateParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ValidateParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Vbc.ValidateParameters" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ValidateParameters () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ValidateParameters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8afac-181">Überprüft Eingabeparameter und protokolliert Fehler oder Warnungen (sofern vorhanden).</span><span class="sxs-lookup"><span data-stu-id="8afac-181">Validates input parameters and logs errors or warnings, if any.</span></span> <span data-ttu-id="8afac-182">Gibt einen booleschen Wert zurück, der angibt, ob die Aufgabenausführung fortgesetzt werden soll.</span><span class="sxs-lookup"><span data-stu-id="8afac-182">Returns a Boolean value that indicates whether task execution should proceed.</span></span></summary>
        <returns>
          <span data-ttu-id="8afac-183"><see langword="true" />, wenn die Aufgabenausführung fortgesetzt werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8afac-183"><see langword="true" /> if task execution should proceed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="VBRuntime">
      <MemberSignature Language="C#" Value="public string VBRuntime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VBRuntime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Vbc.VBRuntime" />
      <MemberSignature Language="VB.NET" Value="Public Property VBRuntime As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VBRuntime { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afac-184">Gibt an, ob mit der standardmäßigen Visual Basic-Laufzeit kompiliert werden soll.</span><span class="sxs-lookup"><span data-stu-id="8afac-184">Specifies whether to compile with the default Visual Basic runtime.</span></span></summary>
        <value><span data-ttu-id="8afac-185">Gibt <see cref="T:System.String" />zurück.</span><span class="sxs-lookup"><span data-stu-id="8afac-185">Returns <see cref="T:System.String" />.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="VBRuntimePath">
      <MemberSignature Language="C#" Value="public string VBRuntimePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VBRuntimePath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Vbc.VBRuntimePath" />
      <MemberSignature Language="VB.NET" Value="Public Property VBRuntimePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VBRuntimePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afac-186">Der Pfad zur Visual Basic-Laufzeit, die verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="8afac-186">The path to the Visual Basic runtime to use.</span></span></summary>
        <value><span data-ttu-id="8afac-187">Gibt <see cref="T:System.String" />zurück.</span><span class="sxs-lookup"><span data-stu-id="8afac-187">Returns <see cref="T:System.String" />.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Verbosity">
      <MemberSignature Language="C#" Value="public string Verbosity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Verbosity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Vbc.Verbosity" />
      <MemberSignature Language="VB.NET" Value="Public Property Verbosity As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Verbosity { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afac-188">Dient zum Abrufen oder Festlegen der Ausführlichkeit der Compilerausgabe. Der Wert kann <c>Quiet</c>, <c>Normal</c> oder <c>Verbose</c> (Ausführlich) sein.</span><span class="sxs-lookup"><span data-stu-id="8afac-188">Gets or sets the verbosity of the compiler’s output, which can be <c>Quiet</c>, <c>Normal</c>, or <c>Verbose</c>.</span></span></summary>
        <value><span data-ttu-id="8afac-189">Die Ausführlichkeit der Ausgabe des Compilers.</span><span class="sxs-lookup"><span data-stu-id="8afac-189">The verbosity of the compiler’s output.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afac-190">Ist die Standardeinstellung für den Ausführlichkeitsgrad `Normal`.</span><span class="sxs-lookup"><span data-stu-id="8afac-190">The default verbosity is `Normal`.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="WarningsAsErrors">
      <MemberSignature Language="C#" Value="public string WarningsAsErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WarningsAsErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Vbc.WarningsAsErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property WarningsAsErrors As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WarningsAsErrors { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afac-191">Ruft eine Liste mit Warnungen ab, die als Fehler behandelt werden sollen, oder legt diese Liste fest.</span><span class="sxs-lookup"><span data-stu-id="8afac-191">Gets or sets a list of warnings to treat as errors.</span></span></summary>
        <value><span data-ttu-id="8afac-192">Eine Liste mit Warnungen, die als Fehler behandelt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="8afac-192">A list of warnings to treat as errors.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="WarningsNotAsErrors">
      <MemberSignature Language="C#" Value="public string WarningsNotAsErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WarningsNotAsErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Vbc.WarningsNotAsErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property WarningsNotAsErrors As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WarningsNotAsErrors { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afac-193">Ruft eine Liste mit Warnungen ab, die nicht als Fehler behandelt werden sollen, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="8afac-193">Gets or sets a list of warnings that are not treated as errors.</span></span></summary>
        <value><span data-ttu-id="8afac-194">Eine Liste mit Warnungen, die nicht als Fehler behandelt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="8afac-194">A list of warnings that are not treated as errors.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>