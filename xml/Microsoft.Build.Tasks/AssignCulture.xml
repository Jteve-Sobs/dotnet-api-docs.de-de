<Type Name="AssignCulture" FullName="Microsoft.Build.Tasks.AssignCulture">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b37d2c545234cbea3da501c5add098a7e707ee74" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86635767" /></Metadata><TypeSignature Language="C#" Value="public class AssignCulture : Microsoft.Build.Tasks.TaskExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AssignCulture extends Microsoft.Build.Tasks.TaskExtension" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Tasks.AssignCulture" />
  <TypeSignature Language="VB.NET" Value="Public Class AssignCulture&#xA;Inherits TaskExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssignCulture : Microsoft::Build::Tasks::TaskExtension" />
  <TypeSignature Language="F#" Value="type AssignCulture = class&#xA;    inherit TaskExtension" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.v3.5</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Tasks.TaskExtension</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6d57a-101">Klasse: AssignCulture</span><span class="sxs-lookup"><span data-stu-id="6d57a-101">Class: AssignCulture</span></span> 
<span data-ttu-id="6d57a-102">Dieser Task nimmt eine Liste von Ressourcendateinamen und legt ein Attribut fest, das den Kulturnamen enthält, der in den Dateinamen eingebettet ist:</span><span class="sxs-lookup"><span data-stu-id="6d57a-102">This task takes a list of resource file names and sets an attribute that contains the culture name embedded in the file name:</span></span> 
<span data-ttu-id="6d57a-103">MyResources.fr.resx     ==&gt; Culture='fr'</span><span class="sxs-lookup"><span data-stu-id="6d57a-103">MyResources.fr.resx     ==&gt; Culture='fr'</span></span> 
<span data-ttu-id="6d57a-104">Der Task kann auch eine Liste von „kulturneutralen“ Dateinamen zurückgeben, zum Beispiel:</span><span class="sxs-lookup"><span data-stu-id="6d57a-104">The task can also return a list of "Culture-neutral" file names, like:</span></span> 
<span data-ttu-id="6d57a-105">MyGlyph.fr.bmp          ==&gt; MyGlyph.bmp [Culture='fr']</span><span class="sxs-lookup"><span data-stu-id="6d57a-105">MyGlyph.fr.bmp          ==&gt; MyGlyph.bmp [Culture='fr']</span></span> 
<span data-ttu-id="6d57a-106">Dies liegt daran, dass auf eingebettete Ressourcen auf diese Weise verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="6d57a-106">This is because embedded resources are referred to this way.</span></span>
            
<span data-ttu-id="6d57a-107">Für diesen Task gibt es viele Ausnahmefälle.</span><span class="sxs-lookup"><span data-stu-id="6d57a-107">There are plenty of corner cases with this task.</span></span> <span data-ttu-id="6d57a-108">Weitere Informationen finden Sie im Komponententest.</span><span class="sxs-lookup"><span data-stu-id="6d57a-108">See the unit test for more details.</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssignCulture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.AssignCulture.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssignCulture();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d57a-109">Initialisiert eine neue Instanz der <see cref="T:Microsoft.Build.Tasks.AssignCulture" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="6d57a-109">Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.AssignCulture" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AssignedFiles">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] AssignedFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] AssignedFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.AssignCulture.AssignedFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssignedFiles As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ AssignedFiles { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssignedFiles : Microsoft.Build.Framework.ITaskItem[]" Usage="Microsoft.Build.Tasks.AssignCulture.AssignedFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Build.Framework.Output]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Build.Framework.Output&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d57a-110">Diese ausgehende Liste von Dateien stimmt exakt mit der eingehenden Files-Liste überein, mit der Ausnahme, dass der Attributname „Culture“ hinzugefügt wird, wenn ein bestimmter Dateiname das folgende Format aufweist:</span><span class="sxs-lookup"><span data-stu-id="6d57a-110">This outgoing list of files is exactly the same as the incoming Files list except that an attribute name "Culture" will have been added if the particular file name is in the form:</span></span> 
<span data-ttu-id="6d57a-111">MyResource.&lt;any-valid-culture-id&gt;.resx</span><span class="sxs-lookup"><span data-stu-id="6d57a-111">MyResource.&lt;any-valid-culture-id&gt;.resx</span></span> 
<span data-ttu-id="6d57a-112">Der Wert der Kultur ist dann „&lt;any-valid-culture-id&gt;“.</span><span class="sxs-lookup"><span data-stu-id="6d57a-112">The value of Culture will be "&lt;any-valid-culture-id&gt;".</span></span>
            
<span data-ttu-id="6d57a-113">Wenn das eingehende Element von Files bereits über ein Culture-Attribut verfügt, dann wird stattdessen das ursprüngliche Attribut verwendet.</span><span class="sxs-lookup"><span data-stu-id="6d57a-113">If the incoming item from Files already has a Culture attribute then that original attribute is used instead.</span></span></summary>
        <value><span data-ttu-id="6d57a-114">Die Liste von <see cref="P:Microsoft.Build.Tasks.AssignCulture.Files" /> mit einem <c>Kultur</c> -Metadateneintrag, der zu jedem Element hinzugefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="6d57a-114">The list of <see cref="P:Microsoft.Build.Tasks.AssignCulture.Files" />, with a <c>Culture</c> metadata entry added to each item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d57a-115">Wenn das eingehende Element aus der- <xref:Microsoft.Build.Tasks.AssignCulture.Files%2A> Eigenschaft bereits einen `Culture` Metadateneintrag enthält, wird der ursprüngliche Metadateneintrag verwendet.</span><span class="sxs-lookup"><span data-stu-id="6d57a-115">If the incoming item from the <xref:Microsoft.Build.Tasks.AssignCulture.Files%2A> property already contains a `Culture` metadata entry, the original metadata entry is used.</span></span>  
  
 <span data-ttu-id="6d57a-116">Die Aufgabe weist nur dann einen `Culture`-Metadateneintrag zu, wenn der Dateiname einen gültigen Kulturbezeichner enthält.</span><span class="sxs-lookup"><span data-stu-id="6d57a-116">The task only assigns a `Culture` metadata entry if the file name contains a valid culture identifier.</span></span> <span data-ttu-id="6d57a-117">Der Kulturbezeichner muss zwischen den letzten beiden Punkten im Dateinamen platziert werden.</span><span class="sxs-lookup"><span data-stu-id="6d57a-117">The culture identifier must be between the last two dots in the filename.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AssignedFilesWithCulture">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] AssignedFilesWithCulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] AssignedFilesWithCulture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithCulture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssignedFilesWithCulture As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ AssignedFilesWithCulture { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssignedFilesWithCulture : Microsoft.Build.Framework.ITaskItem[]" Usage="Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Build.Framework.Output]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Build.Framework.Output&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d57a-118">Hierbei handelt es sich um eine Teilmenge von AssignedFiles, die über alle Elemente verfügt, denen ein Culture-Attribut zugewiesen wurde.</span><span class="sxs-lookup"><span data-stu-id="6d57a-118">This is a subset of AssignedFiles that has all of the items that ended up have a Culture assigned to them.</span></span> <span data-ttu-id="6d57a-119">Dazu gehören Elemente, die bereits über ein Culture-Attribut in der Files-Liste verfügen, sowie Elemente, denen ein Culture-Attribut zugewiesen wurde, weil eine gültige Kultur-ID in ihren Dateinamen eingebettet war.</span><span class="sxs-lookup"><span data-stu-id="6d57a-119">This includes items that already had a Culture in the incoming Files list as well as items that were assigned a Culture because they had a valid culture ID embedded in their file name.</span></span>
            
<span data-ttu-id="6d57a-120">Folgendes gilt immer:</span><span class="sxs-lookup"><span data-stu-id="6d57a-120">The following is always true:</span></span> 
<span data-ttu-id="6d57a-121">AssignedFiles = AssignedFilesWithCulture + AssignedFilesWithNoCulture</span><span class="sxs-lookup"><span data-stu-id="6d57a-121">AssignedFiles = AssignedFilesWithCulture + AssignedFilesWithNoCulture</span></span></summary>
        <value><span data-ttu-id="6d57a-122">Eine Teilmenge der <see cref="P:Microsoft.Build.Tasks.AssignCulture.AssignedFiles" /> , die über einen <c>Kultur</c> Metadateneintrag verfügen.</span><span class="sxs-lookup"><span data-stu-id="6d57a-122">A subset of <see cref="P:Microsoft.Build.Tasks.AssignCulture.AssignedFiles" /> that have a <c>Culture</c> metadata entry.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AssignedFilesWithNoCulture">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] AssignedFilesWithNoCulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] AssignedFilesWithNoCulture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithNoCulture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssignedFilesWithNoCulture As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ AssignedFilesWithNoCulture { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssignedFilesWithNoCulture : Microsoft.Build.Framework.ITaskItem[]" Usage="Microsoft.Build.Tasks.AssignCulture.AssignedFilesWithNoCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Build.Framework.Output]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Build.Framework.Output&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d57a-123">Hierbei handelt es sich um eine Teilmenge von AssignedFiles, die über alle Elemente verfügt, denen kein Culture-Attribut zugewiesen wurde.</span><span class="sxs-lookup"><span data-stu-id="6d57a-123">This is a subset of AssignedFiles that has all of the items that ended up with no Culture assigned to them.</span></span> 
            
<span data-ttu-id="6d57a-124">Folgendes gilt immer:</span><span class="sxs-lookup"><span data-stu-id="6d57a-124">The following is always true:</span></span> 
<span data-ttu-id="6d57a-125">AssignedFiles = AssignedFilesWithCulture + AssignedFilesWithNoCulture</span><span class="sxs-lookup"><span data-stu-id="6d57a-125">AssignedFiles = AssignedFilesWithCulture + AssignedFilesWithNoCulture</span></span></summary>
        <value><span data-ttu-id="6d57a-126">Eine Teilmenge der <see cref="P:Microsoft.Build.Tasks.AssignCulture.AssignedFiles" /> , die nicht über einen <c>Culture</c> -Metadateneintrag verfügen.</span><span class="sxs-lookup"><span data-stu-id="6d57a-126">A subset of <see cref="P:Microsoft.Build.Tasks.AssignCulture.AssignedFiles" /> that do not have a <c>Culture</c> metadata entry.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CultureNeutralAssignedFiles">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] CultureNeutralAssignedFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] CultureNeutralAssignedFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.AssignCulture.CultureNeutralAssignedFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CultureNeutralAssignedFiles As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ CultureNeutralAssignedFiles { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CultureNeutralAssignedFiles : Microsoft.Build.Framework.ITaskItem[]" Usage="Microsoft.Build.Tasks.AssignCulture.CultureNeutralAssignedFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Build.Framework.Output]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Build.Framework.Output&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d57a-127">Diese Liste enthält die gleiche Anzahl von Elementen wie die Files-Liste oder die AssignedFiles-Liste.</span><span class="sxs-lookup"><span data-stu-id="6d57a-127">This list has the same number of items as the Files list or the AssignedFiles list.</span></span>
            
<span data-ttu-id="6d57a-128">Elemente in dieser Liste verfügen über den Dateinamen aus Files oder AssignedFiles, jedoch wird die Kultur entfernt, wenn diese in den Dateinamen eingebettet war.</span><span class="sxs-lookup"><span data-stu-id="6d57a-128">Items in this list have the file name from Files or AssignedFiles but with the culture stripped if it was embedded in the file name.</span></span>
            
<span data-ttu-id="6d57a-129">Wenn das eingehende Element in Files beispielsweise wie folgt lautet:</span><span class="sxs-lookup"><span data-stu-id="6d57a-129">So for example, if the incoming item in Files was:</span></span> 
<span data-ttu-id="6d57a-130">MyBitmap.fr.bmp</span><span class="sxs-lookup"><span data-stu-id="6d57a-130">MyBitmap.fr.bmp</span></span> 
<span data-ttu-id="6d57a-131">dann lautet die entsprechende Datei in CultureNeutralAssignedFiles wie folgt:</span><span class="sxs-lookup"><span data-stu-id="6d57a-131">then the corresponding file in CultureNeutralAssignedFiles will be:</span></span> 
<span data-ttu-id="6d57a-132">MyBitmap.bmp</span><span class="sxs-lookup"><span data-stu-id="6d57a-132">MyBitmap.bmp</span></span> 
<span data-ttu-id="6d57a-133">Die Kultur wird nur entfernt, wenn es sich um einen gültigen Kulturbezeichner handelt.</span><span class="sxs-lookup"><span data-stu-id="6d57a-133">The culture will only be stripped if it is a valid culture identifier.</span></span>
<span data-ttu-id="6d57a-134">Beispielsweise würde</span><span class="sxs-lookup"><span data-stu-id="6d57a-134">So for example,</span></span> 
<span data-ttu-id="6d57a-135">MyCrazyFile.XX.txt</span><span class="sxs-lookup"><span data-stu-id="6d57a-135">MyCrazyFile.XX.txt</span></span> 
<span data-ttu-id="6d57a-136">in genau demselben Dateinamen resultieren:</span><span class="sxs-lookup"><span data-stu-id="6d57a-136">will result in exactly the same file name:</span></span> 
<span data-ttu-id="6d57a-137">MyCrazyFile.XX.txt</span><span class="sxs-lookup"><span data-stu-id="6d57a-137">MyCrazyFile.XX.txt</span></span> 
<span data-ttu-id="6d57a-138">Das liegt daran, dass „XX“ kein gültiger Kulturbezeichner ist.</span><span class="sxs-lookup"><span data-stu-id="6d57a-138">because 'XX' is not a valid culture identifier.</span></span></summary>
        <value><span data-ttu-id="6d57a-139">Eine Teilmenge der <see cref="P:Microsoft.Build.Tasks.AssignCulture.AssignedFiles" /> , die nicht über einen <c>Culture</c> -Metadateneintrag verfügen.</span><span class="sxs-lookup"><span data-stu-id="6d57a-139">A subset of <see cref="P:Microsoft.Build.Tasks.AssignCulture.AssignedFiles" /> that do not have a <c>Culture</c> metadata entry.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public override bool Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.AssignCulture.Execute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Execute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Execute();" />
      <MemberSignature Language="F#" Value="override this.Execute : unit -&gt; bool" Usage="assignCulture.Execute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d57a-140">„Execute“.</span><span class="sxs-lookup"><span data-stu-id="6d57a-140">Execute.</span></span></summary>
        <returns />
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Files">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] Files { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] Files" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.AssignCulture.Files" />
      <MemberSignature Language="VB.NET" Value="Public Property Files As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ Files { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Files : Microsoft.Build.Framework.ITaskItem[] with get, set" Usage="Microsoft.Build.Tasks.AssignCulture.Files" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Build.Framework.Required]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Build.Framework.Required&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d57a-141">Hierbei handelt es sich um die eingehende Liste der Dateien, denen eine Kultur zugewiesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="6d57a-141">The incoming list of files to assign a culture to.</span></span></summary>
        <value><span data-ttu-id="6d57a-142">Die Liste der Dateien mit eingebetteten Kulturnamen, denen eine Kultur zugewiesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="6d57a-142">The list of files with embedded culture names to assign a culture to.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
