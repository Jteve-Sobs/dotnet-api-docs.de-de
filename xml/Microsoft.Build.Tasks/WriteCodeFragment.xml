<Type Name="WriteCodeFragment" FullName="Microsoft.Build.Tasks.WriteCodeFragment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b345ae89008cefb6c86fc58564fdaf13392e413e" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86625445" /></Metadata><TypeSignature Language="C#" Value="public class WriteCodeFragment : Microsoft.Build.Tasks.TaskExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WriteCodeFragment extends Microsoft.Build.Tasks.TaskExtension" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Tasks.WriteCodeFragment" />
  <TypeSignature Language="VB.NET" Value="Public Class WriteCodeFragment&#xA;Inherits TaskExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class WriteCodeFragment : Microsoft::Build::Tasks::TaskExtension" />
  <TypeSignature Language="F#" Value="type WriteCodeFragment = class&#xA;    inherit TaskExtension" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Tasks.TaskExtension</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="894ea-101">Generiert eine temporäre Codedatei mit dem angegebenen generierten Codefragment.</span><span class="sxs-lookup"><span data-stu-id="894ea-101">Generates a temporary code file with the specified generated code fragment.</span></span>
<span data-ttu-id="894ea-102">Die Datei wird nicht gelöscht.</span><span class="sxs-lookup"><span data-stu-id="894ea-102">Does not delete the file.</span></span></summary>
    <remarks>To be added.</remarks>
    <comment><span data-ttu-id="894ea-103">Unterstützt derzeit nur das Schreiben von .net-Attributen.</span><span class="sxs-lookup"><span data-stu-id="894ea-103">Currently only supports writing .NET attributes.</span></span></comment>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WriteCodeFragment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.WriteCodeFragment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WriteCodeFragment();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="894ea-104">Erstellt eine temporäre Codedatei mit dem angegebenen generierten Codefragment.</span><span class="sxs-lookup"><span data-stu-id="894ea-104">Creates a temporary code file with the specified generated code fragment.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyAttributes">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] AssemblyAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] AssemblyAttributes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.WriteCodeFragment.AssemblyAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property AssemblyAttributes As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ AssemblyAttributes { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyAttributes : Microsoft.Build.Framework.ITaskItem[] with get, set" Usage="Microsoft.Build.Tasks.WriteCodeFragment.AssemblyAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="894ea-105">Diese Eigenschaft ist eine Beschreibung der zu schreibenden Attribute.</span><span class="sxs-lookup"><span data-stu-id="894ea-105">Description of attributes to write.</span></span>
<span data-ttu-id="894ea-106">Der vollständige Typname des Attributs lautet „Item include“.</span><span class="sxs-lookup"><span data-stu-id="894ea-106">Item include is the full type name of the attribute.</span></span>
<span data-ttu-id="894ea-107">Zum Beispiel: „System.AssemblyVersionAttribute“.</span><span class="sxs-lookup"><span data-stu-id="894ea-107">For example, "System.AssemblyVersionAttribute".</span></span>
<span data-ttu-id="894ea-108">Jede Metadatenkomponente stellt das Name/Wert-Paar eines Parameters dar, der dem Typ System.String entsprechen muss.</span><span class="sxs-lookup"><span data-stu-id="894ea-108">Each piece of metadata is the name-value pair of a parameter, which must be of type System.String.</span></span>
<span data-ttu-id="894ea-109">Einige Attribute lassen nur positionelle Konstruktorargumente zu, oder der Benutzer bevorzugt diese möglicherweise.</span><span class="sxs-lookup"><span data-stu-id="894ea-109">Some attributes only allow positional constructor arguments, or the user may just prefer them.</span></span>
<span data-ttu-id="894ea-110">Um solche festzulegen, verwenden Sie Metadatennamen wie "_Parameter1", "_Parameter2" usw. Wenn Sie ein Parameterindex übersprungen wird, ist es ein Fehler auf.</span><span class="sxs-lookup"><span data-stu-id="894ea-110">To set those, use metadata names like "_Parameter1", "_Parameter2" etc. If a parameter index is skipped, it's an error.</span></span></summary>
        <value><span data-ttu-id="894ea-111">Ein Element, dessen Wert der vollständige Typname des Attributs ist.</span><span class="sxs-lookup"><span data-stu-id="894ea-111">An item whose value is the full type name of the attribute.</span></span> <span data-ttu-id="894ea-112">Beispiel: "System. AssemblyVersionAttribute".</span><span class="sxs-lookup"><span data-stu-id="894ea-112">For example, "System.AssemblyVersionAttribute".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="894ea-113">Jedes Metadatenelement ist das Name-Wert-Paar eines Parameters, der vom Typ "System. String" sein muss.</span><span class="sxs-lookup"><span data-stu-id="894ea-113">Each piece of metadata is the name-value pair of a parameter, which must be of type System.String.</span></span>  
  
 <span data-ttu-id="894ea-114">Einige Attribute lassen nur positionelle Konstruktorargumente zu, oder der Benutzer bevorzugt Sie.</span><span class="sxs-lookup"><span data-stu-id="894ea-114">Some attributes only allow positional constructor arguments, or the user may just prefer them.</span></span>  <span data-ttu-id="894ea-115">Um solche festzulegen, verwenden Sie Metadatennamen wie "_Parameter1", "_Parameter2" usw. Wenn Sie ein Parameterindex übersprungen wird, ist es ein Fehler auf.</span><span class="sxs-lookup"><span data-stu-id="894ea-115">To set those, use metadata names like "_Parameter1", "_Parameter2" etc. If a parameter index is skipped, it's an error.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public override bool Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.WriteCodeFragment.Execute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Execute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Execute();" />
      <MemberSignature Language="F#" Value="override this.Execute : unit -&gt; bool" Usage="writeCodeFragment.Execute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="894ea-116">Der Haupteinstiegspunkt</span><span class="sxs-lookup"><span data-stu-id="894ea-116">Main entry point.</span></span></summary>
        <returns><span data-ttu-id="894ea-117"><see langword="true" />, wenn das Codefragment geschrieben wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="894ea-117"><see langword="true" /> if the code fragment was written; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.WriteCodeFragment.Language" />
      <MemberSignature Language="VB.NET" Value="Public Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Language : string with get, set" Usage="Microsoft.Build.Tasks.WriteCodeFragment.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Build.Framework.Required]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Build.Framework.Required&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="894ea-118">Diese Eigenschaft ist die Sprache des zu generierenden Codes.</span><span class="sxs-lookup"><span data-stu-id="894ea-118">Language of code to generate.</span></span>
<span data-ttu-id="894ea-119">Bei dem Namen der Sprache kann es sich um eine beliebige Sprache handeln, für die ein CodeDom-Anbieter verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="894ea-119">Language name can be any language for which a CodeDom provider is available.</span></span> <span data-ttu-id="894ea-120">Zum Beispiel „C#“ oder „VisualBasic“.</span><span class="sxs-lookup"><span data-stu-id="894ea-120">For example, "C#", "VisualBasic".</span></span>
<span data-ttu-id="894ea-121">Die ausgegebene Datei verfügt dann über die Standarderweiterung für diese Sprache.</span><span class="sxs-lookup"><span data-stu-id="894ea-121">Emitted file will have the default extension for that language.</span></span></summary>
        <value><span data-ttu-id="894ea-122">Die Sprache des zu generierenden Codes.</span><span class="sxs-lookup"><span data-stu-id="894ea-122">The language of code to generate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="894ea-123">Der Sprachen Name kann eine beliebige Sprache sein, für die ein CodeDOM-Anbieter verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="894ea-123">Language name can be any language for which a CodeDom provider is available.</span></span> <span data-ttu-id="894ea-124">Beispiel: "c#", "VisualBasic".</span><span class="sxs-lookup"><span data-stu-id="894ea-124">For example, "C#", "VisualBasic".</span></span> <span data-ttu-id="894ea-125">Die ausgegebene Datei erhält die Standard Erweiterung für diese Sprache.</span><span class="sxs-lookup"><span data-stu-id="894ea-125">The file emitted is given the default extension for that language.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputDirectory">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem OutputDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem OutputDirectory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.WriteCodeFragment.OutputDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property OutputDirectory As ITaskItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::ITaskItem ^ OutputDirectory { Microsoft::Build::Framework::ITaskItem ^ get(); void set(Microsoft::Build::Framework::ITaskItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OutputDirectory : Microsoft.Build.Framework.ITaskItem with get, set" Usage="Microsoft.Build.Tasks.WriteCodeFragment.OutputDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="894ea-126">Diese Eigenschaft beschreibt den Zielordner für den generierten Code.</span><span class="sxs-lookup"><span data-stu-id="894ea-126">Destination folder for the generated code.</span></span>
<span data-ttu-id="894ea-127">In der Regel handelt es sich dabei um den Zwischenordner.</span><span class="sxs-lookup"><span data-stu-id="894ea-127">Typically the intermediate folder.</span></span></summary>
        <value><span data-ttu-id="894ea-128">Der Zielordner für den generierten Code.</span><span class="sxs-lookup"><span data-stu-id="894ea-128">The destination folder for the generated code.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputFile">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem OutputFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem OutputFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.WriteCodeFragment.OutputFile" />
      <MemberSignature Language="VB.NET" Value="Public Property OutputFile As ITaskItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::ITaskItem ^ OutputFile { Microsoft::Build::Framework::ITaskItem ^ get(); void set(Microsoft::Build::Framework::ITaskItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OutputFile : Microsoft.Build.Framework.ITaskItem with get, set" Usage="Microsoft.Build.Tasks.WriteCodeFragment.OutputFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.Core</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.Build.Framework.Output]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.Build.Framework.Output&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="894ea-129">Diese Eigenschaft beschreibt den Pfad zur generierten Datei.</span><span class="sxs-lookup"><span data-stu-id="894ea-129">The path to the file that was generated.</span></span>
<span data-ttu-id="894ea-130">Wenn diese Eigenschaft und ein Dateiname festgelegt werden, wird der Zielordner vorangestellt.</span><span class="sxs-lookup"><span data-stu-id="894ea-130">If this is set, and a file name, the destination folder will be prepended.</span></span>
<span data-ttu-id="894ea-131">Wenn diese Eigenschaft und ein Stammverzeichnis festgelegt werden, wird der Zielordner ignoriert.</span><span class="sxs-lookup"><span data-stu-id="894ea-131">If this is set, and is rooted, the destination folder will be ignored.</span></span>
<span data-ttu-id="894ea-132">Wenn diese Eigenschaft nicht festgelegt wird, werden der Zielordner und ein beliebiger Dateiname verwendet und die Standarderweiterung für die Sprache wird ausgewählt.</span><span class="sxs-lookup"><span data-stu-id="894ea-132">If this is not set, the destination folder will be used, an arbitrary file name will be used, and the default extension for the language selected.</span></span></summary>
        <value><span data-ttu-id="894ea-133">Der Pfad zu der Datei, die generiert wurde.</span><span class="sxs-lookup"><span data-stu-id="894ea-133">The path to the file that was generated.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="894ea-134">Wenn diese Eigenschaft mit einem Dateinamen festgelegt wird, wird der Zielordner vorangestellt.</span><span class="sxs-lookup"><span data-stu-id="894ea-134">If setting this property with a file name, the destination folder will be prepended.</span></span>  
  
 <span data-ttu-id="894ea-135">Wenn diese Eigenschaft mit einem rootwert festgelegt wird, wird der Zielordner ignoriert.</span><span class="sxs-lookup"><span data-stu-id="894ea-135">If setting this property with a rooted value, the destination folder will be ignored.</span></span>  
  
 <span data-ttu-id="894ea-136">Wenn diese Eigenschaft nicht festgelegt ist, verwendet "Write Code Fragment" den Zielordner, einen beliebigen Dateinamen und die Standard Erweiterung für die ausgewählte Sprache.</span><span class="sxs-lookup"><span data-stu-id="894ea-136">If this property is not set, WriteCodeFragment uses the destination folder, an arbitrary file name, and the default extension for the language selected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
