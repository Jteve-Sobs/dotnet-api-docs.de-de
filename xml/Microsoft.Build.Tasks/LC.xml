<Type Name="LC" FullName="Microsoft.Build.Tasks.LC">
  <TypeSignature Language="C#" Value="public class LC : Microsoft.Build.Tasks.ToolTaskExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LC extends Microsoft.Build.Tasks.ToolTaskExtension" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Tasks.LC" />
  <TypeSignature Language="VB.NET" Value="Public Class LC&#xA;Inherits ToolTaskExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class LC : Microsoft::Build::Tasks::ToolTaskExtension" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Tasks.ToolTaskExtension</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a3b5b-101">Implementiert die <c>LC</c>-Aufgabe.</span><span class="sxs-lookup"><span data-stu-id="a3b5b-101">Implements the <c>LC</c> task.</span></span> <span data-ttu-id="a3b5b-102">Verwenden Sie das <c>LC</c>-Element in der Projektdatei, um diese Aufgabe zu erstellen und auszuführen.</span><span class="sxs-lookup"><span data-stu-id="a3b5b-102">Use the <c>LC</c> element in your project file to create and execute this task.</span></span> <span data-ttu-id="a3b5b-103">Informationen zu Verwendung und Parametern finden Sie unter [LC-Aufgabe](http://msdn.microsoft.com/library/d5a53472-6f2a-42b8-a6db-593ca99c9790).</span><span class="sxs-lookup"><span data-stu-id="a3b5b-103">For usage and parameter information, see [LC Task](http://msdn.microsoft.com/library/d5a53472-6f2a-42b8-a6db-593ca99c9790).</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LC ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.LC.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LC();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3b5b-104">Initialisiert eine neue Instanz der <see cref="T:Microsoft.Build.Tasks.LC" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="a3b5b-104">Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.LC" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddCommandLineCommands">
      <MemberSignature Language="C#" Value="protected internal override void AddCommandLineCommands (Microsoft.Build.Tasks.CommandLineBuilderExtension commandLine);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void AddCommandLineCommands(class Microsoft.Build.Tasks.CommandLineBuilderExtension commandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.LC.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub AddCommandLineCommands (commandLine As CommandLineBuilderExtension)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void AddCommandLineCommands(Microsoft::Build::Tasks::CommandLineBuilderExtension ^ commandLine);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandLine" Type="Microsoft.Build.Tasks.CommandLineBuilderExtension" />
      </Parameters>
      <Docs>
        <param name="commandLine"><span data-ttu-id="a3b5b-105">Befehlszeilen-Generator, dem Argumente hinzugefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="a3b5b-105">Command line builder to add arguments to.</span></span></param>
        <summary><span data-ttu-id="a3b5b-106">Generiert Befehlszeilenargumente, die vom License Compiler-Tool (lc.exe) direkt in der Befehlszeile und nicht aus einer Antwortdatei ausgeführt werden müssen.</span><span class="sxs-lookup"><span data-stu-id="a3b5b-106">Generates command line arguments that the license compiler tool (lc.exe) must run directly from the command line and not from a response file.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GenerateFullPathToTool">
      <MemberSignature Language="C#" Value="protected override string GenerateFullPathToTool ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GenerateFullPathToTool() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.LC.GenerateFullPathToTool" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GenerateFullPathToTool () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GenerateFullPathToTool();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3b5b-107">Gibt den vollständigen Dateipfad des License Compiler-Tools (lc.exe) zurück.</span><span class="sxs-lookup"><span data-stu-id="a3b5b-107">Returns the full file path of the license compiler tool (lc.exe).</span></span></summary>
        <returns><span data-ttu-id="a3b5b-108">Der vollständige Dateipfad des License Compiler-Tools oder <see langword="null" />, wenn die Datei des License Compiler-Tools nicht gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="a3b5b-108">The full file path of the license compiler tool, or <see langword="null" /> if the license compiler tool file is not found.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LicenseTarget">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem LicenseTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem LicenseTarget" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.LC.LicenseTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property LicenseTarget As ITaskItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::ITaskItem ^ LicenseTarget { Microsoft::Build::Framework::ITaskItem ^ get(); void set(Microsoft::Build::Framework::ITaskItem ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Required</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3b5b-109">Ruft die ausführbare Datei ab oder legt sie fest, für die die LICENSES-Dateien generiert werden.</span><span class="sxs-lookup"><span data-stu-id="a3b5b-109">Gets or sets the executable for which the .licenses files are generated.</span></span></summary>
        <value><span data-ttu-id="a3b5b-110">Die ausführbare Datei, für die die LICENSES-Dateien generiert werden.</span><span class="sxs-lookup"><span data-stu-id="a3b5b-110">The executable for which the .licenses files are generated.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NoLogo">
      <MemberSignature Language="C#" Value="public bool NoLogo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoLogo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.LC.NoLogo" />
      <MemberSignature Language="VB.NET" Value="Public Property NoLogo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoLogo { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3b5b-111">Ruft einen booleschen Wert ab oder legt einen booleschen Wert fest, der angibt, ob die Anzeige des Microsoft-Startbanners unterdrückt werden soll.</span><span class="sxs-lookup"><span data-stu-id="a3b5b-111">Gets or sets a Boolean value that specifies whether to suppress the Microsoft startup banner display.</span></span></summary>
        <value>
          <span data-ttu-id="a3b5b-112"><see langword="true" />, wenn die Anzeige von Microsoft-Startbannern unterdrückt wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3b5b-112"><see langword="true" /> if the Microsoft startup banner display is suppressed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="OutputDirectory">
      <MemberSignature Language="C#" Value="public string OutputDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OutputDirectory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.LC.OutputDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property OutputDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OutputDirectory { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3b5b-113">Ruft das Verzeichnis ab, in dem die ausgegebene LICENSES-Datei gespeichert werden soll, oder legt dieses Verzeichnis fest.</span><span class="sxs-lookup"><span data-stu-id="a3b5b-113">Gets or sets the directory in which to place the output .licenses files.</span></span></summary>
        <value><span data-ttu-id="a3b5b-114">Das Verzeichnis, in dem die ausgegebene LICENSES-Datei gespeichert werden soll.</span><span class="sxs-lookup"><span data-stu-id="a3b5b-114">The directory in which to place the output .licenses files.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="OutputLicense">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem OutputLicense { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem OutputLicense" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.LC.OutputLicense" />
      <MemberSignature Language="VB.NET" Value="Public Property OutputLicense As ITaskItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::ITaskItem ^ OutputLicense { Microsoft::Build::Framework::ITaskItem ^ get(); void set(Microsoft::Build::Framework::ITaskItem ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Output</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3b5b-115">Ruft den Namen der LICENSES-Datei ab oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="a3b5b-115">Gets or sets the name of the .licenses file.</span></span></summary>
        <value><span data-ttu-id="a3b5b-116">Der Name der LICENSES-Datei.</span><span class="sxs-lookup"><span data-stu-id="a3b5b-116">The name of the .licenses file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3b5b-117">Wenn Sie keinen Namen angeben, wird der Name der LICX-Datei verwendet, und die LICENSES-Datei wird in dem Verzeichnis gespeichert, das die LICX-Datei enthält.</span><span class="sxs-lookup"><span data-stu-id="a3b5b-117">If you do not specify a name, the name of the .licx file is used and the .licenses file is placed in the directory that contains the .licx file.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ReferencedAssemblies">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] ReferencedAssemblies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] ReferencedAssemblies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.LC.ReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public Property ReferencedAssemblies As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ ReferencedAssemblies { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3b5b-118">Ruft die referenzierten Komponenten ab oder legt diese fest, die beim Generieren der LICENSES-Datei geladen werden.</span><span class="sxs-lookup"><span data-stu-id="a3b5b-118">Gets or sets the referenced components to load when generating the .licenses file.</span></span></summary>
        <value><span data-ttu-id="a3b5b-119">Die referenzierten Komponenten, die beim Generieren der LICENSES-Datei geladen werden.</span><span class="sxs-lookup"><span data-stu-id="a3b5b-119">The referenced components to load when generating the .licenses file.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SdkToolsPath">
      <MemberSignature Language="C#" Value="public string SdkToolsPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SdkToolsPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.LC.SdkToolsPath" />
      <MemberSignature Language="VB.NET" Value="Public Property SdkToolsPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SdkToolsPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3b5b-120">Ruft den zu verwendenden Pfad ab oder legt diesen fest, um nach SDK-Werkzeugen zu suchen.</span><span class="sxs-lookup"><span data-stu-id="a3b5b-120">Gets or sets the path to use to search for the SDK tools.</span></span></summary>
        <value><span data-ttu-id="a3b5b-121">Gibt den Pfad zu den SDK-Tools zurück.</span><span class="sxs-lookup"><span data-stu-id="a3b5b-121">Returns the SDK tools path.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Sources">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] Sources { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] Sources" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.LC.Sources" />
      <MemberSignature Language="VB.NET" Value="Public Property Sources As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ Sources { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Required</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3b5b-122">Ruft die Elemente mit lizenzierten Komponenten ab, die in die LICENSES-Datei aufgenommen werden sollen, oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="a3b5b-122">Gets or sets the items that contain licensed components to include in the .licenses file.</span></span></summary>
        <value><span data-ttu-id="a3b5b-123">Die Elemente mit lizenzierten Komponenten, die in die LICENSES-Datei aufgenommen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="a3b5b-123">The items that contain licensed components to include in the .licenses file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3b5b-124">Weitere Informationen finden Sie in der Dokumentation zum `/complist`-Schalter in [Lc.exe (License Compiler)](~/docs/framework/tools/lc-exe-license-compiler.md) (Lc.exe [Lizenzcompiler]).</span><span class="sxs-lookup"><span data-stu-id="a3b5b-124">For more information, see the documentation for the `/complist` switch in [Lc.exe (License Compiler)](~/docs/framework/tools/lc-exe-license-compiler.md).</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ToolName">
      <MemberSignature Language="C#" Value="protected override string ToolName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.LC.ToolName" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ToolName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ ToolName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3b5b-125">Ruft den Namen des Lizenzcompiler-Tools ab.</span><span class="sxs-lookup"><span data-stu-id="a3b5b-125">Gets the name of the license compiler tool.</span></span></summary>
        <value><span data-ttu-id="a3b5b-126">Der Name des Lizenzcompiler-Tools.</span><span class="sxs-lookup"><span data-stu-id="a3b5b-126">The name of the license compiler tool.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ValidateParameters">
      <MemberSignature Language="C#" Value="protected override bool ValidateParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ValidateParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.LC.ValidateParameters" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ValidateParameters () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ValidateParameters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3b5b-127">Überprüft Eingabeparameter und protokolliert Fehler oder Warnungen (sofern vorhanden).</span><span class="sxs-lookup"><span data-stu-id="a3b5b-127">Validates input parameters and logs errors or warnings, if any.</span></span> <span data-ttu-id="a3b5b-128">Gibt einen booleschen Wert zurück, der angibt, ob die Aufgabenausführung fortgesetzt werden soll.</span><span class="sxs-lookup"><span data-stu-id="a3b5b-128">Returns a Boolean value that indicates whether task execution should proceed.</span></span></summary>
        <returns>
          <span data-ttu-id="a3b5b-129"><see langword="true" />, wenn die Aufgabenausführung fortgesetzt werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3b5b-129"><see langword="true" /> if task execution should proceed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>