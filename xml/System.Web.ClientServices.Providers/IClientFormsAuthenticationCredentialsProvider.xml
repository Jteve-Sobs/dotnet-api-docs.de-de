<Type Name="IClientFormsAuthenticationCredentialsProvider" FullName="System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="af4b398dac1e9bc7b1ae671d05377cad085ae68a" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77101752" /></Metadata><TypeSignature Language="C#" Value="public interface IClientFormsAuthenticationCredentialsProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IClientFormsAuthenticationCredentialsProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IClientFormsAuthenticationCredentialsProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IClientFormsAuthenticationCredentialsProvider" />
  <TypeSignature Language="F#" Value="type IClientFormsAuthenticationCredentialsProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiert eine Methode, die die <see cref="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider" />-Klasse aufruft, um Benutzeranmeldeinformationen abzurufen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie die Formular Authentifizierung mit Client Anwendungsdiensten verwenden, können Sie einen Benutzernamen und ein Kennwort an die <xref:System.Web.Security.Membership.ValidateUser%2A>-Methode übergeben. Sie können auch leere Zeichenfolgen oder `null` als Parameter zur Verwendung an den Anmeldeinformationsanbieter Anmeldeinformationen übergeben. Ein Anmeldeinformationsanbieter ist eine Klasse, die Sie in der Anwendungskonfiguration bereitstellen und angeben. Einer Anmeldeinformationsanbieter-Klasse muss die <xref:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider>-Schnittstelle implementieren, die eine einzige Methode namens <xref:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider.GetCredentials%2A> enthält. Eine typische Implementierung der <xref:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider.GetCredentials%2A> Methode zeigt ein Dialogfeld zum Abrufen von Benutzereingaben an. Die Verwendung eines Anmeldeinformationsanbieters ermöglicht es Ihnen, ein einziges Anmeldedialogfeld für mehrere Anwendungen zu verwenden. Weitere Informationen finden Sie unter [Vorgehensweise: Implementieren einer Benutzeranmeldung mit Clientanwendungsdiensten](~/docs/framework/common-client-technologies/how-to-implement-user-login-with-client-application-services.md).  
  
   
  
## Examples  
 Im folgenden Beispielcode wird veranschaulicht, wie die <xref:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider.GetCredentials%2A>-Methode implementiert wird, die das einzige Element in dieser Schnittstelle ist. In diesem Beispiel ist die <xref:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider.GetCredentials%2A>-Methode Teil einer Anmelde Dialogfeld-Klasse. Diese Methode zeigt das Dialogfeld an und gibt dann eine <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials> Instanz zurück, die mit den vom Benutzer angegebenen Werten initialisiert wurde.  
  
 [!code-csharp[ClientApplicationServices#210](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Login.cs#210)]
 [!code-vb[ClientApplicationServices#210](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Login.vb#210)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider" />
    <altmember cref="M:System.Web.Security.Membership.ValidateUser(System.String,System.String)" />
    <altmember cref="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">Clientanwendungsdienste</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384312(v=vs.100)">Gewusst wie: Konfigurieren von Clientanwendungsdiensten</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384313(v=vs.100)">Gewusst wie: Implementieren der Benutzeranmeldung und Abmelden mit Client Anwendungsdienste</related>
  </Docs>
  <Members>
    <Member MemberName="GetCredentials">
      <MemberSignature Language="C#" Value="public System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials GetCredentials ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials GetCredentials() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider.GetCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCredentials () As ClientFormsAuthenticationCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::ClientServices::Providers::ClientFormsAuthenticationCredentials ^ GetCredentials();" />
      <MemberSignature Language="F#" Value="abstract member GetCredentials : unit -&gt; System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials" Usage="iClientFormsAuthenticationCredentialsProvider.GetCredentials " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft Benutzeranmeldeinformationen ab.</summary>
        <returns>Die Benutzeranmeldeinformationen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie die Formular Authentifizierung mit Client Anwendungsdiensten verwenden, können Sie einen Benutzernamen und ein Kennwort an die <xref:System.Web.Security.Membership.ValidateUser%2A>-Methode übergeben. Sie können auch leere Zeichenfolgen oder `null` als Parameter zur Verwendung an den Anmeldeinformationsanbieter Anmeldeinformationen übergeben. Ein Anmeldeinformationsanbieter ist eine Klasse, die Sie in der Anwendungskonfiguration bereitstellen und angeben. Eine Anmelde Informationsanbieter-Klasse muss die <xref:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider>-Schnittstelle implementieren, die über eine einzige Methode namens <xref:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider.GetCredentials%2A>verfügt. Eine typische Implementierung der <xref:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider.GetCredentials%2A> Methode zeigt ein Dialogfeld zum Abrufen von Benutzereingaben an. Die Verwendung eines Anmeldeinformationsanbieters ermöglicht es Ihnen, ein einziges Anmeldedialogfeld für mehrere Anwendungen zu verwenden. Weitere Informationen finden Sie unter [Vorgehensweise: Implementieren einer Benutzeranmeldung mit Clientanwendungsdiensten](~/docs/framework/common-client-technologies/how-to-implement-user-login-with-client-application-services.md).  
  
   
  
## Examples  
 Im folgenden Beispielcode wird veranschaulicht, wie die <xref:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider.GetCredentials%2A>-Methode implementiert wird. In diesem Beispiel ist die <xref:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider.GetCredentials%2A>-Methode Teil einer Anmelde Dialogfeld-Klasse. Diese Methode zeigt das Dialogfeld an und gibt dann eine <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials> Instanz zurück, die mit den vom Benutzer angegebenen Werten initialisiert wurde.  
  
 [!code-csharp[ClientApplicationServices#210](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Login.cs#210)]
 [!code-vb[ClientApplicationServices#210](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Login.vb#210)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider" />
        <altmember cref="M:System.Web.Security.Membership.ValidateUser(System.String,System.String)" />
        <altmember cref="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">Clientanwendungsdienste</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384312(v=vs.100)">Gewusst wie: Konfigurieren von Clientanwendungsdiensten</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384313(v=vs.100)">Gewusst wie: Implementieren der Benutzeranmeldung und Abmelden mit Client Anwendungsdienste</related>
      </Docs>
    </Member>
  </Members>
</Type>
