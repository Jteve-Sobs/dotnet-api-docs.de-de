<Type Name="ClientRoleProvider" FullName="System.Web.ClientServices.Providers.ClientRoleProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ad9f2fabf433d5e20df75575c4df8426a0ea724d" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70604682" /></Metadata><TypeSignature Language="C#" Value="public class ClientRoleProvider : System.Web.Security.RoleProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientRoleProvider extends System.Web.Security.RoleProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.ClientServices.Providers.ClientRoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientRoleProvider&#xA;Inherits RoleProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientRoleProvider : System::Web::Security::RoleProvider" />
  <TypeSignature Language="F#" Value="type ClientRoleProvider = class&#xA;    inherit RoleProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.RoleProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Ruft Rolleninformationen für Windows-basierte Anwendungen aus einem Microsoft Ajax-Rollendienst ab, die auf Windows basieren.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können Client Anwendungsdienste verwenden, um Rollen Informationen von einem vorhandenen Rollen Dienst abzurufen, indem Sie die Anwendung für <xref:System.Web.ClientServices.Providers.ClientRoleProvider> die Verwendung der-Klasse konfigurieren. Nach der Konfiguration können Sie ermitteln, ob sich ein authentifizierter Benutzer in einer bestimmten Rolle befindet, <xref:System.Security.Principal.IPrincipal.IsInRole%2A> indem Sie die <xref:System.Security.Principal.IPrincipal> -Methode der `static` aufrufen, die von der <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> -Eigenschaft zurückgegeben wird. Für Anwendungen, die für die Verwendung von Clientanwendungsdiensten konfiguriert sind, gibt diese Eigenschaft eine(n) <xref:System.Web.ClientServices.ClientRolePrincipal>aus. Da diese Klasse die <xref:System.Security.Principal.IPrincipal> -Schnittstelle implementiert, müssen Sie nicht explizit auf diese verweisen. Die <xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=nameWithType> -Methode ruft intern <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A?displayProperty=nameWithType> die-Methode auf.  
  
 Die <xref:System.Web.ClientServices.Providers.ClientRoleProvider> -Klasse ist ein Schreib geschützter Rollen Mitgliedschafts Anbieter, der Rollen Informationen für authentifizierte Benutzer von dem Rollen Dienst abruft, <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A> der durch die-Eigenschaft angegeben wird. Der Wert der <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A> Eigenschaft wird in der Regel zusammen mit anderen Konfigurations Werten aus der Anwendungs Konfigurationsdatei abgerufen. Weitere Informationen finden Sie unter [How to: Configure Client Application Services](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).  
  
 Sie können die aktuelle <xref:System.Web.ClientServices.Providers.ClientRoleProvider> Instanz über die `static` <xref:System.Web.Security.Roles.Provider%2A?displayProperty=nameWithType> -Eigenschaft abrufen.  
  
 Die <xref:System.Web.ClientServices.Providers.ClientRoleProvider> -Klasse unterstützt <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> nur <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> die-Methode <xref:System.Web.Security.RoleProvider> und die-Methode der abstrakten-Klasse. Wenn Sie eine dieser Methoden für einen bestimmten Benutzer aufrufen, prüft der Dienstanbieter zunächst den lokalen Daten Cache auf Rollen Informationen. Wenn der Cache keine Rollen Informationen enthält oder der Cache abgelaufen ist, ruft der Dienstanbieter die Rollen Informationen vom Rollen Dienst ab und fügt ihn dem Cache hinzu.  
  
 Sie können beim Konfigurieren von Client Anwendungsdiensten den Timeout Zeitraum für den Rollen Cache angeben. Um zu erzwingen <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> , dass die-Methode Rollen Daten aus dem-Dienst anstelle des lokalen Caches abruft, rufen Sie zuerst die <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache%2A> -Methode auf.  
  
 Sie können die <xref:System.Web.ClientServices.Providers.ClientRoleProvider> -Klasse nicht verwenden, um Rollen zu erstellen oder zu löschen oder um die Rollen Mitgliedschaft von Benutzern zu ändern. Um Rollen Informationen zu erstellen oder zu ändern, müssen Sie die Konfiguration des Rollen Dienstanbieter auf dem Server ändern.  
  
   
  
## Examples  
 Im folgenden Beispielcode wird veranschaulicht, wie diese Eigenschaft verwendet wird, um den Speicherort der Rollen Dienste Programm gesteuert festzulegen.  
  
 [!code-csharp[ClientApplicationServices#302](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#302)]
 [!code-vb[ClientApplicationServices#302](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#302)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
    <altmember cref="T:System.Web.ClientServices.ClientRolePrincipal" />
    <altmember cref="M:System.Web.ClientServices.ClientRolePrincipal.IsInRole(System.String)" />
    <altmember cref="P:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri" />
    <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)" />
    <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)" />
    <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache" />
    <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Clientanwendungsdienste</related>
    <related type="Article" href="https://msdn.microsoft.com/library/34a8688a-a32c-40d3-94be-c8e610c6a4e8">Gewusst wie: Konfigurieren von Clientanwendungsdiensten</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientRoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientRoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.ClientServices.Providers.ClientRoleProvider" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Clientanwendungsdienste</related>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public override void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.AddUsersToRoles : string[] * string[] -&gt; unit" Usage="clientRoleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Nicht verwendet.</param>
        <param name="roleNames">Nicht verwendet.</param>
        <summary>Diese Methode wird von dieser Klasse nicht verwendet.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Wird immer ausgelöst.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Clientanwendungsdienste</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft wird von dieser Klasse nicht verwendet.</summary>
        <value>Der Name der Anwendung für den Anbieter.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Festlegen dieser Eigenschaft hat keine Auswirkungen.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Clientanwendungsdienste</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public override void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.CreateRole : string -&gt; unit" Usage="clientRoleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nicht verwendet.</param>
        <summary>Diese Methode wird von dieser Klasse nicht verwendet.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Wird immer ausgelöst.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Clientanwendungsdienste</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="override this.DeleteRole : string * bool -&gt; bool" Usage="clientRoleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">Nicht verwendet.</param>
        <param name="throwOnPopulatedRole">Nicht verwendet.</param>
        <summary>Diese Methode wird von dieser Klasse nicht verwendet.</summary>
        <returns>Nicht zutreffend. Diese Methode löst immer eine Ausnahme aus.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Wird immer ausgelöst.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Clientanwendungsdienste</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="override this.FindUsersInRole : string * string -&gt; string[]" Usage="clientRoleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nicht verwendet.</param>
        <param name="usernameToMatch">Nicht verwendet.</param>
        <summary>Diese Methode wird von dieser Klasse nicht verwendet.</summary>
        <returns>Nicht zutreffend. Diese Methode löst immer eine Ausnahme aus.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Wird immer ausgelöst.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Clientanwendungsdienste</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public override string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="override this.GetAllRoles : unit -&gt; string[]" Usage="clientRoleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Diese Methode wird von dieser Klasse nicht verwendet.</summary>
        <returns>Nicht zutreffend. Diese Methode löst immer eine Ausnahme aus.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Wird immer ausgelöst.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Clientanwendungsdienste</related>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public override string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.GetRolesForUser : string -&gt; string[]" Usage="clientRoleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Der Name des Benutzers, für den Rollen abgerufen werden.</param>
        <summary>Ruft die Namen der Rollen ab, zu denen der angegebene Benutzer gehört.</summary>
        <returns>Die Rollennamen, zu denen <paramref name="username" /> gehört, oder ein leeres Array, wenn der Benutzer nicht authentifiziert wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> -Methode ruft Rollen Informationen für den aktuellen authentifizierten Benutzer ab, den Sie `username` im-Parameter angeben müssen. Sie können den Benutzernamen über die `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> -Eigenschaft wie folgt erhalten `Thread.CurrentPrincipal.Identity.Name`:.  
  
 Der Dienstanbieter speichert Rollen Informationen über das lokale Dateisystem zwischen, um unnötige Dienst Aufrufe zu vermeiden. Weitere Informationen finden Sie in der <xref:System.Web.ClientServices.Providers.ClientRoleProvider> Übersicht über die-Klasse.  
  
   
  
## Examples  
 Der folgende Beispielcode veranschaulicht, wie diese Methode verwendet wird, um zu bestimmen, ob die Benutzeranmeldung abgelaufen ist, bevor die Rollen Mitgliedschaft getestet wird. Bei diesem Code wird davon ausgegangen, dass alle gültigen Benutzer mindestens einer Rolle zugeordnet sind. In diesem Fall gibt die <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> Methode keine Rollen für einen zuvor authentifizierten Benutzer zurück, deren Anmeldung abgelaufen ist. Wenn die Benutzeranmeldung abgelaufen ist, wird in diesem Code das Anmelde Dialogfeld angezeigt. Andernfalls wird die <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> -Methode aufgerufen, um zu bestimmen, ob der Benutzer in der "Manager"-Rolle ist. Der eingeschränkte Code befindet sich in `PerformManagerTask` einer Methode, die nicht bereitgestellt wird.  
  
 [!code-csharp[ClientApplicationServices#321](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#321)]
 [!code-vb[ClientApplicationServices#321](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#321)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> ist <see cref="F:System.String.Empty" /> oder <see langword="null" />.  
  
- oder - 
 <paramref name="username" /> ist nicht der Benutzername des aktuellen authentifizierten Benutzers.</exception>
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
        <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Clientanwendungsdienste</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34a8688a-a32c-40d3-94be-c8e610c6a4e8">Gewusst wie: Konfigurieren von Clientanwendungsdiensten</related>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.GetUsersInRole : string -&gt; string[]" Usage="clientRoleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nicht verwendet.</param>
        <summary>Diese Methode wird von dieser Klasse nicht verwendet.</summary>
        <returns>Nicht zutreffend. Diese Methode löst immer eine Ausnahme aus.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Wird immer ausgelöst.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Clientanwendungsdienste</related>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="clientRoleProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Der Anzeigename des Anbieters.</param>
        <param name="config">Eine Auflistung von Name-Wert-Paaren, die die anbieterspezifischen Attribute darstellen, die in der Konfiguration für diesen Anbieter angegeben sind.</param>
        <summary>Initialisiert den Anbieter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] Erweiterbarkeits Modell ruft die <xref:System.Web.ClientServices.Providers.ClientRoleProvider.Initialize%2A> -Methode auf, um die <xref:System.Web.ClientServices.Providers.ClientRoleProvider> mithilfe von Informationen in der Anwendungs Konfigurationsdatei zu initialisieren. Diese Methode erkennt die folgenden Rollen Dienst-Konfigurations Attribute:  
  
-   `name`  
  
-   `description`  
  
-   `cacheTimeout`  
  
-   `connectionStringName`  
  
-   `serviceUri`  
  
-   `honorCookieExpiry`  
  
 Weitere Informationen zu diesen Attributen finden Sie unter Gewusst [wie: Konfigurieren von Client Anwendungsdienste](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="config" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> ist leer.  
  
- oder - 
 <paramref name="config" /> enthält einen nicht erkannten Wert.</exception>
        <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Web.ClientServices.Providers.ClientRoleProvider" /> wurde bereits initialisiert.</exception>
        <exception cref="T:System.FormatException"><paramref name="config" /> enthält einen <c>cacheTimeout</c>-Wert, der nicht das richtige Format für die Konvertierung in einen <see cref="T:System.Int32" />-Wert aufweist.</exception>
        <exception cref="T:System.OverflowException"><paramref name="config" /> enthält einen <c>cacheTimeout</c>-Wert, der eine Zahl kleiner als <see cref="F:System.Int32.MinValue" /> oder größer als <see cref="F:System.Int32.MaxValue" /> darstellt.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Clientanwendungsdienste</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34a8688a-a32c-40d3-94be-c8e610c6a4e8">Gewusst wie: Konfigurieren von Clientanwendungsdiensten</related>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public override bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.IsUserInRole : string * string -&gt; bool" Usage="clientRoleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Der Name des Benutzers.</param>
        <param name="roleName">Der Name der Rolle.</param>
        <summary>Ruft einen Wert ab, der angibt, ob der angegebene Benutzer die angegebene Rolle innehat.</summary>
        <returns><see langword="true" />, wenn der angegebene Benutzer die angegebene Rolle aufweist; <see langword="false" />, wenn der angegebene Benutzer nicht authentifiziert wurde oder nicht die angegebene Rolle aufweist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können bestimmen, ob sich ein authentifizierter Benutzer in einer bestimmten Rolle befindet, <xref:System.Security.Principal.IPrincipal.IsInRole%2A> indem Sie die <xref:System.Security.Principal.IPrincipal> -Methode des `static` aufrufen, der von der <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> -Eigenschaft zurückgegeben wird. Für Anwendungen, die für die Verwendung von Clientanwendungsdiensten konfiguriert sind, gibt diese Eigenschaft eine(n) <xref:System.Web.ClientServices.ClientRolePrincipal>aus. Da diese Klasse die <xref:System.Security.Principal.IPrincipal> -Schnittstelle implementiert, müssen Sie nicht explizit auf diese verweisen. Die <xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=nameWithType> -Methode ruft intern <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> die-Methode auf. Die <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> -Methode verwendet <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> die-Methode, um zu bestimmen, `username` ob der von, der durch `roleName`angegeben ist, in der durch gekennzeichneten Rolle ist  
  
 Der Dienstanbieter speichert Rollen Informationen über das lokale Dateisystem zwischen, um unnötige Dienst Aufrufe zu vermeiden. Weitere Informationen finden Sie in der <xref:System.Web.ClientServices.Providers.ClientRoleProvider> Übersicht über die-Klasse.  
  
   
  
## Examples  
 Der folgende Beispielcode zeigt, wie Sie direkt auf diese Methode zugreifen können, um zu bestimmen, ob der Benutzer in einer bestimmten Rolle ist. Mit diesem Code wird zuerst getestet, ob die Benutzeranmeldung abgelaufen ist. Ein expliziter <xref:System.Web.ClientServices.Providers.ClientRoleProvider> Verweis ist erforderlich, <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> um die-Methode aufzurufen, sodass derselbe Verweis verwendet <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> wird, um die-Methode aufzurufen. Wenn sich der Benutzer in der "Manager"-Rolle befindet, ruft dieser `PerformManagerTask` Code eine Methode auf, die nicht bereitgestellt wird.  
  
 [!code-csharp[ClientApplicationServices#321](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#321)]
 [!code-vb[ClientApplicationServices#321](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#321)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> ist <see cref="F:System.String.Empty" /> oder <see langword="null" />.  
  
- oder - 
 <paramref name="username" /> ist nicht der Benutzername des aktuellen authentifizierten Benutzers.</exception>
        <exception cref="T:System.Net.WebException">Der Benutzer wird nicht mehr authentifiziert.  
  
 - oder -  
  
 Der Rollendienst ist nicht verfügbar.</exception>
        <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)" />
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
        <altmember cref="T:System.Web.ClientServices.ClientRolePrincipal" />
        <altmember cref="M:System.Web.ClientServices.ClientRolePrincipal.IsInRole(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Clientanwendungsdienste</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="clientRoleProvider.RemoveUsersFromRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Nicht verwendet.</param>
        <param name="roleNames">Nicht verwendet.</param>
        <summary>Diese Methode wird von dieser Klasse nicht verwendet.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Wird immer ausgelöst.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Clientanwendungsdienste</related>
      </Docs>
    </Member>
    <Member MemberName="ResetCache">
      <MemberSignature Language="C#" Value="public void ResetCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCache();" />
      <MemberSignature Language="F#" Value="member this.ResetCache : unit -&gt; unit" Usage="clientRoleProvider.ResetCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht die zwischengespeicherten Rolleninformationen und setzt den Timeout-Zeitraum für den Cache zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache%2A> -Methode entfernt alle Rollen Informationen aus dem lokalen Cache und bewirkt, dass der Cache abläuft. Nachdem Sie diese Methode aufgerufen haben, ruft der nächste aufrufen <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> der <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> -oder-Methode Rollen Informationen aus dem konfigurierten Rollen Dienst anstelle des lokalen Caches ab.  
  
 Mit dieser Methode können Sie es Benutzern ermöglichen, den Rollen Cache zu aktualisieren, wenn sich ihre Rolle geändert hat, der Cache jedoch noch nicht abgelaufen ist. Weitere Informationen zum Festlegen des Timeout Intervalls für das Rollen Cache finden Sie unter Gewusst [wie: Konfigurieren von Client Anwendungsdienste](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).  
  
   
  
## Examples  
 Der folgende Beispielcode veranschaulicht, wie diese Methode verwendet wird, um den lokalen Rollen Cache zurückzusetzen.  
  
 [!code-csharp[ClientApplicationServices#314](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#314)]
 [!code-vb[ClientApplicationServices#314](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#314)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)" />
        <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Clientanwendungsdienste</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34a8688a-a32c-40d3-94be-c8e610c6a4e8">Gewusst wie: Konfigurieren von Clientanwendungsdiensten</related>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public override bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.RoleExists : string -&gt; bool" Usage="clientRoleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nicht verwendet.</param>
        <summary>Diese Methode wird von dieser Klasse nicht verwendet.</summary>
        <returns>Nicht zutreffend. Diese Methode löst immer eine Ausnahme aus.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Wird immer ausgelöst.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Clientanwendungsdienste</related>
      </Docs>
    </Member>
    <Member MemberName="ServiceUri">
      <MemberSignature Language="C#" Value="public string ServiceUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceUri" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceUri As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServiceUri { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServiceUri : string with get, set" Usage="System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den URI des Rollendiensts ab oder legt diesen fest.</summary>
        <value>Der URI des Rollendiensts.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A> -Eigenschaft im Anwendungscode festlegen, aber Sie legen in der Regel den Wert in ihrer Anwendungs Konfigurationsdatei fest. Auf diese Weise können Sie den Dienst Speicherort ändern, ohne den Code neu kompilieren zu müssen. Weitere Informationen finden Sie unter [How to: Configure Client Application Services](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).  
  
 Wenn Sie den Dienst Speicherort Programm gesteuert festlegen, müssen Sie den gesamten Dienst-URI angeben, der immer mit "Role_JSON_AppService. axd" endet.  
  
   
  
## Examples  
 Im folgenden Beispielcode wird veranschaulicht, wie diese Eigenschaft verwendet wird, um den Speicherort der Rollen Dienste Programm gesteuert festzulegen.  
  
 [!code-csharp[ClientApplicationServices#302](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#302)]
 [!code-vb[ClientApplicationServices#302](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#302)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Beim Abrufen dieser Eigenschaft wurde kein Dienst-URI in der Anwendungskonfigurationsdatei gefunden und die Eigenschaft wurde zuvor nicht festgelegt.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Clientanwendungsdienste</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34a8688a-a32c-40d3-94be-c8e610c6a4e8">Gewusst wie: Konfigurieren von Clientanwendungsdiensten</related>
      </Docs>
    </Member>
  </Members>
</Type>
