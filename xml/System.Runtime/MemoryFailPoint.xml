<Type Name="MemoryFailPoint" FullName="System.Runtime.MemoryFailPoint">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ab5da6c93b04875493fea4cbb8aac2d44e9f9060" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36628639" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MemoryFailPoint : System.Runtime.ConstrainedExecution.CriticalFinalizerObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MemoryFailPoint extends System.Runtime.ConstrainedExecution.CriticalFinalizerObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.MemoryFailPoint" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MemoryFailPoint&#xA;Inherits CriticalFinalizerObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemoryFailPoint sealed : System::Runtime::ConstrainedExecution::CriticalFinalizerObject, IDisposable" />
  <TypeSignature Language="F#" Value="type MemoryFailPoint = class&#xA;    inherit CriticalFinalizerObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.ConstrainedExecution.CriticalFinalizerObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="964ea-101">Überprüfungen auf ausreichende Speicherressourcen, bevor ein Vorgang ausgeführt wird.</span>
      <span class="sxs-lookup">
        <span data-stu-id="964ea-101">Checks for sufficient memory resources before executing an operation.</span>
      </span>
      <span data-ttu-id="964ea-102">Diese Klasse kann nicht vererbt werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="964ea-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="964ea-103">Diese Klasse dient zur Verwendung in erweiterten Entwicklung.</span><span class="sxs-lookup"><span data-stu-id="964ea-103">This class is intended for use in advanced development.</span></span>  
  
 <span data-ttu-id="964ea-104">Erstellen einer Instanz von der <xref:System.Runtime.MemoryFailPoint> -Klasse erstellt eine Arbeitsspeicher-Gate.</span><span class="sxs-lookup"><span data-stu-id="964ea-104">Creating an instance of the <xref:System.Runtime.MemoryFailPoint> class creates a memory gate.</span></span> <span data-ttu-id="964ea-105">Ein Speichergate überprüft über ausreichende Ressourcen vor dem Initiieren einer Aktivität, die eine große Menge an Arbeitsspeicher erfordert.</span><span class="sxs-lookup"><span data-stu-id="964ea-105">A memory gate checks for sufficient resources before initiating an activity that requires a large amount of memory.</span></span> <span data-ttu-id="964ea-106">Die Überprüfung fehlschlägt, führt zu einer <xref:System.InsufficientMemoryException> ausgelöste Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="964ea-106">Failing the check results in an <xref:System.InsufficientMemoryException> exception being thrown.</span></span> <span data-ttu-id="964ea-107">Diese Ausnahme wird verhindert, dass einen Vorgang gestartet wird, und reduziert die Möglichkeit von Fehlern aufgrund fehlender Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="964ea-107">This exception prevents an operation from being started and reduces the possibility of failure due to lack of resources.</span></span> <span data-ttu-id="964ea-108">Dadurch können Sie beeinträchtigen die Leistung zu vermeiden einer <xref:System.OutOfMemoryException> Ausnahme und alle Zustandsänderungen, die aus einer nicht ordnungsgemäßen Behandlung der Ausnahme an beliebigen Stellen im Code führen können.</span><span class="sxs-lookup"><span data-stu-id="964ea-108">This enables you decrease performance to avoid an <xref:System.OutOfMemoryException> exception and any state corruption that may result from improper handling of the exception in arbitrary locations in your code.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="964ea-109">Dieser Typ implementiert die <xref:System.IDisposable> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="964ea-109">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="964ea-110">Wenn Sie mithilfe des Typs abgeschlossen haben, sollten Sie es entweder direkt oder indirekt freigeben.</span><span class="sxs-lookup"><span data-stu-id="964ea-110">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="964ea-111">Aufrufen, um den Typ direkt zu verwerfen, dessen <xref:System.IDisposable.Dispose%2A> Methode in einer `try` / `catch` Block.</span><span class="sxs-lookup"><span data-stu-id="964ea-111">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="964ea-112">Um es indirekt freizugeben, verwenden Sie ein Sprachkonstrukt z. B. `using` (in c#) oder `Using` (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="964ea-112">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="964ea-113">Weitere Informationen finden Sie im Abschnitt "Verwenden eines Objekts, implementiert IDisposable" in der <xref:System.IDisposable> Thema zur Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="964ea-113">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="964ea-114">Durch das Auslösen einer <xref:System.InsufficientMemoryException> Ausnahme, eine Anwendung kann eine Schätzung, die ein Vorgang nicht ausführen können, werden von Unterschieden eines teilweise abgeschlossenen Vorgangs, der den Anwendungsstatus beschädigt haben kann.</span><span class="sxs-lookup"><span data-stu-id="964ea-114">By throwing an <xref:System.InsufficientMemoryException> exception, an application can distinguish between an estimate that an operation will not be able to complete and  a partially completed operation that may have corrupted the application state.</span></span> <span data-ttu-id="964ea-115">Dies ermöglicht es einer Anwendung, die Häufigkeit einer Richtlinie Eingeschränkte Eskalation zu verringern, was erfordern kann Entladen der aktuellen <xref:System.AppDomain> oder wiederverwenden des Prozesses.</span><span class="sxs-lookup"><span data-stu-id="964ea-115">This allows an application to reduce the frequency of a pessimistic escalation policy, which may require unloading the current <xref:System.AppDomain> or recycling the process.</span></span>  
  
 <span data-ttu-id="964ea-116"><xref:System.Runtime.MemoryFailPoint> überprüft, ob genügend Arbeitsspeicher und aufeinander folgende virtuelle Adressraum heaps in allen Garbagecollection verfügbar sind, und die Größe der Auslagerungsdatei erhöhen.</span><span class="sxs-lookup"><span data-stu-id="964ea-116"><xref:System.Runtime.MemoryFailPoint> checks to see whether sufficient memory and consecutive virtual address space are available in all garbage collection heaps, and may increase the size of the swap file.</span></span>  <span data-ttu-id="964ea-117"><xref:System.Runtime.MemoryFailPoint> macht keine Garantien hinsichtlich der langfristige Verfügbarkeit des Arbeitsspeichers während der Lebensdauer der Gate Aufrufer sollten immer verwenden die <xref:System.Runtime.MemoryFailPoint.Dispose%2A> Methode, um sicherzustellen, dass Ressourcen zugeordnet <xref:System.Runtime.MemoryFailPoint> freigegeben werden.</span><span class="sxs-lookup"><span data-stu-id="964ea-117"><xref:System.Runtime.MemoryFailPoint> makes no guarantees regarding the long-term availability of the memory during the lifetime of the gate, but callers should always use the <xref:System.Runtime.MemoryFailPoint.Dispose%2A> method to ensure that resources associated with <xref:System.Runtime.MemoryFailPoint> are released.</span></span>  
  
 <span data-ttu-id="964ea-118">Um eine Arbeitsspeicher-Gate verwenden zu können, müssen Sie erstellen eine <xref:System.Runtime.MemoryFailPoint> Objekt, und geben Sie die Anzahl der Megabytes (MB) des Arbeitsspeichers, der der nächste Vorgang verwenden soll.</span><span class="sxs-lookup"><span data-stu-id="964ea-118">To use a memory gate, you must create a <xref:System.Runtime.MemoryFailPoint> object and specify the number of megabytes (MB) of memory that the next operation is expected to use.</span></span> <span data-ttu-id="964ea-119">Wenn nicht genügend Arbeitsspeicher verfügbar ist, ist ein <xref:System.InsufficientMemoryException> Ausnahme wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="964ea-119">If enough memory is not available, an <xref:System.InsufficientMemoryException> exception is thrown.</span></span>  
  
 <span data-ttu-id="964ea-120">Die Parameter des Konstruktors muss eine positive ganze Zahl sein.</span><span class="sxs-lookup"><span data-stu-id="964ea-120">The parameter of the constructor must be a positive integer.</span></span> <span data-ttu-id="964ea-121">Ein negativer Wert löst eine <xref:System.ArgumentOutOfRangeException> Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="964ea-121">A negative value raises an <xref:System.ArgumentOutOfRangeException> exception.</span></span>  
  
 <span data-ttu-id="964ea-122"><xref:System.Runtime.MemoryFailPoint> arbeitet mit einer Genauigkeit von 16 MB.</span><span class="sxs-lookup"><span data-stu-id="964ea-122"><xref:System.Runtime.MemoryFailPoint> operates at a granularity of 16 MB.</span></span> <span data-ttu-id="964ea-123">Alle Werte, die kleiner als 16 MB werden als 16 MB und andere Werte als die größte nächste Vielfache von 16 MB behandelt werden.</span><span class="sxs-lookup"><span data-stu-id="964ea-123">Any values smaller than 16 MB are treated as 16 MB, and other values are treated as the next largest multiple of 16 MB.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="964ea-124"><xref:System.Runtime.MemoryFailPoint> ermöglicht einer Anwendung, um zu vermeiden, fehlt und der Arbeitsspeicher knapp langsamer.</span><span class="sxs-lookup"><span data-stu-id="964ea-124"><xref:System.Runtime.MemoryFailPoint> enables an application to slow itself to avoid running out of memory in a corrupting manner.</span></span>  <span data-ttu-id="964ea-125">Es sollte in einen lexikalischen Gültigkeitsbereich verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="964ea-125">It should be used within a lexical scope.</span></span>  <span data-ttu-id="964ea-126">Im folgende Beispiel wird die Threads zum Verarbeiten von Elementen in einer Arbeitswarteschlange gestartet.</span><span class="sxs-lookup"><span data-stu-id="964ea-126">The following example launches threads to process items in a work queue.</span></span>  <span data-ttu-id="964ea-127">Vor jeder Thread gestartet wird, die verfügbaren Speicherressourcen werden überprüft mit <xref:System.Runtime.MemoryFailPoint>.</span><span class="sxs-lookup"><span data-stu-id="964ea-127">Before each thread is launched, the available memory resources are checked using <xref:System.Runtime.MemoryFailPoint>.</span></span>  <span data-ttu-id="964ea-128">Wenn eine Ausnahme ausgelöst wird, wartet die main-Methode auf, bis Arbeitsspeicher verfügbar ist, bevor der nächste Thread starten.</span><span class="sxs-lookup"><span data-stu-id="964ea-128">If an exception is thrown, the main method waits until memory is available before launching the next thread.</span></span>  
  
 [!code-csharp[MemoryFailPoint#1](~/samples/snippets/csharp/VS_Snippets_CLR/MemoryFailPoint/CS/program.cs#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="964ea-129">zum Aufrufen von nicht verwalteten Codes.</span>
      <span class="sxs-lookup">
        <span data-stu-id="964ea-129">for calling unmanaged code.</span>
      </span>
      <span data-ttu-id="964ea-130">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="964ea-130">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
      </span>
      <span data-ttu-id="964ea-131">Sicherheitsaktion: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="964ea-131">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></span>
      </span>
    </permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MemoryFailPoint (int sizeInMegabytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 sizeInMegabytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.MemoryFailPoint.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sizeInMegabytes As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MemoryFailPoint(int sizeInMegabytes);" />
      <MemberSignature Language="F#" Value="new System.Runtime.MemoryFailPoint : int -&gt; System.Runtime.MemoryFailPoint" Usage="new System.Runtime.MemoryFailPoint sizeInMegabytes" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sizeInMegabytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sizeInMegabytes">
          <span data-ttu-id="964ea-132">Die erforderliche Arbeitsspeichergröße in Megabyte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="964ea-132">The required memory size, in megabytes.</span>
          </span>
          <span data-ttu-id="964ea-133">Dieser Wert muss positiv sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="964ea-133">This must be a positive value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="964ea-134">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.MemoryFailPoint" />-Klasse und gibt die zur erfolgreichen Ausführung erforderliche Arbeitsspeichergröße an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="964ea-134">Initializes a new instance of the <see cref="T:System.Runtime.MemoryFailPoint" /> class, specifying the amount of memory required for successful execution.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="964ea-135">Die Arbeitsspeichermenge, die von der Anwendung verwendet werden, um eine Arbeitsaufgabe verarbeiten kann empirisch ermittelt werden.</span><span class="sxs-lookup"><span data-stu-id="964ea-135">The amount of memory used by your application to process a work item can be determined empirically.</span></span>  <span data-ttu-id="964ea-136">Um die Menge an Arbeitsspeicher zu schätzen Ihre Anwendung benötigt, um eine Anforderung zu verarbeiten, erwägen Sie die <xref:System.GC.GetTotalMemory%2A?displayProperty=nameWithType> Methode, um zu bestimmen, die Menge an Arbeitsspeicher verfügbar ist, bevor und nachdem das Arbeitselement Aufrufen der Methode, die verarbeitet werden.</span><span class="sxs-lookup"><span data-stu-id="964ea-136">To estimate the amount of memory your application needs to process a request, consider using the <xref:System.GC.GetTotalMemory%2A?displayProperty=nameWithType> method to determine the amount of memory available before and after calling the method that processes the work item.</span></span> <span data-ttu-id="964ea-137">Finden Sie unter der <xref:System.Runtime.MemoryFailPoint> Klasse für ein Codebeispiel, der dynamisch, den Wert für bestimmt die `sizeInMegabytes` Parameter.</span><span class="sxs-lookup"><span data-stu-id="964ea-137">See the <xref:System.Runtime.MemoryFailPoint> class for a code example that dynamically determines the value for the `sizeInMegabytes` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="964ea-138">Im folgenden Beispiel wird veranschaulicht, wie die Größe des Arbeitsspeichers zu bestimmen, die eine Methode, beim Ausführen erfordert.</span><span class="sxs-lookup"><span data-stu-id="964ea-138">The following example demonstrates how to determine the amount of memory a method requires when executing.</span></span> <span data-ttu-id="964ea-139">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Runtime.MemoryFailPoint> Klasse.</span><span class="sxs-lookup"><span data-stu-id="964ea-139">This code example is part of a larger example provided for the <xref:System.Runtime.MemoryFailPoint> class.</span></span>  
  
 [!code-csharp[MemoryFailPoint#2](~/samples/snippets/csharp/VS_Snippets_CLR/MemoryFailPoint/CS/program.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="964ea-140">Die angegebene Arbeitsspeichergröße ist negativ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="964ea-140">The specified memory size is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.InsufficientMemoryException">
          <span data-ttu-id="964ea-141">Es ist nicht ausreichend Arbeitsspeicher vorhanden, um die Ausführung des durch das Gate geschützten Codes zu starten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="964ea-141">There is insufficient memory to begin execution of the code protected by the gate.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="964ea-142">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="964ea-142">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="964ea-143">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="964ea-143">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.MemoryFailPoint.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="memoryFailPoint.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="964ea-144">Gibt alle vom <see cref="T:System.Runtime.MemoryFailPoint" /> verwendeten Ressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="964ea-144">Releases all resources used by the <see cref="T:System.Runtime.MemoryFailPoint" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="964ea-145">Rufen Sie <xref:System.Runtime.MemoryFailPoint.Dispose%2A> auf, wenn Sie <xref:System.Runtime.MemoryFailPoint> nicht mehr benötigen.</span><span class="sxs-lookup"><span data-stu-id="964ea-145">Call <xref:System.Runtime.MemoryFailPoint.Dispose%2A> when you are finished using the <xref:System.Runtime.MemoryFailPoint>.</span></span> <span data-ttu-id="964ea-146">Die <xref:System.Runtime.MemoryFailPoint.Dispose%2A>-Methode bewirkt, dass <xref:System.Runtime.MemoryFailPoint> nicht mehr verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="964ea-146">The <xref:System.Runtime.MemoryFailPoint.Dispose%2A> method leaves the <xref:System.Runtime.MemoryFailPoint> in an unusable state.</span></span> <span data-ttu-id="964ea-147">Nach dem Aufruf <xref:System.Runtime.MemoryFailPoint>, müssen Sie alle Verweise auf Freigeben der <xref:System.Runtime.MemoryFailPoint> , damit der Garbage Collector den Arbeitsspeicher freigeben kann, die die <xref:System.Runtime.MemoryFailPoint> belegt wurde.</span><span class="sxs-lookup"><span data-stu-id="964ea-147">After calling <xref:System.Runtime.MemoryFailPoint>, you must release all references to the <xref:System.Runtime.MemoryFailPoint> so the garbage collector can reclaim the memory that the <xref:System.Runtime.MemoryFailPoint> was occupying.</span></span> <span data-ttu-id="964ea-148">Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="964ea-148">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="964ea-149">Rufen Sie immer <xref:System.Runtime.MemoryFailPoint.Dispose%2A> auf, bevor Sie den letzten Verweis auf das <xref:System.Runtime.MemoryFailPoint> freigeben.</span><span class="sxs-lookup"><span data-stu-id="964ea-149">Always call <xref:System.Runtime.MemoryFailPoint.Dispose%2A> before you release your last reference to the <xref:System.Runtime.MemoryFailPoint>.</span></span> <span data-ttu-id="964ea-150">Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <xref:System.Runtime.MemoryFailPoint>-Methode des `Finalize`-Objekts aufruft.</span><span class="sxs-lookup"><span data-stu-id="964ea-150">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Runtime.MemoryFailPoint> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~MemoryFailPoint ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.MemoryFailPoint.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!MemoryFailPoint ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="memoryFailPoint.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="964ea-151">Stellt das Freigeben von Ressourcen und das Ausführen anderer Garbage Collector-Vorgänge sicher, wenn der Garbage Collector das <see cref="T:System.Runtime.MemoryFailPoint" />-Objekt verarbeitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="964ea-151">Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <see cref="T:System.Runtime.MemoryFailPoint" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="964ea-152">Der Garbage Collector Ruft die <xref:System.Runtime.MemoryFailPoint.Finalize%2A> Methode, wenn das aktuelle Objekt finalisiert werden.</span><span class="sxs-lookup"><span data-stu-id="964ea-152">The garbage collector calls the <xref:System.Runtime.MemoryFailPoint.Finalize%2A> method when the current object is ready to be finalized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
  </Members>
</Type>