<Type Name="IQueryable" FullName="System.Linq.IQueryable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2ac93d143f554b07cb211b022ef69b7bd3a2d88d" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51904944" /></Metadata><TypeSignature Language="C#" Value="public interface IQueryable : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IQueryable implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Linq.IQueryable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IQueryable&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IQueryable : System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type IQueryable = interface&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt Funktionen zur Auswertung von Abfragen für eine bestimmte Datenquelle ohne Angabe des Datentyps bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Linq.IQueryable> Schnittstelle ist für die Implementierung durch Abfrageanbieter vorgesehen. Sie sollte nur von Anbietern implementiert werden, die ebenfalls implementieren <xref:System.Linq.IQueryable%601>. Wenn der Anbieter keine auch implementiert <xref:System.Linq.IQueryable%601>, die Standardabfrageoperatoren können nicht auf die Datenquelle des Anbieters verwendet werden.  
  
 Die <xref:System.Linq.IQueryable> Schnittstelle erbt die <xref:System.Collections.IEnumerable> Schnittstelle, damit die Ergebnisse der Abfrage auf, wenn es sich um eine Abfrage darstellt, aufgelistet werden können. Enumeration führt dazu, dass die Ausdrucksbaumstruktur, die zugeordneten ein <xref:System.Linq.IQueryable> Objekt, das ausgeführt werden. Die Definition von "Ausführen einer Ausdrucksbaumstruktur" bezieht sich auf ein Abfrageanbieter. Beispielsweise kann das Übersetzen der Ausdrucksbaumstruktur in eine entsprechende Abfragesprache für die zugrunde liegende Datenquelle dazu gehören. Abfragen, die keine auflistbare Ergebnisse zurückgeben werden ausgeführt, wenn die <xref:System.Linq.IQueryProvider.Execute%2A> Methode wird aufgerufen.  
  
 Weitere Informationen dazu, wie Sie einen eigenen LINQ-Anbieter erstellen, finden Sie unter [LINQ: Building an IQueryable Provider](https://go.microsoft.com/fwlink/?LinkID=112370) auf MSDN-Blogs.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Linq.Queryable" />
    <altmember cref="T:System.Linq.IQueryable`1" />
  </Docs>
  <Members>
    <Member MemberName="ElementType">
      <MemberSignature Language="C#" Value="public Type ElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ElementType" />
      <MemberSignature Language="DocId" Value="P:System.Linq.IQueryable.ElementType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ElementType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementType : Type" Usage="System.Linq.IQueryable.ElementType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ der Elemente ab, die zurückgegeben werden, wenn die Ausdrucksbaumstruktur ausgeführt wird, die mit dieser Instanz von <see cref="T:System.Linq.IQueryable" /> verknüpft ist.</summary>
        <value>Ein <see cref="T:System.Type" />, der den Typ der Elemente darstellt, die zurückgegeben werden, wenn die Ausdrucksbaumstruktur ausgeführt wird, die mit diesem Objekt verknüpft ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Linq.IQueryable.ElementType%2A> Eigenschaft stellt das "T" in `IQueryable<T>` oder `IQueryable(Of T)`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression Expression" />
      <MemberSignature Language="DocId" Value="P:System.Linq.IQueryable.Expression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expression As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Linq::Expressions::Expression ^ Expression { System::Linq::Expressions::Expression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Expression : System.Linq.Expressions.Expression" Usage="System.Linq.IQueryable.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Ausdrucksbaumstruktur ab, die mit der Instanz von <see cref="T:System.Linq.IQueryable" /> verknüpft ist.</summary>
        <value>Die <see cref="T:System.Linq.Expressions.Expression" />, die mit dieser Instanz von <see cref="T:System.Linq.IQueryable" /> verknüpft ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine Instanz von <xref:System.Linq.IQueryable> stellt eine [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] Abfrage für eine Datenquelle, der zugehörigen Ausdrucksbaumstruktur darstellt, die Abfragen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.IQueryProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Linq.IQueryable.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As IQueryProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Linq::IQueryProvider ^ Provider { System::Linq::IQueryProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Linq.IQueryProvider" Usage="System.Linq.IQueryable.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Abfrageanbieter ab, der dieser Datenquelle zugeordnet ist.</summary>
        <value>Der <see cref="T:System.Linq.IQueryProvider" />, der dieser Datenquelle zugeordnet ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine Instanz von <xref:System.Linq.IQueryable> stellt eine [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] Abfrage für eine Datenquelle, die den zugeordneten Abfrage-Anbieter ist der Anbieter, der erstellt das <xref:System.Linq.IQueryable> Instanz.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>