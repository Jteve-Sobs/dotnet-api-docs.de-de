<Type Name="EnumerableQuery&lt;T&gt;" FullName="System.Linq.EnumerableQuery&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="346ade840cdd176ef768452af68013973e3eeeb6" /><Meta Name="ms.sourcegitcommit" Value="1420c62606b215c28918a9d649d0f7849ad66c9f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/11/2020" /><Meta Name="ms.locfileid" Value="88089381" /></Metadata><TypeSignature Language="C#" Value="public class EnumerableQuery&lt;T&gt; : System.Linq.EnumerableQuery, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Linq.IOrderedQueryable&lt;T&gt;, System.Linq.IQueryable&lt;T&gt;, System.Linq.IQueryProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EnumerableQuery`1&lt;T&gt; extends System.Linq.EnumerableQuery implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.IEnumerable, class System.Linq.IOrderedQueryable, class System.Linq.IOrderedQueryable`1&lt;!T&gt;, class System.Linq.IQueryable, class System.Linq.IQueryable`1&lt;!T&gt;, class System.Linq.IQueryProvider" />
  <TypeSignature Language="DocId" Value="T:System.Linq.EnumerableQuery`1" />
  <TypeSignature Language="VB.NET" Value="Public Class EnumerableQuery(Of T)&#xA;Inherits EnumerableQuery&#xA;Implements IEnumerable(Of T), IOrderedQueryable(Of T), IQueryable(Of T), IQueryProvider" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class EnumerableQuery : System::Linq::EnumerableQuery, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Linq::IOrderedQueryable&lt;T&gt;, System::Linq::IQueryable&lt;T&gt;, System::Linq::IQueryProvider" />
  <TypeSignature Language="F#" Value="type EnumerableQuery&lt;'T&gt; = class&#xA;    inherit EnumerableQuery&#xA;    interface IOrderedQueryable&lt;'T&gt;&#xA;    interface IOrderedQueryable&#xA;    interface IQueryable&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface IQueryable&#xA;    interface IEnumerable&#xA;    interface IQueryProvider" FrameworkAlternate="dotnet-uwp-10.0" />
  <TypeSignature Language="F#" Value="type EnumerableQuery&lt;'T&gt; = class&#xA;    inherit EnumerableQuery&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface IOrderedQueryable&#xA;    interface IQueryable&#xA;    interface IOrderedQueryable&lt;'T&gt;&#xA;    interface IQueryable&lt;'T&gt;&#xA;    interface IQueryProvider" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="F#" Value="type EnumerableQuery&lt;'T&gt; = class&#xA;    inherit EnumerableQuery&#xA;    interface IOrderedQueryable&lt;'T&gt;&#xA;    interface IQueryable&lt;'T&gt;&#xA;    interface IOrderedQueryable&#xA;    interface IQueryable&#xA;    interface IQueryProvider&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
  <TypeSignature Language="F#" Value="type EnumerableQuery&lt;'T&gt; = class&#xA;    inherit EnumerableQuery&#xA;    interface IOrderedQueryable&lt;'T&gt;&#xA;    interface IQueryable&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface IQueryable&#xA;    interface IOrderedQueryable&#xA;    interface IQueryProvider" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type EnumerableQuery&lt;'T&gt; = class&#xA;    inherit EnumerableQuery&#xA;    interface IOrderedQueryable&lt;'T&gt;&#xA;    interface IQueryable&#xA;    interface IQueryProvider&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface IQueryable&lt;'T&gt;&#xA;    interface IOrderedQueryable" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Queryable</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Core" FromVersion="4.0.0.0" To="System.Linq.Queryable" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Linq.Queryable" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Linq.EnumerableQuery</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IOrderedQueryable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IOrderedQueryable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="cc58e-101">Der Typ der Daten in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="cc58e-101">The type of the data in the collection.</span></span></typeparam>
    <summary><span data-ttu-id="cc58e-102">Stellt eine <see cref="T:System.Collections.Generic.IEnumerable`1" />-Auflistung als eine <see cref="T:System.Linq.IQueryable`1" />-Datenquelle dar.</span><span class="sxs-lookup"><span data-stu-id="cc58e-102">Represents an <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection as an <see cref="T:System.Linq.IQueryable`1" /> data source.</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc58e-103">Initialisiert eine neue Instanz der <see cref="T:System.Linq.EnumerableQuery`1" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="cc58e-103">Initializes a new instance of the <see cref="T:System.Linq.EnumerableQuery`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnumerableQuery (System.Collections.Generic.IEnumerable&lt;T&gt; enumerable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; enumerable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.EnumerableQuery`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enumerable As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EnumerableQuery(System::Collections::Generic::IEnumerable&lt;T&gt; ^ enumerable);" />
      <MemberSignature Language="F#" Value="new System.Linq.EnumerableQuery&lt;'T&gt; : seq&lt;'T&gt; -&gt; System.Linq.EnumerableQuery&lt;'T&gt;" Usage="new System.Linq.EnumerableQuery&lt;'T&gt; enumerable" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enumerable" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="enumerable"><span data-ttu-id="cc58e-104">Eine Auflistung, die mit der neuen  Instanz verknüpft werden soll.</span><span class="sxs-lookup"><span data-stu-id="cc58e-104">A collection to associate with the new instance.</span></span></param>
        <summary><span data-ttu-id="cc58e-105">Initialisiert eine neue Instanz der <see cref="T:System.Linq.EnumerableQuery`1" />-Klasse und verknüpft sie mit einer <see cref="T:System.Collections.Generic.IEnumerable`1" />-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="cc58e-105">Initializes a new instance of the <see cref="T:System.Linq.EnumerableQuery`1" /> class and associates it with an <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnumerableQuery (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.EnumerableQuery`1.#ctor(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EnumerableQuery(System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="new System.Linq.EnumerableQuery&lt;'T&gt; : System.Linq.Expressions.Expression -&gt; System.Linq.EnumerableQuery&lt;'T&gt;" Usage="new System.Linq.EnumerableQuery&lt;'T&gt; expression" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="cc58e-106">Eine Ausdrucksbaumstruktur, die mit der neuen Instanz verknüpft werden soll.</span><span class="sxs-lookup"><span data-stu-id="cc58e-106">An expression tree to associate with the new instance.</span></span></param>
        <summary><span data-ttu-id="cc58e-107">Initialisiert eine neue Instanz der <see cref="T:System.Linq.EnumerableQuery`1" />-Klasse und verknüpft die Instanz mit einer Ausdrucksbaumstruktur.</span><span class="sxs-lookup"><span data-stu-id="cc58e-107">Initializes a new instance of the <see cref="T:System.Linq.EnumerableQuery`1" /> class and associates the instance with an expression tree.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.EnumerableQuery`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;&#xA;override this.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;" Usage="enumerableQuery.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc58e-108">Gibt einen Enumerator zurück, der die zugehörige <see cref="T:System.Collections.Generic.IEnumerable`1" />-Auflistung durchlaufen kann oder der, falls diese null ist, die Auflistung durchläuft, die von der Umschreibung der zugehörigen Ausdrucksbaumstruktur als Abfrage zu einer <see cref="T:System.Collections.Generic.IEnumerable`1" />-Datenquelle stammt und diese ausführt.</span><span class="sxs-lookup"><span data-stu-id="cc58e-108">Returns an enumerator that can iterate through the associated <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection, or, if it is null, through the collection that results from rewriting the associated expression tree as a query on an <see cref="T:System.Collections.Generic.IEnumerable`1" /> data source and executing it.</span></span></summary>
        <returns><span data-ttu-id="cc58e-109">Ein Enumerator, mit dem die zugehörige Datenquelle durchlaufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="cc58e-109">An enumerator that can be used to iterate through the associated data source.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.EnumerableQuery`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="enumerableQuery.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc58e-110">Gibt einen Enumerator zurück, der die zugehörige <see cref="T:System.Collections.Generic.IEnumerable`1" />-Auflistung durchlaufen kann oder der, falls diese null ist, die Auflistung durchläuft, die von der Umschreibung der zugehörigen Ausdrucksbaumstruktur als Abfrage zu einer <see cref="T:System.Collections.Generic.IEnumerable`1" />-Datenquelle stammt und diese ausführt.</span><span class="sxs-lookup"><span data-stu-id="cc58e-110">Returns an enumerator that can iterate through the associated <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection, or, if it is null, through the collection that results from rewriting the associated expression tree as a query on an <see cref="T:System.Collections.Generic.IEnumerable`1" /> data source and executing it.</span></span></summary>
        <returns><span data-ttu-id="cc58e-111">Ein Enumerator, mit dem die zugehörige Datenquelle durchlaufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="cc58e-111">An enumerator that can be used to iterate through the associated data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="cc58e-112">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="cc58e-112">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cc58e-113">Er kann nur verwendet werden, wenn die <xref:System.Linq.EnumerableQuery`1>-Instanz in eine <xref:System.Collections.IEnumerable>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="cc58e-113">It can be used only when the <xref:System.Linq.EnumerableQuery`1> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>

          ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryable.ElementType">
      <MemberSignature Language="C#" Value="Type System.Linq.IQueryable.ElementType { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type System.Linq.IQueryable.ElementType" />
      <MemberSignature Language="DocId" Value="P:System.Linq.EnumerableQuery`1.System#Linq#IQueryable#ElementType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ElementType As Type Implements IQueryable.ElementType" />
      <MemberSignature Language="C++ CLI" Value="property Type ^ System::Linq::IQueryable::ElementType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Linq.IQueryable.ElementType : Type" Usage="System.Linq.IQueryable.ElementType" />
      <MemberSignature Language="C#" Value="Type? System.Linq.IQueryable.ElementType { get; }" FrameworkAlternate="net-5.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Linq.IQueryable.ElementType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc58e-114">Ruft den Datentyp in der Auflistung ab, die diese Instanz darstellt.</span><span class="sxs-lookup"><span data-stu-id="cc58e-114">Gets the type of the data in the collection that this instance represents.</span></span></summary>
        <value><span data-ttu-id="cc58e-115">Der Datentyp in der Auflistung, die diese Instanz darstellt.</span><span class="sxs-lookup"><span data-stu-id="cc58e-115">The type of the data in the collection that this instance represents.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="cc58e-116">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="cc58e-116">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cc58e-117">Er kann nur verwendet werden, wenn die <xref:System.Linq.EnumerableQuery`1>-Instanz in eine <xref:System.Linq.IQueryable>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="cc58e-117">It can be used only when the <xref:System.Linq.EnumerableQuery`1> instance is cast to an <xref:System.Linq.IQueryable> interface.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryable.Expression">
      <MemberSignature Language="C#" Value="System.Linq.Expressions.Expression System.Linq.IQueryable.Expression { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression System.Linq.IQueryable.Expression" />
      <MemberSignature Language="DocId" Value="P:System.Linq.EnumerableQuery`1.System#Linq#IQueryable#Expression" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Expression As Expression Implements IQueryable.Expression" />
      <MemberSignature Language="C++ CLI" Value="property System::Linq::Expressions::Expression ^ System::Linq::IQueryable::Expression { System::Linq::Expressions::Expression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Linq.IQueryable.Expression : System.Linq.Expressions.Expression" Usage="System.Linq.IQueryable.Expression" />
      <MemberSignature Language="C#" Value="System.Linq.Expressions.Expression? System.Linq.IQueryable.Expression { get; }" FrameworkAlternate="net-5.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Linq.IQueryable.Expression</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc58e-118">Ruft die Ausdrucksbaumstruktur ab, die mit dieser Instanz verknüpft ist oder diese Instanz darstellt.</span><span class="sxs-lookup"><span data-stu-id="cc58e-118">Gets the expression tree that is associated with or that represents this instance.</span></span></summary>
        <value><span data-ttu-id="cc58e-119">Die Ausdrucksbaumstruktur, die mit dieser Instanz verknüpft ist oder diese Instanz darstellt.</span><span class="sxs-lookup"><span data-stu-id="cc58e-119">The expression tree that is associated with or that represents this instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="cc58e-120">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="cc58e-120">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cc58e-121">Er kann nur verwendet werden, wenn die <xref:System.Linq.EnumerableQuery`1>-Instanz in eine <xref:System.Linq.IQueryable>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="cc58e-121">It can be used only when the <xref:System.Linq.EnumerableQuery`1> instance is cast to an <xref:System.Linq.IQueryable> interface.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryable.Provider">
      <MemberSignature Language="C#" Value="System.Linq.IQueryProvider System.Linq.IQueryable.Provider { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.IQueryProvider System.Linq.IQueryable.Provider" />
      <MemberSignature Language="DocId" Value="P:System.Linq.EnumerableQuery`1.System#Linq#IQueryable#Provider" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Provider As IQueryProvider Implements IQueryable.Provider" />
      <MemberSignature Language="C++ CLI" Value="property System::Linq::IQueryProvider ^ System::Linq::IQueryable::Provider { System::Linq::IQueryProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Linq.IQueryable.Provider : System.Linq.IQueryProvider" Usage="System.Linq.IQueryable.Provider" />
      <MemberSignature Language="C#" Value="System.Linq.IQueryProvider? System.Linq.IQueryable.Provider { get; }" FrameworkAlternate="net-5.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Linq.IQueryable.Provider</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc58e-122">Ruft den Abfrageanbieter ab, der mit dieser Instanz verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="cc58e-122">Gets the query provider that is associated with this instance.</span></span></summary>
        <value><span data-ttu-id="cc58e-123">Der Abfrageanbieter, der mit dieser Instanz verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="cc58e-123">The query provider that is associated with this instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="cc58e-124">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="cc58e-124">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cc58e-125">Er kann nur verwendet werden, wenn die <xref:System.Linq.EnumerableQuery`1>-Instanz in eine <xref:System.Linq.IQueryable>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="cc58e-125">It can be used only when the <xref:System.Linq.EnumerableQuery`1> instance is cast to an <xref:System.Linq.IQueryable> interface.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryProvider.CreateQuery">
      <MemberSignature Language="C#" Value="System.Linq.IQueryable IQueryProvider.CreateQuery (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Linq.IQueryable System.Linq.IQueryProvider.CreateQuery(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.EnumerableQuery`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Function CreateQuery (expression As Expression) As IQueryable Implements IQueryProvider.CreateQuery" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Linq::IQueryable ^ System.Linq.IQueryProvider.CreateQuery(System::Linq::Expressions::Expression ^ expression) = System::Linq::IQueryProvider::CreateQuery;" />
      <MemberSignature Language="F#" Value="abstract member System.Linq.IQueryProvider.CreateQuery : System.Linq.Expressions.Expression -&gt; System.Linq.IQueryable&#xA;override this.System.Linq.IQueryProvider.CreateQuery : System.Linq.Expressions.Expression -&gt; System.Linq.IQueryable" Usage="enumerableQuery.System.Linq.IQueryProvider.CreateQuery expression" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Linq.IQueryProvider.CreateQuery(System.Linq.Expressions.Expression)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="cc58e-126">Eine Ausdrucksbaumstruktur, die eine <see cref="T:System.Linq.IQueryable" />-Auflistung von Daten darstellt.</span><span class="sxs-lookup"><span data-stu-id="cc58e-126">An expression tree that represents an <see cref="T:System.Linq.IQueryable" /> collection of data.</span></span></param>
        <summary><span data-ttu-id="cc58e-127">Erstellt eine neues <see cref="T:System.Linq.EnumerableQuery`1" />-Objekt und verknüpft es mit einer angegebenen Ausdrucksbaumstruktur, die eine <see cref="T:System.Linq.IQueryable" />-Auflistung von Daten darstellt.</span><span class="sxs-lookup"><span data-stu-id="cc58e-127">Constructs a new <see cref="T:System.Linq.EnumerableQuery`1" /> object and associates it with a specified expression tree that represents an <see cref="T:System.Linq.IQueryable" /> collection of data.</span></span></summary>
        <returns><span data-ttu-id="cc58e-128">Ein <see cref="T:System.Linq.EnumerableQuery`1" />-Objekt, das mit diesem <paramref name="expression" /> verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="cc58e-128">An <see cref="T:System.Linq.EnumerableQuery`1" /> object that is associated with <paramref name="expression" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryProvider.CreateQuery&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="System.Linq.IQueryable&lt;S&gt; IQueryProvider.CreateQuery&lt;S&gt; (System.Linq.Expressions.Expression expression);" FrameworkAlternate="dotnet-uwp-10.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;!!S&gt; System.Linq.IQueryProvider.CreateQuery&lt;S&gt;(class System.Linq.Expressions.Expression expression) cil managed" FrameworkAlternate="dotnet-uwp-10.0" />
      <MemberSignature Language="DocId" Value="M:System.Linq.EnumerableQuery`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)" FrameworkAlternate="dotnet-uwp-10.0;net-5.0" />
      <MemberSignature Language="VB.NET" Value="Function CreateQuery(Of S) (expression As Expression) As IQueryable(Of S) Implements IQueryProvider.CreateQuery" FrameworkAlternate="dotnet-uwp-10.0" />
      <MemberSignature Language="C++ CLI" Value="generic &lt;typename S&gt;&#xA; virtual System::Linq::IQueryable&lt;S&gt; ^ System.Linq.IQueryProvider.CreateQuery(System::Linq::Expressions::Expression ^ expression) = System::Linq::IQueryProvider::CreateQuery;" FrameworkAlternate="dotnet-uwp-10.0" />
      <MemberSignature Language="F#" Value="abstract member System.Linq.IQueryProvider.CreateQuery : System.Linq.Expressions.Expression -&gt; System.Linq.IQueryable&lt;'S&gt;&#xA;override this.System.Linq.IQueryProvider.CreateQuery : System.Linq.Expressions.Expression -&gt; System.Linq.IQueryable&lt;'S&gt;" Usage="enumerableQuery.System.Linq.IQueryProvider.CreateQuery expression" FrameworkAlternate="dotnet-uwp-10.0" />
      <MemberSignature Language="C#" Value="System.Linq.IQueryable&lt;TElement&gt; IQueryProvider.CreateQuery&lt;TElement&gt; (System.Linq.Expressions.Expression expression);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Linq.IQueryable`1&lt;!!TElement&gt; System.Linq.IQueryProvider.CreateQuery&lt;TElement&gt;(class System.Linq.Expressions.Expression expression) cil managed" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="VB.NET" Value="Function CreateQuery(Of TElement) (expression As Expression) As IQueryable(Of TElement) Implements IQueryProvider.CreateQuery" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="C++ CLI" Value="generic &lt;typename TElement&gt;&#xA; virtual System::Linq::IQueryable&lt;TElement&gt; ^ System.Linq.IQueryProvider.CreateQuery(System::Linq::Expressions::Expression ^ expression) = System::Linq::IQueryProvider::CreateQuery;" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="F#" Value="abstract member System.Linq.IQueryProvider.CreateQuery : System.Linq.Expressions.Expression -&gt; System.Linq.IQueryable&lt;'Element&gt;&#xA;override this.System.Linq.IQueryProvider.CreateQuery : System.Linq.Expressions.Expression -&gt; System.Linq.IQueryable&lt;'Element&gt;" Usage="enumerableQuery.System.Linq.IQueryProvider.CreateQuery expression" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Linq.IQueryProvider.CreateQuery``1(System.Linq.Expressions.Expression)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="S" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0" />
      </Parameters>
      <Docs>
        <typeparam name="S"><span data-ttu-id="cc58e-129">Der Datentyp in der Auflistung, die <paramref name="expression" /> darstellt.</span><span class="sxs-lookup"><span data-stu-id="cc58e-129">The type of the data in the collection that <paramref name="expression" /> represents.</span></span></typeparam>
        <typeparam name="TElement">To be added.</typeparam>
        <param name="expression"><span data-ttu-id="cc58e-130">Eine auszuführende Ausdrucksbaumstruktur.</span><span class="sxs-lookup"><span data-stu-id="cc58e-130">An expression tree to execute.</span></span></param>
        <summary><span data-ttu-id="cc58e-131">Erstellt eine neues <see cref="T:System.Linq.EnumerableQuery`1" />-Objekt und verknüpft es mit einer angegebenen Ausdrucksbaumstruktur, die eine <see cref="T:System.Linq.IQueryable`1" />-Auflistung von Daten darstellt.</span><span class="sxs-lookup"><span data-stu-id="cc58e-131">Constructs a new <see cref="T:System.Linq.EnumerableQuery`1" /> object and associates it with a specified expression tree that represents an <see cref="T:System.Linq.IQueryable`1" /> collection of data.</span></span></summary>
        <returns><span data-ttu-id="cc58e-132">Ein EnumerableQuery-Objekt, das mit <paramref name="expression" /> verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="cc58e-132">An EnumerableQuery object that is associated with <paramref name="expression" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryProvider.Execute">
      <MemberSignature Language="C#" Value="object IQueryProvider.Execute (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Linq.IQueryProvider.Execute(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.EnumerableQuery`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Function Execute (expression As Expression) As Object Implements IQueryProvider.Execute" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Linq.IQueryProvider.Execute(System::Linq::Expressions::Expression ^ expression) = System::Linq::IQueryProvider::Execute;" />
      <MemberSignature Language="F#" Value="abstract member System.Linq.IQueryProvider.Execute : System.Linq.Expressions.Expression -&gt; obj&#xA;override this.System.Linq.IQueryProvider.Execute : System.Linq.Expressions.Expression -&gt; obj" Usage="enumerableQuery.System.Linq.IQueryProvider.Execute expression" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Linq.IQueryProvider.Execute(System.Linq.Expressions.Expression)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="cc58e-133">Eine auszuführende Ausdrucksbaumstruktur.</span><span class="sxs-lookup"><span data-stu-id="cc58e-133">An expression tree to execute.</span></span></param>
        <summary><span data-ttu-id="cc58e-134">Führt einen Ausdruck aus, nachdem dieser zum Aufrufen von <see cref="T:System.Linq.Enumerable" />-Methoden statt <see cref="T:System.Linq.Queryable" />-Methoden zu allen zählbaren Datenquellen umgeschrieben wurde, die nicht von <see cref="T:System.Linq.Queryable" />-Methoden abgefragt werden können.</span><span class="sxs-lookup"><span data-stu-id="cc58e-134">Executes an expression after rewriting it to call <see cref="T:System.Linq.Enumerable" /> methods instead of <see cref="T:System.Linq.Queryable" /> methods on any enumerable data sources that cannot be queried by <see cref="T:System.Linq.Queryable" /> methods.</span></span></summary>
        <returns><span data-ttu-id="cc58e-135">Der Wert, der aus der Ausführung von <paramref name="expression" /> stammt.</span><span class="sxs-lookup"><span data-stu-id="cc58e-135">The value that results from executing <paramref name="expression" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryProvider.Execute&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="S IQueryProvider.Execute&lt;S&gt; (System.Linq.Expressions.Expression expression);" FrameworkAlternate="dotnet-uwp-10.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance !!S System.Linq.IQueryProvider.Execute&lt;S&gt;(class System.Linq.Expressions.Expression expression) cil managed" FrameworkAlternate="dotnet-uwp-10.0" />
      <MemberSignature Language="DocId" Value="M:System.Linq.EnumerableQuery`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)" FrameworkAlternate="dotnet-uwp-10.0;net-5.0" />
      <MemberSignature Language="VB.NET" Value="Function Execute(Of S) (expression As Expression) As S Implements IQueryProvider.Execute" FrameworkAlternate="dotnet-uwp-10.0" />
      <MemberSignature Language="C++ CLI" Value="generic &lt;typename S&gt;&#xA; virtual S System.Linq.IQueryProvider.Execute(System::Linq::Expressions::Expression ^ expression) = System::Linq::IQueryProvider::Execute;" FrameworkAlternate="dotnet-uwp-10.0" />
      <MemberSignature Language="F#" Value="abstract member System.Linq.IQueryProvider.Execute : System.Linq.Expressions.Expression -&gt; 'S&#xA;override this.System.Linq.IQueryProvider.Execute : System.Linq.Expressions.Expression -&gt; 'S" Usage="enumerableQuery.System.Linq.IQueryProvider.Execute expression" FrameworkAlternate="dotnet-uwp-10.0" />
      <MemberSignature Language="C#" Value="TElement IQueryProvider.Execute&lt;TElement&gt; (System.Linq.Expressions.Expression expression);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance !!TElement System.Linq.IQueryProvider.Execute&lt;TElement&gt;(class System.Linq.Expressions.Expression expression) cil managed" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="VB.NET" Value="Function Execute(Of TElement) (expression As Expression) As TElement Implements IQueryProvider.Execute" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="C++ CLI" Value="generic &lt;typename TElement&gt;&#xA; virtual TElement System.Linq.IQueryProvider.Execute(System::Linq::Expressions::Expression ^ expression) = System::Linq::IQueryProvider::Execute;" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="F#" Value="abstract member System.Linq.IQueryProvider.Execute : System.Linq.Expressions.Expression -&gt; 'Element&#xA;override this.System.Linq.IQueryProvider.Execute : System.Linq.Expressions.Expression -&gt; 'Element" Usage="enumerableQuery.System.Linq.IQueryProvider.Execute expression" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Linq.IQueryProvider.Execute``1(System.Linq.Expressions.Expression)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TElement</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="S" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0" />
      </Parameters>
      <Docs>
        <typeparam name="S"><span data-ttu-id="cc58e-136">Der Datentyp in der Auflistung, die <paramref name="expression" /> darstellt.</span><span class="sxs-lookup"><span data-stu-id="cc58e-136">The type of the data in the collection that <paramref name="expression" /> represents.</span></span></typeparam>
        <typeparam name="TElement">To be added.</typeparam>
        <param name="expression"><span data-ttu-id="cc58e-137">Eine auszuführende Ausdrucksbaumstruktur.</span><span class="sxs-lookup"><span data-stu-id="cc58e-137">An expression tree to execute.</span></span></param>
        <summary><span data-ttu-id="cc58e-138">Führt einen Ausdruck aus, nachdem dieser zum Aufrufen von <see cref="T:System.Linq.Enumerable" />-Methoden statt <see cref="T:System.Linq.Queryable" />-Methoden zu allen zählbaren Datenquellen umgeschrieben wurde, die nicht von <see cref="T:System.Linq.Queryable" />-Methoden abgefragt werden können.</span><span class="sxs-lookup"><span data-stu-id="cc58e-138">Executes an expression after rewriting it to call <see cref="T:System.Linq.Enumerable" /> methods instead of <see cref="T:System.Linq.Queryable" /> methods on any enumerable data sources that cannot be queried by <see cref="T:System.Linq.Queryable" /> methods.</span></span></summary>
        <returns><span data-ttu-id="cc58e-139">Der Wert, der aus der Ausführung von <paramref name="expression" /> stammt.</span><span class="sxs-lookup"><span data-stu-id="cc58e-139">The value that results from executing <paramref name="expression" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.EnumerableQuery`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="enumerableQuery.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc58e-140">Gibt eine Textdarstellung der zählbaren Auflistung zurück oder, wenn diese NULL ist, eine Darstellung der Ausdrucksbaumstruktur, die dieser Instanz zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="cc58e-140">Returns a textual representation of the enumerable collection or, if it is null, of the expression tree that is associated with this instance.</span></span></summary>
        <returns><span data-ttu-id="cc58e-141">Eine Textdarstellung der zählbaren Auflistung oder, wenn diese NULL ist, eine Darstellung der Ausdrucksbaumstruktur, die dieser Instanz zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="cc58e-141">A textual representation of the enumerable collection or, if it is null, of the expression tree that is associated with this instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
