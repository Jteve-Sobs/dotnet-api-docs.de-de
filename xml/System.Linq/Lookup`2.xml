<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Lookup`2.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e117aba7e13b8a6d90fc55a009b0e45546029a1b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e117aba7e13b8a6d90fc55a009b0e45546029a1b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Lookup`2">
          <source>The type of the keys in the <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph>.</source>
          <target state="translated">Der Typ der Schlüssel in einem <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Lookup`2">
          <source>The type of the elements of each <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> value in the <ph id="ph2">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph>.</source>
          <target state="translated">Der Elementtyp im jeweiligen <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>-Wert von <ph id="ph2">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Linq.Lookup`2">
          <source>Represents a collection of keys each mapped to one or more values.</source>
          <target state="translated">Stellt eine Auflistung von Schlüsseln dar, die jeweils mindestens einem Wert zugeordnet sind.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Lookup`2">
          <source>A <ph id="ph1">&lt;xref:System.Linq.Lookup%602&gt;</ph> resembles a <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Linq.Lookup%602&gt;</ph> ähnelt einer <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Lookup`2">
          <source>The difference is that a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> maps keys to single values, whereas a <ph id="ph2">&lt;xref:System.Linq.Lookup%602&gt;</ph> maps keys to collections of values.</source>
          <target state="translated">Der Unterschied besteht darin, die eine <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> Schlüssel in einzelne Werte zugeordnet, während eine <ph id="ph2">&lt;xref:System.Linq.Lookup%602&gt;</ph> ordnet Schlüssel für eine Sammlung von Werten.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Lookup`2">
          <source>You can create an instance of a <ph id="ph1">&lt;xref:System.Linq.Lookup%602&gt;</ph> by calling <ph id="ph2">&lt;xref:System.Linq.Enumerable.ToLookup%2A&gt;</ph> on an object that implements <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</source>
          <target state="translated">Erstellen eine Instanz von einer <ph id="ph1">&lt;xref:System.Linq.Lookup%602&gt;</ph> durch Aufrufen <ph id="ph2">&lt;xref:System.Linq.Enumerable.ToLookup%2A&gt;</ph> auf ein Objekt, das implementiert <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Lookup`2">
          <source>There is no public constructor to create a new instance of a <ph id="ph1">&lt;xref:System.Linq.Lookup%602&gt;</ph>.</source>
          <target state="translated">Es ist kein öffentlicher Konstruktor zum Erstellen einer neuen Instanz von einem <ph id="ph1">&lt;xref:System.Linq.Lookup%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Lookup`2">
          <source>Additionally, <ph id="ph1">&lt;xref:System.Linq.Lookup%602&gt;</ph> objects are immutable, that is, you cannot add or remove elements or keys from a <ph id="ph2">&lt;xref:System.Linq.Lookup%602&gt;</ph> object after it has been created.</source>
          <target state="translated">Darüber hinaus <ph id="ph1">&lt;xref:System.Linq.Lookup%602&gt;</ph> Objekte sind unveränderlich, d. h. keine hinzufügen oder Entfernen der Elemente oder Schlüssel aus einem <ph id="ph2">&lt;xref:System.Linq.Lookup%602&gt;</ph> Objekt, nachdem es erstellt wurde.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Lookup`2">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Linq.Lookup%602&gt;</ph> from a collection of objects.</source>
          <target state="translated">Das folgende Beispiel erstellt eine <ph id="ph1">&lt;xref:System.Linq.Lookup%602&gt;</ph> aus einer Auflistung von Objekten.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Lookup`2">
          <source>It then enumerates the <ph id="ph1">&lt;xref:System.Linq.Lookup%602&gt;</ph> and outputs each key and each value in the key's associated collection of values.</source>
          <target state="translated">Er dann listet der <ph id="ph1">&lt;xref:System.Linq.Lookup%602&gt;</ph> und jeder Schlüssel und für jeden Wert in den Schlüssel zugeordnete Auflistung von Werten gibt.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Lookup`2">
          <source>It also demonstrates how to use the properties <ph id="ph1">&lt;xref:System.Linq.Lookup%602.Count%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Linq.Lookup%602.Item%2A&gt;</ph> and the methods <ph id="ph3">&lt;xref:System.Linq.Lookup%602.Contains%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Linq.Lookup%602.GetEnumerator%2A&gt;</ph>.</source>
          <target state="translated">Außerdem wird veranschaulicht, wie Sie die Eigenschaften <ph id="ph1">&lt;xref:System.Linq.Lookup%602.Count%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Linq.Lookup%602.Item%2A&gt;</ph> und die Methoden <ph id="ph3">&lt;xref:System.Linq.Lookup%602.Contains%2A&gt;</ph> und <ph id="ph4">&lt;xref:System.Linq.Lookup%602.GetEnumerator%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Lookup`2.ApplyResultSelector``1(System.Func{`0,System.Collections.Generic.IEnumerable{`1},``0})">
          <source>The type of the result values produced by <bpt id="p1">&lt;c&gt;</bpt>resultSelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Der Typ, der die Ergebniswerte von erzeugten <bpt id="p1">&lt;c&gt;</bpt>ResultSelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Linq.Lookup`2.ApplyResultSelector``1(System.Func{`0,System.Collections.Generic.IEnumerable{`1},``0})">
          <source>A function to project a result value from each key and its associated values.</source>
          <target state="translated">Eine Funktion zur Projizierung eines Ergebniswerts für die einzelnen Schlüssel sowie die zugeordneten Werte.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Linq.Lookup`2.ApplyResultSelector``1(System.Func{`0,System.Collections.Generic.IEnumerable{`1},``0})">
          <source>Applies a transform function to each key and its associated values and returns the results.</source>
          <target state="translated">Wendet eine Transformationsfunktion auf jeden Schlüssel sowie auf die zugeordneten Werte an und gibt die Ergebnisse zurück.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Linq.Lookup`2.ApplyResultSelector``1(System.Func{`0,System.Collections.Generic.IEnumerable{`1},``0})">
          <source>A collection that contains one value for each key/value collection pair in the <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph>.</source>
          <target state="translated">Eine Auflistung mit einem Wert für jedes Schlüssel-Wert-Paar in der Auflistung im <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Linq.Lookup`2.Contains(`0)">
          <source>The key to find in the <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph>.</source>
          <target state="translated">Der Schlüssel, der im <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph> gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Linq.Lookup`2.Contains(`0)">
          <source>Determines whether a specified key is in the <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph>.</source>
          <target state="translated">Bestimmt, ob ein angegebener Schlüssel im <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph> vorhanden ist.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Linq.Lookup`2.Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> is in the <ph id="ph3">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;paramref name="key" /&gt;</ph> in der <ph id="ph3">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph> vorhanden ist, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Lookup`2.Contains(`0)">
          <source>The following example demonstrates how to use <ph id="ph1">&lt;xref:System.Linq.Lookup%602.Contains%2A&gt;</ph> to determine whether a <ph id="ph2">&lt;xref:System.Linq.Lookup%602&gt;</ph> contains a specified key.</source>
          <target state="translated">Im folgenden Beispiel wird veranschaulicht, wie <ph id="ph1">&lt;xref:System.Linq.Lookup%602.Contains%2A&gt;</ph> um zu bestimmen, ob eine <ph id="ph2">&lt;xref:System.Linq.Lookup%602&gt;</ph> einen angegebenen Schlüssel enthält.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Lookup`2.Contains(`0)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Linq.Lookup%602&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Linq.Lookup%602&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Linq.Lookup`2.Count">
          <source>Gets the number of key/value collection pairs in the <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph>.</source>
          <target state="translated">Ruft die Anzahl der Schlüssel-Wert-Paare in der Auflistung im <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph> ab.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Lookup`2.Count">
          <source>The number of key/value collection pairs in the <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph>.</source>
          <target state="translated">Die Anzahl der Schlüssel-Wert-Paare in der Auflistung im <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Lookup`2.Count">
          <source>The value of the <ph id="ph1">&lt;xref:System.Linq.Lookup%602.Count%2A&gt;</ph> property does not change because items cannot be added to or removed from a <ph id="ph2">&lt;xref:System.Linq.Lookup%602&gt;</ph> object after it has been created.</source>
          <target state="translated">Der Wert, der die <ph id="ph1">&lt;xref:System.Linq.Lookup%602.Count%2A&gt;</ph> Eigenschaft wird nicht geändert werden, da Elemente können nicht hinzugefügt oder daraus ein <ph id="ph2">&lt;xref:System.Linq.Lookup%602&gt;</ph> Objekt, nachdem es erstellt wurde.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Lookup`2.Count">
          <source>The following example demonstrates how to use <ph id="ph1">&lt;xref:System.Linq.Lookup%602.Count%2A&gt;</ph> to determine the number of key/value collection pairs in a <ph id="ph2">&lt;xref:System.Linq.Lookup%602&gt;</ph>.</source>
          <target state="translated">Im folgenden Beispiel wird veranschaulicht, wie <ph id="ph1">&lt;xref:System.Linq.Lookup%602.Count%2A&gt;</ph> bestimmt die Anzahl von Schlüssel/Wert-auflistungspaare in einem <ph id="ph2">&lt;xref:System.Linq.Lookup%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Lookup`2.Count">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Linq.Lookup%602&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Linq.Lookup%602&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Linq.Lookup`2.GetEnumerator">
          <source>Returns a generic enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph>.</source>
          <target state="translated">Gibt einen generischen Enumerator zurück, der das <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph> durchläuft.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Linq.Lookup`2.GetEnumerator">
          <source>An enumerator for the <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph>.</source>
          <target state="translated">Ein Enumerator für <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Lookup`2.GetEnumerator">
          <source>The following example demonstrates how to use <ph id="ph1">&lt;xref:System.Linq.Lookup%602.GetEnumerator%2A&gt;</ph> to iterate through the keys and values of a <ph id="ph2">&lt;xref:System.Linq.Lookup%602&gt;</ph>.</source>
          <target state="translated">Im folgenden Beispiel wird veranschaulicht, wie <ph id="ph1">&lt;xref:System.Linq.Lookup%602.GetEnumerator%2A&gt;</ph> zum iterieren durch die Schlüssel und Werte von einem <ph id="ph2">&lt;xref:System.Linq.Lookup%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Lookup`2.GetEnumerator">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Linq.Lookup%602&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Linq.Lookup%602&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Linq.Lookup`2.Item(`0)">
          <source>The key of the desired collection of values.</source>
          <target state="translated">Der Schlüssel der gewünschten Sammlung von Werten.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Linq.Lookup`2.Item(`0)">
          <source>Gets the collection of values indexed by the specified key.</source>
          <target state="translated">Ruft die Sammlung von Werten ab, die durch den angegebenen Schlüssel indiziert werden.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Lookup`2.Item(`0)">
          <source>The collection of values indexed by the specified key.</source>
          <target state="translated">Die Sammlung von Werten, die durch den angegebenen Schlüssel indiziert werden.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Lookup`2.Item(`0)">
          <source>This indexed property provides the ability to index a specific collection of values in the <ph id="ph1">&lt;xref:System.Linq.Lookup%602&gt;</ph> by using the following syntax: <ph id="ph2">`myLookup[key]`</ph> in <ph id="ph3">[!INCLUDE[csprcs](~/includes/csprcs-md.md)]</ph> or <ph id="ph4">`myLookup(key)`</ph> in <ph id="ph5">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</source>
          <target state="translated">Indizierte Eigenschaft bietet die Möglichkeit, eine bestimmte Sammlung der Werte im index der <ph id="ph1">&lt;xref:System.Linq.Lookup%602&gt;</ph> mithilfe der folgenden Syntax: <ph id="ph2">`myLookup[key]`</ph> in <ph id="ph3">[!INCLUDE[csprcs](~/includes/csprcs-md.md)]</ph> oder <ph id="ph4">`myLookup(key)`</ph> in <ph id="ph5">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Lookup`2.Item(`0)">
          <source>If the <ph id="ph1">`key`</ph> is not found in the collection, an empty sequence is returned.</source>
          <target state="translated">Wenn die <ph id="ph1">`key`</ph> befindet sich nicht in der Auflistung wird eine leere Sequenz zurückgegeben.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Lookup`2.Item(`0)">
          <source>The following example demonstrates how to use <ph id="ph1">&lt;xref:System.Linq.Lookup%602.Item%2A&gt;</ph> to index directly into a <ph id="ph2">&lt;xref:System.Linq.Lookup%602&gt;</ph>.</source>
          <target state="translated">Im folgenden Beispiel wird veranschaulicht, wie <ph id="ph1">&lt;xref:System.Linq.Lookup%602.Item%2A&gt;</ph> direkt in eine <ph id="ph2">&lt;xref:System.Linq.Lookup%602&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Lookup`2.Item(`0)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Linq.Lookup%602&gt;</ph> class.</source>
          <target state="translated">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <ph id="ph1">&lt;xref:System.Linq.Lookup%602&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Linq.Lookup`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph>.</source>
          <target state="translated">Gibt einen Enumerator zurück, der die <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph> durchläuft.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Linq.Lookup`2.System#Collections#IEnumerable#GetEnumerator">
          <source>This class cannot be inherited.</source>
          <target state="translated">Diese Klasse kann nicht vererbt werden.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Linq.Lookup`2.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator for the <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph>.</source>
          <target state="translated">Ein Enumerator für <ph id="ph1">&lt;see cref="T:System.Linq.Lookup`2" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>