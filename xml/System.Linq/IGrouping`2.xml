<Type Name="IGrouping&lt;TKey,TElement&gt;" FullName="System.Linq.IGrouping&lt;TKey,TElement&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="198c4dbf6050cf6a36f481f1bf89a388b39bae0d" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58717278" /></Metadata><TypeSignature Language="C#" Value="public interface IGrouping&lt;out TKey,out TElement&gt; : System.Collections.Generic.IEnumerable&lt;out TElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IGrouping`2&lt;+ TKey, + TElement&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!TElement&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Linq.IGrouping`2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IGrouping(Of Out TKey, Out TElement)&#xA;Implements IEnumerable(Of Out TElement)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TElement&gt;&#xA;public interface class IGrouping : System::Collections::Generic::IEnumerable&lt;TElement&gt;" />
  <TypeSignature Language="F#" Value="type IGrouping&lt;'Key, 'Element&gt; = interface&#xA;    interface seq&lt;'Element&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TElement">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TElement&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TKey">Der Typ des Schlüssels von <see cref="T:System.Linq.IGrouping`2" />.</typeparam>
    <typeparam name="TElement">Der Typ der Werte in <see cref="T:System.Linq.IGrouping`2" />.</typeparam>
    <summary>Stellt eine Auflistung von Objekten dar, die über einen gemeinsamen Schlüssel verfügen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Linq.IGrouping%602> ist ein <xref:System.Collections.Generic.IEnumerable%601> , die verfügt außerdem über einen Schlüssel. Den Schlüssel darstellt, das Attribut, das für jeden Wert in der <xref:System.Linq.IGrouping%602>.  
  
 Die Werte der ein <xref:System.Linq.IGrouping%602> erfolgt sehr viel wie die Elemente einer <xref:System.Collections.Generic.IEnumerable%601> zugegriffen werden. Beispielsweise können Sie die Werte zugreifen, indem Sie mit einem `foreach` in Visual C#- oder `For Each` in Visual Basic-Schleife zum Durchlaufen der <xref:System.Linq.IGrouping%602> Objekt. Im Beispielabschnitt enthält ein Codebeispiel, das zeigt, wie Sie den Schlüssel und die Werte der Zugriff auf eine <xref:System.Linq.IGrouping%602> Objekt.  
  
 Die <xref:System.Linq.IGrouping%602> Typ wird verwendet, durch die <xref:System.Linq.Enumerable.GroupBy%2A> Standardabfrageoperator-Methoden, die eine Sequenz von Elementen des Typs zurückgeben <xref:System.Linq.IGrouping%602>.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie die Arbeit mit einer <xref:System.Linq.IGrouping%602> Objekt.  
  
 In diesem Beispiel <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> aufgerufen wird, auf das Array von <xref:System.Reflection.MemberInfo> zurückgegebenen Objekte <xref:System.Type.GetMembers%2A>. <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> die Objekte, die basierend auf den Wert gruppiert ihre <xref:System.Reflection.MemberInfo.MemberType%2A> Eigenschaft. Jeden eindeutigen Wert für <xref:System.Reflection.MemberInfo.MemberType%2A> im Array der <xref:System.Reflection.MemberInfo> Objekte wird ein Schlüssel für einen neuen <xref:System.Linq.IGrouping%602> -Objekt, und die <xref:System.Reflection.MemberInfo> Objekte, die diesem Schlüssel bilden die <xref:System.Linq.IGrouping%602> Sequenz von Werten des Objekts.  
  
 Zum Schluss die <xref:System.Linq.Enumerable.First%2A> Methode wird aufgerufen, für die Sequenz der <xref:System.Linq.IGrouping%602> Objekte nur in der ersten abzurufenden <xref:System.Linq.IGrouping%602> Objekt.  
  
 Im Beispiel gibt dann den Schlüssel des der <xref:System.Linq.IGrouping%602> Objekt und die <xref:System.Reflection.MemberInfo.Name%2A> Eigenschaft der einzelnen Werte in der <xref:System.Linq.IGrouping%602> Sequenz von Werten des Objekts. Beachten Sie, dass Sie den Zugriff auf eine <xref:System.Linq.IGrouping%602> Sequenz von Werten des Objekts, verwenden Sie einfach die <xref:System.Linq.IGrouping%602> Variable selbst.  
  
 [!code-csharp[System.Linq.IGrouping#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.IGrouping/CS/igrouping.cs#1)]
 [!code-vb[System.Linq.IGrouping#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.IGrouping/VB/IGrouping.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public TKey Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TKey Key" />
      <MemberSignature Language="DocId" Value="P:System.Linq.IGrouping`2.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As TKey" />
      <MemberSignature Language="F#" Value="member this.Key : 'Key" Usage="System.Linq.IGrouping&lt;'Key, 'Element&gt;.Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TKey Key { TKey get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Schlüssel von <see cref="T:System.Linq.IGrouping`2" /> ab.</summary>
        <value>Der Schlüssel des <see cref="T:System.Linq.IGrouping`2" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Schlüssel des ein <xref:System.Linq.IGrouping%602> stellt das Attribut dar, die für jeden Wert in der <xref:System.Linq.IGrouping%602>.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Linq.IGrouping%602.Key%2A> -Eigenschaft alle <xref:System.Linq.IGrouping%602> Objekt in einer Sequenz von <xref:System.Linq.IGrouping%602> Objekte. Die <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> Methode wird verwendet, um eine Sequenz von erhalten <xref:System.Linq.IGrouping%602> Objekte. Die `foreach` in Visual C#- oder `For Each` in Visual Basic Schleife durchläuft dann jedes <xref:System.Linq.IGrouping%602> -Objekt und gibt seinen Schlüssel und die Anzahl der darin enthaltenen Werte.  
  
 [!code-csharp[System.Linq.IGrouping#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.IGrouping/CS/igrouping.cs#2)]
 [!code-vb[System.Linq.IGrouping#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.IGrouping/VB/IGrouping.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>