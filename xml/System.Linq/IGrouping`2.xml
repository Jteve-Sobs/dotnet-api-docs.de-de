<Type Name="IGrouping&lt;TKey,TElement&gt;" FullName="System.Linq.IGrouping&lt;TKey,TElement&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="454eb0bfdd9c63bfe806d3496568ecdbded3cd5d" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75130878" /></Metadata><TypeSignature Language="C#" Value="public interface IGrouping&lt;out TKey,out TElement&gt; : System.Collections.Generic.IEnumerable&lt;out TElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IGrouping`2&lt;+ TKey, + TElement&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!TElement&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Linq.IGrouping`2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IGrouping(Of Out TKey, Out TElement)&#xA;Implements IEnumerable(Of Out TElement)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TElement&gt;&#xA;public interface class IGrouping : System::Collections::Generic::IEnumerable&lt;TElement&gt;" />
  <TypeSignature Language="F#" Value="type IGrouping&lt;'Key, 'Element&gt; = interface&#xA;    interface seq&lt;'Element&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TElement">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TElement&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TKey"><span data-ttu-id="e5e47-101">Der Typ des Schlüssels von <see cref="T:System.Linq.IGrouping`2" />.</span><span class="sxs-lookup"><span data-stu-id="e5e47-101">The type of the key of the <see cref="T:System.Linq.IGrouping`2" />.</span></span></typeparam>
    <typeparam name="TElement"><span data-ttu-id="e5e47-102">Der Typ der Werte in <see cref="T:System.Linq.IGrouping`2" />.</span><span class="sxs-lookup"><span data-stu-id="e5e47-102">The type of the values in the <see cref="T:System.Linq.IGrouping`2" />.</span></span></typeparam>
    <summary><span data-ttu-id="e5e47-103">Ruft eine Auflistung von Objekten mit einem gemeinsamen Schlüssel ab.</span><span class="sxs-lookup"><span data-stu-id="e5e47-103">Represents a collection of objects that have a common key.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5e47-104">Ein <xref:System.Linq.IGrouping%602> ist ein <xref:System.Collections.Generic.IEnumerable%601>, der zusätzlich über einen Schlüssel verfügt.</span><span class="sxs-lookup"><span data-stu-id="e5e47-104">An <xref:System.Linq.IGrouping%602> is an <xref:System.Collections.Generic.IEnumerable%601> that additionally has a key.</span></span> <span data-ttu-id="e5e47-105">Der Schlüssel stellt das Attribut dar, das den einzelnen Werten im <xref:System.Linq.IGrouping%602>gemeinsam ist.</span><span class="sxs-lookup"><span data-stu-id="e5e47-105">The key represents the attribute that is common to each value in the <xref:System.Linq.IGrouping%602>.</span></span>  
  
 <span data-ttu-id="e5e47-106">Auf die Werte einer <xref:System.Linq.IGrouping%602> wird sehr viel zugegriffen, wenn auf die Elemente einer <xref:System.Collections.Generic.IEnumerable%601> zugegriffen wird.</span><span class="sxs-lookup"><span data-stu-id="e5e47-106">The values of an <xref:System.Linq.IGrouping%602> are accessed much as the elements of an <xref:System.Collections.Generic.IEnumerable%601> are accessed.</span></span> <span data-ttu-id="e5e47-107">Beispielsweise können Sie auf die Werte zugreifen, indem Sie eine `foreach` in C# Visual oder `For Each` in Visual Basic Schleife verwenden, um das <xref:System.Linq.IGrouping%602> Objekt zu durchlaufen.</span><span class="sxs-lookup"><span data-stu-id="e5e47-107">For example, you can access the values by using a `foreach` in Visual C# or `For Each` in Visual Basic loop to iterate through the <xref:System.Linq.IGrouping%602> object.</span></span> <span data-ttu-id="e5e47-108">Der Beispiel Abschnitt enthält ein Codebeispiel, in dem gezeigt wird, wie Sie sowohl auf den Schlüssel als auch auf die Werte eines <xref:System.Linq.IGrouping%602> Objekts zugreifen können.</span><span class="sxs-lookup"><span data-stu-id="e5e47-108">The Example section contains a code example that shows you how to access both the key and the values of an <xref:System.Linq.IGrouping%602> object.</span></span>  
  
 <span data-ttu-id="e5e47-109">Der <xref:System.Linq.IGrouping%602>-Typ wird von den <xref:System.Linq.Enumerable.GroupBy%2A> Standard Abfrage Operator-Methoden verwendet, die eine Sequenz von Elementen des Typs <xref:System.Linq.IGrouping%602>zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="e5e47-109">The <xref:System.Linq.IGrouping%602> type is used by the <xref:System.Linq.Enumerable.GroupBy%2A> standard query operator methods, which return a sequence of elements of type <xref:System.Linq.IGrouping%602>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5e47-110">Im folgenden Beispiel wird veranschaulicht, wie Sie mit einem <xref:System.Linq.IGrouping%602>-Objekt arbeiten.</span><span class="sxs-lookup"><span data-stu-id="e5e47-110">The following example demonstrates how to work with an <xref:System.Linq.IGrouping%602> object.</span></span>  
  
 <span data-ttu-id="e5e47-111">In diesem Beispiel wird <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> für das Array von <xref:System.Reflection.MemberInfo> Objekten aufgerufen, die von <xref:System.Type.GetMembers%2A>zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="e5e47-111">In this example, <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> is called on the array of <xref:System.Reflection.MemberInfo> objects returned by <xref:System.Type.GetMembers%2A>.</span></span> <span data-ttu-id="e5e47-112"><xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> gruppiert die Objekte basierend auf dem Wert ihrer <xref:System.Reflection.MemberInfo.MemberType%2A>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="e5e47-112"><xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> groups the objects based on the value of their <xref:System.Reflection.MemberInfo.MemberType%2A> property.</span></span> <span data-ttu-id="e5e47-113">Jeder eindeutige Wert für <xref:System.Reflection.MemberInfo.MemberType%2A> im Array von <xref:System.Reflection.MemberInfo> Objekten wird ein Schlüssel für ein neues <xref:System.Linq.IGrouping%602> Objekt, und die <xref:System.Reflection.MemberInfo> Objekte, die über diesen Schlüssel verfügen, bilden die Sequenz von Werten des <xref:System.Linq.IGrouping%602> Objekts.</span><span class="sxs-lookup"><span data-stu-id="e5e47-113">Each unique value for <xref:System.Reflection.MemberInfo.MemberType%2A> in the array of <xref:System.Reflection.MemberInfo> objects becomes a key for a new <xref:System.Linq.IGrouping%602> object, and the <xref:System.Reflection.MemberInfo> objects that have that key form the <xref:System.Linq.IGrouping%602> object's sequence of values.</span></span>  
  
 <span data-ttu-id="e5e47-114">Zum Schluss wird die <xref:System.Linq.Enumerable.First%2A>-Methode für die Sequenz von <xref:System.Linq.IGrouping%602>-Objekten aufgerufen, um nur das erste <xref:System.Linq.IGrouping%602>-Objekt zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="e5e47-114">Finally, the <xref:System.Linq.Enumerable.First%2A> method is called on the sequence of <xref:System.Linq.IGrouping%602> objects to obtain just the first <xref:System.Linq.IGrouping%602> object.</span></span>  
  
 <span data-ttu-id="e5e47-115">Im Beispiel wird dann der Schlüssel des <xref:System.Linq.IGrouping%602> Objekts und die <xref:System.Reflection.MemberInfo.Name%2A>-Eigenschaft jedes Werts in der Sequenz von Werten des <xref:System.Linq.IGrouping%602> Objekts ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="e5e47-115">The example then outputs the key of the <xref:System.Linq.IGrouping%602> object and the <xref:System.Reflection.MemberInfo.Name%2A> property of each value in the <xref:System.Linq.IGrouping%602> object's sequence of values.</span></span> <span data-ttu-id="e5e47-116">Beachten Sie, dass Sie zum Zugreifen auf die Sequenz von Werten eines <xref:System.Linq.IGrouping%602> Objekts einfach die <xref:System.Linq.IGrouping%602> Variable selbst verwenden.</span><span class="sxs-lookup"><span data-stu-id="e5e47-116">Notice that to access an <xref:System.Linq.IGrouping%602> object's sequence of values, you simply use the <xref:System.Linq.IGrouping%602> variable itself.</span></span>  
  
 [!code-csharp[System.Linq.IGrouping#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.IGrouping/CS/igrouping.cs#1)]
 [!code-vb[System.Linq.IGrouping#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.IGrouping/VB/IGrouping.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public TKey Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TKey Key" />
      <MemberSignature Language="DocId" Value="P:System.Linq.IGrouping`2.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As TKey" />
      <MemberSignature Language="F#" Value="member this.Key : 'Key" Usage="System.Linq.IGrouping&lt;'Key, 'Element&gt;.Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TKey Key { TKey get(); };" FrameworkAlternate="netframework-3.5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5e47-117">Ruft den Schlüssel von <see cref="T:System.Linq.IGrouping`2" /> ab.</span><span class="sxs-lookup"><span data-stu-id="e5e47-117">Gets the key of the <see cref="T:System.Linq.IGrouping`2" />.</span></span></summary>
        <value><span data-ttu-id="e5e47-118">Der Schlüssel des <see cref="T:System.Linq.IGrouping`2" />.</span><span class="sxs-lookup"><span data-stu-id="e5e47-118">The key of the <see cref="T:System.Linq.IGrouping`2" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5e47-119">Der Schlüssel einer <xref:System.Linq.IGrouping%602> die das Attribut darstellt, das jedem Wert in der <xref:System.Linq.IGrouping%602>gemeinsam ist.</span><span class="sxs-lookup"><span data-stu-id="e5e47-119">The key of an <xref:System.Linq.IGrouping%602> represents the attribute that is common to each value in the <xref:System.Linq.IGrouping%602>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5e47-120">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Linq.IGrouping%602.Key%2A>-Eigenschaft verwendet wird, um jedes <xref:System.Linq.IGrouping%602>-Objekt in einer Sequenz von <xref:System.Linq.IGrouping%602>-Objekten zu bezeichnen.</span><span class="sxs-lookup"><span data-stu-id="e5e47-120">The following example demonstrates how to use the <xref:System.Linq.IGrouping%602.Key%2A> property to label each <xref:System.Linq.IGrouping%602> object in a sequence of <xref:System.Linq.IGrouping%602> objects.</span></span> <span data-ttu-id="e5e47-121">Die <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29>-Methode wird verwendet, um eine Sequenz von <xref:System.Linq.IGrouping%602> Objekten abzurufen.</span><span class="sxs-lookup"><span data-stu-id="e5e47-121">The <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> method is used to obtain a sequence of <xref:System.Linq.IGrouping%602> objects.</span></span> <span data-ttu-id="e5e47-122">Der `foreach` in Visual C# oder der `For Each` in Visual Basic Schleife durchläuft dann jedes <xref:System.Linq.IGrouping%602> Objekt, wobei der Schlüssel und die Anzahl der darin enthaltenen Werte ausgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="e5e47-122">The `foreach` in Visual C# or `For Each` in Visual Basic loop then iterates through each <xref:System.Linq.IGrouping%602> object, outputting its key and the number of values it contains.</span></span>  
  
 [!code-csharp[System.Linq.IGrouping#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.IGrouping/CS/igrouping.cs#2)]
 [!code-vb[System.Linq.IGrouping#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.IGrouping/VB/IGrouping.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
