<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DbExpressionBuilder.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5359071078d3c8e16b6368e2fd2700ff8109ec910.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">359071078d3c8e16b6368e2fd2700ff8109ec910</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
          <source>Provides an API to construct <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>s and allows that API to be accessed as extension methods on the expression type itself.</source>
          <target state="translated">Stellt eine API bereit, um <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>s zu erstellen, und lässt zu, dass auf diese API als Erweiterungsmethoden für den Ausdruckstyp selbst zugegriffen werden kann.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
          <source>The function that defines the aggregate operation.</source>
          <target state="translated">Die Funktion, die die Aggregatoperation definiert.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
          <source>The argument over which the aggregate function should be calculated.</source>
          <target state="translated">Das Argument, über dem die Aggregatfunktion berechnet werden sollte.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /&gt;</ph>.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new function aggregate with a reference to the given function and argument.</source>
          <target state="translated">Ein neues Funktionsaggregat mit einem Verweis auf das Argument und der angegebenen Funktion.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
          <source>The function aggregate's Distinct property will have the value <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Die Distinct-Eigenschaft des Funktionsaggregats wird den Wert <ph id="ph1">&lt;see langword="false" /&gt;</ph> besitzen.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="function" /&gt;</ph> or <ph id="ph2">&lt;paramref name="argument" /&gt;</ph> null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="function" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="argument" /&gt;</ph> NULL.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="function" /&gt;</ph> is not an aggregate function or has more than one argument, or the result type of <ph id="ph2">&lt;paramref name="argument" /&gt;</ph> is not equal or promotable to the parameter type of <ph id="ph3">&lt;paramref name="function" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="function" /&gt;</ph> ist keine Aggregatfunktion oder weist mehrere Argumente auf, oder der Ergebnistyp von <ph id="ph2">&lt;paramref name="argument" /&gt;</ph> ist nicht gleich dem Parametertyp von <ph id="ph3">&lt;paramref name="function" /&gt;</ph> und kann auch nicht zu diesem heraufgestuft werden.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
          <source>The function that defines the aggregate operation.</source>
          <target state="translated">Die Funktion, die die Aggregatoperation definiert.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
          <source>The argument over which the aggregate function should be calculated.</source>
          <target state="translated">Das Argument, über dem die Aggregatfunktion berechnet werden sollte.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /&gt;</ph> that is applied in a distinct fashion.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /&gt;</ph>, das in einer unterschiedlichen Weise angewendet wird.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new function aggregate with a reference to the given function and argument.</source>
          <target state="translated">Ein neues Funktionsaggregat mit einem Verweis auf das Argument und der angegebenen Funktion.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
          <source>The function aggregate's Distinct property will have the value <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Die Distinct-Eigenschaft des Funktionsaggregats wird den Wert <ph id="ph1">&lt;see langword="true" /&gt;</ph> besitzen.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="function" /&gt;</ph> or <ph id="ph2">&lt;paramref name="argument" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="function" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="argument" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="function" /&gt;</ph> is not an aggregate function or has more than one argument, or the result type of <ph id="ph2">&lt;paramref name="argument" /&gt;</ph> is not equal or promotable to the parameter type of <ph id="ph3">&lt;paramref name="function" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="function" /&gt;</ph> ist keine Aggregatfunktion oder weist mehrere Argumente auf, oder der Ergebnistyp von <ph id="ph2">&lt;paramref name="argument" /&gt;</ph> ist nicht gleich dem Parametertyp von <ph id="ph3">&lt;paramref name="function" /&gt;</ph> und kann auch nicht zu diesem heraufgestuft werden.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /&gt;</ph> that determines whether the given predicate holds for all elements of the input set.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /&gt;</ph>, der bestimmt, ob das angegebene Prädikat für alle Element des Eingabesets gültig ist.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>An expression that specifies the input set.</source>
          <target state="translated">Ein Ausdruck, der das Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method representing a predicate to evaluate for each member of the input set.</source>
          <target state="translated">Eine Methode, die ein Prädikat darstellt, das für jeden Member des Eingabesets ausgewertet werden soll.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>This method must produce an expression with a Boolean result type that provides the predicate logic.</source>
          <target state="translated">Diese Methode muss einen Ausdruck mit einem booleschen Ergebnistyp erzeugen, der die Prädikatlogik bereitstellt.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /&gt;</ph> that determines whether the given predicate holds for all elements of the input set.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /&gt;</ph>, der bestimmt, ob das angegebene Prädikat für alle Element des Eingabesets gültig ist.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A new DbQuantifierExpression that represents the All operation.</source>
          <target state="translated">Ein neues DbQuantifierExpression, das den All-Vorgang darstellt.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> is null.</source>
          <target state="translated">Der von <ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> erzeugte Ausdruck ist NULL.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="Predicate" /&gt;</ph> does not have a Boolean result type.</source>
          <target state="translated">Der von <ph id="ph1">&lt;paramref name="Predicate" /&gt;</ph> erzeugte Ausdruck besitzt keinen booleschen Ergebnistyp.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression binding that specifies the input set.</source>
          <target state="translated">Eine Ausdrucksbindung, die das Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression representing a predicate to evaluate for each member of the input set.</source>
          <target state="translated">Ein Ausdruck, der ein Prädikat darstellt, das für jeden Member des Eingabesets ausgewertet werden soll.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /&gt;</ph> that determines whether the given predicate holds for all elements of the input set.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /&gt;</ph>, der bestimmt, ob das angegebene Prädikat für alle Element des Eingabesets gültig ist.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbQuantifierExpression that represents the All operation.</source>
          <target state="translated">Ein neues DbQuantifierExpression, das den All-Vorgang darstellt.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> or <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> does not have a Boolean result type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> weist keinen booleschen Ergebnistyp auf.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A Boolean expression that specifies the left argument.</source>
          <target state="translated">Ein boolescher Ausdruck, der das linke Argument angibt.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A Boolean expression that specifies the right argument.</source>
          <target state="translated">Ein boolescher Ausdruck, der das rechte Argument angibt.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /&gt;</ph> that performs the logical And of the left and right arguments.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /&gt;</ph>, der die logische AND-Operation für das linke und das rechte Argument ausführt.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbAndExpression with the specified arguments.</source>
          <target state="translated">Ein neues DbAndExpression mit den angegebenen Argumenten.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="right" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph> does not have a Boolean result type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> und <ph id="ph2">&lt;paramref name="right" /&gt;</ph> weisen keinen booleschen Ergebnistyp auf.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that determines whether the specified set argument is non-empty.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>, die bestimmt, ob das angegebene Mengenargument nicht leer ist.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the input set.</source>
          <target state="translated">Ein Ausdruck, der das Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that determines whether the specified set argument is non-empty.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>, die bestimmt, ob das angegebene Mengenargument nicht leer ist.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /&gt;</ph> applied to a new <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /&gt;</ph> with the specified argument.</source>
          <target state="translated">Ein neues <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /&gt;</ph>, angewendet auf ein neues <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /&gt;</ph> mit dem angegebenen Argument.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> does not have a collection result type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> weist keinen Auflistungsergebnistyp auf.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>An expression that specifies the input set.</source>
          <target state="translated">Ein Ausdruck, der das Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method representing the predicate to evaluate for each member of the input set.</source>
          <target state="translated">Eine Methode, die ein Prädikat darstellt, das für jeden Member des Eingabesets ausgewertet werden soll.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>This method must produce an expression with a Boolean result type that provides the predicate logic.</source>
          <target state="translated">Diese Methode muss einen Ausdruck mit einem booleschen Ergebnistyp erzeugen, der die Prädikatlogik bereitstellt.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /&gt;</ph> that determines whether the given predicate holds for any element of the input set.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /&gt;</ph>, die bestimmt, ob das angegebene Prädikat für jedes beliebige Element des Eingabesets gültig ist.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A new DbQuantifierExpression that represents the Any operation.</source>
          <target state="translated">Ein neues DbQuantifierExpression, das den Any-Vorgang darstellt.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> is null.</source>
          <target state="translated">Der von <ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> erzeugte Ausdruck ist NULL.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> does not have a Boolean result type.</source>
          <target state="translated">Der von <ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> erzeugte Ausdruck besitzt keinen booleschen Ergebnistyp.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression binding that specifies the input set.</source>
          <target state="translated">Eine Ausdrucksbindung, die das Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression representing a predicate to evaluate for each member of the input set.</source>
          <target state="translated">Ein Ausdruck, der ein Prädikat darstellt, das für jeden Member des Eingabesets ausgewertet werden soll.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /&gt;</ph> that determines whether the given predicate holds for any element of the input set.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /&gt;</ph>, die bestimmt, ob das angegebene Prädikat für jedes beliebige Element des Eingabesets gültig ist.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbQuantifierExpression that represents the Any operation.</source>
          <target state="translated">Ein neues DbQuantifierExpression, das den Any-Vorgang darstellt.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> or <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> does not have a Boolean result type.</source>
          <target state="translated">Der von <ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> erzeugte Ausdruck besitzt keinen booleschen Ergebnistyp.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
          <source>Returns the specified arguments as a key/value pair object.</source>
          <target state="translated">Gibt die angegebenen Argumente als Schlüssel-Wert-Paar-Objekt zurück.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)">
          <source>The value in the key/value pair.</source>
          <target state="translated">Der Wert im Schlüssel-Wert-Paar.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)">
          <source>The key in the key/value pair.</source>
          <target state="translated">Der Schlüssel im Schlüssel-Wert-Paar.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)">
          <source>Returns the specified arguments as a key/value pair object.</source>
          <target state="translated">Gibt die angegebenen Argumente als Schlüssel-Wert-Paar-Objekt zurück.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)">
          <source>A key/value pair object.</source>
          <target state="translated">Ein Schlüssel-Wert-Paar-Objekt.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>The value in the key/value pair.</source>
          <target state="translated">Der Wert im Schlüssel-Wert-Paar.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>The key in the key/value pair.</source>
          <target state="translated">Der Schlüssel im Schlüssel-Wert-Paar.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>Returns the specified arguments as a key/value pair object.</source>
          <target state="translated">Gibt die angegebenen Argumente als Schlüssel-Wert-Paar-Objekt zurück.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>A key/value pair object.</source>
          <target state="translated">Ein Schlüssel-Wert-Paar-Objekt.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression)">
          <source>The expression to bind.</source>
          <target state="translated">Der zu bindende Ausdruck.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that uses a generated variable name to bind the given expression.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph>, die den angegebene Ausdruck mithilfe eines generierten Variablennamens bindet.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new expression binding with the specified expression and a generated variable name.</source>
          <target state="translated">Eine neue Ausdrucksbindung mit dem angegebenen Ausdruck und einem generierten Variablennamen.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> does not have a collection result.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> weist keinen Auflistungsergebnis auf.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>The expression to bind.</source>
          <target state="translated">Der zu bindende Ausdruck.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>The variable name that should be used for the binding.</source>
          <target state="translated">Der Variablenname, der für die Bindung verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that uses the specified variable name to bind the given expression</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph>, die den angegebene Ausdruck mithilfe eines angegebenen Variablennamens bindet.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>A new expression binding with the specified expression and variable name.</source>
          <target state="translated">Eine neue Ausdrucksbindung mit dem angegebenen Ausdruck und dem Variablennamen.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> or <ph id="ph2">&lt;paramref name="varName" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="varName" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> does not have a collection result.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> weist keinen Auflistungsergebnis auf.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)">
          <source>A list of expressions that provide the conditional for of each case.</source>
          <target state="translated">Eine Liste von Ausdrücken, die die einzelnen case-Bedingungen bereitstellen.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)">
          <source>A list of expressions that provide the result of each case.</source>
          <target state="translated">Eine Liste von Ausdrücken, die die Ergebnisse der einzelnen case-Bedingungen bereitstellen.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that defines the result when no case is matched.</source>
          <target state="translated">Ein Ausdruck, der das Ergebnis definiert, wenn keine case-Bedingung erfüllt wird.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" /&gt;</ph>.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbCaseExpression with the specified cases and default result.</source>
          <target state="translated">Ein neues DbCaseExpression mit den angegebenen Fällen und dem standardmäßigen Ergebnis.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="whenExpressions" /&gt;</ph> or <ph id="ph2">&lt;paramref name="thenExpressions" /&gt;</ph> is null or contains null, or <ph id="ph3">&lt;paramref name="elseExpression" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="whenExpressions" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="thenExpressions" /&gt;</ph> ist NULL oder NULL enthält oder <ph id="ph3">&lt;paramref name="elseExpression" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="whenExpressions" /&gt;</ph> or <ph id="ph2">&lt;paramref name="thenExpressions" /&gt;</ph> is empty or <ph id="ph3">&lt;paramref name="whenExpressions" /&gt;</ph> contains an expression with a non-Boolean result type, or no common result type exists for all expressions in <ph id="ph4">&lt;paramref name="thenExpressions" /&gt;</ph> and <ph id="ph5">&lt;paramref name="elseExpression" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="whenExpressions" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="thenExpressions" /&gt;</ph> ist leer, oder <ph id="ph3">&lt;paramref name="whenExpressions" /&gt;</ph> enthält einen Ausdruck mit einem nicht booleschen Ergebnistyp, oder es ist kein gemeinsamer Ergebnistyp für alle Ausdrücke in <ph id="ph4">&lt;paramref name="thenExpressions" /&gt;</ph> und <ph id="ph5">&lt;paramref name="elseExpression" /&gt;</ph> vorhanden.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>The argument to which the cast should be applied.</source>
          <target state="translated">Das Argument, das umgewandelt werden soll.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Type metadata that specifies the type to cast to.</source>
          <target state="translated">Die Typmetadaten, die den umzuwandelnden Typ angeben.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /&gt;</ph> that applies a cast operation to a polymorphic argument.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /&gt;</ph>, der eine Umwandlungsoperation auf ein polymorphes Argument anwendet.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>A new DbCastExpression with the specified argument and target type.</source>
          <target state="translated">Ein neues DbCastExpression mit dem angegebenen Argument und dem Zieltyp.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source><ph id="ph1">&lt;paramref name="Argument" /&gt;</ph> or <ph id="ph2">&lt;paramref name="toType" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Argument" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="toType" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>The specified cast is not valid.</source>
          <target state="translated">Die angegebene Umwandlung ist ungültig.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /&gt;</ph>.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)">
          <source>The constant value to represent.</source>
          <target state="translated">Der darzustellende konstante Wert.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /&gt;</ph> with the given constant value.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /&gt;</ph> mit dem angegebenen Konstantenwert.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)">
          <source>A new DbConstantExpression with the given value.</source>
          <target state="translated">Ein neues DbConstantExpression mit dem angegebenen Wert.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not an instance of a valid constant type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> ist keine Instanz eines gültigen konstanten Typs.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)">
          <source>The type of the constant value.</source>
          <target state="translated">Der Typ des konstanten Werts.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)">
          <source>The constant value to represent.</source>
          <target state="translated">Der darzustellende konstante Wert.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /&gt;</ph> of the specified primitive type with the given constant value.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /&gt;</ph> vom angegebenen primitiven Typ mit dem angegebenen konstanten Wert.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)">
          <source>A new DbConstantExpression with the given value and a result type of <ph id="ph1">&lt;paramref name="constantType" /&gt;</ph>.</source>
          <target state="translated">Ein neues DbConstantExpression mit dem angegebenen Wert und einen Ergebnistyp <ph id="ph1">&lt;paramref name="constantType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> or <ph id="ph2">&lt;paramref name="constantType" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="constantType" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not an instance of a valid constant type,  <ph id="ph2">&lt;paramref name="constantType" /&gt;</ph> does not represent a primitive type, or <ph id="ph3">&lt;paramref name="value" /&gt;</ph> is of a different primitive type than that represented by <ph id="ph4">&lt;paramref name="constantType" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> ist keine Instanz eines gültigen konstanten Typs, <ph id="ph2">&lt;paramref name="constantType" /&gt;</ph> stellt keinen primitiven Typ dar, oder <ph id="ph3">&lt;paramref name="value" /&gt;</ph> ist von einem anderen primitiven Typ als dem durch <ph id="ph4">&lt;paramref name="constantType" /&gt;</ph> dargestellten.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph> that encodes a reference to a specific entity of a given type based on key values.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph>, der einen Verweis auf eine bestimmte Entität eines angegebenen Typs auf Grundlage von Schlüsselwerten codiert.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>The entity set in which the referenced element resides.</source>
          <target state="translated">Die Entitätenmenge mit dem Element, auf das verwiesen wird.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>s that provide the key values.</source>
          <target state="translated">Eine Sammlung von <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>, die die Schlüsselwerte angeben.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>These expressions must match (in number, type, and order) the key properties of the referenced entity type.</source>
          <target state="translated">Diese Ausdrücke müssen (hinsichtlich Anzahl, Typ und Reihenfolge) mit den Schlüsseleigenschaften des Entitätstyps übereinstimmen, auf den verwiesen wird.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph> that encodes a reference to a specific entity based on key values.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph>, das einen Verweis auf eine bestimmte Entität auf der Grundlage der Schlüsselwerte codiert.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>A new DbRefExpression that references the element with the specified key values in the given entity set.</source>
          <target state="translated">Ein neues DbRefExpression, das das Element mit den angegebenen Schlüsselwerten im angegebenen Entitätssatz verweist.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source><ph id="ph1">&lt;paramref name="entitySet" /&gt;</ph> is null, or <ph id="ph2">&lt;paramref name="keyValues" /&gt;</ph> is null or contains null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="entitySet" /&gt;</ph> ist NULL, oder <ph id="ph2">&lt;paramref name="keyValues" /&gt;</ph> ist NULL bzw. enthält NULL.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>The count of <ph id="ph1">&lt;paramref name="keyValues" /&gt;</ph> does not match the count of key members declared by the <ph id="ph2">&lt;paramref name="entitySet" /&gt;</ph>’s element type, or <ph id="ph3">&lt;paramref name="keyValues" /&gt;</ph> contains an expression with a result type that is not compatible with the type of the corresponding key member.</source>
          <target state="translated">Die Anzahl von <ph id="ph1">&lt;paramref name="keyValues" /&gt;</ph> entspricht nicht der Anzahl von Hauptmembern, die vom Elementtyp von <ph id="ph2">&lt;paramref name="entitySet" /&gt;</ph> deklariert wurde, oder <ph id="ph3">&lt;paramref name="keyValues" /&gt;</ph> enthält einen Ausdruck mit einem Ergebnistyp, der mit dem Typ des entsprechenden Hauptmembers nicht kompatibel ist.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])">
          <source>The entity set in which the referenced element resides.</source>
          <target state="translated">Die Entitätenmenge mit dem Element, auf das verwiesen wird.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>s that provide the key values.</source>
          <target state="translated">Eine Sammlung von <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>, die die Schlüsselwerte angeben.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])">
          <source>These expressions must match (in number, type, and order) the key properties of the referenced entity type.</source>
          <target state="translated">Diese Ausdrücke müssen (hinsichtlich Anzahl, Typ und Reihenfolge) mit den Schlüsseleigenschaften des Entitätstyps übereinstimmen, auf den verwiesen wird.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph> that encodes a reference to a specific entity based on key values.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph>, das einen Verweis auf eine bestimmte Entität auf der Grundlage der Schlüsselwerte codiert.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])">
          <source>A new DbRefExpression that references the element with the specified key values in the given entity set.</source>
          <target state="translated">Ein neues DbRefExpression, das das Element mit den angegebenen Schlüsselwerten im angegebenen Entitätssatz verweist.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])">
          <source><ph id="ph1">&lt;paramref name="entitySet" /&gt;</ph> is null, or <ph id="ph2">&lt;paramref name="keyValues" /&gt;</ph> is null or contains null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="entitySet" /&gt;</ph> ist NULL, oder <ph id="ph2">&lt;paramref name="keyValues" /&gt;</ph> ist NULL bzw. enthält NULL.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])">
          <source>The count of <ph id="ph1">&lt;paramref name="keyValues" /&gt;</ph> does not match the count of key members declared by the <ph id="ph2">&lt;paramref name="entitySet" /&gt;</ph>’s element type, or <ph id="ph3">&lt;paramref name="keyValues" /&gt;</ph> contains an expression with a result type that is not compatible with the type of the corresponding key member.</source>
          <target state="translated">Die Anzahl von <ph id="ph1">&lt;paramref name="keyValues" /&gt;</ph> entspricht nicht der Anzahl von Hauptmembern, die vom Elementtyp von <ph id="ph2">&lt;paramref name="entitySet" /&gt;</ph> deklariert wurde, oder <ph id="ph3">&lt;paramref name="keyValues" /&gt;</ph> enthält einen Ausdruck mit einem Ergebnistyp, der mit dem Typ des entsprechenden Hauptmembers nicht kompatibel ist.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>The entity set in which the referenced element resides.</source>
          <target state="translated">Die Entitätenmenge mit dem Element, auf das verwiesen wird.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>The specific type of the referenced entity.</source>
          <target state="translated">Der spezifische Typ der Entität, auf die verwiesen wird.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>This must be an entity type from the same hierarchy as the entity set's element type.</source>
          <target state="translated">Dies muss ein Entitätstyp aus der gleichen Hierarchie wie der Elementtyp der Entitätenmenge sein.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>s that provide the key values.</source>
          <target state="translated">Eine Sammlung von <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>, die die Schlüsselwerte angeben.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>These expressions must match (in number, type, and order) the key properties of the referenced entity type.</source>
          <target state="translated">Diese Ausdrücke müssen (hinsichtlich Anzahl, Typ und Reihenfolge) mit den Schlüsseleigenschaften des Entitätstyps übereinstimmen, auf den verwiesen wird.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph> that encodes a reference to a specific entity of a given type based on key values.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph>, der einen Verweis auf eine bestimmte Entität eines angegebenen Typs auf Grundlage von Schlüsselwerten codiert.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>A new DbRefExpression that references the element with the specified key values in the given entity set.</source>
          <target state="translated">Ein neues DbRefExpression, das das Element mit den angegebenen Schlüsselwerten im angegebenen Entitätssatz verweist.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source><ph id="ph1">&lt;paramref name="entitySet" /&gt;</ph> or <ph id="ph2">&lt;paramref name="entityType" /&gt;</ph> is null, or <ph id="ph3">&lt;paramref name="keyValues" /&gt;</ph> is null or contains null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="entitySet" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="entityType" /&gt;</ph> ist NULL oder <ph id="ph3">&lt;paramref name="keyValues" /&gt;</ph> ist NULL oder enthält NULL.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>The count of <ph id="ph1">&lt;paramref name="keyValues" /&gt;</ph> does not match the count of key members declared by the <ph id="ph2">&lt;paramref name="entitySet" /&gt;</ph>’s element type, or <ph id="ph3">&lt;paramref name="keyValues" /&gt;</ph> contains an expression with a result type that is not compatible with the type of the corresponding key member.</source>
          <target state="translated">Die Anzahl von <ph id="ph1">&lt;paramref name="keyValues" /&gt;</ph> entspricht nicht der Anzahl von Hauptmembern, die vom Elementtyp von <ph id="ph2">&lt;paramref name="entitySet" /&gt;</ph> deklariert wurde, oder <ph id="ph3">&lt;paramref name="keyValues" /&gt;</ph> enthält einen Ausdruck mit einem Ergebnistyp, der mit dem Typ des entsprechenden Hauptmembers nicht kompatibel ist.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])">
          <source>The entity set in which the referenced element resides.</source>
          <target state="translated">Die Entitätenmenge mit dem Element, auf das verwiesen wird.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])">
          <source>The specific type of the referenced entity.</source>
          <target state="translated">Der spezifische Typ der Entität, auf die verwiesen wird.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])">
          <source>This must be an entity type from the same hierarchy as the entity set's element type.</source>
          <target state="translated">Dies muss ein Entitätstyp aus der gleichen Hierarchie wie der Elementtyp der Entitätenmenge sein.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>s that provide the key values.</source>
          <target state="translated">Eine Sammlung von <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>, die die Schlüsselwerte angeben.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])">
          <source>These expressions must match (in number, type, and order) the key properties of the referenced entity type.</source>
          <target state="translated">Diese Ausdrücke müssen (hinsichtlich Anzahl, Typ und Reihenfolge) mit den Schlüsseleigenschaften des Entitätstyps übereinstimmen, auf den verwiesen wird.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph> that encodes a reference to a specific entity of a given type based on key values.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph>, der einen Verweis auf eine bestimmte Entität eines angegebenen Typs auf Grundlage von Schlüsselwerten codiert.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])">
          <source>A new DbRefExpression that references the element with the specified key values in the given entity set.</source>
          <target state="translated">Ein neues DbRefExpression, das das Element mit den angegebenen Schlüsselwerten im angegebenen Entitätssatz verweist.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])">
          <source><ph id="ph1">&lt;paramref name="entitySet" /&gt;</ph> or <ph id="ph2">&lt;paramref name="entityType" /&gt;</ph> is null, or <ph id="ph3">&lt;paramref name="keyValues" /&gt;</ph> is null or contains null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="entitySet" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="entityType" /&gt;</ph> ist NULL oder <ph id="ph3">&lt;paramref name="keyValues" /&gt;</ph> ist NULL oder enthält NULL.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])">
          <source>The count of <ph id="ph1">&lt;paramref name="keyValues" /&gt;</ph> does not match the count of key members declared by the <ph id="ph2">&lt;paramref name="entitySet" /&gt;</ph>’s element type, or <ph id="ph3">&lt;paramref name="keyValues" /&gt;</ph> contains an expression with a result type that is not compatible with the type of the corresponding key member.</source>
          <target state="translated">Die Anzahl von <ph id="ph1">&lt;paramref name="keyValues" /&gt;</ph> entspricht nicht der Anzahl von Hauptmembern, die vom Elementtyp von <ph id="ph2">&lt;paramref name="entitySet" /&gt;</ph> deklariert wurde, oder <ph id="ph3">&lt;paramref name="keyValues" /&gt;</ph> enthält einen Ausdruck mit einem Ergebnistyp, der mit dem Typ des entsprechenden Hauptmembers nicht kompatibel ist.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph> that evaluates the given <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph>, die den angegebenen <ph id="ph2">&lt;paramref name="apply" /&gt;</ph>-Ausdruck für jedes Element eines angegebenen Eingabesets einmal auswertet und eine Auflistung von Zeilen mit entsprechenden Eingabe- und apply-Spalten erzeugt.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the input set.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>, die das Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>A method that specifies the logic to evaluate once for each member of the input set.</source>
          <target state="translated">Eine Methode, die die Logik angibt, die für jeden Member des Eingabesets einmal ausgewertet wird.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph> that evaluates the given <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph>, die den angegebenen <ph id="ph2">&lt;paramref name="apply" /&gt;</ph>-Ausdruck für jedes Element eines angegebenen Eingabesets einmal auswertet und eine Auflistung von Zeilen mit entsprechenden Eingabe- und apply-Spalten erzeugt.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>Rows for which <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> evaluates to an empty set are not included.</source>
          <target state="translated">Zeilen, für die <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> als leerer Satz ausgewertet wird, werden nicht eingeschlossen.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>An new DbApplyExpression with the specified input and apply bindings and an <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> of CrossApply.</source>
          <target state="translated">Ein neues DbApplyExpression mit der angegebenen Eingabe und Anwenden von Bindungen und ein <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> von CrossApply.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>The result of <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> contains a name or expression that is null.</source>
          <target state="translated">Das Ergebnis von <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> enthält einen Namen oder Ausdruck, der Null ist.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>The result of <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> contains a name or expression that is not valid in an expression binding.</source>
          <target state="translated">Das Ergebnis von <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> enthält einen Namen oder Ausdruck, der in einer Ausdrucksbindung ungültig ist.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that specifies the input set.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph>, der das Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that specifies logic to evaluate once for each member of the input set.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph>, die die Logik angibt, die für jeden Member des Eingabesets einmal ausgewertet wird.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph> that evaluates the given <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph>, die den angegebenen <ph id="ph2">&lt;paramref name="apply" /&gt;</ph>-Ausdruck für jedes Element eines angegebenen Eingabesets einmal auswertet und eine Auflistung von Zeilen mit entsprechenden Eingabe- und apply-Spalten erzeugt.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source>Rows for which <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> evaluates to an empty set are not included.</source>
          <target state="translated">Zeilen, für die <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> als leerer Satz ausgewertet wird, werden nicht eingeschlossen.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source>An new DbApplyExpression with the specified input and apply bindings and an <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> of CrossApply.</source>
          <target state="translated">Ein neues DbApplyExpression mit der angegebenen Eingabe und Anwenden von Bindungen und ein <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> von CrossApply.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> or <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})">
          <source>A list of expression bindings that specifies the input sets.</source>
          <target state="translated">Eine Liste von Ausdrucksbindungen, die die Eingabesets angibt.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" /&gt;</ph> that unconditionally joins the sets specified by the list of input expression bindings.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" /&gt;</ph>, der die in der Liste der Eingabeausdrucksbindungen angegebenen Sets bedingungslos verknüpft.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})">
          <source>A new DbCrossJoinExpression, with an <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> of CrossJoin, that represents the unconditional join of the input sets.</source>
          <target state="translated">Ein neues DbCrossJoinExpression, mit einem <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> von CrossJoin, das den unbedingten Join der Eingabesätze darstellt.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})">
          <source><ph id="ph1">&lt;paramref name="inputs" /&gt;</ph> is null or contains null element.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputs" /&gt;</ph> ist NULL oder enthält NULL Element.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})">
          <source><ph id="ph1">&lt;paramref name="inputs" /&gt;</ph> contains fewer than 2 expression bindings.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputs" /&gt;</ph> enthält weniger als zwei Ausdrucksbindungen.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that provides the reference.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>, der den Verweis bereitstellt.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)">
          <source>This expression must have a reference Type.</source>
          <target state="translated">Dieser Ausdruck muss einen Verweistyp aufweisen.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /&gt;</ph> that retrieves a specific Entity given a reference expression.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /&gt;</ph>, der eine bestimmte Entität abruft, wenn ein Verweisausdruck angegeben wird.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbDerefExpression that retrieves the specified Entity.</source>
          <target state="translated">Ein neues DbDerefExpression, das die angegebene Entität abruft.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> does not have a reference result type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> weist keinen Verweisergebnistyp auf.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that defines the set over which to perfom the distinct operation.</source>
          <target state="translated">Ein Ausdruck, der die Menge definiert, über der die eindeutige Operation ausgeführt werden soll.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /&gt;</ph> that removes duplicates from the given set argument.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /&gt;</ph>, der Duplikate aus dem angegebenen Mengenargument entfernt.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbDistinctExpression that represents the distinct operation applied to the specified set argument.</source>
          <target state="translated">Ein neues DbDistinctExpression, das den bestimmten Vorgang darstellt, der auf das angegebene Mengenargument angewendet wurde.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> does not have a collection result type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> weist keinen Auflistungsergebnistyp auf.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">Ein Ausdruck, der das linke Argument angibt.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">Ein Ausdruck, der das rechte Argument angibt.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph> that divides the left argument by the right argument.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph>, die das linke Argument durch das rechte Argument dividiert.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbArithmeticExpression representing the division operation.</source>
          <target state="translated">Ein neues DbArithmeticExpression, der die Division darstellt.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="right" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>No common numeric result type exists between <ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Zwischen <ph id="ph1">&lt;paramref name="left" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist kein gemeinsamer numerischer Ergebnistyp vorhanden.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the input set.</source>
          <target state="translated">Ein Ausdruck, der das Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /&gt;</ph> that converts a set into a singleton.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /&gt;</ph>, der eine Menge in ein Singleton konvertiert.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression)">
          <source>A DbElementExpression that represents the conversion of the set argument to a singleton.</source>
          <target state="translated">Eine DbElementExpression, die die Konvertierung des angegebenen Mengenarguments in ein Singleton darstellt.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> does not have a collection result type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> weist keinen Auflistungsergebnistyp auf.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">Ein Ausdruck, der das linke Argument angibt.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">Ein Ausdruck, der das rechte Argument angibt.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph> that compares the left and right arguments for equality.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph>, die das linke und das rechte Argument auf Gleichheit vergleicht.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbComparisonExpression representing the equality comparison.</source>
          <target state="translated">Ein neues DbComparisonExpression, das den Gleichheitsvergleich darstellt.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="right" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>No common equality-comparable result type exists between <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Zwischen <ph id="ph1">&lt;paramref name="left" /&gt;</ph> und <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist kein allgemeiner, auf Gleichheit vergleichbarer Ergebnistyp vorhanden.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that defines the left set argument.</source>
          <target state="translated">Ein Ausdruck, der das linke Mengenargument definiert.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that defines the right set argument.</source>
          <target state="translated">Ein Ausdruck, der das rechte Mengenargument definiert.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /&gt;</ph> that computes the subtraction of the right set argument from the left set argument.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /&gt;</ph>, die das rechte Mengenargument vom linken Mengenargument subtrahiert.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbExceptExpression that represents the difference of the left argument from the right argument.</source>
          <target state="translated">Ein neues DbExceptExpression, das den Unterschied zwischen dem linken und dem rechten Argument darstellt.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="right" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>No common collection result type exists between <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Zwischen <ph id="ph1">&lt;paramref name="left" /&gt;</ph> und <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist kein allgemeiner Auflistungsergebnistyp vorhanden.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the input set.</source>
          <target state="translated">Ein Ausdruck, der das Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that determines whether the specified set argument is non-empty.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>, die bestimmt, ob das angegebene Mengenargument nicht leer ist.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /&gt;</ph> applied to a new <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /&gt;</ph> with the specified argument.</source>
          <target state="translated">Ein neues <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /&gt;</ph>, angewendet auf ein neues <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /&gt;</ph> mit dem angegebenen Argument.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> does not have a collection result type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> weist keinen Auflistungsergebnistyp auf.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /&gt;</ph> with the Boolean value <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Ruft eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /&gt;</ph> mit dem booleschen Wert <ph id="ph2">&lt;see langword="false" /&gt;</ph> ab.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /&gt;</ph> with the Boolean value <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /&gt;</ph> mit dem booleschen Wert <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression binding that specifies the input set.</source>
          <target state="translated">Eine Ausdrucksbindung, die das Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression representing a predicate to evaluate for each member of the input set.</source>
          <target state="translated">Ein Ausdruck, der ein Prädikat darstellt, das für jeden Member des Eingabesets ausgewertet werden soll.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /&gt;</ph> that filters the elements in the given input set using the specified predicate.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /&gt;</ph>, der die Elemente im angegebenen Eingabeset mithilfe des angegebenen Prädikats filtert.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFilterExpression that produces the filtered set.</source>
          <target state="translated">Ein neues DbFilterExpression, der die gefilterte Menge erzeugt.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> or <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="predicate" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> does not have a Boolean result type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> weist keinen booleschen Ergebnistyp auf.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> that joins the sets specified by the left and right expressions, on the specified join condition, using FullOuterJoin as the <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph>, der die durch den linken und rechten Ausdruck angegebenen set-Argumente bei der angegebenen Joinbedingung verknüpft und dabei FullOuterJoin als <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> verwendet.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the left set argument.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>, der das linke set-Argument angibt.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the right set argument.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>, der das rechte set-Argument angibt.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method representing the condition on which to join.</source>
          <target state="translated">Eine Methode, die die Bedingung darstellt, bei der die Verknüpfung stattfinden soll.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>This method must produce an expression with a Boolean result type that provides the logic of the join condition.</source>
          <target state="translated">Diese Methode muss einen Ausdruck mit einem booleschen Ergebnistyp erzeugen, der die Logik der Joinbedingung bereitstellt.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> that joins the sets specified by the left and right expressions, on the specified join condition, using FullOuterJoin as the <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph>, der die durch den linken und rechten Ausdruck angegebenen set-Argumente bei der angegebenen Joinbedingung verknüpft und dabei FullOuterJoin als <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> verwendet.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A new DbJoinExpression, with an <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> of FullOuterJoin, that represents the full outer join operation applied to the left and right input sets under the given join condition.</source>
          <target state="translated">Ein neuer DbJoinExpression mit FullOuterJoin als <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>, der den vollständigen äußeren Joinvorgang darstellt, der unter der angegebenen Joinbedingung auf das linke und rechte Eingabeset angewendet wird.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="joinCondition" /&gt;</ph> is null.</source>
          <target state="translated">Der von <ph id="ph1">&lt;paramref name="joinCondition" /&gt;</ph> erzeugte Ausdruck ist NULL.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="joinCondition" /&gt;</ph> does not have a Boolean result type.</source>
          <target state="translated">Der von <ph id="ph1">&lt;paramref name="joinCondition" /&gt;</ph> erzeugte Ausdruck besitzt keinen booleschen Ergebnistyp.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that specifies the left set argument.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph>, die das linke Mengenargument angibt.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that specifies the right set argument.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph>, die das rechte Mengenargument angibt.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the condition on which to join.</source>
          <target state="translated">Ein Ausdruck, der die Bedingung für den Join angibt.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> that joins the sets specified by the left and right expression bindings, on the specified join condition, using FullOuterJoin as the <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph>, der die von der linken und der rechten Ausdrucksbindung in der angegebenen Joinbedingung festgelegten Mengen verknüpft, indem FullOuterJoin als <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> verwendet wird.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbJoinExpression, with an <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> of FullOuterJoin, that represents the full outer join operation applied to the left and right     input sets under the given join condition.</source>
          <target state="translated">Eine neue DbJoinExpression-Klasse mit FullOuterJoin als <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>-Enumeration, die den vollständigen äußeren Joinvorgang darstellt, der unter der angegebenen Joinbedingung auf das linke und rechte Eingabeset angewendet wird.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph>,  <ph id="ph2">&lt;paramref name="right" /&gt;</ph> or <ph id="ph3">&lt;paramref name="joinCondition" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph>, <ph id="ph2">&lt;paramref name="right" /&gt;</ph> oder <ph id="ph3">&lt;paramref name="joinCondition" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="joinCondition" /&gt;</ph> does not have a Boolean result type.</source>
          <target state="translated">Der von <ph id="ph1">&lt;paramref name="joinCondition" /&gt;</ph> erzeugte Ausdruck besitzt keinen booleschen Ergebnistyp.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)">
          <source>The expression that provides the entity.</source>
          <target state="translated">Der Ausdruck, der die Entität bereitstellt.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)">
          <source>This expression must have an entity result type.</source>
          <target state="translated">Dieser Ausdruck muss einen Entitätsergebnistyp aufweisen.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /&gt;</ph> that retrieves the ref of the specifed entity in structural form.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /&gt;</ph>, die den Verweis der angegebenen Entität in struktureller Form abruft.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbEntityRefExpression that retrieves a reference to the specified entity.</source>
          <target state="translated">Ein neues DbEntityRefExpression, das einen Verweis auf die angegebene Entität abruft.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> does not have an entity result type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> weist keinen Entitätsergebnistyp auf.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)">
          <source>The expression that provides the reference.</source>
          <target state="translated">Der Ausdruck, der den Verweis bereitstellt.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)">
          <source>This expression must have a reference Type with an Entity element type.</source>
          <target state="translated">Dieser Ausdruck muss einen Verweistyp mit einem Entitätselementtyp aufweisen.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /&gt;</ph> that retrieves the key values of the specifed reference in structural form.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /&gt;</ph>, der die Schlüsselwerte des angegebenen Verweises in struktureller Form abruft.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbRefKeyExpression that retrieves the key values of the specified reference.</source>
          <target state="translated">Ein neues DbRefKeyExpression, das die Schlüsselwerte des angegebenen Verweises abruft.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> does not have a reference result type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> weist keinen Verweisergebnistyp auf.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">Ein Ausdruck, der das linke Argument angibt.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">Ein Ausdruck, der das rechte Argument angibt.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph> that determines whether the left argument is greater than the right argument.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph>, die bestimmt, ob das linke Argument größer als das rechte Argument ist.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbComparisonExpression representing the greater-than comparison.</source>
          <target state="translated">Ein neues DbComparisonExpression, das das Größer-als-Vergleich darstellt.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="right" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>No common order-comparable result type exists between <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Zwischen <ph id="ph1">&lt;paramref name="left" /&gt;</ph> und <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist kein allgemeiner, auf Reihenfolge vergleichbarer Ergebnistyp vorhanden.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">Ein Ausdruck, der das linke Argument angibt.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">Ein Ausdruck, der das rechte Argument angibt.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph> that determines whether the left argument is greater than or equal to the right argument.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph>, die bestimmt, ob das linke Argument größer oder gleich dem rechten Argument ist.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbComparisonExpression representing the greater-than-or-equal-to comparison.</source>
          <target state="translated">Ein neues DbComparisonExpression, das das Größer-als-oder-gleich-Vergleich darstellt.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="right" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>No common order-comparable result type exists between <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Zwischen <ph id="ph1">&lt;paramref name="left" /&gt;</ph> und <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist kein allgemeiner, auf Reihenfolge vergleichbarer Ergebnistyp vorhanden.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression)">
          <source>The expression to bind.</source>
          <target state="translated">Der zu bindende Ausdruck.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new group expression binding that uses generated variable and group variable names to bind the given expression.</source>
          <target state="translated">Erstellt eine neue Gruppenausdrucksbindung, die den angegebenen Ausdruck mithilfe generierter Variablen- und Gruppenvariablennamen bindet.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new group expression binding with the specified expression and a generated variable name and group variable name.</source>
          <target state="translated">Eine neue Gruppenausdrucksbindung mit dem angegebenen Ausdruck und einem generierten Variablennamen und Gruppenvariablennamen.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> does not have a collection result type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> weist keinen Auflistungsergebnistyp auf.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)">
          <source>The expression to bind.</source>
          <target state="translated">Der zu bindende Ausdruck.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)">
          <source>The variable name that should be used for the binding.</source>
          <target state="translated">Der Variablenname, der für die Bindung verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)">
          <source>The variable name that should be used to refer to the group when the new group expression binding is used in a group-by expression.</source>
          <target state="translated">Der Variablenname, der als Verweis auf die Gruppe verwendet werden soll, wenn die neue Gruppenausdrucksbindung in einem GROUP BY-Ausdruck verwendet wird.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /&gt;</ph> that uses the specified variable name and group variable names to bind the given expression.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /&gt;</ph>, die den angegebenen Ausdruck mithilfe des angegebenen Variablennamens und der angegebenen Gruppenvariablennamen bindet.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)">
          <source>A new group expression binding with the specified expression, variable name and group variable name.</source>
          <target state="translated">Eine neue Gruppenausdrucksbindung mit dem angegebenen Ausdruck, mit dem Variablennamen und dem Gruppenvariablennamen.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph>,  <ph id="ph2">&lt;paramref name="varName" /&gt;</ph> or <ph id="ph3">&lt;paramref name="groupVarName" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph>, <ph id="ph2">&lt;paramref name="varName" /&gt;</ph> oder <ph id="ph3">&lt;paramref name="groupVarName" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> does not have a collection result type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> weist keinen Auflistungsergebnistyp auf.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /&gt;</ph> that specifies the input set.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /&gt;</ph>, die das Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})">
          <source>A list of string-expression pairs that define the grouping columns.</source>
          <target state="translated">Eine Liste von Zeichenfolge-Ausdruck-Paaren, die die Gruppierungsspalten definieren.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})">
          <source>A list of expressions that specify aggregates to apply.</source>
          <target state="translated">Eine Liste von Ausdrücken, die anzuwendende Aggregate angeben.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /&gt;</ph> that groups the elements of the input set according to the specified group keys and applies the given aggregates.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /&gt;</ph>, der die Elemente des Eingabesets nach den angegebenen Gruppenschlüsseln gruppiert und die angegebenen Aggregate anwendet.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})">
          <source>A new DbGroupByExpression with the specified input set, grouping keys and aggregates.</source>
          <target state="translated">Ein neues DbGroupByExpression mit dem angegebenen Eingabeset, Gruppierungsschlüssel und Aggregate.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})">
          <source>DbGroupByExpression allows either the list of keys or the list of aggregates to be empty, but not both.</source>
          <target state="translated">DbGroupAggregate kann die Liste der Schlüssel oder die Liste der Aggregate, leer zu sein, aber nicht beides.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph>,  <ph id="ph2">&lt;paramref name="keys" /&gt;</ph> or <ph id="ph3">&lt;paramref name="aggregates" /&gt;</ph> is null,  <ph id="ph4">&lt;paramref name="keys" /&gt;</ph> contains a null column key or expression, or <ph id="ph5">&lt;paramref name="aggregates" /&gt;</ph> contains a null aggregate column name or aggregate.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph>, <ph id="ph2">&lt;paramref name="keys" /&gt;</ph> oder <ph id="ph3">&lt;paramref name="aggregates" /&gt;</ph> ist NULL, <ph id="ph4">&lt;paramref name="keys" /&gt;</ph> enthält einen NULL-Spaltenschlüssel oder -Ausdruck, oder <ph id="ph5">&lt;paramref name="aggregates" /&gt;</ph> enthält einen aggregierten NULL-Spaltennamen oder ein solches Aggregat.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})">
          <source>Both <ph id="ph1">&lt;paramref name="keys" /&gt;</ph> and <ph id="ph2">&lt;paramref name="aggregates" /&gt;</ph> are empty, or an invalid or duplicate column name was specified.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keys" /&gt;</ph> und auch <ph id="ph2">&lt;paramref name="aggregates" /&gt;</ph> sind leer, oder ein ungültiger oder doppelter Spaltenname wurde angegeben.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> that joins the sets specified by the left and right expressions, on the specified join condition, using InnerJoin as the <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph>, der die vom linken und vom rechten Ausdruck in der angegebenen Joinbedingung festgelegten Mengen verknüpft, indem InnerJoin als <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> verwendet wird.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the left set argument.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>, der das linke set-Argument angibt.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the right set argument.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>, der das rechte set-Argument angibt.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method representing the condition on which to join.</source>
          <target state="translated">Eine Methode, die die Bedingung darstellt, bei der die Verknüpfung stattfinden soll.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>This method must produce an expression with a Boolean result type that provides the logic of the join condition.</source>
          <target state="translated">Diese Methode muss einen Ausdruck mit einem booleschen Ergebnistyp erzeugen, der die Logik der Joinbedingung bereitstellt.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> that joins the sets specified by the left and right expressions, on the specified join condition, using InnerJoin as the <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph>, der die vom linken und vom rechten Ausdruck in der angegebenen Joinbedingung festgelegten Mengen verknüpft, indem InnerJoin als <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> verwendet wird.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A new DbJoinExpression, with an <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> of InnerJoin, that represents the inner join operation applied to the left and right input sets under the given join condition.</source>
          <target state="translated">Ein neues DbJoinExpression, mit <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> von FullOuterJoin, der den Vorgang des vollständigen äußeren Join darstellt, der auf den linken und rechten Eingabesets unter der angegebenen Joinbedingung angewendet wurde.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="joinCondition" /&gt;</ph> is null.</source>
          <target state="translated">Der von <ph id="ph1">&lt;paramref name="joinCondition" /&gt;</ph> erzeugte Ausdruck ist NULL.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="joinCondition" /&gt;</ph> does not have a Boolean result type.</source>
          <target state="translated">Der von <ph id="ph1">&lt;paramref name="joinCondition" /&gt;</ph> erzeugte Ausdruck besitzt keinen booleschen Ergebnistyp.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that specifies the left set argument.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph>, die das linke Mengenargument angibt.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that specifies the right set argument.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph>, die das rechte Mengenargument angibt.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the condition on which to join.</source>
          <target state="translated">Ein Ausdruck, der die Bedingung für den Join angibt.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> that joins the sets specified by the left and right expression bindings, on the specified join condition, using InnerJoin as the <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph>, der die von der linken und der rechten Ausdrucksbindung in der angegebenen Joinbedingung festgelegten Mengen verknüpft, indem InnerJoin als <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> verwendet wird.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbJoinExpression, with an <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> of InnerJoin, that represents the inner join operation applied to the left and right     input sets under the given join condition.</source>
          <target state="translated">Eine neue DbJoinExpression-Klasse, mit InnerJoin als <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>-Enumeration, die den Vorgang des vollständigen äußeren Joins darstellt, der auf den linken und rechten Eingabesets unter der angegebenen Joinbedingung angewendet wurde.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph>,  <ph id="ph2">&lt;paramref name="right" /&gt;</ph> or <ph id="ph3">&lt;paramref name="joinCondition" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph>, <ph id="ph2">&lt;paramref name="right" /&gt;</ph> oder <ph id="ph3">&lt;paramref name="joinCondition" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="joinCondition" /&gt;</ph> does not have a Boolean result type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="joinCondition" /&gt;</ph> weist keinen booleschen Ergebnistyp auf.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that defines the left set argument.</source>
          <target state="translated">Ein Ausdruck, der das linke Mengenargument definiert.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that defines the right set argument.</source>
          <target state="translated">Ein Ausdruck, der das rechte Mengenargument definiert.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /&gt;</ph> that computes the intersection of the left and right set arguments.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /&gt;</ph>, die die Schnittmenge der linken und der rechten Mengenargumente berechnet.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbIntersectExpression that represents the intersection of the left and right arguments.</source>
          <target state="translated">Ein neues DbIntersectExpression, das die Schnittmenge der linken und der rechten Argumente berechnet.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="right" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>No common collection result type exists between <ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Zwischen <ph id="ph1">&lt;paramref name="left" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist kein allgemeiner Auflistungsergebnistyp vorhanden.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /&gt;</ph> representing the application of the specified Lambda function to the given arguments.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /&gt;</ph>, der die Anwendung der angegebenen Lambda-Funktion auf die angegebenen Argumente darstellt.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambda" /&gt;</ph> instance representing the Lambda function to apply.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambda" /&gt;</ph>-Instanz, die die anzuwendende Lambda-Funktion darstellt.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>A list of expressions that provide the arguments.</source>
          <target state="translated">Eine Liste von Ausdrücken, die die Argumente bereitstellen.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /&gt;</ph> representing the application of the specified Lambda function to the given arguments.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /&gt;</ph>, der die Anwendung der angegebenen Lambda-Funktion auf die angegebenen Argumente darstellt.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>A new DbLambdaExpression representing the Lambda function application.</source>
          <target state="translated">Ein neues DbLambdaExpression, das die Lambda-Funktions-Anwendung darstellt.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source><ph id="ph1">&lt;paramref name="lambda" /&gt;</ph> or <ph id="ph2">&lt;paramref name="arguments" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="lambda" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="arguments" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>The count of <ph id="ph1">&lt;paramref name="arguments" /&gt;</ph> does not equal the number of variables declared by <ph id="ph2">&lt;paramref name="lambda" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="arguments" /&gt;</ph> contains an expression that has a result type that is not equal or promotable to the corresponding variable type.</source>
          <target state="translated">Die Anzahl von <ph id="ph1">&lt;paramref name="arguments" /&gt;</ph> entspricht der Anzahl der Variablen nicht, die von <ph id="ph2">&lt;paramref name="lambda" /&gt;</ph> deklariert wurde, oder <ph id="ph3">&lt;paramref name="arguments" /&gt;</ph> enthält einen Ausdruck, der einen Ergebnistyp hat, der nicht gleich dem entsprechenden Variablentyp ist und auch nicht entsprechend heraufgestuft werden kann.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambda" /&gt;</ph> instance representing the Lambda function to apply.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambda" /&gt;</ph>-Instanz, die die anzuwendende Lambda-Funktion darstellt.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])">
          <source>Expressions that provide the arguments.</source>
          <target state="translated">Ausdrücke, die die Argumente bereitstellen.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /&gt;</ph> representing the application of the specified Lambda function to the given arguments.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /&gt;</ph>, der die Anwendung der angegebenen Lambda-Funktion auf die angegebenen Argumente darstellt.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])">
          <source>A new DbLambdaExpression representing the Lambda function application.</source>
          <target state="translated">Ein neues DbLambdaExpression, das die Lambda-Funktions-Anwendung darstellt.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])">
          <source><ph id="ph1">&lt;paramref name="lambda" /&gt;</ph> or <ph id="ph2">&lt;paramref name="arguments" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="lambda" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="arguments" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])">
          <source>The count of <ph id="ph1">&lt;paramref name="arguments" /&gt;</ph> does not equal the number of variables declared by <ph id="ph2">&lt;paramref name="lambda" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="arguments" /&gt;</ph> contains an expression that has a result type that is not equal or promotable to the corresponding variable type.</source>
          <target state="translated">Die Anzahl von <ph id="ph1">&lt;paramref name="arguments" /&gt;</ph> entspricht der Anzahl der Variablen nicht, die von <ph id="ph2">&lt;paramref name="lambda" /&gt;</ph> deklariert wurde, oder <ph id="ph3">&lt;paramref name="arguments" /&gt;</ph> enthält einen Ausdruck, der einen Ergebnistyp hat, der nicht gleich dem entsprechenden Variablentyp ist und auch nicht entsprechend heraufgestuft werden kann.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>Metadata for the function to invoke.</source>
          <target state="translated">Metadaten für die aufzurufende Funktion.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>A list of expressions that provide the arguments to the function.</source>
          <target state="translated">Eine Liste von Ausdrücken, die die Argumente für die Funktion bereitstellen.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> representing the invocation of the specified function with the given arguments.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die den Aufruf der angegebenen Funktion mit den angegebenen Argumenten darstellt.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>A new DbFunctionExpression representing the function invocation.</source>
          <target state="translated">Eine neue DbFunctionExpression, die den Funktionsaufruf darstellt.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source><ph id="ph1">&lt;paramref name="function" /&gt;</ph> is null, or <ph id="ph2">&lt;paramref name="arguments" /&gt;</ph> is null or contains null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="function" /&gt;</ph> ist NULL, oder <ph id="ph2">&lt;paramref name="arguments" /&gt;</ph> ist NULL bzw. enthält NULL.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>The count of <ph id="ph1">&lt;paramref name="arguments" /&gt;</ph> does not equal the number of parameters declared by <ph id="ph2">&lt;paramref name="function" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="arguments" /&gt;</ph> contains an expression that has a result type that is not equal or promotable to the corresponding function parameter type.</source>
          <target state="translated">Die Anzahl der <ph id="ph1">&lt;paramref name="arguments" /&gt;</ph> entspricht nicht der Anzahl der von <ph id="ph2">&lt;paramref name="function" /&gt;</ph> deklarierten Parameter, oder <ph id="ph3">&lt;paramref name="arguments" /&gt;</ph> enthält einen Ausdruck, dessen Ergebnistyp nicht gleich dem entsprechenden Funktionsparametertyp bzw. nicht dazu heraufstufbar ist.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])">
          <source>Metadata for the function to invoke.</source>
          <target state="translated">Metadaten für die aufzurufende Funktion.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])">
          <source>Expressions that provide the arguments to the function.</source>
          <target state="translated">Ausdrücke, die die Argumente für die Funktion bereitstellen.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> representing the invocation of the specified function with the given arguments.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die den Aufruf der angegebenen Funktion mit den angegebenen Argumenten darstellt.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])">
          <source>A new DbFunctionExpression representing the function invocation.</source>
          <target state="translated">Eine neue DbFunctionExpression, die den Funktionsaufruf darstellt.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])">
          <source><ph id="ph1">&lt;paramref name="function" /&gt;</ph> is null, or <ph id="ph2">&lt;paramref name="arguments" /&gt;</ph> is null or contains null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="function" /&gt;</ph> ist NULL, oder <ph id="ph2">&lt;paramref name="arguments" /&gt;</ph> ist NULL bzw. enthält NULL.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])">
          <source>The count of <ph id="ph1">&lt;paramref name="arguments" /&gt;</ph> does not equal the number of parameters declared by <ph id="ph2">&lt;paramref name="function" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="arguments" /&gt;</ph> contains an expression that has a result type that is not equal or promotable to the corresponding function parameter type.</source>
          <target state="translated">Die Anzahl der <ph id="ph1">&lt;paramref name="arguments" /&gt;</ph> entspricht nicht der Anzahl der von <ph id="ph2">&lt;paramref name="function" /&gt;</ph> deklarierten Parameter, oder <ph id="ph3">&lt;paramref name="arguments" /&gt;</ph> enthält einen Ausdruck, dessen Ergebnistyp nicht gleich dem entsprechenden Funktionsparametertyp bzw. nicht dazu heraufstufbar ist.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the input set.</source>
          <target state="translated">Ein Ausdruck, der das Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /&gt;</ph> that determines whether the specified set argument is an empty set.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /&gt;</ph>, die bestimmt, ob das angegebene Mengenargument ein leerer Satz ist.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbIsEmptyExpression with the specified argument.</source>
          <target state="translated">Ein neues DbIsEmptyExpression mit dem angegebenen Argument.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> does not have a collection result type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> weist keinen Auflistungsergebnistyp auf.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the argument.</source>
          <target state="translated">Ein Ausdruck, der das Argument angibt.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /&gt;</ph> that determines whether the specified argument is null.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /&gt;</ph>, der bestimmt, ob das angegebene Argument NULL ist.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbIsNullExpression with the specified argument.</source>
          <target state="translated">Ein neues DbIsEmptyExpression mit dem angegebenen Argument.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> has a collection result type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> weist einen Auflistungsergebnistyp auf.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>An expression that specifies the instance.</source>
          <target state="translated">Ein Ausdruck, der die Instanz angibt.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Type metadata that specifies the type that the instance's result type should be compared to.</source>
          <target state="translated">Typmetadaten, die den Typ angeben, mit denen der Ergebnistyp der Instanz verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /&gt;</ph> that determines whether the given argument is of the specified type or a subtype.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /&gt;</ph>, die bestimmt, ob das angegebene Argument vom angegebenen Typ oder einem Untertyp ist.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>A new DbIsOfExpression with the specified instance and type and DbExpressionKind IsOf.</source>
          <target state="translated">Ein neues DbIsOfExpression mit der angegebenen Instanz und dem Typ und DbExpressionKind IsOf.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>DbIsOfExpression requires that <ph id="ph1">`argument`</ph> has a polymorphic result type, and that <ph id="ph2">`type`</ph> is a type from the same type hierarchy as that result type.</source>
          <target state="translated">DbIsOfExpression erfordert, dass <ph id="ph1">`argument`</ph> wurde von einem polymorphen Ergebnistyp, und dass <ph id="ph2">`type`</ph> ist ein Typ aus der gleichen Typhierarchie wie dieser Ergebnistyp.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> or <ph id="ph2">&lt;paramref name="type" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="type" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is not in the same type hierarchy as the result type of <ph id="ph2">&lt;paramref name="argument" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> befindet sich nicht in der gleichen Typenhierarchie wie der Ergebnistyp von <ph id="ph2">&lt;paramref name="argument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>An expression that specifies the instance.</source>
          <target state="translated">Ein Ausdruck, der die Instanz angibt.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Type metadata that specifies the type that the instance's result type should be compared to.</source>
          <target state="translated">Typmetadaten, die den Typ angeben, mit denen der Ergebnistyp der Instanz verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /&gt;</ph> expression that determines whether the given argument is of the specified type, and only that type (not a subtype).</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /&gt;</ph>-Ausdruck, der bestimmt, ob das angegebene Argument vom angegebenen Typ und ausschließlich von diesem Typ (kein Untertyp) ist.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>A new DbIsOfExpression with the specified instance and type and DbExpressionKind IsOfOnly.</source>
          <target state="translated">Ein neues DbIsOfExpression mit der angegebenen Instanz und dem Typ und DbExpressionKind IsOfOnly.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>DbIsOfExpression requires that <ph id="ph1">`argument`</ph> has a polymorphic result type, and that <ph id="ph2">`type`</ph> is a type from the same type hierarchy as that result type.</source>
          <target state="translated">DbIsOfExpression erfordert, dass <ph id="ph1">`argument`</ph> wurde von einem polymorphen Ergebnistyp, und dass <ph id="ph2">`type`</ph> ist ein Typ aus der gleichen Typhierarchie wie dieser Ergebnistyp.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> or <ph id="ph2">&lt;paramref name="type" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="type" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is not in the same type hierarchy as the result type of <ph id="ph2">&lt;paramref name="argument" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> befindet sich nicht in der gleichen Typenhierarchie wie der Ergebnistyp von <ph id="ph2">&lt;paramref name="argument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the outer set argument.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>, die das äußere Mengenargument angibt.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the inner set argument.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>, die das innere Mengenargument angibt.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method that specifies how the outer key value should be derived from an element of the outer set.</source>
          <target state="translated">Eine Methode, die angibt, wie der Wert des äußeren Schlüssels von einem Element der äußeren Menge abgeleitet werden sollte.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method that specifies how the inner key value should be derived from an element of the inner set.</source>
          <target state="translated">Eine Methode, die angibt, wie der Wert des inneren Schlüssels von einem Element der inneren Menge abgeleitet werden sollte.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> that joins the sets specified by the outer and inner expressions, on an equality condition between the specified outer and inner keys, using InnerJoin as the <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph>, die die von den äußeren und inneren Ausdrücken angegebenen Mengen nach einer Gleichheitsbedingung zwischen den angegebenen äußeren und inneren Schlüsseln verknüpft, wobei InnerJoin als <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> verwendet wird.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A new DbJoinExpression, with an <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality.</source>
          <target state="translated">Eine neue DbJoinExpression mit einer <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> von InnerJoin, die den Vorgang der inneren Verknüpfung darstellt, der auf den linken und rechten Eingabeset unter einer Verknüpfungsbedingung, die die Werte des äußeren und inneren Schlüssels auf Gleichheit vergleicht, angewendet wird.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="outerKey" /&gt;</ph> or <ph id="ph2">&lt;paramref name="innerKey" /&gt;</ph> is null.</source>
          <target state="translated">Der von <ph id="ph1">&lt;paramref name="outerKey" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="innerKey" /&gt;</ph> erzeugte Ausdruck ist NULL.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>The expressions produced by <ph id="ph1">&lt;paramref name="outerKey" /&gt;</ph> and <ph id="ph2">&lt;paramref name="innerKey" /&gt;</ph> are not comparable for equality.</source>
          <target state="translated">Die von <ph id="ph1">&lt;paramref name="outerKey" /&gt;</ph> und <ph id="ph2">&lt;paramref name="innerKey" /&gt;</ph> erzeugten Ausdrücke sind nicht auf Gleichheit vergleichbar.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>The type of the <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Der Typ des der <bpt id="p1">&lt;c&gt;</bpt>Selektor<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the outer set argument.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>, die das äußere Mengenargument angibt.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the inner set argument.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>, die das innere Mengenargument angibt.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A method that specifies how the outer key value should be derived from an element of the outer set.</source>
          <target state="translated">Eine Methode, die angibt, wie der Wert des äußeren Schlüssels von einem Element der äußeren Menge abgeleitet werden sollte.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A method that specifies how the inner key value should be derived from an element of the inner set.</source>
          <target state="translated">Eine Methode, die angibt, wie der Wert des inneren Schlüssels von einem Element der inneren Menge abgeleitet werden sollte.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A method that specifies how an element of the result set should be derived from elements of the inner and outer sets.</source>
          <target state="translated">Eine Methode, die angibt, wie ein Element des Resultsets von Elementen der inneren und äußeren Menge abgeleitet werden sollte.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>This method must produce an instance of a type that is compatible with Join and can be resolved into a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>.</source>
          <target state="translated">Diese Methode muss eine Instanz eines Typs produzieren, der mit „Join“ kompatibel ist und in eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> aufgelöst werden kann.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>Compatibility requirements for <bpt id="p1">&lt;c&gt;</bpt>TSelector<ept id="p1">&lt;/c&gt;</ept> are described in remarks.</source>
          <target state="translated">Anforderungen an die Kompatibilität für <bpt id="p1">&lt;c&gt;</bpt>TSelector<ept id="p1">&lt;/c&gt;</ept> werden in den Hinweisen beschrieben.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /&gt;</ph> that projects the specified selector over the sets specified by the outer and inner expressions, joined on an equality condition between the specified outer and inner keys, using InnerJoin as the <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /&gt;</ph>, die den angegebenen Selektor über die von den äußeren und inneren Ausdrücken angegebenen Mengen projiziert, verknüpft nach einer Gleichheitsbedingung zwischen den angegebenen äußeren und inneren Schlüsseln, wobei InnerJoin als <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> verwendet wird.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A new DbProjectExpression with the specified selector as its projection, and a new DbJoinExpression as its input.</source>
          <target state="translated">Eine neue DbProjectExpression mit dem angegebenen Selektor als Projektion und eine neue DbJoinExpression als Eingabe.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>The input DbJoinExpression is created with an <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality.</source>
          <target state="translated">Die eingegebene DbJoinExpression wird mit einer <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> von InnerJoin erstellt, die den Vorgang der inneren Verknüpfung darstellt, der auf den linken und rechten Eingabeset unter einer Verknüpfungsbedingung, die die Werte des äußeren und inneren Schlüssels auf Gleichheit vergleicht, angewendet wird.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>To be compatible with Join, <ph id="ph1">`TSelector`</ph> must be derived from <ph id="ph2">&lt;xref:System.Data.Common.CommandTrees.DbExpression&gt;</ph>,     or must be an anonymous type with DbExpression-derived properties.</source>
          <target state="translated">Für die Kompatibilität bei Join <ph id="ph1">`TSelector`</ph> abgeleitet werden müssen <ph id="ph2">&lt;xref:System.Data.Common.CommandTrees.DbExpression&gt;</ph>, oder ein anonymer Typ mit DbExpression-abgeleiteten Eigenschaften werden muss.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>The following are examples of supported types for <ph id="ph1">`TSelector`</ph>:</source>
          <target state="translated">Die folgenden Beispiele von unterstützten Typen sind <ph id="ph1">`TSelector`</ph>:</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>(<ph id="ph1">`TSelector`</ph> is <ph id="ph2">&lt;xref:System.Data.Common.CommandTrees.DbPropertyExpression&gt;</ph>).</source>
          <target state="translated">(<ph id="ph1">`TSelector`</ph> is <ph id="ph2">&lt;xref:System.Data.Common.CommandTrees.DbPropertyExpression&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>(<ph id="ph1">`TSelector`</ph> is an anonymous type with DbExpression-derived properties).</source>
          <target state="translated">(<ph id="ph1">`TSelector`</ph> ist ein anonymer Typ mit DbExpression-abgeleiteten Eigenschaften).</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>The result of <ph id="ph1">&lt;paramref name="selector" /&gt;</ph> is null after conversion to DbExpression.</source>
          <target state="translated">Das Ergebnis von <ph id="ph1">&lt;paramref name="selector" /&gt;</ph> nach der Konvertierung in DbExpression ist NULL.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>The result of <ph id="ph1">&lt;paramref name="Selector" /&gt;</ph> is not compatible with SelectMany.</source>
          <target state="translated">Das Ergebnis von <ph id="ph1">&lt;paramref name="Selector" /&gt;</ph> ist nicht kompatibel mit SelectMany.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambda" /&gt;</ph> with the specified inline Lambda function implementation and formal parameters.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambda" /&gt;</ph> mit den angegebenen Inline-Lambda-Funktionsimplementierungs- und formalen Parametern.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})">
          <source>An expression that defines the logic of the Lambda function.</source>
          <target state="translated">Ein Ausdruck, der die Logik der Lambda-Funktion definiert.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /&gt;</ph> collection that represents the formal parameters to the Lambda function.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /&gt;</ph>-Sammlung, die die formalen Parameter der Lambda-Funktion darstellt.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})">
          <source>These variables are valid for use in the <bpt id="p1">&lt;c&gt;</bpt>body<ept id="p1">&lt;/c&gt;</ept> expression.</source>
          <target state="translated">Diese Variablen sind gültig für die Verwendung im <bpt id="p1">&lt;c&gt;</bpt>body<ept id="p1">&lt;/c&gt;</ept>-Ausdruck.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambda" /&gt;</ph> with the specified inline Lambda function implementation and formal parameters.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambda" /&gt;</ph> mit den angegebenen Inline-Lambda-Funktionsimplementierungs- und formalen Parametern.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})">
          <source>A new DbLambda that describes an inline Lambda function with the specified body and formal parameters.</source>
          <target state="translated">Ein neues DbLambda, das eine Inline- Lambda-Funktion mit dem angegebenen Text und den formalen Parametern beschreibt.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})">
          <source><ph id="ph1">&lt;paramref name="variables" /&gt;</ph> is null or contains null, or <ph id="ph2">&lt;paramref name="body" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="variables" /&gt;</ph> ist NULL oder enthält NULL oder  <ph id="ph2">&lt;paramref name="body" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})">
          <source><ph id="ph1">&lt;paramref name="variables" /&gt;</ph> contains more than one element with the same variable name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="variables" /&gt;</ph> enthält mehr als ein Element mit dem gleichen Variablennamen.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])">
          <source>An expression that defines the logic of the Lambda function.</source>
          <target state="translated">Ein Ausdruck, der die Logik der Lambda-Funktion definiert.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /&gt;</ph> collection that represents the formal parameters to the Lambda function.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /&gt;</ph>-Sammlung, die die formalen Parameter der Lambda-Funktion darstellt.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])">
          <source>These variables are valid for use in the <bpt id="p1">&lt;c&gt;</bpt>body<ept id="p1">&lt;/c&gt;</ept> expression.</source>
          <target state="translated">Diese Variablen sind gültig für die Verwendung im <bpt id="p1">&lt;c&gt;</bpt>body<ept id="p1">&lt;/c&gt;</ept>-Ausdruck.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambda" /&gt;</ph> with the specified inline Lambda function implementation and formal parameters.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLambda" /&gt;</ph> mit den angegebenen Inline-Lambda-Funktionsimplementierungs- und formalen Parametern.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])">
          <source>A new DbLambda that describes an inline Lambda function with the specified body and formal parameters.</source>
          <target state="translated">Ein neues DbLambda, das eine Inline- Lambda-Funktion mit dem angegebenen Text und den formalen Parametern beschreibt.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])">
          <source><ph id="ph1">&lt;paramref name="variables" /&gt;</ph> is null or contains null, or <ph id="ph2">&lt;paramref name="body" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="variables" /&gt;</ph> ist NULL oder enthält NULL oder  <ph id="ph2">&lt;paramref name="body" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])">
          <source><ph id="ph1">&lt;paramref name="variables" /&gt;</ph> contains more than one element with the same variable name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="variables" /&gt;</ph> enthält mehr als ein Element mit dem gleichen Variablennamen.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> that joins the sets specified by the left and right expressions, on the specified join condition, using LeftOuterJoin as the <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph>, der die vom linken und vom rechten Ausdruck in der angegebenen Joinbedingung festgelegten Mengen verknüpft, indem LeftOuterJoin als <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> verwendet wird.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the left set argument.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>, der das linke set-Argument angibt.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the right set argument.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>, der das rechte set-Argument angibt.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method representing the condition on which to join.</source>
          <target state="translated">Eine Methode, die die Bedingung darstellt, bei der die Verknüpfung stattfinden soll.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>This method must produce an expression with a Boolean result type that provides the logic of the join condition.</source>
          <target state="translated">Diese Methode muss einen Ausdruck mit einem booleschen Ergebnistyp erzeugen, der die Logik der Joinbedingung bereitstellt.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> that joins the sets specified by the left and right expressions, on the specified join condition, using LeftOuterJoin as the <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph>, der die vom linken und vom rechten Ausdruck in der angegebenen Joinbedingung festgelegten Mengen verknüpft, indem LeftOuterJoin als <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> verwendet wird.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A new DbJoinExpression, with an <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> of LeftOuterJoin, that represents the left outer join operation applied to the left and right input sets under the given join condition.</source>
          <target state="translated">Ein neues DbJoinExpression, mit <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> von LeftOuterJoin, der den Vorgang des linken äußeren Join darstellt, der auf den linken und rechten Eingabesets unter der angegebenen Joinbedingung angewendet wurde.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="joinCondition" /&gt;</ph> is null.</source>
          <target state="translated">Der von <ph id="ph1">&lt;paramref name="joinCondition" /&gt;</ph> erzeugte Ausdruck ist NULL.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="joinCondition" /&gt;</ph> does not have a Boolean result type.</source>
          <target state="translated">Der von <ph id="ph1">&lt;paramref name="joinCondition" /&gt;</ph> erzeugte Ausdruck besitzt keinen booleschen Ergebnistyp.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that specifies the left set argument.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph>, die das linke Mengenargument angibt.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that specifies the right set argument.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph>, die das rechte Mengenargument angibt.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the condition on which to join.</source>
          <target state="translated">Ein Ausdruck, der die Bedingung für den Join angibt.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph> that joins the sets specified by the left and right expression bindings, on the specified join condition, using LeftOuterJoin as the <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /&gt;</ph>, der die von der linken und der rechten Ausdrucksbindung in der angegebenen Joinbedingung festgelegten Mengen verknüpft, indem LeftOuterJoin als <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> verwendet wird.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbJoinExpression, with an <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> of LeftOuterJoin, that represents the left outer join operation applied to the left and right     input sets under the given join condition.</source>
          <target state="translated">Eine neue DbJoinExpression-Klasse, mit LeftOuterJoin als <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph>-Enumeration, die den Vorgang des linken äußeren Joins darstellt, der auf den linken und rechten Eingabesets unter der angegebenen Joinbedingung angewendet wurde.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph>,  <ph id="ph2">&lt;paramref name="right" /&gt;</ph> or <ph id="ph3">&lt;paramref name="joinCondition" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph>, <ph id="ph2">&lt;paramref name="right" /&gt;</ph> oder <ph id="ph3">&lt;paramref name="joinCondition" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="joinCondition" /&gt;</ph> does not have a Boolean result type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="joinCondition" /&gt;</ph> weist keinen booleschen Ergebnistyp auf.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">Ein Ausdruck, der das linke Argument angibt.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">Ein Ausdruck, der das rechte Argument angibt.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph> that determines whether the left argument is less than the right argument.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph>, die bestimmt, ob das linke Argument kleiner als das rechte Argument ist.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbComparisonExpression representing the less-than comparison.</source>
          <target state="translated">Ein neues DbComparisonExpression, das den Kleiner-als-Vergleich darstellt.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="right" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>No common order-comparable result type exists between <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Zwischen <ph id="ph1">&lt;paramref name="left" /&gt;</ph> und <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist kein allgemeiner, auf Reihenfolge vergleichbarer Ergebnistyp vorhanden.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">Ein Ausdruck, der das linke Argument angibt.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">Ein Ausdruck, der das rechte Argument angibt.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph> that determines whether the left argument is less than or equal to the right argument.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph>, die bestimmt, ob das linke Argument kleiner oder gleich dem rechten Argument ist.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbComparisonExpression representing the less-than-or-equal-to comparison.</source>
          <target state="translated">Ein neues DbComparisonExpression, das das Kleiner-als-oder-gleich-Vergleich darstellt.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="right" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>No common result type that is both equality- and order-comparable exists between <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Zwischen <ph id="ph1">&lt;paramref name="left" /&gt;</ph> und <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist kein allgemeiner Ergebnistyp, der sowohl auf Gleichheit als auch auf Reihenfolge vergleichbar ist, vorhanden.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /&gt;</ph> that compares the specified input string to the given pattern.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /&gt;</ph>, die die angegebene Eingabezeichenfolge mit dem angegebenen Muster vergleicht.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the input string.</source>
          <target state="translated">Ein Ausdruck, der die Eingabezeichenfolge angibt.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the pattern string.</source>
          <target state="translated">Ein Ausdruck, der die Musterzeichenfolge angibt.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /&gt;</ph> that compares the specified input string to the given pattern.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /&gt;</ph>, die die angegebene Eingabezeichenfolge mit dem angegebenen Muster vergleicht.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbLikeExpression with the specified input, pattern and a null escape.</source>
          <target state="translated">Ein neues DbLikeExpression mit der angegebenen Eingabe, Muster und einem Escapezeichen NULL.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="Argument" /&gt;</ph> or <ph id="ph2">&lt;paramref name="pattern" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Argument" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="pattern" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="Argument" /&gt;</ph> or <ph id="ph2">&lt;paramref name="pattern" /&gt;</ph> does not have a string result type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Argument" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="pattern" /&gt;</ph> weist keinen Zeichenfolgenergebnistyp auf.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the input string.</source>
          <target state="translated">Ein Ausdruck, der die Eingabezeichenfolge angibt.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the pattern string.</source>
          <target state="translated">Ein Ausdruck, der die Musterzeichenfolge angibt.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An optional expression that specifies the escape string.</source>
          <target state="translated">Ein optionaler Ausdruck, der die Escapezeichenfolge angibt.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /&gt;</ph> that compares the specified input string to the given pattern using the optional escape.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /&gt;</ph>, der mithilfe der optionalen Escapezeichenfolge die angegebene Eingabezeichenfolge mit dem angegebenen Muster vergleicht.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbLikeExpression with the specified input, pattern and escape.</source>
          <target state="translated">Ein neues DbLikeExpression mit der angegebenen Eingabe, Muster und einem Escapezeichen.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph>,   <ph id="ph2">&lt;paramref name="pattern" /&gt;</ph> or <ph id="ph3">&lt;paramref name="escape" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph>, <ph id="ph2">&lt;paramref name="pattern" /&gt;</ph>, oder <ph id="ph3">&lt;paramref name="escape" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph>,   <ph id="ph2">&lt;paramref name="pattern" /&gt;</ph> or <ph id="ph3">&lt;paramref name="escape" /&gt;</ph> does not have a string result type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph>, <ph id="ph2">&lt;paramref name="pattern" /&gt;</ph> oder <ph id="ph3">&lt;paramref name="escape" /&gt;</ph> weist keinen Zeichenfolgenergebnistyp auf.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the input collection.</source>
          <target state="translated">Ein Ausdruck, der die Eingabeauflistung angibt.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the limit value.</source>
          <target state="translated">Ein Ausdruck, der den Grenzwert angibt.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /&gt;</ph> that restricts the number of elements in the Argument collection to the specified count Limit value.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /&gt;</ph>, der die Anzahl der Elemente in der Argumentsammlung auf den angegebenen Zählgrenzwert beschränkt.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Tied results are not included in the output.</source>
          <target state="translated">Verknüpfte Ergebnisse sind nicht in der Ausgabe enthalten.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbLimitExpression with the specified argument and count limit values that does not include tied results.</source>
          <target state="translated">Ein neues DbLimitExpression mit den angegebenen Argument- und Zählgrenzwerten, das verknüpfte Ergebnisse nicht einschließt.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="count" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> does not have a collection result type, or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> does not have a result type that is equal or promotable to a 64-bit integer type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> hat keinen Auflistungsergebnistyp, oder <ph id="ph2">&lt;paramref name="count" /&gt;</ph> hat keinen Ergebnistyp, der gleich einem 64-Bit-Ganzzahl-Typ oder zu einem solchen heraufstufbar ist.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">Ein Ausdruck, der das linke Argument angibt.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">Ein Ausdruck, der das rechte Argument angibt.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph> that subtracts the right argument from the left argument.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph>, die das rechte Argument vom linken Argument subtrahiert.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbArithmeticExpression representing the subtraction operation.</source>
          <target state="translated">Ein neues DbArithmeticExpression, der den Substraktionsvorgang darstellt.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="right" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>No common numeric result type exists between <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Zwischen <ph id="ph1">&lt;paramref name="left" /&gt;</ph> und <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist kein gemeinsamer numerischer Ergebnistyp vorhanden.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">Ein Ausdruck, der das linke Argument angibt.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">Ein Ausdruck, der das rechte Argument angibt.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph> that computes the remainder of the left argument divided by the right argument.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph>, die den Rest der Division des linken Arguments durch das rechte Argument berechnet.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbArithmeticExpression representing the modulo operation.</source>
          <target state="translated">Ein neues DbArithmeticExpression, der den Modulovorgang darstellt.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="right" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>No common numeric result type exists between <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Zwischen <ph id="ph1">&lt;paramref name="left" /&gt;</ph> und <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist kein gemeinsamer numerischer Ergebnistyp vorhanden.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">Ein Ausdruck, der das linke Argument angibt.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">Ein Ausdruck, der das rechte Argument angibt.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph> that multiplies the left argument by the right argument.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph>, die das linke Argument mit dem rechten Argument multipliziert.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbArithmeticExpression representing the multiplication operation.</source>
          <target state="translated">Ein neues DbArithmeticExpression, der die Multiplikation darstellt.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="right" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>No common numeric result type exists between <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Zwischen <ph id="ph1">&lt;paramref name="left" /&gt;</ph> und <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist kein gemeinsamer numerischer Ergebnistyp vorhanden.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /&gt;</ph> representing the navigation of a composition or association relationship.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /&gt;</ph>, der die Navigation einer Zusammensetzungs- oder Zuordnungsbeziehung darstellt.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)">
          <source>An expression that specifies the instance from which navigation should occur.</source>
          <target state="translated">Ein Ausdruck, der die Instanz angibt, von der die Navigation erfolgen soll.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)">
          <source>Metadata for the property that represents the end of the relationship from which navigation should occur.</source>
          <target state="translated">Metadaten für die Eigenschaft, die das Ende der Beziehung darstellt, von dem die Navigation erfolgen soll.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)">
          <source>Metadata for the property that represents the end of the relationship to which navigation should occur.</source>
          <target state="translated">Metadaten für die Eigenschaft, die das Ende der Beziehung darstellt, zu dem die Navigation erfolgen soll.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /&gt;</ph> representing the navigation of a composition or association relationship.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /&gt;</ph>, der die Navigation einer Zusammensetzungs- oder Zuordnungsbeziehung darstellt.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)">
          <source>A new DbRelationshipNavigationExpression representing the navigation of the specified from and to relation ends of the specified relation type from the specified navigation source instance.</source>
          <target state="translated">Ein neues DbRelationshipNavigationExpression, das die Navigation der angegebenen Von-und-Zu-Beziehungsenden des angegebenen Beziehungstyps aus der angegebenen Navigationsquell-Instanz darstellt.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)">
          <source><ph id="ph1">&lt;xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression&gt;</ph> requires that navigation always occur from a reference, and so <ph id="ph2">`navigateFrom`</ph> must always have a reference result type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression&gt;</ph> erfordert, dass Navigation immer aus einem Verweis erfolgt, weshalb <ph id="ph2">`navigateFrom`</ph> muss immer einen Verweistyp für das Ergebnis haben.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)">
          <source><ph id="ph1">&lt;paramref name="fromEnd" /&gt;</ph>,  <ph id="ph2">&lt;paramref name="toEnd" /&gt;</ph> or <ph id="ph3">&lt;paramref name="navigateFrom" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fromEnd" /&gt;</ph>, <ph id="ph2">&lt;paramref name="toEnd" /&gt;</ph> oder <ph id="ph3">&lt;paramref name="navigateFrom" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)">
          <source><ph id="ph1">&lt;paramref name="fromEnd" /&gt;</ph> and <ph id="ph2">&lt;paramref name="toEnd" /&gt;</ph> are not declared by the same relationship type, or <ph id="ph3">&lt;paramref name="navigateFrom" /&gt;</ph> has a result type that is not compatible with the property type of <ph id="ph4">&lt;paramref name="fromEnd" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fromEnd" /&gt;</ph> und <ph id="ph2">&lt;paramref name="toEnd" /&gt;</ph> werden nicht vom gleichen Beziehungstyp deklariert, oder <ph id="ph3">&lt;paramref name="navigateFrom" /&gt;</ph> hat einen Ergebnistyp, der nicht kompatibel mit dem Eigenschaftstyp <ph id="ph4">&lt;paramref name="fromEnd" /&gt;</ph> ist.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)">
          <source>Metadata for the relation type that represents the relationship.</source>
          <target state="translated">Metadaten für den Beziehungstyp, der die Beziehung darstellt.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)">
          <source>The name of the property of the relation type that represents the end of the relationship from which navigation should occur.</source>
          <target state="translated">Der Name der Eigenschaft des Beziehungstyps, der das Ende der Beziehung darstellt, von der aus die Navigation erfolgen soll.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)">
          <source>The name of the property of the relation type that represents the end of the relationship to which navigation should occur.</source>
          <target state="translated">Der Name der Eigenschaft des Beziehungstyps, der das Ende der Beziehung darstellt, zu der die Navigation erfolgen soll.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression the specifies the instance from which naviagtion should occur.</source>
          <target state="translated">Ein Ausdruck, der die Instanz angibt, von der die Navigation erfolgen soll.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /&gt;</ph> representing the navigation of a composition or association relationship.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /&gt;</ph>, der die Navigation einer Zusammensetzungs- oder Zuordnungsbeziehung darstellt.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbRelationshipNavigationExpression representing the navigation of the specified from and to relation ends of the specified relation type from the specified navigation source instance.</source>
          <target state="translated">Ein neues DbRelationshipNavigationExpression, das die Navigation der angegebenen Von-und-Zu-Beziehungsenden des angegebenen Beziehungstyps aus der angegebenen Navigationsquell-Instanz darstellt.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression&gt;</ph> requires that navigation always occur from a reference, and so <ph id="ph2">`navigateFrom`</ph> must always have a reference result type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression&gt;</ph> erfordert, dass Navigation immer aus einem Verweis erfolgt, weshalb <ph id="ph2">`navigateFrom`</ph> muss immer einen Verweistyp für das Ergebnis haben.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph>,  <ph id="ph2">&lt;paramref name="fromEndName" /&gt;</ph>,  <ph id="ph3">&lt;paramref name="toEndName" /&gt;</ph> or <ph id="ph4">&lt;paramref name="navigateFrom" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph>, <ph id="ph2">&lt;paramref name="fromEndName" /&gt;</ph>, <ph id="ph3">&lt;paramref name="toEndName" /&gt;</ph> oder <ph id="ph4">&lt;paramref name="navigateFrom" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is not associated with this command tree's metadata workspace or <ph id="ph2">&lt;paramref name="navigateFrom" /&gt;</ph> is associated with a different command tree, or <ph id="ph3">&lt;paramref name="type" /&gt;</ph> does not declare a relation end property with name <ph id="ph4">&lt;paramref name="toEndName" /&gt;</ph> or <ph id="ph5">&lt;paramref name="fromEndName" /&gt;</ph>, or <ph id="ph6">&lt;paramref name="navigateFrom" /&gt;</ph> has a result type that is not compatible with the property type of the relation end property with name <ph id="ph7">&lt;paramref name="fromEndName" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> wird nicht dem Metadatenarbeitsbereich dieser Befehlsstruktur zugeordnet, oder <ph id="ph2">&lt;paramref name="navigateFrom" /&gt;</ph> wird einer anderen Befehlsstruktur zugeordnet, oder <ph id="ph3">&lt;paramref name="type" /&gt;</ph> deklariert keine Beziehungsendeigenschaft mit dem Namen <ph id="ph4">&lt;paramref name="toEndName" /&gt;</ph> oder <ph id="ph5">&lt;paramref name="fromEndName" /&gt;</ph> oder <ph id="ph6">&lt;paramref name="navigateFrom" /&gt;</ph> verfügt über einen Ergebnistyp, der nicht mit dem Eigenschaftentyp der Beziehungsendeigenschaft mit dem Namen <ph id="ph7">&lt;paramref name="fromEndName" /&gt;</ph> kompatibel ist.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the argument.</source>
          <target state="translated">Ein Ausdruck, der das Argument angibt.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph> that negates the value of the argument.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph>, die den Wert des Arguments negiert.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbArithmeticExpression representing the negation operation.</source>
          <target state="translated">Ein neues DbArithmeticExpression, der den Negationsvorgang darstellt.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression)">
          <source>No numeric result type exists for <ph id="ph1">&lt;paramref name="argument" /&gt;</ph>.</source>
          <target state="translated">Kein numerischer Ergebnistyp für <ph id="ph1">&lt;paramref name="argument" /&gt;</ph> vorhanden.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /&gt;</ph>.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>The type of the new instance.</source>
          <target state="translated">Der Typ der neuen Instanz.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>Expressions that specify values of the new instances, interpreted according to the instance's type.</source>
          <target state="translated">Ausdrücke, die Werte der neuen Instanzen angeben, interpretiert gemäß dem Typ der Instanz.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /&gt;</ph>.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>If the type argument is a collection type, the arguments specify the elements of the collection.</source>
          <target state="translated">Wenn das Typargument ein Auflistungstyp ist, geben die Argumente die Elemente der Auflistung an.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>Otherwise the arguments are used as property or column values in the new instance.</source>
          <target state="translated">Andernfalls werden die Argumente als Eigenschafts- oder Spaltenwerte in der neuen Instanz verwendet.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>A new DbNewInstanceExpression with the specified type and arguments.</source>
          <target state="translated">Ein neues DbNewInstanceExpression mit dem angegebenen Typ und den Argumenten.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>If <ph id="ph1">`instanceType`</ph> is a collection type then every expression in <ph id="ph2">`arguments`</ph> must have a result type that is promotable to the element type of the <ph id="ph3">`instanceType`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">`instanceType`</ph> ein Sammlungstyp ist, jeder Ausdruck in <ph id="ph2">`arguments`</ph> benötigen einen Ergebnistyp aus, zu dem Elementtyp des ist, die <ph id="ph3">`instanceType`</ph>.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>If <ph id="ph1">`instanceType`</ph> is a row type,  <ph id="ph2">`arguments`</ph> must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column.</source>
          <target state="translated">Wenn <ph id="ph1">`instanceType`</ph> ist ein Zeilentyp <ph id="ph2">`arguments`</ph> beliebig viele Ausdrücke in der Zeilentyp Spalten vorhanden sind, und der Ergebnistyp des jeder Ausdruck muss in den Typ der entsprechenden Spalte gleich oder heraufstufbar sein darf.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>A row type that does not declare any columns is invalid.</source>
          <target state="translated">Ein Zeilentyp, der keine Spalten deklariert, ist ungültig.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>If <ph id="ph1">`instanceType`</ph> is an entity type,  <ph id="ph2">`arguments`</ph> must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property.</source>
          <target state="translated">Wenn <ph id="ph1">`instanceType`</ph> ist ein Entitätstyp <ph id="ph2">`arguments`</ph> muss enthalten, wie viele Ausdrücke als dort Eigenschaften, die durch den Typ definiert sind, und der Ergebnistyp des jeder Ausdruck muss in den Typ der entsprechenden Eigenschaft gleich oder heraufstufbar sein.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source><ph id="ph1">&lt;paramref name="instanceType" /&gt;</ph> or <ph id="ph2">&lt;paramref name="arguments" /&gt;</ph> is null, or <ph id="ph3">&lt;paramref name="arguments" /&gt;</ph> contains null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="instanceType" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="arguments" /&gt;</ph> ist NULL oder <ph id="ph3">&lt;paramref name="arguments" /&gt;</ph> enthält NULL.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source><ph id="ph1">&lt;paramref name="arguments" /&gt;</ph> is empty or the result types of the contained expressions do not match the requirements of <ph id="ph2">&lt;paramref name="instanceType" /&gt;</ph> (as explained in the remarks section).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arguments" /&gt;</ph> ist leer, oder die Ergebnistypen der enthaltenen Ausdrücke stimmen nicht mit den Anforderungen von <ph id="ph2">&lt;paramref name="instanceType" /&gt;</ph> überein (wie im Abschnitt „Hinweise“ erläutert).</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])">
          <source>The type of the new instance.</source>
          <target state="translated">Der Typ der neuen Instanz.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])">
          <source>Expressions that specify values of the new instances, interpreted according to the instance's type.</source>
          <target state="translated">Ausdrücke, die Werte der neuen Instanzen angeben, interpretiert gemäß dem Typ der Instanz.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /&gt;</ph>.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])">
          <source>If the type argument is a collection type, the arguments specify the elements of the collection.</source>
          <target state="translated">Wenn das Typargument ein Auflistungstyp ist, geben die Argumente die Elemente der Auflistung an.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])">
          <source>Otherwise the arguments are used as property or column values in the new instance.</source>
          <target state="translated">Andernfalls werden die Argumente als Eigenschafts- oder Spaltenwerte in der neuen Instanz verwendet.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])">
          <source>A new DbNewInstanceExpression with the specified type and arguments.</source>
          <target state="translated">Ein neues DbNewInstanceExpression mit dem angegebenen Typ und den Argumenten.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])">
          <source>If <ph id="ph1">`instanceType`</ph> is a collection type then every expression in <ph id="ph2">`arguments`</ph> must have a result type that is promotable to the element type of the <ph id="ph3">`instanceType`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">`instanceType`</ph> ein Sammlungstyp ist, jeder Ausdruck in <ph id="ph2">`arguments`</ph> benötigen einen Ergebnistyp aus, zu dem Elementtyp des ist, die <ph id="ph3">`instanceType`</ph>.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])">
          <source>If <ph id="ph1">`instanceType`</ph> is a row type,  <ph id="ph2">`arguments`</ph> must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column.</source>
          <target state="translated">Wenn <ph id="ph1">`instanceType`</ph> ist ein Zeilentyp <ph id="ph2">`arguments`</ph> beliebig viele Ausdrücke in der Zeilentyp Spalten vorhanden sind, und der Ergebnistyp des jeder Ausdruck muss in den Typ der entsprechenden Spalte gleich oder heraufstufbar sein darf.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])">
          <source>A row type that does not declare any columns is invalid.</source>
          <target state="translated">Ein Zeilentyp, der keine Spalten deklariert, ist ungültig.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])">
          <source>If <ph id="ph1">`instanceType`</ph> is an entity type,  <ph id="ph2">`arguments`</ph> must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property.</source>
          <target state="translated">Wenn <ph id="ph1">`instanceType`</ph> ist ein Entitätstyp <ph id="ph2">`arguments`</ph> muss enthalten, wie viele Ausdrücke als dort Eigenschaften, die durch den Typ definiert sind, und der Ergebnistyp des jeder Ausdruck muss in den Typ der entsprechenden Eigenschaft gleich oder heraufstufbar sein.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])">
          <source><ph id="ph1">&lt;paramref name="instanceType" /&gt;</ph> or <ph id="ph2">&lt;paramref name="arguments" /&gt;</ph> is null, or <ph id="ph3">&lt;paramref name="arguments" /&gt;</ph> contains null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="instanceType" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="arguments" /&gt;</ph> ist NULL oder <ph id="ph3">&lt;paramref name="arguments" /&gt;</ph> enthält NULL.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])">
          <source><ph id="ph1">&lt;paramref name="arguments" /&gt;</ph> is empty or the result types of the contained expressions do not match the requirements of <ph id="ph2">&lt;paramref name="instanceType" /&gt;</ph> (as explained in the remarks section).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arguments" /&gt;</ph> ist leer, oder die Ergebnistypen der enthaltenen Ausdrücke stimmen nicht mit den Anforderungen von <ph id="ph2">&lt;paramref name="instanceType" /&gt;</ph> überein (wie im Abschnitt „Hinweise“ erläutert).</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /&gt;</ph> that constructs a collection containing the specified elements.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /&gt;</ph>, der eine Sammlung mit den angegebenen Elementen erstellt.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>A list of expressions that provide the elements of the collection.</source>
          <target state="translated">Eine Liste von Ausdrücken, die die Elemente der Auflistung bereitstellen.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /&gt;</ph> that constructs a collection containing the specified elements.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /&gt;</ph>, der eine Sammlung mit den angegebenen Elementen erstellt.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>The type of the collection is based on the common type of the elements.</source>
          <target state="translated">Der Typ der Auflistung basiert auf dem gemeinsamen Typ der Elemente.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>If no common element type exists an exception is thrown.</source>
          <target state="translated">Wenn kein gemeinsamer Elementtyp vorhanden ist, wird eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source>A new DbNewInstanceExpression with the specified collection type and arguments.</source>
          <target state="translated">Ein neues DbNewInstanceExpression mit dem angegebenen Sammlungstyp und den Argumenten.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source><ph id="ph1">&lt;paramref name="elements" /&gt;</ph> is null, or contains null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="elements" /&gt;</ph> ist NULL oder enthält NULL.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
          <source><ph id="ph1">&lt;paramref name="elements" /&gt;</ph> is empty or contains expressions for which no common result type exists.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="elements" /&gt;</ph> ist leer oder enthält Ausdrücke, für die kein gemeinsamer Ergebnistyp vorhanden ist.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])">
          <source>A list of expressions that provide the elements of the collection.</source>
          <target state="translated">Eine Liste von Ausdrücken, die die Elemente der Auflistung bereitstellen.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /&gt;</ph> that constructs a collection containing the specified elements.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /&gt;</ph>, der eine Sammlung mit den angegebenen Elementen erstellt.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])">
          <source>The type of the collection is based on the common type of the elements.</source>
          <target state="translated">Der Typ der Auflistung basiert auf dem gemeinsamen Typ der Elemente.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])">
          <source>If no common element type exists an exception is thrown.</source>
          <target state="translated">Wenn kein gemeinsamer Elementtyp vorhanden ist, wird eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])">
          <source>A new DbNewInstanceExpression with the specified collection type and arguments.</source>
          <target state="translated">Ein neues DbNewInstanceExpression mit dem angegebenen Sammlungstyp und den Argumenten.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])">
          <source><ph id="ph1">&lt;paramref name="elements" /&gt;</ph> is null, or contains null..</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="elements" /&gt;</ph> ist NULL oder enthält NULL.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])">
          <source><ph id="ph1">&lt;paramref name="elements" /&gt;</ph> is empty or contains expressions for which no common result type exists.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="elements" /&gt;</ph> ist leer oder enthält Ausdrücke, für die kein gemeinsamer Ergebnistyp vorhanden ist.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage)">
          <source>The type metadata for the collection to create</source>
          <target state="translated">Die Typmetadaten für die zu erstellende Auflistung.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /&gt;</ph> that constructs an empty collection of the specified collection type.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /&gt;</ph>, die eine leere Auflistung vom angegebenen Auflistungstyp erstellt.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage)">
          <source>A new DbNewInstanceExpression with the specified collection type and an empty <ph id="ph1">&lt;paramref name="Arguments" /&gt;</ph> list.</source>
          <target state="translated">Ein neues DbNewInstanceExpression mit dem angegebenen Sammlungstyp und einer leeren <ph id="ph1">&lt;paramref name="Arguments" /&gt;</ph>-Liste.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage)">
          <source><ph id="ph1">&lt;paramref name="collectionType" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collectionType" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage)">
          <source><ph id="ph1">&lt;paramref name="collectionType" /&gt;</ph> is not a collection type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collectionType" /&gt;</ph> ist kein Auflistungstyp.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>A list of string-DbExpression key-value pairs that defines the structure and values of the row.</source>
          <target state="translated">Eine Liste von Zeichenfolge-DbExpression-Schlüssel-Wert-Paaren, die die Struktur und die Werte der Zeile definiert.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /&gt;</ph> that produces a row with the specified named columns and the given values, specified as expressions.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /&gt;</ph>, die eine Zeile mit den angegebenen benannten Spalten und den angegebenen Werten erzeugt, die als Ausdrücke angegeben werden.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>A new DbNewInstanceExpression that represents the construction of the row.</source>
          <target state="translated">Ein neues DbNewInstanceExpression, die die Konstruktion der Zeile darstellt.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source><ph id="ph1">&lt;paramref name="columnValues" /&gt;</ph> is null or contains an element with a null column name or expression.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="columnValues" /&gt;</ph> ist NULL oder enthält ein Element mit einem NULL-Spaltennamen oder -Ausdruck.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source><ph id="ph1">&lt;paramref name="columnValues" /&gt;</ph> is empty, or contains a duplicate or invalid column name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="columnValues" /&gt;</ph> ist leer oder enthält einen doppelten oder ungültigen Spaltennamen.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression)">
          <source>A Boolean expression that specifies the argument.</source>
          <target state="translated">Ein boolescher Ausdruck, der das Argument angibt.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /&gt;</ph> that performs the logical negation of the given argument.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /&gt;</ph>, die die logische Negation des angegebenen Arguments ausführt.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbNotExpression with the specified argument.</source>
          <target state="translated">Ein neues DbNotExpression mit dem angegebenen Argument.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> does not have a Boolean result type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> weist keinen booleschen Ergebnistyp auf.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">Ein Ausdruck, der das linke Argument angibt.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">Ein Ausdruck, der das rechte Argument angibt.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph> that compares the left and right arguments for inequality.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /&gt;</ph>, die das linke und das rechte Argument auf Ungleichheit vergleicht.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbComparisonExpression representing the inequality comparison.</source>
          <target state="translated">Ein neues DbComparisonExpression, das den Ungleichheitsvergleich darstellt.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="right" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>No common equality-comparable result type exists between <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Zwischen <ph id="ph1">&lt;paramref name="left" /&gt;</ph> und <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist kein allgemeiner, auf Gleichheit vergleichbarer Ergebnistyp vorhanden.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage)">
          <source>The type of the null value.</source>
          <target state="translated">Der Typ des Nullwerts.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNullExpression" /&gt;</ph>, which represents a typed null value.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbNullExpression" /&gt;</ph>, der einen typisierten NULL-Wert darstellt.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage)">
          <source>An instance of DbNullExpression.</source>
          <target state="translated">Eine Instanz von DbNullExpression.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage)">
          <source><ph id="ph1">&lt;paramref name="nullType" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="nullType" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the input set.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>, die das Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Type metadata for the type that elements of the input set must have to be included in the resulting set.</source>
          <target state="translated">Typmetadaten für den Typ, den Elemente des Eingabesets aufweisen müssen, damit sie in das Resultset eingeschlossen werden.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /&gt;</ph> that produces a set consisting of the elements of the given input set that are of the specified type.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /&gt;</ph>, der einen Satz von Elementen des angegebenen Eingabesets erzeugt, die den angegebenen Typ aufweisen.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>A new DbOfTypeExpression with the specified set argument and type, and an ExpressionKind of <ph id="ph1">&lt;see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfType" /&gt;</ph>.</source>
          <target state="translated">Ein neues DbOfTypeExpression mit dem angegebenen Mengenargument und -typ und ein ExpressionKind von <ph id="ph1">&lt;see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>DbOfTypeExpression requires that <ph id="ph1">`argument`</ph> has a collection result type with a polymorphic element type, and that <ph id="ph2">`type`</ph> is a type from the same type hierarchy as that element type.</source>
          <target state="translated">DbOfTypeExpression erfordert, dass <ph id="ph1">`argument`</ph> verfügt über eine Sammlung Ergebnistyp mit einem polymorphen Elementtyp und dass <ph id="ph2">`type`</ph> ist ein Typ aus der gleichen Typhierarchie wie dieser Elementtyp.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> or <ph id="ph2">&lt;paramref name="type" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="type" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> does not have a collection result type, or <ph id="ph2">&lt;paramref name="type" /&gt;</ph> is not a type in the same type hierarchy as the element type of the collection result type of <ph id="ph3">&lt;paramref name="argument" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> hat keinen Auflistungsergebnistyp, oder <ph id="ph2">&lt;paramref name="type" /&gt;</ph> ist kein Typ in der gleichen Typhierarchie wie der Elementtyp des <ph id="ph3">&lt;paramref name="argument" /&gt;</ph>-Auflistungsergebnistyps.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the input set.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>, der das Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Type metadata for the type that elements of the input set must match exactly to be included in the resulting set.</source>
          <target state="translated">Typmetadaten für den Typ, mit dem Elemente des Eingabesets genau übereinstimmen müssen, damit sie in das Resultset eingeschlossen werden.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /&gt;</ph> that produces a set consisting of the elements of the given input set that are of exactly the specified type.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /&gt;</ph>, der einen Satz von Elementen des angegebenen Eingabesets erzeugt, die genau den angegebenen Typ aufweisen.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>A new DbOfTypeExpression with the specified set argument and type, and an ExpressionKind of <ph id="ph1">&lt;see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly" /&gt;</ph>.</source>
          <target state="translated">Ein neues DbOfTypeExpression mit dem angegebenen Mengenargument und -typ und ein ExpressionKind von <ph id="ph1">&lt;see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>DbOfTypeExpression requires that <ph id="ph1">`argument`</ph> has a collection result type with a polymorphic element type, and that <ph id="ph2">`type`</ph> is a type from the same type hierarchy as that element type.</source>
          <target state="translated">DbOfTypeExpression erfordert, dass <ph id="ph1">`argument`</ph> verfügt über eine Sammlung Ergebnistyp mit einem polymorphen Elementtyp und dass <ph id="ph2">`type`</ph> ist ein Typ aus der gleichen Typhierarchie wie dieser Elementtyp.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> or <ph id="ph2">&lt;paramref name="type" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="type" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> does not have a collection result type, or <ph id="ph2">&lt;paramref name="type" /&gt;</ph> is not a type in the same type hierarchy as the element type of the collection result type of <ph id="ph3">&lt;paramref name="argument" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> hat keinen Auflistungsergebnistyp, oder <ph id="ph2">&lt;paramref name="type" /&gt;</ph> ist kein Typ in der gleichen Typhierarchie wie der Elementtyp des <ph id="ph3">&lt;paramref name="argument" /&gt;</ph>-Auflistungsergebnistyps.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A Boolean expression that specifies the left argument.</source>
          <target state="translated">Ein boolescher Ausdruck, der das linke Argument angibt.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A Boolean expression that specifies the right argument.</source>
          <target state="translated">Ein boolescher Ausdruck, der das rechte Argument angibt.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /&gt;</ph> that performs the logical Or of the left and right arguments.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /&gt;</ph>, der die logische OR-Operation für das linke und das rechte Argument ausführt.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbOrExpression with the specified arguments.</source>
          <target state="translated">Ein neues DbOrExpression mit den angegebenen Argumenten.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="right" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="right" /&gt;</ph> does not have a Boolean result type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="right" /&gt;</ph> weist keinen booleschen Ergebnistyp auf.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that sorts the given input set by the specified sort key, with ascending sort order and default collation.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph>, der das angegebene Eingabeset in aufsteigender Sortierreihenfolge und mit Standardsortierung nach dem angegebenen Sortierschlüssel sortiert.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>An expression that specifies the input set.</source>
          <target state="translated">Ein Ausdruck, der das Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method that specifies how to derive the sort key expression given a member of the input set.</source>
          <target state="translated">Eine Methode, die angibt, wie der Sortierschlüsselausdruck für einen angegebenen Member des Eingabesets abgeleitet wird.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>This method must produce an expression with an order-comparable result type that provides the sort key definition.</source>
          <target state="translated">Diese Methode muss einen Ausdruck mit einem in der Reihenfolge vergleichbaren Ergebnistyp erzeugen, der die Sortierschlüsseldefinition bereitstellt.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that sorts the given input set by the specified sort key, with ascending sort order and default collation.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph>, der das angegebene Eingabeset in aufsteigender Sortierreihenfolge und mit Standardsortierung nach dem angegebenen Sortierschlüssel sortiert.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A new DbSortExpression that represents the order-by operation.</source>
          <target state="translated">Ein neues DbSortExpression, das den order-by-Vorgang darstellt.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> is null.</source>
          <target state="translated">Der von <ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> erzeugte Ausdruck ist NULL.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> does not have an order-comparable result type.</source>
          <target state="translated">Der Ausdruck, der von <ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> erzeugt wurde, hat keinen in der Reihenfolge vergleichbaren Ergebnistyp.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>An expression that specifies the input set.</source>
          <target state="translated">Ein Ausdruck, der das Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>A method that specifies how to derive the sort key expression given a member of the input set.</source>
          <target state="translated">Eine Methode, die angibt, wie der Sortierschlüsselausdruck für einen angegebenen Member des Eingabesets abgeleitet wird.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>This method must produce an expression with an order-comparable result type that provides the sort key definition.</source>
          <target state="translated">Diese Methode muss einen Ausdruck mit einem in der Reihenfolge vergleichbaren Ergebnistyp erzeugen, der die Sortierschlüsseldefinition bereitstellt.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>The collation to sort under.</source>
          <target state="translated">Die zu verwendende Sortierung.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that sorts the given input set by the specified sort key, with ascending sort order and the specified collation.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph>, der das angegebene Eingabeset in aufsteigender Sortierreihenfolge und mit der angegebenen Sortierung nach dem angegebenen Sortierschlüssel sortiert.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>A new DbSortExpression that represents the order-by operation.</source>
          <target state="translated">Ein neues DbSortExpression, das den order-by-Vorgang darstellt.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> is null.</source>
          <target state="translated">Der von <ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> erzeugte Ausdruck ist NULL.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> does not have an order-comparable string result type.</source>
          <target state="translated">Der Ausdruck, der von <ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> erzeugt wurde, hat keinen in der Reihenfolge vergleichbaren Zeichenfolgenergebnistyp.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source><ph id="ph1">&lt;paramref name="collation" /&gt;</ph> is empty or contains only space characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collation" /&gt;</ph> ist leer oder enthält nur Leerzeichen.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that sorts the given input set by the specified sort key, with descending sort order and default collation.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph>, der das angegebene Eingabeset in absteigender Sortierreihenfolge und mit Standardsortierung nach dem angegebenen Sortierschlüssel sortiert.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>An expression that specifies the input set.</source>
          <target state="translated">Ein Ausdruck, der das Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method that specifies how to derive the sort key expression given a member of the input set.</source>
          <target state="translated">Eine Methode, die angibt, wie der Sortierschlüsselausdruck für einen angegebenen Member des Eingabesets abgeleitet wird.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>This method must produce an expression with an order-comparable result type that provides the sort key definition.</source>
          <target state="translated">Diese Methode muss einen Ausdruck mit einem in der Reihenfolge vergleichbaren Ergebnistyp erzeugen, der die Sortierschlüsseldefinition bereitstellt.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that sorts the given input set by the specified sort key, with descending sort order and default collation.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph>, der das angegebene Eingabeset in absteigender Sortierreihenfolge und mit Standardsortierung nach dem angegebenen Sortierschlüssel sortiert.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A new DbSortExpression that represents the order-by operation.</source>
          <target state="translated">Ein neues DbSortExpression, das den order-by-Vorgang darstellt.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> is null.</source>
          <target state="translated">Der von <ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> erzeugte Ausdruck ist NULL.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> does not have an order-comparable result type.</source>
          <target state="translated">Der Ausdruck, der von <ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> erzeugt wurde, hat keinen in der Reihenfolge vergleichbaren Ergebnistyp.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>An expression that specifies the input set.</source>
          <target state="translated">Ein Ausdruck, der das Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>A method that specifies how to derive the sort key expression given a member of the input set.</source>
          <target state="translated">Eine Methode, die angibt, wie der Sortierschlüsselausdruck für einen angegebenen Member des Eingabesets abgeleitet wird.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>This method must produce an expression with an order-comparable result type that provides the sort key definition.</source>
          <target state="translated">Diese Methode muss einen Ausdruck mit einem in der Reihenfolge vergleichbaren Ergebnistyp erzeugen, der die Sortierschlüsseldefinition bereitstellt.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>The collation to sort under.</source>
          <target state="translated">Die zu verwendende Sortierung.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that sorts the given input set by the specified sort key, with descending sort order and the specified collation.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph>, der das angegebene Eingabeset in absteigender Sortierreihenfolge und mit der angegebenen Sortierung nach dem angegebenen Sortierschlüssel sortiert.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>A new DbSortExpression that represents the order-by operation.</source>
          <target state="translated">Ein neues DbSortExpression, das den order-by-Vorgang darstellt.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> is null.</source>
          <target state="translated">Der von <ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> erzeugte Ausdruck ist NULL.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> does not have an order-comparable string result type.</source>
          <target state="translated">Der Ausdruck, der von <ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> erzeugt wurde, hat keinen in der Reihenfolge vergleichbaren Zeichenfolgenergebnistyp.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source><ph id="ph1">&lt;paramref name="collation" /&gt;</ph> is empty or contains only space characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collation" /&gt;</ph> ist leer oder enthält nur Leerzeichen.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph> that evaluates the given <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph>, die den angegebenen <ph id="ph2">&lt;paramref name="apply" /&gt;</ph>-Ausdruck für jedes Element eines angegebenen Eingabesets einmal auswertet und eine Auflistung von Zeilen mit entsprechenden Eingabe- und apply-Spalten erzeugt.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the input set.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>, die das Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>A method that specifies the logic to evaluate once for each member of the input set.</source>
          <target state="translated">Eine Methode, die die Logik angibt, die für jeden Member des Eingabesets einmal ausgewertet wird.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph> that evaluates the given <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph>, die den angegebenen <ph id="ph2">&lt;paramref name="apply" /&gt;</ph>-Ausdruck für jedes Element eines angegebenen Eingabesets einmal auswertet und eine Auflistung von Zeilen mit entsprechenden Eingabe- und apply-Spalten erzeugt.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>Rows for which <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> evaluates to an empty set have an apply column value of <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Zeilen, für die <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> zu einem leeren Satz ausgewertet wird, weisen den Anwendungsspaltenwert <ph id="ph2">&lt;see langword="null" /&gt;</ph> auf.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>An new DbApplyExpression with the specified input and apply bindings and an <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> of OuterApply.</source>
          <target state="translated">Ein neues DbApplyExpression mit der angegebenen Eingabe und Anwenden von Bindungen und ein <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> von OuterApply.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>The result of <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> contains a name or expression that is null.</source>
          <target state="translated">Das Ergebnis von <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> enthält einen Namen oder Ausdruck, der Null ist.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
          <source>The result of <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> contains a name or expression that is not valid in an expression binding.</source>
          <target state="translated">Das Ergebnis von <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> enthält einen Namen oder Ausdruck, der in einer Ausdrucksbindung ungültig ist.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that specifies the input set.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph>, der das Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph> that specifies logic to evaluate once for each member of the input set.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /&gt;</ph>, die die Logik angibt, die für jeden Member des Eingabesets einmal ausgewertet wird.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph> that evaluates the given <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph>, die den angegebenen <ph id="ph2">&lt;paramref name="apply" /&gt;</ph>-Ausdruck für jedes Element eines angegebenen Eingabesets einmal auswertet und eine Auflistung von Zeilen mit entsprechenden Eingabe- und apply-Spalten erzeugt.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source>Rows for which <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> evaluates to an empty set have an apply column value of <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Zeilen, für die <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> zu einem leeren Satz ausgewertet wird, weisen den Anwendungsspaltenwert <ph id="ph2">&lt;see langword="null" /&gt;</ph> auf.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source>An new DbApplyExpression with the specified input and apply bindings and an <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> of OuterApply.</source>
          <target state="translated">Ein neues DbApplyExpression mit der angegebenen Eingabe und Anwenden von Bindungen und ein <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> von OuterApply.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> or <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)">
          <source>The type of the referenced parameter.</source>
          <target state="translated">Der Typ des Parameters, auf den verwiesen wird.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)">
          <source>The name of the referenced parameter.</source>
          <target state="translated">Der Name des Parameters, auf den verwiesen wird.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /&gt;</ph> that references a parameter with the specified name and type.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /&gt;</ph>, die auf einen Parameter mit dem angegebenen Namen und Typ verweist.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)">
          <source>A DbParameterReferenceExpression that represents a reference to a parameter with the specified name and type.</source>
          <target state="translated">Ein DbParameterReferenceExpression, der einen Verweis auf einen Parameter mit dem angegebenen Namen und Typ darstellt.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)">
          <source>The result type of the expression will be the same as <ph id="ph1">&lt;paramref name="type" /&gt;</ph>.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist derselbe <ph id="ph1">&lt;paramref name="type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the left argument.</source>
          <target state="translated">Ein Ausdruck, der das linke Argument angibt.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the right argument.</source>
          <target state="translated">Ein Ausdruck, der das rechte Argument angibt.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph> that adds the left argument to the right argument.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph>, die dem rechten Argument das linke Argument hinzufügt.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbArithmeticExpression representing the addition operation.</source>
          <target state="translated">Ein neues DbArithmeticExpression, der die Addition darstellt.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="right" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>No common numeric result type exists between <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Zwischen <ph id="ph1">&lt;paramref name="left" /&gt;</ph> und <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist kein gemeinsamer numerischer Ergebnistyp vorhanden.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression binding that specifies the input set.</source>
          <target state="translated">Eine Ausdrucksbindung, die das Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression to project over the set.</source>
          <target state="translated">Ein Ausdruck, der über dem Satz projiziert werden soll.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /&gt;</ph> that projects the specified expression over the given input set.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /&gt;</ph>, die den angegebenen Ausdruck über dem angegebenen Eingabeset projiziert.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbProjectExpression that represents the projection operation.</source>
          <target state="translated">Ein neues DbProjectExpression, die den Projektionsvorgang darstellt.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> or <ph id="ph2">&lt;paramref name="projection" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="projection" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /&gt;</ph> representing the retrieval of the specified property.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /&gt;</ph>, der den Abruf der angegebenen Eigenschaft darstellt.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)">
          <source>The instance from which to retrieve the property.</source>
          <target state="translated">Die Instanz, aus der die Eigenschaft abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)">
          <source>May be null if the property is static.</source>
          <target state="translated">Kann NULL sein, wenn die Eigenschaft statisch ist.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)">
          <source>Metadata for the property to retrieve.</source>
          <target state="translated">Metadaten für die abzurufende Eigenschaft.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /&gt;</ph> representing the retrieval of the specified property.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /&gt;</ph>, der den Abruf der angegebenen Eigenschaft darstellt.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)">
          <source>A new DbPropertyExpression representing the property retrieval.</source>
          <target state="translated">Ein neues DbPropertyExpression, das das Abrufen von Eigenschaften darstellt.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)">
          <source><ph id="ph1">&lt;paramref name="propertyMetadata" /&gt;</ph> is null or <ph id="ph2">&lt;paramref name="instance" /&gt;</ph> is null and the property is not static.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="propertyMetadata" /&gt;</ph> ist NULL oder <ph id="ph2">&lt;paramref name="instance" /&gt;</ph> ist NULL, und die Eigenschaft ist nicht statisch.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)">
          <source>The instance from which to retrieve the navigation property.</source>
          <target state="translated">Die Instanz, aus der die Navigationseigenschaft abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)">
          <source>Metadata for the navigation property to retrieve.</source>
          <target state="translated">Metadaten für die abzurufende Navigationseigenschaft.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /&gt;</ph> representing the retrieval of the specified navigation property.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /&gt;</ph>, der den Abruf der angegebenen Navigationseigenschaft darstellt.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)">
          <source>A new DbPropertyExpression representing the navigation property retrieval.</source>
          <target state="translated">Ein neues DbPropertyExpression, das das Abrufen von Navigationseigenschaften darstellt.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)">
          <source><ph id="ph1">&lt;paramref name="navigationProperty" /&gt;</ph> or <ph id="ph2">&lt;paramref name="instance" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="navigationProperty" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="instance" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)">
          <source>The instance from which to retrieve the relationship end member.</source>
          <target state="translated">Die Instanz, aus der der Endmember der Beziehung abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)">
          <source>Metadata for the relationship end member to retrieve.</source>
          <target state="translated">Metadaten für den abzurufenden Endmember der Beziehung.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /&gt;</ph> representing the retrieval of the specified relationship end member.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /&gt;</ph>, der den Abruf des angegebenen Endmembers der Beziehung darstellt.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)">
          <source>A new DbPropertyExpression representing the relationship end member retrieval.</source>
          <target state="translated">Ein neues DbPropertyExpression, das das Abrufen von Verhältnis und Member darstellt.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)">
          <source><ph id="ph1">&lt;paramref name="relationshipEnd" /&gt;</ph> is null or <ph id="ph2">&lt;paramref name="instance" /&gt;</ph> is null and the property is not static.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="relationshipEnd" /&gt;</ph> ist NULL oder <ph id="ph2">&lt;paramref name="instance" /&gt;</ph> ist NULL, und die Eigenschaft ist nicht statisch.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>The instance from which to retrieve the property.</source>
          <target state="translated">Die Instanz, aus der die Eigenschaft abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>The name of the property to retrieve.</source>
          <target state="translated">Der Name der abzurufenden Eigenschaft.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /&gt;</ph> representing the retrieval of the instance property with the specified name from the given instance.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /&gt;</ph>, der den Abruf der Instanzeigenschaft mit dem angegebenen Namen aus der angegebenen Instanz darstellt.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>A new DbPropertyExpression that represents the property retrieval.</source>
          <target state="translated">Ein neues DbPropertyExpression, das das Abrufen von Eigenschaften darstellt.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source><ph id="ph1">&lt;paramref name="propertyName" /&gt;</ph> is null or <ph id="ph2">&lt;paramref name="instance" /&gt;</ph> is null and the property is not static.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="propertyName" /&gt;</ph> ist NULL oder <ph id="ph2">&lt;paramref name="instance" /&gt;</ph> ist NULL, und die Eigenschaft ist nicht statisch.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>No property with the specified name is declared by the type of <ph id="ph1">&lt;paramref name="instance" /&gt;</ph>.</source>
          <target state="translated">Keine Eigenschaft mit dem angegebenen Namen wurde von diesem Typ <ph id="ph1">&lt;paramref name="instance" /&gt;</ph> deklariert.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph> that encodes a reference to a specific Entity based on key values.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph>, das einen Verweis auf eine bestimmte Entität auf der Grundlage der Schlüsselwerte codiert.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)">
          <source>The Entity set in which the referenced element resides.</source>
          <target state="translated">Die Entitätenmenge mit dem Element, auf das verwiesen wird.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>, der einen Datensatz mit Spalten erstellt, deren Anzahl, Typ und Reihenfolge mit den Schlüsseleigenschaften des Entitätstyps, auf den verwiesen wird, übereinstimmen.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph> that encodes a reference to a specific Entity based on key values.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph>, das einen Verweis auf eine bestimmte Entität auf der Grundlage der Schlüsselwerte codiert.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbRefExpression that references the element with the specified key values in the given Entity set.</source>
          <target state="translated">Ein neues DbRefExpression, das das Element mit den angegebenen Schlüsselwerten im angegebenen Entitätssatz verweist.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">`keyRow`</ph> should be an expression that specifies the key values that identify the referenced entity within the given entity set.</source>
          <target state="translated"><ph id="ph1">`keyRow`</ph> Ein Ausdruck, der die Schlüsselwerte angibt, die die Entität verwiesen wird, innerhalb der angegebenen Entität identifizieren festgelegt werden soll.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of <ph id="ph1">`keyRow`</ph> should contain a corresponding column for each key property defined by <ph id="ph2">`entitySet's`</ph> entity type.</source>
          <target state="translated">Der Ergebnistyp des <ph id="ph1">`keyRow`</ph> sollte eine entsprechende Spalte für jede Schlüsseleigenschaft definiert, indem enthalten <ph id="ph2">`entitySet's`</ph> Entitätstyp.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="entitySet" /&gt;</ph> or <ph id="ph2">&lt;paramref name="keyRow" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="entitySet" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="keyRow" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="keyRow" /&gt;</ph> does not have a record result type that matches the key properties of the referenced entity set's entity type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keyRow" /&gt;</ph> hat keinen Aufzeichnungsergebnistypen, der den Schlüsseleigenschaften des Entitätstyps der Entitätsmenge entspricht, auf den verwiesen wird.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)">
          <source>The Entity set in which the referenced element resides.</source>
          <target state="translated">Die Entitätenmenge mit dem Element, auf das verwiesen wird.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>, der einen Datensatz mit Spalten erstellt, deren Anzahl, Typ und Reihenfolge mit den Schlüsseleigenschaften des Entitätstyps, auf den verwiesen wird, übereinstimmen.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)">
          <source>The type of the Entity that the reference should refer to.</source>
          <target state="translated">Der Typ der Entität, auf die der Verweis zeigen sollte.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph> that encodes a reference to a specific Entity based on key values.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /&gt;</ph>, das einen Verweis auf eine bestimmte Entität auf der Grundlage der Schlüsselwerte codiert.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)">
          <source>A new DbRefExpression that references the element with the specified key values in the given Entity set.</source>
          <target state="translated">Ein neues DbRefExpression, das das Element mit den angegebenen Schlüsselwerten im angegebenen Entitätssatz verweist.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)">
          <source><ph id="ph1">`keyRow`</ph> should be an expression that specifies the key values that identify the referenced entity within the given entity set.</source>
          <target state="translated"><ph id="ph1">`keyRow`</ph> Ein Ausdruck, der die Schlüsselwerte angibt, die die Entität verwiesen wird, innerhalb der angegebenen Entität identifizieren festgelegt werden soll.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)">
          <source>The result type of <ph id="ph1">`keyRow`</ph> should contain a corresponding column for each key property defined by <ph id="ph2">`entitySet's`</ph> entity type.</source>
          <target state="translated">Der Ergebnistyp des <ph id="ph1">`keyRow`</ph> sollte eine entsprechende Spalte für jede Schlüsseleigenschaft definiert, indem enthalten <ph id="ph2">`entitySet's`</ph> Entitätstyp.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)">
          <source><ph id="ph1">&lt;paramref name="entitySet" /&gt;</ph>,  <ph id="ph2">&lt;paramref name="keyRow" /&gt;</ph> or <ph id="ph3">&lt;paramref name="entityType" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="entitySet" /&gt;</ph>, <ph id="ph2">&lt;paramref name="keyRow" /&gt;</ph> oder <ph id="ph3">&lt;paramref name="entityType" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)">
          <source><ph id="ph1">&lt;paramref name="entityType" /&gt;</ph> is not in the same type hierarchy as the entity set's entity type, or <ph id="ph2">&lt;paramref name="keyRow" /&gt;</ph> does not have a record result type that matches the key properties of the referenced entity set's entity type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="entityType" /&gt;</ph> befindet sich nicht in derselben Typhierarchie wie der Entitätstyp des Entitätssatzes, oder <ph id="ph2">&lt;paramref name="keyRow" /&gt;</ph> hat keinen Datensatzergebnistyp, der den Schlüsseleigenschaften des Entitätstyps der Entitätenmenge entspricht, auf den verwiesen wird.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase)">
          <source>Metadata for the entity or relationship set to reference.</source>
          <target state="translated">Metadaten für die Entitätenmenge oder den Beziehungssatz, auf die bzw. den verwiesen werden soll.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /&gt;</ph> that references the specified entity or relationship set.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /&gt;</ph>, die auf die angegebene Entitätenmenge oder den angegebenen Beziehungssatz verweist.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase)">
          <source>A new DbScanExpression based on the specified entity or relationship set.</source>
          <target state="translated">Ein neues DbScanExpression auf Grundlage des angegebenen Entitäts- oder Beziehungssatzes.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase)">
          <source><ph id="ph1">&lt;paramref name="targetSet" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetSet" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>The method result type of <bpt id="p1">&lt;c&gt;</bpt>projection<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Der Methodenergebnistyp von <bpt id="p1">&lt;c&gt;</bpt>Projektion<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>An expression that specifies the input set.</source>
          <target state="translated">Ein Ausdruck, der das Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A method that specifies how to derive the projected expression given a member of the input set.</source>
          <target state="translated">Eine Methode, die angibt, wie der Projektionsausdruck von einem Member des Eingabesets abgeleitet wird.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>This method must produce an instance of a type that is compatible with Select and can be resolved into a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>.</source>
          <target state="translated">Diese Methode muss eine Instanz eines Typs erzeugen, der mit Select kompatibel ist und in eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> aufgelöst werden kann.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>Compatibility requirements for <bpt id="p1">&lt;c&gt;</bpt>TProjection<ept id="p1">&lt;/c&gt;</ept> are described in remarks.</source>
          <target state="translated">Anforderungen an die Kompatibilität für <bpt id="p1">&lt;c&gt;</bpt>TProjection<ept id="p1">&lt;/c&gt;</ept> werden in den Hinweisen beschrieben.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /&gt;</ph> that selects the specified expression over the given input set.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /&gt;</ph>, der den angegebenen Ausdruck über das angegebene Eingabeset auswählt.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A new DbProjectExpression that represents the select operation.</source>
          <target state="translated">Ein neues DbProjectExpression, die den ausgewählten Vorgang darstellt.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>To be compatible with Select, <ph id="ph1">`TProjection`</ph> must be derived from <ph id="ph2">&lt;xref:System.Data.Common.CommandTrees.DbExpression&gt;</ph>,     or must be an anonymous type with DbExpression-derived properties.</source>
          <target state="translated">Für die Kompatibilität mit Select, <ph id="ph1">`TProjection`</ph> abgeleitet werden müssen <ph id="ph2">&lt;xref:System.Data.Common.CommandTrees.DbExpression&gt;</ph>, oder ein anonymer Typ mit DbExpression-abgeleiteten Eigenschaften werden muss.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>The following are examples of supported types for <ph id="ph1">`TProjection`</ph>:</source>
          <target state="translated">Die folgenden Beispiele von unterstützten Typen sind <ph id="ph1">`TProjection`</ph>:</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})">
          <source><ph id="ph1">`TProjection`</ph> is <ph id="ph2">&lt;xref:System.Data.Common.CommandTrees.DbPropertyExpression&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">`TProjection`</ph> is <ph id="ph2">&lt;xref:System.Data.Common.CommandTrees.DbPropertyExpression&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>(<ph id="ph1">`TProjection`</ph> is an anonymous type with a DbExpression-derived property).</source>
          <target state="translated">(<ph id="ph1">`TProjection`</ph> ist ein anonymer Typ mit DbExpression-abgeleiteten-Eigenschaft).</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>The result of <ph id="ph1">&lt;paramref name="projection" /&gt;</ph> is null.</source>
          <target state="translated">Das Ergebnis von <ph id="ph1">&lt;paramref name="projection" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the input set.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>, die das Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method that represents the logic to evaluate once for each member of the input set.</source>
          <target state="translated">Eine Methode, die die Logik darstellt, die für jeden Member des Eingabesets einmal ausgewertet wird.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph> that evaluates the given <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph>, die den angegebenen <ph id="ph2">&lt;paramref name="apply" /&gt;</ph>-Ausdruck für jedes Element eines angegebenen Eingabesets einmal auswertet und eine Auflistung von Zeilen mit entsprechenden Eingabe- und apply-Spalten erzeugt.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Rows for which <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> evaluates to an empty set are not included.</source>
          <target state="translated">Zeilen, für die <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> als leerer Satz ausgewertet wird, werden nicht eingeschlossen.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /&gt;</ph> is then created that selects the <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> column from each row, producing the overall collection of <ph id="ph3">&lt;paramref name="apply" /&gt;</ph> results.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /&gt;</ph> wird dann erstellt, die die <ph id="ph2">&lt;paramref name="apply" /&gt;</ph>-Spalte in jeder Zeile auswählt und die Gesamtauflistung der <ph id="ph3">&lt;paramref name="apply" /&gt;</ph>-Ergebnisse erzeugt.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>An new DbProjectExpression that selects the apply column from a new DbApplyExpression with the specified input and apply bindings and an <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> of CrossApply.</source>
          <target state="translated">Ein neues DbProjectExpression, das die Spalte Übernehmen von einem neuen DbApplyExpression mit der angegebenen Eingabe auswählt und Bindungen anwendet und ein <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> von CrossApply.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> is null.</source>
          <target state="translated">Der von <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> erzeugte Ausdruck ist NULL.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> does not have a collection type.</source>
          <target state="translated">Der von <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> erzeugte Ausdruck hat keinen Auflistungstyp.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>The method result type of <bpt id="p1">&lt;c&gt;</bpt>selector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Der Methodenergebnistyp von <bpt id="p1">&lt;c&gt;</bpt>Selektor<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that specifies the input set.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>, die das Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A method that represents the logic to evaluate once for each member of the input set.</source>
          <target state="translated">Eine Methode, die die Logik darstellt, die für jeden Member des Eingabesets einmal ausgewertet wird.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A method that specifies how an element of the result set should be derived given an element of the input and apply sets.</source>
          <target state="translated">Eine Methode, die angibt, wie ein Element des Resultsets bei Angabe eines Elements des Eingabe- und Anwendungssets abgeleitet werden soll.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>This method must produce an instance of a type that is compatible with SelectMany and can be resolved into a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>.</source>
          <target state="translated">Diese Methode muss eine Instanz eines Typs erzeugen, der mit SelectMany kompatibel ist und in eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> aufgelöst werden kann.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>Compatibility requirements for <bpt id="p1">&lt;c&gt;</bpt>TSelector<ept id="p1">&lt;/c&gt;</ept> are described in remarks.</source>
          <target state="translated">Anforderungen an die Kompatibilität für <bpt id="p1">&lt;c&gt;</bpt>TSelector<ept id="p1">&lt;/c&gt;</ept> werden in den Hinweisen beschrieben.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph> that evaluates the given <ph id="ph2">&lt;paramref name="apply" /&gt;</ph> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /&gt;</ph>, die den angegebenen <ph id="ph2">&lt;paramref name="apply" /&gt;</ph>-Ausdruck für jedes Element eines angegebenen Eingabesets einmal auswertet und eine Auflistung von Zeilen mit entsprechenden Eingabe- und apply-Spalten erzeugt.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>Rows for which <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> evaluates to an empty set are not included.</source>
          <target state="translated">Zeilen, für die <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> als leerer Satz ausgewertet wird, werden nicht eingeschlossen.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /&gt;</ph> is then created that selects the specified <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> over each row, producing the overall collection of results.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /&gt;</ph> wird dann erstellt, die den angegebenen <ph id="ph2">&lt;paramref name="selector" /&gt;</ph> für jede Zeile auswählt und die Gesamtauflistung der Ergebnisse erzeugt.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>An new DbProjectExpression that selects the result of the given selector from a new DbApplyExpression with the specified input and apply bindings and an <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> of CrossApply.</source>
          <target state="translated">Ein neues DbProjectExpression, das das Ergebnis des angegebenen Selektors aus einem neuen DbApplyExpression mit der angegebenen Eingabe auswählt und Bindungen anwendet und ein <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /&gt;</ph> von CrossApply.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>To be compatible with SelectMany, <ph id="ph1">`TSelector`</ph> must be derived from <ph id="ph2">&lt;xref:System.Data.Common.CommandTrees.DbExpression&gt;</ph>,     or must be an anonymous type with DbExpression-derived properties.</source>
          <target state="translated">Kompatibel mit SelectMany, <ph id="ph1">`TSelector`</ph> muss abgeleitet sein <ph id="ph2">&lt;xref:System.Data.Common.CommandTrees.DbExpression&gt;</ph>, oder ein anonymer Typ mit DbExpression-abgeleiteten Eigenschaften werden muss.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>The following are examples of supported types for <ph id="ph1">`TSelector`</ph>:</source>
          <target state="translated">Die folgenden Beispiele von unterstützten Typen sind <ph id="ph1">`TSelector`</ph>:</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>(<ph id="ph1">`TSelector`</ph> is <ph id="ph2">&lt;xref:System.Data.Common.CommandTrees.DbPropertyExpression&gt;</ph>).</source>
          <target state="translated">(<ph id="ph1">`TSelector`</ph> is <ph id="ph2">&lt;xref:System.Data.Common.CommandTrees.DbPropertyExpression&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>(<ph id="ph1">`TSelector`</ph> is an anonymous type with DbExpression-derived properties).</source>
          <target state="translated">(<ph id="ph1">`TSelector`</ph> ist ein anonymer Typ mit DbExpression-abgeleiteten Eigenschaften).</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>The result of <ph id="ph1">&lt;paramref name="selector" /&gt;</ph> is null on conversion to DbExpression.</source>
          <target state="translated">Das Ergebnis von <ph id="ph1">&lt;paramref name="selector" /&gt;</ph> ist bei Umwandlung in DbExpression NULL.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> does not have a collection type.</source>
          <target state="translated">Der von <ph id="ph1">&lt;paramref name="apply" /&gt;</ph> erzeugte Ausdruck hat keinen Auflistungstyp.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})">
          <source>does not have a collection type.</source>
          <target state="translated">weist keinen Auflistungstyp auf.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /&gt;</ph> that sorts the given input set by the given sort specifications before skipping the specified number of elements.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /&gt;</ph>, die das angegebene Eingabeset nach den angegebenen Sortiervorschriften sortiert, bevor die angegebene Anzahl von Elementen übersprungen wird.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that specifies the sorted input set.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph>, die das sortierte Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression the specifies how many elements of the ordered set to skip.</source>
          <target state="translated">Ein Ausdruck, der die Anzahl der zu überspringenden Elemente des geordneten Satzes angibt.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /&gt;</ph> that skips the specified number of elements from the given sorted input set.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /&gt;</ph>, der die angegebene Anzahl von Elementen aus dem angegebenen sortierten Eingabeset überspringt.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbSkipExpression that represents the skip operation.</source>
          <target state="translated">Ein neues DbSkipExpression, das den Vorgang des Überspringens darstellt.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="count" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is not <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /&gt;</ph> or has a result type that is not equal or promotable to a 64-bit integer type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> ist nicht <ph id="ph2">&lt;see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /&gt;</ph> oder <ph id="ph3">&lt;see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /&gt;</ph> oder weist einen Ergebnistyp auf, der nicht gleich einem 64-Bit-Ganzzahl-Typ und nicht zu einem solchen heraufstufbar ist.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression binding that specifies the input set.</source>
          <target state="translated">Eine Ausdrucksbindung, die das Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)">
          <source>A list of sort specifications that determine how the elements of the input set should be sorted.</source>
          <target state="translated">Eine Liste der Sortiervorschriften, die bestimmen, wie die Elemente des Eingabesets sortiert werden sollen.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression the specifies how many elements of the ordered set to skip.</source>
          <target state="translated">Ein Ausdruck, der die Anzahl der zu überspringenden Elemente des geordneten Satzes angibt.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /&gt;</ph> that sorts the given input set by the given sort specifications before skipping the specified number of elements.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /&gt;</ph>, die das angegebene Eingabeset nach den angegebenen Sortiervorschriften sortiert, bevor die angegebene Anzahl von Elementen übersprungen wird.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbSkipExpression that represents the skip operation.</source>
          <target state="translated">Ein neues DbSkipExpression, das den Vorgang des Überspringens darstellt.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph>,  <ph id="ph2">&lt;paramref name="sortOrder" /&gt;</ph> or <ph id="ph3">&lt;paramref name="count" /&gt;</ph> is null, or <ph id="ph4">&lt;paramref name="sortOrder" /&gt;</ph> contains null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph>, <ph id="ph2">&lt;paramref name="sortOrder" /&gt;</ph> oder <ph id="ph3">&lt;paramref name="count" /&gt;</ph> ist NULL oder <ph id="ph4">&lt;paramref name="sortOrder" /&gt;</ph> enthält NULL.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="sortOrder" /&gt;</ph> is empty, or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is not <ph id="ph3">&lt;see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /&gt;</ph> or <ph id="ph4">&lt;see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /&gt;</ph> or has a result type that is not equal or promotable to a 64-bit integer type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sortOrder" /&gt;</ph> ist leer oder <ph id="ph2">&lt;paramref name="count" /&gt;</ph> ist es nicht oder <ph id="ph3">&lt;see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /&gt;</ph> oder <ph id="ph4">&lt;see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /&gt;</ph> weist einen Ergebnistyp auf, der nicht gleich einem 64-Bit-Ganzzahl-Typ und nicht zu einem solchen heraufstufbar ist.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})">
          <source>An expression binding that specifies the input set.</source>
          <target state="translated">Eine Ausdrucksbindung, die das Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})">
          <source>A list of sort specifications that determine how the elements of the input set should be sorted.</source>
          <target state="translated">Eine Liste der Sortiervorschriften, die bestimmen, wie die Elemente des Eingabesets sortiert werden sollen.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that sorts the given input set by the specified sort specifications.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph>, die das angegebene Eingabeset nach den angegebenen Sortiervorschriften sortiert.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})">
          <source>A new DbSortExpression that represents the sort operation.</source>
          <target state="translated">Ein neues DbSortExpression, das den Sortiervorgang darstellt.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> or <ph id="ph2">&lt;paramref name="sortOrder" /&gt;</ph> is null, or <ph id="ph3">&lt;paramref name="sortOrder" /&gt;</ph> contains null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="sortOrder" /&gt;</ph> ist NULL oder <ph id="ph3">&lt;paramref name="sortOrder" /&gt;</ph> enthält NULL.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})">
          <source><ph id="ph1">&lt;paramref name="sortOrder" /&gt;</ph> is empty.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sortOrder" /&gt;</ph> ist leer.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the input collection.</source>
          <target state="translated">Ein Ausdruck, der die Eingabeauflistung angibt.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the limit value.</source>
          <target state="translated">Ein Ausdruck, der den Grenzwert angibt.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /&gt;</ph> that restricts the number of elements in the Argument collection to the specified count Limit value.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /&gt;</ph>, der die Anzahl der Elemente in der Argumentsammlung auf den angegebenen Zählgrenzwert beschränkt.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Tied results are not included in the output.</source>
          <target state="translated">Verknüpfte Ergebnisse sind nicht in der Ausgabe enthalten.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbLimitExpression with the specified argument and count limit values that does not include tied results.</source>
          <target state="translated">Ein neues DbLimitExpression mit den angegebenen Argument- und Zählgrenzwerten, das verknüpfte Ergebnisse nicht einschließt.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="count" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> does not have a collection result type,  <ph id="ph2">&lt;paramref name="count" /&gt;</ph> does not have a result type that is equal or promotable to a 64-bit integer type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> hat keinen Auflistungsergebnistyp, oder <ph id="ph2">&lt;paramref name="count" /&gt;</ph> hat keinen Ergebnistyp, der gleich einem 64-Bit-Ganzzahl-Typ oder zu einem solchen heraufstufbar ist.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with default collation.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph>, das die Sortierreihenfolge der angegebenen Eingabereihenfolge zusammen mit dem angegebenen Sortierschlüssel in aufsteigender Sortierreihenfolge und mit Standardsortierung.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A DbSortExpression that specifies the ordered input set.</source>
          <target state="translated">Eine DbSortExpression, die das geordnete Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method that specifies how to derive the additional sort key expression given a member of the input set.</source>
          <target state="translated">Eine Methode, die angibt, wie der zusätzliche Sortierschlüsselausdruck für einen angegebenen Member des Eingabesets abgeleitet wird.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>This method must produce an expression with an order-comparable result type that provides the sort key definition.</source>
          <target state="translated">Diese Methode muss einen Ausdruck mit einem in der Reihenfolge vergleichbaren Ergebnistyp erzeugen, der die Sortierschlüsseldefinition bereitstellt.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with default collation.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph>, das die Sortierreihenfolge der angegebenen Eingabereihenfolge zusammen mit dem angegebenen Sortierschlüssel in aufsteigender Sortierreihenfolge und mit Standardsortierung.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A new DbSortExpression that represents the new overall order-by operation.</source>
          <target state="translated">Ein neues DbSortExpression, das den neuen gesamten ORDER-BY-Vorgang darstellt.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> is null.</source>
          <target state="translated">Der von <ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> erzeugte Ausdruck ist NULL.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source><ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> does not have an order-comparable result type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> weist keinen in der Reihenfolge vergleichbaren Zeichenfolgen-Ergebnistyp auf.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>A DbSortExpression that specifies the ordered input set.</source>
          <target state="translated">Eine DbSortExpression, die das geordnete Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>A method that specifies how to derive the additional sort key expression given a member of the input set.</source>
          <target state="translated">Eine Methode, die angibt, wie der zusätzliche Sortierschlüsselausdruck für einen angegebenen Member des Eingabesets abgeleitet wird.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>This method must produce an expression with an order-comparable result type that provides the sort key definition.</source>
          <target state="translated">Diese Methode muss einen Ausdruck mit einem in der Reihenfolge vergleichbaren Ergebnistyp erzeugen, der die Sortierschlüsseldefinition bereitstellt.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>The collation to sort under.</source>
          <target state="translated">Die zu verwendende Sortierung.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with the specified collation.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph>, das die Sortierreihenfolge der angegebenen Eingabereihenfolge zusammen mit dem angegebenen Sortierschlüssel in aufsteigender Sortierreihenfolge und mit der angegebenen Standardsortierung.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>A new DbSortExpression that represents the new overall order-by operation.</source>
          <target state="translated">Ein neues DbSortExpression, das den neuen gesamten ORDER-BY-Vorgang darstellt.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> is null.</source>
          <target state="translated">Der von <ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> erzeugte Ausdruck ist NULL.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> does not have an order-comparable string result type.</source>
          <target state="translated">Der Ausdruck, der von <ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> erzeugt wurde, hat keinen in der Reihenfolge vergleichbaren Zeichenfolgenergebnistyp.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source><ph id="ph1">&lt;paramref name="collation" /&gt;</ph> is empty or contains only space characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collation" /&gt;</ph> ist leer oder enthält nur Leerzeichen.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with default collation.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph>, das die Sortierreihenfolge der angegebenen Eingabereihenfolge zusammen mit dem angegebenen Sortierschlüssel in absteigender Sortierreihenfolge und mit Standardsortierung.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A DbSortExpression that specifies the ordered input set.</source>
          <target state="translated">Eine DbSortExpression, die das geordnete Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method that specifies how to derive the additional sort key expression given a member of the input set.</source>
          <target state="translated">Eine Methode, die angibt, wie der zusätzliche Sortierschlüsselausdruck für einen angegebenen Member des Eingabesets abgeleitet wird.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>This method must produce an expression with an order-comparable result type that provides the sort key definition.</source>
          <target state="translated">Diese Methode muss einen Ausdruck mit einem in der Reihenfolge vergleichbaren Ergebnistyp erzeugen, der die Sortierschlüsseldefinition bereitstellt.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with default collation.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph>, das die Sortierreihenfolge der angegebenen Eingabereihenfolge zusammen mit dem angegebenen Sortierschlüssel in absteigender Sortierreihenfolge und mit Standardsortierung.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A new DbSortExpression that represents the new overall order-by operation.</source>
          <target state="translated">Ein neues DbSortExpression, das den neuen gesamten ORDER-BY-Vorgang darstellt.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> is null.</source>
          <target state="translated">Der von <ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> erzeugte Ausdruck ist NULL.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> does not have an order-comparable result type.</source>
          <target state="translated">Der Ausdruck, der von <ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> erzeugt wurde, hat keinen in der Reihenfolge vergleichbaren Ergebnistyp.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>A DbSortExpression that specifies the ordered input set.</source>
          <target state="translated">Eine DbSortExpression, die das geordnete Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>A method that specifies how to derive the additional sort key expression given a member of the input set.</source>
          <target state="translated">Eine Methode, die angibt, wie der zusätzliche Sortierschlüsselausdruck für einen angegebenen Member des Eingabesets abgeleitet wird.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>This method must produce an expression with an order-comparable result type that provides the sort key definition.</source>
          <target state="translated">Diese Methode muss einen Ausdruck mit einem in der Reihenfolge vergleichbaren Ergebnistyp erzeugen, der die Sortierschlüsseldefinition bereitstellt.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>The collation to sort under.</source>
          <target state="translated">Die zu verwendende Sortierung.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with the specified collation.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /&gt;</ph>, das die Sortierreihenfolge der angegebenen Eingabereihenfolge zusammen mit dem angegebenen Sortierschlüssel in absteigender Sortierreihenfolge und mit der angegebenen Standardsortierung.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>A new DbSortExpression that represents the new overall order-by operation.</source>
          <target state="translated">Ein neues DbSortExpression, das den neuen gesamten ORDER-BY-Vorgang darstellt.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> is null.</source>
          <target state="translated">Der von <ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> erzeugte Ausdruck ist NULL.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> does not have an order-comparable string result type.</source>
          <target state="translated">Der Ausdruck, der von <ph id="ph1">&lt;paramref name="sortKey" /&gt;</ph> erzeugt wurde, hat keinen in der Reihenfolge vergleichbaren Zeichenfolgenergebnistyp.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
          <source><ph id="ph1">&lt;paramref name="collation" /&gt;</ph> is empty or contains only space characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collation" /&gt;</ph> ist leer oder enthält nur Leerzeichen.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortClause" /&gt;</ph> with an ascending sort order and default collation.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortClause" /&gt;</ph> mit aufsteigender Sortierreihenfolge und Standardsortierung.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)">
          <source>The expression that defines the sort key.</source>
          <target state="translated">Der Ausdruck, der den Sortierschlüssel definiert.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortClause" /&gt;</ph> with an ascending sort order and default collation.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortClause" /&gt;</ph> mit aufsteigender Sortierreihenfolge und Standardsortierung.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new sort clause with the given sort key and ascending sort order.</source>
          <target state="translated">Eine neue Sortierungsklausel mit dem angegebenen Sortierschlüssel und aufsteigender Sortierreihenfolge.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> does not have an order-comparable result type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> weist keinen in der Reihenfolge vergleichbaren Zeichenfolgen-Ergebnistyp auf.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>The expression that defines the sort key.</source>
          <target state="translated">Der Ausdruck, der den Sortierschlüssel definiert.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>The collation to sort under.</source>
          <target state="translated">Die zu verwendende Sortierung.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortClause" /&gt;</ph> with an ascending sort order and the specified collation.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortClause" /&gt;</ph> mit aufsteigender Sortierreihenfolge und der angegebenen Sortierung.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>A new sort clause with the given sort key and collation, and ascending sort order.</source>
          <target state="translated">Eine neue Sortierungsklausel mit dem angegebenen Sortierschlüssel, Sortierreihenfolge und aufsteigenden Sortierreihenfolge.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source><ph id="ph1">&lt;paramref name="collation" /&gt;</ph> is empty or contains only space characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collation" /&gt;</ph> ist leer oder enthält nur Leerzeichen.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> does not have an order-comparable result type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> weist keinen in der Reihenfolge vergleichbaren Zeichenfolgen-Ergebnistyp auf.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortClause" /&gt;</ph> with a descending sort order and default collation.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortClause" /&gt;</ph> mit absteigender Sortierreihenfolge und Standardsortierung.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)">
          <source>The expression that defines the sort key.</source>
          <target state="translated">Der Ausdruck, der den Sortierschlüssel definiert.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortClause" /&gt;</ph> with a descending sort order and default collation.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortClause" /&gt;</ph> mit absteigender Sortierreihenfolge und Standardsortierung.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new sort clause with the given sort key and descending sort order.</source>
          <target state="translated">Eine neue Sortierungsklausel mit dem angegebenen Sortierschlüssel und absteigender Sortierreihenfolge.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> does not have an order-comparable result type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> weist keinen in der Reihenfolge vergleichbaren Zeichenfolgen-Ergebnistyp auf.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>The expression that defines the sort key.</source>
          <target state="translated">Der Ausdruck, der den Sortierschlüssel definiert.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>The collation to sort under.</source>
          <target state="translated">Die zu verwendende Sortierung.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortClause" /&gt;</ph> with a descending sort order and the specified collation.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbSortClause" /&gt;</ph> mit absteigender Sortierreihenfolge und der angegebenen Sortierung.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source>A new sort clause with the given sort key and collation, and descending sort order.</source>
          <target state="translated">Eine neue Sortierungsklausel mit dem angegebenen Sortierschlüssel, Sortierreihenfolge und absteigender Sortierreihenfolge.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source><ph id="ph1">&lt;paramref name="collation" /&gt;</ph> is empty or contains only space characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collation" /&gt;</ph> ist leer oder enthält nur Leerzeichen.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> does not have an order-comparable result type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> weist keinen in der Reihenfolge vergleichbaren Zeichenfolgen-Ergebnistyp auf.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>An expression that specifies the instance.</source>
          <target state="translated">Ein Ausdruck, der die Instanz angibt.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Type metadata for the treat-as type.</source>
          <target state="translated">Typmetadaten für den mit treat as angegebenen Typ.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" /&gt;</ph>.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>A new DbTreatExpression with the specified argument and type.</source>
          <target state="translated">Ein neues DbTreatExpression mit dem angegebenen Argument und Typ.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source>DbTreatExpression requires that <ph id="ph1">`argument`</ph> has a polymorphic result type, and that <ph id="ph2">`treatType`</ph> is a type from the same type hierarchy as that result type.</source>
          <target state="translated">DbTreatExpression erfordert, dass <ph id="ph1">`argument`</ph> wurde von einem polymorphen Ergebnistyp, und dass <ph id="ph2">`treatType`</ph> ist ein Typ aus der gleichen Typhierarchie wie dieser Ergebnistyp.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> or <ph id="ph2">&lt;paramref name="treatType" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="treatType" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
          <source><ph id="ph1">&lt;paramref name="treatType" /&gt;</ph> is not in the same type hierarchy as the result type of <ph id="ph2">&lt;paramref name="argument" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="treatType" /&gt;</ph> befindet sich nicht in der gleichen Typenhierarchie wie der Ergebnistyp von <ph id="ph2">&lt;paramref name="argument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /&gt;</ph> with the Boolean value <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Ruft eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /&gt;</ph> mit dem booleschen Wert <ph id="ph2">&lt;see langword="true" /&gt;</ph> ab.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /&gt;</ph> with the Boolean value <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /&gt;</ph> mit dem booleschen Wert <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the argument.</source>
          <target state="translated">Ein Ausdruck, der das Argument angibt.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph> that negates the value of the argument.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /&gt;</ph>, die den Wert des Arguments negiert.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbArithmeticExpression representing the negation operation.</source>
          <target state="translated">Ein neues DbArithmeticExpression, der den Negationsvorgang darstellt.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="argument" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression)">
          <source>No numeric result type exists for <ph id="ph1">&lt;paramref name="argument" /&gt;</ph>.</source>
          <target state="translated">Kein numerischer Ergebnistyp für <ph id="ph1">&lt;paramref name="argument" /&gt;</ph> vorhanden.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that defines the left set argument.</source>
          <target state="translated">Ein Ausdruck, der das linke Mengenargument definiert.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that defines the right set argument.</source>
          <target state="translated">Ein Ausdruck, der das rechte Mengenargument definiert.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph> that computes the union of the left and right set arguments with duplicates removed.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>, der die Gesamtmenge der linken und der rechten Mengenargumente ohne Duplikate berechnet.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbExpression that computes the union, without duplicates, of the left and right arguments.</source>
          <target state="translated">Ein neues DbExpression-Objekt, das die Gesamtmenge, ohne Duplikate, aus den linken und rechten Argumenten berechnet.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="right" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>No common collection result type with an equality-comparable element type exists between <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Zwischen <ph id="ph1">&lt;paramref name="left" /&gt;</ph> und <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist kein allgemeiner Auflistungsergebnistyp mit einem auf Gleichheit vergleichbaren Elementtyp vorhanden.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that defines the left set argument.</source>
          <target state="translated">Ein Ausdruck, der das linke Mengenargument definiert.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that defines the right set argument.</source>
          <target state="translated">Ein Ausdruck, der das rechte Mengenargument definiert.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /&gt;</ph> that computes the union of the left and right set arguments and does not remove duplicates.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /&gt;</ph>, die die Gesamtmenge der linken und der rechten Mengenargumente berechnet, ohne Duplikate zu entfernen.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbUnionAllExpression that union, including duplicates, of the left and right arguments.</source>
          <target state="translated">Ein neues DbUnionAllExpression-Objekt als Vereinigung, einschließlich Duplikate, der Gesamtmenge der linken und rechten Argumente.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="right" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>No common collection result type with an equality-comparable element type exists between <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Zwischen <ph id="ph1">&lt;paramref name="left" /&gt;</ph> und <ph id="ph2">&lt;paramref name="right" /&gt;</ph> ist kein allgemeiner Auflistungsergebnistyp mit einem auf Gleichheit vergleichbaren Elementtyp vorhanden.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage,System.String)">
          <source>The type of the referenced variable.</source>
          <target state="translated">Der Typ der Variablen, auf die verwiesen wird.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage,System.String)">
          <source>The name of the referenced variable.</source>
          <target state="translated">Der Name der Variable, auf die verwiesen wird.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage,System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /&gt;</ph> that references a variable with the specified name and type.</source>
          <target state="translated">Erstellt eine neue <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /&gt;</ph>, die auf eine Variable mit dem angegebenen Namen und Typ verweist.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage,System.String)">
          <source>A DbVariableReferenceExpression that represents a reference to a variable with the specified name and type.</source>
          <target state="translated">Ein DbVariableReferenceExpression, der einen Verweis auf eine Variable mit dem angegebenen Namen und Typ darstellt.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage,System.String)">
          <source>The result type of the expression will be the same as <ph id="ph1">&lt;paramref name="type" /&gt;</ph>.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist derselbe <ph id="ph1">&lt;paramref name="type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>An expression that specifies the input set.</source>
          <target state="translated">Ein Ausdruck, der das Eingabeset angibt.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A method representing the predicate to evaluate for each member of the input set.</source>
          <target state="translated">Eine Methode, die ein Prädikat darstellt, das für jeden Member des Eingabesets ausgewertet werden soll.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>This method must produce an expression with a Boolean result type that provides the predicate logic.</source>
          <target state="translated">Diese Methode muss einen Ausdruck mit einem booleschen Ergebnistyp erzeugen, der die Prädikatlogik bereitstellt.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /&gt;</ph> that filters the elements in the given input set using the specified predicate.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /&gt;</ph>, der die Elemente im angegebenen Eingabeset mithilfe des angegebenen Prädikats filtert.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>A new DbQuantifierExpression that represents the Any operation.</source>
          <target state="translated">Ein neues DbQuantifierExpression, das den Any-Vorgang darstellt.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> is null.</source>
          <target state="translated">Der von <ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> erzeugte Ausdruck ist NULL.</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
          <source>The expression produced by <ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> does not have a Boolean result type.</source>
          <target state="translated">Der von <ph id="ph1">&lt;paramref name="predicate" /&gt;</ph> erzeugte Ausdruck besitzt keinen booleschen Ergebnistyp.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>