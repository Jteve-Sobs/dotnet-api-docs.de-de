<Type Name="DbExpressionBuilder" FullName="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="359071078d3c8e16b6368e2fd2700ff8109ec910" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class DbExpressionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DbExpressionBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Module DbExpressionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbExpressionBuilder abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="71aa0-101">Stellt eine API bereit, um <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s zu erstellen, und lässt zu, dass auf diese API als Erweiterungsmethoden für den Ausdruckstyp selbst zugegriffen werden kann.</span>
      <span class="sxs-lookup">
        <span data-stu-id="71aa0-101">Provides an API to construct <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s and allows that API to be accessed as extension methods on the expression type itself.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Aggregate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionAggregate Aggregate (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionAggregate Aggregate(class System.Data.Metadata.Edm.EdmFunction function, class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate (function As EdmFunction, argument As DbExpression) As DbFunctionAggregate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionAggregate ^ Aggregate(System::Data::Metadata::Edm::EdmFunction ^ function, System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionAggregate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="71aa0-102">Die Funktion, die die Aggregatoperation definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-102">The function that defines the aggregate operation.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="71aa0-103">Das Argument, über dem die Aggregatfunktion berechnet werden sollte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-103">The argument over which the aggregate function should be calculated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-104">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-104">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-105">Ein neues Funktionsaggregat mit einem Verweis auf das Argument und der angegebenen Funktion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-105">A new function aggregate with a reference to the given function and argument.</span>
          </span>
          <span data-ttu-id="71aa0-106">Die Distinct-Eigenschaft des Funktionsaggregats wird den Wert <see langword="false" /> besitzen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-106">The function aggregate's Distinct property will have the value <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-107">
            <paramref name="function" /> oder <paramref name="argument" /> NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-107">
              <paramref name="function" /> or <paramref name="argument" /> null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-108">
            <paramref name="function" /> ist keine Aggregatfunktion oder weist mehrere Argumente auf, oder der Ergebnistyp von <paramref name="argument" /> ist nicht gleich dem Parametertyp von <paramref name="function" /> und kann auch nicht zu diesem heraufgestuft werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-108">
              <paramref name="function" /> is not an aggregate function or has more than one argument, or the result type of <paramref name="argument" /> is not equal or promotable to the parameter type of <paramref name="function" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AggregateDistinct">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionAggregate AggregateDistinct (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionAggregate AggregateDistinct(class System.Data.Metadata.Edm.EdmFunction function, class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AggregateDistinct (function As EdmFunction, argument As DbExpression) As DbFunctionAggregate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionAggregate ^ AggregateDistinct(System::Data::Metadata::Edm::EdmFunction ^ function, System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionAggregate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="71aa0-109">Die Funktion, die die Aggregatoperation definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-109">The function that defines the aggregate operation.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="71aa0-110">Das Argument, über dem die Aggregatfunktion berechnet werden sollte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-110">The argument over which the aggregate function should be calculated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-111">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" />, das in einer unterschiedlichen Weise angewendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-111">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /> that is applied in a distinct fashion.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-112">Ein neues Funktionsaggregat mit einem Verweis auf das Argument und der angegebenen Funktion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-112">A new function aggregate with a reference to the given function and argument.</span>
          </span>
          <span data-ttu-id="71aa0-113">Die Distinct-Eigenschaft des Funktionsaggregats wird den Wert <see langword="true" /> besitzen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-113">The function aggregate's Distinct property will have the value <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-114">
            <paramref name="function" /> oder <paramref name="argument" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-114">
              <paramref name="function" /> or <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-115">
            <paramref name="function" /> ist keine Aggregatfunktion oder weist mehrere Argumente auf, oder der Ergebnistyp von <paramref name="argument" /> ist nicht gleich dem Parametertyp von <paramref name="function" /> und kann auch nicht zu diesem heraufgestuft werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-115">
              <paramref name="function" /> is not an aggregate function or has more than one argument, or the result type of <paramref name="argument" /> is not equal or promotable to the parameter type of <paramref name="function" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="All">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71aa0-116">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />, der bestimmt, ob das angegebene Prädikat für alle Element des Eingabesets gültig ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-116">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for all elements of the input set.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression All(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All (source As DbExpression, predicate As Func(Of DbExpression, DbExpression)) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ All(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="71aa0-117">Ein Ausdruck, der das Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-117">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="71aa0-118">Eine Methode, die ein Prädikat darstellt, das für jeden Member des Eingabesets ausgewertet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-118">A method representing a predicate to evaluate for each member of the input set.</span>
          </span>
          <span data-ttu-id="71aa0-119">Diese Methode muss einen Ausdruck mit einem booleschen Ergebnistyp erzeugen, der die Prädikatlogik bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-119">This method must produce an expression with a Boolean result type that provides the predicate logic.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-120">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />, der bestimmt, ob das angegebene Prädikat für alle Element des Eingabesets gültig ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-120">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for all elements of the input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-121">Ein neues DbQuantifierExpression, das den All-Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-121">A new DbQuantifierExpression that represents the All operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-122">Der von <paramref name="predicate" /> erzeugte Ausdruck ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-122">The expression produced by <paramref name="predicate" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-123">Der von <paramref name="Predicate" /> erzeugte Ausdruck besitzt keinen booleschen Ergebnistyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-123">The expression produced by <paramref name="Predicate" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression All(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All (input As DbExpressionBinding, predicate As DbExpression) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ All(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="predicate" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="71aa0-124">Eine Ausdrucksbindung, die das Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-124">An expression binding that specifies the input set.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="71aa0-125">Ein Ausdruck, der ein Prädikat darstellt, das für jeden Member des Eingabesets ausgewertet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-125">An expression representing a predicate to evaluate for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-126">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />, der bestimmt, ob das angegebene Prädikat für alle Element des Eingabesets gültig ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-126">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for all elements of the input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-127">Ein neues DbQuantifierExpression, das den All-Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-127">A new DbQuantifierExpression that represents the All operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-128">
            <paramref name="input" /> oder <paramref name="predicate" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-128">
              <paramref name="input" /> or <paramref name="predicate" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-129">
            <paramref name="predicate" /> weist keinen booleschen Ergebnistyp auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-129">
              <paramref name="predicate" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbAndExpression And (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbAndExpression And(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function And (left As DbExpression, right As DbExpression) As DbAndExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbAndExpression ^ And(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbAndExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="71aa0-130">Ein boolescher Ausdruck, der das linke Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-130">A Boolean expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="71aa0-131">Ein boolescher Ausdruck, der das rechte Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-131">A Boolean expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-132">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" />, der die logische AND-Operation für das linke und das rechte Argument ausführt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-132">Creates an <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /> that performs the logical And of the left and right arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-133">Ein neues DbAndExpression mit den angegebenen Argumenten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-133">A new DbAndExpression with the specified arguments.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-134">
            <paramref name="left" /> oder <paramref name="right" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-134">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-135">
            <paramref name="left" /> und <paramref name="right" /> weisen keinen booleschen Ergebnistyp auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-135">
              <paramref name="left" /> and <paramref name="right" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Any">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71aa0-136">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, die bestimmt, ob das angegebene Mengenargument nicht leer ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-136">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that determines whether the specified set argument is non-empty.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Any (this System.Data.Common.CommandTrees.DbExpression source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Any(class System.Data.Common.CommandTrees.DbExpression source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any (source As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Any(System::Data::Common::CommandTrees::DbExpression ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="71aa0-137">Ein Ausdruck, der das Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-137">An expression that specifies the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-138">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, die bestimmt, ob das angegebene Mengenargument nicht leer ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-138">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that determines whether the specified set argument is non-empty.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-139">Ein neues <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" />, angewendet auf ein neues <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> mit dem angegebenen Argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-139">A new <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> applied to a new <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> with the specified argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-140">
            <paramref name="source" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-140">
              <paramref name="source" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-141">
            <paramref name="source" /> weist keinen Auflistungsergebnistyp auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-141">
              <paramref name="source" /> does not have a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression Any(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any (source As DbExpression, predicate As Func(Of DbExpression, DbExpression)) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ Any(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="71aa0-142">Ein Ausdruck, der das Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-142">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="71aa0-143">Eine Methode, die ein Prädikat darstellt, das für jeden Member des Eingabesets ausgewertet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-143">A method representing the predicate to evaluate for each member of the input set.</span>
          </span>
          <span data-ttu-id="71aa0-144">Diese Methode muss einen Ausdruck mit einem booleschen Ergebnistyp erzeugen, der die Prädikatlogik bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-144">This method must produce an expression with a Boolean result type that provides the predicate logic.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-145">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />, die bestimmt, ob das angegebene Prädikat für jedes beliebige Element des Eingabesets gültig ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-145">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for any element of the input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-146">Ein neues DbQuantifierExpression, das den Any-Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-146">A new DbQuantifierExpression that represents the Any operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-147">Der von <paramref name="predicate" /> erzeugte Ausdruck ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-147">The expression produced by <paramref name="predicate" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-148">Der von <paramref name="predicate" /> erzeugte Ausdruck besitzt keinen booleschen Ergebnistyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-148">The expression produced by <paramref name="predicate" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression Any(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any (input As DbExpressionBinding, predicate As DbExpression) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ Any(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="predicate" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="71aa0-149">Eine Ausdrucksbindung, die das Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-149">An expression binding that specifies the input set.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="71aa0-150">Ein Ausdruck, der ein Prädikat darstellt, das für jeden Member des Eingabesets ausgewertet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-150">An expression representing a predicate to evaluate for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-151">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />, die bestimmt, ob das angegebene Prädikat für jedes beliebige Element des Eingabesets gültig ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-151">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for any element of the input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-152">Ein neues DbQuantifierExpression, das den Any-Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-152">A new DbQuantifierExpression that represents the Any operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-153">
            <paramref name="input" /> oder <paramref name="predicate" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-153">
              <paramref name="input" /> or <paramref name="predicate" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-154">Der von <paramref name="predicate" /> erzeugte Ausdruck besitzt keinen booleschen Ergebnistyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-154">The expression produced by <paramref name="predicate" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="As">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71aa0-155">Gibt die angegebenen Argumente als Schlüssel-Wert-Paar-Objekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-155">Returns the specified arguments as a key/value pair object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="As">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbAggregate&gt; As (this System.Data.Common.CommandTrees.DbAggregate value, string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbAggregate&gt; As(class System.Data.Common.CommandTrees.DbAggregate value, string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function As (value As DbAggregate, alias As String) As KeyValuePair(Of String, DbAggregate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbAggregate ^&gt; As(System::Data::Common::CommandTrees::DbAggregate ^ value, System::String ^ alias);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbAggregate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbAggregate" RefType="this" />
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="71aa0-156">Der Wert im Schlüssel-Wert-Paar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-156">The value in the key/value pair.</span>
          </span>
        </param>
        <param name="alias">
          <span data-ttu-id="71aa0-157">Der Schlüssel im Schlüssel-Wert-Paar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-157">The key in the key/value pair.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-158">Gibt die angegebenen Argumente als Schlüssel-Wert-Paar-Objekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-158">Returns the specified arguments as a key/value pair object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-159">Ein Schlüssel-Wert-Paar-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-159">A key/value pair object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="As">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt; As (this System.Data.Common.CommandTrees.DbExpression value, string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt; As(class System.Data.Common.CommandTrees.DbExpression value, string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function As (value As DbExpression, alias As String) As KeyValuePair(Of String, DbExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt; As(System::Data::Common::CommandTrees::DbExpression ^ value, System::String ^ alias);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="71aa0-160">Der Wert im Schlüssel-Wert-Paar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-160">The value in the key/value pair.</span>
          </span>
        </param>
        <param name="alias">
          <span data-ttu-id="71aa0-161">Der Schlüssel im Schlüssel-Wert-Paar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-161">The key in the key/value pair.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-162">Gibt die angegebenen Argumente als Schlüssel-Wert-Paar-Objekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-162">Returns the specified arguments as a key/value pair object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-163">Ein Schlüssel-Wert-Paar-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-163">A key/value pair object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpressionBinding Bind (this System.Data.Common.CommandTrees.DbExpression input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpressionBinding Bind(class System.Data.Common.CommandTrees.DbExpression input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Bind (input As DbExpression) As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpressionBinding ^ Bind(System::Data::Common::CommandTrees::DbExpression ^ input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="71aa0-164">Der zu bindende Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-164">The expression to bind.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-165">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, die den angegebene Ausdruck mithilfe eines generierten Variablennamens bindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-165">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that uses a generated variable name to bind the given expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-166">Eine neue Ausdrucksbindung mit dem angegebenen Ausdruck und einem generierten Variablennamen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-166">A new expression binding with the specified expression and a generated variable name.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-167">
            <paramref name="input" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-167">
              <paramref name="input" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-168">
            <paramref name="input" /> weist keinen Auflistungsergebnis auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-168">
              <paramref name="input" /> does not have a collection result.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BindAs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpressionBinding BindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpressionBinding BindAs(class System.Data.Common.CommandTrees.DbExpression input, string varName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BindAs (input As DbExpression, varName As String) As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpressionBinding ^ BindAs(System::Data::Common::CommandTrees::DbExpression ^ input, System::String ^ varName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="varName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="71aa0-169">Der zu bindende Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-169">The expression to bind.</span>
          </span>
        </param>
        <param name="varName">
          <span data-ttu-id="71aa0-170">Der Variablenname, der für die Bindung verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-170">The variable name that should be used for the binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-171">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, die den angegebene Ausdruck mithilfe eines angegebenen Variablennamens bindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-171">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that uses the specified variable name to bind the given expression</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-172">Eine neue Ausdrucksbindung mit dem angegebenen Ausdruck und dem Variablennamen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-172">A new expression binding with the specified expression and variable name.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-173">
            <paramref name="input" /> oder <paramref name="varName" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-173">
              <paramref name="input" /> or <paramref name="varName" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-174">
            <paramref name="input" /> weist keinen Auflistungsergebnis auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-174">
              <paramref name="input" /> does not have a collection result.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Case">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbCaseExpression Case (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; whenExpressions, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; thenExpressions, System.Data.Common.CommandTrees.DbExpression elseExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbCaseExpression Case(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; whenExpressions, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; thenExpressions, class System.Data.Common.CommandTrees.DbExpression elseExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function Case (whenExpressions As IEnumerable(Of DbExpression), thenExpressions As IEnumerable(Of DbExpression), elseExpression As DbExpression) As DbCaseExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbCaseExpression ^ Case(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ whenExpressions, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ thenExpressions, System::Data::Common::CommandTrees::DbExpression ^ elseExpression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbCaseExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="whenExpressions" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="thenExpressions" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="elseExpression" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="whenExpressions">
          <span data-ttu-id="71aa0-175">Eine Liste von Ausdrücken, die die einzelnen case-Bedingungen bereitstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-175">A list of expressions that provide the conditional for of each case.</span>
          </span>
        </param>
        <param name="thenExpressions">
          <span data-ttu-id="71aa0-176">Eine Liste von Ausdrücken, die die Ergebnisse der einzelnen case-Bedingungen bereitstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-176">A list of expressions that provide the result of each case.</span>
          </span>
        </param>
        <param name="elseExpression">
          <span data-ttu-id="71aa0-177">Ein Ausdruck, der das Ergebnis definiert, wenn keine case-Bedingung erfüllt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-177">An expression that defines the result when no case is matched.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-178">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-178">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-179">Ein neues DbCaseExpression mit den angegebenen Fällen und dem standardmäßigen Ergebnis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-179">A new DbCaseExpression with the specified cases and default result.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-180">
            <paramref name="whenExpressions" /> oder <paramref name="thenExpressions" /> ist NULL oder NULL enthält oder <paramref name="elseExpression" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-180">
              <paramref name="whenExpressions" /> or <paramref name="thenExpressions" /> is null or contains null, or <paramref name="elseExpression" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-181">
            <paramref name="whenExpressions" /> oder <paramref name="thenExpressions" /> ist leer, oder <paramref name="whenExpressions" /> enthält einen Ausdruck mit einem nicht booleschen Ergebnistyp, oder es ist kein gemeinsamer Ergebnistyp für alle Ausdrücke in <paramref name="thenExpressions" /> und <paramref name="elseExpression" /> vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-181">
              <paramref name="whenExpressions" /> or <paramref name="thenExpressions" /> is empty or <paramref name="whenExpressions" /> contains an expression with a non-Boolean result type, or no common result type exists for all expressions in <paramref name="thenExpressions" /> and <paramref name="elseExpression" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CastTo">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbCastExpression CastTo (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage toType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbCastExpression CastTo(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage toType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CastTo (argument As DbExpression, toType As TypeUsage) As DbCastExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbCastExpression ^ CastTo(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ toType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbCastExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="toType" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="71aa0-182">Das Argument, das umgewandelt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-182">The argument to which the cast should be applied.</span>
          </span>
        </param>
        <param name="toType">
          <span data-ttu-id="71aa0-183">Die Typmetadaten, die den umzuwandelnden Typ angeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-183">Type metadata that specifies the type to cast to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-184">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" />, der eine Umwandlungsoperation auf ein polymorphes Argument anwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-184">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /> that applies a cast operation to a polymorphic argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-185">Ein neues DbCastExpression mit dem angegebenen Argument und dem Zieltyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-185">A new DbCastExpression with the specified argument and target type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-186">
            <paramref name="Argument" /> oder <paramref name="toType" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-186">
              <paramref name="Argument" /> or <paramref name="toType" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-187">Die angegebene Umwandlung ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-187">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Constant">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71aa0-188">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-188">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Constant">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression Constant (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbConstantExpression Constant(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Constant (value As Object) As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbConstantExpression ^ Constant(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="71aa0-189">Der darzustellende konstante Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-189">The constant value to represent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-190">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> mit dem angegebenen Konstantenwert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-190">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the given constant value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-191">Ein neues DbConstantExpression mit dem angegebenen Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-191">A new DbConstantExpression with the given value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-192">
            <paramref name="value" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-192">
              <paramref name="value" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-193">
            <paramref name="value" /> ist keine Instanz eines gültigen konstanten Typs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-193">
              <paramref name="value" /> is not an instance of a valid constant type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Constant">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression Constant (this System.Data.Metadata.Edm.TypeUsage constantType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbConstantExpression Constant(class System.Data.Metadata.Edm.TypeUsage constantType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Constant (constantType As TypeUsage, value As Object) As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbConstantExpression ^ Constant(System::Data::Metadata::Edm::TypeUsage ^ constantType, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constantType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="constantType">
          <span data-ttu-id="71aa0-194">Der Typ des konstanten Werts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-194">The type of the constant value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="71aa0-195">Der darzustellende konstante Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-195">The constant value to represent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-196">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> vom angegebenen primitiven Typ mit dem angegebenen konstanten Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-196">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> of the specified primitive type with the given constant value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-197">Ein neues DbConstantExpression mit dem angegebenen Wert und einen Ergebnistyp <paramref name="constantType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-197">A new DbConstantExpression with the given value and a result type of <paramref name="constantType" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-198">
            <paramref name="value" /> oder <paramref name="constantType" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-198">
              <paramref name="value" /> or <paramref name="constantType" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-199">
            <paramref name="value" /> ist keine Instanz eines gültigen konstanten Typs, <paramref name="constantType" /> stellt keinen primitiven Typ dar, oder <paramref name="value" /> ist von einem anderen primitiven Typ als dem durch <paramref name="constantType" /> dargestellten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-199">
              <paramref name="value" /> is not an instance of a valid constant type,  <paramref name="constantType" /> does not represent a primitive type, or <paramref name="value" /> is of a different primitive type than that represented by <paramref name="constantType" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateRef">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71aa0-200">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />, der einen Verweis auf eine bestimmte Entität eines angegebenen Typs auf Grundlage von Schlüsselwerten codiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-200">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity of a given type based on key values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="entitySet">
          <span data-ttu-id="71aa0-201">Die Entitätenmenge mit dem Element, auf das verwiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-201">The entity set in which the referenced element resides.</span>
          </span>
        </param>
        <param name="keyValues">
          <span data-ttu-id="71aa0-202">Eine Sammlung von <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, die die Schlüsselwerte angeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-202">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span>
          </span>
          <span data-ttu-id="71aa0-203">Diese Ausdrücke müssen (hinsichtlich Anzahl, Typ und Reihenfolge) mit den Schlüsseleigenschaften des Entitätstyps übereinstimmen, auf den verwiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-203">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-204">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />, das einen Verweis auf eine bestimmte Entität auf der Grundlage der Schlüsselwerte codiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-204">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity based on key values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-205">Ein neues DbRefExpression, das das Element mit den angegebenen Schlüsselwerten im angegebenen Entitätssatz verweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-205">A new DbRefExpression that references the element with the specified key values in the given entity set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-206">
            <paramref name="entitySet" /> ist NULL, oder <paramref name="keyValues" /> ist NULL bzw. enthält NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-206">
              <paramref name="entitySet" /> is null, or <paramref name="keyValues" /> is null or contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-207">Die Anzahl von <paramref name="keyValues" /> entspricht nicht der Anzahl von Hauptmembern, die vom Elementtyp von <paramref name="entitySet" /> deklariert wurde, oder <paramref name="keyValues" /> enthält einen Ausdruck mit einem Ergebnistyp, der mit dem Typ des entsprechenden Hauptmembers nicht kompatibel ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-207">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />’s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, params System.Data.Common.CommandTrees.DbExpression[] keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Common.CommandTrees.DbExpression[] keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyValues" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="entitySet">
          <span data-ttu-id="71aa0-208">Die Entitätenmenge mit dem Element, auf das verwiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-208">The entity set in which the referenced element resides.</span>
          </span>
        </param>
        <param name="keyValues">
          <span data-ttu-id="71aa0-209">Eine Sammlung von <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, die die Schlüsselwerte angeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-209">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span>
          </span>
          <span data-ttu-id="71aa0-210">Diese Ausdrücke müssen (hinsichtlich Anzahl, Typ und Reihenfolge) mit den Schlüsseleigenschaften des Entitätstyps übereinstimmen, auf den verwiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-210">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-211">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />, das einen Verweis auf eine bestimmte Entität auf der Grundlage der Schlüsselwerte codiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-211">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity based on key values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-212">Ein neues DbRefExpression, das das Element mit den angegebenen Schlüsselwerten im angegebenen Entitätssatz verweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-212">A new DbRefExpression that references the element with the specified key values in the given entity set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-213">
            <paramref name="entitySet" /> ist NULL, oder <paramref name="keyValues" /> ist NULL bzw. enthält NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-213">
              <paramref name="entitySet" /> is null, or <paramref name="keyValues" /> is null or contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-214">Die Anzahl von <paramref name="keyValues" /> entspricht nicht der Anzahl von Hauptmembern, die vom Elementtyp von <paramref name="entitySet" /> deklariert wurde, oder <paramref name="keyValues" /> enthält einen Ausdruck mit einem Ergebnistyp, der mit dem Typ des entsprechenden Hauptmembers nicht kompatibel ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-214">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />’s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Metadata.Edm.EntityType entityType, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Metadata::Edm::EntityType ^ entityType, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityType" />
        <Parameter Name="keyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="entitySet">
          <span data-ttu-id="71aa0-215">Die Entitätenmenge mit dem Element, auf das verwiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-215">The entity set in which the referenced element resides.</span>
          </span>
        </param>
        <param name="entityType">
          <span data-ttu-id="71aa0-216">Der spezifische Typ der Entität, auf die verwiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-216">The specific type of the referenced entity.</span>
          </span>
          <span data-ttu-id="71aa0-217">Dies muss ein Entitätstyp aus der gleichen Hierarchie wie der Elementtyp der Entitätenmenge sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-217">This must be an entity type from the same hierarchy as the entity set's element type.</span>
          </span>
        </param>
        <param name="keyValues">
          <span data-ttu-id="71aa0-218">Eine Sammlung von <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, die die Schlüsselwerte angeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-218">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span>
          </span>
          <span data-ttu-id="71aa0-219">Diese Ausdrücke müssen (hinsichtlich Anzahl, Typ und Reihenfolge) mit den Schlüsseleigenschaften des Entitätstyps übereinstimmen, auf den verwiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-219">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-220">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />, der einen Verweis auf eine bestimmte Entität eines angegebenen Typs auf Grundlage von Schlüsselwerten codiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-220">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity of a given type based on key values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-221">Ein neues DbRefExpression, das das Element mit den angegebenen Schlüsselwerten im angegebenen Entitätssatz verweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-221">A new DbRefExpression that references the element with the specified key values in the given entity set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-222">
            <paramref name="entitySet" /> oder <paramref name="entityType" /> ist NULL oder <paramref name="keyValues" /> ist NULL oder enthält NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-222">
              <paramref name="entitySet" /> or <paramref name="entityType" /> is null, or <paramref name="keyValues" /> is null or contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-223">Die Anzahl von <paramref name="keyValues" /> entspricht nicht der Anzahl von Hauptmembern, die vom Elementtyp von <paramref name="entitySet" /> deklariert wurde, oder <paramref name="keyValues" /> enthält einen Ausdruck mit einem Ergebnistyp, der mit dem Typ des entsprechenden Hauptmembers nicht kompatibel ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-223">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />’s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, params System.Data.Common.CommandTrees.DbExpression[] keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Metadata.Edm.EntityType entityType, class System.Data.Common.CommandTrees.DbExpression[] keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Metadata::Edm::EntityType ^ entityType, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityType" />
        <Parameter Name="keyValues" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="entitySet">
          <span data-ttu-id="71aa0-224">Die Entitätenmenge mit dem Element, auf das verwiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-224">The entity set in which the referenced element resides.</span>
          </span>
        </param>
        <param name="entityType">
          <span data-ttu-id="71aa0-225">Der spezifische Typ der Entität, auf die verwiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-225">The specific type of the referenced entity.</span>
          </span>
          <span data-ttu-id="71aa0-226">Dies muss ein Entitätstyp aus der gleichen Hierarchie wie der Elementtyp der Entitätenmenge sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-226">This must be an entity type from the same hierarchy as the entity set's element type.</span>
          </span>
        </param>
        <param name="keyValues">
          <span data-ttu-id="71aa0-227">Eine Sammlung von <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, die die Schlüsselwerte angeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-227">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span>
          </span>
          <span data-ttu-id="71aa0-228">Diese Ausdrücke müssen (hinsichtlich Anzahl, Typ und Reihenfolge) mit den Schlüsseleigenschaften des Entitätstyps übereinstimmen, auf den verwiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-228">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-229">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />, der einen Verweis auf eine bestimmte Entität eines angegebenen Typs auf Grundlage von Schlüsselwerten codiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-229">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity of a given type based on key values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-230">Ein neues DbRefExpression, das das Element mit den angegebenen Schlüsselwerten im angegebenen Entitätssatz verweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-230">A new DbRefExpression that references the element with the specified key values in the given entity set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-231">
            <paramref name="entitySet" /> oder <paramref name="entityType" /> ist NULL oder <paramref name="keyValues" /> ist NULL oder enthält NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-231">
              <paramref name="entitySet" /> or <paramref name="entityType" /> is null, or <paramref name="keyValues" /> is null or contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-232">Die Anzahl von <paramref name="keyValues" /> entspricht nicht der Anzahl von Hauptmembern, die vom Elementtyp von <paramref name="entitySet" /> deklariert wurde, oder <paramref name="keyValues" /> enthält einen Ausdruck mit einem Ergebnistyp, der mit dem Typ des entsprechenden Hauptmembers nicht kompatibel ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-232">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />’s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CrossApply">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71aa0-233">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />, die den angegebenen <paramref name="apply" />-Ausdruck für jedes Element eines angegebenen Eingabesets einmal auswertet und eine Auflistung von Zeilen mit entsprechenden Eingabe- und apply-Spalten erzeugt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-233">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CrossApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression CrossApply(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CrossApply (source As DbExpression, apply As Func(Of DbExpression, KeyValuePair(Of String, DbExpression))) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ CrossApply(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ apply);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="71aa0-234">Eine <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, die das Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-234">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="apply">
          <span data-ttu-id="71aa0-235">Eine Methode, die die Logik angibt, die für jeden Member des Eingabesets einmal ausgewertet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-235">A method that specifies the logic to evaluate once for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-236">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />, die den angegebenen <paramref name="apply" />-Ausdruck für jedes Element eines angegebenen Eingabesets einmal auswertet und eine Auflistung von Zeilen mit entsprechenden Eingabe- und apply-Spalten erzeugt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-236">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
          <span data-ttu-id="71aa0-237">Zeilen, für die <paramref name="apply" /> als leerer Satz ausgewertet wird, werden nicht eingeschlossen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-237">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-238">Ein neues DbApplyExpression mit der angegebenen Eingabe und Anwenden von Bindungen und ein <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> von CrossApply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-238">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-239">Das Ergebnis von <paramref name="apply" /> enthält einen Namen oder Ausdruck, der Null ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-239">The result of <paramref name="apply" /> contains a name or expression that is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-240">Das Ergebnis von <paramref name="apply" /> enthält einen Namen oder Ausdruck, der in einer Ausdrucksbindung ungültig ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-240">The result of <paramref name="apply" /> contains a name or expression that is not valid in an expression binding.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CrossApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression CrossApply(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpressionBinding apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CrossApply (input As DbExpressionBinding, apply As DbExpressionBinding) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ CrossApply(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpressionBinding ^ apply);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="apply" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="71aa0-241">Ein <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, der das Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-241">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="apply">
          <span data-ttu-id="71aa0-242">Eine <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, die die Logik angibt, die für jeden Member des Eingabesets einmal ausgewertet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-242">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies logic to evaluate once for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-243">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />, die den angegebenen <paramref name="apply" />-Ausdruck für jedes Element eines angegebenen Eingabesets einmal auswertet und eine Auflistung von Zeilen mit entsprechenden Eingabe- und apply-Spalten erzeugt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-243">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
          <span data-ttu-id="71aa0-244">Zeilen, für die <paramref name="apply" /> als leerer Satz ausgewertet wird, werden nicht eingeschlossen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-244">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-245">Ein neues DbApplyExpression mit der angegebenen Eingabe und Anwenden von Bindungen und ein <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> von CrossApply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-245">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-246">
            <paramref name="input" /> oder <paramref name="apply" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-246">
              <paramref name="input" /> or <paramref name="apply" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CrossJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbCrossJoinExpression CrossJoin (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt; inputs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbCrossJoinExpression CrossJoin(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpressionBinding&gt; inputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})" />
      <MemberSignature Language="VB.NET" Value="Public Function CrossJoin (inputs As IEnumerable(Of DbExpressionBinding)) As DbCrossJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbCrossJoinExpression ^ CrossJoin(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpressionBinding ^&gt; ^ inputs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbCrossJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputs" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt;" />
      </Parameters>
      <Docs>
        <param name="inputs">
          <span data-ttu-id="71aa0-247">Eine Liste von Ausdrucksbindungen, die die Eingabesets angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-247">A list of expression bindings that specifies the input sets.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-248">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" />, der die in der Liste der Eingabeausdrucksbindungen angegebenen Sets bedingungslos verknüpft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-248">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" /> that unconditionally joins the sets specified by the list of input expression bindings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-249">Ein neues DbCrossJoinExpression, mit einem <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> von CrossJoin, das den unbedingten Join der Eingabesätze darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-249">A new DbCrossJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossJoin, that represents the unconditional join of the input sets.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-250">
            <paramref name="inputs" /> ist NULL oder enthält NULL Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-250">
              <paramref name="inputs" /> is null or contains null element.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-251">
            <paramref name="inputs" /> enthält weniger als zwei Ausdrucksbindungen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-251">
              <paramref name="inputs" /> contains fewer than 2 expression bindings.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Deref">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbDerefExpression Deref (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbDerefExpression Deref(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Deref (argument As DbExpression) As DbDerefExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbDerefExpression ^ Deref(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbDerefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="71aa0-252">Ein <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, der den Verweis bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-252">An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that provides the reference.</span>
          </span>
          <span data-ttu-id="71aa0-253">Dieser Ausdruck muss einen Verweistyp aufweisen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-253">This expression must have a reference Type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-254">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" />, der eine bestimmte Entität abruft, wenn ein Verweisausdruck angegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-254">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /> that retrieves a specific Entity given a reference expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-255">Ein neues DbDerefExpression, das die angegebene Entität abruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-255">A new DbDerefExpression that retrieves the specified Entity.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-256">
            <paramref name="argument" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-256">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-257">
            <paramref name="argument" /> weist keinen Verweisergebnistyp auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-257">
              <paramref name="argument" /> does not have a reference result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Distinct">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbDistinctExpression Distinct (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbDistinctExpression Distinct(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Distinct (argument As DbExpression) As DbDistinctExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbDistinctExpression ^ Distinct(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbDistinctExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="71aa0-258">Ein Ausdruck, der die Menge definiert, über der die eindeutige Operation ausgeführt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-258">An expression that defines the set over which to perfom the distinct operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-259">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" />, der Duplikate aus dem angegebenen Mengenargument entfernt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-259">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /> that removes duplicates from the given set argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-260">Ein neues DbDistinctExpression, das den bestimmten Vorgang darstellt, der auf das angegebene Mengenargument angewendet wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-260">A new DbDistinctExpression that represents the distinct operation applied to the specified set argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-261">
            <paramref name="argument" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-261">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-262">
            <paramref name="argument" /> weist keinen Auflistungsergebnistyp auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-262">
              <paramref name="argument" /> does not have a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Divide (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Divide(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Divide (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Divide(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="71aa0-263">Ein Ausdruck, der das linke Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-263">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="71aa0-264">Ein Ausdruck, der das rechte Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-264">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-265">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />, die das linke Argument durch das rechte Argument dividiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-265">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that divides the left argument by the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-266">Ein neues DbArithmeticExpression, der die Division darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-266">A new DbArithmeticExpression representing the division operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-267">
            <paramref name="left" /> oder <paramref name="right" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-267">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-268">Zwischen <paramref name="left" /> oder <paramref name="right" /> ist kein gemeinsamer numerischer Ergebnistyp vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-268">No common numeric result type exists between <paramref name="left" /> or <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Element">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbElementExpression Element (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbElementExpression Element(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Element (argument As DbExpression) As DbElementExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbElementExpression ^ Element(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbElementExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="71aa0-269">Ein Ausdruck, der das Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-269">An expression that specifies the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-270">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" />, der eine Menge in ein Singleton konvertiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-270">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /> that converts a set into a singleton.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-271">Eine DbElementExpression, die die Konvertierung des angegebenen Mengenarguments in ein Singleton darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-271">A DbElementExpression that represents the conversion of the set argument to a singleton.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-272">
            <paramref name="argument" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-272">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-273">
            <paramref name="argument" /> weist keinen Auflistungsergebnistyp auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-273">
              <paramref name="argument" /> does not have a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression Equal (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression Equal(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Equal (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ Equal(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="71aa0-274">Ein Ausdruck, der das linke Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-274">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="71aa0-275">Ein Ausdruck, der das rechte Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-275">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-276">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />, die das linke und das rechte Argument auf Gleichheit vergleicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-276">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that compares the left and right arguments for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-277">Ein neues DbComparisonExpression, das den Gleichheitsvergleich darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-277">A new DbComparisonExpression representing the equality comparison.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-278">
            <paramref name="left" /> oder <paramref name="right" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-278">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-279">Zwischen <paramref name="left" /> und <paramref name="right" /> ist kein allgemeiner, auf Gleichheit vergleichbarer Ergebnistyp vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-279">No common equality-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Except">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExceptExpression Except (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExceptExpression Except(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except (left As DbExpression, right As DbExpression) As DbExceptExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExceptExpression ^ Except(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExceptExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="71aa0-280">Ein Ausdruck, der das linke Mengenargument definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-280">An expression that defines the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="71aa0-281">Ein Ausdruck, der das rechte Mengenargument definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-281">An expression that defines the right set argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-282">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" />, die das rechte Mengenargument vom linken Mengenargument subtrahiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-282">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /> that computes the subtraction of the right set argument from the left set argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-283">Ein neues DbExceptExpression, das den Unterschied zwischen dem linken und dem rechten Argument darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-283">A new DbExceptExpression that represents the difference of the left argument from the right argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-284">
            <paramref name="left" /> oder <paramref name="right" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-284">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-285">Zwischen <paramref name="left" /> und <paramref name="right" /> ist kein allgemeiner Auflistungsergebnistyp vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-285">No common collection result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Exists (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Exists(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Exists (argument As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Exists(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="71aa0-286">Ein Ausdruck, der das Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-286">An expression that specifies the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-287">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, die bestimmt, ob das angegebene Mengenargument nicht leer ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-287">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that determines whether the specified set argument is non-empty.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-288">Ein neues <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" />, angewendet auf ein neues <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> mit dem angegebenen Argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-288">A new <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> applied to a new <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> with the specified argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-289">
            <paramref name="argument" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-289">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-290">
            <paramref name="argument" /> weist keinen Auflistungsergebnistyp auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-290">
              <paramref name="argument" /> does not have a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="False">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression False { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Data.Common.CommandTrees.DbConstantExpression False" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property False As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Data::Common::CommandTrees::DbConstantExpression ^ False { System::Data::Common::CommandTrees::DbConstantExpression ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="71aa0-291">Ruft eine <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> mit dem booleschen Wert <see langword="false" /> ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-291">Gets a <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="false" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71aa0-292">Eine <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> mit dem booleschen Wert <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-292">A <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFilterExpression Filter (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFilterExpression Filter(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Filter (input As DbExpressionBinding, predicate As DbExpression) As DbFilterExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFilterExpression ^ Filter(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFilterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="predicate" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="71aa0-293">Eine Ausdrucksbindung, die das Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-293">An expression binding that specifies the input set.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="71aa0-294">Ein Ausdruck, der ein Prädikat darstellt, das für jeden Member des Eingabesets ausgewertet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-294">An expression representing a predicate to evaluate for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-295">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" />, der die Elemente im angegebenen Eingabeset mithilfe des angegebenen Prädikats filtert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-295">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> that filters the elements in the given input set using the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-296">Ein neues DbFilterExpression, der die gefilterte Menge erzeugt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-296">A new DbFilterExpression that produces the filtered set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-297">
            <paramref name="input" /> oder <paramref name="predicate" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-297">
              <paramref name="input" /> or <paramref name="predicate" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-298">
            <paramref name="predicate" /> weist keinen booleschen Ergebnistyp auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-298">
              <paramref name="predicate" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FullOuterJoin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71aa0-299">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />, der die durch den linken und rechten Ausdruck angegebenen set-Argumente bei der angegebenen Joinbedingung verknüpft und dabei FullOuterJoin als <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-299">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using FullOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FullOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FullOuterJoin (left As DbExpression, right As DbExpression, joinCondition As Func(Of DbExpression, DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ FullOuterJoin(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ joinCondition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="joinCondition" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="71aa0-300">Ein <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, der das linke set-Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-300">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="71aa0-301">Ein <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, der das rechte set-Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-301">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the right set argument.</span>
          </span>
        </param>
        <param name="joinCondition">
          <span data-ttu-id="71aa0-302">Eine Methode, die die Bedingung darstellt, bei der die Verknüpfung stattfinden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-302">A method representing the condition on which to join.</span>
          </span>
          <span data-ttu-id="71aa0-303">Diese Methode muss einen Ausdruck mit einem booleschen Ergebnistyp erzeugen, der die Logik der Joinbedingung bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-303">This method must produce an expression with a Boolean result type that provides the logic of the join condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-304">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />, der die durch den linken und rechten Ausdruck angegebenen set-Argumente bei der angegebenen Joinbedingung verknüpft und dabei FullOuterJoin als <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-304">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using FullOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-305">Ein neuer DbJoinExpression mit FullOuterJoin als <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />, der den vollständigen äußeren Joinvorgang darstellt, der unter der angegebenen Joinbedingung auf das linke und rechte Eingabeset angewendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-305">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of FullOuterJoin, that represents the full outer join operation applied to the left and right input sets under the given join condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-306">Der von <paramref name="joinCondition" /> erzeugte Ausdruck ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-306">The expression produced by <paramref name="joinCondition" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-307">Der von <paramref name="joinCondition" /> erzeugte Ausdruck besitzt keinen booleschen Ergebnistyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-307">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FullOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin(class System.Data.Common.CommandTrees.DbExpressionBinding left, class System.Data.Common.CommandTrees.DbExpressionBinding right, class System.Data.Common.CommandTrees.DbExpression joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FullOuterJoin (left As DbExpressionBinding, right As DbExpressionBinding, joinCondition As DbExpression) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ FullOuterJoin(System::Data::Common::CommandTrees::DbExpressionBinding ^ left, System::Data::Common::CommandTrees::DbExpressionBinding ^ right, System::Data::Common::CommandTrees::DbExpression ^ joinCondition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
        <Parameter Name="joinCondition" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="71aa0-308">Eine <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, die das linke Mengenargument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-308">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="71aa0-309">Eine <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, die das rechte Mengenargument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-309">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the right set argument.</span>
          </span>
        </param>
        <param name="joinCondition">
          <span data-ttu-id="71aa0-310">Ein Ausdruck, der die Bedingung für den Join angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-310">An expression that specifies the condition on which to join.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-311">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />, der die von der linken und der rechten Ausdrucksbindung in der angegebenen Joinbedingung festgelegten Mengen verknüpft, indem FullOuterJoin als <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-311">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expression bindings, on the specified join condition, using FullOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-312">Eine neue DbJoinExpression-Klasse mit FullOuterJoin als <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />-Enumeration, die den vollständigen äußeren Joinvorgang darstellt, der unter der angegebenen Joinbedingung auf das linke und rechte Eingabeset angewendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-312">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of FullOuterJoin, that represents the full outer join operation applied to the left and right     input sets under the given join condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-313">
            <paramref name="left" />, <paramref name="right" /> oder <paramref name="joinCondition" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-313">
              <paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-314">Der von <paramref name="joinCondition" /> erzeugte Ausdruck besitzt keinen booleschen Ergebnistyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-314">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntityRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbEntityRefExpression GetEntityRef (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbEntityRefExpression GetEntityRef(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEntityRef (argument As DbExpression) As DbEntityRefExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbEntityRefExpression ^ GetEntityRef(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbEntityRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="71aa0-315">Der Ausdruck, der die Entität bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-315">The expression that provides the entity.</span>
          </span>
          <span data-ttu-id="71aa0-316">Dieser Ausdruck muss einen Entitätsergebnistyp aufweisen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-316">This expression must have an entity result type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-317">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" />, die den Verweis der angegebenen Entität in struktureller Form abruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-317">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /> that retrieves the ref of the specifed entity in structural form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-318">Ein neues DbEntityRefExpression, das einen Verweis auf die angegebene Entität abruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-318">A new DbEntityRefExpression that retrieves a reference to the specified entity.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-319">
            <paramref name="argument" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-319">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-320">
            <paramref name="argument" /> weist keinen Entitätsergebnistyp auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-320">
              <paramref name="argument" /> does not have an entity result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRefKey">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefKeyExpression GetRefKey (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefKeyExpression GetRefKey(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRefKey (argument As DbExpression) As DbRefKeyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefKeyExpression ^ GetRefKey(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefKeyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="71aa0-321">Der Ausdruck, der den Verweis bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-321">The expression that provides the reference.</span>
          </span>
          <span data-ttu-id="71aa0-322">Dieser Ausdruck muss einen Verweistyp mit einem Entitätselementtyp aufweisen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-322">This expression must have a reference Type with an Entity element type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-323">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" />, der die Schlüsselwerte des angegebenen Verweises in struktureller Form abruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-323">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /> that retrieves the key values of the specifed reference in structural form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-324">Ein neues DbRefKeyExpression, das die Schlüsselwerte des angegebenen Verweises abruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-324">A new DbRefKeyExpression that retrieves the key values of the specified reference.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-325">
            <paramref name="argument" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-325">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-326">
            <paramref name="argument" /> weist keinen Verweisergebnistyp auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-326">
              <paramref name="argument" /> does not have a reference result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression GreaterThan(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GreaterThan (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ GreaterThan(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="71aa0-327">Ein Ausdruck, der das linke Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-327">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="71aa0-328">Ein Ausdruck, der das rechte Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-328">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-329">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />, die bestimmt, ob das linke Argument größer als das rechte Argument ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-329">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is greater than the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-330">Ein neues DbComparisonExpression, das das Größer-als-Vergleich darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-330">A new DbComparisonExpression representing the greater-than comparison.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-331">
            <paramref name="left" /> oder <paramref name="right" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-331">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-332">Zwischen <paramref name="left" /> und <paramref name="right" /> ist kein allgemeiner, auf Reihenfolge vergleichbarer Ergebnistyp vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-332">No common order-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression GreaterThanOrEqual(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GreaterThanOrEqual (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ GreaterThanOrEqual(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="71aa0-333">Ein Ausdruck, der das linke Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-333">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="71aa0-334">Ein Ausdruck, der das rechte Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-334">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-335">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />, die bestimmt, ob das linke Argument größer oder gleich dem rechten Argument ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-335">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is greater than or equal to the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-336">Ein neues DbComparisonExpression, das das Größer-als-oder-gleich-Vergleich darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-336">A new DbComparisonExpression representing the greater-than-or-equal-to comparison.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-337">
            <paramref name="left" /> oder <paramref name="right" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-337">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-338">Zwischen <paramref name="left" /> und <paramref name="right" /> ist kein allgemeiner, auf Reihenfolge vergleichbarer Ergebnistyp vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-338">No common order-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBind">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBind (this System.Data.Common.CommandTrees.DbExpression input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBind(class System.Data.Common.CommandTrees.DbExpression input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBind (input As DbExpression) As DbGroupExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ GroupBind(System::Data::Common::CommandTrees::DbExpression ^ input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="71aa0-339">Der zu bindende Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-339">The expression to bind.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-340">Erstellt eine neue Gruppenausdrucksbindung, die den angegebenen Ausdruck mithilfe generierter Variablen- und Gruppenvariablennamen bindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-340">Creates a new group expression binding that uses generated variable and group variable names to bind the given expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-341">Eine neue Gruppenausdrucksbindung mit dem angegebenen Ausdruck und einem generierten Variablennamen und Gruppenvariablennamen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-341">A new group expression binding with the specified expression and a generated variable name and group variable name.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-342">
            <paramref name="input" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-342">
              <paramref name="input" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-343">
            <paramref name="input" /> weist keinen Auflistungsergebnistyp auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-343">
              <paramref name="input" /> does not have a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBindAs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName, string groupVarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBindAs(class System.Data.Common.CommandTrees.DbExpression input, string varName, string groupVarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBindAs (input As DbExpression, varName As String, groupVarName As String) As DbGroupExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ GroupBindAs(System::Data::Common::CommandTrees::DbExpression ^ input, System::String ^ varName, System::String ^ groupVarName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="varName" Type="System.String" />
        <Parameter Name="groupVarName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="71aa0-344">Der zu bindende Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-344">The expression to bind.</span>
          </span>
        </param>
        <param name="varName">
          <span data-ttu-id="71aa0-345">Der Variablenname, der für die Bindung verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-345">The variable name that should be used for the binding.</span>
          </span>
        </param>
        <param name="groupVarName">
          <span data-ttu-id="71aa0-346">Der Variablenname, der als Verweis auf die Gruppe verwendet werden soll, wenn die neue Gruppenausdrucksbindung in einem GROUP BY-Ausdruck verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-346">The variable name that should be used to refer to the group when the new group expression binding is used in a group-by expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-347">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" />, die den angegebenen Ausdruck mithilfe des angegebenen Variablennamens und der angegebenen Gruppenvariablennamen bindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-347">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> that uses the specified variable name and group variable names to bind the given expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-348">Eine neue Gruppenausdrucksbindung mit dem angegebenen Ausdruck, mit dem Variablennamen und dem Gruppenvariablennamen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-348">A new group expression binding with the specified expression, variable name and group variable name.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-349">
            <paramref name="input" />, <paramref name="varName" /> oder <paramref name="groupVarName" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-349">
              <paramref name="input" />,  <paramref name="varName" /> or <paramref name="groupVarName" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-350">
            <paramref name="input" /> weist keinen Auflistungsergebnistyp auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-350">
              <paramref name="input" /> does not have a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbGroupByExpression GroupBy (this System.Data.Common.CommandTrees.DbGroupExpressionBinding input, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; keys, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbAggregate&gt;&gt; aggregates);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbGroupByExpression GroupBy(class System.Data.Common.CommandTrees.DbGroupExpressionBinding input, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; keys, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbAggregate&gt;&gt; aggregates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy (input As DbGroupExpressionBinding, keys As IEnumerable(Of KeyValuePair(Of String, DbExpression)), aggregates As IEnumerable(Of KeyValuePair(Of String, DbAggregate))) As DbGroupByExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbGroupByExpression ^ GroupBy(System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ input, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ keys, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbAggregate ^&gt;&gt; ^ aggregates);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupByExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbGroupExpressionBinding" RefType="this" />
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
        <Parameter Name="aggregates" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbAggregate&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="71aa0-351">Eine <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" />, die das Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-351">A <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="keys">
          <span data-ttu-id="71aa0-352">Eine Liste von Zeichenfolge-Ausdruck-Paaren, die die Gruppierungsspalten definieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-352">A list of string-expression pairs that define the grouping columns.</span>
          </span>
        </param>
        <param name="aggregates">
          <span data-ttu-id="71aa0-353">Eine Liste von Ausdrücken, die anzuwendende Aggregate angeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-353">A list of expressions that specify aggregates to apply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-354">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" />, der die Elemente des Eingabesets nach den angegebenen Gruppenschlüsseln gruppiert und die angegebenen Aggregate anwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-354">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /> that groups the elements of the input set according to the specified group keys and applies the given aggregates.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-355">Ein neues DbGroupByExpression mit dem angegebenen Eingabeset, Gruppierungsschlüssel und Aggregate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-355">A new DbGroupByExpression with the specified input set, grouping keys and aggregates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71aa0-356">DbGroupAggregate kann die Liste der Schlüssel oder die Liste der Aggregate, leer zu sein, aber nicht beides.</span><span class="sxs-lookup"><span data-stu-id="71aa0-356">DbGroupByExpression allows either the list of keys or the list of aggregates to be empty, but not both.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-357">
            <paramref name="input" />, <paramref name="keys" /> oder <paramref name="aggregates" /> ist NULL, <paramref name="keys" /> enthält einen NULL-Spaltenschlüssel oder -Ausdruck, oder <paramref name="aggregates" /> enthält einen aggregierten NULL-Spaltennamen oder ein solches Aggregat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-357">
              <paramref name="input" />,  <paramref name="keys" /> or <paramref name="aggregates" /> is null,  <paramref name="keys" /> contains a null column key or expression, or <paramref name="aggregates" /> contains a null aggregate column name or aggregate.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-358">
            <paramref name="keys" /> und auch <paramref name="aggregates" /> sind leer, oder ein ungültiger oder doppelter Spaltenname wurde angegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-358">Both <paramref name="keys" /> and <paramref name="aggregates" /> are empty, or an invalid or duplicate column name was specified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InnerJoin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71aa0-359">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />, der die vom linken und vom rechten Ausdruck in der angegebenen Joinbedingung festgelegten Mengen verknüpft, indem InnerJoin als <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-359">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InnerJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression InnerJoin(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InnerJoin (left As DbExpression, right As DbExpression, joinCondition As Func(Of DbExpression, DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ InnerJoin(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ joinCondition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="joinCondition" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="71aa0-360">Ein <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, der das linke set-Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-360">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="71aa0-361">Ein <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, der das rechte set-Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-361">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the right set argument.</span>
          </span>
        </param>
        <param name="joinCondition">
          <span data-ttu-id="71aa0-362">Eine Methode, die die Bedingung darstellt, bei der die Verknüpfung stattfinden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-362">A method representing the condition on which to join.</span>
          </span>
          <span data-ttu-id="71aa0-363">Diese Methode muss einen Ausdruck mit einem booleschen Ergebnistyp erzeugen, der die Logik der Joinbedingung bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-363">This method must produce an expression with a Boolean result type that provides the logic of the join condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-364">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />, der die vom linken und vom rechten Ausdruck in der angegebenen Joinbedingung festgelegten Mengen verknüpft, indem InnerJoin als <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-364">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-365">Ein neues DbJoinExpression, mit <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> von FullOuterJoin, der den Vorgang des vollständigen äußeren Join darstellt, der auf den linken und rechten Eingabesets unter der angegebenen Joinbedingung angewendet wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-365">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right input sets under the given join condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-366">Der von <paramref name="joinCondition" /> erzeugte Ausdruck ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-366">The expression produced by <paramref name="joinCondition" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-367">Der von <paramref name="joinCondition" /> erzeugte Ausdruck besitzt keinen booleschen Ergebnistyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-367">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InnerJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression InnerJoin(class System.Data.Common.CommandTrees.DbExpressionBinding left, class System.Data.Common.CommandTrees.DbExpressionBinding right, class System.Data.Common.CommandTrees.DbExpression joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InnerJoin (left As DbExpressionBinding, right As DbExpressionBinding, joinCondition As DbExpression) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ InnerJoin(System::Data::Common::CommandTrees::DbExpressionBinding ^ left, System::Data::Common::CommandTrees::DbExpressionBinding ^ right, System::Data::Common::CommandTrees::DbExpression ^ joinCondition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
        <Parameter Name="joinCondition" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="71aa0-368">Eine <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, die das linke Mengenargument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-368">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="71aa0-369">Eine <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, die das rechte Mengenargument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-369">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the right set argument.</span>
          </span>
        </param>
        <param name="joinCondition">
          <span data-ttu-id="71aa0-370">Ein Ausdruck, der die Bedingung für den Join angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-370">An expression that specifies the condition on which to join.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-371">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />, der die von der linken und der rechten Ausdrucksbindung in der angegebenen Joinbedingung festgelegten Mengen verknüpft, indem InnerJoin als <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-371">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expression bindings, on the specified join condition, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-372">Eine neue DbJoinExpression-Klasse, mit InnerJoin als <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />-Enumeration, die den Vorgang des vollständigen äußeren Joins darstellt, der auf den linken und rechten Eingabesets unter der angegebenen Joinbedingung angewendet wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-372">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right     input sets under the given join condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-373">
            <paramref name="left" />, <paramref name="right" /> oder <paramref name="joinCondition" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-373">
              <paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-374">
            <paramref name="joinCondition" /> weist keinen booleschen Ergebnistyp auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-374">
              <paramref name="joinCondition" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIntersectExpression Intersect (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIntersectExpression Intersect(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Intersect (left As DbExpression, right As DbExpression) As DbIntersectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIntersectExpression ^ Intersect(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIntersectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="71aa0-375">Ein Ausdruck, der das linke Mengenargument definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-375">An expression that defines the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="71aa0-376">Ein Ausdruck, der das rechte Mengenargument definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-376">An expression that defines the right set argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-377">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" />, die die Schnittmenge der linken und der rechten Mengenargumente berechnet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-377">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /> that computes the intersection of the left and right set arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-378">Ein neues DbIntersectExpression, das die Schnittmenge der linken und der rechten Argumente berechnet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-378">A new DbIntersectExpression that represents the intersection of the left and right arguments.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-379">
            <paramref name="left" /> oder <paramref name="right" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-379">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-380">Zwischen <paramref name="left" /> oder <paramref name="right" /> ist kein allgemeiner Auflistungsergebnistyp vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-380">No common collection result type exists between <paramref name="left" /> or <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71aa0-381">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" />, der die Anwendung der angegebenen Lambda-Funktion auf die angegebenen Argumente darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-381">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> representing the application of the specified Lambda function to the given arguments.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambdaExpression Invoke(class System.Data.Common.CommandTrees.DbLambda lambda, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (lambda As DbLambda, arguments As IEnumerable(Of DbExpression)) As DbLambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLambdaExpression ^ Invoke(System::Data::Common::CommandTrees::DbLambda ^ lambda, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lambda" Type="System.Data.Common.CommandTrees.DbLambda" RefType="this" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="lambda">
          <span data-ttu-id="71aa0-382">Eine <see cref="T:System.Data.Common.CommandTrees.DbLambda" />-Instanz, die die anzuwendende Lambda-Funktion darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-382">A <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> instance representing the Lambda function to apply.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="71aa0-383">Eine Liste von Ausdrücken, die die Argumente bereitstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-383">A list of expressions that provide the arguments.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-384">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" />, der die Anwendung der angegebenen Lambda-Funktion auf die angegebenen Argumente darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-384">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> representing the application of the specified Lambda function to the given arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-385">Ein neues DbLambdaExpression, das die Lambda-Funktions-Anwendung darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-385">A new DbLambdaExpression representing the Lambda function application.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-386">
            <paramref name="lambda" /> oder <paramref name="arguments" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-386">
              <paramref name="lambda" /> or <paramref name="arguments" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-387">Die Anzahl von <paramref name="arguments" /> entspricht der Anzahl der Variablen nicht, die von <paramref name="lambda" /> deklariert wurde, oder <paramref name="arguments" /> enthält einen Ausdruck, der einen Ergebnistyp hat, der nicht gleich dem entsprechenden Variablentyp ist und auch nicht entsprechend heraufgestuft werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-387">The count of <paramref name="arguments" /> does not equal the number of variables declared by <paramref name="lambda" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding variable type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, params System.Data.Common.CommandTrees.DbExpression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambdaExpression Invoke(class System.Data.Common.CommandTrees.DbLambda lambda, class System.Data.Common.CommandTrees.DbExpression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (lambda As DbLambda, ParamArray arguments As DbExpression()) As DbLambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLambdaExpression ^ Invoke(System::Data::Common::CommandTrees::DbLambda ^ lambda, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lambda" Type="System.Data.Common.CommandTrees.DbLambda" RefType="this" />
        <Parameter Name="arguments" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="lambda">
          <span data-ttu-id="71aa0-388">Eine <see cref="T:System.Data.Common.CommandTrees.DbLambda" />-Instanz, die die anzuwendende Lambda-Funktion darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-388">A <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> instance representing the Lambda function to apply.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="71aa0-389">Ausdrücke, die die Argumente bereitstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-389">Expressions that provide the arguments.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-390">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" />, der die Anwendung der angegebenen Lambda-Funktion auf die angegebenen Argumente darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-390">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> representing the application of the specified Lambda function to the given arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-391">Ein neues DbLambdaExpression, das die Lambda-Funktions-Anwendung darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-391">A new DbLambdaExpression representing the Lambda function application.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-392">
            <paramref name="lambda" /> oder <paramref name="arguments" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-392">
              <paramref name="lambda" /> or <paramref name="arguments" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-393">Die Anzahl von <paramref name="arguments" /> entspricht der Anzahl der Variablen nicht, die von <paramref name="lambda" /> deklariert wurde, oder <paramref name="arguments" /> enthält einen Ausdruck, der einen Ergebnistyp hat, der nicht gleich dem entsprechenden Variablentyp ist und auch nicht entsprechend heraufgestuft werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-393">The count of <paramref name="arguments" /> does not equal the number of variables declared by <paramref name="lambda" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding variable type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Invoke(class System.Data.Metadata.Edm.EdmFunction function, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (function As EdmFunction, arguments As IEnumerable(Of DbExpression)) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Invoke(System::Data::Metadata::Edm::EdmFunction ^ function, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="71aa0-394">Metadaten für die aufzurufende Funktion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-394">Metadata for the function to invoke.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="71aa0-395">Eine Liste von Ausdrücken, die die Argumente für die Funktion bereitstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-395">A list of expressions that provide the arguments to the function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-396">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die den Aufruf der angegebenen Funktion mit den angegebenen Argumenten darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-396">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> representing the invocation of the specified function with the given arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-397">Eine neue DbFunctionExpression, die den Funktionsaufruf darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-397">A new DbFunctionExpression representing the function invocation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-398">
            <paramref name="function" /> ist NULL, oder <paramref name="arguments" /> ist NULL bzw. enthält NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-398">
              <paramref name="function" /> is null, or <paramref name="arguments" /> is null or contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-399">Die Anzahl der <paramref name="arguments" /> entspricht nicht der Anzahl der von <paramref name="function" /> deklarierten Parameter, oder <paramref name="arguments" /> enthält einen Ausdruck, dessen Ergebnistyp nicht gleich dem entsprechenden Funktionsparametertyp bzw. nicht dazu heraufstufbar ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-399">The count of <paramref name="arguments" /> does not equal the number of parameters declared by <paramref name="function" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding function parameter type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, params System.Data.Common.CommandTrees.DbExpression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Invoke(class System.Data.Metadata.Edm.EdmFunction function, class System.Data.Common.CommandTrees.DbExpression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (function As EdmFunction, ParamArray arguments As DbExpression()) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Invoke(System::Data::Metadata::Edm::EdmFunction ^ function, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="arguments" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="71aa0-400">Metadaten für die aufzurufende Funktion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-400">Metadata for the function to invoke.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="71aa0-401">Ausdrücke, die die Argumente für die Funktion bereitstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-401">Expressions that provide the arguments to the function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-402">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die den Aufruf der angegebenen Funktion mit den angegebenen Argumenten darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-402">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> representing the invocation of the specified function with the given arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-403">Eine neue DbFunctionExpression, die den Funktionsaufruf darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-403">A new DbFunctionExpression representing the function invocation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-404">
            <paramref name="function" /> ist NULL, oder <paramref name="arguments" /> ist NULL bzw. enthält NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-404">
              <paramref name="function" /> is null, or <paramref name="arguments" /> is null or contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-405">Die Anzahl der <paramref name="arguments" /> entspricht nicht der Anzahl der von <paramref name="function" /> deklarierten Parameter, oder <paramref name="arguments" /> enthält einen Ausdruck, dessen Ergebnistyp nicht gleich dem entsprechenden Funktionsparametertyp bzw. nicht dazu heraufstufbar ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-405">The count of <paramref name="arguments" /> does not equal the number of parameters declared by <paramref name="function" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding function parameter type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsEmptyExpression IsEmpty (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsEmptyExpression IsEmpty(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsEmpty (argument As DbExpression) As DbIsEmptyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsEmptyExpression ^ IsEmpty(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsEmptyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="71aa0-406">Ein Ausdruck, der das Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-406">An expression that specifies the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-407">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" />, die bestimmt, ob das angegebene Mengenargument ein leerer Satz ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-407">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> that determines whether the specified set argument is an empty set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-408">Ein neues DbIsEmptyExpression mit dem angegebenen Argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-408">A new DbIsEmptyExpression with the specified argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-409">
            <paramref name="argument" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-409">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-410">
            <paramref name="argument" /> weist keinen Auflistungsergebnistyp auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-410">
              <paramref name="argument" /> does not have a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsNullExpression IsNull (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsNullExpression IsNull(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsNull (argument As DbExpression) As DbIsNullExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsNullExpression ^ IsNull(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsNullExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="71aa0-411">Ein Ausdruck, der das Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-411">An expression that specifies the argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-412">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" />, der bestimmt, ob das angegebene Argument NULL ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-412">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /> that determines whether the specified argument is null.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-413">Ein neues DbIsEmptyExpression mit dem angegebenen Argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-413">A new DbIsNullExpression with the specified argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-414">
            <paramref name="argument" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-414">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-415">
            <paramref name="argument" /> weist einen Auflistungsergebnistyp auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-415">
              <paramref name="argument" /> has a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsOf">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsOfExpression IsOf (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsOfExpression IsOf(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsOf (argument As DbExpression, type As TypeUsage) As DbIsOfExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsOfExpression ^ IsOf(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsOfExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="71aa0-416">Ein Ausdruck, der die Instanz angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-416">An expression that specifies the instance.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="71aa0-417">Typmetadaten, die den Typ angeben, mit denen der Ergebnistyp der Instanz verglichen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-417">Type metadata that specifies the type that the instance's result type should be compared to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-418">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" />, die bestimmt, ob das angegebene Argument vom angegebenen Typ oder einem Untertyp ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-418">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> that determines whether the given argument is of the specified type or a subtype.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-419">Ein neues DbIsOfExpression mit der angegebenen Instanz und dem Typ und DbExpressionKind IsOf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-419">A new DbIsOfExpression with the specified instance and type and DbExpressionKind IsOf.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71aa0-420">DbIsOfExpression erfordert, dass `argument` wurde von einem polymorphen Ergebnistyp, und dass `type` ist ein Typ aus der gleichen Typhierarchie wie dieser Ergebnistyp.</span><span class="sxs-lookup"><span data-stu-id="71aa0-420">DbIsOfExpression requires that `argument` has a polymorphic result type, and that `type` is a type from the same type hierarchy as that result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-421">
            <paramref name="argument" /> oder <paramref name="type" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-421">
              <paramref name="argument" /> or <paramref name="type" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-422">
            <paramref name="type" /> befindet sich nicht in der gleichen Typenhierarchie wie der Ergebnistyp von <paramref name="argument" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-422">
              <paramref name="type" /> is not in the same type hierarchy as the result type of <paramref name="argument" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsOfOnly">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsOfExpression IsOfOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsOfExpression IsOfOnly(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsOfOnly (argument As DbExpression, type As TypeUsage) As DbIsOfExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsOfExpression ^ IsOfOnly(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsOfExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="71aa0-423">Ein Ausdruck, der die Instanz angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-423">An expression that specifies the instance.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="71aa0-424">Typmetadaten, die den Typ angeben, mit denen der Ergebnistyp der Instanz verglichen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-424">Type metadata that specifies the type that the instance's result type should be compared to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-425">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" />-Ausdruck, der bestimmt, ob das angegebene Argument vom angegebenen Typ und ausschließlich von diesem Typ (kein Untertyp) ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-425">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> expression that determines whether the given argument is of the specified type, and only that type (not a subtype).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-426">Ein neues DbIsOfExpression mit der angegebenen Instanz und dem Typ und DbExpressionKind IsOfOnly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-426">A new DbIsOfExpression with the specified instance and type and DbExpressionKind IsOfOnly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71aa0-427">DbIsOfExpression erfordert, dass `argument` wurde von einem polymorphen Ergebnistyp, und dass `type` ist ein Typ aus der gleichen Typhierarchie wie dieser Ergebnistyp.</span><span class="sxs-lookup"><span data-stu-id="71aa0-427">DbIsOfExpression requires that `argument` has a polymorphic result type, and that `type` is a type from the same type hierarchy as that result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-428">
            <paramref name="argument" /> oder <paramref name="type" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-428">
              <paramref name="argument" /> or <paramref name="type" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-429">
            <paramref name="type" /> befindet sich nicht in der gleichen Typenhierarchie wie der Ergebnistyp von <paramref name="argument" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-429">
              <paramref name="type" /> is not in the same type hierarchy as the result type of <paramref name="argument" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression Join (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; outerKey, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; innerKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression Join(class System.Data.Common.CommandTrees.DbExpression outer, class System.Data.Common.CommandTrees.DbExpression inner, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; outerKey, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; innerKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join (outer As DbExpression, inner As DbExpression, outerKey As Func(Of DbExpression, DbExpression), innerKey As Func(Of DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ Join(System::Data::Common::CommandTrees::DbExpression ^ outer, System::Data::Common::CommandTrees::DbExpression ^ inner, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ outerKey, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ innerKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outer" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="inner" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="outerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="innerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="outer">
          <span data-ttu-id="71aa0-430">Eine <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, die das äußere Mengenargument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-430">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the outer set argument.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="71aa0-431">Eine <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, die das innere Mengenargument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-431">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the inner set argument.</span>
          </span>
        </param>
        <param name="outerKey">
          <span data-ttu-id="71aa0-432">Eine Methode, die angibt, wie der Wert des äußeren Schlüssels von einem Element der äußeren Menge abgeleitet werden sollte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-432">A method that specifies how the outer key value should be derived from an element of the outer set.</span>
          </span>
        </param>
        <param name="innerKey">
          <span data-ttu-id="71aa0-433">Eine Methode, die angibt, wie der Wert des inneren Schlüssels von einem Element der inneren Menge abgeleitet werden sollte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-433">A method that specifies how the inner key value should be derived from an element of the inner set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-434">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />, die die von den äußeren und inneren Ausdrücken angegebenen Mengen nach einer Gleichheitsbedingung zwischen den angegebenen äußeren und inneren Schlüsseln verknüpft, wobei InnerJoin als <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-434">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the outer and inner expressions, on an equality condition between the specified outer and inner keys, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-435">Eine neue DbJoinExpression mit einer <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> von InnerJoin, die den Vorgang der inneren Verknüpfung darstellt, der auf den linken und rechten Eingabeset unter einer Verknüpfungsbedingung, die die Werte des äußeren und inneren Schlüssels auf Gleichheit vergleicht, angewendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-435">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-436">Der von <paramref name="outerKey" /> oder <paramref name="innerKey" /> erzeugte Ausdruck ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-436">The expression produced by <paramref name="outerKey" /> or <paramref name="innerKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-437">Die von <paramref name="outerKey" /> und <paramref name="innerKey" /> erzeugten Ausdrücke sind nicht auf Gleichheit vergleichbar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-437">The expressions produced by <paramref name="outerKey" /> and <paramref name="innerKey" /> are not comparable for equality.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Join&lt;TSelector&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression Join&lt;TSelector&gt; (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; outerKey, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; innerKey, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression Join&lt;TSelector&gt;(class System.Data.Common.CommandTrees.DbExpression outer, class System.Data.Common.CommandTrees.DbExpression inner, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; outerKey, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; innerKey, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, !!TSelector&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join(Of TSelector) (outer As DbExpression, inner As DbExpression, outerKey As Func(Of DbExpression, DbExpression), innerKey As Func(Of DbExpression, DbExpression), selector As Func(Of DbExpression, DbExpression, TSelector)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSelector&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ Join(System::Data::Common::CommandTrees::DbExpression ^ outer, System::Data::Common::CommandTrees::DbExpression ^ inner, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ outerKey, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ innerKey, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, TSelector&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSelector" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="inner" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="outerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="innerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSelector">
          <span data-ttu-id="71aa0-438">Der Typ des der <c>Selektor</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-438">The type of the <c>selector</c>.</span>
          </span>
        </typeparam>
        <param name="outer">
          <span data-ttu-id="71aa0-439">Eine <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, die das äußere Mengenargument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-439">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the outer set argument.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="71aa0-440">Eine <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, die das innere Mengenargument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-440">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the inner set argument.</span>
          </span>
        </param>
        <param name="outerKey">
          <span data-ttu-id="71aa0-441">Eine Methode, die angibt, wie der Wert des äußeren Schlüssels von einem Element der äußeren Menge abgeleitet werden sollte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-441">A method that specifies how the outer key value should be derived from an element of the outer set.</span>
          </span>
        </param>
        <param name="innerKey">
          <span data-ttu-id="71aa0-442">Eine Methode, die angibt, wie der Wert des inneren Schlüssels von einem Element der inneren Menge abgeleitet werden sollte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-442">A method that specifies how the inner key value should be derived from an element of the inner set.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="71aa0-443">Eine Methode, die angibt, wie ein Element des Resultsets von Elementen der inneren und äußeren Menge abgeleitet werden sollte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-443">A method that specifies how an element of the result set should be derived from elements of the inner and outer sets.</span>
          </span>
          <span data-ttu-id="71aa0-444">Diese Methode muss eine Instanz eines Typs produzieren, der mit „Join“ kompatibel ist und in eine <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> aufgelöst werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-444">This method must produce an instance of a type that is compatible with Join and can be resolved into a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span>
          </span>
          <span data-ttu-id="71aa0-445">Anforderungen an die Kompatibilität für <c>TSelector</c> werden in den Hinweisen beschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-445">Compatibility requirements for <c>TSelector</c> are described in remarks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-446">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />, die den angegebenen Selektor über die von den äußeren und inneren Ausdrücken angegebenen Mengen projiziert, verknüpft nach einer Gleichheitsbedingung zwischen den angegebenen äußeren und inneren Schlüsseln, wobei InnerJoin als <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-446">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that projects the specified selector over the sets specified by the outer and inner expressions, joined on an equality condition between the specified outer and inner keys, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-447">Eine neue DbProjectExpression mit dem angegebenen Selektor als Projektion und eine neue DbJoinExpression als Eingabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-447">A new DbProjectExpression with the specified selector as its projection, and a new DbJoinExpression as its input.</span>
          </span>
          <span data-ttu-id="71aa0-448">Die eingegebene DbJoinExpression wird mit einer <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> von InnerJoin erstellt, die den Vorgang der inneren Verknüpfung darstellt, der auf den linken und rechten Eingabeset unter einer Verknüpfungsbedingung, die die Werte des äußeren und inneren Schlüssels auf Gleichheit vergleicht, angewendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-448">The input DbJoinExpression is created with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71aa0-449">Für die Kompatibilität bei Join `TSelector` abgeleitet werden müssen <xref:System.Data.Common.CommandTrees.DbExpression>, oder ein anonymer Typ mit DbExpression-abgeleiteten Eigenschaften werden muss.</span><span class="sxs-lookup"><span data-stu-id="71aa0-449">To be compatible with Join, `TSelector` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties.</span></span> <span data-ttu-id="71aa0-450">Die folgenden Beispiele von unterstützten Typen sind `TSelector`:</span><span class="sxs-lookup"><span data-stu-id="71aa0-450">The following are examples of supported types for `TSelector`:</span></span>  
  
```  
outer.Join(inner, o => o.Property("ID"), i => i.Property("ID"), (o, i) => o.Property("Name"))  
```  
  
 <span data-ttu-id="71aa0-451">(`TSelector` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span><span class="sxs-lookup"><span data-stu-id="71aa0-451">(`TSelector` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span></span>  
  
```  
outer.Join(inner, o => o.Property("ID"), i => i.Property("ID"), (o, i) => new { OName = o.Property("Name"), IName = i.Property("Name") })  
```  
  
 <span data-ttu-id="71aa0-452">(`TSelector` ist ein anonymer Typ mit DbExpression-abgeleiteten Eigenschaften).</span><span class="sxs-lookup"><span data-stu-id="71aa0-452">(`TSelector` is an anonymous type with DbExpression-derived properties).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-453">Das Ergebnis von <paramref name="selector" /> nach der Konvertierung in DbExpression ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-453">The result of <paramref name="selector" /> is null after conversion to DbExpression.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-454">Das Ergebnis von <paramref name="Selector" /> ist nicht kompatibel mit SelectMany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-454">The result of <paramref name="Selector" /> is not compatible with SelectMany.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Lambda">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71aa0-455">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> mit den angegebenen Inline-Lambda-Funktionsimplementierungs- und formalen Parametern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-455">Creates a <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> with the specified inline Lambda function implementation and formal parameters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; variables);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Lambda(class System.Data.Common.CommandTrees.DbExpression body, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Function Lambda (body As DbExpression, variables As IEnumerable(Of DbVariableReferenceExpression)) As DbLambda" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbLambda ^ Lambda(System::Data::Common::CommandTrees::DbExpression ^ body, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbVariableReferenceExpression ^&gt; ^ variables);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="71aa0-456">Ein Ausdruck, der die Logik der Lambda-Funktion definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-456">An expression that defines the logic of the Lambda function.</span>
          </span>
        </param>
        <param name="variables">
          <span data-ttu-id="71aa0-457">Eine <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />-Sammlung, die die formalen Parameter der Lambda-Funktion darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-457">A <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> collection that represents the formal parameters to the Lambda function.</span>
          </span>
          <span data-ttu-id="71aa0-458">Diese Variablen sind gültig für die Verwendung im <c>body</c>-Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-458">These variables are valid for use in the <c>body</c> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-459">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> mit den angegebenen Inline-Lambda-Funktionsimplementierungs- und formalen Parametern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-459">Creates a <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> with the specified inline Lambda function implementation and formal parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-460">Ein neues DbLambda, das eine Inline- Lambda-Funktion mit dem angegebenen Text und den formalen Parametern beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-460">A new DbLambda that describes an inline Lambda function with the specified body and formal parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-461">
            <paramref name="variables" /> ist NULL oder enthält NULL oder  <paramref name="body" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-461">
              <paramref name="variables" /> is null or contains null, or <paramref name="body" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-462">
            <paramref name="variables" /> enthält mehr als ein Element mit dem gleichen Variablennamen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-462">
              <paramref name="variables" /> contains more than one element with the same variable name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, params System.Data.Common.CommandTrees.DbVariableReferenceExpression[] variables);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Lambda(class System.Data.Common.CommandTrees.DbExpression body, class System.Data.Common.CommandTrees.DbVariableReferenceExpression[] variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Lambda (body As DbExpression, ParamArray variables As DbVariableReferenceExpression()) As DbLambda" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbLambda ^ Lambda(System::Data::Common::CommandTrees::DbExpression ^ body, ... cli::array &lt;System::Data::Common::CommandTrees::DbVariableReferenceExpression ^&gt; ^ variables);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="variables" Type="System.Data.Common.CommandTrees.DbVariableReferenceExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="71aa0-463">Ein Ausdruck, der die Logik der Lambda-Funktion definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-463">An expression that defines the logic of the Lambda function.</span>
          </span>
        </param>
        <param name="variables">
          <span data-ttu-id="71aa0-464">Eine <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />-Sammlung, die die formalen Parameter der Lambda-Funktion darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-464">A <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> collection that represents the formal parameters to the Lambda function.</span>
          </span>
          <span data-ttu-id="71aa0-465">Diese Variablen sind gültig für die Verwendung im <c>body</c>-Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-465">These variables are valid for use in the <c>body</c> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-466">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> mit den angegebenen Inline-Lambda-Funktionsimplementierungs- und formalen Parametern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-466">Creates a <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> with the specified inline Lambda function implementation and formal parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-467">Ein neues DbLambda, das eine Inline- Lambda-Funktion mit dem angegebenen Text und den formalen Parametern beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-467">A new DbLambda that describes an inline Lambda function with the specified body and formal parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-468">
            <paramref name="variables" /> ist NULL oder enthält NULL oder  <paramref name="body" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-468">
              <paramref name="variables" /> is null or contains null, or <paramref name="body" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-469">
            <paramref name="variables" /> enthält mehr als ein Element mit dem gleichen Variablennamen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-469">
              <paramref name="variables" /> contains more than one element with the same variable name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LeftOuterJoin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71aa0-470">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />, der die vom linken und vom rechten Ausdruck in der angegebenen Joinbedingung festgelegten Mengen verknüpft, indem LeftOuterJoin als <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-470">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using LeftOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LeftOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LeftOuterJoin (left As DbExpression, right As DbExpression, joinCondition As Func(Of DbExpression, DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ LeftOuterJoin(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ joinCondition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="joinCondition" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="71aa0-471">Ein <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, der das linke set-Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-471">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="71aa0-472">Ein <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, der das rechte set-Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-472">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the right set argument.</span>
          </span>
        </param>
        <param name="joinCondition">
          <span data-ttu-id="71aa0-473">Eine Methode, die die Bedingung darstellt, bei der die Verknüpfung stattfinden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-473">A method representing the condition on which to join.</span>
          </span>
          <span data-ttu-id="71aa0-474">Diese Methode muss einen Ausdruck mit einem booleschen Ergebnistyp erzeugen, der die Logik der Joinbedingung bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-474">This method must produce an expression with a Boolean result type that provides the logic of the join condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-475">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />, der die vom linken und vom rechten Ausdruck in der angegebenen Joinbedingung festgelegten Mengen verknüpft, indem LeftOuterJoin als <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-475">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using LeftOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-476">Ein neues DbJoinExpression, mit <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> von LeftOuterJoin, der den Vorgang des linken äußeren Join darstellt, der auf den linken und rechten Eingabesets unter der angegebenen Joinbedingung angewendet wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-476">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of LeftOuterJoin, that represents the left outer join operation applied to the left and right input sets under the given join condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-477">Der von <paramref name="joinCondition" /> erzeugte Ausdruck ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-477">The expression produced by <paramref name="joinCondition" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-478">Der von <paramref name="joinCondition" /> erzeugte Ausdruck besitzt keinen booleschen Ergebnistyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-478">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LeftOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin(class System.Data.Common.CommandTrees.DbExpressionBinding left, class System.Data.Common.CommandTrees.DbExpressionBinding right, class System.Data.Common.CommandTrees.DbExpression joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LeftOuterJoin (left As DbExpressionBinding, right As DbExpressionBinding, joinCondition As DbExpression) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ LeftOuterJoin(System::Data::Common::CommandTrees::DbExpressionBinding ^ left, System::Data::Common::CommandTrees::DbExpressionBinding ^ right, System::Data::Common::CommandTrees::DbExpression ^ joinCondition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
        <Parameter Name="joinCondition" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="71aa0-479">Eine <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, die das linke Mengenargument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-479">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="71aa0-480">Eine <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, die das rechte Mengenargument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-480">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the right set argument.</span>
          </span>
        </param>
        <param name="joinCondition">
          <span data-ttu-id="71aa0-481">Ein Ausdruck, der die Bedingung für den Join angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-481">An expression that specifies the condition on which to join.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-482">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />, der die von der linken und der rechten Ausdrucksbindung in der angegebenen Joinbedingung festgelegten Mengen verknüpft, indem LeftOuterJoin als <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-482">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expression bindings, on the specified join condition, using LeftOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-483">Eine neue DbJoinExpression-Klasse, mit LeftOuterJoin als <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />-Enumeration, die den Vorgang des linken äußeren Joins darstellt, der auf den linken und rechten Eingabesets unter der angegebenen Joinbedingung angewendet wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-483">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of LeftOuterJoin, that represents the left outer join operation applied to the left and right     input sets under the given join condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-484">
            <paramref name="left" />, <paramref name="right" /> oder <paramref name="joinCondition" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-484">
              <paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-485">
            <paramref name="joinCondition" /> weist keinen booleschen Ergebnistyp auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-485">
              <paramref name="joinCondition" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LessThan">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression LessThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression LessThan(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LessThan (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ LessThan(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="71aa0-486">Ein Ausdruck, der das linke Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-486">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="71aa0-487">Ein Ausdruck, der das rechte Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-487">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-488">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />, die bestimmt, ob das linke Argument kleiner als das rechte Argument ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-488">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is less than the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-489">Ein neues DbComparisonExpression, das den Kleiner-als-Vergleich darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-489">A new DbComparisonExpression representing the less-than comparison.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-490">
            <paramref name="left" /> oder <paramref name="right" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-490">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-491">Zwischen <paramref name="left" /> und <paramref name="right" /> ist kein allgemeiner, auf Reihenfolge vergleichbarer Ergebnistyp vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-491">No common order-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression LessThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression LessThanOrEqual(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LessThanOrEqual (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ LessThanOrEqual(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="71aa0-492">Ein Ausdruck, der das linke Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-492">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="71aa0-493">Ein Ausdruck, der das rechte Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-493">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-494">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />, die bestimmt, ob das linke Argument kleiner oder gleich dem rechten Argument ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-494">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is less than or equal to the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-495">Ein neues DbComparisonExpression, das das Kleiner-als-oder-gleich-Vergleich darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-495">A new DbComparisonExpression representing the less-than-or-equal-to comparison.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-496">
            <paramref name="left" /> oder <paramref name="right" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-496">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-497">Zwischen <paramref name="left" /> und <paramref name="right" /> ist kein allgemeiner Ergebnistyp, der sowohl auf Gleichheit als auch auf Reihenfolge vergleichbar ist, vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-497">No common result type that is both equality- and order-comparable exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Like">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71aa0-498">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" />, die die angegebene Eingabezeichenfolge mit dem angegebenen Muster vergleicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-498">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that compares the specified input string to the given pattern.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Like">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLikeExpression Like(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Like (argument As DbExpression, pattern As DbExpression) As DbLikeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLikeExpression ^ Like(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ pattern);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLikeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="pattern" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="71aa0-499">Ein Ausdruck, der die Eingabezeichenfolge angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-499">An expression that specifies the input string.</span>
          </span>
        </param>
        <param name="pattern">
          <span data-ttu-id="71aa0-500">Ein Ausdruck, der die Musterzeichenfolge angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-500">An expression that specifies the pattern string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-501">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" />, die die angegebene Eingabezeichenfolge mit dem angegebenen Muster vergleicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-501">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that compares the specified input string to the given pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-502">Ein neues DbLikeExpression mit der angegebenen Eingabe, Muster und einem Escapezeichen NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-502">A new DbLikeExpression with the specified input, pattern and a null escape.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-503">
            <paramref name="Argument" /> oder <paramref name="pattern" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-503">
              <paramref name="Argument" /> or <paramref name="pattern" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-504">
            <paramref name="Argument" /> oder <paramref name="pattern" /> weist keinen Zeichenfolgenergebnistyp auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-504">
              <paramref name="Argument" /> or <paramref name="pattern" /> does not have a string result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Like">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern, System.Data.Common.CommandTrees.DbExpression escape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLikeExpression Like(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression pattern, class System.Data.Common.CommandTrees.DbExpression escape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Like (argument As DbExpression, pattern As DbExpression, escape As DbExpression) As DbLikeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLikeExpression ^ Like(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ pattern, System::Data::Common::CommandTrees::DbExpression ^ escape);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLikeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="pattern" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="escape" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="71aa0-505">Ein Ausdruck, der die Eingabezeichenfolge angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-505">An expression that specifies the input string.</span>
          </span>
        </param>
        <param name="pattern">
          <span data-ttu-id="71aa0-506">Ein Ausdruck, der die Musterzeichenfolge angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-506">An expression that specifies the pattern string.</span>
          </span>
        </param>
        <param name="escape">
          <span data-ttu-id="71aa0-507">Ein optionaler Ausdruck, der die Escapezeichenfolge angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-507">An optional expression that specifies the escape string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-508">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" />, der mithilfe der optionalen Escapezeichenfolge die angegebene Eingabezeichenfolge mit dem angegebenen Muster vergleicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-508">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that compares the specified input string to the given pattern using the optional escape.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-509">Ein neues DbLikeExpression mit der angegebenen Eingabe, Muster und einem Escapezeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-509">A new DbLikeExpression with the specified input, pattern and escape.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-510">
            <paramref name="argument" />, <paramref name="pattern" />, oder <paramref name="escape" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-510">
              <paramref name="argument" />,   <paramref name="pattern" /> or <paramref name="escape" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-511">
            <paramref name="argument" />, <paramref name="pattern" /> oder <paramref name="escape" /> weist keinen Zeichenfolgenergebnistyp auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-511">
              <paramref name="argument" />,   <paramref name="pattern" /> or <paramref name="escape" /> does not have a string result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Limit">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLimitExpression Limit (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLimitExpression Limit(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Limit (argument As DbExpression, count As DbExpression) As DbLimitExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLimitExpression ^ Limit(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLimitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="71aa0-512">Ein Ausdruck, der die Eingabeauflistung angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-512">An expression that specifies the input collection.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="71aa0-513">Ein Ausdruck, der den Grenzwert angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-513">An expression that specifies the limit value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-514">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" />, der die Anzahl der Elemente in der Argumentsammlung auf den angegebenen Zählgrenzwert beschränkt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-514">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> that restricts the number of elements in the Argument collection to the specified count Limit value.</span>
          </span>
          <span data-ttu-id="71aa0-515">Verknüpfte Ergebnisse sind nicht in der Ausgabe enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-515">Tied results are not included in the output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-516">Ein neues DbLimitExpression mit den angegebenen Argument- und Zählgrenzwerten, das verknüpfte Ergebnisse nicht einschließt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-516">A new DbLimitExpression with the specified argument and count limit values that does not include tied results.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-517">
            <paramref name="argument" /> oder <paramref name="count" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-517">
              <paramref name="argument" /> or <paramref name="count" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-518">
            <paramref name="argument" /> hat keinen Auflistungsergebnistyp, oder <paramref name="count" /> hat keinen Ergebnistyp, der gleich einem 64-Bit-Ganzzahl-Typ oder zu einem solchen heraufstufbar ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-518">
              <paramref name="argument" /> does not have a collection result type, or <paramref name="count" /> does not have a result type that is equal or promotable to a 64-bit integer type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Minus">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Minus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Minus(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Minus (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Minus(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="71aa0-519">Ein Ausdruck, der das linke Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-519">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="71aa0-520">Ein Ausdruck, der das rechte Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-520">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-521">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />, die das rechte Argument vom linken Argument subtrahiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-521">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that subtracts the right argument from the left argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-522">Ein neues DbArithmeticExpression, der den Substraktionsvorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-522">A new DbArithmeticExpression representing the subtraction operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-523">
            <paramref name="left" /> oder <paramref name="right" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-523">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-524">Zwischen <paramref name="left" /> und <paramref name="right" /> ist kein gemeinsamer numerischer Ergebnistyp vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-524">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Modulo">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Modulo (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Modulo(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Modulo (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Modulo(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="71aa0-525">Ein Ausdruck, der das linke Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-525">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="71aa0-526">Ein Ausdruck, der das rechte Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-526">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-527">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />, die den Rest der Division des linken Arguments durch das rechte Argument berechnet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-527">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that computes the remainder of the left argument divided by the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-528">Ein neues DbArithmeticExpression, der den Modulovorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-528">A new DbArithmeticExpression representing the modulo operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-529">
            <paramref name="left" /> oder <paramref name="right" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-529">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-530">Zwischen <paramref name="left" /> und <paramref name="right" /> ist kein gemeinsamer numerischer Ergebnistyp vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-530">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Multiply (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Multiply(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Multiply (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Multiply(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="71aa0-531">Ein Ausdruck, der das linke Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-531">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="71aa0-532">Ein Ausdruck, der das rechte Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-532">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-533">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />, die das linke Argument mit dem rechten Argument multipliziert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-533">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that multiplies the left argument by the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-534">Ein neues DbArithmeticExpression, der die Multiplikation darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-534">A new DbArithmeticExpression representing the multiplication operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-535">
            <paramref name="left" /> oder <paramref name="right" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-535">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-536">Zwischen <paramref name="left" /> und <paramref name="right" /> ist kein gemeinsamer numerischer Ergebnistyp vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-536">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71aa0-537">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />, der die Navigation einer Zusammensetzungs- oder Zuordnungsbeziehung darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-537">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> representing the navigation of a composition or association relationship.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Common.CommandTrees.DbExpression navigateFrom, System.Data.Metadata.Edm.RelationshipEndMember fromEnd, System.Data.Metadata.Edm.RelationshipEndMember toEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate(class System.Data.Common.CommandTrees.DbExpression navigateFrom, class System.Data.Metadata.Edm.RelationshipEndMember fromEnd, class System.Data.Metadata.Edm.RelationshipEndMember toEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Navigate (navigateFrom As DbExpression, fromEnd As RelationshipEndMember, toEnd As RelationshipEndMember) As DbRelationshipNavigationExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRelationshipNavigationExpression ^ Navigate(System::Data::Common::CommandTrees::DbExpression ^ navigateFrom, System::Data::Metadata::Edm::RelationshipEndMember ^ fromEnd, System::Data::Metadata::Edm::RelationshipEndMember ^ toEnd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRelationshipNavigationExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigateFrom" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="fromEnd" Type="System.Data.Metadata.Edm.RelationshipEndMember" />
        <Parameter Name="toEnd" Type="System.Data.Metadata.Edm.RelationshipEndMember" />
      </Parameters>
      <Docs>
        <param name="navigateFrom">
          <span data-ttu-id="71aa0-538">Ein Ausdruck, der die Instanz angibt, von der die Navigation erfolgen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-538">An expression that specifies the instance from which navigation should occur.</span>
          </span>
        </param>
        <param name="fromEnd">
          <span data-ttu-id="71aa0-539">Metadaten für die Eigenschaft, die das Ende der Beziehung darstellt, von dem die Navigation erfolgen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-539">Metadata for the property that represents the end of the relationship from which navigation should occur.</span>
          </span>
        </param>
        <param name="toEnd">
          <span data-ttu-id="71aa0-540">Metadaten für die Eigenschaft, die das Ende der Beziehung darstellt, zu dem die Navigation erfolgen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-540">Metadata for the property that represents the end of the relationship to which navigation should occur.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-541">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />, der die Navigation einer Zusammensetzungs- oder Zuordnungsbeziehung darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-541">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> representing the navigation of a composition or association relationship.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-542">Ein neues DbRelationshipNavigationExpression, das die Navigation der angegebenen Von-und-Zu-Beziehungsenden des angegebenen Beziehungstyps aus der angegebenen Navigationsquell-Instanz darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-542">A new DbRelationshipNavigationExpression representing the navigation of the specified from and to relation ends of the specified relation type from the specified navigation source instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71aa0-543"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> erfordert, dass Navigation immer aus einem Verweis erfolgt, weshalb `navigateFrom` muss immer einen Verweistyp für das Ergebnis haben.</span><span class="sxs-lookup"><span data-stu-id="71aa0-543"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requires that navigation always occur from a reference, and so `navigateFrom` must always have a reference result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-544">
            <paramref name="fromEnd" />, <paramref name="toEnd" /> oder <paramref name="navigateFrom" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-544">
              <paramref name="fromEnd" />,  <paramref name="toEnd" /> or <paramref name="navigateFrom" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-545">
            <paramref name="fromEnd" /> und <paramref name="toEnd" /> werden nicht vom gleichen Beziehungstyp deklariert, oder <paramref name="navigateFrom" /> hat einen Ergebnistyp, der nicht kompatibel mit dem Eigenschaftstyp <paramref name="fromEnd" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-545">
              <paramref name="fromEnd" /> and <paramref name="toEnd" /> are not declared by the same relationship type, or <paramref name="navigateFrom" /> has a result type that is not compatible with the property type of <paramref name="fromEnd" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Metadata.Edm.RelationshipType type, string fromEndName, string toEndName, System.Data.Common.CommandTrees.DbExpression navigateFrom);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate(class System.Data.Metadata.Edm.RelationshipType type, string fromEndName, string toEndName, class System.Data.Common.CommandTrees.DbExpression navigateFrom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Navigate (type As RelationshipType, fromEndName As String, toEndName As String, navigateFrom As DbExpression) As DbRelationshipNavigationExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRelationshipNavigationExpression ^ Navigate(System::Data::Metadata::Edm::RelationshipType ^ type, System::String ^ fromEndName, System::String ^ toEndName, System::Data::Common::CommandTrees::DbExpression ^ navigateFrom);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRelationshipNavigationExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.RelationshipType" RefType="this" />
        <Parameter Name="fromEndName" Type="System.String" />
        <Parameter Name="toEndName" Type="System.String" />
        <Parameter Name="navigateFrom" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="71aa0-546">Metadaten für den Beziehungstyp, der die Beziehung darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-546">Metadata for the relation type that represents the relationship.</span>
          </span>
        </param>
        <param name="fromEndName">
          <span data-ttu-id="71aa0-547">Der Name der Eigenschaft des Beziehungstyps, der das Ende der Beziehung darstellt, von der aus die Navigation erfolgen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-547">The name of the property of the relation type that represents the end of the relationship from which navigation should occur.</span>
          </span>
        </param>
        <param name="toEndName">
          <span data-ttu-id="71aa0-548">Der Name der Eigenschaft des Beziehungstyps, der das Ende der Beziehung darstellt, zu der die Navigation erfolgen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-548">The name of the property of the relation type that represents the end of the relationship to which navigation should occur.</span>
          </span>
        </param>
        <param name="navigateFrom">
          <span data-ttu-id="71aa0-549">Ein Ausdruck, der die Instanz angibt, von der die Navigation erfolgen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-549">An expression the specifies the instance from which naviagtion should occur.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-550">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />, der die Navigation einer Zusammensetzungs- oder Zuordnungsbeziehung darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-550">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> representing the navigation of a composition or association relationship.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-551">Ein neues DbRelationshipNavigationExpression, das die Navigation der angegebenen Von-und-Zu-Beziehungsenden des angegebenen Beziehungstyps aus der angegebenen Navigationsquell-Instanz darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-551">A new DbRelationshipNavigationExpression representing the navigation of the specified from and to relation ends of the specified relation type from the specified navigation source instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71aa0-552"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> erfordert, dass Navigation immer aus einem Verweis erfolgt, weshalb `navigateFrom` muss immer einen Verweistyp für das Ergebnis haben.</span><span class="sxs-lookup"><span data-stu-id="71aa0-552"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requires that navigation always occur from a reference, and so `navigateFrom` must always have a reference result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-553">
            <paramref name="type" />, <paramref name="fromEndName" />, <paramref name="toEndName" /> oder <paramref name="navigateFrom" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-553">
              <paramref name="type" />,  <paramref name="fromEndName" />,  <paramref name="toEndName" /> or <paramref name="navigateFrom" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-554">
            <paramref name="type" /> wird nicht dem Metadatenarbeitsbereich dieser Befehlsstruktur zugeordnet, oder <paramref name="navigateFrom" /> wird einer anderen Befehlsstruktur zugeordnet, oder <paramref name="type" /> deklariert keine Beziehungsendeigenschaft mit dem Namen <paramref name="toEndName" /> oder <paramref name="fromEndName" /> oder <paramref name="navigateFrom" /> verfügt über einen Ergebnistyp, der nicht mit dem Eigenschaftentyp der Beziehungsendeigenschaft mit dem Namen <paramref name="fromEndName" /> kompatibel ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-554">
              <paramref name="type" /> is not associated with this command tree's metadata workspace or <paramref name="navigateFrom" /> is associated with a different command tree, or <paramref name="type" /> does not declare a relation end property with name <paramref name="toEndName" /> or <paramref name="fromEndName" />, or <paramref name="navigateFrom" /> has a result type that is not compatible with the property type of the relation end property with name <paramref name="fromEndName" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Negate (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Negate(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Negate (argument As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Negate(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="71aa0-555">Ein Ausdruck, der das Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-555">An expression that specifies the argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-556">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />, die den Wert des Arguments negiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-556">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that negates the value of the argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-557">Ein neues DbArithmeticExpression, der den Negationsvorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-557">A new DbArithmeticExpression representing the negation operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-558">
            <paramref name="argument" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-558">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-559">Kein numerischer Ergebnistyp für <paramref name="argument" /> vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-559">No numeric result type exists for <paramref name="argument" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="New">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71aa0-560">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-560">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression New(class System.Data.Metadata.Edm.TypeUsage instanceType, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function New (instanceType As TypeUsage, arguments As IEnumerable(Of DbExpression)) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ New(System::Data::Metadata::Edm::TypeUsage ^ instanceType, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="instanceType">
          <span data-ttu-id="71aa0-561">Der Typ der neuen Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-561">The type of the new instance.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="71aa0-562">Ausdrücke, die Werte der neuen Instanzen angeben, interpretiert gemäß dem Typ der Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-562">Expressions that specify values of the new instances, interpreted according to the instance's type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-563">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-563">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span>
          </span>
          <span data-ttu-id="71aa0-564">Wenn das Typargument ein Auflistungstyp ist, geben die Argumente die Elemente der Auflistung an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-564">If the type argument is a collection type, the arguments specify the elements of the collection.</span>
          </span>
          <span data-ttu-id="71aa0-565">Andernfalls werden die Argumente als Eigenschafts- oder Spaltenwerte in der neuen Instanz verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-565">Otherwise the arguments are used as property or column values in the new instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-566">Ein neues DbNewInstanceExpression mit dem angegebenen Typ und den Argumenten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-566">A new DbNewInstanceExpression with the specified type and arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71aa0-567">Wenn `instanceType` ein Sammlungstyp ist, jeder Ausdruck in `arguments` benötigen einen Ergebnistyp aus, zu dem Elementtyp des ist, die `instanceType`.</span><span class="sxs-lookup"><span data-stu-id="71aa0-567">If `instanceType` is a collection type then every expression in `arguments` must have a result type that is promotable to the element type of the `instanceType`.</span></span> <span data-ttu-id="71aa0-568">Wenn `instanceType` ist ein Zeilentyp `arguments` beliebig viele Ausdrücke in der Zeilentyp Spalten vorhanden sind, und der Ergebnistyp des jeder Ausdruck muss in den Typ der entsprechenden Spalte gleich oder heraufstufbar sein darf.</span><span class="sxs-lookup"><span data-stu-id="71aa0-568">If `instanceType` is a row type,  `arguments` must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column.</span></span> <span data-ttu-id="71aa0-569">Ein Zeilentyp, der keine Spalten deklariert, ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="71aa0-569">A row type that does not declare any columns is invalid.</span></span> <span data-ttu-id="71aa0-570">Wenn `instanceType` ist ein Entitätstyp `arguments` muss enthalten, wie viele Ausdrücke als dort Eigenschaften, die durch den Typ definiert sind, und der Ergebnistyp des jeder Ausdruck muss in den Typ der entsprechenden Eigenschaft gleich oder heraufstufbar sein.</span><span class="sxs-lookup"><span data-stu-id="71aa0-570">If `instanceType` is an entity type,  `arguments` must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-571">
            <paramref name="instanceType" /> oder <paramref name="arguments" /> ist NULL oder <paramref name="arguments" /> enthält NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-571">
              <paramref name="instanceType" /> or <paramref name="arguments" /> is null, or <paramref name="arguments" /> contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-572">
            <paramref name="arguments" /> ist leer, oder die Ergebnistypen der enthaltenen Ausdrücke stimmen nicht mit den Anforderungen von <paramref name="instanceType" /> überein (wie im Abschnitt „Hinweise“ erläutert).</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-572">
              <paramref name="arguments" /> is empty or the result types of the contained expressions do not match the requirements of <paramref name="instanceType" /> (as explained in the remarks section).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, params System.Data.Common.CommandTrees.DbExpression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression New(class System.Data.Metadata.Edm.TypeUsage instanceType, class System.Data.Common.CommandTrees.DbExpression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function New (instanceType As TypeUsage, ParamArray arguments As DbExpression()) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ New(System::Data::Metadata::Edm::TypeUsage ^ instanceType, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="arguments" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instanceType">
          <span data-ttu-id="71aa0-573">Der Typ der neuen Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-573">The type of the new instance.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="71aa0-574">Ausdrücke, die Werte der neuen Instanzen angeben, interpretiert gemäß dem Typ der Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-574">Expressions that specify values of the new instances, interpreted according to the instance's type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-575">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-575">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span>
          </span>
          <span data-ttu-id="71aa0-576">Wenn das Typargument ein Auflistungstyp ist, geben die Argumente die Elemente der Auflistung an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-576">If the type argument is a collection type, the arguments specify the elements of the collection.</span>
          </span>
          <span data-ttu-id="71aa0-577">Andernfalls werden die Argumente als Eigenschafts- oder Spaltenwerte in der neuen Instanz verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-577">Otherwise the arguments are used as property or column values in the new instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-578">Ein neues DbNewInstanceExpression mit dem angegebenen Typ und den Argumenten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-578">A new DbNewInstanceExpression with the specified type and arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71aa0-579">Wenn `instanceType` ein Sammlungstyp ist, jeder Ausdruck in `arguments` benötigen einen Ergebnistyp aus, zu dem Elementtyp des ist, die `instanceType`.</span><span class="sxs-lookup"><span data-stu-id="71aa0-579">If `instanceType` is a collection type then every expression in `arguments` must have a result type that is promotable to the element type of the `instanceType`.</span></span> <span data-ttu-id="71aa0-580">Wenn `instanceType` ist ein Zeilentyp `arguments` beliebig viele Ausdrücke in der Zeilentyp Spalten vorhanden sind, und der Ergebnistyp des jeder Ausdruck muss in den Typ der entsprechenden Spalte gleich oder heraufstufbar sein darf.</span><span class="sxs-lookup"><span data-stu-id="71aa0-580">If `instanceType` is a row type,  `arguments` must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column.</span></span> <span data-ttu-id="71aa0-581">Ein Zeilentyp, der keine Spalten deklariert, ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="71aa0-581">A row type that does not declare any columns is invalid.</span></span> <span data-ttu-id="71aa0-582">Wenn `instanceType` ist ein Entitätstyp `arguments` muss enthalten, wie viele Ausdrücke als dort Eigenschaften, die durch den Typ definiert sind, und der Ergebnistyp des jeder Ausdruck muss in den Typ der entsprechenden Eigenschaft gleich oder heraufstufbar sein.</span><span class="sxs-lookup"><span data-stu-id="71aa0-582">If `instanceType` is an entity type,  `arguments` must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-583">
            <paramref name="instanceType" /> oder <paramref name="arguments" /> ist NULL oder <paramref name="arguments" /> enthält NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-583">
              <paramref name="instanceType" /> or <paramref name="arguments" /> is null, or <paramref name="arguments" /> contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-584">
            <paramref name="arguments" /> ist leer, oder die Ergebnistypen der enthaltenen Ausdrücke stimmen nicht mit den Anforderungen von <paramref name="instanceType" /> überein (wie im Abschnitt „Hinweise“ erläutert).</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-584">
              <paramref name="arguments" /> is empty or the result types of the contained expressions do not match the requirements of <paramref name="instanceType" /> (as explained in the remarks section).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="NewCollection">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71aa0-585">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />, der eine Sammlung mit den angegebenen Elementen erstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-585">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a collection containing the specified elements.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NewCollection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; elements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; elements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Function NewCollection (elements As IEnumerable(Of DbExpression)) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewCollection(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ elements);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elements" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="elements">
          <span data-ttu-id="71aa0-586">Eine Liste von Ausdrücken, die die Elemente der Auflistung bereitstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-586">A list of expressions that provide the elements of the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-587">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />, der eine Sammlung mit den angegebenen Elementen erstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-587">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a collection containing the specified elements.</span>
          </span>
          <span data-ttu-id="71aa0-588">Der Typ der Auflistung basiert auf dem gemeinsamen Typ der Elemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-588">The type of the collection is based on the common type of the elements.</span>
          </span>
          <span data-ttu-id="71aa0-589">Wenn kein gemeinsamer Elementtyp vorhanden ist, wird eine Ausnahme ausgelöst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-589">If no common element type exists an exception is thrown.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-590">Ein neues DbNewInstanceExpression mit dem angegebenen Sammlungstyp und den Argumenten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-590">A new DbNewInstanceExpression with the specified collection type and arguments.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-591">
            <paramref name="elements" /> ist NULL oder enthält NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-591">
              <paramref name="elements" /> is null, or contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-592">
            <paramref name="elements" /> ist leer oder enthält Ausdrücke, für die kein gemeinsamer Ergebnistyp vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-592">
              <paramref name="elements" /> is empty or contains expressions for which no common result type exists.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NewCollection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (params System.Data.Common.CommandTrees.DbExpression[] elements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection(class System.Data.Common.CommandTrees.DbExpression[] elements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Function NewCollection (ParamArray elements As DbExpression()) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewCollection(... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ elements);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elements" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="elements">
          <span data-ttu-id="71aa0-593">Eine Liste von Ausdrücken, die die Elemente der Auflistung bereitstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-593">A list of expressions that provide the elements of the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-594">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />, der eine Sammlung mit den angegebenen Elementen erstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-594">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a collection containing the specified elements.</span>
          </span>
          <span data-ttu-id="71aa0-595">Der Typ der Auflistung basiert auf dem gemeinsamen Typ der Elemente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-595">The type of the collection is based on the common type of the elements.</span>
          </span>
          <span data-ttu-id="71aa0-596">Wenn kein gemeinsamer Elementtyp vorhanden ist, wird eine Ausnahme ausgelöst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-596">If no common element type exists an exception is thrown.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-597">Ein neues DbNewInstanceExpression mit dem angegebenen Sammlungstyp und den Argumenten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-597">A new DbNewInstanceExpression with the specified collection type and arguments.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-598">
            <paramref name="elements" /> ist NULL oder enthält NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-598">
              <paramref name="elements" /> is null, or contains null..</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-599">
            <paramref name="elements" /> ist leer oder enthält Ausdrücke, für die kein gemeinsamer Ergebnistyp vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-599">
              <paramref name="elements" /> is empty or contains expressions for which no common result type exists.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NewEmptyCollection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewEmptyCollection (this System.Data.Metadata.Edm.TypeUsage collectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewEmptyCollection(class System.Data.Metadata.Edm.TypeUsage collectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NewEmptyCollection (collectionType As TypeUsage) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewEmptyCollection(System::Data::Metadata::Edm::TypeUsage ^ collectionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collectionType">
          <span data-ttu-id="71aa0-600">Die Typmetadaten für die zu erstellende Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-600">The type metadata for the collection to create</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-601">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />, die eine leere Auflistung vom angegebenen Auflistungstyp erstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-601">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs an empty collection of the specified collection type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-602">Ein neues DbNewInstanceExpression mit dem angegebenen Sammlungstyp und einer leeren <paramref name="Arguments" />-Liste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-602">A new DbNewInstanceExpression with the specified collection type and an empty <paramref name="Arguments" /> list.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-603">
            <paramref name="collectionType" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-603">
              <paramref name="collectionType" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-604">
            <paramref name="collectionType" /> ist kein Auflistungstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-604">
              <paramref name="collectionType" /> is not a collection type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NewRow">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewRow (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; columnValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewRow(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; columnValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
      <MemberSignature Language="VB.NET" Value="Public Function NewRow (columnValues As IEnumerable(Of KeyValuePair(Of String, DbExpression))) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewRow(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ columnValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnValues" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="columnValues">
          <span data-ttu-id="71aa0-605">Eine Liste von Zeichenfolge-DbExpression-Schlüssel-Wert-Paaren, die die Struktur und die Werte der Zeile definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-605">A list of string-DbExpression key-value pairs that defines the structure and values of the row.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-606">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />, die eine Zeile mit den angegebenen benannten Spalten und den angegebenen Werten erzeugt, die als Ausdrücke angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-606">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that produces a row with the specified named columns and the given values, specified as expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-607">Ein neues DbNewInstanceExpression, die die Konstruktion der Zeile darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-607">A new DbNewInstanceExpression that represents the construction of the row.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-608">
            <paramref name="columnValues" /> ist NULL oder enthält ein Element mit einem NULL-Spaltennamen oder -Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-608">
              <paramref name="columnValues" /> is null or contains an element with a null column name or expression.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-609">
            <paramref name="columnValues" /> ist leer oder enthält einen doppelten oder ungültigen Spaltennamen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-609">
              <paramref name="columnValues" /> is empty, or contains a duplicate or invalid column name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNotExpression Not (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNotExpression Not(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Not (argument As DbExpression) As DbNotExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNotExpression ^ Not(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNotExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="71aa0-610">Ein boolescher Ausdruck, der das Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-610">A Boolean expression that specifies the argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-611">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" />, die die logische Negation des angegebenen Arguments ausführt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-611">Creates a <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> that performs the logical negation of the given argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-612">Ein neues DbNotExpression mit dem angegebenen Argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-612">A new DbNotExpression with the specified argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-613">
            <paramref name="argument" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-613">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-614">
            <paramref name="argument" /> weist keinen booleschen Ergebnistyp auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-614">
              <paramref name="argument" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NotEqual">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression NotEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression NotEqual(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NotEqual (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ NotEqual(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="71aa0-615">Ein Ausdruck, der das linke Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-615">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="71aa0-616">Ein Ausdruck, der das rechte Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-616">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-617">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />, die das linke und das rechte Argument auf Ungleichheit vergleicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-617">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that compares the left and right arguments for inequality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-618">Ein neues DbComparisonExpression, das den Ungleichheitsvergleich darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-618">A new DbComparisonExpression representing the inequality comparison.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-619">
            <paramref name="left" /> oder <paramref name="right" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-619">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-620">Zwischen <paramref name="left" /> und <paramref name="right" /> ist kein allgemeiner, auf Gleichheit vergleichbarer Ergebnistyp vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-620">No common equality-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNullExpression Null (this System.Data.Metadata.Edm.TypeUsage nullType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNullExpression Null(class System.Data.Metadata.Edm.TypeUsage nullType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Null (nullType As TypeUsage) As DbNullExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNullExpression ^ Null(System::Data::Metadata::Edm::TypeUsage ^ nullType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNullExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nullType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
      </Parameters>
      <Docs>
        <param name="nullType">
          <span data-ttu-id="71aa0-621">Der Typ des Nullwerts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-621">The type of the null value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-622">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />, der einen typisierten NULL-Wert darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-622">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />, which represents a typed null value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-623">Eine Instanz von DbNullExpression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-623">An instance of DbNullExpression.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-624">
            <paramref name="nullType" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-624">
              <paramref name="nullType" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OfType">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbOfTypeExpression OfType (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbOfTypeExpression OfType(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OfType (argument As DbExpression, type As TypeUsage) As DbOfTypeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbOfTypeExpression ^ OfType(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbOfTypeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="71aa0-625">Eine <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, die das Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-625">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="71aa0-626">Typmetadaten für den Typ, den Elemente des Eingabesets aufweisen müssen, damit sie in das Resultset eingeschlossen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-626">Type metadata for the type that elements of the input set must have to be included in the resulting set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-627">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" />, der einen Satz von Elementen des angegebenen Eingabesets erzeugt, die den angegebenen Typ aufweisen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-627">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> that produces a set consisting of the elements of the given input set that are of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-628">Ein neues DbOfTypeExpression mit dem angegebenen Mengenargument und -typ und ein ExpressionKind von <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-628">A new DbOfTypeExpression with the specified set argument and type, and an ExpressionKind of <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71aa0-629">DbOfTypeExpression erfordert, dass `argument` verfügt über eine Sammlung Ergebnistyp mit einem polymorphen Elementtyp und dass `type` ist ein Typ aus der gleichen Typhierarchie wie dieser Elementtyp.</span><span class="sxs-lookup"><span data-stu-id="71aa0-629">DbOfTypeExpression requires that `argument` has a collection result type with a polymorphic element type, and that `type` is a type from the same type hierarchy as that element type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-630">
            <paramref name="argument" /> oder <paramref name="type" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-630">
              <paramref name="argument" /> or <paramref name="type" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-631">
            <paramref name="argument" /> hat keinen Auflistungsergebnistyp, oder <paramref name="type" /> ist kein Typ in der gleichen Typhierarchie wie der Elementtyp des <paramref name="argument" />-Auflistungsergebnistyps.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-631">
              <paramref name="argument" /> does not have a collection result type, or <paramref name="type" /> is not a type in the same type hierarchy as the element type of the collection result type of <paramref name="argument" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OfTypeOnly">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbOfTypeExpression OfTypeOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbOfTypeExpression OfTypeOnly(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OfTypeOnly (argument As DbExpression, type As TypeUsage) As DbOfTypeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbOfTypeExpression ^ OfTypeOnly(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbOfTypeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="71aa0-632">Ein <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, der das Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-632">An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="71aa0-633">Typmetadaten für den Typ, mit dem Elemente des Eingabesets genau übereinstimmen müssen, damit sie in das Resultset eingeschlossen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-633">Type metadata for the type that elements of the input set must match exactly to be included in the resulting set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-634">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" />, der einen Satz von Elementen des angegebenen Eingabesets erzeugt, die genau den angegebenen Typ aufweisen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-634">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> that produces a set consisting of the elements of the given input set that are of exactly the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-635">Ein neues DbOfTypeExpression mit dem angegebenen Mengenargument und -typ und ein ExpressionKind von <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-635">A new DbOfTypeExpression with the specified set argument and type, and an ExpressionKind of <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71aa0-636">DbOfTypeExpression erfordert, dass `argument` verfügt über eine Sammlung Ergebnistyp mit einem polymorphen Elementtyp und dass `type` ist ein Typ aus der gleichen Typhierarchie wie dieser Elementtyp.</span><span class="sxs-lookup"><span data-stu-id="71aa0-636">DbOfTypeExpression requires that `argument` has a collection result type with a polymorphic element type, and that `type` is a type from the same type hierarchy as that element type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-637">
            <paramref name="argument" /> oder <paramref name="type" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-637">
              <paramref name="argument" /> or <paramref name="type" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-638">
            <paramref name="argument" /> hat keinen Auflistungsergebnistyp, oder <paramref name="type" /> ist kein Typ in der gleichen Typhierarchie wie der Elementtyp des <paramref name="argument" />-Auflistungsergebnistyps.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-638">
              <paramref name="argument" /> does not have a collection result type, or <paramref name="type" /> is not a type in the same type hierarchy as the element type of the collection result type of <paramref name="argument" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbOrExpression Or (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbOrExpression Or(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Or (left As DbExpression, right As DbExpression) As DbOrExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbOrExpression ^ Or(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbOrExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="71aa0-639">Ein boolescher Ausdruck, der das linke Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-639">A Boolean expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="71aa0-640">Ein boolescher Ausdruck, der das rechte Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-640">A Boolean expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-641">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" />, der die logische OR-Operation für das linke und das rechte Argument ausführt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-641">Creates an <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /> that performs the logical Or of the left and right arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-642">Ein neues DbOrExpression mit den angegebenen Argumenten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-642">A new DbOrExpression with the specified arguments.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-643">
            <paramref name="left" /> oder <paramref name="right" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-643">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-644">
            <paramref name="left" /> oder <paramref name="right" /> weist keinen booleschen Ergebnistyp auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-644">
              <paramref name="left" /> or <paramref name="right" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderBy">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71aa0-645">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />, der das angegebene Eingabeset in aufsteigender Sortierreihenfolge und mit Standardsortierung nach dem angegebenen Sortierschlüssel sortiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-645">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with ascending sort order and default collation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderBy(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderBy(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="71aa0-646">Ein Ausdruck, der das Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-646">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="71aa0-647">Eine Methode, die angibt, wie der Sortierschlüsselausdruck für einen angegebenen Member des Eingabesets abgeleitet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-647">A method that specifies how to derive the sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="71aa0-648">Diese Methode muss einen Ausdruck mit einem in der Reihenfolge vergleichbaren Ergebnistyp erzeugen, der die Sortierschlüsseldefinition bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-648">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-649">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />, der das angegebene Eingabeset in aufsteigender Sortierreihenfolge und mit Standardsortierung nach dem angegebenen Sortierschlüssel sortiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-649">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with ascending sort order and default collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-650">Ein neues DbSortExpression, das den order-by-Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-650">A new DbSortExpression that represents the order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-651">Der von <paramref name="sortKey" /> erzeugte Ausdruck ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-651">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-652">Der Ausdruck, der von <paramref name="sortKey" /> erzeugt wurde, hat keinen in der Reihenfolge vergleichbaren Ergebnistyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-652">The expression produced by <paramref name="sortKey" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderBy(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderBy(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="71aa0-653">Ein Ausdruck, der das Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-653">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="71aa0-654">Eine Methode, die angibt, wie der Sortierschlüsselausdruck für einen angegebenen Member des Eingabesets abgeleitet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-654">A method that specifies how to derive the sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="71aa0-655">Diese Methode muss einen Ausdruck mit einem in der Reihenfolge vergleichbaren Ergebnistyp erzeugen, der die Sortierschlüsseldefinition bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-655">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <param name="collation">
          <span data-ttu-id="71aa0-656">Die zu verwendende Sortierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-656">The collation to sort under.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-657">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />, der das angegebene Eingabeset in aufsteigender Sortierreihenfolge und mit der angegebenen Sortierung nach dem angegebenen Sortierschlüssel sortiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-657">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with ascending sort order and the specified collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-658">Ein neues DbSortExpression, das den order-by-Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-658">A new DbSortExpression that represents the order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-659">Der von <paramref name="sortKey" /> erzeugte Ausdruck ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-659">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-660">Der Ausdruck, der von <paramref name="sortKey" /> erzeugt wurde, hat keinen in der Reihenfolge vergleichbaren Zeichenfolgenergebnistyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-660">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71aa0-661">
            <paramref name="collation" /> ist leer oder enthält nur Leerzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-661">
              <paramref name="collation" /> is empty or contains only space characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderByDescending">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71aa0-662">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />, der das angegebene Eingabeset in absteigender Sortierreihenfolge und mit Standardsortierung nach dem angegebenen Sortierschlüssel sortiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-662">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with descending sort order and default collation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderByDescending(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderByDescending(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="71aa0-663">Ein Ausdruck, der das Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-663">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="71aa0-664">Eine Methode, die angibt, wie der Sortierschlüsselausdruck für einen angegebenen Member des Eingabesets abgeleitet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-664">A method that specifies how to derive the sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="71aa0-665">Diese Methode muss einen Ausdruck mit einem in der Reihenfolge vergleichbaren Ergebnistyp erzeugen, der die Sortierschlüsseldefinition bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-665">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-666">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />, der das angegebene Eingabeset in absteigender Sortierreihenfolge und mit Standardsortierung nach dem angegebenen Sortierschlüssel sortiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-666">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with descending sort order and default collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-667">Ein neues DbSortExpression, das den order-by-Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-667">A new DbSortExpression that represents the order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-668">Der von <paramref name="sortKey" /> erzeugte Ausdruck ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-668">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-669">Der Ausdruck, der von <paramref name="sortKey" /> erzeugt wurde, hat keinen in der Reihenfolge vergleichbaren Ergebnistyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-669">The expression produced by <paramref name="sortKey" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderByDescending(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderByDescending(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="71aa0-670">Ein Ausdruck, der das Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-670">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="71aa0-671">Eine Methode, die angibt, wie der Sortierschlüsselausdruck für einen angegebenen Member des Eingabesets abgeleitet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-671">A method that specifies how to derive the sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="71aa0-672">Diese Methode muss einen Ausdruck mit einem in der Reihenfolge vergleichbaren Ergebnistyp erzeugen, der die Sortierschlüsseldefinition bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-672">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <param name="collation">
          <span data-ttu-id="71aa0-673">Die zu verwendende Sortierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-673">The collation to sort under.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-674">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />, der das angegebene Eingabeset in absteigender Sortierreihenfolge und mit der angegebenen Sortierung nach dem angegebenen Sortierschlüssel sortiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-674">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with descending sort order and the specified collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-675">Ein neues DbSortExpression, das den order-by-Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-675">A new DbSortExpression that represents the order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-676">Der von <paramref name="sortKey" /> erzeugte Ausdruck ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-676">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-677">Der Ausdruck, der von <paramref name="sortKey" /> erzeugt wurde, hat keinen in der Reihenfolge vergleichbaren Zeichenfolgenergebnistyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-677">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71aa0-678">
            <paramref name="collation" /> ist leer oder enthält nur Leerzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-678">
              <paramref name="collation" /> is empty or contains only space characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OuterApply">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71aa0-679">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />, die den angegebenen <paramref name="apply" />-Ausdruck für jedes Element eines angegebenen Eingabesets einmal auswertet und eine Auflistung von Zeilen mit entsprechenden Eingabe- und apply-Spalten erzeugt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-679">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OuterApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression OuterApply(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OuterApply (source As DbExpression, apply As Func(Of DbExpression, KeyValuePair(Of String, DbExpression))) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ OuterApply(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ apply);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="71aa0-680">Eine <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, die das Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-680">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="apply">
          <span data-ttu-id="71aa0-681">Eine Methode, die die Logik angibt, die für jeden Member des Eingabesets einmal ausgewertet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-681">A method that specifies the logic to evaluate once for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-682">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />, die den angegebenen <paramref name="apply" />-Ausdruck für jedes Element eines angegebenen Eingabesets einmal auswertet und eine Auflistung von Zeilen mit entsprechenden Eingabe- und apply-Spalten erzeugt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-682">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
          <span data-ttu-id="71aa0-683">Zeilen, für die <paramref name="apply" /> zu einem leeren Satz ausgewertet wird, weisen den Anwendungsspaltenwert <see langword="null" /> auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-683">Rows for which <paramref name="apply" /> evaluates to an empty set have an apply column value of <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-684">Ein neues DbApplyExpression mit der angegebenen Eingabe und Anwenden von Bindungen und ein <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> von OuterApply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-684">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of OuterApply.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-685">Das Ergebnis von <paramref name="apply" /> enthält einen Namen oder Ausdruck, der Null ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-685">The result of <paramref name="apply" /> contains a name or expression that is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-686">Das Ergebnis von <paramref name="apply" /> enthält einen Namen oder Ausdruck, der in einer Ausdrucksbindung ungültig ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-686">The result of <paramref name="apply" /> contains a name or expression that is not valid in an expression binding.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OuterApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression OuterApply(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpressionBinding apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OuterApply (input As DbExpressionBinding, apply As DbExpressionBinding) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ OuterApply(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpressionBinding ^ apply);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="apply" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="71aa0-687">Ein <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, der das Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-687">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="apply">
          <span data-ttu-id="71aa0-688">Eine <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, die die Logik angibt, die für jeden Member des Eingabesets einmal ausgewertet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-688">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies logic to evaluate once for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-689">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />, die den angegebenen <paramref name="apply" />-Ausdruck für jedes Element eines angegebenen Eingabesets einmal auswertet und eine Auflistung von Zeilen mit entsprechenden Eingabe- und apply-Spalten erzeugt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-689">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
          <span data-ttu-id="71aa0-690">Zeilen, für die <paramref name="apply" /> zu einem leeren Satz ausgewertet wird, weisen den Anwendungsspaltenwert <see langword="null" /> auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-690">Rows for which <paramref name="apply" /> evaluates to an empty set have an apply column value of <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-691">Ein neues DbApplyExpression mit der angegebenen Eingabe und Anwenden von Bindungen und ein <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> von OuterApply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-691">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of OuterApply.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-692">
            <paramref name="input" /> oder <paramref name="apply" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-692">
              <paramref name="input" /> or <paramref name="apply" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Parameter">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbParameterReferenceExpression Parameter (this System.Data.Metadata.Edm.TypeUsage type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbParameterReferenceExpression Parameter(class System.Data.Metadata.Edm.TypeUsage type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Parameter (type As TypeUsage, name As String) As DbParameterReferenceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbParameterReferenceExpression ^ Parameter(System::Data::Metadata::Edm::TypeUsage ^ type, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbParameterReferenceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="71aa0-693">Der Typ des Parameters, auf den verwiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-693">The type of the referenced parameter.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="71aa0-694">Der Name des Parameters, auf den verwiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-694">The name of the referenced parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-695">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />, die auf einen Parameter mit dem angegebenen Namen und Typ verweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-695">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> that references a parameter with the specified name and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-696">Ein DbParameterReferenceExpression, der einen Verweis auf einen Parameter mit dem angegebenen Namen und Typ darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-696">A DbParameterReferenceExpression that represents a reference to a parameter with the specified name and type.</span>
          </span>
          <span data-ttu-id="71aa0-697">Der Ergebnistyp des Ausdrucks ist derselbe <paramref name="type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-697">The result type of the expression will be the same as <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Plus">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Plus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Plus(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Plus (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Plus(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="71aa0-698">Ein Ausdruck, der das linke Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-698">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="71aa0-699">Ein Ausdruck, der das rechte Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-699">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-700">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />, die dem rechten Argument das linke Argument hinzufügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-700">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that adds the left argument to the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-701">Ein neues DbArithmeticExpression, der die Addition darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-701">A new DbArithmeticExpression representing the addition operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-702">
            <paramref name="left" /> oder <paramref name="right" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-702">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-703">Zwischen <paramref name="left" /> und <paramref name="right" /> ist kein gemeinsamer numerischer Ergebnistyp vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-703">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression Project (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression projection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression Project(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression projection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Project (input As DbExpressionBinding, projection As DbExpression) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ Project(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ projection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="projection" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="71aa0-704">Eine Ausdrucksbindung, die das Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-704">An expression binding that specifies the input set.</span>
          </span>
        </param>
        <param name="projection">
          <span data-ttu-id="71aa0-705">Ein Ausdruck, der über dem Satz projiziert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-705">An expression to project over the set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-706">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />, die den angegebenen Ausdruck über dem angegebenen Eingabeset projiziert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-706">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that projects the specified expression over the given input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-707">Ein neues DbProjectExpression, die den Projektionsvorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-707">A new DbProjectExpression that represents the projection operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-708">
            <paramref name="input" /> oder <paramref name="projection" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-708">
              <paramref name="input" /> or <paramref name="projection" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Property">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71aa0-709">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />, der den Abruf der angegebenen Eigenschaft darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-709">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified property.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.EdmProperty propertyMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, class System.Data.Metadata.Edm.EdmProperty propertyMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, propertyMetadata As EdmProperty) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::Data::Metadata::Edm::EdmProperty ^ propertyMetadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="propertyMetadata" Type="System.Data.Metadata.Edm.EdmProperty" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="71aa0-710">Die Instanz, aus der die Eigenschaft abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-710">The instance from which to retrieve the property.</span>
          </span>
          <span data-ttu-id="71aa0-711">Kann NULL sein, wenn die Eigenschaft statisch ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-711">May be null if the property is static.</span>
          </span>
        </param>
        <param name="propertyMetadata">
          <span data-ttu-id="71aa0-712">Metadaten für die abzurufende Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-712">Metadata for the property to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-713">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />, der den Abruf der angegebenen Eigenschaft darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-713">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-714">Ein neues DbPropertyExpression, das das Abrufen von Eigenschaften darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-714">A new DbPropertyExpression representing the property retrieval.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-715">
            <paramref name="propertyMetadata" /> ist NULL oder <paramref name="instance" /> ist NULL, und die Eigenschaft ist nicht statisch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-715">
              <paramref name="propertyMetadata" /> is null or <paramref name="instance" /> is null and the property is not static.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.NavigationProperty navigationProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, class System.Data.Metadata.Edm.NavigationProperty navigationProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::Data::Metadata::Edm::NavigationProperty ^ navigationProperty);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="navigationProperty" Type="System.Data.Metadata.Edm.NavigationProperty" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="71aa0-716">Die Instanz, aus der die Navigationseigenschaft abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-716">The instance from which to retrieve the navigation property.</span>
          </span>
        </param>
        <param name="navigationProperty">
          <span data-ttu-id="71aa0-717">Metadaten für die abzurufende Navigationseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-717">Metadata for the navigation property to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-718">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />, der den Abruf der angegebenen Navigationseigenschaft darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-718">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified navigation property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-719">Ein neues DbPropertyExpression, das das Abrufen von Navigationseigenschaften darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-719">A new DbPropertyExpression representing the navigation property retrieval.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-720">
            <paramref name="navigationProperty" /> oder <paramref name="instance" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-720">
              <paramref name="navigationProperty" /> or <paramref name="instance" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.RelationshipEndMember relationshipEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, class System.Data.Metadata.Edm.RelationshipEndMember relationshipEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, relationshipEnd As RelationshipEndMember) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::Data::Metadata::Edm::RelationshipEndMember ^ relationshipEnd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="relationshipEnd" Type="System.Data.Metadata.Edm.RelationshipEndMember" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="71aa0-721">Die Instanz, aus der der Endmember der Beziehung abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-721">The instance from which to retrieve the relationship end member.</span>
          </span>
        </param>
        <param name="relationshipEnd">
          <span data-ttu-id="71aa0-722">Metadaten für den abzurufenden Endmember der Beziehung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-722">Metadata for the relationship end member to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-723">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />, der den Abruf des angegebenen Endmembers der Beziehung darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-723">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified relationship end member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-724">Ein neues DbPropertyExpression, das das Abrufen von Verhältnis und Member darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-724">A new DbPropertyExpression representing the relationship end member retrieval.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-725">
            <paramref name="relationshipEnd" /> ist NULL oder <paramref name="instance" /> ist NULL, und die Eigenschaft ist nicht statisch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-725">
              <paramref name="relationshipEnd" /> is null or <paramref name="instance" /> is null and the property is not static.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, propertyName As String) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="71aa0-726">Die Instanz, aus der die Eigenschaft abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-726">The instance from which to retrieve the property.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="71aa0-727">Der Name der abzurufenden Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-727">The name of the property to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-728">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />, der den Abruf der Instanzeigenschaft mit dem angegebenen Namen aus der angegebenen Instanz darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-728">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the instance property with the specified name from the given instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-729">Ein neues DbPropertyExpression, das das Abrufen von Eigenschaften darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-729">A new DbPropertyExpression that represents the property retrieval.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-730">
            <paramref name="propertyName" /> ist NULL oder <paramref name="instance" /> ist NULL, und die Eigenschaft ist nicht statisch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-730">
              <paramref name="propertyName" /> is null or <paramref name="instance" /> is null and the property is not static.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71aa0-731">Keine Eigenschaft mit dem angegebenen Namen wurde von diesem Typ <paramref name="instance" /> deklariert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-731">No property with the specified name is declared by the type of <paramref name="instance" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RefFromKey">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71aa0-732">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />, das einen Verweis auf eine bestimmte Entität auf der Grundlage der Schlüsselwerte codiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-732">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific Entity based on key values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RefFromKey">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression RefFromKey(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Common.CommandTrees.DbExpression keyRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ RefFromKey(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Common::CommandTrees::DbExpression ^ keyRow);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyRow" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="entitySet">
          <span data-ttu-id="71aa0-733">Die Entitätenmenge mit dem Element, auf das verwiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-733">The Entity set in which the referenced element resides.</span>
          </span>
        </param>
        <param name="keyRow">
          <span data-ttu-id="71aa0-734">Ein <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, der einen Datensatz mit Spalten erstellt, deren Anzahl, Typ und Reihenfolge mit den Schlüsseleigenschaften des Entitätstyps, auf den verwiesen wird, übereinstimmen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-734">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-735">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />, das einen Verweis auf eine bestimmte Entität auf der Grundlage der Schlüsselwerte codiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-735">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific Entity based on key values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-736">Ein neues DbRefExpression, das das Element mit den angegebenen Schlüsselwerten im angegebenen Entitätssatz verweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-736">A new DbRefExpression that references the element with the specified key values in the given Entity set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71aa0-737">`keyRow` Ein Ausdruck, der die Schlüsselwerte angibt, die die Entität verwiesen wird, innerhalb der angegebenen Entität identifizieren festgelegt werden soll.</span><span class="sxs-lookup"><span data-stu-id="71aa0-737">`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set.</span></span> <span data-ttu-id="71aa0-738">Der Ergebnistyp des `keyRow` sollte eine entsprechende Spalte für jede Schlüsseleigenschaft definiert, indem enthalten `entitySet's` Entitätstyp.</span><span class="sxs-lookup"><span data-stu-id="71aa0-738">The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet's` entity type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-739">
            <paramref name="entitySet" /> oder <paramref name="keyRow" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-739">
              <paramref name="entitySet" /> or <paramref name="keyRow" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-740">
            <paramref name="keyRow" /> hat keinen Aufzeichnungsergebnistypen, der den Schlüsseleigenschaften des Entitätstyps der Entitätsmenge entspricht, auf den verwiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-740">
              <paramref name="keyRow" /> does not have a record result type that matches the key properties of the referenced entity set's entity type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RefFromKey">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow, System.Data.Metadata.Edm.EntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression RefFromKey(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Common.CommandTrees.DbExpression keyRow, class System.Data.Metadata.Edm.EntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ RefFromKey(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Common::CommandTrees::DbExpression ^ keyRow, System::Data::Metadata::Edm::EntityType ^ entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyRow" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityType" />
      </Parameters>
      <Docs>
        <param name="entitySet">
          <span data-ttu-id="71aa0-741">Die Entitätenmenge mit dem Element, auf das verwiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-741">The Entity set in which the referenced element resides.</span>
          </span>
        </param>
        <param name="keyRow">
          <span data-ttu-id="71aa0-742">Ein <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, der einen Datensatz mit Spalten erstellt, deren Anzahl, Typ und Reihenfolge mit den Schlüsseleigenschaften des Entitätstyps, auf den verwiesen wird, übereinstimmen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-742">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.</span>
          </span>
        </param>
        <param name="entityType">
          <span data-ttu-id="71aa0-743">Der Typ der Entität, auf die der Verweis zeigen sollte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-743">The type of the Entity that the reference should refer to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-744">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />, das einen Verweis auf eine bestimmte Entität auf der Grundlage der Schlüsselwerte codiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-744">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific Entity based on key values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-745">Ein neues DbRefExpression, das das Element mit den angegebenen Schlüsselwerten im angegebenen Entitätssatz verweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-745">A new DbRefExpression that references the element with the specified key values in the given Entity set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71aa0-746">`keyRow` Ein Ausdruck, der die Schlüsselwerte angibt, die die Entität verwiesen wird, innerhalb der angegebenen Entität identifizieren festgelegt werden soll.</span><span class="sxs-lookup"><span data-stu-id="71aa0-746">`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set.</span></span> <span data-ttu-id="71aa0-747">Der Ergebnistyp des `keyRow` sollte eine entsprechende Spalte für jede Schlüsseleigenschaft definiert, indem enthalten `entitySet's` Entitätstyp.</span><span class="sxs-lookup"><span data-stu-id="71aa0-747">The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet's` entity type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-748">
            <paramref name="entitySet" />, <paramref name="keyRow" /> oder <paramref name="entityType" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-748">
              <paramref name="entitySet" />,  <paramref name="keyRow" /> or <paramref name="entityType" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-749">
            <paramref name="entityType" /> befindet sich nicht in derselben Typhierarchie wie der Entitätstyp des Entitätssatzes, oder <paramref name="keyRow" /> hat keinen Datensatzergebnistyp, der den Schlüsseleigenschaften des Entitätstyps der Entitätenmenge entspricht, auf den verwiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-749">
              <paramref name="entityType" /> is not in the same type hierarchy as the entity set's entity type, or <paramref name="keyRow" /> does not have a record result type that matches the key properties of the referenced entity set's entity type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Scan">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbScanExpression Scan (this System.Data.Metadata.Edm.EntitySetBase targetSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbScanExpression Scan(class System.Data.Metadata.Edm.EntitySetBase targetSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Scan (targetSet As EntitySetBase) As DbScanExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbScanExpression ^ Scan(System::Data::Metadata::Edm::EntitySetBase ^ targetSet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbScanExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetSet" Type="System.Data.Metadata.Edm.EntitySetBase" RefType="this" />
      </Parameters>
      <Docs>
        <param name="targetSet">
          <span data-ttu-id="71aa0-750">Metadaten für die Entitätenmenge oder den Beziehungssatz, auf die bzw. den verwiesen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-750">Metadata for the entity or relationship set to reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-751">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" />, die auf die angegebene Entitätenmenge oder den angegebenen Beziehungssatz verweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-751">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /> that references the specified entity or relationship set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-752">Ein neues DbScanExpression auf Grundlage des angegebenen Entitäts- oder Beziehungssatzes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-752">A new DbScanExpression based on the specified entity or relationship set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-753">
            <paramref name="targetSet" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-753">
              <paramref name="targetSet" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Select&lt;TProjection&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression Select&lt;TProjection&gt; (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,TProjection&gt; projection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression Select&lt;TProjection&gt;(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, !!TProjection&gt; projection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TProjection) (source As DbExpression, projection As Func(Of DbExpression, TProjection)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProjection&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ Select(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, TProjection&gt; ^ projection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProjection" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="projection" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,TProjection&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProjection">
          <span data-ttu-id="71aa0-754">Der Methodenergebnistyp von <c>Projektion</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-754">The method result type of <c>projection</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="71aa0-755">Ein Ausdruck, der das Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-755">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="projection">
          <span data-ttu-id="71aa0-756">Eine Methode, die angibt, wie der Projektionsausdruck von einem Member des Eingabesets abgeleitet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-756">A method that specifies how to derive the projected expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="71aa0-757">Diese Methode muss eine Instanz eines Typs erzeugen, der mit Select kompatibel ist und in eine <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> aufgelöst werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-757">This method must produce an instance of a type that is compatible with Select and can be resolved into a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span>
          </span>
          <span data-ttu-id="71aa0-758">Anforderungen an die Kompatibilität für <c>TProjection</c> werden in den Hinweisen beschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-758">Compatibility requirements for <c>TProjection</c> are described in remarks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-759">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />, der den angegebenen Ausdruck über das angegebene Eingabeset auswählt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-759">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that selects the specified expression over the given input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-760">Ein neues DbProjectExpression, die den ausgewählten Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-760">A new DbProjectExpression that represents the select operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71aa0-761">Für die Kompatibilität mit Select, `TProjection` abgeleitet werden müssen <xref:System.Data.Common.CommandTrees.DbExpression>, oder ein anonymer Typ mit DbExpression-abgeleiteten Eigenschaften werden muss.</span><span class="sxs-lookup"><span data-stu-id="71aa0-761">To be compatible with Select, `TProjection` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties.</span></span> <span data-ttu-id="71aa0-762">Die folgenden Beispiele von unterstützten Typen sind `TProjection`:</span><span class="sxs-lookup"><span data-stu-id="71aa0-762">The following are examples of supported types for `TProjection`:</span></span>  
  
```  
source.Select(x => x.Property("Name"))  
```  
  
 <span data-ttu-id="71aa0-763">`TProjection` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span><span class="sxs-lookup"><span data-stu-id="71aa0-763">`TProjection` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span></span>  
  
```  
source.Select(x => new { Name = x.Property("Name") })  
```  
  
 <span data-ttu-id="71aa0-764">(`TProjection` ist ein anonymer Typ mit DbExpression-abgeleiteten-Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="71aa0-764">(`TProjection` is an anonymous type with a DbExpression-derived property).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-765">Das Ergebnis von <paramref name="projection" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-765">The result of <paramref name="projection" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression SelectMany(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany (source As DbExpression, apply As Func(Of DbExpression, DbExpression)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ SelectMany(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ apply);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="71aa0-766">Eine <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, die das Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-766">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="apply">
          <span data-ttu-id="71aa0-767">Eine Methode, die die Logik darstellt, die für jeden Member des Eingabesets einmal ausgewertet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-767">A method that represents the logic to evaluate once for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-768">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />, die den angegebenen <paramref name="apply" />-Ausdruck für jedes Element eines angegebenen Eingabesets einmal auswertet und eine Auflistung von Zeilen mit entsprechenden Eingabe- und apply-Spalten erzeugt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-768">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
          <span data-ttu-id="71aa0-769">Zeilen, für die <paramref name="apply" /> als leerer Satz ausgewertet wird, werden nicht eingeschlossen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-769">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span>
          </span>
          <span data-ttu-id="71aa0-770">Eine <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> wird dann erstellt, die die <paramref name="apply" />-Spalte in jeder Zeile auswählt und die Gesamtauflistung der <paramref name="apply" />-Ergebnisse erzeugt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-770">A <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> is then created that selects the <paramref name="apply" /> column from each row, producing the overall collection of <paramref name="apply" /> results.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-771">Ein neues DbProjectExpression, das die Spalte Übernehmen von einem neuen DbApplyExpression mit der angegebenen Eingabe auswählt und Bindungen anwendet und ein <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> von CrossApply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-771">An new DbProjectExpression that selects the apply column from a new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-772">Der von <paramref name="apply" /> erzeugte Ausdruck ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-772">The expression produced by <paramref name="apply" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-773">Der von <paramref name="apply" /> erzeugte Ausdruck hat keinen Auflistungstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-773">The expression produced by <paramref name="apply" /> does not have a collection type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSelector&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany&lt;TSelector&gt; (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; apply, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression SelectMany&lt;TSelector&gt;(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; apply, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, !!TSelector&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSelector) (source As DbExpression, apply As Func(Of DbExpression, DbExpression), selector As Func(Of DbExpression, DbExpression, TSelector)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSelector&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ SelectMany(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ apply, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, TSelector&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSelector" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSelector">
          <span data-ttu-id="71aa0-774">Der Methodenergebnistyp von <c>Selektor</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-774">The method result type of <c>selector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="71aa0-775">Eine <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, die das Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-775">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="apply">
          <span data-ttu-id="71aa0-776">Eine Methode, die die Logik darstellt, die für jeden Member des Eingabesets einmal ausgewertet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-776">A method that represents the logic to evaluate once for each member of the input set.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="71aa0-777">Eine Methode, die angibt, wie ein Element des Resultsets bei Angabe eines Elements des Eingabe- und Anwendungssets abgeleitet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-777">A method that specifies how an element of the result set should be derived given an element of the input and apply sets.</span>
          </span>
          <span data-ttu-id="71aa0-778">Diese Methode muss eine Instanz eines Typs erzeugen, der mit SelectMany kompatibel ist und in eine <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> aufgelöst werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-778">This method must produce an instance of a type that is compatible with SelectMany and can be resolved into a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span>
          </span>
          <span data-ttu-id="71aa0-779">Anforderungen an die Kompatibilität für <c>TSelector</c> werden in den Hinweisen beschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-779">Compatibility requirements for <c>TSelector</c> are described in remarks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-780">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />, die den angegebenen <paramref name="apply" />-Ausdruck für jedes Element eines angegebenen Eingabesets einmal auswertet und eine Auflistung von Zeilen mit entsprechenden Eingabe- und apply-Spalten erzeugt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-780">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
          <span data-ttu-id="71aa0-781">Zeilen, für die <paramref name="apply" /> als leerer Satz ausgewertet wird, werden nicht eingeschlossen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-781">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span>
          </span>
          <span data-ttu-id="71aa0-782">Eine <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> wird dann erstellt, die den angegebenen <paramref name="selector" /> für jede Zeile auswählt und die Gesamtauflistung der Ergebnisse erzeugt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-782">A <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> is then created that selects the specified <paramref name="selector" /> over each row, producing the overall collection of results.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-783">Ein neues DbProjectExpression, das das Ergebnis des angegebenen Selektors aus einem neuen DbApplyExpression mit der angegebenen Eingabe auswählt und Bindungen anwendet und ein <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> von CrossApply.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-783">An new DbProjectExpression that selects the result of the given selector from a new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71aa0-784">Kompatibel mit SelectMany, `TSelector` muss abgeleitet sein <xref:System.Data.Common.CommandTrees.DbExpression>, oder ein anonymer Typ mit DbExpression-abgeleiteten Eigenschaften werden muss.</span><span class="sxs-lookup"><span data-stu-id="71aa0-784">To be compatible with SelectMany, `TSelector` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties.</span></span> <span data-ttu-id="71aa0-785">Die folgenden Beispiele von unterstützten Typen sind `TSelector`:</span><span class="sxs-lookup"><span data-stu-id="71aa0-785">The following are examples of supported types for `TSelector`:</span></span>  
  
```  
source.SelectMany(x => x.Property("RelatedCollection"), (source, apply) => apply.Property("Name"))  
```  
  
 <span data-ttu-id="71aa0-786">(`TSelector` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span><span class="sxs-lookup"><span data-stu-id="71aa0-786">(`TSelector` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span></span>  
  
```  
source.SelectMany(x => x.Property("RelatedCollection"), (source, apply) => new { SourceName = source.Property("Name"), RelatedName = apply.Property("Name") })  
```  
  
 <span data-ttu-id="71aa0-787">(`TSelector` ist ein anonymer Typ mit DbExpression-abgeleiteten Eigenschaften).</span><span class="sxs-lookup"><span data-stu-id="71aa0-787">(`TSelector` is an anonymous type with DbExpression-derived properties).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-788">Das Ergebnis von <paramref name="selector" /> ist bei Umwandlung in DbExpression NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-788">The result of <paramref name="selector" /> is null on conversion to DbExpression.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-789">Der von <paramref name="apply" /> erzeugte Ausdruck hat keinen Auflistungstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-789">The expression produced by <paramref name="apply" /> does not have a collection type.</span>
          </span>
          <span data-ttu-id="71aa0-790">weist keinen Auflistungstyp auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-790">does not have a collection type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Skip">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71aa0-791">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" />, die das angegebene Eingabeset nach den angegebenen Sortiervorschriften sortiert, bevor die angegebene Anzahl von Elementen übersprungen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-791">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that sorts the given input set by the given sort specifications before skipping the specified number of elements.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbSortExpression argument, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSkipExpression Skip(class System.Data.Common.CommandTrees.DbSortExpression argument, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Skip (argument As DbSortExpression, count As DbExpression) As DbSkipExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSkipExpression ^ Skip(System::Data::Common::CommandTrees::DbSortExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSkipExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="71aa0-792">Eine <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />, die das sortierte Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-792">A <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that specifies the sorted input set.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="71aa0-793">Ein Ausdruck, der die Anzahl der zu überspringenden Elemente des geordneten Satzes angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-793">An expression the specifies how many elements of the ordered set to skip.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-794">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" />, der die angegebene Anzahl von Elementen aus dem angegebenen sortierten Eingabeset überspringt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-794">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that skips the specified number of elements from the given sorted input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-795">Ein neues DbSkipExpression, das den Vorgang des Überspringens darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-795">A new DbSkipExpression that represents the skip operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-796">
            <paramref name="argument" /> oder <paramref name="count" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-796">
              <paramref name="argument" /> or <paramref name="count" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-797">
            <paramref name="count" /> ist nicht <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> oder <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> oder weist einen Ergebnistyp auf, der nicht gleich einem 64-Bit-Ganzzahl-Typ und nicht zu einem solchen heraufstufbar ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-797">
              <paramref name="count" /> is not <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> or <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> or has a result type that is not equal or promotable to a 64-bit integer type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSkipExpression Skip(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Skip (input As DbExpressionBinding, sortOrder As IEnumerable(Of DbSortClause), count As DbExpression) As DbSkipExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSkipExpression ^ Skip(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbSortClause ^&gt; ^ sortOrder, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSkipExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="sortOrder" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt;" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="71aa0-798">Eine Ausdrucksbindung, die das Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-798">An expression binding that specifies the input set.</span>
          </span>
        </param>
        <param name="sortOrder">
          <span data-ttu-id="71aa0-799">Eine Liste der Sortiervorschriften, die bestimmen, wie die Elemente des Eingabesets sortiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-799">A list of sort specifications that determine how the elements of the input set should be sorted.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="71aa0-800">Ein Ausdruck, der die Anzahl der zu überspringenden Elemente des geordneten Satzes angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-800">An expression the specifies how many elements of the ordered set to skip.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-801">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" />, die das angegebene Eingabeset nach den angegebenen Sortiervorschriften sortiert, bevor die angegebene Anzahl von Elementen übersprungen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-801">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that sorts the given input set by the given sort specifications before skipping the specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-802">Ein neues DbSkipExpression, das den Vorgang des Überspringens darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-802">A new DbSkipExpression that represents the skip operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-803">
            <paramref name="input" />, <paramref name="sortOrder" /> oder <paramref name="count" /> ist NULL oder <paramref name="sortOrder" /> enthält NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-803">
              <paramref name="input" />,  <paramref name="sortOrder" /> or <paramref name="count" /> is null, or <paramref name="sortOrder" /> contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-804">
            <paramref name="sortOrder" /> ist leer oder <paramref name="count" /> ist es nicht oder <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> oder <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> weist einen Ergebnistyp auf, der nicht gleich einem 64-Bit-Ganzzahl-Typ und nicht zu einem solchen heraufstufbar ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-804">
              <paramref name="sortOrder" /> is empty, or <paramref name="count" /> is not <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> or <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> or has a result type that is not equal or promotable to a 64-bit integer type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression Sort (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression Sort(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sort (input As DbExpressionBinding, sortOrder As IEnumerable(Of DbSortClause)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ Sort(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbSortClause ^&gt; ^ sortOrder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="sortOrder" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt;" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="71aa0-805">Eine Ausdrucksbindung, die das Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-805">An expression binding that specifies the input set.</span>
          </span>
        </param>
        <param name="sortOrder">
          <span data-ttu-id="71aa0-806">Eine Liste der Sortiervorschriften, die bestimmen, wie die Elemente des Eingabesets sortiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-806">A list of sort specifications that determine how the elements of the input set should be sorted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-807">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />, die das angegebene Eingabeset nach den angegebenen Sortiervorschriften sortiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-807">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort specifications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-808">Ein neues DbSortExpression, das den Sortiervorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-808">A new DbSortExpression that represents the sort operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-809">
            <paramref name="input" /> oder <paramref name="sortOrder" /> ist NULL oder <paramref name="sortOrder" /> enthält NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-809">
              <paramref name="input" /> or <paramref name="sortOrder" /> is null, or <paramref name="sortOrder" /> contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-810">
            <paramref name="sortOrder" /> ist leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-810">
              <paramref name="sortOrder" /> is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Take">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLimitExpression Take (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLimitExpression Take(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Take (argument As DbExpression, count As DbExpression) As DbLimitExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLimitExpression ^ Take(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLimitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="71aa0-811">Ein Ausdruck, der die Eingabeauflistung angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-811">An expression that specifies the input collection.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="71aa0-812">Ein Ausdruck, der den Grenzwert angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-812">An expression that specifies the limit value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-813">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" />, der die Anzahl der Elemente in der Argumentsammlung auf den angegebenen Zählgrenzwert beschränkt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-813">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> that restricts the number of elements in the Argument collection to the specified count Limit value.</span>
          </span>
          <span data-ttu-id="71aa0-814">Verknüpfte Ergebnisse sind nicht in der Ausgabe enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-814">Tied results are not included in the output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-815">Ein neues DbLimitExpression mit den angegebenen Argument- und Zählgrenzwerten, das verknüpfte Ergebnisse nicht einschließt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-815">A new DbLimitExpression with the specified argument and count limit values that does not include tied results.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-816">
            <paramref name="argument" /> oder <paramref name="count" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-816">
              <paramref name="argument" /> or <paramref name="count" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-817">
            <paramref name="argument" /> hat keinen Auflistungsergebnistyp, oder <paramref name="count" /> hat keinen Ergebnistyp, der gleich einem 64-Bit-Ganzzahl-Typ oder zu einem solchen heraufstufbar ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-817">
              <paramref name="argument" /> does not have a collection result type,  <paramref name="count" /> does not have a result type that is equal or promotable to a 64-bit integer type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenBy">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71aa0-818">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />, das die Sortierreihenfolge der angegebenen Eingabereihenfolge zusammen mit dem angegebenen Sortierschlüssel in aufsteigender Sortierreihenfolge und mit Standardsortierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-818">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with default collation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenBy(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenBy(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="71aa0-819">Eine DbSortExpression, die das geordnete Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-819">A DbSortExpression that specifies the ordered input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="71aa0-820">Eine Methode, die angibt, wie der zusätzliche Sortierschlüsselausdruck für einen angegebenen Member des Eingabesets abgeleitet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-820">A method that specifies how to derive the additional sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="71aa0-821">Diese Methode muss einen Ausdruck mit einem in der Reihenfolge vergleichbaren Ergebnistyp erzeugen, der die Sortierschlüsseldefinition bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-821">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-822">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />, das die Sortierreihenfolge der angegebenen Eingabereihenfolge zusammen mit dem angegebenen Sortierschlüssel in aufsteigender Sortierreihenfolge und mit Standardsortierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-822">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with default collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-823">Ein neues DbSortExpression, das den neuen gesamten ORDER-BY-Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-823">A new DbSortExpression that represents the new overall order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-824">Der von <paramref name="sortKey" /> erzeugte Ausdruck ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-824">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-825">
            <paramref name="sortKey" /> weist keinen in der Reihenfolge vergleichbaren Zeichenfolgen-Ergebnistyp auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-825">
              <paramref name="sortKey" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ThenBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenBy(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenBy(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="71aa0-826">Eine DbSortExpression, die das geordnete Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-826">A DbSortExpression that specifies the ordered input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="71aa0-827">Eine Methode, die angibt, wie der zusätzliche Sortierschlüsselausdruck für einen angegebenen Member des Eingabesets abgeleitet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-827">A method that specifies how to derive the additional sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="71aa0-828">Diese Methode muss einen Ausdruck mit einem in der Reihenfolge vergleichbaren Ergebnistyp erzeugen, der die Sortierschlüsseldefinition bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-828">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <param name="collation">
          <span data-ttu-id="71aa0-829">Die zu verwendende Sortierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-829">The collation to sort under.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-830">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />, das die Sortierreihenfolge der angegebenen Eingabereihenfolge zusammen mit dem angegebenen Sortierschlüssel in aufsteigender Sortierreihenfolge und mit der angegebenen Standardsortierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-830">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with the specified collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-831">Ein neues DbSortExpression, das den neuen gesamten ORDER-BY-Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-831">A new DbSortExpression that represents the new overall order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-832">Der von <paramref name="sortKey" /> erzeugte Ausdruck ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-832">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-833">Der Ausdruck, der von <paramref name="sortKey" /> erzeugt wurde, hat keinen in der Reihenfolge vergleichbaren Zeichenfolgenergebnistyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-833">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71aa0-834">
            <paramref name="collation" /> ist leer oder enthält nur Leerzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-834">
              <paramref name="collation" /> is empty or contains only space characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenByDescending">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71aa0-835">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />, das die Sortierreihenfolge der angegebenen Eingabereihenfolge zusammen mit dem angegebenen Sortierschlüssel in absteigender Sortierreihenfolge und mit Standardsortierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-835">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with default collation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenByDescending(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenByDescending(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="71aa0-836">Eine DbSortExpression, die das geordnete Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-836">A DbSortExpression that specifies the ordered input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="71aa0-837">Eine Methode, die angibt, wie der zusätzliche Sortierschlüsselausdruck für einen angegebenen Member des Eingabesets abgeleitet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-837">A method that specifies how to derive the additional sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="71aa0-838">Diese Methode muss einen Ausdruck mit einem in der Reihenfolge vergleichbaren Ergebnistyp erzeugen, der die Sortierschlüsseldefinition bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-838">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-839">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />, das die Sortierreihenfolge der angegebenen Eingabereihenfolge zusammen mit dem angegebenen Sortierschlüssel in absteigender Sortierreihenfolge und mit Standardsortierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-839">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with default collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-840">Ein neues DbSortExpression, das den neuen gesamten ORDER-BY-Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-840">A new DbSortExpression that represents the new overall order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-841">Der von <paramref name="sortKey" /> erzeugte Ausdruck ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-841">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-842">Der Ausdruck, der von <paramref name="sortKey" /> erzeugt wurde, hat keinen in der Reihenfolge vergleichbaren Ergebnistyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-842">The expression produced by <paramref name="sortKey" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ThenByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenByDescending(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenByDescending(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="71aa0-843">Eine DbSortExpression, die das geordnete Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-843">A DbSortExpression that specifies the ordered input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="71aa0-844">Eine Methode, die angibt, wie der zusätzliche Sortierschlüsselausdruck für einen angegebenen Member des Eingabesets abgeleitet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-844">A method that specifies how to derive the additional sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="71aa0-845">Diese Methode muss einen Ausdruck mit einem in der Reihenfolge vergleichbaren Ergebnistyp erzeugen, der die Sortierschlüsseldefinition bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-845">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <param name="collation">
          <span data-ttu-id="71aa0-846">Die zu verwendende Sortierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-846">The collation to sort under.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-847">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />, das die Sortierreihenfolge der angegebenen Eingabereihenfolge zusammen mit dem angegebenen Sortierschlüssel in absteigender Sortierreihenfolge und mit der angegebenen Standardsortierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-847">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with the specified collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-848">Ein neues DbSortExpression, das den neuen gesamten ORDER-BY-Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-848">A new DbSortExpression that represents the new overall order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-849">Der von <paramref name="sortKey" /> erzeugte Ausdruck ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-849">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-850">Der Ausdruck, der von <paramref name="sortKey" /> erzeugt wurde, hat keinen in der Reihenfolge vergleichbaren Zeichenfolgenergebnistyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-850">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71aa0-851">
            <paramref name="collation" /> ist leer oder enthält nur Leerzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-851">
              <paramref name="collation" /> is empty or contains only space characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSortClause">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71aa0-852">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> mit aufsteigender Sortierreihenfolge und Standardsortierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-852">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with an ascending sort order and default collation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSortClause">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClause(class System.Data.Common.CommandTrees.DbExpression key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClause (key As DbExpression) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClause(System::Data::Common::CommandTrees::DbExpression ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="71aa0-853">Der Ausdruck, der den Sortierschlüssel definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-853">The expression that defines the sort key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-854">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> mit aufsteigender Sortierreihenfolge und Standardsortierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-854">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with an ascending sort order and default collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-855">Eine neue Sortierungsklausel mit dem angegebenen Sortierschlüssel und aufsteigender Sortierreihenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-855">A new sort clause with the given sort key and ascending sort order.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-856">
            <paramref name="key" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-856">
              <paramref name="key" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-857">
            <paramref name="key" /> weist keinen in der Reihenfolge vergleichbaren Zeichenfolgen-Ergebnistyp auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-857">
              <paramref name="key" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSortClause">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClause(class System.Data.Common.CommandTrees.DbExpression key, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClause (key As DbExpression, collation As String) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClause(System::Data::Common::CommandTrees::DbExpression ^ key, System::String ^ collation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="71aa0-858">Der Ausdruck, der den Sortierschlüssel definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-858">The expression that defines the sort key.</span>
          </span>
        </param>
        <param name="collation">
          <span data-ttu-id="71aa0-859">Die zu verwendende Sortierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-859">The collation to sort under.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-860">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> mit aufsteigender Sortierreihenfolge und der angegebenen Sortierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-860">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with an ascending sort order and the specified collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-861">Eine neue Sortierungsklausel mit dem angegebenen Sortierschlüssel, Sortierreihenfolge und aufsteigenden Sortierreihenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-861">A new sort clause with the given sort key and collation, and ascending sort order.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-862">
            <paramref name="key" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-862">
              <paramref name="key" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71aa0-863">
            <paramref name="collation" /> ist leer oder enthält nur Leerzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-863">
              <paramref name="collation" /> is empty or contains only space characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-864">
            <paramref name="key" /> weist keinen in der Reihenfolge vergleichbaren Zeichenfolgen-Ergebnistyp auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-864">
              <paramref name="key" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSortClauseDescending">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71aa0-865">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> mit absteigender Sortierreihenfolge und Standardsortierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-865">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with a descending sort order and default collation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSortClauseDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending(class System.Data.Common.CommandTrees.DbExpression key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClauseDescending (key As DbExpression) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClauseDescending(System::Data::Common::CommandTrees::DbExpression ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="71aa0-866">Der Ausdruck, der den Sortierschlüssel definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-866">The expression that defines the sort key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-867">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> mit absteigender Sortierreihenfolge und Standardsortierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-867">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with a descending sort order and default collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-868">Eine neue Sortierungsklausel mit dem angegebenen Sortierschlüssel und absteigender Sortierreihenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-868">A new sort clause with the given sort key and descending sort order.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-869">
            <paramref name="key" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-869">
              <paramref name="key" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-870">
            <paramref name="key" /> weist keinen in der Reihenfolge vergleichbaren Zeichenfolgen-Ergebnistyp auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-870">
              <paramref name="key" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSortClauseDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending(class System.Data.Common.CommandTrees.DbExpression key, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClauseDescending (key As DbExpression, collation As String) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClauseDescending(System::Data::Common::CommandTrees::DbExpression ^ key, System::String ^ collation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="71aa0-871">Der Ausdruck, der den Sortierschlüssel definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-871">The expression that defines the sort key.</span>
          </span>
        </param>
        <param name="collation">
          <span data-ttu-id="71aa0-872">Die zu verwendende Sortierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-872">The collation to sort under.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-873">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> mit absteigender Sortierreihenfolge und der angegebenen Sortierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-873">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with a descending sort order and the specified collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-874">Eine neue Sortierungsklausel mit dem angegebenen Sortierschlüssel, Sortierreihenfolge und absteigender Sortierreihenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-874">A new sort clause with the given sort key and collation, and descending sort order.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-875">
            <paramref name="key" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-875">
              <paramref name="key" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71aa0-876">
            <paramref name="collation" /> ist leer oder enthält nur Leerzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-876">
              <paramref name="collation" /> is empty or contains only space characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-877">
            <paramref name="key" /> weist keinen in der Reihenfolge vergleichbaren Zeichenfolgen-Ergebnistyp auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-877">
              <paramref name="key" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TreatAs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbTreatExpression TreatAs (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage treatType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbTreatExpression TreatAs(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage treatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TreatAs (argument As DbExpression, treatType As TypeUsage) As DbTreatExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbTreatExpression ^ TreatAs(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ treatType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbTreatExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="treatType" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="71aa0-878">Ein Ausdruck, der die Instanz angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-878">An expression that specifies the instance.</span>
          </span>
        </param>
        <param name="treatType">
          <span data-ttu-id="71aa0-879">Typmetadaten für den mit treat as angegebenen Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-879">Type metadata for the treat-as type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-880">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-880">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-881">Ein neues DbTreatExpression mit dem angegebenen Argument und Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-881">A new DbTreatExpression with the specified argument and type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71aa0-882">DbTreatExpression erfordert, dass `argument` wurde von einem polymorphen Ergebnistyp, und dass `treatType` ist ein Typ aus der gleichen Typhierarchie wie dieser Ergebnistyp.</span><span class="sxs-lookup"><span data-stu-id="71aa0-882">DbTreatExpression requires that `argument` has a polymorphic result type, and that `treatType` is a type from the same type hierarchy as that result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-883">
            <paramref name="argument" /> oder <paramref name="treatType" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-883">
              <paramref name="argument" /> or <paramref name="treatType" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-884">
            <paramref name="treatType" /> befindet sich nicht in der gleichen Typenhierarchie wie der Ergebnistyp von <paramref name="argument" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-884">
              <paramref name="treatType" /> is not in the same type hierarchy as the result type of <paramref name="argument" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="True">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression True { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Data.Common.CommandTrees.DbConstantExpression True" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property True As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Data::Common::CommandTrees::DbConstantExpression ^ True { System::Data::Common::CommandTrees::DbConstantExpression ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="71aa0-885">Ruft eine <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> mit dem booleschen Wert <see langword="true" /> ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-885">Gets a <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="true" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71aa0-886">Eine <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> mit dem booleschen Wert <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-886">A <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnaryMinus">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression UnaryMinus (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression UnaryMinus(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UnaryMinus (argument As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ UnaryMinus(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="71aa0-887">Ein Ausdruck, der das Argument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-887">An expression that specifies the argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-888">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />, die den Wert des Arguments negiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-888">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that negates the value of the argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-889">Ein neues DbArithmeticExpression, der den Negationsvorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-889">A new DbArithmeticExpression representing the negation operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-890">
            <paramref name="argument" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-890">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-891">Kein numerischer Ergebnistyp für <paramref name="argument" /> vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-891">No numeric result type exists for <paramref name="argument" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Union (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Union(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Union (left As DbExpression, right As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Union(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="71aa0-892">Ein Ausdruck, der das linke Mengenargument definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-892">An expression that defines the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="71aa0-893">Ein Ausdruck, der das rechte Mengenargument definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-893">An expression that defines the right set argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-894">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, der die Gesamtmenge der linken und der rechten Mengenargumente ohne Duplikate berechnet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-894">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that computes the union of the left and right set arguments with duplicates removed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-895">Ein neues DbExpression-Objekt, das die Gesamtmenge, ohne Duplikate, aus den linken und rechten Argumenten berechnet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-895">A new DbExpression that computes the union, without duplicates, of the left and right arguments.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-896">
            <paramref name="left" /> oder <paramref name="right" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-896">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-897">Zwischen <paramref name="left" /> und <paramref name="right" /> ist kein allgemeiner Auflistungsergebnistyp mit einem auf Gleichheit vergleichbaren Elementtyp vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-897">No common collection result type with an equality-comparable element type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UnionAll">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbUnionAllExpression UnionAll (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbUnionAllExpression UnionAll(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UnionAll (left As DbExpression, right As DbExpression) As DbUnionAllExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbUnionAllExpression ^ UnionAll(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbUnionAllExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="71aa0-898">Ein Ausdruck, der das linke Mengenargument definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-898">An expression that defines the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="71aa0-899">Ein Ausdruck, der das rechte Mengenargument definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-899">An expression that defines the right set argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-900">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" />, die die Gesamtmenge der linken und der rechten Mengenargumente berechnet, ohne Duplikate zu entfernen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-900">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /> that computes the union of the left and right set arguments and does not remove duplicates.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-901">Ein neues DbUnionAllExpression-Objekt als Vereinigung, einschließlich Duplikate, der Gesamtmenge der linken und rechten Argumente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-901">A new DbUnionAllExpression that union, including duplicates, of the left and right arguments.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-902">
            <paramref name="left" /> oder <paramref name="right" /> ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-902">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-903">Zwischen <paramref name="left" /> und <paramref name="right" /> ist kein allgemeiner Auflistungsergebnistyp mit einem auf Gleichheit vergleichbaren Elementtyp vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-903">No common collection result type with an equality-comparable element type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Variable">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbVariableReferenceExpression Variable (this System.Data.Metadata.Edm.TypeUsage type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbVariableReferenceExpression Variable(class System.Data.Metadata.Edm.TypeUsage type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Variable (type As TypeUsage, name As String) As DbVariableReferenceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbVariableReferenceExpression ^ Variable(System::Data::Metadata::Edm::TypeUsage ^ type, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbVariableReferenceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="71aa0-904">Der Typ der Variablen, auf die verwiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-904">The type of the referenced variable.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="71aa0-905">Der Name der Variable, auf die verwiesen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-905">The name of the referenced variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-906">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />, die auf eine Variable mit dem angegebenen Namen und Typ verweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-906">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> that references a variable with the specified name and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-907">Ein DbVariableReferenceExpression, der einen Verweis auf eine Variable mit dem angegebenen Namen und Typ darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-907">A DbVariableReferenceExpression that represents a reference to a variable with the specified name and type.</span>
          </span>
          <span data-ttu-id="71aa0-908">Der Ergebnistyp des Ausdrucks ist derselbe <paramref name="type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-908">The result type of the expression will be the same as <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFilterExpression Where (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFilterExpression Where(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where (source As DbExpression, predicate As Func(Of DbExpression, DbExpression)) As DbFilterExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFilterExpression ^ Where(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFilterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="71aa0-909">Ein Ausdruck, der das Eingabeset angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-909">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="71aa0-910">Eine Methode, die ein Prädikat darstellt, das für jeden Member des Eingabesets ausgewertet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-910">A method representing the predicate to evaluate for each member of the input set.</span>
          </span>
          <span data-ttu-id="71aa0-911">Diese Methode muss einen Ausdruck mit einem booleschen Ergebnistyp erzeugen, der die Prädikatlogik bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-911">This method must produce an expression with a Boolean result type that provides the predicate logic.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71aa0-912">Erstellt einen neuen <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" />, der die Elemente im angegebenen Eingabeset mithilfe des angegebenen Prädikats filtert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-912">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> that filters the elements in the given input set using the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71aa0-913">Ein neues DbQuantifierExpression, das den Any-Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-913">A new DbQuantifierExpression that represents the Any operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71aa0-914">Der von <paramref name="predicate" /> erzeugte Ausdruck ist NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-914">The expression produced by <paramref name="predicate" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71aa0-915">Der von <paramref name="predicate" /> erzeugte Ausdruck besitzt keinen booleschen Ergebnistyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71aa0-915">The expression produced by <paramref name="predicate" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>