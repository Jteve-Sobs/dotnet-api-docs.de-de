<Type Name="Row" FullName="System.Data.Common.CommandTrees.ExpressionBuilder.Row">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a89782f797cb8b84711708b139cf629877748c0b" />
    <Meta Name="ms.sourcegitcommit" Value="d0bb31ec8354fa58c62c2a646057eec11d3e2150" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/17/2018" />
    <Meta Name="ms.locfileid" Value="36694204" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Row" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Row extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.ExpressionBuilder.Row" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Row" />
  <TypeSignature Language="C++ CLI" Value="public ref class Row sealed" />
  <TypeSignature Language="F#" Value="type Row = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f94ef-101">Stellt eine konstruktorähnliche Möglichkeit zum Aufrufen von <see cref="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" /> bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f94ef-101">Provides a constructor-like means of calling <see cref="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Row (System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt; columnValue, params System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;[] columnValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt; columnValue, valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;[] columnValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.Row.#ctor(System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnValue As KeyValuePair(Of String, DbExpression), ParamArray columnValues As KeyValuePair(Of String, DbExpression)())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Row(System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt; columnValue, ... cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ columnValues);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.CommandTrees.ExpressionBuilder.Row : System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt; * System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;[] -&gt; System.Data.Common.CommandTrees.ExpressionBuilder.Row" Usage="new System.Data.Common.CommandTrees.ExpressionBuilder.Row (columnValue, columnValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnValue" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="columnValues" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="columnValue">
          <span data-ttu-id="f94ef-102">Ein Schlüssel-Wert-Paar, das die erste Spalte in der neuen Zeileninstanz bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f94ef-102">A key-value pair that provides the first column in the new row instance.</span>
          </span>
          <span data-ttu-id="f94ef-103">(erforderlich)</span>
          <span class="sxs-lookup">
            <span data-stu-id="f94ef-103">(required)</span>
          </span>
        </param>
        <param name="columnValues">
          <span data-ttu-id="f94ef-104">Ein Schlüssel-Wert-Paare, das alle folgenden Spalten in der neuen Zeileninstanz bereitstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f94ef-104">A key-value pairs that provide any subsequent columns in the new row instance.</span>
          </span>
          <span data-ttu-id="f94ef-105">(optional)</span>
          <span class="sxs-lookup">
            <span data-stu-id="f94ef-105">(optional)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f94ef-106">Initialisiert eine neue Instanz der <see cref="T:System.Data.Common.CommandTrees.ExpressionBuilder.Row" />-Klasse mit dem angegebenen Wert der ersten Spalte und optionalen aufeinanderfolgenden Spaltenwerten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f94ef-106">Initializes a new instance of the <see cref="T:System.Data.Common.CommandTrees.ExpressionBuilder.Row" /> class with the specified first column value and optional successive column values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Data.Common.CommandTrees.DbExpression (System.Data.Common.CommandTrees.ExpressionBuilder.Row row);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Data.Common.CommandTrees.DbExpression op_Implicit(class System.Data.Common.CommandTrees.ExpressionBuilder.Row row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit(System.Data.Common.CommandTrees.ExpressionBuilder.Row)~System.Data.Common.CommandTrees.DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Data::Common::CommandTrees::DbExpression ^(System::Data::Common::CommandTrees::ExpressionBuilder::Row ^ row);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Data.Common.CommandTrees.ExpressionBuilder.Row -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Data.Common.CommandTrees.ExpressionBuilder.Row" />
      </Parameters>
      <Docs>
        <param name="row">
          <span data-ttu-id="f94ef-107">Die zu konvertierende Reihe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f94ef-107">The row to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f94ef-108">Konvertiert die angegebene Zeile in einen <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f94ef-108">Converts the specified row to a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f94ef-109">Ein <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, der die konvertierte Zeile darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f94ef-109">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that represents the converted row.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToExpression">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbNewInstanceExpression ToExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.CommandTrees.DbNewInstanceExpression ToExpression() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression" />
      <MemberSignature Language="VB.NET" Value="Public Function ToExpression () As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::CommandTrees::DbNewInstanceExpression ^ ToExpression();" />
      <MemberSignature Language="F#" Value="member this.ToExpression : unit -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="row.ToExpression " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f94ef-110">Erstellt eine neue <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />, das eine neue Zeile basierend auf den Spalten erstellt, die in dieser Zeileninstanz enthalten sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f94ef-110">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a new row based on the columns contained in this Row instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f94ef-111">Ein neues DbNewInstanceExpression, das eine Zeile mit den gleichen Spaltennamen und DbExpressions-Werten wie diese Zeileninstanz erstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f94ef-111">A new DbNewInstanceExpression that constructs a row with the same column names and DbExpression values as this Row instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>