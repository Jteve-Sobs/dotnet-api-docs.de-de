<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EdmFunctions.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51ade158612276cd38148f7062489c3007520cefe.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1ade158612276cd38148f7062489c3007520cefe</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions">
          <source>Provides an API to construct <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>s that invoke canonical EDM functions, and allows that API to be accessed as extension methods on the expression type itself.</source>
          <target state="translated">Stellt eine API zum Erstellen von <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbExpression" /&gt;</ph>s bereit, die kanonische EDM-Funktionen aufrufen, und lässt den Zugriff auf die API als Erweiterungsmethoden für den Ausdruckstypen "selbst" zu.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the numeric value.</source>
          <target state="translated">Ein Ausdruck, der den numerischen Wert angibt.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Abs' function with the specified argument, which must each have a numeric result type.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, der die kanonische Abs-Funktion mit dem angegebenen Argument aufruft, das jeweils einen numerischen Ergebnistyp aufweisen muss.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von <bpt id="p1">**</bpt>value<ept id="p1">**</ept> identisch.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the absolute value of <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das den absoluten Wert von <bpt id="p1">**</bpt>value<ept id="p1">**</ept> zurückgibt.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>value<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>value<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated">Ein Ausdruck, der den Wert angibt, dem <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> hinzugefügt werden soll.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of days to add to <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">Ein Ausdruck, der die Anzahl der Tage angibt, die <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept> hinzugefügt werden soll.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddDays' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, der die kanonische AddDays-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp DateTime oder DateTimeOffset und einen ganzzahligen Ergebnistyp aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist identisch mit dem Ergebnistyp von <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that adds the number of days specified by <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> to the value specified by <bpt id="p2">**</bpt>dateValue<ept id="p2">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das die Anzahl der Tage, die von <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> angegeben wird, zu dem Wert addiert, der von <bpt id="p2">**</bpt>dateValue<ept id="p2">**</ept> angegeben wurde.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated">Ein Ausdruck, der den Wert angibt, dem <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> hinzugefügt werden soll.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of hours to add to <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">Ein Ausdruck, der die Anzahl der Stunden angibt, die <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> hinzugefügt werden soll.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddHours' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, der die kanonische AddHours-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp DateTime, DateTimeOffset oder Time und einen ganzzahligen Ergebnistyp aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> identisch.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that adds the number of hours specified by <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> to the value specified by <bpt id="p2">**</bpt>timeValue<ept id="p2">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das die Anzahl der Stunden, die von <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> angegeben wird, zu dem Wert addiert, der von <bpt id="p2">**</bpt>timeValue<ept id="p2">**</ept> angegeben wurde.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated">Ein Ausdruck, der den Wert angibt, dem <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> hinzugefügt werden soll.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of microseconds to add to <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">Ein Ausdruck, der die Anzahl der Mikrosekunden angibt, die <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> hinzugefügt werden soll.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddMicroseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, der die kanonische AddMicroseconds-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp DateTime, DateTimeOffset oder Time und einen ganzzahligen Ergebnistyp aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> identisch.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that adds the number of microseconds specified by <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> to the value specified by <bpt id="p2">**</bpt>timeValue<ept id="p2">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das die Anzahl der Mikrosekunden, die von <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> angegeben wird, zu dem Wert addiert, der von <bpt id="p2">**</bpt>timeValue<ept id="p2">**</ept> angegeben wurde.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated">Ein Ausdruck, der den Wert angibt, dem <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> hinzugefügt werden soll.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of milliseconds to add to <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">Ein Ausdruck, der die Anzahl der Millisekunden angibt, die <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> hinzugefügt werden soll.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddMilliseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, der die kanonische AddMilliseconds-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp DateTime, DateTimeOffset oder Time und einen ganzzahligen Ergebnistyp aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> identisch.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that adds the number of milliseconds specified by <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> to the value specified by <bpt id="p2">**</bpt>timeValue<ept id="p2">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das die Anzahl der Mikrosekunden, die von <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> angegeben wird, zu dem Wert addiert, der von <bpt id="p2">**</bpt>timeValue<ept id="p2">**</ept> angegeben wurde.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated">Ein Ausdruck, der den Wert angibt, dem <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> hinzugefügt werden soll.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of minutes to add to <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">Ein Ausdruck, der die Anzahl der Minuten angibt, die <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> hinzugefügt werden soll.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddMinutes' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, der die kanonische AddMinutes-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp DateTime, DateTimeOffset oder Time und einen ganzzahligen Ergebnistyp aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> identisch.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that adds the number of minutes specified by <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> to the value specified by <bpt id="p2">**</bpt>timeValue<ept id="p2">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das die Anzahl der Minuten, die von <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> angegeben wird, zu dem Wert addiert, der von <bpt id="p2">**</bpt>timeValue<ept id="p2">**</ept> angegeben wurde.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated">Ein Ausdruck, der den Wert angibt, dem <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> hinzugefügt werden soll.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of months to add to <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">Ein Ausdruck, der die Anzahl der Monate angibt, die <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept> hinzugefügt werden soll.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddMonths' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, der die kanonische AddMonths-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp DateTime oder DateTimeOffset und einen ganzzahligen Ergebnistyp aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist identisch mit dem Ergebnistyp von <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that adds the number of months specified by <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> to the value specified by <bpt id="p2">**</bpt>dateValue<ept id="p2">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das die Anzahl der Monate, die von <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> angegeben wird, zu dem Wert addiert, der von <bpt id="p2">**</bpt>dateValue<ept id="p2">**</ept> angegeben wurde.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated">Ein Ausdruck, der den Wert angibt, dem <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> hinzugefügt werden soll.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of nanoseconds to add to <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">Ein Ausdruck, der die Anzahl der Nanosekunden angibt, die <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> hinzugefügt werden soll.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddNanoseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, der die kanonische AddNanoseconds-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp DateTime, DateTimeOffset oder Time und einen ganzzahligen Ergebnistyp aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> identisch.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that adds the number of nanoseconds specified by <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> to the value specified by <bpt id="p2">**</bpt>timeValue<ept id="p2">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das die Anzahl der Nanosekunden, die von <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> angegeben wird, zu dem Wert addiert, der von <bpt id="p2">**</bpt>timeValue<ept id="p2">**</ept> angegeben wurde.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated">Ein Ausdruck, der den Wert angibt, dem <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> hinzugefügt werden soll.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of seconds to add to <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">Ein Ausdruck, der die Anzahl der Sekunden angibt, die <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> hinzugefügt werden soll.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddSeconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, der die kanonische AddSeconds-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp DateTime, DateTimeOffset oder Time und einen ganzzahligen Ergebnistyp aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> identisch.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that adds the number of seconds specified by <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> to the value specified by <bpt id="p2">**</bpt>timeValue<ept id="p2">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das die Anzahl der Sekunden, die von <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> angegeben wird, zu dem Wert addiert, der von <bpt id="p2">**</bpt>timeValue<ept id="p2">**</ept> angegeben wurde.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value to which <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept>should be added.</source>
          <target state="translated">Ein Ausdruck, der den Wert angibt, dem <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> hinzugefügt werden soll.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of years to add to <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">Ein Ausdruck, der die Anzahl der Jahre angibt, die <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept> hinzugefügt werden soll.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'AddYears' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, der die kanonische AddYears-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp DateTime oder DateTimeOffset und einen ganzzahligen Ergebnistyp aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist identisch mit dem Ergebnistyp von <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that adds the number of years specified by <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> to the value specified by <bpt id="p2">**</bpt>dateValue<ept id="p2">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das die Anzahl der Jahre, die von <bpt id="p1">**</bpt>addValue<ept id="p1">**</ept> angegeben wird, zu dem Wert addiert, der von <bpt id="p2">**</bpt>dateValue<ept id="p2">**</ept> angegeben wurde.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept> <bpt id="p2">**</bpt>addValue<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection from which the average value should be computed.</source>
          <target state="translated">Ein Ausdruck, der die Sammlung angibt, aus der der Durchschnittswert abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Avg' function over the specified collection.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>-Klasse, die die kanonische „Avg“-Funktion über die angegebene Sammlung aufruft.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the element type of the collection.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist identisch mit dem Elementtyp der Sammlung.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that produces the average value.</source>
          <target state="translated">Eine neue „DbFunctionExpression“-Klasse, die den Durchschnittswert erzeugt.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Auflistung<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Auflistung<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first operand.</source>
          <target state="translated">Ein Ausdruck, der den ersten Operanden angibt.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second operand.</source>
          <target state="translated">Ein Ausdruck, der den zweiten Operanden angibt.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'BitwiseAnd' function with the specified arguments, which must have the same integer numeric result type.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, der die kanonische BitwiseAnd-Funktion mit den angegebenen Argumenten aufruft, die den gleichen ganzzahligen numerischen Ergebnistyp aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the type of the arguments.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks entspricht dem Typ des Arguments.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the value produced by performing the bitwise AND of <bpt id="p1">**</bpt>value1<ept id="p1">**</ept> and <bpt id="p2">**</bpt>value2<ept id="p2">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das den Wert zurückgibt, der durch das bitweise AND von <bpt id="p1">**</bpt>value1<ept id="p1">**</ept> und <bpt id="p2">**</bpt>value2<ept id="p2">**</ept> ermittelt wird.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value1<ept id="p1">**</ept> <bpt id="p2">**</bpt>value2<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>value1<ept id="p1">**</ept> <bpt id="p2">**</bpt>value2<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value1<ept id="p1">**</ept> <bpt id="p2">**</bpt>value2<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>value1<ept id="p1">**</ept> <bpt id="p2">**</bpt>value2<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first operand.</source>
          <target state="translated">Ein Ausdruck, der den ersten Operanden angibt.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'BitwiseNot' function with the specified argument, which must have an integer numeric result type.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, der die kanonische BitwiseNot-Funktion mit dem angegebenen Argument aufruft, das einen ganzzahligen numerischen Ergebnistyp aufweisen muss.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the type of the arguments.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks entspricht dem Typ des Arguments.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the value produced by performing the bitwise NOT of <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das den Wert zurückgibt, der durch das bitweise NOT von <bpt id="p1">**</bpt>value<ept id="p1">**</ept> ermittelt wird.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>value<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>value<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first operand.</source>
          <target state="translated">Ein Ausdruck, der den ersten Operanden angibt.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second operand.</source>
          <target state="translated">Ein Ausdruck, der den zweiten Operanden angibt.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'BitwiseOr' function with the specified arguments, which must have the same integer numeric result type.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, der die kanonische BitwiseOr-Funktion mit den angegebenen Argumenten aufruft, die den gleichen ganzzahligen numerischen Ergebnistyp aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the type of the arguments.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks entspricht dem Typ des Arguments.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the value produced by performing the bitwise OR of <bpt id="p1">**</bpt>value1<ept id="p1">**</ept> and <bpt id="p2">**</bpt>value2<ept id="p2">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das den Wert zurückgibt, der durch das bitweise OR von <bpt id="p1">**</bpt>value1<ept id="p1">**</ept> und <bpt id="p2">**</bpt>value2<ept id="p2">**</ept> ermittelt wird.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value1<ept id="p1">**</ept> <bpt id="p2">**</bpt>value2<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>value1<ept id="p1">**</ept> <bpt id="p2">**</bpt>value2<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value1<ept id="p1">**</ept> <bpt id="p2">**</bpt>value2<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>value1<ept id="p1">**</ept> <bpt id="p2">**</bpt>value2<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first operand.</source>
          <target state="translated">Ein Ausdruck, der den ersten Operanden angibt.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second operand.</source>
          <target state="translated">Ein Ausdruck, der den zweiten Operanden angibt.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'BitwiseXor' function with the specified arguments, which must have the same integer numeric result type.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, der die kanonische BitwiseXor-Funktion mit den angegebenen Argumenten aufruft, die den gleichen ganzzahligen numerischen Ergebnistyp aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the type of the arguments.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks entspricht dem Typ des Arguments.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the value produced by performing the bitwise XOR (exclusive OR) of <bpt id="p1">**</bpt>value1<ept id="p1">**</ept> and <bpt id="p2">**</bpt>value2<ept id="p2">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das den Wert zurückgibt, der durch das bitweise XOR (exklusives OR) von <bpt id="p1">**</bpt>value1<ept id="p1">**</ept> und <bpt id="p2">**</bpt>value2<ept id="p2">**</ept> ermittelt wird.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value1<ept id="p1">**</ept> <bpt id="p2">**</bpt>value2<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>value1<ept id="p1">**</ept> <bpt id="p2">**</bpt>value2<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value1<ept id="p1">**</ept> <bpt id="p2">**</bpt>value2<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>value1<ept id="p1">**</ept> <bpt id="p2">**</bpt>value2<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the numeric value.</source>
          <target state="translated">Ein Ausdruck, der den numerischen Wert angibt.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Ceiling' function with the specified argument, which must each have a single, double or decimal result type.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, der die kanonische Ceiling-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp Single, Double oder Decimal aufweisen muss.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von <bpt id="p1">**</bpt>value<ept id="p1">**</ept> identisch.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the smallest integer value not less than than <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das den kleinsten ganzzahligen Wert, der nicht kleiner als <bpt id="p1">**</bpt>value<ept id="p1">**</ept> ist, zurückgibt.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>value<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>value<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string that should appear first in the concatenated result string.</source>
          <target state="translated">Ein Ausdruck, der die Zeichenfolge angibt, die als erstes Element in der verketteten Ergebniszeichenfolge angezeigt werden soll.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string that should appear second in the concatenated result string.</source>
          <target state="translated">Ein Ausdruck, der die Zeichenfolge angibt, die als zweites Element in der verketteten Ergebniszeichenfolge angezeigt werden soll.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Concat' function with the specified arguments, which must each have a string result type.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, der die kanonische Concat-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp String aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is string.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist „String“.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that produces the concatenated string.</source>
          <target state="translated">Ein neues DbFunctionExpression, das die verkettete Zeichenfolge produziert.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>string1<ept id="p1">**</ept> <bpt id="p2">**</bpt>string2<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>string1<ept id="p1">**</ept> <bpt id="p2">**</bpt>string2<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>string1<ept id="p1">**</ept> <bpt id="p2">**</bpt>string2<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>string1<ept id="p1">**</ept> <bpt id="p2">**</bpt>string2<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string to search for any occurence of <bpt id="p1">**</bpt>searchedForString<ept id="p1">**</ept>.</source>
          <target state="translated">Ein Ausdruck, der die Zeichenfolge angibt, in der jedes Vorkommen von <bpt id="p1">**</bpt>searchedForString<ept id="p1">**</ept> gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string to search for in <bpt id="p1">**</bpt>searchedString<ept id="p1">**</ept>.</source>
          <target state="translated">Ein Ausdruck, der die Zeichenfolge angibt, die in <bpt id="p1">**</bpt>searchedString<ept id="p1">**</ept> gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Contains' function with the specified arguments, which must each have a string result type.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische Contains-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp String aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Boolean.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist Boolean.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns a Boolean value indicating whether or not <bpt id="p1">**</bpt>searchedForString<ept id="p1">**</ept> occurs within <bpt id="p2">**</bpt>searchedString<ept id="p2">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das einen booleschen Wert zurückgibt, der angibt, ob <bpt id="p1">**</bpt>searchedForString<ept id="p1">**</ept> innerhalb <bpt id="p2">**</bpt>searchedString<ept id="p2">**</ept> auftritt.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>searchedString<ept id="p1">**</ept> <bpt id="p2">**</bpt>searchedForString<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>searchedString<ept id="p1">**</ept> <bpt id="p2">**</bpt>searchedForString<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>searchedString<ept id="p1">**</ept> <bpt id="p2">**</bpt>searchedForString<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>searchedString<ept id="p1">**</ept> <bpt id="p2">**</bpt>searchedForString<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection over which the count value should be computed.</source>
          <target state="translated">Ein Ausdruck, der die Sammlung angibt, über die der Anzahlwert berechnet werden soll.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Count' function over the specified collection.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>-Klasse, die die kanonische „Count“-Funktion über die angegebene Sammlung aufruft.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that produces the count value.</source>
          <target state="translated">Eine neue Klasse „DbFunctionExpression“, die den Anzahlwert erzeugt.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Auflistung<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Auflistung<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the year value for the new DateTime instance.</source>
          <target state="translated">Ein Ausdruck, der den Jahreswert für die neue DateTime-Instanz bereitstellt.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the month value for the new DateTime instance.</source>
          <target state="translated">Ein Ausdruck, der den Wert des Monatswertes für die neue DateTime-Instanz bereitstellt.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the day value for the new DateTime instance.</source>
          <target state="translated">Ein Ausdruck, der den Wert des Tageswertes für die neue DateTime-Instanz bereitstellt.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the hour value for the new DateTime instance.</source>
          <target state="translated">Ein Ausdruck, der den Wert des Stundenwertes für die neue DateTime-Instanz bereitstellt.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the minute value for the new DateTime instance.</source>
          <target state="translated">Ein Ausdruck, der den Wert des Minutenwertes für die neue DateTime-Instanz bereitstellt.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the second value for the new DateTime instance.</source>
          <target state="translated">Ein Ausdruck, der den Sekundenwert für die neue DateTime-Instanz bereitstellt.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'CreateDateTime' function with the specified arguments.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische CreateDateTime-Funktion mit den angegebenen Argumenten aufruft.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>second<ept id="p1">**</ept> must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</source>
          <target state="translated"><bpt id="p1">**</bpt>second<ept id="p1">**</ept> muss den Ergebnistyp Edm.Double aufweisen, und alle anderen Argumente müssen den Ergebnistyp Edm.Int32 aufweisen.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.DateTime.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist Edm.DateTime.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns a new DateTime based on the specified values.</source>
          <target state="translated">Ein neues DbFunctionExpression das ein neues DateTime zurückgibt, basierend auf den angegebenen Werten.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>year<ept id="p1">**</ept> <bpt id="p2">**</bpt>month<ept id="p2">**</ept> <bpt id="p3">**</bpt>day<ept id="p3">**</ept> <bpt id="p4">**</bpt>hour<ept id="p4">**</ept> <bpt id="p5">**</bpt>minute<ept id="p5">**</ept> <bpt id="p6">**</bpt>second<ept id="p6">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>year<ept id="p1">**</ept> <bpt id="p2">**</bpt>month<ept id="p2">**</ept> <bpt id="p3">**</bpt>day<ept id="p3">**</ept> <bpt id="p4">**</bpt>hour<ept id="p4">**</ept> <bpt id="p5">**</bpt>minute<ept id="p5">**</ept> <bpt id="p6">**</bpt>second<ept id="p6">**</ept></target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>year<ept id="p1">**</ept> <bpt id="p2">**</bpt>month<ept id="p2">**</ept> <bpt id="p3">**</bpt>day<ept id="p3">**</ept> <bpt id="p4">**</bpt>hour<ept id="p4">**</ept> <bpt id="p5">**</bpt>minute<ept id="p5">**</ept> <bpt id="p6">**</bpt>second<ept id="p6">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>year<ept id="p1">**</ept> <bpt id="p2">**</bpt>month<ept id="p2">**</ept> <bpt id="p3">**</bpt>day<ept id="p3">**</ept> <bpt id="p4">**</bpt>hour<ept id="p4">**</ept> <bpt id="p5">**</bpt>minute<ept id="p5">**</ept> <bpt id="p6">**</bpt>second<ept id="p6">**</ept></target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the year value for the new DateTimeOffset instance.</source>
          <target state="translated">Ein Ausdruck, der den Jahreswert für die neue DateTimeOffset-Instanz bereitstellt.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the month value for the new DateTimeOffset instance.</source>
          <target state="translated">Ein Ausdruck, der den Wert des Monatswertes für die neue DateTimeOffset-Instanz bereitstellt.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the day value for the new DateTimeOffset instance.</source>
          <target state="translated">Ein Ausdruck, der den Wert des Tageswertes für die neue DateTimeOffset-Instanz bereitstellt.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the hour value for the new DateTimeOffset instance.</source>
          <target state="translated">Ein Ausdruck, der den Wert des Stundenwertes für die neue DateTimeOffset-Instanz bereitstellt.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the minute value for the new DateTimeOffset instance.</source>
          <target state="translated">Ein Ausdruck, der den Wert des Minutenwertes für die neue DateTimeOffset-Instanz bereitstellt.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the second value for the new DateTimeOffset instance.</source>
          <target state="translated">Ein Ausdruck, der den Sekundenwert für die neue DateTimeOffset-Instanz bereitstellt.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the number of minutes in the time zone offset value for the new DateTimeOffset instance.</source>
          <target state="translated">Ein Ausdruck, der die Anzahl der Minuten im Zeitzonenoffsetwert für die neue DateTimeOffset-Instanz bereitstellt.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'CreateDateTimeOffset' function with the specified arguments.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische CreateDateTimeOffset-Funktion mit den angegebenen Argumenten aufruft.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>second<ept id="p1">**</ept> must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</source>
          <target state="translated"><bpt id="p1">**</bpt>second<ept id="p1">**</ept> muss den Ergebnistyp Edm.Double aufweisen, und alle anderen Argumente müssen den Ergebnistyp Edm.Int32 aufweisen.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.DateTimeOffset.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist Edm.DateTimeOffset.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns a new DateTimeOffset based on the specified values.</source>
          <target state="translated">Ein neues DbFunctionExpression das ein neues DateTimeOffset zurückgibt, basierend auf den angegebenen Werten.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>year<ept id="p1">**</ept> <bpt id="p2">**</bpt>month<ept id="p2">**</ept> <bpt id="p3">**</bpt>day<ept id="p3">**</ept> <bpt id="p4">**</bpt>hour<ept id="p4">**</ept> <bpt id="p5">**</bpt>minute<ept id="p5">**</ept> <bpt id="p6">**</bpt>second<ept id="p6">**</ept> <bpt id="p7">**</bpt>timeZoneOffset<ept id="p7">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>year<ept id="p1">**</ept> <bpt id="p2">**</bpt>month<ept id="p2">**</ept> <bpt id="p3">**</bpt>day<ept id="p3">**</ept> <bpt id="p4">**</bpt>hour<ept id="p4">**</ept> <bpt id="p5">**</bpt>minute<ept id="p5">**</ept> <bpt id="p6">**</bpt>second<ept id="p6">**</ept> <bpt id="p7">**</bpt>timeZoneOffset<ept id="p7">**</ept></target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>year<ept id="p1">**</ept> <bpt id="p2">**</bpt>month<ept id="p2">**</ept> <bpt id="p3">**</bpt>day<ept id="p3">**</ept> <bpt id="p4">**</bpt>hour<ept id="p4">**</ept> <bpt id="p5">**</bpt>minute<ept id="p5">**</ept> <bpt id="p6">**</bpt>second<ept id="p6">**</ept> <bpt id="p7">**</bpt>timeZoneOffset<ept id="p7">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>year<ept id="p1">**</ept> <bpt id="p2">**</bpt>month<ept id="p2">**</ept> <bpt id="p3">**</bpt>day<ept id="p3">**</ept> <bpt id="p4">**</bpt>hour<ept id="p4">**</ept> <bpt id="p5">**</bpt>minute<ept id="p5">**</ept> <bpt id="p6">**</bpt>second<ept id="p6">**</ept> <bpt id="p7">**</bpt>timeZoneOffset<ept id="p7">**</ept></target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the hour value for the new DateTime instance.</source>
          <target state="translated">Ein Ausdruck, der den Wert des Stundenwertes für die neue DateTime-Instanz bereitstellt.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the minute value for the new DateTime instance.</source>
          <target state="translated">Ein Ausdruck, der den Wert des Minutenwertes für die neue DateTime-Instanz bereitstellt.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that provides the second value for the new DateTime instance.</source>
          <target state="translated">Ein Ausdruck, der den Sekundenwert für die neue DateTime-Instanz bereitstellt.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'CreateTime' function with the specified arguments.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische CreateTime-Funktion mit den angegebenen Argumenten aufruft.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>second<ept id="p1">**</ept> must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</source>
          <target state="translated"><bpt id="p1">**</bpt>second<ept id="p1">**</ept> muss den Ergebnistyp Edm.Double aufweisen, und alle anderen Argumente müssen den Ergebnistyp Edm.Int32 aufweisen.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Time.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist Edm.Time.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns a new Time based on the specified values.</source>
          <target state="translated">Ein neues DbFunctionExpression das ein neues Time zurückgibt, basierend auf den angegebenen Werten.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>hour<ept id="p1">**</ept> <bpt id="p2">**</bpt>minute<ept id="p2">**</ept> <bpt id="p3">**</bpt>second<ept id="p3">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>hour<ept id="p1">**</ept> <bpt id="p2">**</bpt>minute<ept id="p2">**</ept> <bpt id="p3">**</bpt>second<ept id="p3">**</ept></target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>hour<ept id="p1">**</ept> <bpt id="p2">**</bpt>minute<ept id="p2">**</ept> <bpt id="p3">**</bpt>second<ept id="p3">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>hour<ept id="p1">**</ept> <bpt id="p2">**</bpt>minute<ept id="p2">**</ept> <bpt id="p3">**</bpt>second<ept id="p3">**</ept></target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'CurrentDateTime' function.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische CurrentDateTime-Funktion aufruft.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime">
          <source>A new DbFunctionExpression that returns the current date and time as an Edm.DateTime instance.</source>
          <target state="translated">Ein neues DbFunctionExpression, das das aktuelle Datum und die aktuelle Uhrzeit als Edm.DateTime-Instanz zurückgibt.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'CurrentDateTimeOffset' function.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische CurrentDateTimeOffset-Funktion aufruft.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset">
          <source>A new DbFunctionExpression that returns the current date and time as an Edm.DateTimeOffset instance.</source>
          <target state="translated">Ein neues DbFunctionExpression, das das aktuelle Datum und die aktuelle Uhrzeit als Edm.DateTimeOffset-Instanz zurückgibt.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'CurrentUtcDateTime' function.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische CurrentUtcDateTime-Funktion aufruft.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime">
          <source>A new DbFunctionExpression that returns the current UTC date and time as an Edm.DateTime instance.</source>
          <target state="translated">Ein neues DbFunctionExpression, das das aktuelle UTC-Datum und die aktuelle Uhrzeit als Edm.DateTime-Instanz zurückgibt.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the day should be retrieved.</source>
          <target state="translated">Ein Ausdruck, der den Wert angibt, aus dem der Tag abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Day' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische Day-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp DateTime oder DateTimeOffset aufweisen muss.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the integer day value from <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das den Tag als Ganzzahlwert aus <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept> zurückgibt.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the day within the year should be retrieved.</source>
          <target state="translated">Ein Ausdruck, der den Wert angibt, aus dem der Tag des Jahres abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DayOfYear' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische DayOfYear-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp DateTime oder DateTimeOffset aufweisen muss.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the integer day of year value from <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das den Tag des Jahres als Ganzzahlwert aus <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept> zurückgibt.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first date value argument.</source>
          <target state="translated">Ein Ausdruck, der das erste Datumswertargument angibt.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second date value argument.</source>
          <target state="translated">Ein Ausdruck, der das zweite Datumswertargument angibt.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffDays' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, der die kanonische DiffDays-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp DateTime oder DateTimeOffset aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the number of days that is the difference between <bpt id="p1">**</bpt>dateValue1<ept id="p1">**</ept> and <bpt id="p2">**</bpt>dateValue2<ept id="p2">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das die Anzahl der Tage zurückgibt, die den Unterschied zwischen <bpt id="p1">**</bpt>dateValue1<ept id="p1">**</ept> und <bpt id="p2">**</bpt>dateValue2<ept id="p2">**</ept> ausmachen.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first time value argument.</source>
          <target state="translated">Ein Ausdruck, der das erste Uhrzeitwertargument angibt.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second time value argument.</source>
          <target state="translated">Ein Ausdruck, der das zweite Zeitwertargument angibt.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffHours' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, der die kanonische DiffHours-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp DateTime, DateTimeOffset oder Time aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the number of hours that is the difference between <bpt id="p1">**</bpt>timeValue1<ept id="p1">**</ept> and <bpt id="p2">**</bpt>timeValue2<ept id="p2">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das die Anzahl der Stunden zurückgibt, die den Unterschied zwischen <bpt id="p1">**</bpt>timeValue1<ept id="p1">**</ept> und <bpt id="p2">**</bpt>timeValue2<ept id="p2">**</ept> ausmachen.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first time value argument.</source>
          <target state="translated">Ein Ausdruck, der das erste Uhrzeitwertargument angibt.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second time value argument.</source>
          <target state="translated">Ein Ausdruck, der das zweite Zeitwertargument angibt.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffMicroseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, der die kanonische DiffMicroseconds-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp DateTime, DateTimeOffset oder Time aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the number of microseconds that is the difference between <bpt id="p1">**</bpt>timeValue1<ept id="p1">**</ept> and <bpt id="p2">**</bpt>timeValue2<ept id="p2">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das die Anzahl der Mikrosekunden zurückgibt, die den Unterschied zwischen <bpt id="p1">**</bpt>timeValue1<ept id="p1">**</ept> und <bpt id="p2">**</bpt>timeValue2<ept id="p2">**</ept> ausmachen.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first time value argument.</source>
          <target state="translated">Ein Ausdruck, der das erste Uhrzeitwertargument angibt.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second time value argument.</source>
          <target state="translated">Ein Ausdruck, der das zweite Zeitwertargument angibt.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffMilliseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, der die kanonische DiffMilliseconds-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp DateTime, DateTimeOffset oder Time aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the number of milliseconds that is the difference between <bpt id="p1">**</bpt>timeValue1<ept id="p1">**</ept> and <bpt id="p2">**</bpt>timeValue2<ept id="p2">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das die Anzahl der Millisekunden zurückgibt, die den Unterschied zwischen <bpt id="p1">**</bpt>timeValue1<ept id="p1">**</ept> und <bpt id="p2">**</bpt>timeValue2<ept id="p2">**</ept> ausmachen.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first time value argument.</source>
          <target state="translated">Ein Ausdruck, der das erste Uhrzeitwertargument angibt.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second time value argument.</source>
          <target state="translated">Ein Ausdruck, der das zweite Zeitwertargument angibt.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffMinutes' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, der die kanonische DiffMinutes-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp DateTime, DateTimeOffset oder Time aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the number of minutes that is the difference between <bpt id="p1">**</bpt>timeValue1<ept id="p1">**</ept> and <bpt id="p2">**</bpt>timeValue2<ept id="p2">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das die Anzahl der Minuten zurückgibt, die den Unterschied zwischen <bpt id="p1">**</bpt>timeValue1<ept id="p1">**</ept> und <bpt id="p2">**</bpt>timeValue2<ept id="p2">**</ept> ausmachen.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first date value argument.</source>
          <target state="translated">Ein Ausdruck, der das erste Datumswertargument angibt.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second date value argument.</source>
          <target state="translated">Ein Ausdruck, der das zweite Datumswertargument angibt.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffMonths' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, der die kanonische DiffMonths-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp DateTime oder DateTimeOffset aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the number of months that is the difference between <bpt id="p1">**</bpt>dateValue1<ept id="p1">**</ept> and <bpt id="p2">**</bpt>dateValue2<ept id="p2">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das die Anzahl der Monate zurückgibt, die den Unterschied zwischen <bpt id="p1">**</bpt>dateValue1<ept id="p1">**</ept> und <bpt id="p2">**</bpt>dateValue2<ept id="p2">**</ept> ausmachen.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first time value argument.</source>
          <target state="translated">Ein Ausdruck, der das erste Uhrzeitwertargument angibt.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second time value argument.</source>
          <target state="translated">Ein Ausdruck, der das zweite Zeitwertargument angibt.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffNanoseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, der die kanonische DiffNanoseconds-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp DateTime, DateTimeOffset oder Time aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the number of nanoseconds that is the difference between <bpt id="p1">**</bpt>timeValue1<ept id="p1">**</ept> and <bpt id="p2">**</bpt>timeValue2<ept id="p2">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das die Anzahl der Nanosekunden zurückgibt, die den Unterschied zwischen <bpt id="p1">**</bpt>timeValue1<ept id="p1">**</ept> und <bpt id="p2">**</bpt>timeValue2<ept id="p2">**</ept> ausmachen.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first time value argument.</source>
          <target state="translated">Ein Ausdruck, der das erste Uhrzeitwertargument angibt.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second time value argument.</source>
          <target state="translated">Ein Ausdruck, der das zweite Zeitwertargument angibt.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffSeconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, der die kanonische DiffSeconds-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp DateTime, DateTimeOffset oder Time aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the number of seconds that is the difference between <bpt id="p1">**</bpt>timeValue1<ept id="p1">**</ept> and <bpt id="p2">**</bpt>timeValue2<ept id="p2">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das die Anzahl der Sekunden zurückgibt, die den Unterschied zwischen <bpt id="p1">**</bpt>timeValue1<ept id="p1">**</ept> und <bpt id="p2">**</bpt>timeValue2<ept id="p2">**</ept> ausmachen.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the first date value argument.</source>
          <target state="translated">Ein Ausdruck, der das erste Datumswertargument angibt.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the second date value argument.</source>
          <target state="translated">Ein Ausdruck, der das zweite Datumswertargument angibt.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'DiffYears' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, der die kanonische DiffYears-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp DateTime oder DateTimeOffset aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the number of years that is the difference between <bpt id="p1">**</bpt>dateValue1<ept id="p1">**</ept> and <bpt id="p2">**</bpt>dateValue2<ept id="p2">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das die Anzahl der Jahre zurückgibt, die den Unterschied zwischen <bpt id="p1">**</bpt>dateValue1<ept id="p1">**</ept> und <bpt id="p2">**</bpt>dateValue2<ept id="p2">**</ept> ausmachen.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string that is searched at the end for string <bpt id="p1">**</bpt>suffix<ept id="p1">**</ept>.</source>
          <target state="translated">Ein Ausdruck, der die Zeichenfolge angibt, die am Ende nach der Zeichenfolge <bpt id="p1">**</bpt>suffix<ept id="p1">**</ept> durchsucht wird.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the target string that is searched for at the end of <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept>.</source>
          <target state="translated">Ein Ausdruck, der die Zielzeichenfolge angibt, nach der am Ende von <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> gesucht wird.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'EndsWith' function with the specified arguments, which must each have a string result type.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische EndsWith-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp String aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Boolean.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist Boolean.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns a Boolean value indicating whether or not <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> ends with <bpt id="p2">**</bpt>suffix<ept id="p2">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das einen booleschen Wert zurückgibt, der angibt, ob <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> mit <bpt id="p2">**</bpt>suffix<ept id="p2">**</ept> endet oder nicht.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the numeric value.</source>
          <target state="translated">Ein Ausdruck, der den numerischen Wert angibt.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Floor' function with the specified argument, which must each have a single, double or decimal result type.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische Floor-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp Single, Double oder Decimal aufweisen muss.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von <bpt id="p1">**</bpt>value<ept id="p1">**</ept> identisch.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the largest integer value not greater than <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das den größten ganzzahligen Wert zurückgibt, der nicht größer als <bpt id="p1">**</bpt>value<ept id="p1">**</ept> ist.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>value<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>value<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the DateTimeOffset value from which the minute offset from GMT should be retrieved.</source>
          <target state="translated">Ein Ausdruck, der den DateTimeOffset-Wert angibt, aus dem der Minutenoffset von GMT abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'GetTotalOffsetMinutes' function with the specified argument, which must have a DateTimeOffset result type.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische GetTotalOffsetMinutes-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp DateTimeOffset aufweisen muss.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the number of minutes <bpt id="p1">**</bpt>dateTimeOffsetArgument<ept id="p1">**</ept> is offset from GMT.</source>
          <target state="translated">Ein neues DbFunctionExpression, das die Anzahl der Minuten zurückgibt, um die <bpt id="p1">**</bpt>dateTimeOffsetArgument<ept id="p1">**</ept> zu GMT versetzt ist.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateTimeOffsetArgument<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>dateTimeOffsetArgument<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateTimeOffsetArgument<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>dateTimeOffsetArgument<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the hour should be retrieved.</source>
          <target state="translated">Ein Ausdruck, der den Wert angibt, aus dem die Stunde abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Hour' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische Hour-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp DateTime, DateTimeOffset oder „Time“ aufweisen muss.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the integer hour value from <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das die Stunde als Ganzzahlwert aus <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> zurückgibt.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string to search for <bpt id="p1">**</bpt>stringToFind<ept id="p1">**</ept>.</source>
          <target state="translated">Ein Ausdruck, der die Zeichenfolge angibt, die in <bpt id="p1">**</bpt>stringToFind<ept id="p1">**</ept> gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string to locate within <bpt id="p1">**</bpt>searchString<ept id="p1">**</ept> should be checked.</source>
          <target state="translated">Ein Ausdruck, der die Zeichenfolge angibt, die in <bpt id="p1">**</bpt>searchString<ept id="p1">**</ept> gesucht werden soll, sollte überprüft werden.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'IndexOf' function with the specified arguments, which must each have a string result type.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische IndexOf-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp String aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the first index of <bpt id="p1">**</bpt>stringToFind<ept id="p1">**</ept> in <bpt id="p2">**</bpt>searchString<ept id="p2">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das den ersten Index aus <bpt id="p1">**</bpt>stringToFind<ept id="p1">**</ept> in <bpt id="p2">**</bpt>searchString<ept id="p2">**</ept> zurückgibt.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The index returned by IndexOf is <ph id="ph1">\&lt;</ph>b&gt;1-based<ph id="ph2">\&lt;</ph>/b&gt;.</source>
          <target state="translated">Der Index von IndexOf zurückgegebene ist <ph id="ph1">\&lt;</ph>b &gt; auf 1 basierende <ph id="ph2">\&lt;</ph> /b &gt;.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>searchString<ept id="p1">**</ept> <bpt id="p2">**</bpt>stringToFind<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>searchString<ept id="p1">**</ept> <bpt id="p2">**</bpt>stringToFind<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>searchString<ept id="p1">**</ept> <bpt id="p2">**</bpt>stringToFind<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>searchString<ept id="p1">**</ept> <bpt id="p2">**</bpt>stringToFind<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string from which to extract the leftmost substring.</source>
          <target state="translated">Ein Ausdruck, der die Zeichenfolge angibt, aus der die äußerste linke Teilzeichenfolge extrahiert wird.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the length of the leftmost substring to extract from <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept>.</source>
          <target state="translated">Ein Ausdruck, der die Länge der äußersten linken aus <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> zu extrahierenden Teilzeichenfolge angibt.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Left' function with the specified arguments, which must have a string and integer numeric result type.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische Left-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp String und einen ganzzahligen numerischen Ergebnistyp aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is string.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist „String“.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the leftmost substring of length <bpt id="p1">**</bpt>length<ept id="p1">**</ept> from <bpt id="p2">**</bpt>stringArgument<ept id="p2">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression-Objekt, das die äußerste linke Teilzeichenfolge der Länge <bpt id="p1">**</bpt>length<ept id="p1">**</ept> aus <bpt id="p2">**</bpt>stringArgument<ept id="p2">**</ept> zurückgibt.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> <bpt id="p2">**</bpt>length<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> <bpt id="p2">**</bpt>length<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string for which the length should be computed.</source>
          <target state="translated">Ein Ausdruck, der die Zeichenfolge angibt, für die die Länge berechnet werden soll.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Length' function with the specified argument, which must have a string result type.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, der die kanonische Length-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp String aufweisen muss.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the length of <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das die Länge von <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> zurückgibt.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection over which the count value should be computed.</source>
          <target state="translated">Ein Ausdruck, der die Sammlung angibt, über die der Anzahlwert berechnet werden soll.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'BigCount' function over the specified collection.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische „BigCount“-Funktion über die angegebene Sammlung aufruft.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int64.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist „Edm.Int64“.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that produces the count value.</source>
          <target state="translated">Eine neue Klasse „DbFunctionExpression“, die den Anzahlwert erzeugt.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Auflistung<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Auflistung<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection from which the maximum value should be retrieved</source>
          <target state="translated">Ein Ausdruck, der die Sammlung angibt, aus der der Maximalwert abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Max' function over the specified collection.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>-Klasse, die die kanonische „Max“-Funktion über die angegebene Sammlung aufruft.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the element type of the collection.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist identisch mit dem Elementtyp der Sammlung.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that produces the maximum value.</source>
          <target state="translated">Eine neue „DbFunctionExpression“-Klasse, die den Maximalwert erzeugt.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Auflistung<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Auflistung<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the millisecond should be retrieved.</source>
          <target state="translated">Ein Ausdruck, der den Wert angibt, aus dem die Millisekunde abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Millisecond' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, der die kanonische Millisecond-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp DateTime, DateTimeOffset oder Time aufweisen muss.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the integer millisecond value from <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das die Millisekunde als Ganzzahlwert aus <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> zurückgibt.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection from which the minimum value should be retrieved.</source>
          <target state="translated">Ein Ausdruck, der die Sammlung angibt, aus der der Mindestwert abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Min' function over the specified collection.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>-Klasse, die die kanonische „Min“-Funktion über die angegebene Sammlung aufruft.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the element type of the collection.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist identisch mit dem Elementtyp der Sammlung.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that produces the minimum value.</source>
          <target state="translated">Eine neue „DbFunctionExpression“-Klasse, die den Mindestwert erzeugt.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Auflistung<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Auflistung<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the minute should be retrieved.</source>
          <target state="translated">Ein Ausdruck, der den Wert angibt, aus dem die Minute abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Minute' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, der die kanonische Minute-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp DateTime, DateTimeOffset oder Time aufweisen muss.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the integer minute value from <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das die Minute als Ganzzahlwert aus <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> zurückgibt.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the month should be retrieved.</source>
          <target state="translated">Ein Ausdruck, der den Wert angibt, aus dem der Monat abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Month' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische Month-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp DateTime oder DateTimeOffset aufweisen muss.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the integer month value from <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das den Monat als Ganzzahlwert aus <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept> zurückgibt.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'NewGuid' function.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische NewGuid-Funktion aufruft.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid">
          <source>A new DbFunctionExpression that returns a new GUID value.</source>
          <target state="translated">Ein neues DbFunctionExpression, das den neuen Wert der GUID zurückgibt.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the numeric value to raise to the given power.</source>
          <target state="translated">Ein Ausdruck, der den numerischen Wert angibt, dessen angegebene Potenz berechnet werden soll.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the power to which <bpt id="p1">**</bpt>baseArgument<ept id="p1">**</ept> should be raised.</source>
          <target state="translated">Ein Ausdruck, der die Potenz angibt, mit der <bpt id="p1">**</bpt>baseArgument<ept id="p1">**</ept> berechnet werden soll.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Power' function with the specified arguments, which must have numeric result types.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische Power-Funktion mit den angegebenen Argumenten aufruft, die numerische Ergebnistypen aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>baseArgument<ept id="p1">**</ept>.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von <bpt id="p1">**</bpt>baseArgument<ept id="p1">**</ept> identisch.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the value of <bpt id="p1">**</bpt>baseArgument<ept id="p1">**</ept> raised to the power specified by <bpt id="p2">**</bpt>exponent<ept id="p2">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das den Wert <bpt id="p1">**</bpt>baseArgument<ept id="p1">**</ept> zurückgibt, der aus der Potenzierung von <bpt id="p2">**</bpt>exponent<ept id="p2">**</ept> angegeben wurde.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>baseArgument<ept id="p1">**</ept> <bpt id="p2">**</bpt>exponent<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>baseArgument<ept id="p1">**</ept> <bpt id="p2">**</bpt>exponent<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>baseArgument<ept id="p1">**</ept> <bpt id="p2">**</bpt>exponent<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>baseArgument<ept id="p1">**</ept> <bpt id="p2">**</bpt>exponent<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string in which to perform the replacement operation.</source>
          <target state="translated">Ein Ausdruck, der die Zeichenfolge angibt, in der die Ersetzung ausgeführt werden soll.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string that is replaced.</source>
          <target state="translated">Ein Ausdruck, der die ersetzte Zeichenfolge angibt.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the replacement string.</source>
          <target state="translated">Ein Ausdruck, der die Ersetzungszeichenfolge angibt.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Replace' function with the specified arguments, which must each have a string result type.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische Replace-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp String aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is also string.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist ebenfalls „String“.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression than returns a new string based on <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> where every occurence of <bpt id="p2">**</bpt>toReplace<ept id="p2">**</ept> is replaced by <bpt id="p3">**</bpt>replacement<ept id="p3">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das eine neue Zeichenfolge auf Grundlage des <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> zurückgibt, wobei jedes Vorkommen von <bpt id="p2">**</bpt>toReplace<ept id="p2">**</ept> durch <bpt id="p3">**</bpt>replacement<ept id="p3">**</ept> ersetzt wird.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> <bpt id="p2">**</bpt>toReplace<ept id="p2">**</ept> <bpt id="p3">**</bpt>replacement<ept id="p3">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> <bpt id="p2">**</bpt>toReplace<ept id="p2">**</ept> <bpt id="p3">**</bpt>replacement<ept id="p3">**</ept></target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> <bpt id="p2">**</bpt>toReplace<ept id="p2">**</ept> <bpt id="p3">**</bpt>replacement<ept id="p3">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> <bpt id="p2">**</bpt>toReplace<ept id="p2">**</ept> <bpt id="p3">**</bpt>replacement<ept id="p3">**</ept></target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string to reverse.</source>
          <target state="translated">Ein Ausdruck, der die umzukehrende Zeichenfolge angibt.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Reverse' function with the specified argument, which must have a string result type.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische Reverse-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp String aufweisen muss.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is also string.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist ebenfalls „String“.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that produces the reversed value of <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das den umgekehrten Wert von <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> erzeugt.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string from which to extract the rightmost substring.</source>
          <target state="translated">Ein Ausdruck, der die Zeichenfolge angibt, aus der die äußerste rechte Teilzeichenfolge extrahiert wird.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the length of the rightmost substring to extract from <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept>.</source>
          <target state="translated">Ein Ausdruck, der die Länge der äußersten rechten aus <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> zu extrahierenden Teilzeichenfolge angibt.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Right' function with the specified arguments, which must have a string and integer numeric result type.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische Right-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp String und einen ganzzahligen numerischen Ergebnistyp aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is string.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist „String“.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the rightmost substring of length <bpt id="p1">**</bpt>length<ept id="p1">**</ept> from <bpt id="p2">**</bpt>stringArgument<ept id="p2">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression-Objekt, das die äußerste rechte Teilzeichenfolge der Länge <bpt id="p1">**</bpt>length<ept id="p1">**</ept> aus <bpt id="p2">**</bpt>stringArgument<ept id="p2">**</ept> zurückgibt.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> <bpt id="p2">**</bpt>length<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> <bpt id="p2">**</bpt>length<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Round' function.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, der die kanonische Round-Funktion aufruft.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the numeric value to round.</source>
          <target state="translated">Ein Ausdruck, der den zu rundenden numerischen Wert angibt.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Round' function with the specified argument, which must each have a single, double or decimal result type.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische Round-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp Single, Double oder Decimal aufweisen muss.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von <bpt id="p1">**</bpt>value<ept id="p1">**</ept> identisch.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that rounds the specified argument to the nearest integer value.</source>
          <target state="translated">Ein neues DbFunctionExpression, das das angegebene Argument auf den nächsten ganzzahligen Wert rundet.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>value<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>value<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the numeric value to round.</source>
          <target state="translated">Ein Ausdruck, der den zu rundenden numerischen Wert angibt.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of digits of precision to use when rounding.</source>
          <target state="translated">Ein Ausdruck, der die beim Runden zu verwendende Anzahl gültiger Ziffern angibt.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Round' function with the specified arguments, which must have a single, double or decimal, and integer result types.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische Round-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp Single, Double oder Decimal und einen ganzzahligen Ergebnistyp aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von <bpt id="p1">**</bpt>value<ept id="p1">**</ept> identisch.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that rounds the specified argument to the nearest integer value, with precision as specified by <bpt id="p1">**</bpt>digits<ept id="p1">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das das angegebene Argument mit der durch <bpt id="p1">**</bpt>digits<ept id="p1">**</ept> angegebenen Genauigkeit auf den nächsten ganzzahligen Wert rundet.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value<ept id="p1">**</ept> <bpt id="p2">**</bpt>digits<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>value<ept id="p1">**</ept> <bpt id="p2">**</bpt>digits<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value<ept id="p1">**</ept> <bpt id="p2">**</bpt>digits<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>value<ept id="p1">**</ept> <bpt id="p2">**</bpt>digits<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the second should be retrieved.</source>
          <target state="translated">Ein Ausdruck, der den Wert angibt, aus dem die Sekunde abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Second' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, der die kanonische Second-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp DateTime, DateTimeOffset oder Time aufweisen muss.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the integer second value from <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das die Sekunde als Ganzzahlwert aus <bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept> zurückgibt.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>timeValue<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string that is searched at the start for string <bpt id="p1">**</bpt>prefix<ept id="p1">**</ept>.</source>
          <target state="translated">Ein Ausdruck, der die Zeichenfolge angibt, die am Anfang nach der Zeichenfolge <bpt id="p1">**</bpt>prefix<ept id="p1">**</ept> durchsucht wird.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the target string that is searched for at the start of <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept>.</source>
          <target state="translated">Ein Ausdruck, der die Zielzeichenfolge angibt, nach der am Anfang von <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> gesucht wird.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'StartsWith' function with the specified arguments, which must each have a string result type.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische StartsWith-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp String aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Boolean.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist Boolean.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns a Boolean value indicating whether or not <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> starts with <bpt id="p2">**</bpt>prefix<ept id="p2">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das einen booleschen Wert zurückgibt, der angibt, ob <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> mit <bpt id="p2">**</bpt>prefix<ept id="p2">**</ept> beginnt oder nicht.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection for which the standard deviation should be computed.</source>
          <target state="translated">Ein Ausdruck, der die Sammlung angibt, für die die Standardabweichung berechnet werden soll.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'StDev' function over the non-null members of the specified collection.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>-Klasse, die die kanonische „StDev“-Funktion über die Member der angegebenen Sammlung, die nicht NULL sind, abruft.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Double.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist „Edm.Double“.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that produces the standard deviation value over non-null members of the collection.</source>
          <target state="translated">Eine neue „DbFunctionExpression“-Klasse, die den Standardabweichungswert über Member der Sammlung, die nicht NULL sind, erstellt.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Auflistung<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Auflistung<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection for which the standard deviation should be computed.</source>
          <target state="translated">Ein Ausdruck, der die Sammlung angibt, für die die Standardabweichung berechnet werden soll.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'StDevP' function over the population of the specified collection.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>-Klasse, die die kanonische „StDevP“-Funktion über die Auffüllung der angegebenen Sammlung abruft.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Double.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist „Edm.Double“.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that produces the standard deviation value.</source>
          <target state="translated">Eine neue „DbFunctionExpression“-Klasse, die den Standardabweichungswert erzeugt.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Auflistung<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Auflistung<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string from which to extract the substring.</source>
          <target state="translated">Ein Ausdruck, der die Zeichenfolge angibt, aus der die Teilzeichenfolge extrahiert werden soll.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the starting index from which the substring should be taken.</source>
          <target state="translated">Ein Ausdruck, der den Startindex angibt, ab dem die Teilzeichenfolge extrahiert werden soll.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the length of the substring.</source>
          <target state="translated">Ein Ausdruck, der die Länge der Teilzeichenfolge angibt.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Substring' function with the specified arguments, which must have a string and integer numeric result types.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische Substring-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp String und einen ganzzahligen numerischen Ergebnistyp aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is string.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist „String“.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the substring of length <bpt id="p1">**</bpt>length<ept id="p1">**</ept> from <bpt id="p2">**</bpt>stringArgument<ept id="p2">**</ept> starting at <bpt id="p3">**</bpt>start<ept id="p3">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das die Teilzeichenfolge der Länge <bpt id="p1">**</bpt>length<ept id="p1">**</ept> von <bpt id="p2">**</bpt>stringArgument<ept id="p2">**</ept> zurückgibt, die bei <bpt id="p3">**</bpt>start<ept id="p3">**</ept> beginnt.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Substring requires that the index specified by <bpt id="p1">**</bpt>start<ept id="p1">**</ept> be <ph id="ph1">\&lt;</ph>b&gt;1-based<ph id="ph2">\&lt;</ph>/b&gt;.</source>
          <target state="translated">Teilzeichenfolge ist es erforderlich, dass der Index von angegebenen <bpt id="p1">**</bpt>starten<ept id="p1">**</ept> werden <ph id="ph1">\&lt;</ph>b &gt; auf 1 basierende <ph id="ph2">\&lt;</ph> /b &gt;.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> <bpt id="p2">**</bpt>start<ept id="p2">**</ept> <bpt id="p3">**</bpt>length<ept id="p3">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> <bpt id="p2">**</bpt>start<ept id="p2">**</ept> <bpt id="p3">**</bpt>length<ept id="p3">**</ept></target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> <bpt id="p2">**</bpt>start<ept id="p2">**</ept> <bpt id="p3">**</bpt>length<ept id="p3">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> <bpt id="p2">**</bpt>start<ept id="p2">**</ept> <bpt id="p3">**</bpt>length<ept id="p3">**</ept></target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection from which the sum should be computed.</source>
          <target state="translated">Ein Ausdruck, der die Sammlung angibt, aus der die Summe berechnet werden soll.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Sum' function over the specified collection.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>-Klasse, die die kanonische „Sum“-Funktion über die angegebene Sammlung aufruft.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the element type of the collection.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist identisch mit dem Elementtyp der Sammlung.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that produces the sum.</source>
          <target state="translated">Eine neue „DbFunctionExpression“-Klasse, die die Summe erzeugt.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Auflistung<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Auflistung<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string that should be converted to lower case.</source>
          <target state="translated">Ein Ausdruck, der die Zeichenfolge angibt, die in Kleinbuchstaben konvertiert werden soll.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'ToLower' function with the specified argument, which must have a string result type.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische ToLower-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp String aufweisen muss.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is also string.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist ebenfalls „String“.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns value of <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> converted to lower case.</source>
          <target state="translated">Ein neues DbFunctionExpression, das den Wert von <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> in Kleinbuchstaben konvertiert zurückgibt.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string that should be converted to upper case.</source>
          <target state="translated">Ein Ausdruck, der die Zeichenfolge angibt, die in Großbuchstaben konvertiert werden soll.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'ToUpper' function with the specified argument, which must have a string result type.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische ToUpper-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp String aufweisen muss.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is also string.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist ebenfalls „String“.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns value of <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> converted to upper case.</source>
          <target state="translated">Ein neues DbFunctionExpression, das den Wert von <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> in Großbuchstaben konvertiert zurückgibt.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string from which leading and trailing space should be removed.</source>
          <target state="translated">Ein Ausdruck, der die Zeichenfolge angibt, aus der führende und nachgestellte Leerzeichen entfernt werden sollen.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Trim' function with the specified argument, which must have a string result type.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische Trim-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp String aufweisen muss.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is also string.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist ebenfalls „String“.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns value of <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> with leading and trailing space removed.</source>
          <target state="translated">Ein neues DbFunctionExpression, das den Wert von <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> nach dem Entfernen führender und nachgestellter Leerzeichen zurückgibt.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string from which trailing space should be removed.</source>
          <target state="translated">Ein Ausdruck, der die Zeichenfolge angibt, aus der nachgestellte Leerzeichen entfernt werden sollen.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'RTrim' function with the specified argument, which must have a string result type.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische RTrim-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp String aufweisen muss.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is also string.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist ebenfalls „String“.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns value of <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> with trailing space removed.</source>
          <target state="translated">Ein neues DbFunctionExpression, das den Wert von <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> nach dem Entfernen nachgestellter Leerzeichen zurückgibt.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the string from which leading space should be removed.</source>
          <target state="translated">Ein Ausdruck, der die Zeichenfolge angibt, aus der führende Leerzeichen entfernt werden sollen.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'LTrim' function with the specified argument, which must have a string result type.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische LTrim-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp String aufweisen muss.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is also string.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist ebenfalls „String“.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns value of <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> with leading space removed.</source>
          <target state="translated">Ein neues DbFunctionExpression, das den Wert von <bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept> nach dem Entfernen führender Leerzeichen zurückgibt.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>stringArgument<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the numeric value to truncate.</source>
          <target state="translated">Ein Ausdruck, der den abzuschneidenden numerischen Wert angibt.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the number of digits of precision to use when truncating.</source>
          <target state="translated">Ein Ausdruck, der die beim Abschneiden zu verwendende Anzahl gültiger Ziffern angibt.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Truncate' function with the specified arguments, which must have a single, double or decimal, and integer result types.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische Truncate-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp Single, Double oder Decimal und einen ganzzahligen Ergebnistyp aufweisen müssen.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>value<ept id="p1">**</ept>.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von <bpt id="p1">**</bpt>value<ept id="p1">**</ept> identisch.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that truncates the specified argument to the nearest integer value, with precision as specified by <bpt id="p1">**</bpt>digits<ept id="p1">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das das angegebene Argument auf den nächsten ganzzahligen Wert mit einer Genauigkeit abschneidet, wie durch <bpt id="p1">**</bpt>digits<ept id="p1">**</ept> angegeben.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value<ept id="p1">**</ept> <bpt id="p2">**</bpt>digits<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>value<ept id="p1">**</ept> <bpt id="p2">**</bpt>digits<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>value<ept id="p1">**</ept> <bpt id="p2">**</bpt>digits<ept id="p2">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>value<ept id="p1">**</ept> <bpt id="p2">**</bpt>digits<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value for which the time portion should be truncated.</source>
          <target state="translated">Ein Ausdruck, der den Wert angibt, für den der Zeitanteil abgeschnitten werden soll.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'TruncateTime' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische TruncateTime-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp DateTime oder DateTimeOffset aufweisen muss.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is the same as the result type of <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist identisch mit dem Ergebnistyp von <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the value of <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept> with time set to zero.</source>
          <target state="translated">Ein neues DbFunctionExpression, das den Wert von <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept> mit auf 0 festgelegter Zeit zurückgibt.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection for which the statistical variance should be computed.</source>
          <target state="translated">Ein Ausdruck, der die Sammlung angibt, für die die statistische Varianz berechnet werden soll.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Var' function over the non-null members of the specified collection.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>-Klasse, die die kanonische „Var“-Funktion über die Member der angegebenen Sammlung, die nicht NULL sind, abruft.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Double.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist „Edm.Double“.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that produces the statistical variance value for the non-null members of the collection.</source>
          <target state="translated">Eine neue „DbFunctionExpression“-Klasse, die den statistischen Varianzwert für die Member der Sammlung, die nicht NULL sind, erstellt.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Auflistung<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Auflistung<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the collection for which the statistical variance should be computed.</source>
          <target state="translated">Ein Ausdruck, der die Sammlung angibt, für die die statistische Varianz berechnet werden soll.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'VarP' function over the population of the specified collection.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>-Klasse, die die kanonische „VarP“-Funktion über die angegebene Sammlung aufruft.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression Edm.Double.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist „Edm.Double“.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that produces the statistical variance value.</source>
          <target state="translated">Eine neue Klasse „DbFunctionExpression“, die den statistischen Varianzwert erzeugt.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Auflistung<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>collection<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Auflistung<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)">
          <source>An expression that specifies the value from which the year should be retrieved.</source>
          <target state="translated">Ein Ausdruck, der den Wert angibt, aus dem das Jahr abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph> that invokes the canonical 'Year' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /&gt;</ph>, die die kanonische Year-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp DateTime oder DateTimeOffset aufweisen muss.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)">
          <source>The result type of the expression is Edm.Int32.</source>
          <target state="translated">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)">
          <source>A new DbFunctionExpression that returns the integer year value from <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept>.</source>
          <target state="translated">Ein neues DbFunctionExpression, das das Jahr als Ganzzahlwert aus <bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept> zurückgibt.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)">
          <source><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>dateValue<ept id="p1">**</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>