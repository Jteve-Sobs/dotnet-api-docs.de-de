<Type Name="EdmFunctions" FullName="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d23b740d732b5e61661f2c7879d7b0c51cc2a1ac" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36694825" /></Metadata><TypeSignature Language="C#" Value="public static class EdmFunctions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EdmFunctions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" />
  <TypeSignature Language="VB.NET" Value="Public Module EdmFunctions" />
  <TypeSignature Language="C++ CLI" Value="public ref class EdmFunctions abstract sealed" />
  <TypeSignature Language="F#" Value="type EdmFunctions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine API zum Erstellen von <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s bereit, die kanonische EDM-Funktionen aufrufen, und lässt den Zugriff auf die API als Erweiterungsmethoden für den Ausdruckstypen "selbst" zu.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Abs (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Abs(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Abs (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Abs(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member Abs : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value">Ein Ausdruck, der den numerischen Wert angibt.</param>
        <summary>Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische Abs-Funktion mit dem angegebenen Argument aufruft, das jeweils einen numerischen Ergebnistyp aufweisen muss. Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von **value** identisch.</summary>
        <returns>Ein neues DbFunctionExpression, das den absoluten Wert von **value** zurückgibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**value**</exception>
        <exception cref="T:System.ArgumentException">**value**</exception>
      </Docs>
    </Member>
    <Member MemberName="AddDays">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddDays (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddDays(class System.Data.Common.CommandTrees.DbExpression dateValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddDays (dateValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddDays(System::Data::Common::CommandTrees::DbExpression ^ dateValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddDays : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays (dateValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue">Ein Ausdruck, der den Wert angibt, dem **addValue** hinzugefügt werden soll.</param>
        <param name="addValue">Ein Ausdruck, der die Anzahl der Tage angibt, die **dateValue** hinzugefügt werden soll.</param>
        <summary>Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische AddDays-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp DateTime oder DateTimeOffset und einen ganzzahligen Ergebnistyp aufweisen müssen. Der Ergebnistyp des Ausdrucks ist identisch mit dem Ergebnistyp von **dateValue**.</summary>
        <returns>Ein neues DbFunctionExpression, das die Anzahl der Tage, die von **addValue** angegeben wird, zu dem Wert addiert, der von **dateValue** angegeben wurde.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**dateValue** **addValue**</exception>
        <exception cref="T:System.ArgumentException">**dateValue** **addValue**</exception>
      </Docs>
    </Member>
    <Member MemberName="AddHours">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddHours (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddHours(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHours (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddHours(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddHours : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue">Ein Ausdruck, der den Wert angibt, dem **addValue** hinzugefügt werden soll.</param>
        <param name="addValue">Ein Ausdruck, der die Anzahl der Stunden angibt, die **timeValue** hinzugefügt werden soll.</param>
        <summary>Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische AddHours-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp DateTime, DateTimeOffset oder Time und einen ganzzahligen Ergebnistyp aufweisen müssen. Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von **timeValue** identisch.</summary>
        <returns>Ein neues DbFunctionExpression, das die Anzahl der Stunden, die von **addValue** angegeben wird, zu dem Wert addiert, der von **timeValue** angegeben wurde.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**timeValue** **addValue**</exception>
        <exception cref="T:System.ArgumentException">**timeValue** **addValue**</exception>
      </Docs>
    </Member>
    <Member MemberName="AddMicroseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMicroseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMicroseconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMicroseconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMicroseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddMicroseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue">Ein Ausdruck, der den Wert angibt, dem **addValue** hinzugefügt werden soll.</param>
        <param name="addValue">Ein Ausdruck, der die Anzahl der Mikrosekunden angibt, die **timeValue** hinzugefügt werden soll.</param>
        <summary>Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische AddMicroseconds-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp DateTime, DateTimeOffset oder Time und einen ganzzahligen Ergebnistyp aufweisen müssen. Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von **timeValue** identisch.</summary>
        <returns>Ein neues DbFunctionExpression, das die Anzahl der Mikrosekunden, die von **addValue** angegeben wird, zu dem Wert addiert, der von **timeValue** angegeben wurde.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**timeValue** **addValue**</exception>
        <exception cref="T:System.ArgumentException">**timeValue** **addValue**</exception>
      </Docs>
    </Member>
    <Member MemberName="AddMilliseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMilliseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMilliseconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMilliseconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMilliseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddMilliseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue">Ein Ausdruck, der den Wert angibt, dem **addValue** hinzugefügt werden soll.</param>
        <param name="addValue">Ein Ausdruck, der die Anzahl der Millisekunden angibt, die **timeValue** hinzugefügt werden soll.</param>
        <summary>Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische AddMilliseconds-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp DateTime, DateTimeOffset oder Time und einen ganzzahligen Ergebnistyp aufweisen müssen. Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von **timeValue** identisch.</summary>
        <returns>Ein neues DbFunctionExpression, das die Anzahl der Mikrosekunden, die von **addValue** angegeben wird, zu dem Wert addiert, der von **timeValue** angegeben wurde.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**timeValue** **addValue**</exception>
        <exception cref="T:System.ArgumentException">**timeValue** **addValue**</exception>
      </Docs>
    </Member>
    <Member MemberName="AddMinutes">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMinutes (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMinutes(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMinutes (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMinutes(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddMinutes : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue">Ein Ausdruck, der den Wert angibt, dem **addValue** hinzugefügt werden soll.</param>
        <param name="addValue">Ein Ausdruck, der die Anzahl der Minuten angibt, die **timeValue** hinzugefügt werden soll.</param>
        <summary>Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische AddMinutes-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp DateTime, DateTimeOffset oder Time und einen ganzzahligen Ergebnistyp aufweisen müssen. Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von **timeValue** identisch.</summary>
        <returns>Ein neues DbFunctionExpression, das die Anzahl der Minuten, die von **addValue** angegeben wird, zu dem Wert addiert, der von **timeValue** angegeben wurde.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**timeValue** **addValue**</exception>
        <exception cref="T:System.ArgumentException">**timeValue** **addValue**</exception>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMonths (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMonths(class System.Data.Common.CommandTrees.DbExpression dateValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMonths (dateValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMonths(System::Data::Common::CommandTrees::DbExpression ^ dateValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddMonths : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths (dateValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue">Ein Ausdruck, der den Wert angibt, dem **addValue** hinzugefügt werden soll.</param>
        <param name="addValue">Ein Ausdruck, der die Anzahl der Monate angibt, die **dateValue** hinzugefügt werden soll.</param>
        <summary>Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische AddMonths-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp DateTime oder DateTimeOffset und einen ganzzahligen Ergebnistyp aufweisen müssen. Der Ergebnistyp des Ausdrucks ist identisch mit dem Ergebnistyp von **dateValue**.</summary>
        <returns>Ein neues DbFunctionExpression, das die Anzahl der Monate, die von **addValue** angegeben wird, zu dem Wert addiert, der von **dateValue** angegeben wurde.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**dateValue** **addValue**</exception>
        <exception cref="T:System.ArgumentException">**dateValue** **addValue**</exception>
      </Docs>
    </Member>
    <Member MemberName="AddNanoseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddNanoseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddNanoseconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddNanoseconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddNanoseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddNanoseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue">Ein Ausdruck, der den Wert angibt, dem **addValue** hinzugefügt werden soll.</param>
        <param name="addValue">Ein Ausdruck, der die Anzahl der Nanosekunden angibt, die **timeValue** hinzugefügt werden soll.</param>
        <summary>Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische AddNanoseconds-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp DateTime, DateTimeOffset oder Time und einen ganzzahligen Ergebnistyp aufweisen müssen. Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von **timeValue** identisch.</summary>
        <returns>Ein neues DbFunctionExpression, das die Anzahl der Nanosekunden, die von **addValue** angegeben wird, zu dem Wert addiert, der von **timeValue** angegeben wurde.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**timeValue** **addValue**</exception>
        <exception cref="T:System.ArgumentException">**timeValue** **addValue**</exception>
      </Docs>
    </Member>
    <Member MemberName="AddSeconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddSeconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddSeconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddSeconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddSeconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddSeconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue">Ein Ausdruck, der den Wert angibt, dem **addValue** hinzugefügt werden soll.</param>
        <param name="addValue">Ein Ausdruck, der die Anzahl der Sekunden angibt, die **timeValue** hinzugefügt werden soll.</param>
        <summary>Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische AddSeconds-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp DateTime, DateTimeOffset oder Time und einen ganzzahligen Ergebnistyp aufweisen müssen. Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von **timeValue** identisch.</summary>
        <returns>Ein neues DbFunctionExpression, das die Anzahl der Sekunden, die von **addValue** angegeben wird, zu dem Wert addiert, der von **timeValue** angegeben wurde.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**timeValue** **addValue**</exception>
        <exception cref="T:System.ArgumentException">**timeValue** **addValue**</exception>
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddYears (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddYears(class System.Data.Common.CommandTrees.DbExpression dateValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddYears (dateValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddYears(System::Data::Common::CommandTrees::DbExpression ^ dateValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddYears : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears (dateValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue">Ein Ausdruck, der den Wert angibt, dem **addValue** hinzugefügt werden soll.</param>
        <param name="addValue">Ein Ausdruck, der die Anzahl der Jahre angibt, die **dateValue** hinzugefügt werden soll.</param>
        <summary>Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische AddYears-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp DateTime oder DateTimeOffset und einen ganzzahligen Ergebnistyp aufweisen müssen. Der Ergebnistyp des Ausdrucks ist identisch mit dem Ergebnistyp von **dateValue**.</summary>
        <returns>Ein neues DbFunctionExpression, das die Anzahl der Jahre, die von **addValue** angegeben wird, zu dem Wert addiert, der von **dateValue** angegeben wurde.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**dateValue** **addValue**</exception>
        <exception cref="T:System.ArgumentException">**dateValue** **addValue**</exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Average (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Average(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Average(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Average : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">Ein Ausdruck, der die Sammlung angibt, aus der der Durchschnittswert abgerufen werden soll.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />-Klasse, die die kanonische „Avg“-Funktion über die angegebene Sammlung aufruft. Der Ergebnistyp des Ausdrucks ist identisch mit dem Elementtyp der Sammlung.</summary>
        <returns>Eine neue „DbFunctionExpression“-Klasse, die den Durchschnittswert erzeugt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**Auflistung**</exception>
        <exception cref="T:System.ArgumentException">**Auflistung**</exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseAnd">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseAnd (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseAnd(class System.Data.Common.CommandTrees.DbExpression value1, class System.Data.Common.CommandTrees.DbExpression value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseAnd (value1 As DbExpression, value2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseAnd(System::Data::Common::CommandTrees::DbExpression ^ value1, System::Data::Common::CommandTrees::DbExpression ^ value2);" />
      <MemberSignature Language="F#" Value="static member BitwiseAnd : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="value2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value1">Ein Ausdruck, der den ersten Operanden angibt.</param>
        <param name="value2">Ein Ausdruck, der den zweiten Operanden angibt.</param>
        <summary>Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische BitwiseAnd-Funktion mit den angegebenen Argumenten aufruft, die den gleichen ganzzahligen numerischen Ergebnistyp aufweisen müssen. Der Ergebnistyp des Ausdrucks entspricht dem Typ des Arguments.</summary>
        <returns>Ein neues DbFunctionExpression, das den Wert zurückgibt, der durch das bitweise AND von **value1** und **value2** ermittelt wird.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**value1** **value2**</exception>
        <exception cref="T:System.ArgumentException">**value1** **value2**</exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseNot">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseNot (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseNot(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseNot (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseNot(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member BitwiseNot : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value">Ein Ausdruck, der den ersten Operanden angibt.</param>
        <summary>Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische BitwiseNot-Funktion mit dem angegebenen Argument aufruft, das einen ganzzahligen numerischen Ergebnistyp aufweisen muss. Der Ergebnistyp des Ausdrucks entspricht dem Typ des Arguments.</summary>
        <returns>Ein neues DbFunctionExpression, das den Wert zurückgibt, der durch das bitweise NOT von **value** ermittelt wird.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**value**</exception>
        <exception cref="T:System.ArgumentException">**value**</exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseOr">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseOr (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseOr(class System.Data.Common.CommandTrees.DbExpression value1, class System.Data.Common.CommandTrees.DbExpression value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseOr (value1 As DbExpression, value2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseOr(System::Data::Common::CommandTrees::DbExpression ^ value1, System::Data::Common::CommandTrees::DbExpression ^ value2);" />
      <MemberSignature Language="F#" Value="static member BitwiseOr : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="value2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value1">Ein Ausdruck, der den ersten Operanden angibt.</param>
        <param name="value2">Ein Ausdruck, der den zweiten Operanden angibt.</param>
        <summary>Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische BitwiseOr-Funktion mit den angegebenen Argumenten aufruft, die den gleichen ganzzahligen numerischen Ergebnistyp aufweisen müssen. Der Ergebnistyp des Ausdrucks entspricht dem Typ des Arguments.</summary>
        <returns>Ein neues DbFunctionExpression, das den Wert zurückgibt, der durch das bitweise OR von **value1** und **value2** ermittelt wird.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**value1** **value2**</exception>
        <exception cref="T:System.ArgumentException">**value1** **value2**</exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseXor">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseXor (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseXor(class System.Data.Common.CommandTrees.DbExpression value1, class System.Data.Common.CommandTrees.DbExpression value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseXor (value1 As DbExpression, value2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseXor(System::Data::Common::CommandTrees::DbExpression ^ value1, System::Data::Common::CommandTrees::DbExpression ^ value2);" />
      <MemberSignature Language="F#" Value="static member BitwiseXor : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="value2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value1">Ein Ausdruck, der den ersten Operanden angibt.</param>
        <param name="value2">Ein Ausdruck, der den zweiten Operanden angibt.</param>
        <summary>Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische BitwiseXor-Funktion mit den angegebenen Argumenten aufruft, die den gleichen ganzzahligen numerischen Ergebnistyp aufweisen müssen. Der Ergebnistyp des Ausdrucks entspricht dem Typ des Arguments.</summary>
        <returns>Ein neues DbFunctionExpression, das den Wert zurückgibt, der durch das bitweise XOR (exklusives OR) von **value1** und **value2** ermittelt wird.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**value1** **value2**</exception>
        <exception cref="T:System.ArgumentException">**value1** **value2**</exception>
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Ceiling (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Ceiling(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Ceiling (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Ceiling(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member Ceiling : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value">Ein Ausdruck, der den numerischen Wert angibt.</param>
        <summary>Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische Ceiling-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp Single, Double oder Decimal aufweisen muss. Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von **value** identisch.</summary>
        <returns>Ein neues DbFunctionExpression, das den kleinsten ganzzahligen Wert, der nicht kleiner als **value** ist, zurückgibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**value**</exception>
        <exception cref="T:System.ArgumentException">**value**</exception>
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Concat (this System.Data.Common.CommandTrees.DbExpression string1, System.Data.Common.CommandTrees.DbExpression string2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Concat(class System.Data.Common.CommandTrees.DbExpression string1, class System.Data.Common.CommandTrees.DbExpression string2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Concat (string1 As DbExpression, string2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Concat(System::Data::Common::CommandTrees::DbExpression ^ string1, System::Data::Common::CommandTrees::DbExpression ^ string2);" />
      <MemberSignature Language="F#" Value="static member Concat : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat (string1, string2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="string2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="string1">Ein Ausdruck, der die Zeichenfolge angibt, die als erstes Element in der verketteten Ergebniszeichenfolge angezeigt werden soll.</param>
        <param name="string2">Ein Ausdruck, der die Zeichenfolge angibt, die als zweites Element in der verketteten Ergebniszeichenfolge angezeigt werden soll.</param>
        <summary>Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische Concat-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp String aufweisen müssen. Der Ergebnistyp des Ausdrucks ist „String“.</summary>
        <returns>Ein neues DbFunctionExpression, das die verkettete Zeichenfolge produziert.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**string1** **string2**</exception>
        <exception cref="T:System.ArgumentException">**string1** **string2**</exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Contains (this System.Data.Common.CommandTrees.DbExpression searchedString, System.Data.Common.CommandTrees.DbExpression searchedForString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Contains(class System.Data.Common.CommandTrees.DbExpression searchedString, class System.Data.Common.CommandTrees.DbExpression searchedForString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains (searchedString As DbExpression, searchedForString As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Contains(System::Data::Common::CommandTrees::DbExpression ^ searchedString, System::Data::Common::CommandTrees::DbExpression ^ searchedForString);" />
      <MemberSignature Language="F#" Value="static member Contains : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains (searchedString, searchedForString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchedString" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="searchedForString" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="searchedString">Ein Ausdruck, der die Zeichenfolge angibt, in der jedes Vorkommen von **searchedForString** gesucht werden soll.</param>
        <param name="searchedForString">Ein Ausdruck, der die Zeichenfolge angibt, die in **searchedString** gesucht werden soll.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Contains-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp String aufweisen müssen. Der Ergebnistyp des Ausdrucks ist Boolean.</summary>
        <returns>Ein neues DbFunctionExpression, das einen booleschen Wert zurückgibt, der angibt, ob **searchedForString** innerhalb **searchedString** auftritt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**searchedString** **searchedForString**</exception>
        <exception cref="T:System.ArgumentException">**searchedString** **searchedForString**</exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Count (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Count(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Count (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Count(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Count : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">Ein Ausdruck, der die Sammlung angibt, über die der Anzahlwert berechnet werden soll.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />-Klasse, die die kanonische „Count“-Funktion über die angegebene Sammlung aufruft. Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</summary>
        <returns>Eine neue Klasse „DbFunctionExpression“, die den Anzahlwert erzeugt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**Auflistung**</exception>
        <exception cref="T:System.ArgumentException">**Auflistung**</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTime (System.Data.Common.CommandTrees.DbExpression year, System.Data.Common.CommandTrees.DbExpression month, System.Data.Common.CommandTrees.DbExpression day, System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTime(class System.Data.Common.CommandTrees.DbExpression year, class System.Data.Common.CommandTrees.DbExpression month, class System.Data.Common.CommandTrees.DbExpression day, class System.Data.Common.CommandTrees.DbExpression hour, class System.Data.Common.CommandTrees.DbExpression minute, class System.Data.Common.CommandTrees.DbExpression second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDateTime (year As DbExpression, month As DbExpression, day As DbExpression, hour As DbExpression, minute As DbExpression, second As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CreateDateTime(System::Data::Common::CommandTrees::DbExpression ^ year, System::Data::Common::CommandTrees::DbExpression ^ month, System::Data::Common::CommandTrees::DbExpression ^ day, System::Data::Common::CommandTrees::DbExpression ^ hour, System::Data::Common::CommandTrees::DbExpression ^ minute, System::Data::Common::CommandTrees::DbExpression ^ second);" />
      <MemberSignature Language="F#" Value="static member CreateDateTime : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime (year, month, day, hour, minute, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="month" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="day" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="hour" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="minute" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="second" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="year">Ein Ausdruck, der den Jahreswert für die neue DateTime-Instanz bereitstellt.</param>
        <param name="month">Ein Ausdruck, der den Wert des Monatswertes für die neue DateTime-Instanz bereitstellt.</param>
        <param name="day">Ein Ausdruck, der den Wert des Tageswertes für die neue DateTime-Instanz bereitstellt.</param>
        <param name="hour">Ein Ausdruck, der den Wert des Stundenwertes für die neue DateTime-Instanz bereitstellt.</param>
        <param name="minute">Ein Ausdruck, der den Wert des Minutenwertes für die neue DateTime-Instanz bereitstellt.</param>
        <param name="second">Ein Ausdruck, der den Sekundenwert für die neue DateTime-Instanz bereitstellt.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische CreateDateTime-Funktion mit den angegebenen Argumenten aufruft. **second** muss den Ergebnistyp Edm.Double aufweisen, und alle anderen Argumente müssen den Ergebnistyp Edm.Int32 aufweisen. Der Ergebnistyp des Ausdrucks ist Edm.DateTime.</summary>
        <returns>Ein neues DbFunctionExpression das ein neues DateTime zurückgibt, basierend auf den angegebenen Werten.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**year** **month** **day** **hour** **minute** **second**</exception>
        <exception cref="T:System.ArgumentException">**year** **month** **day** **hour** **minute** **second**</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDateTimeOffset">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTimeOffset (System.Data.Common.CommandTrees.DbExpression year, System.Data.Common.CommandTrees.DbExpression month, System.Data.Common.CommandTrees.DbExpression day, System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second, System.Data.Common.CommandTrees.DbExpression timeZoneOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTimeOffset(class System.Data.Common.CommandTrees.DbExpression year, class System.Data.Common.CommandTrees.DbExpression month, class System.Data.Common.CommandTrees.DbExpression day, class System.Data.Common.CommandTrees.DbExpression hour, class System.Data.Common.CommandTrees.DbExpression minute, class System.Data.Common.CommandTrees.DbExpression second, class System.Data.Common.CommandTrees.DbExpression timeZoneOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDateTimeOffset (year As DbExpression, month As DbExpression, day As DbExpression, hour As DbExpression, minute As DbExpression, second As DbExpression, timeZoneOffset As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CreateDateTimeOffset(System::Data::Common::CommandTrees::DbExpression ^ year, System::Data::Common::CommandTrees::DbExpression ^ month, System::Data::Common::CommandTrees::DbExpression ^ day, System::Data::Common::CommandTrees::DbExpression ^ hour, System::Data::Common::CommandTrees::DbExpression ^ minute, System::Data::Common::CommandTrees::DbExpression ^ second, System::Data::Common::CommandTrees::DbExpression ^ timeZoneOffset);" />
      <MemberSignature Language="F#" Value="static member CreateDateTimeOffset : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset (year, month, day, hour, minute, second, timeZoneOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="month" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="day" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="hour" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="minute" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="second" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="timeZoneOffset" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="year">Ein Ausdruck, der den Jahreswert für die neue DateTimeOffset-Instanz bereitstellt.</param>
        <param name="month">Ein Ausdruck, der den Wert des Monatswertes für die neue DateTimeOffset-Instanz bereitstellt.</param>
        <param name="day">Ein Ausdruck, der den Wert des Tageswertes für die neue DateTimeOffset-Instanz bereitstellt.</param>
        <param name="hour">Ein Ausdruck, der den Wert des Stundenwertes für die neue DateTimeOffset-Instanz bereitstellt.</param>
        <param name="minute">Ein Ausdruck, der den Wert des Minutenwertes für die neue DateTimeOffset-Instanz bereitstellt.</param>
        <param name="second">Ein Ausdruck, der den Sekundenwert für die neue DateTimeOffset-Instanz bereitstellt.</param>
        <param name="timeZoneOffset">Ein Ausdruck, der die Anzahl der Minuten im Zeitzonenoffsetwert für die neue DateTimeOffset-Instanz bereitstellt.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische CreateDateTimeOffset-Funktion mit den angegebenen Argumenten aufruft. **second** muss den Ergebnistyp Edm.Double aufweisen, und alle anderen Argumente müssen den Ergebnistyp Edm.Int32 aufweisen. Der Ergebnistyp des Ausdrucks ist Edm.DateTimeOffset.</summary>
        <returns>Ein neues DbFunctionExpression das ein neues DateTimeOffset zurückgibt, basierend auf den angegebenen Werten.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</exception>
        <exception cref="T:System.ArgumentException">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CreateTime (System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CreateTime(class System.Data.Common.CommandTrees.DbExpression hour, class System.Data.Common.CommandTrees.DbExpression minute, class System.Data.Common.CommandTrees.DbExpression second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTime (hour As DbExpression, minute As DbExpression, second As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CreateTime(System::Data::Common::CommandTrees::DbExpression ^ hour, System::Data::Common::CommandTrees::DbExpression ^ minute, System::Data::Common::CommandTrees::DbExpression ^ second);" />
      <MemberSignature Language="F#" Value="static member CreateTime : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime (hour, minute, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hour" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="minute" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="second" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="hour">Ein Ausdruck, der den Wert des Stundenwertes für die neue DateTime-Instanz bereitstellt.</param>
        <param name="minute">Ein Ausdruck, der den Wert des Minutenwertes für die neue DateTime-Instanz bereitstellt.</param>
        <param name="second">Ein Ausdruck, der den Sekundenwert für die neue DateTime-Instanz bereitstellt.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische CreateTime-Funktion mit den angegebenen Argumenten aufruft. **second** muss den Ergebnistyp Edm.Double aufweisen, und alle anderen Argumente müssen den Ergebnistyp Edm.Int32 aufweisen. Der Ergebnistyp des Ausdrucks ist Edm.Time.</summary>
        <returns>Ein neues DbFunctionExpression das ein neues Time zurückgibt, basierend auf den angegebenen Werten.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**hour** **minute** **second**</exception>
        <exception cref="T:System.ArgumentException">**hour** **minute** **second**</exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentDateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Function CurrentDateTime () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CurrentDateTime();" />
      <MemberSignature Language="F#" Value="static member CurrentDateTime : unit -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische CurrentDateTime-Funktion aufruft.</summary>
        <returns>Ein neues DbFunctionExpression, das das aktuelle Datum und die aktuelle Uhrzeit als Edm.DateTime-Instanz zurückgibt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDateTimeOffset">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTimeOffset ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTimeOffset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset" />
      <MemberSignature Language="VB.NET" Value="Public Function CurrentDateTimeOffset () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CurrentDateTimeOffset();" />
      <MemberSignature Language="F#" Value="static member CurrentDateTimeOffset : unit -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische CurrentDateTimeOffset-Funktion aufruft.</summary>
        <returns>Ein neues DbFunctionExpression, das das aktuelle Datum und die aktuelle Uhrzeit als Edm.DateTimeOffset-Instanz zurückgibt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentUtcDateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentUtcDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CurrentUtcDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Function CurrentUtcDateTime () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CurrentUtcDateTime();" />
      <MemberSignature Language="F#" Value="static member CurrentUtcDateTime : unit -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische CurrentUtcDateTime-Funktion aufruft.</summary>
        <returns>Ein neues DbFunctionExpression, das das aktuelle UTC-Datum und die aktuelle Uhrzeit als Edm.DateTime-Instanz zurückgibt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Day (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Day(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Day (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Day(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member Day : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue">Ein Ausdruck, der den Wert angibt, aus dem der Tag abgerufen werden soll.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Day-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp DateTime oder DateTimeOffset aufweisen muss. Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</summary>
        <returns>Ein neues DbFunctionExpression, das den Tag als Ganzzahlwert aus **dateValue** zurückgibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**dateValue**</exception>
        <exception cref="T:System.ArgumentException">**dateValue**</exception>
      </Docs>
    </Member>
    <Member MemberName="DayOfYear">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DayOfYear (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DayOfYear(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DayOfYear (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DayOfYear(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member DayOfYear : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue">Ein Ausdruck, der den Wert angibt, aus dem der Tag des Jahres abgerufen werden soll.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische DayOfYear-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp DateTime oder DateTimeOffset aufweisen muss. Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</summary>
        <returns>Ein neues DbFunctionExpression, das den Tag des Jahres als Ganzzahlwert aus **dateValue** zurückgibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**dateValue**</exception>
        <exception cref="T:System.ArgumentException">**dateValue**</exception>
      </Docs>
    </Member>
    <Member MemberName="DiffDays">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffDays (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffDays(class System.Data.Common.CommandTrees.DbExpression dateValue1, class System.Data.Common.CommandTrees.DbExpression dateValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffDays (dateValue1 As DbExpression, dateValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffDays(System::Data::Common::CommandTrees::DbExpression ^ dateValue1, System::Data::Common::CommandTrees::DbExpression ^ dateValue2);" />
      <MemberSignature Language="F#" Value="static member DiffDays : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays (dateValue1, dateValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="dateValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue1">Ein Ausdruck, der das erste Datumswertargument angibt.</param>
        <param name="dateValue2">Ein Ausdruck, der das zweite Datumswertargument angibt.</param>
        <summary>Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische DiffDays-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp DateTime oder DateTimeOffset aufweisen müssen. Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</summary>
        <returns>Ein neues DbFunctionExpression, das die Anzahl der Tage zurückgibt, die den Unterschied zwischen **dateValue1** und **dateValue2** ausmachen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffHours">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffHours (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffHours(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffHours (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffHours(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffHours : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1">Ein Ausdruck, der das erste Uhrzeitwertargument angibt.</param>
        <param name="timeValue2">Ein Ausdruck, der das zweite Zeitwertargument angibt.</param>
        <summary>Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische DiffHours-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp DateTime, DateTimeOffset oder Time aufweisen müssen. Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</summary>
        <returns>Ein neues DbFunctionExpression, das die Anzahl der Stunden zurückgibt, die den Unterschied zwischen **timeValue1** und **timeValue2** ausmachen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMicroseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMicroseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMicroseconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMicroseconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMicroseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffMicroseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1">Ein Ausdruck, der das erste Uhrzeitwertargument angibt.</param>
        <param name="timeValue2">Ein Ausdruck, der das zweite Zeitwertargument angibt.</param>
        <summary>Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische DiffMicroseconds-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp DateTime, DateTimeOffset oder Time aufweisen müssen. Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</summary>
        <returns>Ein neues DbFunctionExpression, das die Anzahl der Mikrosekunden zurückgibt, die den Unterschied zwischen **timeValue1** und **timeValue2** ausmachen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMilliseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMilliseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMilliseconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMilliseconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMilliseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffMilliseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1">Ein Ausdruck, der das erste Uhrzeitwertargument angibt.</param>
        <param name="timeValue2">Ein Ausdruck, der das zweite Zeitwertargument angibt.</param>
        <summary>Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische DiffMilliseconds-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp DateTime, DateTimeOffset oder Time aufweisen müssen. Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</summary>
        <returns>Ein neues DbFunctionExpression, das die Anzahl der Millisekunden zurückgibt, die den Unterschied zwischen **timeValue1** und **timeValue2** ausmachen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMinutes">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMinutes (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMinutes(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMinutes (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMinutes(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffMinutes : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1">Ein Ausdruck, der das erste Uhrzeitwertargument angibt.</param>
        <param name="timeValue2">Ein Ausdruck, der das zweite Zeitwertargument angibt.</param>
        <summary>Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische DiffMinutes-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp DateTime, DateTimeOffset oder Time aufweisen müssen. Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</summary>
        <returns>Ein neues DbFunctionExpression, das die Anzahl der Minuten zurückgibt, die den Unterschied zwischen **timeValue1** und **timeValue2** ausmachen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMonths">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMonths (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMonths(class System.Data.Common.CommandTrees.DbExpression dateValue1, class System.Data.Common.CommandTrees.DbExpression dateValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMonths (dateValue1 As DbExpression, dateValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMonths(System::Data::Common::CommandTrees::DbExpression ^ dateValue1, System::Data::Common::CommandTrees::DbExpression ^ dateValue2);" />
      <MemberSignature Language="F#" Value="static member DiffMonths : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths (dateValue1, dateValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="dateValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue1">Ein Ausdruck, der das erste Datumswertargument angibt.</param>
        <param name="dateValue2">Ein Ausdruck, der das zweite Datumswertargument angibt.</param>
        <summary>Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische DiffMonths-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp DateTime oder DateTimeOffset aufweisen müssen. Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</summary>
        <returns>Ein neues DbFunctionExpression, das die Anzahl der Monate zurückgibt, die den Unterschied zwischen **dateValue1** und **dateValue2** ausmachen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffNanoseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffNanoseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffNanoseconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffNanoseconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffNanoseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffNanoseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1">Ein Ausdruck, der das erste Uhrzeitwertargument angibt.</param>
        <param name="timeValue2">Ein Ausdruck, der das zweite Zeitwertargument angibt.</param>
        <summary>Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische DiffNanoseconds-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp DateTime, DateTimeOffset oder Time aufweisen müssen. Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</summary>
        <returns>Ein neues DbFunctionExpression, das die Anzahl der Nanosekunden zurückgibt, die den Unterschied zwischen **timeValue1** und **timeValue2** ausmachen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffSeconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffSeconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffSeconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffSeconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffSeconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffSeconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1">Ein Ausdruck, der das erste Uhrzeitwertargument angibt.</param>
        <param name="timeValue2">Ein Ausdruck, der das zweite Zeitwertargument angibt.</param>
        <summary>Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische DiffSeconds-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp DateTime, DateTimeOffset oder Time aufweisen müssen. Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</summary>
        <returns>Ein neues DbFunctionExpression, das die Anzahl der Sekunden zurückgibt, die den Unterschied zwischen **timeValue1** und **timeValue2** ausmachen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffYears">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffYears (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffYears(class System.Data.Common.CommandTrees.DbExpression dateValue1, class System.Data.Common.CommandTrees.DbExpression dateValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffYears (dateValue1 As DbExpression, dateValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffYears(System::Data::Common::CommandTrees::DbExpression ^ dateValue1, System::Data::Common::CommandTrees::DbExpression ^ dateValue2);" />
      <MemberSignature Language="F#" Value="static member DiffYears : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears (dateValue1, dateValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="dateValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue1">Ein Ausdruck, der das erste Datumswertargument angibt.</param>
        <param name="dateValue2">Ein Ausdruck, der das zweite Datumswertargument angibt.</param>
        <summary>Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische DiffYears-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp DateTime oder DateTimeOffset aufweisen müssen. Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</summary>
        <returns>Ein neues DbFunctionExpression, das die Anzahl der Jahre zurückgibt, die den Unterschied zwischen **dateValue1** und **dateValue2** ausmachen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndsWith">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression EndsWith (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression suffix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression EndsWith(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression suffix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EndsWith (stringArgument As DbExpression, suffix As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ EndsWith(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ suffix);" />
      <MemberSignature Language="F#" Value="static member EndsWith : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith (stringArgument, suffix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="suffix" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument">Ein Ausdruck, der die Zeichenfolge angibt, die am Ende nach der Zeichenfolge **suffix** durchsucht wird.</param>
        <param name="suffix">Ein Ausdruck, der die Zielzeichenfolge angibt, nach der am Ende von **stringArgument** gesucht wird.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische EndsWith-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp String aufweisen müssen. Der Ergebnistyp des Ausdrucks ist Boolean.</summary>
        <returns>Ein neues DbFunctionExpression, das einen booleschen Wert zurückgibt, der angibt, ob **stringArgument** mit **suffix** endet oder nicht.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Floor (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Floor(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Floor (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Floor(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member Floor : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value">Ein Ausdruck, der den numerischen Wert angibt.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Floor-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp Single, Double oder Decimal aufweisen muss. Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von **value** identisch.</summary>
        <returns>Ein neues DbFunctionExpression, das den größten ganzzahligen Wert zurückgibt, der nicht größer als **value** ist.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**value**</exception>
        <exception cref="T:System.ArgumentException">**value**</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTotalOffsetMinutes">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression GetTotalOffsetMinutes (this System.Data.Common.CommandTrees.DbExpression dateTimeOffsetArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression GetTotalOffsetMinutes(class System.Data.Common.CommandTrees.DbExpression dateTimeOffsetArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTotalOffsetMinutes (dateTimeOffsetArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ GetTotalOffsetMinutes(System::Data::Common::CommandTrees::DbExpression ^ dateTimeOffsetArgument);" />
      <MemberSignature Language="F#" Value="static member GetTotalOffsetMinutes : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes dateTimeOffsetArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffsetArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffsetArgument">Ein Ausdruck, der den DateTimeOffset-Wert angibt, aus dem der Minutenoffset von GMT abgerufen werden soll.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische GetTotalOffsetMinutes-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp DateTimeOffset aufweisen muss. Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</summary>
        <returns>Ein neues DbFunctionExpression, das die Anzahl der Minuten zurückgibt, um die **dateTimeOffsetArgument** zu GMT versetzt ist.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**dateTimeOffsetArgument**</exception>
        <exception cref="T:System.ArgumentException">**dateTimeOffsetArgument**</exception>
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Hour (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Hour(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Hour (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Hour(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberSignature Language="F#" Value="static member Hour : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour timeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="timeValue">Ein Ausdruck, der den Wert angibt, aus dem die Stunde abgerufen werden soll.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Hour-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp DateTime, DateTimeOffset oder „Time“ aufweisen muss. Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</summary>
        <returns>Ein neues DbFunctionExpression, das die Stunde als Ganzzahlwert aus **timeValue** zurückgibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**timeValue**</exception>
        <exception cref="T:System.ArgumentException">**timeValue**</exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression IndexOf (this System.Data.Common.CommandTrees.DbExpression searchString, System.Data.Common.CommandTrees.DbExpression stringToFind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression IndexOf(class System.Data.Common.CommandTrees.DbExpression searchString, class System.Data.Common.CommandTrees.DbExpression stringToFind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf (searchString As DbExpression, stringToFind As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ IndexOf(System::Data::Common::CommandTrees::DbExpression ^ searchString, System::Data::Common::CommandTrees::DbExpression ^ stringToFind);" />
      <MemberSignature Language="F#" Value="static member IndexOf : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf (searchString, stringToFind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchString" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="stringToFind" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="searchString">Ein Ausdruck, der die Zeichenfolge angibt, die in **stringToFind** gesucht werden soll.</param>
        <param name="stringToFind">Ein Ausdruck, der die Zeichenfolge angibt, die in **searchString** gesucht werden soll, sollte überprüft werden.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische IndexOf-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp String aufweisen müssen. Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</summary>
        <returns>Ein neues DbFunctionExpression, das den ersten Index aus **stringToFind** in **searchString** zurückgibt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Index von "IndexOf" zurückgegebene \<b > auf 1 basierende \< /b >.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">**searchString** **stringToFind**</exception>
        <exception cref="T:System.ArgumentException">**searchString** **stringToFind**</exception>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Left (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Left(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Left (stringArgument As DbExpression, length As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Left(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ length);" />
      <MemberSignature Language="F#" Value="static member Left : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left (stringArgument, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="length" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument">Ein Ausdruck, der die Zeichenfolge angibt, aus der die äußerste linke Teilzeichenfolge extrahiert wird.</param>
        <param name="length">Ein Ausdruck, der die Länge der äußersten linken aus **stringArgument** zu extrahierenden Teilzeichenfolge angibt.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Left-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp String und einen ganzzahligen numerischen Ergebnistyp aufweisen müssen. Der Ergebnistyp des Ausdrucks ist „String“.</summary>
        <returns>Ein neues DbFunctionExpression-Objekt, das die äußerste linke Teilzeichenfolge der Länge **length** aus **stringArgument** zurückgibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**stringArgument** **length**</exception>
        <exception cref="T:System.ArgumentException">**stringArgument**</exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Length (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Length(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Length (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Length(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member Length : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">Ein Ausdruck, der die Zeichenfolge angibt, für die die Länge berechnet werden soll.</param>
        <summary>Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische Length-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp String aufweisen muss. Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</summary>
        <returns>Ein neues DbFunctionExpression, das die Länge von **stringArgument** zurückgibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**stringArgument**</exception>
        <exception cref="T:System.ArgumentException">**stringArgument**</exception>
      </Docs>
    </Member>
    <Member MemberName="LongCount">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression LongCount (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression LongCount(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LongCount (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ LongCount(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member LongCount : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">Ein Ausdruck, der die Sammlung angibt, über die der Anzahlwert berechnet werden soll.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische „BigCount“-Funktion über die angegebene Sammlung aufruft. Der Ergebnistyp des Ausdrucks ist „Edm.Int64“.</summary>
        <returns>Eine neue Klasse „DbFunctionExpression“, die den Anzahlwert erzeugt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**Auflistung**</exception>
        <exception cref="T:System.ArgumentException">**Auflistung**</exception>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Max (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Max(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Max(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Max : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">Ein Ausdruck, der die Sammlung angibt, aus der der Maximalwert abgerufen werden soll.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />-Klasse, die die kanonische „Max“-Funktion über die angegebene Sammlung aufruft. Der Ergebnistyp des Ausdrucks ist identisch mit dem Elementtyp der Sammlung.</summary>
        <returns>Eine neue „DbFunctionExpression“-Klasse, die den Maximalwert erzeugt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**Auflistung**</exception>
        <exception cref="T:System.ArgumentException">**Auflistung**</exception>
      </Docs>
    </Member>
    <Member MemberName="Millisecond">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Millisecond (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Millisecond(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Millisecond (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Millisecond(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberSignature Language="F#" Value="static member Millisecond : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond timeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="timeValue">Ein Ausdruck, der den Wert angibt, aus dem die Millisekunde abgerufen werden soll.</param>
        <summary>Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische Millisecond-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp DateTime, DateTimeOffset oder Time aufweisen muss. Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</summary>
        <returns>Ein neues DbFunctionExpression, das die Millisekunde als Ganzzahlwert aus **timeValue** zurückgibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**timeValue**</exception>
        <exception cref="T:System.ArgumentException">**timeValue**</exception>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Min (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Min(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Min(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Min : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">Ein Ausdruck, der die Sammlung angibt, aus der der Mindestwert abgerufen werden soll.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />-Klasse, die die kanonische „Min“-Funktion über die angegebene Sammlung aufruft. Der Ergebnistyp des Ausdrucks ist identisch mit dem Elementtyp der Sammlung.</summary>
        <returns>Eine neue „DbFunctionExpression“-Klasse, die den Mindestwert erzeugt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**Auflistung**</exception>
        <exception cref="T:System.ArgumentException">**Auflistung**</exception>
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Minute (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Minute(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Minute (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Minute(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberSignature Language="F#" Value="static member Minute : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute timeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="timeValue">Ein Ausdruck, der den Wert angibt, aus dem die Minute abgerufen werden soll.</param>
        <summary>Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische Minute-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp DateTime, DateTimeOffset oder Time aufweisen muss. Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</summary>
        <returns>Ein neues DbFunctionExpression, das die Minute als Ganzzahlwert aus **timeValue** zurückgibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**timeValue**</exception>
        <exception cref="T:System.ArgumentException">**timeValue**</exception>
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Month (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Month(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Month (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Month(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member Month : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue">Ein Ausdruck, der den Wert angibt, aus dem der Monat abgerufen werden soll.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Month-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp DateTime oder DateTimeOffset aufweisen muss. Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</summary>
        <returns>Ein neues DbFunctionExpression, das den Monat als Ganzzahlwert aus **dateValue** zurückgibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**dateValue**</exception>
        <exception cref="T:System.ArgumentException">**dateValue**</exception>
      </Docs>
    </Member>
    <Member MemberName="NewGuid">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression NewGuid ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression NewGuid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid" />
      <MemberSignature Language="VB.NET" Value="Public Function NewGuid () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ NewGuid();" />
      <MemberSignature Language="F#" Value="static member NewGuid : unit -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische NewGuid-Funktion aufruft.</summary>
        <returns>Ein neues DbFunctionExpression, das den neuen Wert der GUID zurückgibt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Power">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Power (this System.Data.Common.CommandTrees.DbExpression baseArgument, System.Data.Common.CommandTrees.DbExpression exponent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Power(class System.Data.Common.CommandTrees.DbExpression baseArgument, class System.Data.Common.CommandTrees.DbExpression exponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Power (baseArgument As DbExpression, exponent As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Power(System::Data::Common::CommandTrees::DbExpression ^ baseArgument, System::Data::Common::CommandTrees::DbExpression ^ exponent);" />
      <MemberSignature Language="F#" Value="static member Power : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power (baseArgument, exponent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="exponent" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="baseArgument">Ein Ausdruck, der den numerischen Wert angibt, dessen angegebene Potenz berechnet werden soll.</param>
        <param name="exponent">Ein Ausdruck, der die Potenz angibt, mit der **baseArgument** berechnet werden soll.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Power-Funktion mit den angegebenen Argumenten aufruft, die numerische Ergebnistypen aufweisen müssen. Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von **baseArgument** identisch.</summary>
        <returns>Ein neues DbFunctionExpression, das den Wert **baseArgument** zurückgibt, der aus der Potenzierung von **exponent** angegeben wurde.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**baseArgument** **exponent**</exception>
        <exception cref="T:System.ArgumentException">**baseArgument** **exponent**</exception>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Replace (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression toReplace, System.Data.Common.CommandTrees.DbExpression replacement);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Replace(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression toReplace, class System.Data.Common.CommandTrees.DbExpression replacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Replace (stringArgument As DbExpression, toReplace As DbExpression, replacement As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Replace(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ toReplace, System::Data::Common::CommandTrees::DbExpression ^ replacement);" />
      <MemberSignature Language="F#" Value="static member Replace : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace (stringArgument, toReplace, replacement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="toReplace" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="replacement" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument">Ein Ausdruck, der die Zeichenfolge angibt, in der die Ersetzung ausgeführt werden soll.</param>
        <param name="toReplace">Ein Ausdruck, der die ersetzte Zeichenfolge angibt.</param>
        <param name="replacement">Ein Ausdruck, der die Ersetzungszeichenfolge angibt.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Replace-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp String aufweisen müssen. Der Ergebnistyp des Ausdrucks ist ebenfalls „String“.</summary>
        <returns>Ein neues DbFunctionExpression, das eine neue Zeichenfolge auf Grundlage des **stringArgument** zurückgibt, wobei jedes Vorkommen von **toReplace** durch **replacement** ersetzt wird.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**stringArgument** **toReplace** **replacement**</exception>
        <exception cref="T:System.ArgumentException">**stringArgument** **toReplace** **replacement**</exception>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Reverse (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Reverse(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Reverse (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Reverse(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member Reverse : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">Ein Ausdruck, der die umzukehrende Zeichenfolge angibt.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Reverse-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp String aufweisen muss. Der Ergebnistyp des Ausdrucks ist ebenfalls „String“.</summary>
        <returns>Ein neues DbFunctionExpression, das den umgekehrten Wert von **stringArgument** erzeugt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**stringArgument**</exception>
        <exception cref="T:System.ArgumentException">**stringArgument**</exception>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Right (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Right(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Right (stringArgument As DbExpression, length As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Right(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ length);" />
      <MemberSignature Language="F#" Value="static member Right : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right (stringArgument, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="length" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument">Ein Ausdruck, der die Zeichenfolge angibt, aus der die äußerste rechte Teilzeichenfolge extrahiert wird.</param>
        <param name="length">Ein Ausdruck, der die Länge der äußersten rechten aus **stringArgument** zu extrahierenden Teilzeichenfolge angibt.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Right-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp String und einen ganzzahligen numerischen Ergebnistyp aufweisen müssen. Der Ergebnistyp des Ausdrucks ist „String“.</summary>
        <returns>Ein neues DbFunctionExpression-Objekt, das die äußerste rechte Teilzeichenfolge der Länge **length** aus **stringArgument** zurückgibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**stringArgument** **length**</exception>
        <exception cref="T:System.ArgumentException">**stringArgument**</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Round">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische Round-Funktion aufruft.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Round (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Round(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Round (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Round(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member Round : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value">Ein Ausdruck, der den zu rundenden numerischen Wert angibt.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Round-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp Single, Double oder Decimal aufweisen muss. Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von **value** identisch.</summary>
        <returns>Ein neues DbFunctionExpression, das das angegebene Argument auf den nächsten ganzzahligen Wert rundet.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**value**</exception>
        <exception cref="T:System.ArgumentException">**value**</exception>
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Round (this System.Data.Common.CommandTrees.DbExpression value, System.Data.Common.CommandTrees.DbExpression digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Round(class System.Data.Common.CommandTrees.DbExpression value, class System.Data.Common.CommandTrees.DbExpression digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Round (value As DbExpression, digits As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Round(System::Data::Common::CommandTrees::DbExpression ^ value, System::Data::Common::CommandTrees::DbExpression ^ digits);" />
      <MemberSignature Language="F#" Value="static member Round : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round (value, digits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="digits" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value">Ein Ausdruck, der den zu rundenden numerischen Wert angibt.</param>
        <param name="digits">Ein Ausdruck, der die beim Runden zu verwendende Anzahl gültiger Ziffern angibt.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Round-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp Single, Double oder Decimal und einen ganzzahligen Ergebnistyp aufweisen müssen. Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von **value** identisch.</summary>
        <returns>Ein neues DbFunctionExpression, das das angegebene Argument mit der durch **digits** angegebenen Genauigkeit auf den nächsten ganzzahligen Wert rundet.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**value** **digits**</exception>
        <exception cref="T:System.ArgumentException">**value** **digits**</exception>
      </Docs>
    </Member>
    <Member MemberName="Second">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Second (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Second(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Second (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Second(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberSignature Language="F#" Value="static member Second : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second timeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="timeValue">Ein Ausdruck, der den Wert angibt, aus dem die Sekunde abgerufen werden soll.</param>
        <summary>Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische Second-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp DateTime, DateTimeOffset oder Time aufweisen muss. Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</summary>
        <returns>Ein neues DbFunctionExpression, das die Sekunde als Ganzzahlwert aus **timeValue** zurückgibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**timeValue**</exception>
        <exception cref="T:System.ArgumentException">**timeValue**</exception>
      </Docs>
    </Member>
    <Member MemberName="StartsWith">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression StartsWith (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression StartsWith(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StartsWith (stringArgument As DbExpression, prefix As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ StartsWith(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ prefix);" />
      <MemberSignature Language="F#" Value="static member StartsWith : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith (stringArgument, prefix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="prefix" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument">Ein Ausdruck, der die Zeichenfolge angibt, die am Anfang nach der Zeichenfolge **prefix** durchsucht wird.</param>
        <param name="prefix">Ein Ausdruck, der die Zielzeichenfolge angibt, nach der am Anfang von **stringArgument** gesucht wird.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische StartsWith-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp String aufweisen müssen. Der Ergebnistyp des Ausdrucks ist Boolean.</summary>
        <returns>Ein neues DbFunctionExpression, das einen booleschen Wert zurückgibt, der angibt, ob **stringArgument** mit **prefix** beginnt oder nicht.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StDev">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression StDev (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression StDev(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StDev (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ StDev(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member StDev : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">Ein Ausdruck, der die Sammlung angibt, für die die Standardabweichung berechnet werden soll.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />-Klasse, die die kanonische „StDev“-Funktion über die Member der angegebenen Sammlung, die nicht NULL sind, abruft. Der Ergebnistyp des Ausdrucks ist „Edm.Double“.</summary>
        <returns>Eine neue „DbFunctionExpression“-Klasse, die den Standardabweichungswert über Member der Sammlung, die nicht NULL sind, erstellt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**Auflistung**</exception>
        <exception cref="T:System.ArgumentException">**Auflistung**</exception>
      </Docs>
    </Member>
    <Member MemberName="StDevP">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression StDevP (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression StDevP(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StDevP (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ StDevP(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member StDevP : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">Ein Ausdruck, der die Sammlung angibt, für die die Standardabweichung berechnet werden soll.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />-Klasse, die die kanonische „StDevP“-Funktion über die Auffüllung der angegebenen Sammlung abruft. Der Ergebnistyp des Ausdrucks ist „Edm.Double“.</summary>
        <returns>Eine neue „DbFunctionExpression“-Klasse, die den Standardabweichungswert erzeugt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**Auflistung**</exception>
        <exception cref="T:System.ArgumentException">**Auflistung**</exception>
      </Docs>
    </Member>
    <Member MemberName="Substring">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Substring (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression start, System.Data.Common.CommandTrees.DbExpression length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Substring(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression start, class System.Data.Common.CommandTrees.DbExpression length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Substring (stringArgument As DbExpression, start As DbExpression, length As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Substring(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ start, System::Data::Common::CommandTrees::DbExpression ^ length);" />
      <MemberSignature Language="F#" Value="static member Substring : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring (stringArgument, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="start" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="length" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument">Ein Ausdruck, der die Zeichenfolge angibt, aus der die Teilzeichenfolge extrahiert werden soll.</param>
        <param name="start">Ein Ausdruck, der den Startindex angibt, ab dem die Teilzeichenfolge extrahiert werden soll.</param>
        <param name="length">Ein Ausdruck, der die Länge der Teilzeichenfolge angibt.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Substring-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp String und einen ganzzahligen numerischen Ergebnistyp aufweisen müssen. Der Ergebnistyp des Ausdrucks ist „String“.</summary>
        <returns>Ein neues DbFunctionExpression, das die Teilzeichenfolge der Länge **length** von **stringArgument** zurückgibt, die bei **start** beginnt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Teilzeichenfolge ist es erforderlich, dass der Index von angegebenen **starten** werden \<b > auf 1 basierende \< /b >.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">**stringArgument** **start** **length**</exception>
        <exception cref="T:System.ArgumentException">**stringArgument** **start** **length**</exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Sum (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Sum(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Sum(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">Ein Ausdruck, der die Sammlung angibt, aus der die Summe berechnet werden soll.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />-Klasse, die die kanonische „Sum“-Funktion über die angegebene Sammlung aufruft. Der Ergebnistyp des Ausdrucks ist identisch mit dem Elementtyp der Sammlung.</summary>
        <returns>Eine neue „DbFunctionExpression“-Klasse, die die Summe erzeugt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**Auflistung**</exception>
        <exception cref="T:System.ArgumentException">**Auflistung**</exception>
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression ToLower (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression ToLower(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToLower (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ ToLower(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member ToLower : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">Ein Ausdruck, der die Zeichenfolge angibt, die in Kleinbuchstaben konvertiert werden soll.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische ToLower-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp String aufweisen muss. Der Ergebnistyp des Ausdrucks ist ebenfalls „String“.</summary>
        <returns>Ein neues DbFunctionExpression, das den Wert von **stringArgument** in Kleinbuchstaben konvertiert zurückgibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**stringArgument**</exception>
        <exception cref="T:System.ArgumentException">**stringArgument**</exception>
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression ToUpper (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression ToUpper(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToUpper (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ ToUpper(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member ToUpper : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">Ein Ausdruck, der die Zeichenfolge angibt, die in Großbuchstaben konvertiert werden soll.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische ToUpper-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp String aufweisen muss. Der Ergebnistyp des Ausdrucks ist ebenfalls „String“.</summary>
        <returns>Ein neues DbFunctionExpression, das den Wert von **stringArgument** in Großbuchstaben konvertiert zurückgibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**stringArgument**</exception>
        <exception cref="T:System.ArgumentException">**stringArgument**</exception>
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Trim (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Trim(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Trim (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Trim(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member Trim : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">Ein Ausdruck, der die Zeichenfolge angibt, aus der führende und nachgestellte Leerzeichen entfernt werden sollen.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Trim-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp String aufweisen muss. Der Ergebnistyp des Ausdrucks ist ebenfalls „String“.</summary>
        <returns>Ein neues DbFunctionExpression, das den Wert von **stringArgument** nach dem Entfernen führender und nachgestellter Leerzeichen zurückgibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**stringArgument**</exception>
        <exception cref="T:System.ArgumentException">**stringArgument**</exception>
      </Docs>
    </Member>
    <Member MemberName="TrimEnd">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression TrimEnd (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression TrimEnd(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TrimEnd (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ TrimEnd(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member TrimEnd : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">Ein Ausdruck, der die Zeichenfolge angibt, aus der nachgestellte Leerzeichen entfernt werden sollen.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische RTrim-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp String aufweisen muss. Der Ergebnistyp des Ausdrucks ist ebenfalls „String“.</summary>
        <returns>Ein neues DbFunctionExpression, das den Wert von **stringArgument** nach dem Entfernen nachgestellter Leerzeichen zurückgibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**stringArgument**</exception>
        <exception cref="T:System.ArgumentException">**stringArgument**</exception>
      </Docs>
    </Member>
    <Member MemberName="TrimStart">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression TrimStart (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression TrimStart(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TrimStart (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ TrimStart(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member TrimStart : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">Ein Ausdruck, der die Zeichenfolge angibt, aus der führende Leerzeichen entfernt werden sollen.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische LTrim-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp String aufweisen muss. Der Ergebnistyp des Ausdrucks ist ebenfalls „String“.</summary>
        <returns>Ein neues DbFunctionExpression, das den Wert von **stringArgument** nach dem Entfernen führender Leerzeichen zurückgibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**stringArgument**</exception>
        <exception cref="T:System.ArgumentException">**stringArgument**</exception>
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Truncate (this System.Data.Common.CommandTrees.DbExpression value, System.Data.Common.CommandTrees.DbExpression digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Truncate(class System.Data.Common.CommandTrees.DbExpression value, class System.Data.Common.CommandTrees.DbExpression digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Truncate (value As DbExpression, digits As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Truncate(System::Data::Common::CommandTrees::DbExpression ^ value, System::Data::Common::CommandTrees::DbExpression ^ digits);" />
      <MemberSignature Language="F#" Value="static member Truncate : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate (value, digits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="digits" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value">Ein Ausdruck, der den abzuschneidenden numerischen Wert angibt.</param>
        <param name="digits">Ein Ausdruck, der die beim Abschneiden zu verwendende Anzahl gültiger Ziffern angibt.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Truncate-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp Single, Double oder Decimal und einen ganzzahligen Ergebnistyp aufweisen müssen. Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von **value** identisch.</summary>
        <returns>Ein neues DbFunctionExpression, das das angegebene Argument auf den nächsten ganzzahligen Wert mit einer Genauigkeit abschneidet, wie durch **digits** angegeben.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**value** **digits**</exception>
        <exception cref="T:System.ArgumentException">**value** **digits**</exception>
      </Docs>
    </Member>
    <Member MemberName="TruncateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression TruncateTime (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression TruncateTime(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TruncateTime (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ TruncateTime(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member TruncateTime : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue">Ein Ausdruck, der den Wert angibt, für den der Zeitanteil abgeschnitten werden soll.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische TruncateTime-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp DateTime oder DateTimeOffset aufweisen muss. Der Ergebnistyp des Ausdrucks ist identisch mit dem Ergebnistyp von **dateValue**.</summary>
        <returns>Ein neues DbFunctionExpression, das den Wert von **dateValue** mit auf 0 festgelegter Zeit zurückgibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**dateValue**</exception>
        <exception cref="T:System.ArgumentException">**dateValue**</exception>
      </Docs>
    </Member>
    <Member MemberName="Var">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Var (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Var(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Var (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Var(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Var : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">Ein Ausdruck, der die Sammlung angibt, für die die statistische Varianz berechnet werden soll.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />-Klasse, die die kanonische „Var“-Funktion über die Member der angegebenen Sammlung, die nicht NULL sind, abruft. Der Ergebnistyp des Ausdrucks ist „Edm.Double“.</summary>
        <returns>Eine neue „DbFunctionExpression“-Klasse, die den statistischen Varianzwert für die Member der Sammlung, die nicht NULL sind, erstellt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**Auflistung**</exception>
        <exception cref="T:System.ArgumentException">**Auflistung**</exception>
      </Docs>
    </Member>
    <Member MemberName="VarP">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression VarP (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression VarP(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function VarP (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ VarP(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member VarP : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">Ein Ausdruck, der die Sammlung angibt, für die die statistische Varianz berechnet werden soll.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />-Klasse, die die kanonische „VarP“-Funktion über die angegebene Sammlung aufruft. Der Ergebnistyp des Ausdrucks ist „Edm.Double“.</summary>
        <returns>Eine neue Klasse „DbFunctionExpression“, die den statistischen Varianzwert erzeugt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**Auflistung**</exception>
        <exception cref="T:System.ArgumentException">**Auflistung**</exception>
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Year (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Year(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Year (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Year(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member Year : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue">Ein Ausdruck, der den Wert angibt, aus dem das Jahr abgerufen werden soll.</param>
        <summary>Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Year-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp DateTime oder DateTimeOffset aufweisen muss. Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</summary>
        <returns>Ein neues DbFunctionExpression, das das Jahr als Ganzzahlwert aus **dateValue** zurückgibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">**dateValue**</exception>
        <exception cref="T:System.ArgumentException">**dateValue**</exception>
      </Docs>
    </Member>
  </Members>
</Type>