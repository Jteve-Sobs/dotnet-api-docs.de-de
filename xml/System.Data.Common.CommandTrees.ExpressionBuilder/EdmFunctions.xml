<Type Name="EdmFunctions" FullName="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d23b740d732b5e61661f2c7879d7b0c51cc2a1ac" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36694825" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class EdmFunctions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EdmFunctions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" />
  <TypeSignature Language="VB.NET" Value="Public Module EdmFunctions" />
  <TypeSignature Language="C++ CLI" Value="public ref class EdmFunctions abstract sealed" />
  <TypeSignature Language="F#" Value="type EdmFunctions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c3de5-101">Stellt eine API zum Erstellen von <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s bereit, die kanonische EDM-Funktionen aufrufen, und lässt den Zugriff auf die API als Erweiterungsmethoden für den Ausdruckstypen "selbst" zu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c3de5-101">Provides an API to construct <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that invoke canonical EDM functions, and allows that API to be accessed as extension methods on the expression type itself.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Abs (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Abs(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Abs (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Abs(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member Abs : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c3de5-102">Ein Ausdruck, der den numerischen Wert angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-102">An expression that specifies the numeric value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-103">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische Abs-Funktion mit dem angegebenen Argument aufruft, das jeweils einen numerischen Ergebnistyp aufweisen muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-103">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Abs' function with the specified argument, which must each have a numeric result type.</span>
          </span>
          <span data-ttu-id="c3de5-104">Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von **value** identisch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-104">The result type of the expression is the same as the result type of **value**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-105">Eine neue DbFunctionExpression-Klasse, die den absoluten Wert von **value** zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-105">A new DbFunctionExpression that returns the absolute value of **value**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-106">**value**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-106">**value**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-107">**value**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-107">**value**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddDays">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddDays (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddDays(class System.Data.Common.CommandTrees.DbExpression dateValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddDays (dateValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddDays(System::Data::Common::CommandTrees::DbExpression ^ dateValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddDays : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays (dateValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="c3de5-108">Ein Ausdruck, der den Wert angibt, dem **addValue** hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-108">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="c3de5-109">Ein Ausdruck, der die Anzahl der Tage angibt, die **dateValue** hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-109">An expression that specifies the number of days to add to **dateValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-110">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische AddDays-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp DateTime oder DateTimeOffset und einen ganzzahligen Ergebnistyp aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-110">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddDays' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</span>
          </span>
          <span data-ttu-id="c3de5-111">Der Ergebnistyp des Ausdrucks ist identisch mit dem Ergebnistyp von **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-111">The result type of the expression is the same as the result type of **dateValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-112">Eine neue DbFunctionExpression-Klasse, die die Anzahl der Tage, die von **addValue** angegeben wird, zu dem Wert addiert, der von **dateValue** angegeben wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-112">A new DbFunctionExpression that adds the number of days specified by **addValue** to the value specified by **dateValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-113">**dateValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-113">**dateValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-114">**dateValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-114">**dateValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddHours">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddHours (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddHours(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHours (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddHours(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddHours : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="c3de5-115">Ein Ausdruck, der den Wert angibt, dem **addValue** hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-115">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="c3de5-116">Ein Ausdruck, der die Anzahl der Stunden angibt, die **timeValue** hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-116">An expression that specifies the number of hours to add to **timeValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-117">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische AddHours-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp DateTime, DateTimeOffset oder Time und einen ganzzahligen Ergebnistyp aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-117">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddHours' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span>
          </span>
          <span data-ttu-id="c3de5-118">Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von **timeValue** identisch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-118">The result type of the expression is the same as the result type of **timeValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-119">Eine neue DbFunctionExpression-Klasse, die die Anzahl der Stunden, die von **addValue** angegeben wird, zu dem Wert addiert, der von **timeValue** angegeben wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-119">A new DbFunctionExpression that adds the number of hours specified by **addValue** to the value specified by **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-120">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-120">**timeValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-121">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-121">**timeValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddMicroseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMicroseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMicroseconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMicroseconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMicroseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddMicroseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="c3de5-122">Ein Ausdruck, der den Wert angibt, dem **addValue** hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-122">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="c3de5-123">Ein Ausdruck, der die Anzahl der Mikrosekunden angibt, die **timeValue** hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-123">An expression that specifies the number of microseconds to add to **timeValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-124">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische AddMicroseconds-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp DateTime, DateTimeOffset oder Time und einen ganzzahligen Ergebnistyp aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-124">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMicroseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span>
          </span>
          <span data-ttu-id="c3de5-125">Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von **timeValue** identisch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-125">The result type of the expression is the same as the result type of **timeValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-126">Eine neue DbFunctionExpression-Klasse, die die Anzahl der Mikrosekunden, die von **addValue** angegeben wird, zu dem Wert addiert, der von **timeValue** angegeben wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-126">A new DbFunctionExpression that adds the number of microseconds specified by **addValue** to the value specified by **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-127">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-127">**timeValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-128">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-128">**timeValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddMilliseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMilliseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMilliseconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMilliseconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMilliseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddMilliseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="c3de5-129">Ein Ausdruck, der den Wert angibt, dem **addValue** hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-129">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="c3de5-130">Ein Ausdruck, der die Anzahl der Millisekunden angibt, die **timeValue** hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-130">An expression that specifies the number of milliseconds to add to **timeValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-131">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische AddMilliseconds-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp DateTime, DateTimeOffset oder Time und einen ganzzahligen Ergebnistyp aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-131">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMilliseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span>
          </span>
          <span data-ttu-id="c3de5-132">Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von **timeValue** identisch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-132">The result type of the expression is the same as the result type of **timeValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-133">Eine neue DbFunctionExpression-Klasse, die die Anzahl der Millisekunden, die von **addValue** angegeben wird, zu dem Wert addiert, der von **timeValue** angegeben wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-133">A new DbFunctionExpression that adds the number of milliseconds specified by **addValue** to the value specified by **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-134">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-134">**timeValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-135">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-135">**timeValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddMinutes">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMinutes (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMinutes(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMinutes (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMinutes(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddMinutes : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="c3de5-136">Ein Ausdruck, der den Wert angibt, dem **addValue** hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-136">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="c3de5-137">Ein Ausdruck, der die Anzahl der Minuten angibt, die **timeValue** hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-137">An expression that specifies the number of minutes to add to **timeValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-138">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische AddMinutes-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp DateTime, DateTimeOffset oder Time und einen ganzzahligen Ergebnistyp aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-138">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMinutes' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span>
          </span>
          <span data-ttu-id="c3de5-139">Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von **timeValue** identisch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-139">The result type of the expression is the same as the result type of **timeValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-140">Eine neue DbFunctionExpression-Klasse, die die Anzahl der Minuten, die von **addValue** angegeben wird, zu dem Wert addiert, der von **timeValue** angegeben wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-140">A new DbFunctionExpression that adds the number of minutes specified by **addValue** to the value specified by **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-141">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-141">**timeValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-142">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-142">**timeValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMonths (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMonths(class System.Data.Common.CommandTrees.DbExpression dateValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMonths (dateValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMonths(System::Data::Common::CommandTrees::DbExpression ^ dateValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddMonths : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths (dateValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="c3de5-143">Ein Ausdruck, der den Wert angibt, dem **addValue** hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-143">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="c3de5-144">Ein Ausdruck, der die Anzahl der Monate angibt, die **dateValue** hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-144">An expression that specifies the number of months to add to **dateValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-145">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische AddMonths-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp DateTime oder DateTimeOffset und einen ganzzahligen Ergebnistyp aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-145">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMonths' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</span>
          </span>
          <span data-ttu-id="c3de5-146">Der Ergebnistyp des Ausdrucks ist identisch mit dem Ergebnistyp von **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-146">The result type of the expression is the same as the result type of **dateValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-147">Eine neue DbFunctionExpression-Klasse, die die Anzahl der Monate, die von **addValue** angegeben wird, zu dem Wert addiert, der von **dateValue** angegeben wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-147">A new DbFunctionExpression that adds the number of months specified by **addValue** to the value specified by **dateValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-148">**dateValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-148">**dateValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-149">**dateValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-149">**dateValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddNanoseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddNanoseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddNanoseconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddNanoseconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddNanoseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddNanoseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="c3de5-150">Ein Ausdruck, der den Wert angibt, dem **addValue** hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-150">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="c3de5-151">Ein Ausdruck, der die Anzahl der Nanosekunden angibt, die **timeValue** hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-151">An expression that specifies the number of nanoseconds to add to **timeValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-152">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische AddNanoseconds-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp DateTime, DateTimeOffset oder Time und einen ganzzahligen Ergebnistyp aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-152">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddNanoseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span>
          </span>
          <span data-ttu-id="c3de5-153">Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von **timeValue** identisch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-153">The result type of the expression is the same as the result type of **timeValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-154">Eine neue DbFunctionExpression-Klasse, die die Anzahl der Nanosekunden, die von **addValue** angegeben wird, zu dem Wert addiert, der von **timeValue** angegeben wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-154">A new DbFunctionExpression that adds the number of nanoseconds specified by **addValue** to the value specified by **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-155">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-155">**timeValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-156">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-156">**timeValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddSeconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddSeconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddSeconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddSeconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddSeconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddSeconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="c3de5-157">Ein Ausdruck, der den Wert angibt, dem **addValue** hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-157">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="c3de5-158">Ein Ausdruck, der die Anzahl der Sekunden angibt, die **timeValue** hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-158">An expression that specifies the number of seconds to add to **timeValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-159">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische AddSeconds-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp DateTime, DateTimeOffset oder Time und einen ganzzahligen Ergebnistyp aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-159">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddSeconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span>
          </span>
          <span data-ttu-id="c3de5-160">Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von **timeValue** identisch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-160">The result type of the expression is the same as the result type of **timeValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-161">Eine neue DbFunctionExpression-Klasse, die die Anzahl der Sekunden, die von **addValue** angegeben wird, zu dem Wert addiert, der von **timeValue** angegeben wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-161">A new DbFunctionExpression that adds the number of seconds specified by **addValue** to the value specified by **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-162">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-162">**timeValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-163">**timeValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-163">**timeValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddYears (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddYears(class System.Data.Common.CommandTrees.DbExpression dateValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddYears (dateValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddYears(System::Data::Common::CommandTrees::DbExpression ^ dateValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddYears : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears (dateValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="c3de5-164">Ein Ausdruck, der den Wert angibt, dem **addValue** hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-164">An expression that specifies the value to which **addValue**should be added.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="c3de5-165">Ein Ausdruck, der die Anzahl der Jahre angibt, die **dateValue** hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-165">An expression that specifies the number of years to add to **dateValue**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-166">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische AddYears-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp DateTime oder DateTimeOffset und einen ganzzahligen Ergebnistyp aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-166">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddYears' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</span>
          </span>
          <span data-ttu-id="c3de5-167">Der Ergebnistyp des Ausdrucks ist identisch mit dem Ergebnistyp von **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-167">The result type of the expression is the same as the result type of **dateValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-168">Eine neue DbFunctionExpression-Klasse, die die Anzahl der Jahre, die von **addValue** angegeben wird, zu dem Wert addiert, der von **dateValue** angegeben wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-168">A new DbFunctionExpression that adds the number of years specified by **addValue** to the value specified by **dateValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-169">**dateValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-169">**dateValue** **addValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-170">**dateValue** **addValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-170">**dateValue** **addValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Average (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Average(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Average(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Average : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="c3de5-171">Ein Ausdruck, der die Sammlung angibt, aus der der Durchschnittswert abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-171">An expression that specifies the collection from which the average value should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-172">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />-Klasse, die die kanonische „Avg“-Funktion über die angegebene Sammlung aufruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-172">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Avg' function over the specified collection.</span>
          </span>
          <span data-ttu-id="c3de5-173">Der Ergebnistyp des Ausdrucks ist identisch mit dem Elementtyp der Sammlung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-173">The result type of the expression is the same as the element type of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-174">Eine neue „DbFunctionExpression“-Klasse, die den Durchschnittswert erzeugt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-174">A new DbFunctionExpression that produces the average value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-175">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-175">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-176">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-176">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseAnd">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseAnd (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseAnd(class System.Data.Common.CommandTrees.DbExpression value1, class System.Data.Common.CommandTrees.DbExpression value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseAnd (value1 As DbExpression, value2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseAnd(System::Data::Common::CommandTrees::DbExpression ^ value1, System::Data::Common::CommandTrees::DbExpression ^ value2);" />
      <MemberSignature Language="F#" Value="static member BitwiseAnd : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="value2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value1">
          <span data-ttu-id="c3de5-177">Ein Ausdruck, der den ersten Operanden angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-177">An expression that specifies the first operand.</span>
          </span>
        </param>
        <param name="value2">
          <span data-ttu-id="c3de5-178">Ein Ausdruck, der den zweiten Operanden angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-178">An expression that specifies the second operand.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-179">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische BitwiseAnd-Funktion mit den angegebenen Argumenten aufruft, die den gleichen ganzzahligen numerischen Ergebnistyp aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-179">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseAnd' function with the specified arguments, which must have the same integer numeric result type.</span>
          </span>
          <span data-ttu-id="c3de5-180">Der Ergebnistyp des Ausdrucks entspricht dem Typ des Arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-180">The result type of the expression is the same as the type of the arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-181">Eine neue DbFunctionExpression-Klasse, die den Wert zurückgibt, der durch das bitweise AND von **value1** und **value2** ermittelt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-181">A new DbFunctionExpression that returns the value produced by performing the bitwise AND of **value1** and **value2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-182">**value1** **value2**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-182">**value1** **value2**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-183">**value1** **value2**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-183">**value1** **value2**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseNot">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseNot (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseNot(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseNot (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseNot(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member BitwiseNot : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c3de5-184">Ein Ausdruck, der den ersten Operanden angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-184">An expression that specifies the first operand.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-185">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische BitwiseNot-Funktion mit dem angegebenen Argument aufruft, das einen ganzzahligen numerischen Ergebnistyp aufweisen muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-185">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseNot' function with the specified argument, which must have an integer numeric result type.</span>
          </span>
          <span data-ttu-id="c3de5-186">Der Ergebnistyp des Ausdrucks entspricht dem Typ des Arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-186">The result type of the expression is the same as the type of the arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-187">Eine neue DbFunctionExpression-Klasse, die den Wert zurückgibt, der durch das bitweise NOT von **value** ermittelt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-187">A new DbFunctionExpression that returns the value produced by performing the bitwise NOT of **value**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-188">**value**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-188">**value**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-189">**value**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-189">**value**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseOr">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseOr (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseOr(class System.Data.Common.CommandTrees.DbExpression value1, class System.Data.Common.CommandTrees.DbExpression value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseOr (value1 As DbExpression, value2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseOr(System::Data::Common::CommandTrees::DbExpression ^ value1, System::Data::Common::CommandTrees::DbExpression ^ value2);" />
      <MemberSignature Language="F#" Value="static member BitwiseOr : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="value2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value1">
          <span data-ttu-id="c3de5-190">Ein Ausdruck, der den ersten Operanden angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-190">An expression that specifies the first operand.</span>
          </span>
        </param>
        <param name="value2">
          <span data-ttu-id="c3de5-191">Ein Ausdruck, der den zweiten Operanden angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-191">An expression that specifies the second operand.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-192">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische BitwiseOr-Funktion mit den angegebenen Argumenten aufruft, die den gleichen ganzzahligen numerischen Ergebnistyp aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-192">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseOr' function with the specified arguments, which must have the same integer numeric result type.</span>
          </span>
          <span data-ttu-id="c3de5-193">Der Ergebnistyp des Ausdrucks entspricht dem Typ des Arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-193">The result type of the expression is the same as the type of the arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-194">Eine neue DbFunctionExpression-Klasse, die den Wert zurückgibt, der durch das bitweise OR von **value1** und **value2** ermittelt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-194">A new DbFunctionExpression that returns the value produced by performing the bitwise OR of **value1** and **value2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-195">**value1** **value2**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-195">**value1** **value2**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-196">**value1** **value2**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-196">**value1** **value2**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseXor">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseXor (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseXor(class System.Data.Common.CommandTrees.DbExpression value1, class System.Data.Common.CommandTrees.DbExpression value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseXor (value1 As DbExpression, value2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseXor(System::Data::Common::CommandTrees::DbExpression ^ value1, System::Data::Common::CommandTrees::DbExpression ^ value2);" />
      <MemberSignature Language="F#" Value="static member BitwiseXor : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="value2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value1">
          <span data-ttu-id="c3de5-197">Ein Ausdruck, der den ersten Operanden angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-197">An expression that specifies the first operand.</span>
          </span>
        </param>
        <param name="value2">
          <span data-ttu-id="c3de5-198">Ein Ausdruck, der den zweiten Operanden angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-198">An expression that specifies the second operand.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-199">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische BitwiseXor-Funktion mit den angegebenen Argumenten aufruft, die den gleichen ganzzahligen numerischen Ergebnistyp aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-199">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseXor' function with the specified arguments, which must have the same integer numeric result type.</span>
          </span>
          <span data-ttu-id="c3de5-200">Der Ergebnistyp des Ausdrucks entspricht dem Typ des Arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-200">The result type of the expression is the same as the type of the arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-201">Eine neue DbFunctionExpression-Klasse, die den Wert zurückgibt, der durch das bitweise XOR (exklusives OR) von **value1** und **value2** ermittelt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-201">A new DbFunctionExpression that returns the value produced by performing the bitwise XOR (exclusive OR) of **value1** and **value2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-202">**value1** **value2**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-202">**value1** **value2**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-203">**value1** **value2**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-203">**value1** **value2**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Ceiling (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Ceiling(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Ceiling (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Ceiling(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member Ceiling : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c3de5-204">Ein Ausdruck, der den numerischen Wert angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-204">An expression that specifies the numeric value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-205">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische Ceiling-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp Single, Double oder Decimal aufweisen muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-205">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Ceiling' function with the specified argument, which must each have a single, double or decimal result type.</span>
          </span>
          <span data-ttu-id="c3de5-206">Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von **value** identisch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-206">The result type of the expression is the same as the result type of **value**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-207">Eine neue DbFunctionExpression-Klasse, die den kleinsten ganzzahligen Wert, der nicht kleiner als **value** ist, zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-207">A new DbFunctionExpression that returns the smallest integer value not less than than **value**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-208">**value**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-208">**value**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-209">**value**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-209">**value**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Concat (this System.Data.Common.CommandTrees.DbExpression string1, System.Data.Common.CommandTrees.DbExpression string2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Concat(class System.Data.Common.CommandTrees.DbExpression string1, class System.Data.Common.CommandTrees.DbExpression string2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Concat (string1 As DbExpression, string2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Concat(System::Data::Common::CommandTrees::DbExpression ^ string1, System::Data::Common::CommandTrees::DbExpression ^ string2);" />
      <MemberSignature Language="F#" Value="static member Concat : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat (string1, string2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="string2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="string1">
          <span data-ttu-id="c3de5-210">Ein Ausdruck, der die Zeichenfolge angibt, die als erstes Element in der verketteten Ergebniszeichenfolge angezeigt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-210">An expression that specifies the string that should appear first in the concatenated result string.</span>
          </span>
        </param>
        <param name="string2">
          <span data-ttu-id="c3de5-211">Ein Ausdruck, der die Zeichenfolge angibt, die als zweites Element in der verketteten Ergebniszeichenfolge angezeigt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-211">An expression that specifies the string that should appear second in the concatenated result string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-212">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische Concat-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp String aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-212">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Concat' function with the specified arguments, which must each have a string result type.</span>
          </span>
          <span data-ttu-id="c3de5-213">Der Ergebnistyp des Ausdrucks ist „String“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-213">The result type of the expression is string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-214">Ein neues DbFunctionExpression, das die verkettete Zeichenfolge produziert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-214">A new DbFunctionExpression that produces the concatenated string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-215">**string1** **string2**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-215">**string1** **string2**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-216">**string1** **string2**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-216">**string1** **string2**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Contains (this System.Data.Common.CommandTrees.DbExpression searchedString, System.Data.Common.CommandTrees.DbExpression searchedForString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Contains(class System.Data.Common.CommandTrees.DbExpression searchedString, class System.Data.Common.CommandTrees.DbExpression searchedForString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains (searchedString As DbExpression, searchedForString As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Contains(System::Data::Common::CommandTrees::DbExpression ^ searchedString, System::Data::Common::CommandTrees::DbExpression ^ searchedForString);" />
      <MemberSignature Language="F#" Value="static member Contains : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains (searchedString, searchedForString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchedString" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="searchedForString" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="searchedString">
          <span data-ttu-id="c3de5-217">Ein Ausdruck, der die Zeichenfolge angibt, in der jedes Vorkommen von **searchedForString** gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-217">An expression that specifies the string to search for any occurence of **searchedForString**.</span>
          </span>
        </param>
        <param name="searchedForString">
          <span data-ttu-id="c3de5-218">Ein Ausdruck, der die Zeichenfolge angibt, die in **searchedString** gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-218">An expression that specifies the string to search for in **searchedString**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-219">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Contains-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp String aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-219">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Contains' function with the specified arguments, which must each have a string result type.</span>
          </span>
          <span data-ttu-id="c3de5-220">Der Ergebnistyp des Ausdrucks ist Boolean.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-220">The result type of the expression is Boolean.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-221">Eine neue DbFunctionExpression-Klasse, die einen booleschen Wert zurückgibt, der angibt, ob **searchedForString** innerhalb von **searchedString** auftritt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-221">A new DbFunctionExpression that returns a Boolean value indicating whether or not **searchedForString** occurs within **searchedString**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-222">**searchedString** **searchedForString**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-222">**searchedString** **searchedForString**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-223">**searchedString** **searchedForString**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-223">**searchedString** **searchedForString**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Count (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Count(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Count (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Count(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Count : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="c3de5-224">Ein Ausdruck, der die Sammlung angibt, über die der Anzahlwert berechnet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-224">An expression that specifies the collection over which the count value should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-225">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />-Klasse, die die kanonische „Count“-Funktion über die angegebene Sammlung aufruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-225">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Count' function over the specified collection.</span>
          </span>
          <span data-ttu-id="c3de5-226">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-226">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-227">Eine neue Klasse „DbFunctionExpression“, die den Anzahlwert erzeugt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-227">A new DbFunctionExpression that produces the count value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-228">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-228">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-229">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-229">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTime (System.Data.Common.CommandTrees.DbExpression year, System.Data.Common.CommandTrees.DbExpression month, System.Data.Common.CommandTrees.DbExpression day, System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTime(class System.Data.Common.CommandTrees.DbExpression year, class System.Data.Common.CommandTrees.DbExpression month, class System.Data.Common.CommandTrees.DbExpression day, class System.Data.Common.CommandTrees.DbExpression hour, class System.Data.Common.CommandTrees.DbExpression minute, class System.Data.Common.CommandTrees.DbExpression second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDateTime (year As DbExpression, month As DbExpression, day As DbExpression, hour As DbExpression, minute As DbExpression, second As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CreateDateTime(System::Data::Common::CommandTrees::DbExpression ^ year, System::Data::Common::CommandTrees::DbExpression ^ month, System::Data::Common::CommandTrees::DbExpression ^ day, System::Data::Common::CommandTrees::DbExpression ^ hour, System::Data::Common::CommandTrees::DbExpression ^ minute, System::Data::Common::CommandTrees::DbExpression ^ second);" />
      <MemberSignature Language="F#" Value="static member CreateDateTime : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime (year, month, day, hour, minute, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="month" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="day" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="hour" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="minute" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="second" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="c3de5-230">Ein Ausdruck, der den Jahreswert für die neue DateTime-Instanz bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-230">An expression that provides the year value for the new DateTime instance.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="c3de5-231">Ein Ausdruck, der den Wert des Monatswertes für die neue DateTime-Instanz bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-231">An expression that provides the month value for the new DateTime instance.</span>
          </span>
        </param>
        <param name="day">
          <span data-ttu-id="c3de5-232">Ein Ausdruck, der den Wert des Tageswertes für die neue DateTime-Instanz bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-232">An expression that provides the day value for the new DateTime instance.</span>
          </span>
        </param>
        <param name="hour">
          <span data-ttu-id="c3de5-233">Ein Ausdruck, der den Wert des Stundenwertes für die neue DateTime-Instanz bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-233">An expression that provides the hour value for the new DateTime instance.</span>
          </span>
        </param>
        <param name="minute">
          <span data-ttu-id="c3de5-234">Ein Ausdruck, der den Wert des Minutenwertes für die neue DateTime-Instanz bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-234">An expression that provides the minute value for the new DateTime instance.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="c3de5-235">Ein Ausdruck, der den Sekundenwert für die neue DateTime-Instanz bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-235">An expression that provides the second value for the new DateTime instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-236">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische CreateDateTime-Funktion mit den angegebenen Argumenten aufruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-236">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CreateDateTime' function with the specified arguments.</span>
          </span>
          <span data-ttu-id="c3de5-237">**second** muss den Ergebnistyp „Edm.Double“ aufweisen, und alle anderen Argumente müssen den Ergebnistyp „Edm.Int32“ aufweisen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-237">**second** must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</span>
          </span>
          <span data-ttu-id="c3de5-238">Der Ergebnistyp des Ausdrucks ist Edm.DateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-238">The result type of the expression is Edm.DateTime.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-239">Ein neues DbFunctionExpression das ein neues DateTime zurückgibt, basierend auf den angegebenen Werten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-239">A new DbFunctionExpression that returns a new DateTime based on the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-240">**year** **month** **day** **hour** **minute** **second**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-240">**year** **month** **day** **hour** **minute** **second**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-241">**year** **month** **day** **hour** **minute** **second**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-241">**year** **month** **day** **hour** **minute** **second**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDateTimeOffset">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTimeOffset (System.Data.Common.CommandTrees.DbExpression year, System.Data.Common.CommandTrees.DbExpression month, System.Data.Common.CommandTrees.DbExpression day, System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second, System.Data.Common.CommandTrees.DbExpression timeZoneOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTimeOffset(class System.Data.Common.CommandTrees.DbExpression year, class System.Data.Common.CommandTrees.DbExpression month, class System.Data.Common.CommandTrees.DbExpression day, class System.Data.Common.CommandTrees.DbExpression hour, class System.Data.Common.CommandTrees.DbExpression minute, class System.Data.Common.CommandTrees.DbExpression second, class System.Data.Common.CommandTrees.DbExpression timeZoneOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDateTimeOffset (year As DbExpression, month As DbExpression, day As DbExpression, hour As DbExpression, minute As DbExpression, second As DbExpression, timeZoneOffset As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CreateDateTimeOffset(System::Data::Common::CommandTrees::DbExpression ^ year, System::Data::Common::CommandTrees::DbExpression ^ month, System::Data::Common::CommandTrees::DbExpression ^ day, System::Data::Common::CommandTrees::DbExpression ^ hour, System::Data::Common::CommandTrees::DbExpression ^ minute, System::Data::Common::CommandTrees::DbExpression ^ second, System::Data::Common::CommandTrees::DbExpression ^ timeZoneOffset);" />
      <MemberSignature Language="F#" Value="static member CreateDateTimeOffset : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset (year, month, day, hour, minute, second, timeZoneOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="month" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="day" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="hour" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="minute" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="second" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="timeZoneOffset" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="c3de5-242">Ein Ausdruck, der den Jahreswert für die neue DateTimeOffset-Instanz bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-242">An expression that provides the year value for the new DateTimeOffset instance.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="c3de5-243">Ein Ausdruck, der den Wert des Monatswertes für die neue DateTimeOffset-Instanz bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-243">An expression that provides the month value for the new DateTimeOffset instance.</span>
          </span>
        </param>
        <param name="day">
          <span data-ttu-id="c3de5-244">Ein Ausdruck, der den Wert des Tageswertes für die neue DateTimeOffset-Instanz bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-244">An expression that provides the day value for the new DateTimeOffset instance.</span>
          </span>
        </param>
        <param name="hour">
          <span data-ttu-id="c3de5-245">Ein Ausdruck, der den Wert des Stundenwertes für die neue DateTimeOffset-Instanz bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-245">An expression that provides the hour value for the new DateTimeOffset instance.</span>
          </span>
        </param>
        <param name="minute">
          <span data-ttu-id="c3de5-246">Ein Ausdruck, der den Wert des Minutenwertes für die neue DateTimeOffset-Instanz bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-246">An expression that provides the minute value for the new DateTimeOffset instance.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="c3de5-247">Ein Ausdruck, der den Sekundenwert für die neue DateTimeOffset-Instanz bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-247">An expression that provides the second value for the new DateTimeOffset instance.</span>
          </span>
        </param>
        <param name="timeZoneOffset">
          <span data-ttu-id="c3de5-248">Ein Ausdruck, der die Anzahl der Minuten im Zeitzonenoffsetwert für die neue DateTimeOffset-Instanz bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-248">An expression that provides the number of minutes in the time zone offset value for the new DateTimeOffset instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-249">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische CreateDateTimeOffset-Funktion mit den angegebenen Argumenten aufruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-249">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CreateDateTimeOffset' function with the specified arguments.</span>
          </span>
          <span data-ttu-id="c3de5-250">**second** muss den Ergebnistyp „Edm.Double“ aufweisen, und alle anderen Argumente müssen den Ergebnistyp „Edm.Int32“ aufweisen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-250">**second** must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</span>
          </span>
          <span data-ttu-id="c3de5-251">Der Ergebnistyp des Ausdrucks ist Edm.DateTimeOffset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-251">The result type of the expression is Edm.DateTimeOffset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-252">Ein neues DbFunctionExpression das ein neues DateTimeOffset zurückgibt, basierend auf den angegebenen Werten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-252">A new DbFunctionExpression that returns a new DateTimeOffset based on the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-253">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-253">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-254">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-254">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CreateTime (System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CreateTime(class System.Data.Common.CommandTrees.DbExpression hour, class System.Data.Common.CommandTrees.DbExpression minute, class System.Data.Common.CommandTrees.DbExpression second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTime (hour As DbExpression, minute As DbExpression, second As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CreateTime(System::Data::Common::CommandTrees::DbExpression ^ hour, System::Data::Common::CommandTrees::DbExpression ^ minute, System::Data::Common::CommandTrees::DbExpression ^ second);" />
      <MemberSignature Language="F#" Value="static member CreateTime : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime (hour, minute, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hour" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="minute" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="second" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="hour">
          <span data-ttu-id="c3de5-255">Ein Ausdruck, der den Wert des Stundenwertes für die neue DateTime-Instanz bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-255">An expression that provides the hour value for the new DateTime instance.</span>
          </span>
        </param>
        <param name="minute">
          <span data-ttu-id="c3de5-256">Ein Ausdruck, der den Wert des Minutenwertes für die neue DateTime-Instanz bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-256">An expression that provides the minute value for the new DateTime instance.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="c3de5-257">Ein Ausdruck, der den Sekundenwert für die neue DateTime-Instanz bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-257">An expression that provides the second value for the new DateTime instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-258">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische CreateTime-Funktion mit den angegebenen Argumenten aufruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-258">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CreateTime' function with the specified arguments.</span>
          </span>
          <span data-ttu-id="c3de5-259">**second** muss den Ergebnistyp „Edm.Double“ aufweisen, und alle anderen Argumente müssen den Ergebnistyp „Edm.Int32“ aufweisen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-259">**second** must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</span>
          </span>
          <span data-ttu-id="c3de5-260">Der Ergebnistyp des Ausdrucks ist Edm.Time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-260">The result type of the expression is Edm.Time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-261">Ein neues DbFunctionExpression das ein neues Time zurückgibt, basierend auf den angegebenen Werten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-261">A new DbFunctionExpression that returns a new Time based on the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-262">**hour** **minute** **second**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-262">**hour** **minute** **second**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-263">**hour** **minute** **second**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-263">**hour** **minute** **second**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentDateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Function CurrentDateTime () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CurrentDateTime();" />
      <MemberSignature Language="F#" Value="static member CurrentDateTime : unit -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c3de5-264">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische CurrentDateTime-Funktion aufruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-264">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CurrentDateTime' function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-265">Ein neues DbFunctionExpression, das das aktuelle Datum und die aktuelle Uhrzeit als Edm.DateTime-Instanz zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-265">A new DbFunctionExpression that returns the current date and time as an Edm.DateTime instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDateTimeOffset">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTimeOffset ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTimeOffset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset" />
      <MemberSignature Language="VB.NET" Value="Public Function CurrentDateTimeOffset () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CurrentDateTimeOffset();" />
      <MemberSignature Language="F#" Value="static member CurrentDateTimeOffset : unit -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c3de5-266">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische CurrentDateTimeOffset-Funktion aufruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-266">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CurrentDateTimeOffset' function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-267">Ein neues DbFunctionExpression, das das aktuelle Datum und die aktuelle Uhrzeit als Edm.DateTimeOffset-Instanz zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-267">A new DbFunctionExpression that returns the current date and time as an Edm.DateTimeOffset instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentUtcDateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentUtcDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CurrentUtcDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Function CurrentUtcDateTime () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CurrentUtcDateTime();" />
      <MemberSignature Language="F#" Value="static member CurrentUtcDateTime : unit -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c3de5-268">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische CurrentUtcDateTime-Funktion aufruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-268">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CurrentUtcDateTime' function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-269">Ein neues DbFunctionExpression, das das aktuelle UTC-Datum und die aktuelle Uhrzeit als Edm.DateTime-Instanz zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-269">A new DbFunctionExpression that returns the current UTC date and time as an Edm.DateTime instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Day (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Day(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Day (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Day(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member Day : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="c3de5-270">Ein Ausdruck, der den Wert angibt, aus dem der Tag abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-270">An expression that specifies the value from which the day should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-271">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Day-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp DateTime oder DateTimeOffset aufweisen muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-271">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Day' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="c3de5-272">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-272">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-273">Eine neue DbFunctionExpression-Klasse, die den Tag als ganzzahligen Wert aus **dateValue** zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-273">A new DbFunctionExpression that returns the integer day value from **dateValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-274">**dateValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-274">**dateValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-275">**dateValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-275">**dateValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DayOfYear">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DayOfYear (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DayOfYear(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DayOfYear (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DayOfYear(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member DayOfYear : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="c3de5-276">Ein Ausdruck, der den Wert angibt, aus dem der Tag des Jahres abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-276">An expression that specifies the value from which the day within the year should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-277">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische DayOfYear-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp DateTime oder DateTimeOffset aufweisen muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-277">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DayOfYear' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="c3de5-278">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-278">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-279">Eine neue DbFunctionExpression-Klasse, die den Tag des Jahres als ganzzahligen Wert aus **dateValue** zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-279">A new DbFunctionExpression that returns the integer day of year value from **dateValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-280">**dateValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-280">**dateValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-281">**dateValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-281">**dateValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DiffDays">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffDays (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffDays(class System.Data.Common.CommandTrees.DbExpression dateValue1, class System.Data.Common.CommandTrees.DbExpression dateValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffDays (dateValue1 As DbExpression, dateValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffDays(System::Data::Common::CommandTrees::DbExpression ^ dateValue1, System::Data::Common::CommandTrees::DbExpression ^ dateValue2);" />
      <MemberSignature Language="F#" Value="static member DiffDays : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays (dateValue1, dateValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="dateValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue1">
          <span data-ttu-id="c3de5-282">Ein Ausdruck, der das erste Datumswertargument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-282">An expression that specifies the first date value argument.</span>
          </span>
        </param>
        <param name="dateValue2">
          <span data-ttu-id="c3de5-283">Ein Ausdruck, der das zweite Datumswertargument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-283">An expression that specifies the second date value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-284">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische DiffDays-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp DateTime oder DateTimeOffset aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-284">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffDays' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="c3de5-285">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-285">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-286">Eine neue DbFunctionExpression-Klasse, die die Anzahl der Tage zurückgibt, die den Unterschied zwischen **dateValue1** und **dateValue2** ausmachen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-286">A new DbFunctionExpression that returns the number of days that is the difference between **dateValue1** and **dateValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffHours">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffHours (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffHours(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffHours (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffHours(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffHours : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1">
          <span data-ttu-id="c3de5-287">Ein Ausdruck, der das erste Uhrzeitwertargument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-287">An expression that specifies the first time value argument.</span>
          </span>
        </param>
        <param name="timeValue2">
          <span data-ttu-id="c3de5-288">Ein Ausdruck, der das zweite Zeitwertargument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-288">An expression that specifies the second time value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-289">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische DiffHours-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp DateTime, DateTimeOffset oder Time aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-289">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffHours' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="c3de5-290">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-290">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-291">Eine neue DbFunctionExpression-Klasse, die die Anzahl der Stunden zurückgibt, die den Unterschied zwischen **timeValue1** und **timeValue2** ausmachen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-291">A new DbFunctionExpression that returns the number of hours that is the difference between **timeValue1** and **timeValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMicroseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMicroseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMicroseconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMicroseconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMicroseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffMicroseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1">
          <span data-ttu-id="c3de5-292">Ein Ausdruck, der das erste Uhrzeitwertargument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-292">An expression that specifies the first time value argument.</span>
          </span>
        </param>
        <param name="timeValue2">
          <span data-ttu-id="c3de5-293">Ein Ausdruck, der das zweite Zeitwertargument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-293">An expression that specifies the second time value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-294">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische DiffMicroseconds-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp DateTime, DateTimeOffset oder Time aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-294">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMicroseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="c3de5-295">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-295">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-296">Eine neue DbFunctionExpression-Klasse, die die Anzahl der Mikrosekunden zurückgibt, die den Unterschied zwischen **timeValue1** und **timeValue2** ausmachen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-296">A new DbFunctionExpression that returns the number of microseconds that is the difference between **timeValue1** and **timeValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMilliseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMilliseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMilliseconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMilliseconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMilliseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffMilliseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1">
          <span data-ttu-id="c3de5-297">Ein Ausdruck, der das erste Uhrzeitwertargument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-297">An expression that specifies the first time value argument.</span>
          </span>
        </param>
        <param name="timeValue2">
          <span data-ttu-id="c3de5-298">Ein Ausdruck, der das zweite Zeitwertargument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-298">An expression that specifies the second time value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-299">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische DiffMilliseconds-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp DateTime, DateTimeOffset oder Time aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-299">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMilliseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="c3de5-300">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-300">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-301">Eine neue DbFunctionExpression-Klasse, die die Anzahl der Millisekunden zurückgibt, die den Unterschied zwischen **timeValue1** und **timeValue2** ausmachen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-301">A new DbFunctionExpression that returns the number of milliseconds that is the difference between **timeValue1** and **timeValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMinutes">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMinutes (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMinutes(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMinutes (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMinutes(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffMinutes : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1">
          <span data-ttu-id="c3de5-302">Ein Ausdruck, der das erste Uhrzeitwertargument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-302">An expression that specifies the first time value argument.</span>
          </span>
        </param>
        <param name="timeValue2">
          <span data-ttu-id="c3de5-303">Ein Ausdruck, der das zweite Zeitwertargument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-303">An expression that specifies the second time value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-304">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische DiffMinutes-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp DateTime, DateTimeOffset oder Time aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-304">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMinutes' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="c3de5-305">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-305">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-306">Eine neue DbFunctionExpression-Klasse, die die Anzahl der Minuten zurückgibt, die den Unterschied zwischen **timeValue1** und **timeValue2** ausmachen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-306">A new DbFunctionExpression that returns the number of minutes that is the difference between **timeValue1** and **timeValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMonths">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMonths (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMonths(class System.Data.Common.CommandTrees.DbExpression dateValue1, class System.Data.Common.CommandTrees.DbExpression dateValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMonths (dateValue1 As DbExpression, dateValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMonths(System::Data::Common::CommandTrees::DbExpression ^ dateValue1, System::Data::Common::CommandTrees::DbExpression ^ dateValue2);" />
      <MemberSignature Language="F#" Value="static member DiffMonths : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths (dateValue1, dateValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="dateValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue1">
          <span data-ttu-id="c3de5-307">Ein Ausdruck, der das erste Datumswertargument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-307">An expression that specifies the first date value argument.</span>
          </span>
        </param>
        <param name="dateValue2">
          <span data-ttu-id="c3de5-308">Ein Ausdruck, der das zweite Datumswertargument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-308">An expression that specifies the second date value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-309">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische DiffMonths-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp DateTime oder DateTimeOffset aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-309">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMonths' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="c3de5-310">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-310">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-311">Eine neue DbFunctionExpression-Klasse, die die Anzahl der Monate zurückgibt, die den Unterschied zwischen **dateValue1** und **dateValue2** ausmachen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-311">A new DbFunctionExpression that returns the number of months that is the difference between **dateValue1** and **dateValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffNanoseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffNanoseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffNanoseconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffNanoseconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffNanoseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffNanoseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1">
          <span data-ttu-id="c3de5-312">Ein Ausdruck, der das erste Uhrzeitwertargument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-312">An expression that specifies the first time value argument.</span>
          </span>
        </param>
        <param name="timeValue2">
          <span data-ttu-id="c3de5-313">Ein Ausdruck, der das zweite Zeitwertargument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-313">An expression that specifies the second time value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-314">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische DiffNanoseconds-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp DateTime, DateTimeOffset oder Time aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-314">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffNanoseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="c3de5-315">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-315">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-316">Eine neue DbFunctionExpression-Klasse, die die Anzahl der Nanosekunden zurückgibt, die den Unterschied zwischen **timeValue1** und **timeValue2** ausmachen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-316">A new DbFunctionExpression that returns the number of nanoseconds that is the difference between **timeValue1** and **timeValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffSeconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffSeconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffSeconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffSeconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffSeconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffSeconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1">
          <span data-ttu-id="c3de5-317">Ein Ausdruck, der das erste Uhrzeitwertargument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-317">An expression that specifies the first time value argument.</span>
          </span>
        </param>
        <param name="timeValue2">
          <span data-ttu-id="c3de5-318">Ein Ausdruck, der das zweite Zeitwertargument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-318">An expression that specifies the second time value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-319">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische DiffSeconds-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp DateTime, DateTimeOffset oder Time aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-319">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffSeconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="c3de5-320">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-320">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-321">Eine neue DbFunctionExpression-Klasse, die die Anzahl der Sekunden zurückgibt, die den Unterschied zwischen **timeValue1** und **timeValue2** ausmachen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-321">A new DbFunctionExpression that returns the number of seconds that is the difference between **timeValue1** and **timeValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffYears">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffYears (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffYears(class System.Data.Common.CommandTrees.DbExpression dateValue1, class System.Data.Common.CommandTrees.DbExpression dateValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffYears (dateValue1 As DbExpression, dateValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffYears(System::Data::Common::CommandTrees::DbExpression ^ dateValue1, System::Data::Common::CommandTrees::DbExpression ^ dateValue2);" />
      <MemberSignature Language="F#" Value="static member DiffYears : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears (dateValue1, dateValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="dateValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue1">
          <span data-ttu-id="c3de5-322">Ein Ausdruck, der das erste Datumswertargument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-322">An expression that specifies the first date value argument.</span>
          </span>
        </param>
        <param name="dateValue2">
          <span data-ttu-id="c3de5-323">Ein Ausdruck, der das zweite Datumswertargument angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-323">An expression that specifies the second date value argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-324">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische DiffYears-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp DateTime oder DateTimeOffset aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-324">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffYears' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="c3de5-325">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-325">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-326">Eine neue DbFunctionExpression-Klasse, die die Anzahl der Jahre zurückgibt, die den Unterschied zwischen **dateValue1** und **dateValue2** ausmachen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-326">A new DbFunctionExpression that returns the number of years that is the difference between **dateValue1** and **dateValue2**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndsWith">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression EndsWith (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression suffix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression EndsWith(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression suffix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EndsWith (stringArgument As DbExpression, suffix As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ EndsWith(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ suffix);" />
      <MemberSignature Language="F#" Value="static member EndsWith : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith (stringArgument, suffix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="suffix" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="c3de5-327">Ein Ausdruck, der die Zeichenfolge angibt, die am Ende nach der Zeichenfolge **suffix** durchsucht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-327">An expression that specifies the string that is searched at the end for string **suffix**.</span>
          </span>
        </param>
        <param name="suffix">
          <span data-ttu-id="c3de5-328">Ein Ausdruck, der die Zielzeichenfolge angibt, nach der am Ende von **stringArgument** gesucht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-328">An expression that specifies the target string that is searched for at the end of **stringArgument**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-329">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische EndsWith-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp String aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-329">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'EndsWith' function with the specified arguments, which must each have a string result type.</span>
          </span>
          <span data-ttu-id="c3de5-330">Der Ergebnistyp des Ausdrucks ist Boolean.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-330">The result type of the expression is Boolean.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-331">Eine neue DbFunctionExpression-Klasse, die einen booleschen Wert zurückgibt, der angibt, ob **stringArgument** auf **suffix** endet oder nicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-331">A new DbFunctionExpression that returns a Boolean value indicating whether or not **stringArgument** ends with **suffix**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Floor (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Floor(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Floor (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Floor(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member Floor : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c3de5-332">Ein Ausdruck, der den numerischen Wert angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-332">An expression that specifies the numeric value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-333">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Floor-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp Single, Double oder Decimal aufweisen muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-333">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Floor' function with the specified argument, which must each have a single, double or decimal result type.</span>
          </span>
          <span data-ttu-id="c3de5-334">Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von **value** identisch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-334">The result type of the expression is the same as the result type of **value**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-335">Eine neue DbFunctionExpression-Klasse, die den größten ganzzahligen Wert zurückgibt, der nicht größer als **value** ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-335">A new DbFunctionExpression that returns the largest integer value not greater than **value**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-336">**value**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-336">**value**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-337">**value**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-337">**value**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTotalOffsetMinutes">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression GetTotalOffsetMinutes (this System.Data.Common.CommandTrees.DbExpression dateTimeOffsetArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression GetTotalOffsetMinutes(class System.Data.Common.CommandTrees.DbExpression dateTimeOffsetArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTotalOffsetMinutes (dateTimeOffsetArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ GetTotalOffsetMinutes(System::Data::Common::CommandTrees::DbExpression ^ dateTimeOffsetArgument);" />
      <MemberSignature Language="F#" Value="static member GetTotalOffsetMinutes : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes dateTimeOffsetArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffsetArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffsetArgument">
          <span data-ttu-id="c3de5-338">Ein Ausdruck, der den DateTimeOffset-Wert angibt, aus dem der Minutenoffset von GMT abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-338">An expression that specifies the DateTimeOffset value from which the minute offset from GMT should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-339">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische GetTotalOffsetMinutes-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp DateTimeOffset aufweisen muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-339">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GetTotalOffsetMinutes' function with the specified argument, which must have a DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="c3de5-340">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-340">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-341">Eine neue DbFunctionExpression-Klasse, die die Anzahl der Minuten zurückgibt, um die **dateTimeOffsetArgument** zu GMT versetzt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-341">A new DbFunctionExpression that returns the number of minutes **dateTimeOffsetArgument** is offset from GMT.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-342">**dateTimeOffsetArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-342">**dateTimeOffsetArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-343">**dateTimeOffsetArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-343">**dateTimeOffsetArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Hour (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Hour(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Hour (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Hour(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberSignature Language="F#" Value="static member Hour : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour timeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="c3de5-344">Ein Ausdruck, der den Wert angibt, aus dem die Stunde abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-344">An expression that specifies the value from which the hour should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-345">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Hour-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp DateTime, DateTimeOffset oder „Time“ aufweisen muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-345">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Hour' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="c3de5-346">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-346">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-347">Eine neue DbFunctionExpression-Klasse, die die Stunde als ganzzahligen Wert aus **timeValue** zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-347">A new DbFunctionExpression that returns the integer hour value from **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-348">**timeValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-348">**timeValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-349">**timeValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-349">**timeValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression IndexOf (this System.Data.Common.CommandTrees.DbExpression searchString, System.Data.Common.CommandTrees.DbExpression stringToFind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression IndexOf(class System.Data.Common.CommandTrees.DbExpression searchString, class System.Data.Common.CommandTrees.DbExpression stringToFind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf (searchString As DbExpression, stringToFind As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ IndexOf(System::Data::Common::CommandTrees::DbExpression ^ searchString, System::Data::Common::CommandTrees::DbExpression ^ stringToFind);" />
      <MemberSignature Language="F#" Value="static member IndexOf : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf (searchString, stringToFind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchString" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="stringToFind" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="searchString">
          <span data-ttu-id="c3de5-350">Ein Ausdruck, der die Zeichenfolge angibt, die in **stringToFind** gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-350">An expression that specifies the string to search for **stringToFind**.</span>
          </span>
        </param>
        <param name="stringToFind">
          <span data-ttu-id="c3de5-351">Ein Ausdruck, der die Zeichenfolge angibt, die in **searchString** gesucht werden soll, sollte überprüft werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-351">An expression that specifies the string to locate within **searchString** should be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-352">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische IndexOf-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp String aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-352">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'IndexOf' function with the specified arguments, which must each have a string result type.</span>
          </span>
          <span data-ttu-id="c3de5-353">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-353">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-354">Eine neue DbFunctionExpression-Klasse, die den ersten Index aus **stringToFind** in **searchString** zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-354">A new DbFunctionExpression that returns the first index of **stringToFind** in **searchString**.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3de5-355">Der Index von IndexOf zurückgegebene ist \<b > auf 1 basierende \< /b >.</span><span class="sxs-lookup"><span data-stu-id="c3de5-355">The index returned by IndexOf is \<b>1-based\</b>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-356">**searchString** **stringToFind**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-356">**searchString** **stringToFind**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-357">**searchString** **stringToFind**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-357">**searchString** **stringToFind**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Left (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Left(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Left (stringArgument As DbExpression, length As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Left(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ length);" />
      <MemberSignature Language="F#" Value="static member Left : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left (stringArgument, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="length" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="c3de5-358">Ein Ausdruck, der die Zeichenfolge angibt, aus der die äußerste linke Teilzeichenfolge extrahiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-358">An expression that specifies the string from which to extract the leftmost substring.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="c3de5-359">Ein Ausdruck, der die Länge der äußersten linken aus **stringArgument** zu extrahierenden Teilzeichenfolge angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-359">An expression that specifies the length of the leftmost substring to extract from **stringArgument**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-360">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Left-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp String und einen ganzzahligen numerischen Ergebnistyp aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-360">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Left' function with the specified arguments, which must have a string and integer numeric result type.</span>
          </span>
          <span data-ttu-id="c3de5-361">Der Ergebnistyp des Ausdrucks ist „String“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-361">The result type of the expression is string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-362">Eine neue DbFunctionExpression-Klasse, die die Länge der äußersten linken Teilzeichenfolge der Länge **length** aus **stringArgument** zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-362">A new DbFunctionExpression that returns the leftmost substring of length **length** from **stringArgument**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-363">**stringArgument** **length**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-363">**stringArgument** **length**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-364">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-364">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Length (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Length(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Length (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Length(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member Length : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="c3de5-365">Ein Ausdruck, der die Zeichenfolge angibt, für die die Länge berechnet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-365">An expression that specifies the string for which the length should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-366">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische Length-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp String aufweisen muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-366">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Length' function with the specified argument, which must have a string result type.</span>
          </span>
          <span data-ttu-id="c3de5-367">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-367">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-368">Eine neue DbFunctionExpression-Klasse, die die Länge von **stringArgument** zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-368">A new DbFunctionExpression that returns the length of **stringArgument**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-369">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-369">**stringArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-370">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-370">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LongCount">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression LongCount (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression LongCount(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LongCount (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ LongCount(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member LongCount : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="c3de5-371">Ein Ausdruck, der die Sammlung angibt, über die der Anzahlwert berechnet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-371">An expression that specifies the collection over which the count value should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-372">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische „BigCount“-Funktion über die angegebene Sammlung aufruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-372">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BigCount' function over the specified collection.</span>
          </span>
          <span data-ttu-id="c3de5-373">Der Ergebnistyp des Ausdrucks ist „Edm.Int64“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-373">The result type of the expression is Edm.Int64.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-374">Eine neue Klasse „DbFunctionExpression“, die den Anzahlwert erzeugt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-374">A new DbFunctionExpression that produces the count value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-375">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-375">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-376">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-376">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Max (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Max(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Max(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Max : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="c3de5-377">Ein Ausdruck, der die Sammlung angibt, aus der der Maximalwert abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-377">An expression that specifies the collection from which the maximum value should be retrieved</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-378">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />-Klasse, die die kanonische „Max“-Funktion über die angegebene Sammlung aufruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-378">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Max' function over the specified collection.</span>
          </span>
          <span data-ttu-id="c3de5-379">Der Ergebnistyp des Ausdrucks ist identisch mit dem Elementtyp der Sammlung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-379">The result type of the expression is the same as the element type of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-380">Eine neue „DbFunctionExpression“-Klasse, die den Maximalwert erzeugt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-380">A new DbFunctionExpression that produces the maximum value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-381">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-381">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-382">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-382">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Millisecond">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Millisecond (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Millisecond(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Millisecond (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Millisecond(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberSignature Language="F#" Value="static member Millisecond : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond timeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="c3de5-383">Ein Ausdruck, der den Wert angibt, aus dem die Millisekunde abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-383">An expression that specifies the value from which the millisecond should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-384">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische Millisecond-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp DateTime, DateTimeOffset oder Time aufweisen muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-384">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Millisecond' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="c3de5-385">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-385">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-386">Eine neue DbFunctionExpression-Klasse, die die Millisekunde als ganzzahligen Wert aus **timeValue** zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-386">A new DbFunctionExpression that returns the integer millisecond value from **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-387">**timeValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-387">**timeValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-388">**timeValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-388">**timeValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Min (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Min(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Min(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Min : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="c3de5-389">Ein Ausdruck, der die Sammlung angibt, aus der der Mindestwert abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-389">An expression that specifies the collection from which the minimum value should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-390">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />-Klasse, die die kanonische „Min“-Funktion über die angegebene Sammlung aufruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-390">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Min' function over the specified collection.</span>
          </span>
          <span data-ttu-id="c3de5-391">Der Ergebnistyp des Ausdrucks ist identisch mit dem Elementtyp der Sammlung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-391">The result type of the expression is the same as the element type of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-392">Eine neue „DbFunctionExpression“-Klasse, die den Mindestwert erzeugt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-392">A new DbFunctionExpression that produces the minimum value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-393">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-393">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-394">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-394">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Minute (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Minute(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Minute (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Minute(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberSignature Language="F#" Value="static member Minute : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute timeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="c3de5-395">Ein Ausdruck, der den Wert angibt, aus dem die Minute abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-395">An expression that specifies the value from which the minute should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-396">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische Minute-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp DateTime, DateTimeOffset oder Time aufweisen muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-396">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Minute' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="c3de5-397">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-397">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-398">Eine neue DbFunctionExpression-Klasse, die die Minute als ganzzahligen Wert aus **timeValue** zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-398">A new DbFunctionExpression that returns the integer minute value from **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-399">**timeValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-399">**timeValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-400">**timeValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-400">**timeValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Month (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Month(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Month (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Month(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member Month : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="c3de5-401">Ein Ausdruck, der den Wert angibt, aus dem der Monat abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-401">An expression that specifies the value from which the month should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-402">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Month-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp DateTime oder DateTimeOffset aufweisen muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-402">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Month' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="c3de5-403">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-403">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-404">Eine neue DbFunctionExpression-Klasse, die die Monat als ganzzahligen Wert aus **dateValue** zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-404">A new DbFunctionExpression that returns the integer month value from **dateValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-405">**dateValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-405">**dateValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-406">**dateValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-406">**dateValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NewGuid">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression NewGuid ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression NewGuid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid" />
      <MemberSignature Language="VB.NET" Value="Public Function NewGuid () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ NewGuid();" />
      <MemberSignature Language="F#" Value="static member NewGuid : unit -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c3de5-407">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische NewGuid-Funktion aufruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-407">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'NewGuid' function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-408">Ein neues DbFunctionExpression, das den neuen Wert der GUID zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-408">A new DbFunctionExpression that returns a new GUID value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Power">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Power (this System.Data.Common.CommandTrees.DbExpression baseArgument, System.Data.Common.CommandTrees.DbExpression exponent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Power(class System.Data.Common.CommandTrees.DbExpression baseArgument, class System.Data.Common.CommandTrees.DbExpression exponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Power (baseArgument As DbExpression, exponent As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Power(System::Data::Common::CommandTrees::DbExpression ^ baseArgument, System::Data::Common::CommandTrees::DbExpression ^ exponent);" />
      <MemberSignature Language="F#" Value="static member Power : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power (baseArgument, exponent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="exponent" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="baseArgument">
          <span data-ttu-id="c3de5-409">Ein Ausdruck, der den numerischen Wert angibt, dessen angegebene Potenz berechnet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-409">An expression that specifies the numeric value to raise to the given power.</span>
          </span>
        </param>
        <param name="exponent">
          <span data-ttu-id="c3de5-410">Ein Ausdruck, der die Potenz angibt, mit der **baseArgument** berechnet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-410">An expression that specifies the power to which **baseArgument** should be raised.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-411">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Power-Funktion mit den angegebenen Argumenten aufruft, die numerische Ergebnistypen aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-411">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Power' function with the specified arguments, which must have numeric result types.</span>
          </span>
          <span data-ttu-id="c3de5-412">Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von **baseArgument** identisch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-412">The result type of the expression is the same as the result type of **baseArgument**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-413">Eine neue DbFunctionExpression-Klasse, die den Wert **baseArgument** zurückgibt, der aus der Potenzierung von **exponent** angegeben wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-413">A new DbFunctionExpression that returns the value of **baseArgument** raised to the power specified by **exponent**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-414">**baseArgument** **exponent**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-414">**baseArgument** **exponent**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-415">**baseArgument** **exponent**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-415">**baseArgument** **exponent**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Replace (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression toReplace, System.Data.Common.CommandTrees.DbExpression replacement);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Replace(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression toReplace, class System.Data.Common.CommandTrees.DbExpression replacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Replace (stringArgument As DbExpression, toReplace As DbExpression, replacement As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Replace(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ toReplace, System::Data::Common::CommandTrees::DbExpression ^ replacement);" />
      <MemberSignature Language="F#" Value="static member Replace : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace (stringArgument, toReplace, replacement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="toReplace" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="replacement" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="c3de5-416">Ein Ausdruck, der die Zeichenfolge angibt, in der die Ersetzung ausgeführt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-416">An expression that specifies the string in which to perform the replacement operation.</span>
          </span>
        </param>
        <param name="toReplace">
          <span data-ttu-id="c3de5-417">Ein Ausdruck, der die ersetzte Zeichenfolge angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-417">An expression that specifies the string that is replaced.</span>
          </span>
        </param>
        <param name="replacement">
          <span data-ttu-id="c3de5-418">Ein Ausdruck, der die Ersetzungszeichenfolge angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-418">An expression that specifies the replacement string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-419">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Replace-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp String aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-419">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Replace' function with the specified arguments, which must each have a string result type.</span>
          </span>
          <span data-ttu-id="c3de5-420">Der Ergebnistyp des Ausdrucks ist ebenfalls „String“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-420">The result type of the expression is also string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-421">Eine neue DbFunctionExpression-Klasse, die eine neue Zeichenfolge auf Grundlage des **stringArgument** zurückgibt, wobei jedes Vorkommen von **toReplace** durch **replacement** ersetzt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-421">A new DbFunctionExpression than returns a new string based on **stringArgument** where every occurence of **toReplace** is replaced by **replacement**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-422">**stringArgument** **toReplace** **replacement**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-422">**stringArgument** **toReplace** **replacement**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-423">**stringArgument** **toReplace** **replacement**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-423">**stringArgument** **toReplace** **replacement**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Reverse (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Reverse(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Reverse (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Reverse(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member Reverse : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="c3de5-424">Ein Ausdruck, der die umzukehrende Zeichenfolge angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-424">An expression that specifies the string to reverse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-425">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Reverse-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp String aufweisen muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-425">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Reverse' function with the specified argument, which must have a string result type.</span>
          </span>
          <span data-ttu-id="c3de5-426">Der Ergebnistyp des Ausdrucks ist ebenfalls „String“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-426">The result type of the expression is also string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-427">Eine neue DbFunctionExpression-Klasse, die den umgekehrten Wert von **stringArgument** erzeugt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-427">A new DbFunctionExpression that produces the reversed value of **stringArgument**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-428">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-428">**stringArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-429">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-429">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Right (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Right(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Right (stringArgument As DbExpression, length As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Right(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ length);" />
      <MemberSignature Language="F#" Value="static member Right : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right (stringArgument, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="length" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="c3de5-430">Ein Ausdruck, der die Zeichenfolge angibt, aus der die äußerste rechte Teilzeichenfolge extrahiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-430">An expression that specifies the string from which to extract the rightmost substring.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="c3de5-431">Ein Ausdruck, der die Länge der äußersten rechten aus **stringArgument** zu extrahierenden Teilzeichenfolge angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-431">An expression that specifies the length of the rightmost substring to extract from **stringArgument**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-432">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Right-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp String und einen ganzzahligen numerischen Ergebnistyp aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-432">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Right' function with the specified arguments, which must have a string and integer numeric result type.</span>
          </span>
          <span data-ttu-id="c3de5-433">Der Ergebnistyp des Ausdrucks ist „String“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-433">The result type of the expression is string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-434">Eine neue DbFunctionExpression-Klasse, die die Länge der äußersten rechten Teilzeichenfolge der Länge **length** aus **stringArgument** zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-434">A new DbFunctionExpression that returns the rightmost substring of length **length** from **stringArgument**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-435">**stringArgument** **length**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-435">**stringArgument** **length**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-436">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-436">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Round">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c3de5-437">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische Round-Funktion aufruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-437">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Round' function.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Round (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Round(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Round (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Round(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member Round : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c3de5-438">Ein Ausdruck, der den zu rundenden numerischen Wert angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-438">An expression that specifies the numeric value to round.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-439">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Round-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp Single, Double oder Decimal aufweisen muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-439">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Round' function with the specified argument, which must each have a single, double or decimal result type.</span>
          </span>
          <span data-ttu-id="c3de5-440">Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von **value** identisch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-440">The result type of the expression is the same as the result type of **value**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-441">Ein neues DbFunctionExpression, das das angegebene Argument auf den nächsten ganzzahligen Wert rundet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-441">A new DbFunctionExpression that rounds the specified argument to the nearest integer value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-442">**value**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-442">**value**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-443">**value**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-443">**value**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Round (this System.Data.Common.CommandTrees.DbExpression value, System.Data.Common.CommandTrees.DbExpression digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Round(class System.Data.Common.CommandTrees.DbExpression value, class System.Data.Common.CommandTrees.DbExpression digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Round (value As DbExpression, digits As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Round(System::Data::Common::CommandTrees::DbExpression ^ value, System::Data::Common::CommandTrees::DbExpression ^ digits);" />
      <MemberSignature Language="F#" Value="static member Round : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round (value, digits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="digits" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c3de5-444">Ein Ausdruck, der den zu rundenden numerischen Wert angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-444">An expression that specifies the numeric value to round.</span>
          </span>
        </param>
        <param name="digits">
          <span data-ttu-id="c3de5-445">Ein Ausdruck, der die beim Runden zu verwendende Anzahl gültiger Ziffern angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-445">An expression that specifies the number of digits of precision to use when rounding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-446">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Round-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp Single, Double oder Decimal und einen ganzzahligen Ergebnistyp aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-446">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Round' function with the specified arguments, which must have a single, double or decimal, and integer result types.</span>
          </span>
          <span data-ttu-id="c3de5-447">Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von **value** identisch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-447">The result type of the expression is the same as the result type of **value**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-448">Eine neue DbFunctionExpression-Klasse, die das angegebene Argument mit der durch **digits** angegebenen Genauigkeit auf den nächsten ganzzahligen Wert rundet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-448">A new DbFunctionExpression that rounds the specified argument to the nearest integer value, with precision as specified by **digits**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-449">**value** **digits**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-449">**value** **digits**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-450">**value** **digits**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-450">**value** **digits**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Second">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Second (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Second(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Second (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Second(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberSignature Language="F#" Value="static member Second : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second timeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="timeValue">
          <span data-ttu-id="c3de5-451">Ein Ausdruck, der den Wert angibt, aus dem die Sekunde abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-451">An expression that specifies the value from which the second should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-452">Erstellt einen <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, der die kanonische Second-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp DateTime, DateTimeOffset oder Time aufweisen muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-452">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Second' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span>
          </span>
          <span data-ttu-id="c3de5-453">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-453">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-454">Eine neue DbFunctionExpression-Klasse, die die Sekunde als ganzzahligen Wert aus **timeValue** zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-454">A new DbFunctionExpression that returns the integer second value from **timeValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-455">**timeValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-455">**timeValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-456">**timeValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-456">**timeValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartsWith">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression StartsWith (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression StartsWith(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StartsWith (stringArgument As DbExpression, prefix As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ StartsWith(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ prefix);" />
      <MemberSignature Language="F#" Value="static member StartsWith : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith (stringArgument, prefix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="prefix" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="c3de5-457">Ein Ausdruck, der die Zeichenfolge angibt, die am Anfang nach der Zeichenfolge **prefix** durchsucht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-457">An expression that specifies the string that is searched at the start for string **prefix**.</span>
          </span>
        </param>
        <param name="prefix">
          <span data-ttu-id="c3de5-458">Ein Ausdruck, der die Zielzeichenfolge angibt, nach der am Anfang von **stringArgument** gesucht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-458">An expression that specifies the target string that is searched for at the start of **stringArgument**.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-459">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische StartsWith-Funktion mit den angegebenen Argumenten aufruft, die jeweils den Ergebnistyp String aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-459">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'StartsWith' function with the specified arguments, which must each have a string result type.</span>
          </span>
          <span data-ttu-id="c3de5-460">Der Ergebnistyp des Ausdrucks ist Boolean.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-460">The result type of the expression is Boolean.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-461">Eine neue DbFunctionExpression-Klasse, die einen booleschen Wert zurückgibt, der angibt, ob **stringArgument** mit **prefix** beginnt oder nicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-461">A new DbFunctionExpression that returns a Boolean value indicating whether or not **stringArgument** starts with **prefix**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StDev">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression StDev (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression StDev(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StDev (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ StDev(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member StDev : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="c3de5-462">Ein Ausdruck, der die Sammlung angibt, für die die Standardabweichung berechnet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-462">An expression that specifies the collection for which the standard deviation should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-463">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />-Klasse, die die kanonische „StDev“-Funktion über die Member der angegebenen Sammlung, die nicht NULL sind, abruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-463">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'StDev' function over the non-null members of the specified collection.</span>
          </span>
          <span data-ttu-id="c3de5-464">Der Ergebnistyp des Ausdrucks ist „Edm.Double“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-464">The result type of the expression is Edm.Double.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-465">Eine neue „DbFunctionExpression“-Klasse, die den Standardabweichungswert über Member der Sammlung, die nicht NULL sind, erstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-465">A new DbFunctionExpression that produces the standard deviation value over non-null members of the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-466">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-466">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-467">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-467">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StDevP">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression StDevP (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression StDevP(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StDevP (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ StDevP(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member StDevP : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="c3de5-468">Ein Ausdruck, der die Sammlung angibt, für die die Standardabweichung berechnet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-468">An expression that specifies the collection for which the standard deviation should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-469">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />-Klasse, die die kanonische „StDevP“-Funktion über die Auffüllung der angegebenen Sammlung abruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-469">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'StDevP' function over the population of the specified collection.</span>
          </span>
          <span data-ttu-id="c3de5-470">Der Ergebnistyp des Ausdrucks ist „Edm.Double“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-470">The result type of the expression is Edm.Double.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-471">Eine neue „DbFunctionExpression“-Klasse, die den Standardabweichungswert erzeugt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-471">A new DbFunctionExpression that produces the standard deviation value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-472">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-472">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-473">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-473">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Substring">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Substring (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression start, System.Data.Common.CommandTrees.DbExpression length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Substring(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression start, class System.Data.Common.CommandTrees.DbExpression length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Substring (stringArgument As DbExpression, start As DbExpression, length As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Substring(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ start, System::Data::Common::CommandTrees::DbExpression ^ length);" />
      <MemberSignature Language="F#" Value="static member Substring : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring (stringArgument, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="start" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="length" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="c3de5-474">Ein Ausdruck, der die Zeichenfolge angibt, aus der die Teilzeichenfolge extrahiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-474">An expression that specifies the string from which to extract the substring.</span>
          </span>
        </param>
        <param name="start">
          <span data-ttu-id="c3de5-475">Ein Ausdruck, der den Startindex angibt, ab dem die Teilzeichenfolge extrahiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-475">An expression that specifies the starting index from which the substring should be taken.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="c3de5-476">Ein Ausdruck, der die Länge der Teilzeichenfolge angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-476">An expression that specifies the length of the substring.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-477">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Substring-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp String und einen ganzzahligen numerischen Ergebnistyp aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-477">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Substring' function with the specified arguments, which must have a string and integer numeric result types.</span>
          </span>
          <span data-ttu-id="c3de5-478">Der Ergebnistyp des Ausdrucks ist „String“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-478">The result type of the expression is string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-479">Eine neue DbFunctionExpression-Klasse, die die Teilzeichenfolge der Länge **length** von **stringArgument** zurückgibt, die bei **start** beginnt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-479">A new DbFunctionExpression that returns the substring of length **length** from **stringArgument** starting at **start**.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3de5-480">Teilzeichenfolge ist es erforderlich, dass der Index von angegebenen **starten** werden \<b > auf 1 basierende \< /b >.</span><span class="sxs-lookup"><span data-stu-id="c3de5-480">Substring requires that the index specified by **start** be \<b>1-based\</b>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-481">**stringArgument** **start** **length**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-481">**stringArgument** **start** **length**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-482">**stringArgument** **start** **length**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-482">**stringArgument** **start** **length**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Sum (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Sum(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Sum(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="c3de5-483">Ein Ausdruck, der die Sammlung angibt, aus der die Summe berechnet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-483">An expression that specifies the collection from which the sum should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-484">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />-Klasse, die die kanonische „Sum“-Funktion über die angegebene Sammlung aufruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-484">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Sum' function over the specified collection.</span>
          </span>
          <span data-ttu-id="c3de5-485">Der Ergebnistyp des Ausdrucks ist identisch mit dem Elementtyp der Sammlung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-485">The result type of the expression is the same as the element type of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-486">Eine neue „DbFunctionExpression“-Klasse, die die Summe erzeugt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-486">A new DbFunctionExpression that produces the sum.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-487">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-487">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-488">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-488">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression ToLower (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression ToLower(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToLower (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ ToLower(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member ToLower : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="c3de5-489">Ein Ausdruck, der die Zeichenfolge angibt, die in Kleinbuchstaben konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-489">An expression that specifies the string that should be converted to lower case.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-490">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische ToLower-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp String aufweisen muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-490">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'ToLower' function with the specified argument, which must have a string result type.</span>
          </span>
          <span data-ttu-id="c3de5-491">Der Ergebnistyp des Ausdrucks ist ebenfalls „String“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-491">The result type of the expression is also string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-492">Eine neue DbFunctionExpression-Klasse, die den Wert von **stringArgument** in Kleinbuchstaben konvertiert zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-492">A new DbFunctionExpression that returns value of **stringArgument** converted to lower case.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-493">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-493">**stringArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-494">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-494">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression ToUpper (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression ToUpper(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToUpper (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ ToUpper(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member ToUpper : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="c3de5-495">Ein Ausdruck, der die Zeichenfolge angibt, die in Großbuchstaben konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-495">An expression that specifies the string that should be converted to upper case.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-496">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische ToUpper-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp String aufweisen muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-496">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'ToUpper' function with the specified argument, which must have a string result type.</span>
          </span>
          <span data-ttu-id="c3de5-497">Der Ergebnistyp des Ausdrucks ist ebenfalls „String“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-497">The result type of the expression is also string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-498">Eine neue DbFunctionExpression-Klasse, die den Wert von **stringArgument** in Großbuchstaben konvertiert zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-498">A new DbFunctionExpression that returns value of **stringArgument** converted to upper case.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-499">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-499">**stringArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-500">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-500">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Trim (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Trim(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Trim (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Trim(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member Trim : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="c3de5-501">Ein Ausdruck, der die Zeichenfolge angibt, aus der führende und nachgestellte Leerzeichen entfernt werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-501">An expression that specifies the string from which leading and trailing space should be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-502">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Trim-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp String aufweisen muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-502">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Trim' function with the specified argument, which must have a string result type.</span>
          </span>
          <span data-ttu-id="c3de5-503">Der Ergebnistyp des Ausdrucks ist ebenfalls „String“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-503">The result type of the expression is also string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-504">Eine neue DbFunctionExpression-Klasse, die den Wert von **stringArgument** nach dem Entfernen führender und nachgestellter Leerzeichen zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-504">A new DbFunctionExpression that returns value of **stringArgument** with leading and trailing space removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-505">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-505">**stringArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-506">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-506">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TrimEnd">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression TrimEnd (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression TrimEnd(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TrimEnd (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ TrimEnd(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member TrimEnd : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="c3de5-507">Ein Ausdruck, der die Zeichenfolge angibt, aus der nachgestellte Leerzeichen entfernt werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-507">An expression that specifies the string from which trailing space should be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-508">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische RTrim-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp String aufweisen muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-508">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'RTrim' function with the specified argument, which must have a string result type.</span>
          </span>
          <span data-ttu-id="c3de5-509">Der Ergebnistyp des Ausdrucks ist ebenfalls „String“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-509">The result type of the expression is also string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-510">Eine neue DbFunctionExpression-Klasse, die den Wert von **stringArgument** nach dem Entfernen nachgestellter Leerzeichen zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-510">A new DbFunctionExpression that returns value of **stringArgument** with trailing space removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-511">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-511">**stringArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-512">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-512">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TrimStart">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression TrimStart (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression TrimStart(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TrimStart (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ TrimStart(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member TrimStart : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument">
          <span data-ttu-id="c3de5-513">Ein Ausdruck, der die Zeichenfolge angibt, aus der führende Leerzeichen entfernt werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-513">An expression that specifies the string from which leading space should be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-514">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische LTrim-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp String aufweisen muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-514">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'LTrim' function with the specified argument, which must have a string result type.</span>
          </span>
          <span data-ttu-id="c3de5-515">Der Ergebnistyp des Ausdrucks ist ebenfalls „String“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-515">The result type of the expression is also string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-516">Eine neue DbFunctionExpression-Klasse, die den Wert von **stringArgument** nach dem Entfernen führender Leerzeichen zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-516">A new DbFunctionExpression that returns value of **stringArgument** with leading space removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-517">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-517">**stringArgument**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-518">**stringArgument**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-518">**stringArgument**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Truncate (this System.Data.Common.CommandTrees.DbExpression value, System.Data.Common.CommandTrees.DbExpression digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Truncate(class System.Data.Common.CommandTrees.DbExpression value, class System.Data.Common.CommandTrees.DbExpression digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Truncate (value As DbExpression, digits As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Truncate(System::Data::Common::CommandTrees::DbExpression ^ value, System::Data::Common::CommandTrees::DbExpression ^ digits);" />
      <MemberSignature Language="F#" Value="static member Truncate : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate (value, digits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="digits" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c3de5-519">Ein Ausdruck, der den abzuschneidenden numerischen Wert angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-519">An expression that specifies the numeric value to truncate.</span>
          </span>
        </param>
        <param name="digits">
          <span data-ttu-id="c3de5-520">Ein Ausdruck, der die beim Abschneiden zu verwendende Anzahl gültiger Ziffern angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-520">An expression that specifies the number of digits of precision to use when truncating.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-521">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Truncate-Funktion mit den angegebenen Argumenten aufruft, die den Ergebnistyp Single, Double oder Decimal und einen ganzzahligen Ergebnistyp aufweisen müssen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-521">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Truncate' function with the specified arguments, which must have a single, double or decimal, and integer result types.</span>
          </span>
          <span data-ttu-id="c3de5-522">Der Ergebnistyp des Ausdrucks ist mit dem Ergebnistyp von **value** identisch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-522">The result type of the expression is the same as the result type of **value**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-523">Eine neue DbFunctionExpression-Klasse, die das angegebene Argument mit der durch **digits** angegebenen Genauigkeit auf den nächsten ganzzahligen Wert verkürzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-523">A new DbFunctionExpression that truncates the specified argument to the nearest integer value, with precision as specified by **digits**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-524">**value** **digits**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-524">**value** **digits**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-525">**value** **digits**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-525">**value** **digits**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TruncateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression TruncateTime (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression TruncateTime(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TruncateTime (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ TruncateTime(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member TruncateTime : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="c3de5-526">Ein Ausdruck, der den Wert angibt, für den der Zeitanteil abgeschnitten werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-526">An expression that specifies the value for which the time portion should be truncated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-527">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische TruncateTime-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp DateTime oder DateTimeOffset aufweisen muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-527">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'TruncateTime' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="c3de5-528">Der Ergebnistyp des Ausdrucks ist identisch mit dem Ergebnistyp von **dateValue**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-528">The result type of the expression is the same as the result type of **dateValue**.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-529">Eine neue DbFunctionExpression-Klasse, die den Wert von **dateValue** mit auf 0 festgelegter Zeit zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-529">A new DbFunctionExpression that returns the value of **dateValue** with time set to zero.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-530">**dateValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-530">**dateValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-531">**dateValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-531">**dateValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Var">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Var (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Var(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Var (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Var(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Var : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="c3de5-532">Ein Ausdruck, der die Sammlung angibt, für die die statistische Varianz berechnet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-532">An expression that specifies the collection for which the statistical variance should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-533">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />-Klasse, die die kanonische „Var“-Funktion über die Member der angegebenen Sammlung, die nicht NULL sind, abruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-533">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Var' function over the non-null members of the specified collection.</span>
          </span>
          <span data-ttu-id="c3de5-534">Der Ergebnistyp des Ausdrucks ist „Edm.Double“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-534">The result type of the expression is Edm.Double.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-535">Eine neue „DbFunctionExpression“-Klasse, die den statistischen Varianzwert für die Member der Sammlung, die nicht NULL sind, erstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-535">A new DbFunctionExpression that produces the statistical variance value for the non-null members of the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-536">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-536">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-537">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-537">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VarP">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression VarP (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression VarP(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function VarP (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ VarP(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member VarP : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="c3de5-538">Ein Ausdruck, der die Sammlung angibt, für die die statistische Varianz berechnet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-538">An expression that specifies the collection for which the statistical variance should be computed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-539">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />-Klasse, die die kanonische „VarP“-Funktion über die angegebene Sammlung aufruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-539">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'VarP' function over the population of the specified collection.</span>
          </span>
          <span data-ttu-id="c3de5-540">Der Ergebnistyp des Ausdrucks ist „Edm.Double“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-540">The result type of the expression Edm.Double.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-541">Eine neue Klasse „DbFunctionExpression“, die den statistischen Varianzwert erzeugt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-541">A new DbFunctionExpression that produces the statistical variance value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-542">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-542">**collection**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-543">**collection**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-543">**collection**</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Year (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Year(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Year (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Year(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member Year : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue">
          <span data-ttu-id="c3de5-544">Ein Ausdruck, der den Wert angibt, aus dem das Jahr abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-544">An expression that specifies the value from which the year should be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3de5-545">Erstellt eine <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />, die die kanonische Year-Funktion mit dem angegebenen Argument aufruft, das den Ergebnistyp DateTime oder DateTimeOffset aufweisen muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-545">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Year' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span>
          </span>
          <span data-ttu-id="c3de5-546">Der Ergebnistyp des Ausdrucks ist „Edm.Int32“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-546">The result type of the expression is Edm.Int32.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3de5-547">Eine neue DbFunctionExpression-Klasse, die das Jahr als ganzzahligen Wert aus **dateValue** zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-547">A new DbFunctionExpression that returns the integer year value from **dateValue**.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3de5-548">**dateValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-548">**dateValue**</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3de5-549">**dateValue**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3de5-549">**dateValue**</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>