<Type Name="RegistryProxy" FullName="Microsoft.VisualBasic.MyServices.RegistryProxy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="82e9e458c4b00643df865bc2c965666039ee5a5c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36659033" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RegistryProxy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi RegistryProxy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.MyServices.RegistryProxy" />
  <TypeSignature Language="VB.NET" Value="Public Class RegistryProxy" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryProxy" />
  <TypeSignature Language="F#" Value="type RegistryProxy = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides properties and methods for manipulating the registry.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um diese Eigenschaften verwenden zu können, benötigen Sie Lese- und Schreibrechte für die <xref:System.Security.Permissions.RegistryPermissionAccess> Enumeration. Jeder Code mit voller Vertrauenswürdigkeit ausgeführt (Dies ist unter der Standardsicherheitsrichtlinie jeglicher Code, der auf der lokalen Festplatte des Benutzers installiert) verfügt über die erforderlichen Berechtigungen zum Zugriff auf die Registrierung. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Security.Permissions.RegistryPermission>-Klasse.  
  
 Die folgende Tabelle enthält Beispiele für Aufgaben im Zusammenhang mit der `My.Computer.Registry` Objekt.  
  
|Beschreibung|Siehe|  
|--------|---------|  
|Erstellen Sie einen Registrierungsschlüssel, und legen Sie dessen Wert|[Gewusst wie: Erstellen von Registrierungsschlüsseln und Festlegen ihrer Werte](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Löschen von Registrierungsschlüsseln|[Gewusst wie: Löschen von Registrierungsschlüsseln](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Lesen von Daten aus der Registrierung|[Gewusst wie: Lesen eines Werts aus einem Registrierungsschlüssel](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 In diesem Beispiel liest den Wert `Name` aus `HKEY_CURRENT_USER\Software\MyApp` und in einem Meldungsfeld angezeigt.  
  
 [!code-vb[VbVbalrMyRegistry#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#8)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.Win32.Registry" />
  </Docs>
  <Members>
    <Member MemberName="ClassesRoot">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey ClassesRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey ClassesRoot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClassesRoot As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ ClassesRoot { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClassesRoot : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <see cref="T:Microsoft.Win32.RegistryKey" /> type which provides access to <see langword="HKEY_CLASSES_ROOT" />.</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_CLASSES_ROOT` wird hauptsächlich zum Speichern von Informationen über dateizuordnungen, die in Windows.  
  
 Die <xref:System.Security.Permissions.RegistryPermission> Klasse, die in der <xref:System.Security.Permissions> -Namespace, den Zugriff auf Registrierungsvariablen steuert. Registrierungsvariablen sollten nicht an Speicherorten gespeichert werden, in denen Code ohne <xref:System.Security.Permissions.RegistryPermission> darauf zugreifen kann. Auf ähnliche Weise beim Gewähren von Berechtigungen, erteilen Sie nur diese Berechtigungen müssen Sie die Aufgabe zu erledigen.  
  
 Zugriffswerte für Registrierungsberechtigungen werden von der Enumeration <xref:System.Security.Permissions.RegistryPermissionAccess> definiert. In der folgenden Tabelle werden die Member aufgeführt.  
  
|Wert|Beschreibung|  
|-----------|-----------------|  
|AllAccess|Erstellen Sie, lesen Sie und Schreiben Sie den Zugriff auf Registrierungsvariablen.|  
|Erstellen|Erstellen Sie den Zugriff auf Registrierungsvariablen.|  
|NoAccess|Kein Zugriff auf Registrierungsvariablen.|  
|Lesen|Lesezugriff auf Registrierungsvariablen.|  
|Write|Schreibzugriff auf Registrierungsvariablen.|  
  
 Die folgende Tabelle enthält Beispiele für Aufgaben im Zusammenhang mit der `My.Computer.Registry` Objekt.  
  
|Beschreibung|Siehe|  
|--------|---------|  
|Erstellen Sie einen Registrierungsschlüssel, und legen Sie dessen Wert|[Gewusst wie: Erstellen von Registrierungsschlüsseln und Festlegen ihrer Werte](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Löschen von Registrierungsschlüsseln|[Gewusst wie: Löschen von Registrierungsschlüsseln](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Lesen eines Werts aus einem Registrierungsschlüssel|[Gewusst wie: Lesen eines Werts aus einem Registrierungsschlüssel](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 In diesem Beispiel ruft die Namen der Unterschlüssel für die `ClassesRoot` Registrierungsschlüssel hinzugefügt `ListBox1`.  
  
 [!code-vb[VbVbalrMyRegistry#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#10)]  
  
 Dieses Beispiel benötigen Sie ein `ListBox` mit dem Namen `ListBox1` in Ihrem Projekt.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.ClassesRoot" />
      </Docs>
    </Member>
    <Member MemberName="CurrentConfig">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CurrentConfig { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey CurrentConfig" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentConfig As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ CurrentConfig { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentConfig : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <see cref="T:Microsoft.Win32.RegistryKey" /> type which provides access to <see langword="HKEY_CURRENT_CONFIG" />.</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_CURRENT_CONFIG` wird hauptsächlich verwendet, um Einstellungen für Geräte auf dem Computer speichern.  
  
 Die <xref:System.Security.Permissions.RegistryPermission> Klasse, die in der <xref:System.Security.Permissions> -Namespace, den Zugriff auf Registrierungsvariablen steuert. Registrierungsvariablen sollten nicht an Speicherorten gespeichert werden, in denen Code ohne <xref:System.Security.Permissions.RegistryPermission> darauf zugreifen kann. Auf ähnliche Weise beim Gewähren von Berechtigungen, erteilen Sie nur diese Berechtigungen müssen Sie die Aufgabe zu erledigen.  
  
 Zugriffswerte für Registrierungsberechtigungen werden von der Enumeration <xref:System.Security.Permissions.RegistryPermissionAccess> definiert. In der folgenden Tabelle werden die Member aufgeführt.  
  
|Wert|Beschreibung|  
|-----------|-----------------|  
|AllAccess|Erstellen Sie, lesen Sie und Schreiben Sie den Zugriff auf Registrierungsvariablen.|  
|Erstellen|Erstellen Sie den Zugriff auf Registrierungsvariablen.|  
|NoAccess|Kein Zugriff auf Registrierungsvariablen.|  
|Lesen|Lesezugriff auf Registrierungsvariablen.|  
|Write|Schreibzugriff auf Registrierungsvariablen.|  
  
 Die folgende Tabelle enthält Beispiele für Aufgaben im Zusammenhang mit der `My.Computer.Registry` Objekt.  
  
|Beschreibung|Siehe|  
|--------|---------|  
|Erstellen Sie einen Registrierungsschlüssel, und legen Sie dessen Wert|[Gewusst wie: Erstellen von Registrierungsschlüsseln und Festlegen ihrer Werte](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Löschen von Registrierungsschlüsseln|[Gewusst wie: Löschen von Registrierungsschlüsseln](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Lesen eines Werts aus einem Registrierungsschlüssel|[Gewusst wie: Lesen eines Werts aus einem Registrierungsschlüssel](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird den Unterschlüssel `MyDeviceSettings`.  
  
 [!code-vb[VbVbalrMyRegistry#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.CurrentConfig" />
      </Docs>
    </Member>
    <Member MemberName="CurrentUser">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CurrentUser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey CurrentUser" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentUser As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ CurrentUser { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentUser : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <see cref="T:Microsoft.Win32.RegistryKey" /> type which provides access to <see langword="HKEY_CURRENT_USER" />.</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_CURRENT_USER` wird hauptsächlich verwendet, um benutzerspezifische Einstellungen, z. B. Farben und Schriftarten in Windows zu speichern. Der Schlüssel variieren je nach den Benutzer.  
  
 Die <xref:System.Security.Permissions.RegistryPermission> Klasse, die in der <xref:System.Security.Permissions> -Namespace, den Zugriff auf Registrierungsvariablen steuert. Registrierungsvariablen sollten nicht an Speicherorten gespeichert werden, in denen Code ohne <xref:System.Security.Permissions.RegistryPermission> darauf zugreifen kann. Beim Gewähren von Berechtigungen, erteilen Sie entsprechend die Minimum an rechten müssen Sie die Aufgabe zu erledigen.  
  
 Zugriffswerte für Registrierungsberechtigungen werden von der Enumeration <xref:System.Security.Permissions.RegistryPermissionAccess> definiert. In der folgenden Tabelle werden die Member aufgeführt.  
  
|Wert|Beschreibung|  
|-----------|-----------------|  
|AllAccess|Erstellen Sie, lesen Sie und Schreiben Sie den Zugriff auf Registrierungsvariablen.|  
|Erstellen|Erstellen Sie den Zugriff auf Registrierungsvariablen.|  
|NoAccess|Kein Zugriff auf Registrierungsvariablen.|  
|Lesen|Lesezugriff auf Registrierungsvariablen.|  
|Write|Schreibzugriff auf Registrierungsvariablen.|  
  
 Die folgende Tabelle enthält Beispiele für Aufgaben im Zusammenhang mit der `My.Computer.Registry` Objekt.  
  
|Beschreibung|Siehe|  
|--------|---------|  
|Erstellen Sie einen Registrierungsschlüssel, und legen Sie dessen Wert|[Gewusst wie: Erstellen von Registrierungsschlüsseln und Festlegen ihrer Werte](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Löschen von Registrierungsschlüsseln|[Gewusst wie: Löschen von Registrierungsschlüsseln](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Lesen eines Werts aus einem Registrierungsschlüssel|[Gewusst wie: Lesen eines Werts aus einem Registrierungsschlüssel](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 Dieses Beispiel löscht den Unterschlüssel `Software\MyCompany\Preferences\UserData`.  
  
 [!code-vb[VbVbalrMyRegistry#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.CurrentUser" />
      </Docs>
    </Member>
    <Member MemberName="DynData">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey DynData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey DynData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.DynData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynData As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ DynData { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynData : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.DynData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The DynData registry key works only on Win9x, which is not supported by this version of the .NET Framework.  Use the PerformanceData registry key instead.  This property will be removed from a future version of the framework.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <see cref="T:Microsoft.Win32.RegistryKey" /> type, which provides access to <see langword="HKEY_DYNDATA" />.</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_DYNDATA` wird verwendet, um die dynamische, die von virtuellen Gerätetreibern verwendet beispielsweise Registrierungsdaten zu speichern, und wird nur auf Windows 95-und Windows 98-Systeme unterstützt. Für nicht-Windows 95-und Windows 98-Systeme, Aufrufen von Methoden des vom zurückgegebenen Schlüssels `Registry.DynData`, wie z. B. `CreateSubKey`, `DeleteSubKey`, `GetSubKeyCount`, `GetValueCount`usw., löst eine <xref:System.IO.IOException>.  
  
 Die <xref:System.Security.Permissions.RegistryPermission> Klasse, die in der <xref:System.Security.Permissions> -Namespace, den Zugriff auf Registrierungsvariablen steuert. Registrierungsvariablen sollten nicht an Speicherorten gespeichert werden, in denen Code ohne <xref:System.Security.Permissions.RegistryPermission> darauf zugreifen kann. Beim Gewähren von Berechtigungen, erteilen Sie entsprechend die Minimum an rechten müssen Sie die Aufgabe zu erledigen.  
  
 Zugriffswerte für Registrierungsberechtigungen werden von der Enumeration <xref:System.Security.Permissions.RegistryPermissionAccess> definiert. In der folgenden Tabelle werden die Member aufgeführt.  
  
|Wert|Beschreibung|  
|-----------|-----------------|  
|AllAccess|Erstellen Sie, lesen Sie und Schreiben Sie den Zugriff auf Registrierungsvariablen.|  
|Erstellen|Erstellen Sie den Zugriff auf Registrierungsvariablen.|  
|NoAccess|Kein Zugriff auf Registrierungsvariablen.|  
|Lesen|Lesezugriff auf Registrierungsvariablen.|  
|Write|Schreibzugriff auf Registrierungsvariablen.|  
  
 Die folgende Tabelle enthält Beispiele für Aufgaben im Zusammenhang mit der `My.Computer.Registry` Objekt.  
  
|Beschreibung|Siehe|  
|--------|---------|  
|Erstellen Sie einen Registrierungsschlüssel, und legen Sie dessen Wert|[Gewusst wie: Erstellen von Registrierungsschlüsseln und Festlegen ihrer Werte](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Löschen von Registrierungsschlüsseln|[Gewusst wie: Löschen von Registrierungsschlüsseln](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Lesen eines Werts aus einem Registrierungsschlüssel|[Gewusst wie: Lesen eines Werts aus einem Registrierungsschlüssel](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 Dieses Beispiel löscht die Unterschlüsseln Struktur `Software\MyCompany\Preferences`.  
  
 [!code-vb[VbVbalrMyRegistry#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.DynData" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (string keyName, string valueName, object defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public instance object GetValue(string keyName, string valueName, object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (keyName As String, valueName As String, defaultValue As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ defaultValue);" />
      <MemberSignature Language="F#" Value="member this.GetValue : string * string * obj -&gt; obj" Usage="registryProxy.GetValue (keyName, valueName, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="defaultValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyName">
          <see langword="String" />. Key from which the value is to be retrieved. Required.</param>
        <param name="valueName">
          <see langword="String" />. Value to be retrieved. Required.</param>
        <param name="defaultValue">
          <see langword="Object" />. Default value to be supplied if the value does not exist. Required.</param>
        <summary>Gets a value from a registry key.</summary>
        <returns>Gets a value from a registry key.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei `valueName` wird nicht zwischen Groß- und Kleinschreibung unterschieden.  
  
 Ein Registrierungsschlüssel kann einen Wert enthalten, die nicht mit einem beliebigen Namen verknüpft ist. Wenn dies der unbenannten Wert in den Registrierungs-Editor angezeigt wird, wird die Zeichenfolge "(Standard)" anstelle eines Namens angezeigt. Um diesen unbenannten Wert abzurufen, geben Sie entweder Null oder eine leere Zeichenfolge ("") für `valueName`.  
  
 Die folgende Tabelle enthält Beispiele für Aufgaben im Zusammenhang mit der `GetValue` Methode.  
  
|Beschreibung|Siehe|  
|--------|---------|  
|Lesen eines Werts aus einem Registrierungsschlüssel|[Gewusst wie: Lesen eines Werts aus einem Registrierungsschlüssel](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 In diesem Beispiel liest den Wert `Name` aus `HKEY_CURRENT_USER\Software\MyApp` und zeigt ihn in eine `MessageBox`.  
  
 [!code-vb[VbVbalrMyRegistry#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read from the registry key.</exception>
        <exception cref="T:System.IO.IOException">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value has been marked for deletion.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> does not begin with a valid registry root.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">aus der Registrierung zu lesen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">Um einen Registrierungsschlüssel des Typs REG_EXPAND_SZ zu lesen. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="LocalMachine">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey LocalMachine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey LocalMachine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalMachine As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ LocalMachine { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalMachine : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <see cref="T:Microsoft.Win32.RegistryKey" /> type, which provides access to <see langword="HKEY_LOCAL_MACHINE" />.</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_LOCAL_MACHINE` wird normalerweise verwendet, um Einstellungen zu speichern, die nicht vom Benutzer in Windows variieren. Alle Benutzer des Computers einen gemeinsamen diesen Schlüssel. Die fünf Unterschlüssel (`Hardware`, `SAM`, `Security`, `Software`, und `System`) halten Sie die Konfigurationsdaten für den lokalen Computer.  
  
 Die <xref:System.Security.Permissions.RegistryPermission> Klasse, die in der <xref:System.Security.Permissions> -Namespace, den Zugriff auf Registrierungsvariablen steuert. Registrierungsvariablen sollten nicht an Speicherorten gespeichert werden, in denen Code ohne <xref:System.Security.Permissions.RegistryPermission> darauf zugreifen kann. Beim Gewähren von Berechtigungen, erteilen Sie entsprechend die Minimum an rechten müssen Sie die Aufgabe zu erledigen.  
  
 Zugriffswerte für Registrierungsberechtigungen werden von der Enumeration <xref:System.Security.Permissions.RegistryPermissionAccess> definiert. In der folgenden Tabelle werden die Member aufgeführt.  
  
|Wert|Beschreibung|  
|-----------|-----------------|  
|AllAccess|Erstellen Sie, lesen Sie und Schreiben Sie den Zugriff auf Registrierungsvariablen.|  
|Erstellen|Erstellen Sie den Zugriff auf Registrierungsvariablen.|  
|NoAccess|Kein Zugriff auf Registrierungsvariablen.|  
|Lesen|Lesezugriff auf Registrierungsvariablen.|  
|Write|Schreibzugriff auf Registrierungsvariablen.|  
  
 Die folgende Tabelle enthält Beispiele für Aufgaben im Zusammenhang mit der `My.Computer.Registry` Objekt.  
  
|Beschreibung|Siehe|  
|--------|---------|  
|Erstellen Sie einen Registrierungsschlüssel, und legen Sie dessen Wert|[Gewusst wie: Erstellen von Registrierungsschlüsseln und Festlegen ihrer Werte](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Löschen von Registrierungsschlüsseln|[Gewusst wie: Löschen von Registrierungsschlüsseln](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Lesen eines Werts aus einem Registrierungsschlüssel|[Gewusst wie: Lesen eines Werts aus einem Registrierungsschlüssel](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird der Unterschlüssel `Software\MyCompany\Preferences` und legt den Wert `FontColor` auf `"red"`.  
  
 [!code-vb[VbVbalrMyRegistry#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.LocalMachine" />
      </Docs>
    </Member>
    <Member MemberName="PerformanceData">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey PerformanceData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey PerformanceData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PerformanceData As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ PerformanceData { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PerformanceData : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <see cref="T:Microsoft.Win32.RegistryKey" /> type, which provides access to <see langword="HKEY_PERFORMANCE_DATA" />.</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_PERFORMANCE_DATA` Dient zum Leistungsinformationen für Softwarekomponenten zugreifen. Jede Softwarekomponente erstellt Schlüssel für die Objekte und Leistungsindikatoren auf, wenn er installiert ist, und schreibt Leistungsindikatordaten erfasst werden, während er ausgeführt wird. Diese Daten werden nicht in der Registrierung gespeichert, obwohl die Registrierung verwendet wird, um darauf zuzugreifen. Stattdessen aufrufen Registrierungsfunktionen über `HKEY_PERFORMANCE_DATA` bewirkt, dass das System zum Erfassen der Daten aus der entsprechenden Objekt-Manager.  
  
 Dieser Schlüssel ist auf Windows 98-Systeme nicht vorhanden; Versuch, ihn als Aufruf verwenden die `Name` Methode löst eine <xref:System.IO.IOException>.  
  
 Dieser Schlüssel kann normalerweise nicht geschrieben werden; Bei dem Versuch, einen Unterschlüssel erstellen löst eine <xref:System.IO.IOException>.  
  
 Die <xref:System.Security.Permissions.RegistryPermission> Klasse, die in der <xref:System.Security.Permissions> -Namespace, den Zugriff auf Registrierungsvariablen steuert. Registrierungsvariablen sollten nicht an Speicherorten gespeichert werden, in denen Code ohne <xref:System.Security.Permissions.RegistryPermission> darauf zugreifen kann. Beim Gewähren von Berechtigungen, erteilen Sie entsprechend die Minimum an rechten müssen Sie die Aufgabe zu erledigen.  
  
 Zugriffswerte für Registrierungsberechtigungen werden von der Enumeration <xref:System.Security.Permissions.RegistryPermissionAccess> definiert. In der folgenden Tabelle werden die Member aufgeführt.  
  
|Wert|Beschreibung|  
|-----------|-----------------|  
|AllAccess|Erstellen Sie, lesen Sie und Schreiben Sie den Zugriff auf Registrierungsvariablen.|  
|Erstellen|Erstellen Sie den Zugriff auf Registrierungsvariablen.|  
|NoAccess|Kein Zugriff auf Registrierungsvariablen.|  
|Lesen|Lesezugriff auf Registrierungsvariablen.|  
|Write|Schreibzugriff auf Registrierungsvariablen.|  
  
 Die folgende Tabelle enthält Beispiele für Aufgaben im Zusammenhang mit der `My.Computer.Registry` Objekt.  
  
|Beschreibung|Siehe|  
|--------|---------|  
|Erstellen Sie einen Registrierungsschlüssel, und legen Sie dessen Wert|[Gewusst wie: Erstellen von Registrierungsschlüsseln und Festlegen ihrer Werte](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Löschen von Registrierungsschlüsseln|[Gewusst wie: Löschen von Registrierungsschlüsseln](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Lesen eines Werts aus einem Registrierungsschlüssel|[Gewusst wie: Lesen eines Werts aus einem Registrierungsschlüssel](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 In diesem Beispiel ruft den Wert `ThisSoftware` aus der `MyCompany` Unterschlüssel.  
  
 [!code-vb[VbVbalrMyRegistry#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.PerformanceData" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Writes a value to a registry key.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string keyName, string valueName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetValue(string keyName, string valueName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (keyName As String, valueName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : string * string * obj -&gt; unit" Usage="registryProxy.SetValue (keyName, valueName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyName">
          <see langword="String" />. Name of the key to be written to. Required.</param>
        <param name="valueName">
          <see langword="String" />. Name of the value to be written. Required.</param>
        <param name="value">
          <see langword="Object" />. Value to be written. Required.</param>
        <summary>Writes a value to a registry key.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der angegebene Schlüssel oder Wert nicht vorhanden ist, wird er erstellt.  
  
 Hier ist ein Beispiel für eine Aufgabe mit der `My.Computer.Registry.SetValue` Methode.  
  
|Beschreibung|Siehe|  
|--------|---------|  
|Legen Sie einen Wert in einem Registrierungsschlüssel|[Gewusst wie: Erstellen von Registrierungsschlüsseln und Festlegen ihrer Werte](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird den Wert `FontColor` auf "Rot" im Schlüssel `HKEY_LOCAL_MACHINE\Software\MyCompany\Preferences`.  
  
 [!code-vb[VbVbalrMyRegistry#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="Nothing" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> does not begin with a valid registry root.  -or-  <paramref name="valueName" /> is longer than the maximum length allowed (255 characters).</exception>
        <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.Win32.RegistryKey" /> is read-only and thus cannot be written to; for example, it is a root-level node, or it has not been opened with write access..</exception>
        <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or modify registry keys.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">den angegebene Registrierungsschlüssel zu ändern, wenn er vorhanden ist, oder der Registrierungsschlüssel erstellt, wenn sie nicht bereits vorhanden ist. Zugeordnete Enumerationen: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
        <altmember cref="T:Microsoft.Win32.RegistryValueKind" />
        <altmember cref="Overload:Microsoft.Win32.Registry.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string keyName, string valueName, object value, Microsoft.Win32.RegistryValueKind valueKind);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetValue(string keyName, string valueName, object value, valuetype Microsoft.Win32.RegistryValueKind valueKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (keyName As String, valueName As String, value As Object, valueKind As RegistryValueKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ value, Microsoft::Win32::RegistryValueKind valueKind);" />
      <MemberSignature Language="F#" Value="member this.SetValue : string * string * obj * Microsoft.Win32.RegistryValueKind -&gt; unit" Usage="registryProxy.SetValue (keyName, valueName, value, valueKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="valueKind" Type="Microsoft.Win32.RegistryValueKind" />
      </Parameters>
      <Docs>
        <param name="keyName">
          <see langword="String" />. Name of the key to be written to. Required.</param>
        <param name="valueName">
          <see langword="String" />. Name of the value to be written. Required.</param>
        <param name="value">
          <see langword="Object" />. Value to be written. Required.</param>
        <param name="valueKind">
          <see cref="T:Microsoft.Win32.RegistryValueKind" />. Required.</param>
        <summary>Writes a value to a registry key.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der angegebene Schlüssel oder Wert nicht vorhanden ist, wird er erstellt.  
  
 Hier ist ein Beispiel für eine Aufgabe mit der `My.Computer.Registry.SetValue` Methode.  
  
|Beschreibung|Siehe|  
|--------|---------|  
|Legen Sie einen Wert in einem Registrierungsschlüssel|[Gewusst wie: Erstellen von Registrierungsschlüsseln und Festlegen ihrer Werte](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird den Wert `FontColor` auf "Rot" im Schlüssel `HKEY_LOCAL_MACHINE\Software\MyCompany\Preferences`.  
  
 [!code-vb[VbVbalrMyRegistry#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="Nothing" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> does not begin with a valid registry root.  -or-  <paramref name="keyName" /> is longer than the maximum length allowed (255 characters).  -or-  The type of <paramref name="value" /> does not match the registry data type specified by <paramref name="valueKind" />, therefore the data cannot be converted properly.</exception>
        <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.Win32.RegistryKey" /> is read-only, and thus cannot be written to; for example, it is a root-level node, or it has not been opened with write access.</exception>
        <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or modify registry keys.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">den angegebene Registrierungsschlüssel zu ändern, wenn er vorhanden ist, oder der Registrierungsschlüssel erstellt, wenn sie nicht bereits vorhanden ist. Zugeordnete Enumerationen: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
        <altmember cref="T:Microsoft.Win32.RegistryValueKind" />
        <altmember cref="Overload:Microsoft.Win32.Registry.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="Users">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey Users { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey Users" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.Users" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Users As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ Users { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Users : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.Users" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <see cref="T:Microsoft.Win32.RegistryKey" /> type, which provides access to <see langword="HKEY_USERS" />.</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_USERS` wird hauptsächlich verwendet, um Standardeinstellungen für Einsteiger zu speichern.  
  
 Die <xref:System.Security.Permissions.RegistryPermission> Klasse, die in der <xref:System.Security.Permissions> -Namespace, den Zugriff auf Registrierungsvariablen steuert. Registrierungsvariablen sollten nicht an Speicherorten gespeichert werden, in denen Code ohne <xref:System.Security.Permissions.RegistryPermission> darauf zugreifen kann. Beim Gewähren von Berechtigungen, erteilen Sie entsprechend die Minimum an rechten müssen Sie die Aufgabe zu erledigen.  
  
 Zugriffswerte für Registrierungsberechtigungen werden von der Enumeration <xref:System.Security.Permissions.RegistryPermissionAccess> definiert. In der folgenden Tabelle werden die Member aufgeführt.  
  
|Wert|Zugriff auf Registrierungsvariablen|  
|-----------|----------------------------------|  
|AllAccess|Erstellen, Lesen und Schreiben|  
|Erstellen|Erstellen|  
|NoAccess|Kein Zugriff.|  
|Lesen|Lesen|  
|Write|Write|  
  
 Die folgende Tabelle enthält Beispiele für Aufgaben im Zusammenhang mit der `My.Computer.Registry` Objekt.  
  
|**Aktion**|**Weitere Informationen finden Sie unter**|  
|------------|-------------|  
|Erstellen Sie einen Registrierungsschlüssel, und legen Sie dessen Wert|[Gewusst wie: Erstellen von Registrierungsschlüsseln und Festlegen ihrer Werte](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Löschen von Registrierungsschlüsseln|[Gewusst wie: Löschen von Registrierungsschlüsseln](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Lesen eines Werts aus einem Registrierungsschlüssel|[Gewusst wie: Lesen eines Werts aus einem Registrierungsschlüssel](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 In diesem Beispiel wird gezählt und zeigt die Anzahl der Werte in den Registrierungsschlüssel.  
  
 [!code-vb[VbVbalrMyRegistry#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.Users" />
      </Docs>
    </Member>
  </Members>
</Type>