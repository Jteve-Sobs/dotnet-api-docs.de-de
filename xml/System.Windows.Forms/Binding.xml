<Type Name="Binding" FullName="System.Windows.Forms.Binding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f2d51b844dd50f8952fc34c4ef9eeeb450106c9a" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86783816" /></Metadata><TypeSignature Language="C#" Value="public class Binding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Binding extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Binding" />
  <TypeSignature Language="VB.NET" Value="Public Class Binding" />
  <TypeSignature Language="C++ CLI" Value="public ref class Binding" />
  <TypeSignature Language="F#" Value="type Binding = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ListBindingConverter))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ListBindingConverter))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt die einfache Bindung zwischen dem Eigenschaftswert eines Objekts und dem Eigenschaftswert eines Steuerelements dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die- <xref:System.Windows.Forms.Binding> Klasse, um eine einfache Bindung zwischen der-Eigenschaft eines-Steuer Elements und entweder der-Eigenschaft eines-Objekts oder der-Eigenschaft des aktuellen-Objekts in einer Liste von-Objekten zu erstellen und zu verwalten.  
  
 Als Beispiel für den ersten Fall können Sie die- <xref:System.Windows.Forms.Control.Text%2A> Eigenschaft eines-Steuer Elements <xref:System.Windows.Forms.TextBox> an die- `FirstName` Eigenschaft eines- `Customer` Objekts binden. Als Beispiel für den zweiten Fall können Sie die- <xref:System.Windows.Forms.Control.Text%2A> Eigenschaft eines-Steuer Elements <xref:System.Windows.Forms.TextBox> an die- `FirstName` Eigenschaft eines binden, <xref:System.Data.DataTable> das Kunden enthält.  
  
 Die <xref:System.Windows.Forms.Binding> -Klasse ermöglicht es Ihnen auch, Werte für die Anzeige durch das <xref:System.Windows.Forms.Binding.Format> -Ereignis zu formatieren und formatierte Werte durch das- <xref:System.Windows.Forms.Binding.Parse> Ereignis abzurufen.  
  
 Wenn Sie eine- <xref:System.Windows.Forms.Binding> Instanz mit einem <xref:System.Windows.Forms.Binding.%23ctor%2A> Konstruktor erstellen, müssen Sie drei Elemente angeben:  
  
-   Der Name der Steuerelement Eigenschaft, an die die Bindung erfolgen soll.  
  
-   Die Datenquelle.  
  
-   Der Navigationspfad, der zu einer Liste oder Eigenschaft in der Datenquelle aufgelöst wird. Der Navigationspfad wird auch verwendet, um die-Eigenschaft des-Objekts zu erstellen <xref:System.Windows.Forms.Binding.BindingMemberInfo%2A> .  
  
 Zuerst müssen Sie den Namen der Steuerelement Eigenschaft angeben, an die Sie die Daten binden möchten. Wenn Sie beispielsweise Daten in einem-Steuerelement anzeigen möchten <xref:System.Windows.Forms.TextBox> , geben Sie die- <xref:System.Windows.Forms.TextBoxBase.Text%2A> Eigenschaft an.  
  
 Zweitens können Sie eine Instanz einer beliebigen Klasse in der folgenden Tabelle als Datenquelle angeben.  
  
|BESCHREIBUNG|C#-Beispiel|  
|-----------------|-----------------|  
|Eine beliebige Klasse, die <xref:System.ComponentModel.IBindingList> oder implementiert <xref:System.ComponentModel.ITypedList> . Dazu zählen die folgenden: <xref:System.Data.DataSet> , <xref:System.Data.DataTable> , <xref:System.Data.DataView> oder <xref:System.Data.DataViewManager> .|`DataSet ds = new DataSet("myDataSet");`|  
|Eine beliebige Klasse, die implementiert, <xref:System.Collections.IList> um eine indizierte Auflistung von-Objekten zu erstellen. Die Auflistung muss vor dem Erstellen von erstellt und ausgefüllt werden <xref:System.Windows.Forms.Binding> . Die Objekte in der Liste müssen alle denselben Typ aufweisen. Andernfalls wird eine Ausnahme ausgelöst.|`ArrayList ar1 = new ArrayList;  Customer1 cust1 = new Customer("Louis");  ar1.Add(cust1);`|  
|Eine stark typisierte stark typisierte- <xref:System.Collections.IList> Objekte|`Customer [] custList = new Customer[3];`|  
  
 Drittens müssen Sie den Navigationspfad angeben, bei dem es sich um eine leere Zeichenfolge (""), einen einzelnen Eigenschaften Namen oder eine durch Punkte getrennte Hierarchie von Namen handeln kann. Wenn Sie den Navigationspfad auf eine leere Zeichenfolge festlegen, <xref:System.Object.ToString%2A> wird die-Methode für das zugrunde liegende Datenquellen Objekt aufgerufen.  
  
 Wenn es sich bei der Datenquelle um eine handelt <xref:System.Data.DataTable> , die mehrere Objekte enthalten kann <xref:System.Data.DataColumn> , muss der Navigationspfad zum Auflösen in eine bestimmte Spalte verwendet werden.  
  
> [!NOTE]
>  Wenn es sich bei der Daten <xref:System.Data.DataSet> Quelle <xref:System.Data.DataViewManager> um, oder handelt <xref:System.Data.DataTable> , binden Sie tatsächlich an eine <xref:System.Data.DataView> . Folglich sind die gebundenen Zeilen tatsächlich- <xref:System.Data.DataRowView> Objekte.  
  
 Ein durch Punkte getrennter Navigationspfad ist erforderlich, wenn die Datenquelle auf ein Objekt festgelegt ist, das mehrere <xref:System.Data.DataTable> Objekte enthält ( <xref:System.Data.DataSet> z <xref:System.Data.DataViewManager> . b. oder). Sie können auch einen durch Punkte getrennten Navigationspfad verwenden, wenn Sie eine Bindung an ein Objekt durchführen, dessen Eigenschaften Verweise auf andere Objekte zurückgeben (z. b. eine Klasse mit Eigenschaften, die andere Klassen Objekte zurückgeben). Die folgenden Navigationspfade beschreiben z. b. gültige Datenfelder:  
  
-   "Size. Height"  
  
-   "Suppliers. CompanyName"  
  
-   "Regions. regionsToCustomers. CustomerFirstName"  
  
-   "Regions. regionsToCustomers. CustomersToOrders. orderstodetails. Menge"  
  
 Jeder Member des Pfads kann entweder eine Eigenschaft zurückgeben, die zu einem einzelnen Wert (z. b. eine ganze Zahl) oder eine Werteliste (z. b. ein Zeichen folgen Array) aufgelöst wird. Obwohl jedes Element im Pfad eine Liste oder Eigenschaft sein kann, muss der endgültige Member in eine Eigenschaft aufgelöst werden. Jeder Member baut auf dem vorherigen Member auf: "Size. Height" wird zur- <xref:System.Drawing.Size.Height%2A> Eigenschaft für das aktuelle-Element <xref:System.Drawing.Size> aufgelöst. "Regions. regionsToCustomers. CustomerFirstName" wird in den Vornamen des aktuellen Kunden aufgelöst, wobei der Kunde einer der Kunden für die aktuelle Region ist.  
  
 <xref:System.Data.DataRelation>Gibt eine Liste von Werten zurück, indem eine <xref:System.Data.DataTable> mit einer Sekunde <xref:System.Data.DataTable> in einem verknüpft wird <xref:System.Data.DataSet> . Wenn die <xref:System.Data.DataSet> - <xref:System.Data.DataRelation> Objekte enthält, können Sie den Datenmember als <xref:System.Data.DataTable.TableName%2A> , gefolgt von <xref:System.Data.DataRelation.RelationName%2A> , und dann ein angeben <xref:System.Data.DataColumn.ColumnName%2A> . Wenn beispielsweise der <xref:System.Data.DataTable> Name "Suppliers" den Namen " <xref:System.Data.DataRelation> suppliers2products" enthält, könnte der Datenmember "Suppliers. suppliers2products. ProductName" lauten.  
  
 Die Datenquelle kann aus einem Satz verwandter Klassen bestehen. Stellen Sie sich beispielsweise einen Satz von Klassen vor, der Solarsysteme katalogisiert. Die Klasse mit dem Namen `System` enthält eine Eigenschaft mit dem Namen `Stars` , die eine Auflistung von Objekten zurückgibt `Star` . Jedes `Star` -Objekt verfügt über die `Name` Eigenschaften und sowie über `Mass` eine `Planets` Eigenschaft, die eine Auflistung von-Objekten zurückgibt `Planet` . In diesem System verfügt jeder Planet auch über die `Mass` -Eigenschaft und die-Eigenschaft `Name` . Jedes- `Planet` Objekt verfügt über eine `Moons` -Eigenschaft, die eine Auflistung von `Moon` -Objekten zurückgibt, von denen jedes auch über `Name` -und- `Mass` Eigenschaften verfügt. Wenn Sie ein- `System` Objekt als Datenquelle angeben, können Sie Folgendes als Datenmember angeben:  
  
-   "Stars.Name"  
  
-   "Stars. Mass"  
  
-   "Stars.Planets.Name"  
  
-   "Stars. Planets. Mass"  
  
-   "Stars.Planets.Moons.Name"  
  
-   "Stars. Planets. Monde. Mass"  
  
 Steuerelemente, die einfach gebunden werden können, sind eine Auflistung von- <xref:System.Windows.Forms.Binding> Objekten in einer <xref:System.Windows.Forms.ControlBindingsCollection> , auf die Sie über die-Eigenschaft des-Steuer Elements zugreifen können <xref:System.Windows.Forms.Control.DataBindings%2A> . Sie fügen der Auflistung ein hinzu <xref:System.Windows.Forms.Binding> , indem Sie die- <xref:System.Windows.Forms.ControlBindingsCollection.Add%2A> Methode aufrufen und dadurch eine Eigenschaft des Steuer Elements an eine Eigenschaft eines Objekts binden (oder an eine Eigenschaft des aktuellen Objekts in einer Liste).  
  
 Sie können eine einfache Bindung an ein beliebiges Objekt ausführen, das von der- <xref:System.Windows.Forms.Control?displayProperty=nameWithType> Klasse abgeleitet ist, beispielsweise die folgenden Windows-Steuerelemente:  
  
-   <xref:System.Windows.Forms.Button>  
  
-   <xref:System.Windows.Forms.CheckBox>  
  
-   <xref:System.Windows.Forms.CheckedListBox>  
  
-   <xref:System.Windows.Forms.ComboBox>  
  
-   <xref:System.Windows.Forms.DateTimePicker>  
  
-   <xref:System.Windows.Forms.DomainUpDown>  
  
-   <xref:System.Windows.Forms.GroupBox>  
  
-   <xref:System.Windows.Forms.HScrollBar>  
  
-   <xref:System.Windows.Forms.Label>  
  
-   <xref:System.Windows.Forms.LinkLabel>  
  
-   <xref:System.Windows.Forms.ListBox>  
  
-   <xref:System.Windows.Forms.ListView>  
  
-   <xref:System.Windows.Forms.MonthCalendar>  
  
-   <xref:System.Windows.Forms.NumericUpDown>  
  
-   <xref:System.Windows.Forms.PictureBox>  
  
-   <xref:System.Windows.Forms.ProgressBar>  
  
-   <xref:System.Windows.Forms.RadioButton>  
  
-   <xref:System.Windows.Forms.RichTextBox>  
  
-   <xref:System.Windows.Forms.ScrollBar>  
  
-   <xref:System.Windows.Forms.StatusBar>  
  
-   <xref:System.Windows.Forms.TextBox>  
  
-   <xref:System.Windows.Forms.TreeView>  
  
-   <xref:System.Windows.Forms.VScrollBar>  
  
> [!NOTE]
>  Nur die <xref:System.Windows.Forms.ListControl.SelectedValue%2A> -Eigenschaft des <xref:System.Windows.Forms.ComboBox> Steuer Elements, <xref:System.Windows.Forms.CheckedListBox> und <xref:System.Windows.Forms.ListBox> ist einfach gebunden.  
  
 Die- <xref:System.Windows.Forms.BindingManagerBase> Klasse ist eine abstrakte Klasse, die alle- <xref:System.Windows.Forms.Binding> Objekte für eine bestimmte Datenquelle und einen Datenmember verwaltet. Klassen, die von abgeleitet <xref:System.Windows.Forms.BindingManagerBase> werden, sind die <xref:System.Windows.Forms.CurrencyManager> <xref:System.Windows.Forms.PropertyManager> Klassen und. Wie eine <xref:System.Windows.Forms.Binding> verwaltet wird, hängt davon ab, ob es <xref:System.Windows.Forms.Binding> sich um eine Listen Bindung oder eine Eigenschaften Bindung handelt. Wenn es sich z. b. um eine Listen Bindung handelt, können Sie verwenden, <xref:System.Windows.Forms.BindingManagerBase> um einen <xref:System.Windows.Forms.BindingManagerBase.Position%2A> in der Liste anzugeben <xref:System.Windows.Forms.BindingManagerBase.Position%2A> . der bestimmt daher, welches Element (aus allen Elementen in der Liste) tatsächlich an ein Steuerelement gebunden ist. Verwenden Sie, um die entsprechende zurückzugeben <xref:System.Windows.Forms.BindingManagerBase> <xref:System.Windows.Forms.BindingContext> .  
  
 Um einer Gruppe von Steuerelementen, die an denselben gebunden sind, eine neue Zeile hinzuzufügen <xref:System.Windows.Forms.Binding.DataSource%2A> , verwenden Sie die- <xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> Methode der- <xref:System.Windows.Forms.BindingManagerBase> Klasse. Verwenden Sie die- <xref:System.Windows.Forms.BindingContext.Item%2A> Eigenschaft der- <xref:System.Windows.Forms.BindingContext> Klasse, um die entsprechende zurückzugeben <xref:System.Windows.Forms.CurrencyManager> . Um die neue Zeile mit Escapezeichen zu versehen, verwenden Sie die- <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein Windows Form mit mehreren Steuerelementen erstellt, die eine einfache Datenbindung veranschaulichen. Im Beispiel wird ein <xref:System.Data.DataSet> mit zwei Tabellen mit den Namen `Customers` und `Orders` und einem mit dem <xref:System.Data.DataRelation> Namen erstellt `custToOrders` . Vier Steuerelemente (ein-Steuerelement <xref:System.Windows.Forms.DateTimePicker> und drei-Steuer <xref:System.Windows.Forms.TextBox> Elemente) sind Daten an Spalten in den Tabellen gebunden. Für jedes Steuerelement wird das Beispiel erstellt und dem- <xref:System.Windows.Forms.Binding> Steuerelement über die-Eigenschaft hinzugefügt <xref:System.Windows.Forms.Control.DataBindings%2A> . Im Beispiel wird ein <xref:System.Windows.Forms.BindingManagerBase> für jede Tabelle über das Formular zurückgegeben <xref:System.Windows.Forms.BindingContext> . Vier Steuer <xref:System.Windows.Forms.Button> Elemente erhöhen oder verringern die- <xref:System.Windows.Forms.BindingManagerBase.Position%2A> Eigenschaft für die- <xref:System.Windows.Forms.BindingManagerBase> Objekte.  
  
 [!code-cpp[Classic Binding Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding Example/CS/source.cs#1)]
 [!code-vb[Classic Binding Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding Example/VB/source.vb#1)]  
 
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.BindingContext" />
    <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
    <altmember cref="T:System.Windows.Forms.ComboBox" />
    <altmember cref="T:System.Windows.Forms.DataGrid" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Binding" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string propertyName, object dataSource, string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, object dataSource, string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, dataSource As Object, dataMember As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ propertyName, System::Object ^ dataSource, System::String ^ dataMember);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Binding : string * obj * string -&gt; System.Windows.Forms.Binding" Usage="new System.Windows.Forms.Binding (propertyName, dataSource, dataMember)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Der Name der Steuerelementeigenschaft für die Bindung.</param>
        <param name="dataSource">Ein <see cref="T:System.Object" />, das die Datenquelle darstellt.</param>
        <param name="dataMember">Die Eigenschaft oder Liste, an die die Bindung erfolgen soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Binding" />-Klasse, die eine einfache Bindung der angegebenen Steuerelementeigenschaft an den angegebenen Datenmember der Datenquelle herstellt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können für die Datenquelle eine Instanz einer der folgenden Klassen angeben:  
  
-   <xref:System.Data.DataSet>  
  
-   <xref:System.Data.DataTable>  
  
-   <xref:System.Data.DataView>  
  
-   <xref:System.Data.DataViewManager>  
  
-   <xref:System.Windows.Forms.BindingSource>  
  
-   Jede Klasse, die die- <xref:System.Collections.IList> Schnittstelle implementiert.  
  
-   Beliebige Klasse  
  
 <xref:System.Windows.Forms.Binding>Weitere Informationen zum Erstellen der Zeichenfolge finden Sie in der-Klasse `dataMember` .  
  
 Wenn Sie eine Bindung mit der-Eigenschaft eines Steuer Elements erstellen, werden die <xref:System.Windows.Forms.Binding> vom gebundenen Steuerelement verfügbar gemachten Ereignisse von der neuen überprüft und zwei bestimmten Ereignissen angefügt:  
  
-   <xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>  
  
-   Ein Ereignis namens *propertyName* `Changed` (z. b. <xref:System.Windows.Forms.Control.BackColorChanged?displayProperty=nameWithType> )  
  
 Wenn Sie versuchen, eine Bindung an eine Eigenschaft herzustellen, die nicht vorhanden ist, wird eine ausgelöst, <xref:System.ArgumentException> Wenn der <xref:System.Windows.Forms.Binding> -Auflistung des-Steuer Elements hinzugefügt wird <xref:System.Windows.Forms.Control.DataBindings%2A?displayProperty=nameWithType> .  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein- <xref:System.Windows.Forms.TextBox> Steuerelement an eine Tabellenspalte in einer mit dem <xref:System.Data.DataSet> Namen gebunden `myDataSet` . Für das Beispiel ist es erforderlich, dass Sie `myDataSet` im Deklarations Abschnitt des Moduls deklariert haben.  
  
 [!code-cpp[Classic Binding.Binding Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.Binding Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.Binding Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.Binding Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.Binding Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.Binding Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><paramref name="propertyName" /> ist weder eine gültige Eigenschaft eines Steuerelements noch eine leere Zeichenfolge ("").</exception>
        <exception cref="T:System.ArgumentException">Die von <paramref name="propertyName" /> angegebene Eigenschaft ist im Steuerelement nicht vorhanden.</exception>
        <altmember cref="T:System.Windows.Forms.BindingsCollection" />
        <altmember cref="T:System.Windows.Forms.CurrencyManager" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string propertyName, object dataSource, string dataMember, bool formattingEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, object dataSource, string dataMember, bool formattingEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, dataSource As Object, dataMember As String, formattingEnabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ propertyName, System::Object ^ dataSource, System::String ^ dataMember, bool formattingEnabled);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Binding : string * obj * string * bool -&gt; System.Windows.Forms.Binding" Usage="new System.Windows.Forms.Binding (propertyName, dataSource, dataMember, formattingEnabled)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSource" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataMember" Type="System.String" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formattingEnabled" Type="System.Boolean" Index="3" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="propertyName">Der Name der Steuerelementeigenschaft für die Bindung.</param>
        <param name="dataSource">Ein <see cref="T:System.Object" />, das die Datenquelle darstellt.</param>
        <param name="dataMember">Die Eigenschaft oder Liste, an die die Bindung erfolgen soll.</param>
        <param name="formattingEnabled"><see langword="true" />, um die angezeigten Daten zu formatieren, andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Binding" />-Klasse. die die angegebene Steuerelementeigenschaft an den angegebenen Datenmember der Datenquelle bindet und optional das Anwenden von Formatierung aktiviert.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Die von <paramref name="propertyName" /> angegebene Eigenschaft ist im Steuerelement nicht vorhanden.  
  
- oder - 
Die angegebene Eigenschaft ist schreibgeschützt.</exception>
        <exception cref="T:System.Exception">Das Formatieren ist deaktiviert, und <paramref name="propertyName" /> ist weder eine gültige Eigenschaft eines Steuerelements noch eine leere Zeichenfolge ("").</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string propertyName, object dataSource, string dataMember, bool formattingEnabled, System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, object dataSource, string dataMember, bool formattingEnabled, valuetype System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String,System.Boolean,System.Windows.Forms.DataSourceUpdateMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, dataSource As Object, dataMember As String, formattingEnabled As Boolean, dataSourceUpdateMode As DataSourceUpdateMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ propertyName, System::Object ^ dataSource, System::String ^ dataMember, bool formattingEnabled, System::Windows::Forms::DataSourceUpdateMode dataSourceUpdateMode);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Binding : string * obj * string * bool * System.Windows.Forms.DataSourceUpdateMode -&gt; System.Windows.Forms.Binding" Usage="new System.Windows.Forms.Binding (propertyName, dataSource, dataMember, formattingEnabled, dataSourceUpdateMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSource" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataMember" Type="System.String" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formattingEnabled" Type="System.Boolean" Index="3" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSourceUpdateMode" Type="System.Windows.Forms.DataSourceUpdateMode" Index="4" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="propertyName">Der Name der Steuerelementeigenschaft für die Bindung.</param>
        <param name="dataSource">Ein <see cref="T:System.Object" />, das die Datenquelle darstellt.</param>
        <param name="dataMember">Die Eigenschaft oder Liste, an die die Bindung erfolgen soll.</param>
        <param name="formattingEnabled"><see langword="true" />, um die angezeigten Daten zu formatieren, andernfalls <see langword="false" />.</param>
        <param name="dataSourceUpdateMode">Einer der <see cref="T:System.Windows.Forms.DataSourceUpdateMode" />-Werte.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Binding" />-Klasse. die die angegebene Steuerelementeigenschaft an den angegebenen Datenmember der angegebenen Datenquelle bindet. Aktiviert optional die Formatierung und gibt Werte entsprechend der angegebenen Aktualisierungseinstellung an die Datenquelle weiter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können für die Datenquelle eine Instanz einer der folgenden Klassen angeben:  
  
-   <xref:System.Data.DataSet>  
  
-   <xref:System.Data.DataTable>  
  
-   <xref:System.Data.DataView>  
  
-   <xref:System.Data.DataViewManager>  
  
-   <xref:System.Windows.Forms.BindingSource>  
  
-   Jede Klasse, die die- <xref:System.Collections.IList> Schnittstelle implementiert.  
  
-   Beliebige Klasse  
  
 <xref:System.Windows.Forms.Binding>Weitere Informationen zum Erstellen der Zeichenfolge finden Sie in der-Klasse `dataMember` .  
  
 Wenn Sie eine Bindung mit der-Eigenschaft eines Steuer Elements erstellen, werden die <xref:System.Windows.Forms.Binding> vom gebundenen Steuerelement verfügbar gemachten Ereignisse von der neuen überprüft und zwei bestimmten Ereignissen angefügt:  
  
-   <xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>.  
  
-   Ein Ereignis namens *propertyName* `Changed` (z. b. <xref:System.Windows.Forms.Control.BackColorChanged?displayProperty=nameWithType> )  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die von <paramref name="propertyName" /> angegebene Eigenschaft ist im Steuerelement nicht vorhanden.  
  
- oder - 
Die angegebene Datenquelle, der angegebene Datenmember oder die angegebene Steuerelementeigenschaft sind einer anderen Bindung in der Auflistung zugeordnet.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string propertyName, object dataSource, string dataMember, bool formattingEnabled, System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, object dataSource, string dataMember, bool formattingEnabled, valuetype System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String,System.Boolean,System.Windows.Forms.DataSourceUpdateMode,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, dataSource As Object, dataMember As String, formattingEnabled As Boolean, dataSourceUpdateMode As DataSourceUpdateMode, nullValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ propertyName, System::Object ^ dataSource, System::String ^ dataMember, bool formattingEnabled, System::Windows::Forms::DataSourceUpdateMode dataSourceUpdateMode, System::Object ^ nullValue);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Binding : string * obj * string * bool * System.Windows.Forms.DataSourceUpdateMode * obj -&gt; System.Windows.Forms.Binding" Usage="new System.Windows.Forms.Binding (propertyName, dataSource, dataMember, formattingEnabled, dataSourceUpdateMode, nullValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSource" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataMember" Type="System.String" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formattingEnabled" Type="System.Boolean" Index="3" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSourceUpdateMode" Type="System.Windows.Forms.DataSourceUpdateMode" Index="4" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="nullValue" Type="System.Object" Index="5" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="propertyName">Der Name der Steuerelementeigenschaft für die Bindung.</param>
        <param name="dataSource">Ein <see cref="T:System.Object" />, das die Datenquelle darstellt.</param>
        <param name="dataMember">Die Eigenschaft oder Liste, an die die Bindung erfolgen soll.</param>
        <param name="formattingEnabled"><see langword="true" />, um die angezeigten Daten zu formatieren, andernfalls <see langword="false" />.</param>
        <param name="dataSourceUpdateMode">Einer der <see cref="T:System.Windows.Forms.DataSourceUpdateMode" />-Werte.</param>
        <param name="nullValue">Das <see cref="T:System.Object" />, das auf die gebundene Steuerelementeigenschaft angewendet werden soll, wenn der Wert der Datenquelle <see cref="T:System.DBNull" /> ist.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Binding" />-Klasse. die die angegebene Steuerelementeigenschaft an den angegebenen Datenmember der angegebenen Datenquelle bindet. Aktiviert optional die Formatierung, gibt Werte entsprechend der angegebenen Aktualisierungseinstellung an die Datenquelle weiter und legt die Eigenschaft auf den angegebenen Wert fest, wenn von der Datenquelle ein <see cref="T:System.DBNull" /> zurückgegeben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können für die Datenquelle eine Instanz einer der folgenden Klassen angeben:  
  
-   <xref:System.Data.DataSet>  
  
-   <xref:System.Data.DataTable>  
  
-   <xref:System.Data.DataView>  
  
-   <xref:System.Data.DataViewManager>  
  
-   <xref:System.Windows.Forms.BindingSource>  
  
-   Jede Klasse, die die- <xref:System.Collections.IList> Schnittstelle implementiert.  
  
-   Beliebige Klasse  
  
 <xref:System.Windows.Forms.Binding>Weitere Informationen zum Erstellen der Zeichenfolge finden Sie in der-Klasse `dataMember` .  
  
 Wenn Sie eine Bindung mit der-Eigenschaft eines Steuer Elements erstellen, werden die <xref:System.Windows.Forms.Binding> vom gebundenen Steuerelement verfügbar gemachten Ereignisse von der neuen überprüft und zwei bestimmten Ereignissen angefügt:  
  
-   <xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>  
  
-   Ein Ereignis namens *propertyName* `Changed` (z. b. <xref:System.Windows.Forms.Control.BackColorChanged?displayProperty=nameWithType> )  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die von <paramref name="propertyName" /> angegebene Eigenschaft ist im Steuerelement nicht vorhanden.  
  
- oder - 
Die angegebene Datenquelle, der angegebene Datenmember oder die angegebene Steuerelementeigenschaft sind einer anderen Bindung in der Auflistung zugeordnet.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string propertyName, object dataSource, string dataMember, bool formattingEnabled, System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue, string formatString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, object dataSource, string dataMember, bool formattingEnabled, valuetype System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue, string formatString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String,System.Boolean,System.Windows.Forms.DataSourceUpdateMode,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, dataSource As Object, dataMember As String, formattingEnabled As Boolean, dataSourceUpdateMode As DataSourceUpdateMode, nullValue As Object, formatString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ propertyName, System::Object ^ dataSource, System::String ^ dataMember, bool formattingEnabled, System::Windows::Forms::DataSourceUpdateMode dataSourceUpdateMode, System::Object ^ nullValue, System::String ^ formatString);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Binding : string * obj * string * bool * System.Windows.Forms.DataSourceUpdateMode * obj * string -&gt; System.Windows.Forms.Binding" Usage="new System.Windows.Forms.Binding (propertyName, dataSource, dataMember, formattingEnabled, dataSourceUpdateMode, nullValue, formatString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSource" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataMember" Type="System.String" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formattingEnabled" Type="System.Boolean" Index="3" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSourceUpdateMode" Type="System.Windows.Forms.DataSourceUpdateMode" Index="4" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="nullValue" Type="System.Object" Index="5" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formatString" Type="System.String" Index="6" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="propertyName">Der Name der Steuerelementeigenschaft für die Bindung.</param>
        <param name="dataSource">Ein <see cref="T:System.Object" />, das die Datenquelle darstellt.</param>
        <param name="dataMember">Die Eigenschaft oder Liste, an die die Bindung erfolgen soll.</param>
        <param name="formattingEnabled"><see langword="true" />, um die angezeigten Daten zu formatieren, andernfalls <see langword="false" />.</param>
        <param name="dataSourceUpdateMode">Einer der <see cref="T:System.Windows.Forms.DataSourceUpdateMode" />-Werte.</param>
        <param name="nullValue">Das <see cref="T:System.Object" />, das auf die gebundene Steuerelementeigenschaft angewendet werden soll, wenn der Wert der Datenquelle <see cref="T:System.DBNull" /> ist.</param>
        <param name="formatString">Ein oder mehrere Formatbezeichnerzeichen, die angeben, wie ein Wert angezeigt werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Binding" />-Klasse. die die angegebene Steuerelementeigenschaft an den angegebenen Datenmember der angegebenen Datenquelle bindet. Aktiviert optional die Formatierung mit der angegebenen Formatzeichenfolge, gibt Werte entsprechend der angegebenen Aktualisierungseinstellung an die Datenquelle weiter und legt die Eigenschaft auf den angegebenen Wert fest, wenn von der Datenquelle ein <see cref="T:System.DBNull" /> zurückgegeben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können für die Datenquelle eine Instanz einer der folgenden Klassen angeben:  
  
-   <xref:System.Data.DataSet>  
  
-   <xref:System.Data.DataTable>  
  
-   <xref:System.Data.DataView>  
  
-   <xref:System.Data.DataViewManager>  
  
-   <xref:System.Windows.Forms.BindingSource>  
  
-   Jede Klasse, die die- <xref:System.Collections.IList> Schnittstelle implementiert.  
  
-   Beliebige Klasse  
  
 <xref:System.Windows.Forms.Binding>Weitere Informationen zum Erstellen der Zeichenfolge finden Sie in der-Klasse `dataMember` .  
  
 Wenn Sie eine Bindung mit der-Eigenschaft eines Steuer Elements erstellen, werden die <xref:System.Windows.Forms.Binding> vom gebundenen Steuerelement verfügbar gemachten Ereignisse von der neuen überprüft und zwei bestimmten Ereignissen angefügt:  
  
-   <xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>  
  
-   Ein Ereignis namens *propertyName* `Changed` (z. b. <xref:System.Windows.Forms.Control.BackColorChanged?displayProperty=nameWithType> )  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die von <paramref name="propertyName" /> angegebene Eigenschaft ist im Steuerelement nicht vorhanden.  
  
- oder - 
Die angegebene Datenquelle, der angegebene Datenmember oder die angegebene Steuerelementeigenschaft sind einer anderen Bindung in der Auflistung zugeordnet.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string propertyName, object dataSource, string dataMember, bool formattingEnabled, System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue, string formatString, IFormatProvider formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, object dataSource, string dataMember, bool formattingEnabled, valuetype System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue, string formatString, class System.IFormatProvider formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String,System.Boolean,System.Windows.Forms.DataSourceUpdateMode,System.Object,System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, dataSource As Object, dataMember As String, formattingEnabled As Boolean, dataSourceUpdateMode As DataSourceUpdateMode, nullValue As Object, formatString As String, formatInfo As IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ propertyName, System::Object ^ dataSource, System::String ^ dataMember, bool formattingEnabled, System::Windows::Forms::DataSourceUpdateMode dataSourceUpdateMode, System::Object ^ nullValue, System::String ^ formatString, IFormatProvider ^ formatInfo);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Binding : string * obj * string * bool * System.Windows.Forms.DataSourceUpdateMode * obj * string * IFormatProvider -&gt; System.Windows.Forms.Binding" Usage="new System.Windows.Forms.Binding (propertyName, dataSource, dataMember, formattingEnabled, dataSourceUpdateMode, nullValue, formatString, formatInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSource" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataMember" Type="System.String" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formattingEnabled" Type="System.Boolean" Index="3" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSourceUpdateMode" Type="System.Windows.Forms.DataSourceUpdateMode" Index="4" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="nullValue" Type="System.Object" Index="5" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formatString" Type="System.String" Index="6" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formatInfo" Type="System.IFormatProvider" Index="7" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="propertyName">Der Name der Steuerelementeigenschaft für die Bindung.</param>
        <param name="dataSource">Ein <see cref="T:System.Object" />, das die Datenquelle darstellt.</param>
        <param name="dataMember">Die Eigenschaft oder Liste, an die die Bindung erfolgen soll.</param>
        <param name="formattingEnabled"><see langword="true" />, um die angezeigten Daten zu formatieren, andernfalls <see langword="false" />.</param>
        <param name="dataSourceUpdateMode">Einer der <see cref="T:System.Windows.Forms.DataSourceUpdateMode" />-Werte.</param>
        <param name="nullValue">Das <see cref="T:System.Object" />, das auf die gebundene Steuerelementeigenschaft angewendet werden soll, wenn der Wert der Datenquelle <see cref="T:System.DBNull" /> ist.</param>
        <param name="formatString">Ein oder mehrere Formatbezeichnerzeichen, die angeben, wie ein Wert angezeigt werden soll.</param>
        <param name="formatInfo">Eine Implementierung von <see cref="T:System.IFormatProvider" /> zum Überschreiben des Standardverhaltens.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Binding" />-Klassemit der angegebene Steuerelementeigenschaft für den angegebenen Datenmember der angegebenen Datenquelle. Aktiviert optional die Formatierung mit der angegebenen Formatzeichenfolge, gibt Werte entsprechend der angegebenen Aktualisierungseinstellung an die Datenquelle weiter, legt die Eigenschaft auf den angegebenen Wert fest, wenn von der Datenquelle ein <see cref="T:System.DBNull" /> zurückgegeben wird, und legt den angegebenen Formatanbieter fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können für die Datenquelle eine Instanz einer der folgenden Klassen angeben:  
  
-   <xref:System.Data.DataSet>  
  
-   <xref:System.Data.DataTable>  
  
-   <xref:System.Data.DataView>  
  
-   <xref:System.Data.DataViewManager>  
  
-   <xref:System.Windows.Forms.BindingSource>  
  
-   Jede Klasse, die die- <xref:System.Collections.IList> Schnittstelle implementiert.  
  
-   Beliebige Klasse  
  
 <xref:System.Windows.Forms.Binding>Weitere Informationen zum Erstellen der Zeichenfolge finden Sie in der-Klasse `dataMember` .  
  
 Wenn Sie eine Bindung mit der-Eigenschaft eines Steuer Elements erstellen, werden die <xref:System.Windows.Forms.Binding> vom gebundenen Steuerelement verfügbar gemachten Ereignisse von der neuen überprüft und zwei bestimmten Ereignissen angefügt:  
  
-   <xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>  
  
-   Ein Ereignis namens *propertyName* `Changed` (z. b. <xref:System.Windows.Forms.Control.BackColorChanged?displayProperty=nameWithType> )  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die von <paramref name="propertyName" /> angegebene Eigenschaft ist im Steuerelement nicht vorhanden.  
  
- oder - 
Die angegebene Datenquelle, der angegebene Datenmember oder die angegebene Steuerelementeigenschaft sind einer anderen Bindung in der Auflistung zugeordnet.</exception>
      </Docs>
    </Member>
    <Member MemberName="BindableComponent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IBindableComponent BindableComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IBindableComponent BindableComponent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.BindableComponent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindableComponent As IBindableComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IBindableComponent ^ BindableComponent { System::Windows::Forms::IBindableComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindableComponent : System.Windows.Forms.IBindableComponent" Usage="System.Windows.Forms.Binding.BindableComponent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IBindableComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Steuerelement ab, dem das <see cref="T:System.Windows.Forms.Binding" /> zugeordnet ist.</summary>
        <value>Die <see cref="T:System.Windows.Forms.IBindableComponent" />, die dem <see cref="T:System.Windows.Forms.Binding" /> zugeordnet ist.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingComplete">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingCompleteEventHandler BindingComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingCompleteEventHandler BindingComplete" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Binding.BindingComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BindingComplete As BindingCompleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingCompleteEventHandler ^ BindingComplete;" />
      <MemberSignature Language="F#" Value="member this.BindingComplete : System.Windows.Forms.BindingCompleteEventHandler " Usage="member this.BindingComplete : System.Windows.Forms.BindingCompleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingCompleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn die <see cref="P:System.Windows.Forms.Binding.FormattingEnabled" />-Eigenschaft auf <see langword="true" /> festgelegt wird und ein Bindungsvorgang abgeschlossen ist, beispielsweise wenn Daten per Push vom Steuerelement zur Datenquelle übertragen werden oder umgekehrt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis wird unter einer der folgenden Bedingungen ausgelöst, wenn den Wert hat <xref:System.Windows.Forms.Binding.FormattingEnabled%2A> `true` :  
  
-   Daten aus der Datenquelle werden auf die Steuerelement Eigenschaft übermittelt.  
  
-   Daten aus der Steuerelement Eigenschaft werden auf die Datenquelle übermittelt.  
  
 Dieses Ereignis wird nach Abschluss dieser Vorgänge unabhängig vom Abschluss Status ausgelöst. Wenn ein Bindungs Vorgang z. b. einen NULL-Wert an eine <xref:System.Windows.Forms.DateTimePicker.Value%2A> Eigenschaft bindet, wird eine Ausnahme ausgelöst, aber das <xref:System.Windows.Forms.Binding.BindingComplete> Ereignis tritt immer noch auf. Der Handler dieses Ereignisses kann die entsprechende Aktion auf der Grundlage des Erfolgs, des Fehlers oder der Ausnahmen im Bindungsprozess durchführen, indem die- <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> Eigenschaft des- <xref:System.Windows.Forms.BindingCompleteEventArgs> Parameters überprüft wird.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie das-Ereignis behandelt wird <xref:System.Windows.Forms.Binding.BindingComplete> .  
  
 [!code-cpp[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Binding.FormattingEnabled" />
        <altmember cref="M:System.Windows.Forms.Binding.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BindingManagerBase">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingManagerBase BindingManagerBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.BindingManagerBase BindingManagerBase" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.BindingManagerBase" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingManagerBase As BindingManagerBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BindingManagerBase ^ BindingManagerBase { System::Windows::Forms::BindingManagerBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingManagerBase : System.Windows.Forms.BindingManagerBase" Usage="System.Windows.Forms.Binding.BindingManagerBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingManagerBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Windows.Forms.BindingManagerBase" /> für diesen <see cref="T:System.Windows.Forms.Binding" /> ab.</summary>
        <value>Die <see cref="T:System.Windows.Forms.BindingManagerBase" />, die dieses <see cref="T:System.Windows.Forms.Binding" /> verwaltet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden <xref:System.Windows.Forms.BindingManagerBase> Sie, um eine Daten gebundene Liste zu durchlaufen, indem Sie die-Eigenschaft inkrementieren oder Dekrementieren <xref:System.Windows.Forms.BindingManagerBase.Position%2A> . Die <xref:System.Windows.Forms.BindingManagerBase> Klasse ist abstrakt. Die <xref:System.Windows.Forms.CurrencyManager> -Klasse, die Daten gebundene Listen verwaltet, erbt von der- <xref:System.Windows.Forms.BindingManagerBase> Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Windows.Forms.BindingManagerBase> von jedem <xref:System.Windows.Forms.Binding> im Formular abgerufen, und die- <xref:System.Windows.Forms.BindingManagerBase.Position%2A> Eigenschaft wird für jedes-Objekt ausgegeben <xref:System.Windows.Forms.BindingManagerBase> .  
  
 [!code-cpp[Classic Binding.BindingManagerBase Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.BindingManagerBase Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.BindingManagerBase Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.BindingManagerBase Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.BindingManagerBase Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.BindingManagerBase Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingMemberInfo">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingMemberInfo BindingMemberInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BindingMemberInfo BindingMemberInfo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.BindingMemberInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingMemberInfo As BindingMemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BindingMemberInfo BindingMemberInfo { System::Windows::Forms::BindingMemberInfo get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingMemberInfo : System.Windows.Forms.BindingMemberInfo" Usage="System.Windows.Forms.Binding.BindingMemberInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingMemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt mit Informationen zu der Bindung ab, die auf dem <paramref name="dataMember" />-Parameter im <see cref="Overload:System.Windows.Forms.Binding.#ctor" />-Konstruktor basieren.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.BindingMemberInfo" /> mit Informationen zu diesem <see cref="T:System.Windows.Forms.Binding" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Windows.Forms.BindingMemberInfo> wird aus der `dataMember` Zeichenfolge erstellt, die an den- <xref:System.Windows.Forms.Binding.%23ctor%2A> Konstruktor übergeben wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der <xref:System.Windows.Forms.BindingMemberInfo> von jedem <xref:System.Windows.Forms.Binding> in einem Formular abgerufen, und die <xref:System.Windows.Forms.BindingMemberInfo.BindingPath%2A> <xref:System.Windows.Forms.BindingMemberInfo.BindingField%2A> <xref:System.Windows.Forms.BindingMemberInfo.BindingMember%2A> Eigenschaftswerte, und werden für diese ausgegeben <xref:System.Windows.Forms.Binding> .  
  
 [!code-cpp[Classic Binding.BindingMemberInfo Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.BindingMemberInfo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.BindingMemberInfo Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.BindingMemberInfo Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.BindingMemberInfo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.BindingMemberInfo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.BindingsCollection" />
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Control" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.Control" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Control As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ Control { System::Windows::Forms::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Control : System.Windows.Forms.Control" Usage="System.Windows.Forms.Binding.Control" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Steuerelement ab, zu dem die Bindung gehört.</summary>
        <value>Das <see cref="T:System.Windows.Forms.Control" />, zu dem die Bindung gehört.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird der <xref:System.Windows.Forms.BindingManagerBase> für eine bestimmte Datenquelle abgerufen, und es werden Informationen zu jeder Eigenschaft ausgegeben, die <xref:System.Windows.Forms.Binding.Control%2A> an die Datenquelle gebunden ist. Im Beispiel wird die- <xref:System.Windows.Forms.BindingManagerBase.Bindings%2A> Eigenschaft des verwendet <xref:System.Windows.Forms.BindingManagerBase> , um alle-Steuerelemente zu erhalten.  
  
 [!code-cpp[Classic Binding.Control Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.Control Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.Control Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.Control Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.Control Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.Control Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlUpdateMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ControlUpdateMode ControlUpdateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ControlUpdateMode ControlUpdateMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.ControlUpdateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlUpdateMode As ControlUpdateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ControlUpdateMode ControlUpdateMode { System::Windows::Forms::ControlUpdateMode get(); void set(System::Windows::Forms::ControlUpdateMode value); };" />
      <MemberSignature Language="F#" Value="member this.ControlUpdateMode : System.Windows.Forms.ControlUpdateMode with get, set" Usage="System.Windows.Forms.Binding.ControlUpdateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlUpdateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt fest, unter welchen Bedingungen Änderungen an der Datenquelle zur gebundenen Steuerelementeigenschaft weitergegeben werden.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.ControlUpdateMode" />-Werte. Der Standardwert ist <see cref="F:System.Windows.Forms.ControlUpdateMode.OnPropertyChanged" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : obj" Usage="System.Windows.Forms.Binding.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Datenquelle für diese Bindung ab.</summary>
        <value>Ein <see cref="T:System.Object" />, das die Datenquelle darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mögliche Datenquellen sind:  
  
-   Eine <xref:System.Data.DataSet>  
  
-   Eine <xref:System.Data.DataTable>  
  
-   Eine <xref:System.Data.DataView>  
  
-   Eine <xref:System.Data.DataViewManager>  
  
-   Jedes Objekt, das die- <xref:System.Collections.IList> Schnittstelle implementiert.  
  
-   Ein beliebiges Objekt  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die- <xref:System.Windows.Forms.Binding.DataSource%2A> Eigenschaft verwendet, um einen zurückzugeben <xref:System.Data.DataSet> .  
  
 [!code-cpp[Classic Binding.DataSource Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.DataSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.DataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSourceNullValue">
      <MemberSignature Language="C#" Value="public object DataSourceNullValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSourceNullValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.DataSourceNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSourceNullValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSourceNullValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSourceNullValue : obj with get, set" Usage="System.Windows.Forms.Binding.DataSourceNullValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den in der Datenquelle zu speichernden Wert ab, wenn der Steuerelementwert <see langword="null" /> oder leer ist, oder legt diesen fest.</summary>
        <value>Das <see cref="T:System.Object" />, das in der Datenquelle gespeichert werden soll, wenn die Steuerelementeigenschaft leer oder <see langword="null" /> ist. Der Standardwert ist <see cref="T:System.DBNull" /> für Werttypen und <see langword="null" /> für andere Typen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die- <xref:System.Windows.Forms.Binding.NullValue%2A> Eigenschaft verwenden, um den Wert anzugeben, der in einem gebundenen Steuerelement angezeigt wird, wenn die Datenquelle enthält <xref:System.DBNull> .  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Binding.NullValue" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceUpdateMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataSourceUpdateMode DataSourceUpdateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataSourceUpdateMode DataSourceUpdateMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.DataSourceUpdateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSourceUpdateMode As DataSourceUpdateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataSourceUpdateMode DataSourceUpdateMode { System::Windows::Forms::DataSourceUpdateMode get(); void set(System::Windows::Forms::DataSourceUpdateMode value); };" />
      <MemberSignature Language="F#" Value="member this.DataSourceUpdateMode : System.Windows.Forms.DataSourceUpdateMode with get, set" Usage="System.Windows.Forms.Binding.DataSourceUpdateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataSourceUpdateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, unter welchen Bedingungen Änderungen an der gebundenen Steuerelementeigenschaft an die Datenquelle weitergegeben werden, oder legt diesen Wert fest.</summary>
        <value>Ein Wert, der angibt, wenn Änderungen weitergegeben werden. Der Standardwert ist <see cref="F:System.Windows.Forms.DataSourceUpdateMode.OnValidation" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beachten Sie, dass <xref:System.Windows.Forms.DataSourceUpdateMode.Never> die Bindung beim ersten Einrichten mindestens einmal aktualisiert wird, auch wenn diese Eigenschaft auf festgelegt ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ConvertEventHandler Format;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ConvertEventHandler Format" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Binding.Format" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Format As ConvertEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ConvertEventHandler ^ Format;" />
      <MemberSignature Language="F#" Value="member this.Format : System.Windows.Forms.ConvertEventHandler " Usage="member this.Format : System.Windows.Forms.ConvertEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ConvertEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn die Eigenschaft eines Steuerelements an einen Datenwert gebunden ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das- <xref:System.Windows.Forms.Binding.Format> Ereignis wird ausgelöst, wenn Daten aus der Datenquelle in das-Steuerelement übermittelt werden. Sie können das- <xref:System.Windows.Forms.Binding.Format> Ereignis behandeln, um unformatierte Daten aus der Datenquelle in formatierte Daten für die Anzeige zu konvertieren. Wenn Daten aus dem-Steuerelement in die Datenquelle abgerufen werden, wird das- <xref:System.Windows.Forms.Binding.Parse> Ereignis ausgelöst, um den angezeigten Wert zu formatieren, und das- <xref:System.Windows.Forms.Binding.Format> Ereignis tritt auf, um die Daten für die Anzeige neu zu formatieren. Dadurch wird sichergestellt, dass das gebundene Steuerelement korrekt formatierte Daten anzeigt, unabhängig davon, ob der Benutzer formatierte oder unformatierte Daten im Steuerelement eingibt  
  
 <xref:System.Windows.Forms.Binding.Format>Mit dem-Ereignis und dem- <xref:System.Windows.Forms.Binding.Parse> Ereignis können Sie benutzerdefinierte Formate zum Anzeigen von Daten erstellen. Wenn die Daten in einer Tabelle z. b. den Typ <xref:System.Decimal> aufweisen, können Sie die Daten im lokalen Währungs Format anzeigen, indem Sie die- <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> Eigenschaft von <xref:System.Windows.Forms.ConvertEventArgs> auf den formatierten Wert im- <xref:System.Windows.Forms.Binding.Format> Ereignis festlegen. Folglich müssen Sie den angezeigten Wert im Ereignis nicht formatieren <xref:System.Windows.Forms.Binding.Parse> .  
  
 Das <xref:System.Windows.Forms.Binding.Format> Ereignis tritt <xref:System.Windows.Forms.BindingManagerBase.Current%2A> auf, wenn sich der Wert der <xref:System.Windows.Forms.BindingManagerBase> ändert, einschließlich:  
  
-   Wenn die Eigenschaft zum ersten Mal gebunden ist.  
  
-   Jedes Mal, wenn sich die <xref:System.Windows.Forms.BindingManagerBase.Position%2A> ändert.  
  
-   Wenn die Daten gebundene Liste sortiert oder gefiltert wird, wird dies erreicht, wenn ein <xref:System.Data.DataView> die Liste bereitstellt.  
  
 Das <xref:System.Windows.Forms.Binding.Format> Ereignis tritt auch nach dem- <xref:System.Windows.Forms.Binding.Parse> Ereignis auf. Wenn z. b. ein Steuerelement den Fokus verliert, werden die Inhalte analysiert. Unmittelbar danach wird das Ereignis ausgelöst, wenn neue Daten in das Steuerelement <xref:System.Windows.Forms.Binding.Format> übermittelt werden, sodass der neue Inhalt formatiert werden kann.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.Binding> <xref:System.Windows.Forms.ConvertEventHandler> -Objekt erstellt, dem-Ereignis und dem-Ereignis ein Delegat hinzugefügt <xref:System.Windows.Forms.Binding.Parse> und der <xref:System.Windows.Forms.Binding.Format> eines-Steuer Elements <xref:System.Windows.Forms.Binding> <xref:System.Windows.Forms.BindingsCollection> <xref:System.Windows.Forms.TextBox> über die- <xref:System.Windows.Forms.Control.DataBindings%2A> Eigenschaft hinzugefügt. Der Ereignis Delegat, der `DecimalToCurrencyString` dem-Ereignis hinzugefügt wird <xref:System.Windows.Forms.Binding.Format> , formatiert den gebundenen Wert (einen- <xref:System.Decimal> Typ) als Währung mithilfe der- <xref:System.Decimal.ToString%2A> Methode. Der `CurrencyStringToDecimal` Ereignis Delegat, der dem-Ereignis hinzugefügt wird <xref:System.Windows.Forms.Binding.Parse> , konvertiert den vom-Steuerelement angezeigten Wert zurück in den- <xref:System.Decimal> Typ.  
  
 In diesem Beispiel wird das vorhanden sein eines mit dem Namen vorausgesetzt <xref:System.Data.DataSet> `ds` .  
  
 [!code-cpp[Classic Binding.Format Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.Format Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.Format Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.Format Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.Format Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.Format Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Binding.Parse" />
        <altmember cref="M:System.Windows.Forms.Binding.OnFormat(System.Windows.Forms.ConvertEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="FormatInfo">
      <MemberSignature Language="C#" Value="public IFormatProvider FormatInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IFormatProvider FormatInfo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.FormatInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property FormatInfo As IFormatProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IFormatProvider ^ FormatInfo { IFormatProvider ^ get(); void set(IFormatProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FormatInfo : IFormatProvider with get, set" Usage="System.Windows.Forms.Binding.FormatInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IFormatProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.IFormatProvider" /> ab, der benutzerdefiniertes Formatierungsverhalten bereitstellt, oder legt ihn fest.</summary>
        <value>Die <see cref="T:System.IFormatProvider" />-Implementierung, die benutzerdefiniertes Formatierungsverhalten bereitstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch Festlegen dieser Eigenschaft wird das Standard Formatierungs Verhalten überschrieben, das die- <xref:System.Windows.Forms.Application.CurrentCulture%2A?displayProperty=nameWithType> Eigenschafts Einstellung verwendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatString">
      <MemberSignature Language="C#" Value="public string FormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormatString" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.FormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property FormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FormatString : string with get, set" Usage="System.Windows.Forms.Binding.FormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Formatbezeichnerzeichen ab, die angeben, wie ein Wert angezeigt werden soll, oder legt sie fest.</summary>
        <value>Die Zeichenfolge von Formatbezeichnerzeichen, die angeben, wie ein Wert angezeigt werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die zu verwendende Format Zeichenfolge sollte Standard-.NET Framework Formatspezifikationen entsprechen. Weitere Informationen finden Sie unter [Formatieren von Typen in der .NET Framework](/dotnet/standard/base-types/formatting-types).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormattingEnabled">
      <MemberSignature Language="C#" Value="public bool FormattingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FormattingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.FormattingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property FormattingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FormattingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FormattingEnabled : bool with get, set" Usage="System.Windows.Forms.Binding.FormattingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, mit dem angegeben wird, ob die Typkonvertierung und Formatierung auf die Daten der Steuerelementeigenschaft angewendet wird.</summary>
        <value><see langword="true" />, wenn die Typkonvertierung und das Formatieren von Steuerelementeigenschaftendaten aktiviert ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft auf festgelegt `true` wird, wird auch das Verhalten der Fehlerbehandlung aktiviert und bewirkt <xref:System.Windows.Forms.Binding.BindingComplete> , dass das Ereignis ausgelöst wird. Der Handler dieses Ereignisses kann die entsprechende Aktion auf der Grundlage des Erfolgs, des Fehlers oder der Ausnahmen im Bindungsprozess durchführen, indem die- <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> Eigenschaft des- <xref:System.Windows.Forms.BindingCompleteEventArgs> Parameters überprüft wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Binding.BindingComplete" />
        <altmember cref="T:System.Windows.Forms.BindingCompleteEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="IsBinding">
      <MemberSignature Language="C#" Value="public bool IsBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBinding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.IsBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBinding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBinding { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBinding : bool" Usage="System.Windows.Forms.Binding.IsBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Bindung aktiv ist.</summary>
        <value><see langword="true" />, wenn die Bindung aktiv ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Bindung ist aktiv, wenn Sie diese Bedingungen erfüllt:  
  
-   Alle zugehörigen Eigenschaften werden festgelegt.  
  
-   Der Benutzer hat nicht <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> oder <xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> für die aufgerufen <xref:System.Windows.Forms.BindingManagerBase> , zu der das <xref:System.Windows.Forms.Binding> gehört.  
  
-   Das Steuerelement, zu dem die gehört, wurde <xref:System.Windows.Forms.Binding> erstellt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden der <xref:System.Windows.Forms.Binding.PropertyName%2A> -Wert und der- <xref:System.Windows.Forms.Binding.IsBinding%2A> Wert für jeden <xref:System.Windows.Forms.Binding> in einem Formular ausgegeben.  
  
 [!code-cpp[Classic Binding.IsBinding Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.IsBinding Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.IsBinding Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.IsBinding Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.IsBinding Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.IsBinding Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NullValue">
      <MemberSignature Language="C#" Value="public object NullValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NullValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.NullValue" />
      <MemberSignature Language="VB.NET" Value="Public Property NullValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NullValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NullValue : obj with get, set" Usage="System.Windows.Forms.Binding.NullValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Object" /> ab, das als Steuerelementeigenschaft festgelegt werden soll, wenn die Datenquelle einen <see cref="T:System.DBNull" />-Wert enthält, oder legt dieses Objekt fest.</summary>
        <value>Das <see cref="T:System.Object" />, das als Steuerelementeigenschaft festgelegt werden soll, wenn die Datenquelle einen <see cref="T:System.DBNull" />-Wert enthält. Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Datenquelle muss enthalten <xref:System.DBNull> , damit die- <xref:System.Windows.Forms.Binding.NullValue%2A> Eigenschaft ordnungsgemäß angewendet wird. Wenn der Daten Quellentyp ein Typ ist, z. b. eine Zeichenfolge oder eine ganze Zahl, wird der Wert der <xref:System.Windows.Forms.Binding.NullValue%2A> Eigenschaft ignoriert. Außerdem wird die- <xref:System.Windows.Forms.Binding.NullValue%2A> Eigenschaft ignoriert, wenn Sie auf festgelegt ist `null` .  
  
 Der Datenquelle wird ein NULL-Wert hinzugefügt, wenn die Steuerelement Eigenschaft auf das-Objekt von festgelegt ist <xref:System.Windows.Forms.Binding.NullValue%2A> . Wenn <xref:System.Windows.Forms.Binding.NullValue%2A> auf einen Zeichen folgen Wert festgelegt ist, wird bei-vergleichen die Groß-/Kleinschreibung  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBindingComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnBindingComplete (System.Windows.Forms.BindingCompleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBindingComplete(class System.Windows.Forms.BindingCompleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBindingComplete (e As BindingCompleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBindingComplete(System::Windows::Forms::BindingCompleteEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBindingComplete : System.Windows.Forms.BindingCompleteEventArgs -&gt; unit&#xA;override this.OnBindingComplete : System.Windows.Forms.BindingCompleteEventArgs -&gt; unit" Usage="binding.OnBindingComplete e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.BindingCompleteEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Binding.BindingComplete" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).  
  
 Mit der <xref:System.Windows.Forms.Binding.OnBindingComplete%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.Binding.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Binding.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnFormat">
      <MemberSignature Language="C#" Value="protected virtual void OnFormat (System.Windows.Forms.ConvertEventArgs cevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormat(class System.Windows.Forms.ConvertEventArgs cevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.OnFormat(System.Windows.Forms.ConvertEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormat (cevent As ConvertEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormat(System::Windows::Forms::ConvertEventArgs ^ cevent);" />
      <MemberSignature Language="F#" Value="abstract member OnFormat : System.Windows.Forms.ConvertEventArgs -&gt; unit&#xA;override this.OnFormat : System.Windows.Forms.ConvertEventArgs -&gt; unit" Usage="binding.OnFormat cevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cevent" Type="System.Windows.Forms.ConvertEventArgs" />
      </Parameters>
      <Docs>
        <param name="cevent">Ein <see cref="T:System.Windows.Forms.ConvertEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Binding.Format" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).  
  
 Mit der <xref:System.Windows.Forms.Binding.OnFormat%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.Binding.OnFormat(System.Windows.Forms.ConvertEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Binding.OnFormat(System.Windows.Forms.ConvertEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.Binding.Format" />
        <altmember cref="M:System.Windows.Forms.Binding.OnParse(System.Windows.Forms.ConvertEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Binding.Parse" />
      </Docs>
    </Member>
    <Member MemberName="OnParse">
      <MemberSignature Language="C#" Value="protected virtual void OnParse (System.Windows.Forms.ConvertEventArgs cevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParse(class System.Windows.Forms.ConvertEventArgs cevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.OnParse(System.Windows.Forms.ConvertEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParse (cevent As ConvertEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParse(System::Windows::Forms::ConvertEventArgs ^ cevent);" />
      <MemberSignature Language="F#" Value="abstract member OnParse : System.Windows.Forms.ConvertEventArgs -&gt; unit&#xA;override this.OnParse : System.Windows.Forms.ConvertEventArgs -&gt; unit" Usage="binding.OnParse cevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cevent" Type="System.Windows.Forms.ConvertEventArgs" />
      </Parameters>
      <Docs>
        <param name="cevent">Ein <see cref="T:System.Windows.Forms.ConvertEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Binding.Parse" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).  
  
 Mit der <xref:System.Windows.Forms.Binding.OnParse%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.Binding.OnParse(System.Windows.Forms.ConvertEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Binding.OnParse(System.Windows.Forms.ConvertEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.Binding.Format" />
        <altmember cref="M:System.Windows.Forms.Binding.OnFormat(System.Windows.Forms.ConvertEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Binding.Parse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ConvertEventHandler Parse;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ConvertEventHandler Parse" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Binding.Parse" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Parse As ConvertEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ConvertEventHandler ^ Parse;" />
      <MemberSignature Language="F#" Value="member this.Parse : System.Windows.Forms.ConvertEventHandler " Usage="member this.Parse : System.Windows.Forms.ConvertEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ConvertEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Wert eines datengebundenen Steuerelements geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Binding.Format>Mit dem-Ereignis und dem- <xref:System.Windows.Forms.Binding.Parse> Ereignis können Sie benutzerdefinierte Formate zum Anzeigen von Daten erstellen. Wenn die Daten in einer Tabelle z. b. den Typ <xref:System.Decimal> aufweisen, können Sie die Daten im lokalen Währungs Format anzeigen, indem Sie die- <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> Eigenschaft von <xref:System.Windows.Forms.ConvertEventArgs> auf den formatierten Wert im- <xref:System.Windows.Forms.Binding.Format> Ereignis festlegen. Folglich müssen Sie den angezeigten Wert im Ereignis nicht formatieren <xref:System.Windows.Forms.Binding.Parse> .  
  
 Das <xref:System.Windows.Forms.Binding.Parse> Ereignis tritt unter den folgenden Bedingungen auf:  
  
-   Nachdem das- <xref:System.Windows.Forms.Control.Validated> Ereignis von <xref:System.Windows.Forms.Control> auftritt.  
  
-   Wenn die- <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> Methode von <xref:System.Windows.Forms.BindingManagerBase> aufgerufen wird.  
  
-   Wenn die <xref:System.Windows.Forms.BindingManagerBase.Current%2A> der <xref:System.Windows.Forms.BindingManagerBase> Änderungen geändert wird (d. h., wenn sich die <xref:System.Windows.Forms.BindingManagerBase.Position%2A> ändert).  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.Binding> <xref:System.Windows.Forms.ConvertEventHandler> -Objekt erstellt, dem-Ereignis und dem-Ereignis ein Delegat hinzugefügt <xref:System.Windows.Forms.Binding.Parse> und der <xref:System.Windows.Forms.Binding.Format> eines-Steuer Elements <xref:System.Windows.Forms.Binding> <xref:System.Windows.Forms.BindingsCollection> <xref:System.Windows.Forms.TextBox> über die- <xref:System.Windows.Forms.Control.DataBindings%2A> Eigenschaft hinzugefügt. Der Ereignis Delegat, der `DecimalToCurrencyString` dem-Ereignis hinzugefügt wird <xref:System.Windows.Forms.Binding.Format> , formatiert den gebundenen Wert (einen- <xref:System.Decimal> Typ) als Währung mithilfe der- <xref:System.Decimal.ToString%2A> Methode. Der `CurrencyStringToDecimal` Ereignis Delegat, der dem-Ereignis hinzugefügt wird <xref:System.Windows.Forms.Binding.Parse> , konvertiert den vom-Steuerelement angezeigten Wert zurück in den- <xref:System.Decimal> Typ.  
  
 [!code-cpp[Classic Binding.Parse Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.Parse Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.Parse Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.Parse Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.Parse Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.Parse Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Binding.Format" />
        <altmember cref="M:System.Windows.Forms.Binding.OnParse(System.Windows.Forms.ConvertEventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
      </Docs>
    </Member>
    <Member MemberName="PropertyName">
      <MemberSignature Language="C#" Value="public string PropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.PropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PropertyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyName : string" Usage="System.Windows.Forms.Binding.PropertyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Datenbindungseigenschaft des Steuerelements ab.</summary>
        <value>Der Name einer Steuerelementeigenschaft für die Bindung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden <xref:System.Windows.Forms.Binding.PropertyName%2A> Sie, um die Steuerelement Eigenschaft anzugeben, die Sie an eine Liste in einer Datenquelle binden möchten. In den meisten Fällen binden Sie eine Anzeige Eigenschaft, z <xref:System.Windows.Forms.Control.Text%2A> . b. die-Eigenschaft eines- <xref:System.Windows.Forms.TextBox> Steuer Elements. Da Sie jedoch eine beliebige Eigenschaft eines Steuer Elements binden können, können Sie mithilfe von Daten aus einer Datenbank Programm gesteuert Steuerelemente zur Laufzeit erstellen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der <xref:System.Windows.Forms.Binding.PropertyName%2A> Wert für jedes <xref:System.Windows.Forms.Binding> Steuerelement in einem Formular ausgegeben.  
  
 [!code-cpp[Classic Binding.PropertyName Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.PropertyName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.PropertyName Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.PropertyName Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.PropertyName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.PropertyName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadValue">
      <MemberSignature Language="C#" Value="public void ReadValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.ReadValue" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadValue ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadValue();" />
      <MemberSignature Language="F#" Value="member this.ReadValue : unit -&gt; unit" Usage="binding.ReadValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Legt die Steuerelementeigenschaft auf den von der Datenquelle gelesenen Wert fest.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public void WriteValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.WriteValue" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteValue ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteValue();" />
      <MemberSignature Language="F#" Value="member this.WriteValue : unit -&gt; unit" Usage="binding.WriteValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Liest den aktuellen Wert der Steuerelementeigenschaft und schreibt ihn in die Datenquelle.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
