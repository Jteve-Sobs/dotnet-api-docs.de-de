<Type Name="BindingManagerBase" FullName="System.Windows.Forms.BindingManagerBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="02b4c7739c617787e803542265f4ede9a7748745" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73384543" /></Metadata><TypeSignature Language="C#" Value="public abstract class BindingManagerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BindingManagerBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.BindingManagerBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BindingManagerBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingManagerBase abstract" />
  <TypeSignature Language="F#" Value="type BindingManagerBase = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="61c9b-101">Verwaltet sämtliche <see cref="T:System.Windows.Forms.Binding" />-Objekte, die an dieselbe Datenquelle und denselben Datenmember gebunden sind.</span><span class="sxs-lookup"><span data-stu-id="61c9b-101">Manages all <see cref="T:System.Windows.Forms.Binding" /> objects that are bound to the same data source and data member.</span></span> <span data-ttu-id="61c9b-102">Diese Klasse ist abstrakt.</span><span class="sxs-lookup"><span data-stu-id="61c9b-102">This class is abstract.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c9b-103">Der <xref:System.Windows.Forms.BindingManagerBase> ermöglicht die Synchronisierung von Daten gebundenen Steuerelementen in einem Windows Form, die an dieselbe Datenquelle gebunden sind.</span><span class="sxs-lookup"><span data-stu-id="61c9b-103">The <xref:System.Windows.Forms.BindingManagerBase> enables the synchronization of data-bound controls on a Windows Form that are bound to the same data source.</span></span> <span data-ttu-id="61c9b-104">(Weitere Informationen zur einfachen Bindung eines Steuer Elements an eine Datenquelle finden Sie in der <xref:System.Windows.Forms.Binding>-Klasse.) Nehmen wir beispielsweise an, dass ein Formular zwei <xref:System.Windows.Forms.TextBox> Steuerelemente enthält, die an dieselbe Datenquelle, aber an verschiedene Spalten gebunden sind.</span><span class="sxs-lookup"><span data-stu-id="61c9b-104">(For more information about simple binding a control to a data source, see the <xref:System.Windows.Forms.Binding> class.) For example, suppose that a form contains two <xref:System.Windows.Forms.TextBox> controls that are bound to the same data source but to different columns.</span></span> <span data-ttu-id="61c9b-105">Die Datenquelle kann eine <xref:System.Data.DataTable> sein, die Kundennamen enthält, während die Spalten die vor-und Nachnamen enthalten können.</span><span class="sxs-lookup"><span data-stu-id="61c9b-105">The data source might be a <xref:System.Data.DataTable> that contains customer names, while the columns might contain the first and last names.</span></span> <span data-ttu-id="61c9b-106">Die beiden Steuerelemente müssen synchronisiert werden, damit die richtigen Vornamen und Nachnamen für denselben Kunden angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="61c9b-106">The two controls must be synchronized in order to display the correct first and last names together for the same customer.</span></span> <span data-ttu-id="61c9b-107">Der <xref:System.Windows.Forms.CurrencyManager>, der von der <xref:System.Windows.Forms.BindingManagerBase>-Klasse erbt, erreicht diese Synchronisierung durch die Beibehaltung eines Zeigers auf das aktuelle Element in der Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="61c9b-107">The <xref:System.Windows.Forms.CurrencyManager>, which inherits from the <xref:System.Windows.Forms.BindingManagerBase> class, accomplishes this synchronization by maintaining a pointer to the current item in the data source.</span></span> <span data-ttu-id="61c9b-108">Die <xref:System.Windows.Forms.TextBox>-Steuerelemente werden an das aktuelle Element gebunden, sodass Sie die Informationen für dieselbe Zeile anzeigen.</span><span class="sxs-lookup"><span data-stu-id="61c9b-108">The <xref:System.Windows.Forms.TextBox> controls are bound to the current item so they display the information for the same row.</span></span> <span data-ttu-id="61c9b-109">Wenn sich das aktuelle Element ändert, benachrichtigt das <xref:System.Windows.Forms.CurrencyManager> alle gebundenen Steuerelemente, sodass Sie Ihre Daten aktualisieren können.</span><span class="sxs-lookup"><span data-stu-id="61c9b-109">When the current item changes, the <xref:System.Windows.Forms.CurrencyManager> notifies all the bound controls so that they can refresh their data.</span></span> <span data-ttu-id="61c9b-110">Außerdem können Sie die <xref:System.Windows.Forms.BindingManagerBase.Position%2A>-Eigenschaft festlegen, um die Zeile in der <xref:System.Data.DataTable> anzugeben, auf die die Steuerelemente zeigen.</span><span class="sxs-lookup"><span data-stu-id="61c9b-110">Furthermore, you can set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property to specify the row in the <xref:System.Data.DataTable> that the controls point to.</span></span> <span data-ttu-id="61c9b-111">Verwenden Sie die <xref:System.Windows.Forms.BindingManagerBase.Count%2A>-Eigenschaft, um zu bestimmen, wie viele Zeilen in der Datenquelle vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="61c9b-111">To determine how many rows exist in the data source, use the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property.</span></span>  
  
 <span data-ttu-id="61c9b-112">Der <xref:System.Windows.Forms.CurrencyManager> ist erforderlich, da Datenquellen nicht notwendigerweise einen Zeiger für aktuelle Elemente erhalten.</span><span class="sxs-lookup"><span data-stu-id="61c9b-112">The <xref:System.Windows.Forms.CurrencyManager> is necessary because data sources do not necessarily maintain a current-item pointer.</span></span> <span data-ttu-id="61c9b-113">Beispielsweise können Arrays und <xref:System.Collections.ArrayList> Objekte Datenquellen sein, Sie verfügen jedoch nicht über eine-Eigenschaft, die das aktuelle Element zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="61c9b-113">For instance, arrays and <xref:System.Collections.ArrayList> objects can be data sources, but they do not have a property that returns the current item.</span></span> <span data-ttu-id="61c9b-114">Um das aktuelle Element zu erhalten, verwenden Sie die <xref:System.Windows.Forms.BindingManagerBase.Current%2A>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="61c9b-114">To get the current item, use the <xref:System.Windows.Forms.BindingManagerBase.Current%2A> property.</span></span>  
  
 <span data-ttu-id="61c9b-115">Der <xref:System.Windows.Forms.PropertyManager> erbt auch vom <xref:System.Windows.Forms.BindingManagerBase>, und er wird verwendet, um die aktuelle Eigenschaft eines Objekts zu verwalten, und nicht die-Eigenschaft eines aktuellen-Objekts in einer Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="61c9b-115">The <xref:System.Windows.Forms.PropertyManager> also inherits from the <xref:System.Windows.Forms.BindingManagerBase>, and it is used to maintain the current property of an object, rather than the property of a current object in a data source.</span></span> <span data-ttu-id="61c9b-116">Aus diesem Grund hat der Versuch, die <xref:System.Windows.Forms.BindingManagerBase.Position%2A>-oder <xref:System.Windows.Forms.BindingManagerBase.Count%2A>-Eigenschaft für einen <xref:System.Windows.Forms.PropertyManager> festzulegen, keine Auswirkung.</span><span class="sxs-lookup"><span data-stu-id="61c9b-116">For this reason, trying to set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> or <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property for a <xref:System.Windows.Forms.PropertyManager> has no effect.</span></span>  
  
 <span data-ttu-id="61c9b-117">Um einen <xref:System.Windows.Forms.BindingManagerBase>zu erstellen, verwenden Sie die <xref:System.Windows.Forms.BindingContext>-Klasse, die abhängig von der verwalteten Datenquelle entweder eine <xref:System.Windows.Forms.CurrencyManager> oder eine <xref:System.Windows.Forms.PropertyManager>zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="61c9b-117">To create a <xref:System.Windows.Forms.BindingManagerBase>, use the <xref:System.Windows.Forms.BindingContext> class, which returns either a <xref:System.Windows.Forms.CurrencyManager> or a <xref:System.Windows.Forms.PropertyManager>, depending on the data source being managed.</span></span>  
  
 <span data-ttu-id="61c9b-118">Lösungs Programmierer werden empfohlen, Steuerelemente direkt an eine <xref:System.Windows.Forms.BindingSource> Komponente zu binden, die sowohl als Datenquelle als auch als Datenconnector für die tatsächliche Ziel Datenquelle fungiert.</span><span class="sxs-lookup"><span data-stu-id="61c9b-118">Solutions programmers are encouraged to bind controls directly to a <xref:System.Windows.Forms.BindingSource> component, which acts as both a data source and data connector to the actual target data source.</span></span> <span data-ttu-id="61c9b-119"><xref:System.Windows.Forms.BindingSource> vereinfacht sowohl eine einfache als auch eine komplexe Datenbindung erheblich, einschließlich der Verwaltung von Währungen zwischen dem Steuerelement und seinem Ziel.</span><span class="sxs-lookup"><span data-stu-id="61c9b-119"><xref:System.Windows.Forms.BindingSource> greatly simplifies both simple and complex data binding, including managing currency between the control and its target.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61c9b-120">Im folgenden Codebeispiel wird die-<xref:System.Windows.Forms.BindingContext> verwendet, um eine <xref:System.Windows.Forms.BindingManagerBase> für eine bestimmte Datenquelle zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="61c9b-120">The following code example uses the <xref:System.Windows.Forms.BindingContext> to return a <xref:System.Windows.Forms.BindingManagerBase> for a specific data source.</span></span> <span data-ttu-id="61c9b-121">(In diesem Beispiel wird davon ausgegangen, dass Sie im Deklarations Abschnitt des Moduls `myBindingManagerBase` deklariert haben.) Im Beispiel werden dann Ereignis Delegaten zum <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> und <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> Ereignissen hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="61c9b-121">(The example assumes you have declared `myBindingManagerBase` in the Declarations section of the module.) The example then adds event delegates to the <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> and <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> events.</span></span> <span data-ttu-id="61c9b-122">Schließlich enthält das Beispiel vier Methoden (`MoveNext`, `MovePrevious`, `MoveFirst`und `MoveLast`), mit denen die <xref:System.Windows.Forms.BindingManagerBase.Position%2A>-Eigenschaft Inkrement oder Dekrement erhöht und der <xref:System.Windows.Forms.BindingManagerBase.Position%2A> auf die erste oder letzte Zeile in der Liste festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="61c9b-122">Lastly, the example contains four methods (`MoveNext`, `MovePrevious`, `MoveFirst`, and `MoveLast`) that increment or decrement the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property, and set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> to the first or last row in the list.</span></span> <span data-ttu-id="61c9b-123">Die letzte Zeile in der Liste wird mithilfe der <xref:System.Windows.Forms.BindingManagerBase.Count%2A>-Eigenschaft bestimmt.</span><span class="sxs-lookup"><span data-stu-id="61c9b-123">The last row in the list is determined by using the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="61c9b-124">Wenn Sie von <see cref="T:System.Windows.Forms.BindingManagerBase" />erben, müssen Sie die folgenden abstrakten Member außer Kraft setzen: <see cref="M:System.Windows.Forms.BindingManagerBase.AddNew" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Count" />, <see cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Current" />, <see cref="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />, <see cref="M:System.Windows.Forms.BindingManagerBase.GetItemProperties" />, <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Position" />, <see cref="M:System.Windows.Forms.BindingManagerBase.RemoveAt(System.Int32)" />, <see cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />, <see cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />und <see cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />.</span><span class="sxs-lookup"><span data-stu-id="61c9b-124">When you inherit from <see cref="T:System.Windows.Forms.BindingManagerBase" />, you must override the following abstract members: <see cref="M:System.Windows.Forms.BindingManagerBase.AddNew" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Count" />, <see cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Current" />, <see cref="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />, <see cref="M:System.Windows.Forms.BindingManagerBase.GetItemProperties" />, <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Position" />, <see cref="M:System.Windows.Forms.BindingManagerBase.RemoveAt(System.Int32)" />, <see cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />, <see cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />, and <see cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />.</span></span></para></block>
    <altmember cref="T:System.Windows.Forms.BindingSource" />
    <altmember cref="T:System.Windows.Forms.BindingContext" />
    <altmember cref="T:System.Windows.Forms.CurrencyManager" />
    <altmember cref="T:System.Windows.Forms.PropertyManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingManagerBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingManagerBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="61c9b-125">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.BindingManagerBase" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="61c9b-125">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingManagerBase" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c9b-126">Mit dem Parameter losen Konstruktor wird die <xref:System.Windows.Forms.BindingManagerBase.Bindings%2A>-Eigenschaft auf `null`festgelegt.</span><span class="sxs-lookup"><span data-stu-id="61c9b-126">The parameterless constructor sets the <xref:System.Windows.Forms.BindingManagerBase.Bindings%2A> property to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public abstract void AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddNew();" />
      <MemberSignature Language="F#" Value="abstract member AddNew : unit -&gt; unit" Usage="bindingManagerBase.AddNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="61c9b-127">Fügt beim Überschreiben in einer abgeleiteten Klasse der zugrunde liegenden Liste ein neues Element hinzu.</span><span class="sxs-lookup"><span data-stu-id="61c9b-127">When overridden in a derived class, adds a new item to the underlying list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c9b-128">Die <xref:System.Windows.Forms.BindingManagerBase.AddNew%2A>-Methode fügt der zugrunde liegenden Liste ein neues Element hinzu, indem der Parameter lose Konstruktor für den Typ dieses Elements verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="61c9b-128">The <xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> method adds a new item to the underlying list by using the parameterless constructor for that item's type.</span></span> <span data-ttu-id="61c9b-129"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> ist hauptsächlich für die Verwendung durch Programmierer gedacht, die eine komplexe Daten Bindungs Unterstützung für Ihre benutzerdefinierte Komponente hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="61c9b-129"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> is intended primarily to be used by programmers adding complex data-binding support to their custom component.</span></span>  
  
 <span data-ttu-id="61c9b-130"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> wird in der Regel mit dem folgenden Muster implementiert, mit dem Anwendungsprogrammierer ihren eigenen Code zum Erstellen benutzerdefinierter Elemente einfügen können:</span><span class="sxs-lookup"><span data-stu-id="61c9b-130"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> is commonly implemented using the following pattern that allows application programmers to inject their own code for creating customized items:</span></span>  
  
1.  <span data-ttu-id="61c9b-131">Durch <xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> wird das <xref:System.Windows.Forms.BindingSource.AddingNew>-Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="61c9b-131"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> raises the <xref:System.Windows.Forms.BindingSource.AddingNew> event.</span></span>  
  
2.  <span data-ttu-id="61c9b-132">Der Programmierer kann ein benutzerdefiniertes Element angeben, indem er das <xref:System.Windows.Forms.BindingSource.AddingNew>-Ereignis verarbeitet und die <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A>-Eigenschaft des Parameters <xref:System.ComponentModel.AddingNewEventArgs> auf das neue Element festlegt.</span><span class="sxs-lookup"><span data-stu-id="61c9b-132">The programmer can supply a custom item by handling the <xref:System.Windows.Forms.BindingSource.AddingNew> event and setting the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property of the <xref:System.ComponentModel.AddingNewEventArgs> parameter to the new item.</span></span> <span data-ttu-id="61c9b-133">Andernfalls sollte die Komponente ein Element mit dem Parameter losen Konstruktor erstellen.</span><span class="sxs-lookup"><span data-stu-id="61c9b-133">Otherwise, the component should create an item using the parameterless constructor.</span></span>  
  
3.  <span data-ttu-id="61c9b-134">Wenn die Datenquelle die <xref:System.ComponentModel.IEditableObject>-Schnittstelle nicht implementiert, wird das Element sofort der Datenquelle und der zugrunde liegenden Liste hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="61c9b-134">If the data source does not implement the <xref:System.ComponentModel.IEditableObject> interface, the item is immediately added to the data source and underlying list.</span></span> <span data-ttu-id="61c9b-135">Wenn diese Schnittstelle unterstützt wird, wird die Addition durch die Methoden <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> und <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> behandelt.</span><span class="sxs-lookup"><span data-stu-id="61c9b-135">If this interface is supported, then the addition is transacted by the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> and <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.AddingNewEventArgs.NewObject" />
        <altmember cref="T:System.ComponentModel.AddingNewEventArgs" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />
      </Docs>
    </Member>
    <Member MemberName="BindingComplete">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingCompleteEventHandler BindingComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingCompleteEventHandler BindingComplete" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BindingComplete As BindingCompleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingCompleteEventHandler ^ BindingComplete;" />
      <MemberSignature Language="F#" Value="member this.BindingComplete : System.Windows.Forms.BindingCompleteEventHandler " Usage="member this.BindingComplete : System.Windows.Forms.BindingCompleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingCompleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61c9b-136">Tritt nach Abschluss eines Datenbindungsvorgangs ein.</span><span class="sxs-lookup"><span data-stu-id="61c9b-136">Occurs at the completion of a data-binding operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c9b-137">Das <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> Ereignis tritt nach dem Abschluss eines Daten Bindungs Vorgangs auf, der Folgendes enthalten kann:</span><span class="sxs-lookup"><span data-stu-id="61c9b-137">The <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event occurs after the completion of a data-binding operation, which may include the following:</span></span>  
  
-   <span data-ttu-id="61c9b-138">Übertragen von Informationen aus der Datenquelle in die-Eigenschaft des gebundenen Steuer Elements.</span><span class="sxs-lookup"><span data-stu-id="61c9b-138">Pushing information from the data source into the property of its bound control.</span></span>  
  
-   <span data-ttu-id="61c9b-139">Abrufen von Informationen aus einem gebundenen Steuerelement in die zugeordnete Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="61c9b-139">Pulling information from a bound control into its associated data source.</span></span>  
  
 <span data-ttu-id="61c9b-140">Beachten Sie, dass dieses Ereignis unabhängig vom Abschluss Status des Bindungs Vorgangs ausgelöst wird, obwohl dieser Status durch Untersuchen der <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A>-Eigenschaft des <xref:System.Windows.Forms.BindingCompleteEventArgs>-Parameters bestimmt werden kann, der dem Ereignis zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="61c9b-140">Note that this event is raised regardless of the completion status of the binding operation, although this status can be determined by examining the <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> property of the <xref:System.Windows.Forms.BindingCompleteEventArgs> parameter associated with the event.</span></span> <span data-ttu-id="61c9b-141"><xref:System.Windows.Forms.BindingCompleteEventArgs> können auch Fehler-und Ausnahme Informationen enthalten.</span><span class="sxs-lookup"><span data-stu-id="61c9b-141"><xref:System.Windows.Forms.BindingCompleteEventArgs> may also contain error and exception information.</span></span> <span data-ttu-id="61c9b-142">Beispielsweise wird bei einem Bindungs Vorgang, der versucht, einen NULL-Wert aus einer Datenquelle in ein <xref:System.Windows.Forms.DateTimePicker>-Steuerelement zu überführen, eine Ausnahme generiert, da ein <xref:System.DateTime> nicht `null`werden kann.</span><span class="sxs-lookup"><span data-stu-id="61c9b-142">For example, a binding operation that attempts to push a null value from a data source into a <xref:System.Windows.Forms.DateTimePicker> control will generate an exception, since a <xref:System.DateTime> cannot be `null`.</span></span> <span data-ttu-id="61c9b-143">Obwohl der Bindungs Vorgang in diesem Fall nicht erfolgreich abgeschlossen wird, wird das <xref:System.Windows.Forms.BindingManagerBase.BindingComplete>-Ereignis ausgelöst, und das Ereignis enthält Informationen zum fehlgeschlagenen Bindungs Versuch.</span><span class="sxs-lookup"><span data-stu-id="61c9b-143">In this case, although the binding operation does not successfully complete, the <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event will be raised, and the event will contain information on the failed binding attempt.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61c9b-144">Im folgenden Codebeispiel wird veranschaulicht, wie Sie das <xref:System.Windows.Forms.BindingManagerBase.BindingComplete>-Ereignis behandeln und sicherstellen, dass mehrere Steuerelemente, die an dieselbe Datenquelle gebunden sind, synchronisiert bleiben, wenn einer der Steuerelement Werte geändert wird.</span><span class="sxs-lookup"><span data-stu-id="61c9b-144">The following code example demonstrates how to handle the <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event and ensure multiple controls bound to the same data source remain synchronized when one of the control values is changed.</span></span> <span data-ttu-id="61c9b-145">Fügen Sie zum Ausführen dieses Beispiels den Code in ein Windows Form ein, und nennen Sie die `InitializeControlsAndData`-Methode aus dem Konstruktor des Formulars oder <xref:System.Windows.Forms.Form.Load> Ereignis Behandlungsmethode.</span><span class="sxs-lookup"><span data-stu-id="61c9b-145">To run this example, paste the code into a Windows Form and call the `InitializeControlsAndData` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
        <altmember cref="T:System.Windows.Forms.BindingCompleteEventArgs" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
      </Docs>
    </Member>
    <Member MemberName="Bindings">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingsCollection Bindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.BindingsCollection Bindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bindings As BindingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BindingsCollection ^ Bindings { System::Windows::Forms::BindingsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Bindings : System.Windows.Forms.BindingsCollection" Usage="System.Windows.Forms.BindingManagerBase.Bindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61c9b-146">Ruft die Auflistung verwalteter Bindungen ab.</span><span class="sxs-lookup"><span data-stu-id="61c9b-146">Gets the collection of bindings being managed.</span></span></summary>
        <value><span data-ttu-id="61c9b-147">Eine <see cref="T:System.Windows.Forms.BindingsCollection" /> mit den <see cref="T:System.Windows.Forms.Binding" />-Objekten, die von dieser <see cref="T:System.Windows.Forms.BindingManagerBase" /> verwaltet werden.</span><span class="sxs-lookup"><span data-stu-id="61c9b-147">A <see cref="T:System.Windows.Forms.BindingsCollection" /> that contains the <see cref="T:System.Windows.Forms.Binding" /> objects managed by this <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61c9b-148">Im folgenden Codebeispiel wird der <xref:System.Windows.Forms.BindingManagerBase> für eine bestimmte Datenquelle abgerufen.</span><span class="sxs-lookup"><span data-stu-id="61c9b-148">The following code example gets the <xref:System.Windows.Forms.BindingManagerBase> for a specific data source.</span></span> <span data-ttu-id="61c9b-149">Im Beispiel wird dann die <xref:System.Windows.Forms.BindingManagerBase.Bindings%2A>-Eigenschaft verwendet, um Informationen zu jedem Steuerelement zu drucken, das an dieselbe Datenquelle gebunden ist.</span><span class="sxs-lookup"><span data-stu-id="61c9b-149">The example then uses the <xref:System.Windows.Forms.BindingManagerBase.Bindings%2A> property to print information about each control bound to the same data source.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Bindings Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Bindings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Bindings Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Bindings Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Bindings Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Bindings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Binding" />
        <altmember cref="T:System.Windows.Forms.BindingContext" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
      </Docs>
    </Member>
    <Member MemberName="CancelCurrentEdit">
      <MemberSignature Language="C#" Value="public abstract void CancelCurrentEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelCurrentEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CancelCurrentEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CancelCurrentEdit();" />
      <MemberSignature Language="F#" Value="abstract member CancelCurrentEdit : unit -&gt; unit" Usage="bindingManagerBase.CancelCurrentEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="61c9b-150">Bricht beim Überschreiben in einer abgeleiteten Klasse den aktuellen Bearbeitungsvorgang ab.</span><span class="sxs-lookup"><span data-stu-id="61c9b-150">When overridden in a derived class, cancels the current edit.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c9b-151">Diese Methode wird nur unterstützt, wenn die Datenquelle die <xref:System.ComponentModel.IEditableObject>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="61c9b-151">This method is supported only if the data source implements the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="61c9b-152">Wenn das Objekt die <xref:System.ComponentModel.IEditableObject>-Schnittstelle nicht implementiert, werden die an den Daten vorgenommenen Änderungen nicht verworfen.</span><span class="sxs-lookup"><span data-stu-id="61c9b-152">If the object does not implement the <xref:System.ComponentModel.IEditableObject> interface, changes made to the data will not be discarded.</span></span>  
  
 <span data-ttu-id="61c9b-153">Wenn Sie die <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A>-Methode aufrufen, tritt das <xref:System.Windows.Forms.Binding.Format>-Ereignis auf.</span><span class="sxs-lookup"><span data-stu-id="61c9b-153">Calling the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> method causes the <xref:System.Windows.Forms.Binding.Format> event to occur.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61c9b-154">Im folgenden Codebeispiel werden die Methoden <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> und <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="61c9b-154">The following code example demonstrates both the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> and the <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> methods.</span></span> <span data-ttu-id="61c9b-155">Wenn Sie die <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A>-Methoden aufzurufen, werden die an den Daten vorgenommenen Änderungen verworfen.</span><span class="sxs-lookup"><span data-stu-id="61c9b-155">When you call the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> methods, changes made to the data are discarded.</span></span> <span data-ttu-id="61c9b-156">Wenn Sie die <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A>-Methode aufzurufen, werden die Änderungen beibehalten.</span><span class="sxs-lookup"><span data-stu-id="61c9b-156">When you call the <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> method, the changes are kept.</span></span>  
  
 [!code-cpp[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/CPP/canceledit.cpp#1)]
 [!code-csharp[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/CS/canceledit.cs#1)]
 [!code-vb[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/VB/canceledit.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public abstract int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.Count" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.BindingManagerBase.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61c9b-157">Ruft beim Überschreiben in einer abgeleiteten Klasse die Anzahl der Zeilen ab, die von der <see cref="T:System.Windows.Forms.BindingManagerBase" /> verwaltet werden.</span><span class="sxs-lookup"><span data-stu-id="61c9b-157">When overridden in a derived class, gets the number of rows managed by the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></summary>
        <value><span data-ttu-id="61c9b-158">Die Anzahl der Zeilen, die von der <see cref="T:System.Windows.Forms.BindingManagerBase" /> verwaltet werden.</span><span class="sxs-lookup"><span data-stu-id="61c9b-158">The number of rows managed by the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c9b-159">Verwenden Sie die <xref:System.Windows.Forms.BindingManagerBase.Count%2A>-Eigenschaft, um das letzte Element in der Liste der Zeilen zu bestimmen, die vom <xref:System.Windows.Forms.BindingManagerBase>verwaltet werden.</span><span class="sxs-lookup"><span data-stu-id="61c9b-159">Use the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property to determine the last item in the list of rows maintained by the <xref:System.Windows.Forms.BindingManagerBase>.</span></span> <span data-ttu-id="61c9b-160">Um zum letzten Element zu gelangen, legen Sie die <xref:System.Windows.Forms.BindingManagerBase.Position%2A>-Eigenschaft auf den <xref:System.Windows.Forms.BindingManagerBase.Count%2A>-Eigenschafts Wert minus 1 fest.</span><span class="sxs-lookup"><span data-stu-id="61c9b-160">To go to the last item, set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property to the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property value minus 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61c9b-161">Das folgende Codebeispiel zeigt vier Methoden, die die <xref:System.Windows.Forms.BindingManagerBase.Position%2A>-Eigenschaft festlegen.</span><span class="sxs-lookup"><span data-stu-id="61c9b-161">The following code example shows four methods that set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property.</span></span> <span data-ttu-id="61c9b-162">Durch die `MoveNext`-Methode wird die-Eigenschaft um 1 erhöht.</span><span class="sxs-lookup"><span data-stu-id="61c9b-162">The `MoveNext` method increments the property by 1.</span></span> <span data-ttu-id="61c9b-163">Die `MovePrevious`-Methode Dekremente die-Eigenschaft um 1.</span><span class="sxs-lookup"><span data-stu-id="61c9b-163">The `MovePrevious` method decrements the property by 1.</span></span> <span data-ttu-id="61c9b-164">Mit der `MoveFirst`-Methode wird die-Eigenschaft auf 0 festgelegt.</span><span class="sxs-lookup"><span data-stu-id="61c9b-164">The `MoveFirst` method sets the property to 0.</span></span> <span data-ttu-id="61c9b-165">Mit der `MoveLast`-Methode wird die-Eigenschaft auf den Wert der <xref:System.Windows.Forms.BindingManagerBase.Count%2A>-Eigenschaft minus 1 festgelegt.</span><span class="sxs-lookup"><span data-stu-id="61c9b-165">The `MoveLast` method sets the property to the value of the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property minus 1.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Position" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public abstract object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.Current" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Windows.Forms.BindingManagerBase.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61c9b-166">Ruft beim Überschreiben in einer abgeleiteten Klasse das aktuelle Objekt ab.</span><span class="sxs-lookup"><span data-stu-id="61c9b-166">When overridden in a derived class, gets the current object.</span></span></summary>
        <value><span data-ttu-id="61c9b-167">Ein <see cref="T:System.Object" />, das das aktuelle Objekt darstellt.</span><span class="sxs-lookup"><span data-stu-id="61c9b-167">An <see cref="T:System.Object" /> that represents the current object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c9b-168">Das <xref:System.Windows.Forms.BindingManagerBase.Current%2A>-Objekt enthält den Wert des aktuellen Elements in der Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="61c9b-168">The <xref:System.Windows.Forms.BindingManagerBase.Current%2A> object contains the value of the current item in the data source.</span></span> <span data-ttu-id="61c9b-169">Wenn Sie den Wert des aktuellen Elements verwenden möchten, müssen Sie das Element in den <xref:System.Type> des Objekts umwandeln, das im <xref:System.Windows.Forms.Binding.DataSource%2A>enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="61c9b-169">To use the value of the current item, you must cast the item to the <xref:System.Type> of the object contained by the <xref:System.Windows.Forms.Binding.DataSource%2A>.</span></span> <span data-ttu-id="61c9b-170">Eine <xref:System.Data.DataTable> z. b. <xref:System.Data.DataRowView>-Objekte enthält.</span><span class="sxs-lookup"><span data-stu-id="61c9b-170">For example, a <xref:System.Data.DataTable> contains <xref:System.Data.DataRowView> objects.</span></span> <span data-ttu-id="61c9b-171">Verwenden Sie die Methoden <xref:System.Object.GetType%2A> und <xref:System.Type.ToString%2A>, um den Typ des aktuellen Objekts zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="61c9b-171">To determine the type of the current object, use the <xref:System.Object.GetType%2A> and <xref:System.Type.ToString%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="61c9b-172">Wenn die <xref:System.Windows.Forms.Binding.DataSource%2A> eine <xref:System.Data.DataSet>, <xref:System.Data.DataViewManager>oder <xref:System.Data.DataTable>ist, binden Sie tatsächlich an eine <xref:System.Data.DataView>.</span><span class="sxs-lookup"><span data-stu-id="61c9b-172">When the <xref:System.Windows.Forms.Binding.DataSource%2A> is a <xref:System.Data.DataSet>, <xref:System.Data.DataViewManager>, or <xref:System.Data.DataTable>, you are actually binding to a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="61c9b-173">Folglich ist jedes <xref:System.Windows.Forms.BindingManagerBase.Current%2A> Objekt ein <xref:System.Data.DataRowView> Objekt.</span><span class="sxs-lookup"><span data-stu-id="61c9b-173">Consequently, each <xref:System.Windows.Forms.BindingManagerBase.Current%2A> object is a <xref:System.Data.DataRowView> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61c9b-174">Im folgenden Codebeispiel wird der Wert des <xref:System.Windows.Forms.BindingManagerBase.Current%2A> Objekts in einer <xref:System.Windows.Forms.BindingManagerBase> im <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged>-Ereignis ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="61c9b-174">The following code example prints the value of the <xref:System.Windows.Forms.BindingManagerBase.Current%2A> object in a <xref:System.Windows.Forms.BindingManagerBase> in the <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> event.</span></span> <span data-ttu-id="61c9b-175">Im Beispiel wird davon ausgegangen, dass die Datenquelle eine <xref:System.Data.DataTable> mit einer <xref:System.Data.DataColumn> mit dem Namen `CustName`ist.</span><span class="sxs-lookup"><span data-stu-id="61c9b-175">The example assumes the data source is a <xref:System.Data.DataTable> containing a <xref:System.Data.DataColumn> named `CustName`.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Current Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Current Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Current Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Position" />
      </Docs>
    </Member>
    <Member MemberName="CurrentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentChanged : EventHandler " Usage="member this.CurrentChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61c9b-176">Tritt ein, wenn das derzeit gebundene Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="61c9b-176">Occurs when the currently bound item changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c9b-177">Das <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged>-Ereignis wird ausgelöst, wenn die <xref:System.Windows.Forms.BindingManagerBase.Current%2A>-Eigenschaft geändert wird oder das <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged>-Ereignis auftritt.</span><span class="sxs-lookup"><span data-stu-id="61c9b-177">The <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> event is raised whenever the <xref:System.Windows.Forms.BindingManagerBase.Current%2A> property changes or the <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> event occurs.</span></span>  
  
 <span data-ttu-id="61c9b-178">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="61c9b-178">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61c9b-179">Im folgenden Codebeispiel wird der Wert des <xref:System.Windows.Forms.BindingManagerBase.Current%2A> Objekts in einer <xref:System.Windows.Forms.BindingManagerBase> im <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged>-Ereignis ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="61c9b-179">The following code example prints the value of the <xref:System.Windows.Forms.BindingManagerBase.Current%2A> object in a <xref:System.Windows.Forms.BindingManagerBase> in the <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> event.</span></span> <span data-ttu-id="61c9b-180">Im Beispiel wird davon ausgegangen, dass die Datenquelle eine <xref:System.Data.DataTable> mit einer <xref:System.Data.DataColumn> mit dem Namen `CustName`ist.</span><span class="sxs-lookup"><span data-stu-id="61c9b-180">The example assumes the data source is a <xref:System.Data.DataTable> containing a <xref:System.Data.DataColumn> named `CustName`.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Current Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Current Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Current Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Current" />
      </Docs>
    </Member>
    <Member MemberName="CurrentItemChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentItemChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentItemChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentItemChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentItemChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentItemChanged : EventHandler " Usage="member this.CurrentItemChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61c9b-181">Tritt ein, wenn sich der Zustand des momentan gebundenen Elements ändert.</span><span class="sxs-lookup"><span data-stu-id="61c9b-181">Occurs when the state of the currently bound item changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c9b-182">Das <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> Ereignis tritt auf, wenn sich der Zustand im aktuell gebundenen Element ändert.</span><span class="sxs-lookup"><span data-stu-id="61c9b-182">The <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> event occurs whenever there is a change in the state in the currently bound item.</span></span> <span data-ttu-id="61c9b-183">Dies kann vorkommen, wenn eine der Eigenschaften dieses Elements geändert wird oder wenn das Element selbst ersetzt oder verschoben wird.</span><span class="sxs-lookup"><span data-stu-id="61c9b-183">This can occur if one of the properties of this item is changed or if the item itself is replaced or moved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61c9b-184">Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="61c9b-184">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="61c9b-185">Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged>-Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="61c9b-185">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> event.</span></span> <span data-ttu-id="61c9b-186">Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.</span><span class="sxs-lookup"><span data-stu-id="61c9b-186">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="61c9b-187">Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, sollten Sie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> durch <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ersetzen oder die Nachricht an eine mehrzeilige <xref:System.Windows.Forms.TextBox> anhängen.</span><span class="sxs-lookup"><span data-stu-id="61c9b-187">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="61c9b-188">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz eines Typs enthält, der von <xref:System.Windows.Forms.BindingManagerBase> erbt, z. b. <xref:System.Windows.Forms.PropertyManager> oder <xref:System.Windows.Forms.CurrencyManager>.</span><span class="sxs-lookup"><span data-stu-id="61c9b-188">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.BindingManagerBase>, such as a <xref:System.Windows.Forms.PropertyManager> or <xref:System.Windows.Forms.CurrencyManager>.</span></span> <span data-ttu-id="61c9b-189">Benennen Sie dann die Instanz `BindingManagerBase1`, und stellen Sie sicher, dass der Ereignishandler dem Ereignis <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="61c9b-189">Then name the instance `BindingManagerBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#82](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#82)]
 [!code-vb[System.Windows.Forms.EventExamples#82](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#82)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataError">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingManagerDataErrorEventHandler DataError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingManagerDataErrorEventHandler DataError" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.DataError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataError As BindingManagerDataErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingManagerDataErrorEventHandler ^ DataError;" />
      <MemberSignature Language="F#" Value="member this.DataError : System.Windows.Forms.BindingManagerDataErrorEventHandler " Usage="member this.DataError : System.Windows.Forms.BindingManagerDataErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingManagerDataErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61c9b-190">Tritt ein, wenn eine <see cref="T:System.Exception" /> automatisch durch die <see cref="T:System.Windows.Forms.BindingManagerBase" /> behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="61c9b-190">Occurs when an <see cref="T:System.Exception" /> is silently handled by the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c9b-191">Dieses Ereignis dient nur zu Informationszwecken und meldet Common Language Specification (CLS)-kompatible Ausnahmen.</span><span class="sxs-lookup"><span data-stu-id="61c9b-191">This event is informational and reports Common Language Specification (CLS)-compliant exceptions only.</span></span> <span data-ttu-id="61c9b-192">Um zu ermitteln, welche Art von Ausnahme aufgetreten ist, behandeln Sie dieses Ereignis, und überprüfen Sie die <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A>-Eigenschaft des <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="61c9b-192">To determine what type of exception occurred, handle this event and check the <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A> property of the <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs>.</span></span>  
  
 <span data-ttu-id="61c9b-193">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="61c9b-193">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61c9b-194">Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="61c9b-194">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="61c9b-195">Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.BindingManagerBase.DataError>-Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="61c9b-195">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.BindingManagerBase.DataError> event.</span></span> <span data-ttu-id="61c9b-196">Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.</span><span class="sxs-lookup"><span data-stu-id="61c9b-196">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="61c9b-197">Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, sollten Sie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> durch <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ersetzen oder die Nachricht an eine mehrzeilige <xref:System.Windows.Forms.TextBox> anhängen.</span><span class="sxs-lookup"><span data-stu-id="61c9b-197">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="61c9b-198">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz eines Typs enthält, der von <xref:System.Windows.Forms.BindingManagerBase> erbt, z. b. <xref:System.Windows.Forms.PropertyManager> oder <xref:System.Windows.Forms.CurrencyManager>.</span><span class="sxs-lookup"><span data-stu-id="61c9b-198">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.BindingManagerBase>, such as a <xref:System.Windows.Forms.PropertyManager> or <xref:System.Windows.Forms.CurrencyManager>.</span></span> <span data-ttu-id="61c9b-199">Benennen Sie dann die Instanz `BindingManagerBase1`, und stellen Sie sicher, dass der Ereignishandler dem Ereignis <xref:System.Windows.Forms.BindingManagerBase.DataError> zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="61c9b-199">Then name the instance `BindingManagerBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.BindingManagerBase.DataError> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#83](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#83)]
 [!code-vb[System.Windows.Forms.EventExamples#83](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#83)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCurrentEdit">
      <MemberSignature Language="C#" Value="public abstract void EndCurrentEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCurrentEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndCurrentEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndCurrentEdit();" />
      <MemberSignature Language="F#" Value="abstract member EndCurrentEdit : unit -&gt; unit" Usage="bindingManagerBase.EndCurrentEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="61c9b-200">Beendet beim Überschreiben in einer abgeleiteten Klasse den aktuellen Bearbeitungsvorgang.</span><span class="sxs-lookup"><span data-stu-id="61c9b-200">When overridden in a derived class, ends the current edit.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c9b-201">Diese Methode wird nur unterstützt, wenn die Datenquelle die <xref:System.ComponentModel.IEditableObject>-Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="61c9b-201">This method is supported only if the data source implements the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="61c9b-202">In diesem Fall werden Änderungen gespeichert.</span><span class="sxs-lookup"><span data-stu-id="61c9b-202">In that case, changes will be saved.</span></span> <span data-ttu-id="61c9b-203">Wenn das Objekt die <xref:System.ComponentModel.IEditableObject>-Schnittstelle nicht implementiert, werden die an den Daten vorgenommenen Änderungen nicht gespeichert.</span><span class="sxs-lookup"><span data-stu-id="61c9b-203">If the object does not implement the <xref:System.ComponentModel.IEditableObject> interface, changes made to the data will not be saved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61c9b-204">Im folgenden Codebeispiel werden die Methoden <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> und <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="61c9b-204">The following code example demonstrates both the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> and the <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> methods.</span></span> <span data-ttu-id="61c9b-205">Wenn Sie die <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A>-Methoden aufzurufen, werden die an den Daten vorgenommenen Änderungen verworfen.</span><span class="sxs-lookup"><span data-stu-id="61c9b-205">When you call the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> methods, changes made to the data are discarded.</span></span> <span data-ttu-id="61c9b-206">Wenn Sie die <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A>-Methode aufzurufen, werden die Änderungen beibehalten.</span><span class="sxs-lookup"><span data-stu-id="61c9b-206">When you call the <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> method, the changes are kept.</span></span>  
  
 [!code-cpp[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/CPP/canceledit.cpp#1)]
 [!code-csharp[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/CS/canceledit.cs#1)]
 [!code-vb[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/VB/canceledit.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetItemProperties">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="61c9b-207">Ruft die Liste der Eigenschaftsbeschreibungen für die Datenquelle ab.</span><span class="sxs-lookup"><span data-stu-id="61c9b-207">Gets the list of property descriptors for the data source.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties ();" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.GetItemProperties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemProperties () As PropertyDescriptorCollection" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties();" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : unit -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetItemProperties : unit -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="bindingManagerBase.GetItemProperties " FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public abstract System.ComponentModel.PropertyDescriptorCollection GetItemProperties ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItemProperties () As PropertyDescriptorCollection" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : unit -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="bindingManagerBase.GetItemProperties " FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="61c9b-208">Ruft beim Überschreiben in einer abgeleiteten Klasse die Auflistung von Eigenschaftenbezeichnern für die Bindung ab.</span><span class="sxs-lookup"><span data-stu-id="61c9b-208">When overridden in a derived class, gets the collection of property descriptors for the binding.</span></span></summary>
        <returns><span data-ttu-id="61c9b-209">Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, die die Eigenschaftenbezeichner für die Bindung darstellt.</span><span class="sxs-lookup"><span data-stu-id="61c9b-209">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the property descriptors for the binding.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61c9b-210">Im folgenden Codebeispiel wird die <xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A>-Methode verwendet, um eine <xref:System.ComponentModel.PropertyDescriptorCollection>zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="61c9b-210">The following code example uses the <xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A> method to return a <xref:System.ComponentModel.PropertyDescriptorCollection>.</span></span> <span data-ttu-id="61c9b-211">Im Beispiel werden die <xref:System.ComponentModel.MemberDescriptor.Name%2A> und der Wert des aktuellen <xref:System.Data.DataColumn> mithilfe der <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A>-Methode der <xref:System.ComponentModel.PropertyDescriptor>ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="61c9b-211">The example prints the <xref:System.ComponentModel.MemberDescriptor.Name%2A> and value of the current <xref:System.Data.DataColumn> using the <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> method of the <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.GetItemProperties Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.GetItemProperties Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.GetItemProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)" />
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="protected internal virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.Collections.ArrayList dataSources, System.Collections.ArrayList listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.Collections.ArrayList dataSources, class System.Collections.ArrayList listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.GetItemProperties(System.Collections.ArrayList,System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetItemProperties (dataSources As ArrayList, listAccessors As ArrayList) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(System::Collections::ArrayList ^ dataSources, System::Collections::ArrayList ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : System.Collections.ArrayList * System.Collections.ArrayList -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetItemProperties : System.Collections.ArrayList * System.Collections.ArrayList -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="bindingManagerBase.GetItemProperties (dataSources, listAccessors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSources" Type="System.Collections.ArrayList" />
        <Parameter Name="listAccessors" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="dataSources"><span data-ttu-id="61c9b-212">Eine <see cref="T:System.Collections.ArrayList" />, die die Datenquellen enthält.</span><span class="sxs-lookup"><span data-stu-id="61c9b-212">An <see cref="T:System.Collections.ArrayList" /> containing the data sources.</span></span></param>
        <param name="listAccessors"><span data-ttu-id="61c9b-213">Eine <see cref="T:System.Collections.ArrayList" />, die die gebundenen Eigenschaften der Tabelle enthält.</span><span class="sxs-lookup"><span data-stu-id="61c9b-213">An <see cref="T:System.Collections.ArrayList" /> containing the table's bound properties.</span></span></param>
        <summary><span data-ttu-id="61c9b-214">Ruft mithilfe der angegebenen <see cref="T:System.Collections.ArrayList" /> die Auflistung von Eigenschaftenbezeichnern für die Bindung ab.</span><span class="sxs-lookup"><span data-stu-id="61c9b-214">Gets the collection of property descriptors for the binding using the specified <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="61c9b-215">Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, die die Eigenschaftenbezeichner für die Bindung darstellt.</span><span class="sxs-lookup"><span data-stu-id="61c9b-215">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the property descriptors for the binding.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c9b-216">Diese Methode wird von Entwicklern verwendet, die Daten gebundene Steuerelemente erstellen.</span><span class="sxs-lookup"><span data-stu-id="61c9b-216">This method is used by developers creating data-bound controls.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)" />
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties (Type listType, int offset, System.Collections.ArrayList dataSources, System.Collections.ArrayList listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.Type listType, int32 offset, class System.Collections.ArrayList dataSources, class System.Collections.ArrayList listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.GetItemProperties(System.Type,System.Int32,System.Collections.ArrayList,System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetItemProperties (listType As Type, offset As Integer, dataSources As ArrayList, listAccessors As ArrayList) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(Type ^ listType, int offset, System::Collections::ArrayList ^ dataSources, System::Collections::ArrayList ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : Type * int * System.Collections.ArrayList * System.Collections.ArrayList -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetItemProperties : Type * int * System.Collections.ArrayList * System.Collections.ArrayList -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="bindingManagerBase.GetItemProperties (listType, offset, dataSources, listAccessors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listType" Type="System.Type" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="dataSources" Type="System.Collections.ArrayList" />
        <Parameter Name="listAccessors" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="listType"><span data-ttu-id="61c9b-217">Der <see cref="T:System.Type" /> der gebundenen Liste.</span><span class="sxs-lookup"><span data-stu-id="61c9b-217">The <see cref="T:System.Type" /> of the bound list.</span></span></param>
        <param name="offset"><span data-ttu-id="61c9b-218">Ein Zähler, der zum rekursiven Aufrufen der Methode verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="61c9b-218">A counter used to recursively call the method.</span></span></param>
        <param name="dataSources"><span data-ttu-id="61c9b-219">Eine <see cref="T:System.Collections.ArrayList" />, die die Datenquellen enthält.</span><span class="sxs-lookup"><span data-stu-id="61c9b-219">An <see cref="T:System.Collections.ArrayList" /> containing the data sources.</span></span></param>
        <param name="listAccessors"><span data-ttu-id="61c9b-220">Eine <see cref="T:System.Collections.ArrayList" />, die die gebundenen Eigenschaften der Tabelle enthält.</span><span class="sxs-lookup"><span data-stu-id="61c9b-220">An <see cref="T:System.Collections.ArrayList" /> containing the table's bound properties.</span></span></param>
        <summary><span data-ttu-id="61c9b-221">Ruft die Liste der Eigenschaften für die Elemente ab, die von dieser <see cref="T:System.Windows.Forms.BindingManagerBase" /> verwaltet werden.</span><span class="sxs-lookup"><span data-stu-id="61c9b-221">Gets the list of properties of the items managed by this <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></summary>
        <returns><span data-ttu-id="61c9b-222">Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, die die Eigenschaftenbezeichner für die Bindung darstellt.</span><span class="sxs-lookup"><span data-stu-id="61c9b-222">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the property descriptors for the binding.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c9b-223">Diese Überladung wird von Entwicklern verwendet, um Daten gebundene Steuerelemente zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="61c9b-223">This overload is used by developers to create data-bound controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61c9b-224">Im folgenden Codebeispiel wird die <xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A>-Methode verwendet, um eine <xref:System.ComponentModel.PropertyDescriptorCollection> für einen <xref:System.Windows.Forms.BindingManagerBase>zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="61c9b-224">The following code example uses the <xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A> method to return a <xref:System.ComponentModel.PropertyDescriptorCollection> for a <xref:System.Windows.Forms.BindingManagerBase>.</span></span> <span data-ttu-id="61c9b-225">Im Beispiel werden dann die <xref:System.ComponentModel.MemberDescriptor.Name%2A> und <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> der einzelnen <xref:System.ComponentModel.PropertyDescriptor> in der Auflistung ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="61c9b-225">The example then prints out the <xref:System.ComponentModel.MemberDescriptor.Name%2A> and <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> of each <xref:System.ComponentModel.PropertyDescriptor> in the collection.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.GetItemProperties2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.GetItemProperties2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties2 Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.GetItemProperties2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="protected internal abstract string GetListName (System.Collections.ArrayList listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetListName(class System.Collections.ArrayList listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetListName (listAccessors As ArrayList) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::String ^ GetListName(System::Collections::ArrayList ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetListName : System.Collections.ArrayList -&gt; string" Usage="bindingManagerBase.GetListName listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="listAccessors"><span data-ttu-id="61c9b-226">Eine <see cref="T:System.Collections.ArrayList" />, die die gebundenen Eigenschaften der Tabelle enthält.</span><span class="sxs-lookup"><span data-stu-id="61c9b-226">An <see cref="T:System.Collections.ArrayList" /> containing the table's bound properties.</span></span></param>
        <summary><span data-ttu-id="61c9b-227">Ruft beim Überschreiben in einer abgeleiteten Klasse den Namen der Liste ab, die die Daten für die Bindung liefert.</span><span class="sxs-lookup"><span data-stu-id="61c9b-227">When overridden in a derived class, gets the name of the list supplying the data for the binding.</span></span></summary>
        <returns><span data-ttu-id="61c9b-228">Der Name der Liste, die die Daten für die Bindung liefert.</span><span class="sxs-lookup"><span data-stu-id="61c9b-228">The name of the list supplying the data for the binding.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBindingSuspended">
      <MemberSignature Language="C#" Value="public bool IsBindingSuspended { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBindingSuspended" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.IsBindingSuspended" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBindingSuspended As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBindingSuspended { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBindingSuspended : bool" Usage="System.Windows.Forms.BindingManagerBase.IsBindingSuspended" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61c9b-229">Ruft einen Wert ab, der angibt, ob die Bindung aufgehoben ist.</span><span class="sxs-lookup"><span data-stu-id="61c9b-229">Gets a value indicating whether binding is suspended.</span></span></summary>
        <value><span data-ttu-id="61c9b-230"><see langword="true" />, wenn die Bindung aufgehoben wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="61c9b-230"><see langword="true" /> if binding is suspended; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBindingComplete">
      <MemberSignature Language="C#" Value="protected internal void OnBindingComplete (System.Windows.Forms.BindingCompleteEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnBindingComplete(class System.Windows.Forms.BindingCompleteEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub OnBindingComplete (args As BindingCompleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void OnBindingComplete(System::Windows::Forms::BindingCompleteEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="member this.OnBindingComplete : System.Windows.Forms.BindingCompleteEventArgs -&gt; unit" Usage="bindingManagerBase.OnBindingComplete args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Windows.Forms.BindingCompleteEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="61c9b-231">Ein <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="61c9b-231">A <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="61c9b-232">Löst das <see cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="61c9b-232">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c9b-233">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="61c9b-233">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="61c9b-234">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="61c9b-234">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="61c9b-235">Mit der <xref:System.Windows.Forms.BindingManagerBase.OnBindingComplete%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="61c9b-235">The <xref:System.Windows.Forms.BindingManagerBase.OnBindingComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="61c9b-236">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="61c9b-236">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="61c9b-237">Wenn Sie <see cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="61c9b-237">When overriding <see cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnCurrentChanged">
      <MemberSignature Language="C#" Value="protected internal abstract void OnCurrentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnCurrentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnCurrentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnCurrentChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCurrentChanged : EventArgs -&gt; unit" Usage="bindingManagerBase.OnCurrentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="61c9b-238">Das <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="61c9b-238">The <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="61c9b-239">Löst das <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="61c9b-239">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c9b-240">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="61c9b-240">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="61c9b-241">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="61c9b-241">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="61c9b-242">Mit der <xref:System.Windows.Forms.BindingManagerBase.OnCurrentChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="61c9b-242">The <xref:System.Windows.Forms.BindingManagerBase.OnCurrentChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="61c9b-243">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="61c9b-243">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="61c9b-244">Wenn Sie <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="61c9b-244">When overriding <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Current" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Position" />
      </Docs>
    </Member>
    <Member MemberName="onCurrentChangedHandler">
      <MemberSignature Language="C#" Value="protected EventHandler onCurrentChangedHandler;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.EventHandler onCurrentChangedHandler" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.BindingManagerBase.onCurrentChangedHandler" />
      <MemberSignature Language="VB.NET" Value="Protected onCurrentChangedHandler As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="protected: EventHandler ^ onCurrentChangedHandler;" />
      <MemberSignature Language="F#" Value="val mutable onCurrentChangedHandler : EventHandler" Usage="System.Windows.Forms.BindingManagerBase.onCurrentChangedHandler" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61c9b-245">Gibt den Ereignishandler für das <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />-Ereignis an.</span><span class="sxs-lookup"><span data-stu-id="61c9b-245">Specifies the event handler for the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnCurrentItemChanged">
      <MemberSignature Language="C#" Value="protected internal abstract void OnCurrentItemChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnCurrentItemChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnCurrentItemChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnCurrentItemChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCurrentItemChanged : EventArgs -&gt; unit" Usage="bindingManagerBase.OnCurrentItemChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="61c9b-246">Das <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="61c9b-246">The <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="61c9b-247">Löst das <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="61c9b-247">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c9b-248">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="61c9b-248">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="61c9b-249">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="61c9b-249">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="61c9b-250">Mit der <xref:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="61c9b-250">The <xref:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="61c9b-251">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="61c9b-251">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="61c9b-252">Wenn Sie <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="61c9b-252">When overriding <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Current" />
      </Docs>
    </Member>
    <Member MemberName="OnDataError">
      <MemberSignature Language="C#" Value="protected internal void OnDataError (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnDataError(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub OnDataError (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void OnDataError(Exception ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnDataError : Exception -&gt; unit" Usage="bindingManagerBase.OnDataError e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="61c9b-253">Eine <see cref="T:System.Exception" />, die das <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" />-Ereignis ausgelöst hat.</span><span class="sxs-lookup"><span data-stu-id="61c9b-253">An <see cref="T:System.Exception" /> that caused the <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" /> event to occur.</span></span></param>
        <summary><span data-ttu-id="61c9b-254">Löst das <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="61c9b-254">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c9b-255">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="61c9b-255">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="61c9b-256">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="61c9b-256">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="61c9b-257">Mit der <xref:System.Windows.Forms.BindingManagerBase.OnDataError%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="61c9b-257">The <xref:System.Windows.Forms.BindingManagerBase.OnDataError%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="61c9b-258">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="61c9b-258">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="61c9b-259">Wenn Sie <see cref="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="61c9b-259">When overriding <see cref="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="onPositionChangedHandler">
      <MemberSignature Language="C#" Value="protected EventHandler onPositionChangedHandler;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.EventHandler onPositionChangedHandler" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.BindingManagerBase.onPositionChangedHandler" />
      <MemberSignature Language="VB.NET" Value="Protected onPositionChangedHandler As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="protected: EventHandler ^ onPositionChangedHandler;" />
      <MemberSignature Language="F#" Value="val mutable onPositionChangedHandler : EventHandler" Usage="System.Windows.Forms.BindingManagerBase.onPositionChangedHandler" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61c9b-260">Gibt den Ereignishandler für das <see cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />-Ereignis an.</span><span class="sxs-lookup"><span data-stu-id="61c9b-260">Specifies the event handler for the <see cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public abstract int Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.Position" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Position As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Position { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int with get, set" Usage="System.Windows.Forms.BindingManagerBase.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61c9b-261">Ruft beim Überschreiben in einer abgeleiteten Klasse die Position in der zugrunde liegenden Liste ab, auf die an diese Datenquelle gebundene Steuerelemente verweisen, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="61c9b-261">When overridden in a derived class, gets or sets the position in the underlying list that controls bound to this data source point to.</span></span></summary>
        <value><span data-ttu-id="61c9b-262">Ein nullbasierter Index, der eine Position in der zugrunde liegenden Liste angibt.</span><span class="sxs-lookup"><span data-stu-id="61c9b-262">A zero-based index that specifies a position in the underlying list.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c9b-263">Verwenden Sie die <xref:System.Windows.Forms.BindingManagerBase.Position%2A>-Eigenschaft, um die zugrunde liegende Liste zu durchlaufen, die vom <xref:System.Windows.Forms.BindingManagerBase>verwaltet wird.</span><span class="sxs-lookup"><span data-stu-id="61c9b-263">Use the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property to iterate through the underlying list maintained by the <xref:System.Windows.Forms.BindingManagerBase>.</span></span> <span data-ttu-id="61c9b-264">Um zum ersten Element zu wechseln, legen Sie den <xref:System.Windows.Forms.BindingManagerBase.Position%2A> auf 0 fest.</span><span class="sxs-lookup"><span data-stu-id="61c9b-264">To go to the first item, set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> to 0.</span></span> <span data-ttu-id="61c9b-265">Um zum Ende der Liste zu gelangen, legen Sie den <xref:System.Windows.Forms.BindingManagerBase.Position%2A> auf den Wert der <xref:System.Windows.Forms.BindingManagerBase.Count%2A>-Eigenschaft minus 1 fest.</span><span class="sxs-lookup"><span data-stu-id="61c9b-265">To go to the end of the list, set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> to the value of the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property minus 1.</span></span>  
  
 <span data-ttu-id="61c9b-266">Das <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> Ereignis tritt auf, wenn sich der <xref:System.Windows.Forms.BindingManagerBase.Position%2A>-Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="61c9b-266">The <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> event occurs when the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property value changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61c9b-267">Das folgende Codebeispiel zeigt vier Methoden, die die <xref:System.Windows.Forms.BindingManagerBase.Position%2A>-Eigenschaft festlegen.</span><span class="sxs-lookup"><span data-stu-id="61c9b-267">The following code example shows four methods that set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property.</span></span> <span data-ttu-id="61c9b-268">Durch die `MoveNext`-Methode wird die-Eigenschaft um 1 erhöht.</span><span class="sxs-lookup"><span data-stu-id="61c9b-268">The `MoveNext` method increments the property by 1.</span></span> <span data-ttu-id="61c9b-269">Die `MovePrevious`-Methode Dekremente die-Eigenschaft um 1.</span><span class="sxs-lookup"><span data-stu-id="61c9b-269">The `MovePrevious` method decrements the property by 1.</span></span> <span data-ttu-id="61c9b-270">Mit der `MoveFirst`-Methode wird die-Eigenschaft auf 0 festgelegt, und die `MoveLast`-Methode legt die-Eigenschaft auf den Wert der <xref:System.Windows.Forms.BindingManagerBase.Count%2A>-Eigenschaft minus 1 fest.</span><span class="sxs-lookup"><span data-stu-id="61c9b-270">The `MoveFirst` method sets the property to 0, and the `MoveLast` method sets the property to the value of the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property minus 1.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Current" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Count" />
      </Docs>
    </Member>
    <Member MemberName="PositionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PositionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PositionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PositionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PositionChanged;" />
      <MemberSignature Language="F#" Value="member this.PositionChanged : EventHandler " Usage="member this.PositionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61c9b-271">Tritt ein, nachdem sich der Wert der <see cref="P:System.Windows.Forms.BindingManagerBase.Position" />-Eigenschaft geändert hat.</span><span class="sxs-lookup"><span data-stu-id="61c9b-271">Occurs after the value of the <see cref="P:System.Windows.Forms.BindingManagerBase.Position" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c9b-272">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="61c9b-272">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61c9b-273">Im folgenden Codebeispiel wird eine <xref:System.Windows.Forms.Binding>erstellt und dann einer Auflistung von <xref:System.Windows.Forms.Binding>-Objekten für ein <xref:System.Windows.Forms.TextBox>-Steuerelement hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="61c9b-273">The following code example creates a <xref:System.Windows.Forms.Binding>, and then adds it to a collection of <xref:System.Windows.Forms.Binding> objects for a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="61c9b-274">Anschließend ruft das Beispiel die <xref:System.Windows.Forms.BindingManagerBase> für die Datenquelle ab und fügt dem <xref:System.Windows.Forms.BindingManagerBase.PositionChanged>-Ereignis einen Delegaten hinzu.</span><span class="sxs-lookup"><span data-stu-id="61c9b-274">The example then gets the <xref:System.Windows.Forms.BindingManagerBase> for the data source and adds a delegate to the <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> event.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.PositionChanged Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.PositionChanged Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.PositionChanged Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.PositionChanged Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.PositionChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.PositionChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PullData">
      <MemberSignature Language="C#" Value="protected void PullData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PullData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.PullData" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PullData ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PullData();" />
      <MemberSignature Language="F#" Value="member this.PullData : unit -&gt; unit" Usage="bindingManagerBase.PullData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="61c9b-275">Zieht Daten aus dem datengebundenen Steuerelement in die Datenquelle und gibt dabei keine Informationen zurück.</span><span class="sxs-lookup"><span data-stu-id="61c9b-275">Pulls data from the data-bound control into the data source, returning no information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c9b-276">Die <xref:System.Windows.Forms.BindingManagerBase.PullData%2A>-Methode ist eine programmgesteuerte Methode zum Abrufen von Informationen aus dem Daten gebundenen Steuerelement zurück in die Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="61c9b-276">The <xref:System.Windows.Forms.BindingManagerBase.PullData%2A> method is a programmatic way to pull information from the data-bound control back into the data source.</span></span> <span data-ttu-id="61c9b-277">Der Standardbetrieb eines Steuer Elements ist nicht erforderlich, da ein Steuerelement normalerweise seine gebundene Datenquelle automatisch aktualisiert, wenn es den Fokus verlässt.</span><span class="sxs-lookup"><span data-stu-id="61c9b-277">It is not required for standard operation of a control, since normally a control automatically updates its bound data source when focus leaves it.</span></span>  
  
 <span data-ttu-id="61c9b-278"><xref:System.Windows.Forms.BindingManagerBase.PullData%2A> löst das <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> Ereignis und die Änderungs Ereignisse für die Datenquelle entsprechend aus.</span><span class="sxs-lookup"><span data-stu-id="61c9b-278"><xref:System.Windows.Forms.BindingManagerBase.PullData%2A> raises the <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event and change events on the data source as appropriate.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.PushData" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="PushData">
      <MemberSignature Language="C#" Value="protected void PushData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PushData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.PushData" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PushData ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PushData();" />
      <MemberSignature Language="F#" Value="member this.PushData : unit -&gt; unit" Usage="bindingManagerBase.PushData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="61c9b-279">Legt Daten aus der Datenquelle im datengebundenen Steuerelement ab und gibt dabei keine Informationen zurück.</span><span class="sxs-lookup"><span data-stu-id="61c9b-279">Pushes data from the data source into the data-bound control, returning no information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c9b-280">Die <xref:System.Windows.Forms.BindingManagerBase.PushData%2A>-Methode ist eine programmgesteuerte Möglichkeit zum Übertragung von Informationen aus der Datenquelle in das Daten gebundene Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="61c9b-280">The <xref:System.Windows.Forms.BindingManagerBase.PushData%2A> method is a programmatic way to push information from the data source into the data-bound control.</span></span> <span data-ttu-id="61c9b-281">Diese Methode ist nicht erforderlich, wenn die Datenquelle die <xref:System.ComponentModel.IBindingList?displayProperty=nameWithType>-Schnittstelle implementiert, da das <xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=nameWithType> Ereignis automatisch bewirken soll, dass das Steuerelement über seinen Currency Manager aktualisiert wird.</span><span class="sxs-lookup"><span data-stu-id="61c9b-281">This method is not required if the data source implements the <xref:System.ComponentModel.IBindingList?displayProperty=nameWithType> interface, because the <xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=nameWithType> event should automatically cause the control to be updated through its currency manager.</span></span>  
  
 <span data-ttu-id="61c9b-282">Wenn diese Methode ausgegeben wird, wenn ein <xref:System.Windows.Forms.BindingManagerBase.PullData%2A> Vorgang ausgeführt wird, gibt die <xref:System.Windows.Forms.BindingManagerBase.PushData%2A>-Methode sofort den Wert `true`zurück.</span><span class="sxs-lookup"><span data-stu-id="61c9b-282">If this method is issued when a <xref:System.Windows.Forms.BindingManagerBase.PullData%2A> operation is being performed, the <xref:System.Windows.Forms.BindingManagerBase.PushData%2A> method returns immediately with a value of `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.PullData" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
        <altmember cref="T:System.ComponentModel.IBindingList" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public abstract void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="bindingManagerBase.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="61c9b-283">Der Index der zu löschenden Zeile.</span><span class="sxs-lookup"><span data-stu-id="61c9b-283">The index of the row to delete.</span></span></param>
        <summary><span data-ttu-id="61c9b-284">Löscht beim Überschreiben in einer abgeleiteten Klasse die Zeile am angegebenen Index aus der zugrunde liegenden Liste.</span><span class="sxs-lookup"><span data-stu-id="61c9b-284">When overridden in a derived class, deletes the row at the specified index from the underlying list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c9b-285">Die <xref:System.Windows.Forms.BindingManagerBase.RemoveAt%2A>-Methode hängt von der zugrunde liegenden Datenquelle ab, um zu bestimmen, wie sich die Methode verhält.</span><span class="sxs-lookup"><span data-stu-id="61c9b-285">The <xref:System.Windows.Forms.BindingManagerBase.RemoveAt%2A> method relies on the underlying data source to determine how the method behaves.</span></span> <span data-ttu-id="61c9b-286">(Eine Liste der unterstützten Datenquellen finden Sie in der <xref:System.Windows.Forms.Binding>-Klasse.) Bei Klassen, die <xref:System.Collections.IList>, <xref:System.ComponentModel.IBindingList>oder <xref:System.ComponentModel.ITypedList>sowie stark typisierte Klassen implementieren, die <xref:System.Collections.IList>implementieren, löscht die <xref:System.Windows.Forms.BindingManagerBase.RemoveAt%2A>-Methode die Zeile in der zugrunde liegenden Liste, anstatt ihren Inhalt zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="61c9b-286">(See the <xref:System.Windows.Forms.Binding> class for a list of supported data sources.) For classes that implement <xref:System.Collections.IList>, <xref:System.ComponentModel.IBindingList>, or <xref:System.ComponentModel.ITypedList>, as well as strongly typed classes that implement <xref:System.Collections.IList>, the <xref:System.Windows.Forms.BindingManagerBase.RemoveAt%2A> method actually deletes the row in the underlying list instead of removing its contents.</span></span>  
  
 <span data-ttu-id="61c9b-287">Wenn die zugrunde liegende Liste die <xref:System.ComponentModel.IBindingList>-Schnittstelle implementiert, muss die <xref:System.ComponentModel.IBindingList.AllowRemove%2A>-Eigenschaft `true`zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="61c9b-287">If the underlying list implements the <xref:System.ComponentModel.IBindingList> interface, the <xref:System.ComponentModel.IBindingList.AllowRemove%2A> property must return `true`.</span></span> <span data-ttu-id="61c9b-288">Wenn die zugrunde liegende Liste die <xref:System.Collections.IList>-Schnittstelle implementiert, muss die <xref:System.Collections.IList.IsFixedSize%2A>-Eigenschaft `false`zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="61c9b-288">If the underlying list implements the <xref:System.Collections.IList> interface, the <xref:System.Collections.IList.IsFixedSize%2A> property must return `false`.</span></span>  
  
   
  
## Examples  
 [!code-cpp[BindingManagerBase_RemoveAt#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase_RemoveAt/CPP/bindingmanagerbase_removeat.cpp#1)]
 [!code-csharp[BindingManagerBase_RemoveAt#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase_RemoveAt/CS/bindingmanagerbase_removeat.cs#1)]
 [!code-vb[BindingManagerBase_RemoveAt#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase_RemoveAt/VB/bindingmanagerbase_removeat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="61c9b-289">Am angegebenen <paramref name="index" /> ist keine Zeile vorhanden.</span><span class="sxs-lookup"><span data-stu-id="61c9b-289">There is no row at the specified <paramref name="index" />.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Position" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="ResumeBinding">
      <MemberSignature Language="C#" Value="public abstract void ResumeBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResumeBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ResumeBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ResumeBinding();" />
      <MemberSignature Language="F#" Value="abstract member ResumeBinding : unit -&gt; unit" Usage="bindingManagerBase.ResumeBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="61c9b-290">Setzt beim Überschreiben in einer abgeleiteten Klasse die Datenbindung fort.</span><span class="sxs-lookup"><span data-stu-id="61c9b-290">When overridden in a derived class, resumes data binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c9b-291"><xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> und <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> sind zwei Methoden, die eine vorübergehende Unterbrechung und Wiederaufnahme der Datenbindung ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="61c9b-291"><xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of data binding.</span></span> <span data-ttu-id="61c9b-292">Normalerweise würden Sie die Datenbindung aussetzen, wenn der Benutzerdaten Felder vor der Validierung bearbeiten darf.</span><span class="sxs-lookup"><span data-stu-id="61c9b-292">You would typically suspend data binding if the user must be allowed to edit data fields before validation occurs.</span></span> <span data-ttu-id="61c9b-293">Beispielsweise muss der Benutzer möglicherweise ein Feld ändern, sodass es mit einem zweiten Feld übereinstimmt. Andernfalls würde das Überprüfen des ersten Felds bewirken, dass das zweite Feld fehlerhaft ist.</span><span class="sxs-lookup"><span data-stu-id="61c9b-293">For example, the user might need to change a field to be in accordance with a second field; otherwise, validating the first field would cause the second field to be in error.</span></span>  
  
   
  
## Examples  
 [!code-cpp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CPP/bindingmanagerbase_suspend_resume_binding.cpp#2)]
 [!code-csharp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CS/bindingmanagerbase_suspend_resume_binding.cs#2)]
 [!code-vb[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/VB/bindingmanagerbase_suspend_resume_binding.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="SuspendBinding">
      <MemberSignature Language="C#" Value="public abstract void SuspendBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SuspendBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SuspendBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SuspendBinding();" />
      <MemberSignature Language="F#" Value="abstract member SuspendBinding : unit -&gt; unit" Usage="bindingManagerBase.SuspendBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="61c9b-294">Unterbricht die Datenbindung beim Überschreiben in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="61c9b-294">When overridden in a derived class, suspends data binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c9b-295"><xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> und <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> sind zwei Methoden, die eine vorübergehende Unterbrechung und Wiederaufnahme der Datenbindung ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="61c9b-295"><xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of data binding.</span></span> <span data-ttu-id="61c9b-296">Normalerweise würden Sie die Datenbindung aussetzen, wenn der Benutzerdaten Felder vor der Validierung bearbeiten darf.</span><span class="sxs-lookup"><span data-stu-id="61c9b-296">You would typically suspend data binding if the user must be allowed to edit data fields before validation occurs.</span></span> <span data-ttu-id="61c9b-297">Beispielsweise muss der Benutzer möglicherweise ein Feld ändern, sodass es mit einem zweiten Feld übereinstimmt. Andernfalls würde das Überprüfen des ersten Felds bewirken, dass das zweite Feld fehlerhaft ist.</span><span class="sxs-lookup"><span data-stu-id="61c9b-297">For example, the user might need to change a field to be in accordance with a second field; otherwise, validating the first field would cause the second field to be in error.</span></span>  
  
   
  
## Examples  
 [!code-cpp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CPP/bindingmanagerbase_suspend_resume_binding.cpp#2)]
 [!code-csharp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CS/bindingmanagerbase_suspend_resume_binding.cs#2)]
 [!code-vb[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/VB/bindingmanagerbase_suspend_resume_binding.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="UpdateIsBinding">
      <MemberSignature Language="C#" Value="protected abstract void UpdateIsBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UpdateIsBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub UpdateIsBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void UpdateIsBinding();" />
      <MemberSignature Language="F#" Value="abstract member UpdateIsBinding : unit -&gt; unit" Usage="bindingManagerBase.UpdateIsBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="61c9b-298">Aktualisiert die Bindung beim Überschreiben in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="61c9b-298">When overridden in a derived class, updates the binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61c9b-299">Die <xref:System.Windows.Forms.BindingManagerBase.UpdateIsBinding%2A>-Methode aktualisiert die Datenbindung zwischen dem gebundenen Steuerelement und seiner Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="61c9b-299">The <xref:System.Windows.Forms.BindingManagerBase.UpdateIsBinding%2A> method updates the data binding between the bound control and its data source.</span></span> <span data-ttu-id="61c9b-300">Bei komplexen Daten Bindungs Szenarien wird die aktuelle Position auch auf den Anfang der zugrunde liegenden Liste zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="61c9b-300">For complex data-binding scenarios, it also resets the current position to the beginning of the underlying list.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
  </Members>
</Type>
