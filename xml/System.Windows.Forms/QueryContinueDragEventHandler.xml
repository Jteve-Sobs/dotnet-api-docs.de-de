<Type Name="QueryContinueDragEventHandler" FullName="System.Windows.Forms.QueryContinueDragEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bd9b8f8a36b64f067a4aef5fd3440863ba4169ca" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void QueryContinueDragEventHandler(object sender, QueryContinueDragEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed QueryContinueDragEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.QueryContinueDragEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub QueryContinueDragEventHandler(sender As Object, e As QueryContinueDragEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void QueryContinueDragEventHandler(System::Object ^ sender, QueryContinueDragEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Forms.QueryContinueDragEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="e681c-101">Die Quelle eines Ereignisses.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e681c-101">The source of an event.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="e681c-102">Ein <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" />, das die Ereignisdaten enthält.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e681c-102">A <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> that contains the event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="e681c-103">Stellt die Methode zur Behandlung des <see cref="E:System.Windows.Forms.Control.QueryContinueDrag" />-Ereignisses eines <see cref="T:System.Windows.Forms.Control" />-Objekts dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e681c-103">Represents the method that will handle the <see cref="E:System.Windows.Forms.Control.QueryContinueDrag" /> event of a <see cref="T:System.Windows.Forms.Control" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e681c-104">Beim Erstellen eines <xref:System.Windows.Forms.QueryContinueDragEventHandler>-Delegaten bestimmen Sie die Methode für die Ereignisbehandlung.</span><span class="sxs-lookup"><span data-stu-id="e681c-104">When you create a <xref:System.Windows.Forms.QueryContinueDragEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="e681c-105">Um dem Ereignishandler das Ereignis zuzuordnen, fügen Sie dem Ereignis eine Instanz des Delegaten hinzu.</span><span class="sxs-lookup"><span data-stu-id="e681c-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="e681c-106">Der Ereignishandler wird bei jedem Eintreten des Ereignisses aufgerufen, sofern der Delegat nicht entfernt wird.</span><span class="sxs-lookup"><span data-stu-id="e681c-106">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="e681c-107">Weitere Informationen zur Behandlung von Ereignissen mit Delegaten finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="e681c-107">For more information about handling events with delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e681c-108">Das folgende Beispiel zeigt einen Drag-and-Drop-Vorgang zwischen zwei <xref:System.Windows.Forms.ListBox> Steuerelemente.</span><span class="sxs-lookup"><span data-stu-id="e681c-108">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="e681c-109">Im Beispiel wird die <xref:System.Windows.Forms.Control.DoDragDrop%2A> Methode, wenn der Ziehvorgang beginnt.</span><span class="sxs-lookup"><span data-stu-id="e681c-109">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="e681c-110">Der Ziehvorgang beginnt, wenn die Maus bewegt hat mehr als <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> aus die Position des Mauszeigers während der <xref:System.Windows.Forms.Control.MouseDown> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="e681c-110">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="e681c-111">Die <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> Methode wird verwendet, um zu bestimmen, den Index des Elements, das beim Ziehen die `MouseDown` Ereignis.</span><span class="sxs-lookup"><span data-stu-id="e681c-111">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="e681c-112">Das Beispiel veranschaulicht außerdem die Verwendung von benutzerdefiniertem Cursor für den Drag & Drop-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="e681c-112">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="e681c-113">Im Beispiel wird davon ausgegangen, dass zwei Cursordateien `3dwarro.cur` und `3dwno.cur`, im Anwendungsverzeichnis, für den benutzerdefinierten vorhanden und Drop bzw. den Cursor.</span><span class="sxs-lookup"><span data-stu-id="e681c-113">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="e681c-114">Die benutzerdefinierte Cursor verwendet werden, wenn die `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="e681c-114">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="e681c-115">Die benutzerdefinierte Cursor werden festgelegt, der <xref:System.Windows.Forms.Control.GiveFeedback> -Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="e681c-115">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="e681c-116">Die Tastaturstatus wird ausgewertet, der <xref:System.Windows.Forms.Control.DragOver> -Ereignishandler für das Recht `ListBox`, um zu bestimmen, welche des Ziehvorgangs werden basierend auf den Zustand der Tasten UMSCHALT, STRG, ALT oder STRG + ALT.</span><span class="sxs-lookup"><span data-stu-id="e681c-116">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="e681c-117">Die Position in der `ListBox` , in die Dropdownliste käme werden auch während des bestimmt die `DragOver` Ereignis.</span><span class="sxs-lookup"><span data-stu-id="e681c-117">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="e681c-118">Wenn die Daten so löschen Sie keine `String`, die <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> auf festgelegt ist <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e681c-118">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e681c-119">Schließlich wird der Status des im Dropdownmenü angezeigt, der `DropLocationLabel` <xref:System.Windows.Forms.Label>.</span><span class="sxs-lookup"><span data-stu-id="e681c-119">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="e681c-120">Die Daten für das Recht löschen `ListBox` wird bestimmt, der <xref:System.Windows.Forms.Control.DragDrop> -Ereignishandler und die `String` Wert wird an die entsprechende Stelle im hinzugefügt der `ListBox`.</span><span class="sxs-lookup"><span data-stu-id="e681c-120">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="e681c-121">Wenn der Ziehvorgang außerhalb der Grenzen des Formulars verschoben, der Drag-and-Drop-Vorgang abgebrochen wird, der <xref:System.Windows.Forms.Control.QueryContinueDrag> -Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="e681c-121">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="e681c-122">Dieser Code veranschaulicht die Verwendung der <xref:System.Windows.Forms.QueryContinueDragEventHandler> mit Delegieren der <xref:System.Windows.Forms.Control.QueryContinueDrag> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="e681c-122">This code excerpt demonstrates using the <xref:System.Windows.Forms.QueryContinueDragEventHandler> delegate with the <xref:System.Windows.Forms.Control.QueryContinueDrag> event.</span></span> <span data-ttu-id="e681c-123">Finden Sie unter der <xref:System.Windows.Forms.Control.DoDragDrop%2A> Methode für das gesamte Codebeispiel dargestellt.</span><span class="sxs-lookup"><span data-stu-id="e681c-123">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.QueryContinueDrag" />
    <altmember cref="T:System.Windows.Forms.QueryContinueDragEventArgs" />
  </Docs>
</Type>