<Type Name="DrawItemEventArgs" FullName="System.Windows.Forms.DrawItemEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="03f906b1b0a5ea220c5c6ddf51c845af60280bbe" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78811690" /></Metadata><TypeSignature Language="C#" Value="public class DrawItemEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawItemEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DrawItemEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DrawItemEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DrawItemEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DrawItemEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Daten für das <see langword="DrawItem" />-Ereignis bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das `DrawItem`-Ereignis wird von Steuerelementen für das Zeichnen von Besitzern ausgelöst, z. b. die <xref:System.Windows.Forms.ListBox> und <xref:System.Windows.Forms.ComboBox> Steuerelemente Sie enthält alle Informationen, die für den Benutzer erforderlich sind, um das angegebene Element zu zeichnen, einschließlich des Element Indexes, des <xref:System.Drawing.Rectangle>und des <xref:System.Drawing.Graphics>, auf dem die Zeichnung durchgeführt werden soll.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie <xref:System.Windows.Forms.ListBox> Elemente mit Besitzer gezeichnet erstellt werden. Der Code verwendet die <xref:System.Windows.Forms.ListBox.DrawMode%2A>-Eigenschaft, um anzugeben, dass die gezeichneten Elemente eine festgelegte Größe aufweisen, und das <xref:System.Windows.Forms.ListBox.DrawItem> Ereignis, um die Zeichnung der einzelnen Elemente in die <xref:System.Windows.Forms.ListBox>auszuführen. Der Beispielcode verwendet die Eigenschaften und Methoden der <xref:System.Windows.Forms.DrawItemEventArgs> Klasse, die als Parameter an den Ereignishandler übergeben werden, um die Elemente zu zeichnen. In diesem Beispiel wird davon ausgegangen, dass ein <xref:System.Windows.Forms.ListBox>-Steuerelement mit dem Namen `listBox1` zu einem Formular hinzugefügt wurde und dass das <xref:System.Windows.Forms.ListBox.DrawItem>-Ereignis von dem im Beispielcode definierten Ereignishandler behandelt wird. Im Beispiel wird auch davon ausgegangen, dass der <xref:System.Windows.Forms.ListBox> Elemente mit dem Text "Apple", "Orange" und "Plum" in dieser Reihenfolge hinzugefügt wurden.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DrawItemEventHandler" />
    <altmember cref="T:System.Windows.Forms.ComboBox" />
    <altmember cref="T:System.Windows.Forms.ListBox" />
    <altmember cref="T:System.Windows.Forms.MenuItem" />
    <altmember cref="T:System.Windows.Forms.TabControl" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.DrawItemEventArgs" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawItemEventArgs (System.Drawing.Graphics graphics, System.Drawing.Font font, System.Drawing.Rectangle rect, int index, System.Windows.Forms.DrawItemState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, class System.Drawing.Font font, valuetype System.Drawing.Rectangle rect, int32 index, valuetype System.Windows.Forms.DrawItemState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DrawItemState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (graphics As Graphics, font As Font, rect As Rectangle, index As Integer, state As DrawItemState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawItemEventArgs(System::Drawing::Graphics ^ graphics, System::Drawing::Font ^ font, System::Drawing::Rectangle rect, int index, System::Windows::Forms::DrawItemState state);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DrawItemEventArgs : System.Drawing.Graphics * System.Drawing.Font * System.Drawing.Rectangle * int * System.Windows.Forms.DrawItemState -&gt; System.Windows.Forms.DrawItemEventArgs" Usage="new System.Windows.Forms.DrawItemEventArgs (graphics, font, rect, index, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.DrawItemState" />
      </Parameters>
      <Docs>
        <param name="graphics">Die <see cref="T:System.Drawing.Graphics" />-Oberfläche, auf der gezeichnet werden soll.</param>
        <param name="font">Der zu verwendende <see cref="T:System.Drawing.Font" />, i. d. R. die <see cref="T:System.Drawing.Font" />-Eigenschaft des übergeordneten Steuerelements.</param>
        <param name="rect">Die <see cref="T:System.Drawing.Rectangle" />-Begrenzungen, innerhalb derer gezeichnet werden soll.</param>
        <param name="index">Der <see cref="T:System.Windows.Forms.Control.ControlCollection" />-Indexwert des Elements, das gerade gezeichnet wird.</param>
        <param name="state">Die <see cref="T:System.Windows.Forms.DrawItemState" />-Informationen des Steuerelements.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.DrawItemEventArgs" />-Klasse für das angegebene Steuerelement, wobei Schriftart, Zustand, Zeichenoberfläche und Begrenzungen für den Zeichenvorgang wie angegeben festgelegt werden.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawItemEventArgs (System.Drawing.Graphics graphics, System.Drawing.Font font, System.Drawing.Rectangle rect, int index, System.Windows.Forms.DrawItemState state, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, class System.Drawing.Font font, valuetype System.Drawing.Rectangle rect, int32 index, valuetype System.Windows.Forms.DrawItemState state, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DrawItemState,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (graphics As Graphics, font As Font, rect As Rectangle, index As Integer, state As DrawItemState, foreColor As Color, backColor As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawItemEventArgs(System::Drawing::Graphics ^ graphics, System::Drawing::Font ^ font, System::Drawing::Rectangle rect, int index, System::Windows::Forms::DrawItemState state, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DrawItemEventArgs : System.Drawing.Graphics * System.Drawing.Font * System.Drawing.Rectangle * int * System.Windows.Forms.DrawItemState * System.Drawing.Color * System.Drawing.Color -&gt; System.Windows.Forms.DrawItemEventArgs" Usage="new System.Windows.Forms.DrawItemEventArgs (graphics, font, rect, index, state, foreColor, backColor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.DrawItemState" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics">Die <see cref="T:System.Drawing.Graphics" />-Oberfläche, auf der gezeichnet werden soll.</param>
        <param name="font">Der zu verwendende <see cref="T:System.Drawing.Font" />, i. d. R. die <see cref="T:System.Drawing.Font" />-Eigenschaft des übergeordneten Steuerelements.</param>
        <param name="rect">Die <see cref="T:System.Drawing.Rectangle" />-Begrenzungen, innerhalb derer gezeichnet werden soll.</param>
        <param name="index">Der <see cref="T:System.Windows.Forms.Control.ControlCollection" />-Indexwert des Elements, das gerade gezeichnet wird.</param>
        <param name="state">Die <see cref="T:System.Windows.Forms.DrawItemState" />-Informationen des Steuerelements.</param>
        <param name="foreColor">Die Vordergrund-<see cref="T:System.Drawing.Color" />, mit der das Steuerelement gezeichnet wird.</param>
        <param name="backColor">Die Hintergrund-<see cref="T:System.Drawing.Color" />, mit der das Steuerelement gezeichnet wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.DrawItemEventArgs" />-Klasse für das angegebene Steuerelement, wobei Schriftart, Zustand, Vordergrundfarbe, Hintergrundfarbe, Zeichenoberfläche und Begrenzungen für den Zeichenvorgang wie angegeben festgelegt werden.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color" Usage="System.Windows.Forms.DrawItemEventArgs.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Hintergrundfarbe des Elements ab, das gerade gezeichnet wird.</summary>
        <value><see cref="T:System.Drawing.Color" /> des Hintergrunds des Elements, das gerade gezeichnet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Zustand des Elements <xref:System.Windows.Forms.DrawItemState.Selected?displayProperty=nameWithType>ist, wird der <xref:System.Windows.Forms.DrawItemEventArgs.BackColor%2A> auf <xref:System.Drawing.SystemColors.HighlightText%2A?displayProperty=nameWithType>festgelegt. Wenn der Zustand des Elements nicht <xref:System.Windows.Forms.DrawItemState.Selected>ist, wird die Eigenschaft <xref:System.Windows.Forms.DrawItemEventArgs.BackColor%2A> auf <xref:System.Drawing.SystemColors.Window%2A?displayProperty=nameWithType>festgelegt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz vom Typ <xref:System.Windows.Forms.ListBox> enthält, die `ListBox1`heißt. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType>-Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#153](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#153)]
 [!code-vb[System.Windows.Forms.EventExamples#153](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#153)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.DrawItemEventArgs.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Rechteck ab, das die Begrenzungen des gerade gezeichneten Elements darstellt.</summary>
        <value><see cref="T:System.Drawing.Rectangle" />, das die Begrenzungen des gerade gezeichneten Elements darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie <xref:System.Windows.Forms.ListBox> Elemente mit Besitzer gezeichnet erstellt werden. Der Code verwendet die <xref:System.Windows.Forms.ListBox.DrawMode%2A>-Eigenschaft, um anzugeben, dass die gezeichneten Elemente eine festgelegte Größe aufweisen, und das <xref:System.Windows.Forms.ListBox.DrawItem> Ereignis, um die Zeichnung der einzelnen Elemente in die <xref:System.Windows.Forms.ListBox>auszuführen. Der Beispielcode verwendet die Eigenschaften und Methoden der <xref:System.Windows.Forms.DrawItemEventArgs> Klasse, die als Parameter an den Ereignishandler übergeben werden, um die Elemente zu zeichnen. In diesem Beispiel wird davon ausgegangen, dass ein <xref:System.Windows.Forms.ListBox>-Steuerelement mit dem Namen `listBox1` zu einem Formular hinzugefügt wurde und dass das <xref:System.Windows.Forms.ListBox.DrawItem>-Ereignis von dem im Beispielcode definierten Ereignishandler behandelt wird. Im Beispiel wird auch davon ausgegangen, dass der <xref:System.Windows.Forms.ListBox> Elemente mit dem Text "Apple", "Orange" und "Plum" in dieser Reihenfolge hinzugefügt wurden.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawItemEventArgs.Graphics" />
      </Docs>
    </Member>
    <Member MemberName="DrawBackground">
      <MemberSignature Language="C#" Value="public virtual void DrawBackground ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawBackground() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.DrawBackground" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DrawBackground ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DrawBackground();" />
      <MemberSignature Language="F#" Value="abstract member DrawBackground : unit -&gt; unit&#xA;override this.DrawBackground : unit -&gt; unit" Usage="drawItemEventArgs.DrawBackground " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zeichnet den Hintergrund innerhalb der im <see cref="Overload:System.Windows.Forms.DrawItemEventArgs.#ctor" />-Konstruktor angegebenen Begrenzungen und mit der entsprechenden Farbe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das zu zeichende Element <xref:System.Windows.Forms.DrawItemState.Selected>ist, wird der Hintergrund mit hervorgehobenem Text gezeichnet.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie <xref:System.Windows.Forms.ListBox> Elemente mit Besitzer gezeichnet erstellt werden. Der Code verwendet die <xref:System.Windows.Forms.ListBox.DrawMode%2A>-Eigenschaft, um anzugeben, dass die gezeichneten Elemente eine festgelegte Größe und das <xref:System.Windows.Forms.ListBox.DrawItem> Ereignis sind, um die Zeichnung der einzelnen Elemente in die <xref:System.Windows.Forms.ListBox>auszuführen. Der Beispielcode verwendet die Eigenschaften und Methoden der <xref:System.Windows.Forms.DrawItemEventArgs> Klasse, die als Parameter an den Ereignishandler übergeben werden, um die Elemente zu zeichnen. In diesem Beispiel wird davon ausgegangen, dass ein <xref:System.Windows.Forms.ListBox>-Steuerelement mit dem Namen `listBox1` zu einem Formular hinzugefügt wurde und dass das <xref:System.Windows.Forms.ListBox.DrawItem>-Ereignis von dem im Beispielcode definierten Ereignishandler behandelt wird. Im Beispiel wird auch davon ausgegangen, dass der <xref:System.Windows.Forms.ListBox> Elemente mit dem Text "Apple", "Orange" und "Plum" in dieser Reihenfolge hinzugefügt wurden.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawBackground" /> in einer abgeleiteten Klasse überschreiben, stellen Sie sicher, dass Sie die <see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawBackground" />-Methode der Basisklasse aufzurufen.</para></block>
        <altmember cref="T:System.Windows.Forms.DrawItemState" />
      </Docs>
    </Member>
    <Member MemberName="DrawFocusRectangle">
      <MemberSignature Language="C#" Value="public virtual void DrawFocusRectangle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawFocusRectangle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.DrawFocusRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DrawFocusRectangle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DrawFocusRectangle();" />
      <MemberSignature Language="F#" Value="abstract member DrawFocusRectangle : unit -&gt; unit&#xA;override this.DrawFocusRectangle : unit -&gt; unit" Usage="drawItemEventArgs.DrawFocusRectangle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zeichnet ein Fokusrechteck innerhalb der im <see cref="Overload:System.Windows.Forms.DrawItemEventArgs.#ctor" />-Konstruktor angegebenen Begrenzungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das zu zeichende Element <xref:System.Windows.Forms.DrawItemState.Focus>ist, wird das Fokus Rechteck gezeichnet.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie <xref:System.Windows.Forms.ListBox> Elemente mit Besitzer gezeichnet erstellt werden. Der Code verwendet die <xref:System.Windows.Forms.ListBox.DrawMode%2A>-Eigenschaft, um anzugeben, dass die gezeichneten Elemente eine festgelegte Größe und das <xref:System.Windows.Forms.ListBox.DrawItem> Ereignis sind, um die Zeichnung der einzelnen Elemente in die <xref:System.Windows.Forms.ListBox>auszuführen. Der Beispielcode verwendet die Eigenschaften und Methoden der <xref:System.Windows.Forms.DrawItemEventArgs> Klasse, die als Parameter an den Ereignishandler übergeben werden, um die Elemente zu zeichnen. In diesem Beispiel wird davon ausgegangen, dass ein <xref:System.Windows.Forms.ListBox>-Steuerelement mit dem Namen `listBox1` zu einem Formular hinzugefügt wurde und dass das <xref:System.Windows.Forms.ListBox.DrawItem>-Ereignis von dem im Beispielcode definierten Ereignishandler behandelt wird. Im Beispiel wird auch davon ausgegangen, dass der <xref:System.Windows.Forms.ListBox> Elemente mit dem Text "Apple", "Orange" und "Plum" in dieser Reihenfolge hinzugefügt wurden.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawFocusRectangle" /> in einer abgeleiteten Klasse überschreiben, stellen Sie sicher, dass Sie die <see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawFocusRectangle" />-Methode der Basisklasse aufzurufen.</para></block>
        <altmember cref="T:System.Windows.Forms.DrawItemState" />
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font" Usage="System.Windows.Forms.DrawItemEventArgs.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Schriftart ab, die dem gerade gezeichneten Element zugewiesen ist.</summary>
        <value>Die <see cref="T:System.Drawing.Font" />, die dem gerade gezeichneten Element zugewiesen ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine vorgeschlagene <xref:System.Drawing.Font>, normalerweise die <xref:System.Windows.Forms.Control.Font%2A>-Eigenschaft des übergeordneten Steuer Elements.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie <xref:System.Windows.Forms.ListBox> Elemente mit Besitzer gezeichnet erstellt werden. Der Code verwendet die <xref:System.Windows.Forms.ListBox.DrawMode%2A>-Eigenschaft, um anzugeben, dass die gezeichneten Elemente eine festgelegte Größe und das <xref:System.Windows.Forms.ListBox.DrawItem> Ereignis sind, um die Zeichnung der einzelnen Elemente in die <xref:System.Windows.Forms.ListBox>auszuführen. Der Beispielcode verwendet die Eigenschaften und Methoden der <xref:System.Windows.Forms.DrawItemEventArgs> Klasse, die als Parameter an den Ereignishandler übergeben werden, um die Elemente zu zeichnen. In diesem Beispiel wird davon ausgegangen, dass ein <xref:System.Windows.Forms.ListBox>-Steuerelement mit dem Namen `listBox1` zu einem Formular hinzugefügt wurde und dass das <xref:System.Windows.Forms.ListBox.DrawItem>-Ereignis von dem im Beispielcode definierten Ereignishandler behandelt wird. Im Beispiel wird auch davon ausgegangen, dass der <xref:System.Windows.Forms.ListBox> Elemente mit dem Text "Apple", "Orange" und "Plum" in dieser Reihenfolge hinzugefügt wurden.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="P:System.Windows.Forms.Control.Font" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color" Usage="System.Windows.Forms.DrawItemEventArgs.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Vordergrundfarbe des Elements ab, das gerade gezeichnet wird.</summary>
        <value>Die <see cref="T:System.Drawing.Color" /> des Vordergrunds des Elements, das gerade gezeichnet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Zustand des Elements <xref:System.Windows.Forms.DrawItemState.Selected?displayProperty=nameWithType>ist, wird der <xref:System.Windows.Forms.DrawItemEventArgs.ForeColor%2A> auf <xref:System.Drawing.SystemColors.HighlightText%2A?displayProperty=nameWithType>festgelegt. Wenn der Zustand des Elements nicht <xref:System.Windows.Forms.DrawItemState.Selected>ist, wird die Eigenschaft <xref:System.Windows.Forms.DrawItemEventArgs.ForeColor%2A> auf <xref:System.Drawing.SystemColors.WindowText%2A?displayProperty=nameWithType>festgelegt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz vom Typ <xref:System.Windows.Forms.ListBox> enthält, die `ListBox1`heißt. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType>-Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#153](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#153)]
 [!code-vb[System.Windows.Forms.EventExamples#153](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#153)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Graphics : System.Drawing.Graphics" Usage="System.Windows.Forms.DrawItemEventArgs.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Grafikoberfläche ab, auf der das Element gezeichnet werden soll.</summary>
        <value>Die <see cref="T:System.Drawing.Graphics" />-Oberfläche, auf der das Element gezeichnet werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie <xref:System.Windows.Forms.ListBox> Elemente mit Besitzer gezeichnet erstellt werden. Der Code verwendet die <xref:System.Windows.Forms.ListBox.DrawMode%2A>-Eigenschaft, um anzugeben, dass die gezeichneten Elemente eine festgelegte Größe und das <xref:System.Windows.Forms.ListBox.DrawItem> Ereignis sind, um die Zeichnung der einzelnen Elemente in die <xref:System.Windows.Forms.ListBox>auszuführen. Der Beispielcode verwendet die Eigenschaften und Methoden der <xref:System.Windows.Forms.DrawItemEventArgs> Klasse, die als Parameter an den Ereignishandler übergeben werden, um die Elemente zu zeichnen. In diesem Beispiel wird davon ausgegangen, dass ein <xref:System.Windows.Forms.ListBox>-Steuerelement mit dem Namen `listBox1` zu einem Formular hinzugefügt wurde und dass das <xref:System.Windows.Forms.ListBox.DrawItem>-Ereignis von dem im Beispielcode definierten Ereignishandler behandelt wird. Im Beispiel wird auch davon ausgegangen, dass der <xref:System.Windows.Forms.ListBox> Elemente mit dem Text "Apple", "Orange" und "Plum" in dieser Reihenfolge hinzugefügt wurden.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawItemEventArgs.Bounds" />
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Windows.Forms.DrawItemEventArgs.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Indexwert des Elements ab, das gerade gezeichnet wird.</summary>
        <value>Der numerische Wert, der den <see cref="P:System.Windows.Forms.Control.ControlCollection.Item(System.Int32)" />-Wert des Elements darstellt, das gerade gezeichnet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft gibt den <xref:System.Windows.Forms.Control.ControlCollection.Item%2A> Wert des Elements zurück, das im <xref:System.Windows.Forms.Control.ControlCollection?displayProperty=nameWithType>gezeichnet wird. Diese Eigenschaft kann-1 zurückgeben, wenn Elemente aus der Liste entfernt wurden.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie <xref:System.Windows.Forms.ListBox> Elemente mit Besitzer gezeichnet erstellt werden. Der Code verwendet die <xref:System.Windows.Forms.ListBox.DrawMode%2A>-Eigenschaft, um anzugeben, dass die gezeichneten Elemente eine festgelegte Größe und das <xref:System.Windows.Forms.ListBox.DrawItem> Ereignis sind, um die Zeichnung der einzelnen Elemente in die <xref:System.Windows.Forms.ListBox>auszuführen. Der Beispielcode verwendet die Eigenschaften und Methoden der <xref:System.Windows.Forms.DrawItemEventArgs> Klasse, die als Parameter an den Ereignishandler übergeben werden, um die Elemente zu zeichnen. In diesem Beispiel wird davon ausgegangen, dass ein <xref:System.Windows.Forms.ListBox>-Steuerelement mit dem Namen `listBox1` zu einem Formular hinzugefügt wurde und dass das <xref:System.Windows.Forms.ListBox.DrawItem>-Ereignis von dem im Beispielcode definierten Ereignishandler behandelt wird. Im Beispiel wird auch davon ausgegangen, dass der <xref:System.Windows.Forms.ListBox> Elemente mit dem Text "Apple", "Orange" und "Plum" in dieser Reihenfolge hinzugefügt wurden.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.ControlCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DrawItemState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DrawItemState State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As DrawItemState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DrawItemState State { System::Windows::Forms::DrawItemState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.DrawItemState" Usage="System.Windows.Forms.DrawItemEventArgs.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawItemState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Zustand des Elements ab, das gerade gezeichnet wird.</summary>
        <value>Der <see cref="T:System.Windows.Forms.DrawItemState" />, der den Zustand des Elements darstellt, das gerade gezeichnet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Eigenschafts Wert kann eine Kombination der <xref:System.Windows.Forms.DrawItemState> Enumerationsmember sein. Die Elemente können mithilfe von bitweisen Operatoren kombiniert werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz vom Typ <xref:System.Windows.Forms.ListBox> enthält, die `ListBox1`heißt. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType>-Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#153](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#153)]
 [!code-vb[System.Windows.Forms.EventExamples#153](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#153)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DrawItemState" />
      </Docs>
    </Member>
  </Members>
</Type>
