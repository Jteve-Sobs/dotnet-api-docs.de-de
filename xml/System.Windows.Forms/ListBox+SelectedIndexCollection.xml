<Type Name="ListBox+SelectedIndexCollection" FullName="System.Windows.Forms.ListBox+SelectedIndexCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="89c761341d99e6636a64b290160ec02edf71f5ba" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56791055" /></Metadata><TypeSignature Language="C#" Value="public class ListBox.SelectedIndexCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListBox/SelectedIndexCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListBox.SelectedIndexCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListBox.SelectedIndexCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListBox::SelectedIndexCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListBox.SelectedIndexCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt die Auflistung dar, die die Indizes der in einem <see cref="T:System.Windows.Forms.ListBox" /> ausgewählten Elemente enthält.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> Klasse speichert die Indizes für die ausgewählten Elemente in der <xref:System.Windows.Forms.ListBox>. Die Indizes gespeichert, der <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> sind Indexpositionen in die <xref:System.Windows.Forms.ListBox.ObjectCollection> Klasse. Die <xref:System.Windows.Forms.ListBox.ObjectCollection> Klasse speichert alle Elemente angezeigt, der <xref:System.Windows.Forms.ListBox>.  
  
 In der folgende Tabelle ist ein Beispiel dafür, wie die <xref:System.Windows.Forms.ListBox.ObjectCollection> speichert die Elemente der <xref:System.Windows.Forms.ListBox> sowie deren Auswahlzustand in ein Beispiel für <xref:System.Windows.Forms.ListBox>.  
  
|Index|Element|Auswahlstatus im Listenfeld|  
|-----------|----------|----------------------------------------|  
|0|object1|Nicht markiert|  
|1|Objekt2|Ausgewählt|  
|2|object3|Nicht markiert|  
|3|object4|Ausgewählt|  
|4|object5|Ausgewählt|  
  
 Auf der Grundlage der <xref:System.Windows.Forms.ListBox.ObjectCollection> wird in der vorherigen Tabelle, in der folgende Tabelle veranschaulicht, wie die <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> wird angezeigt.  
  
|Index|Index des ausgewählten Elements im ObjectCollection|  
|-----------|------------------------------------------------|  
|0|1|  
|1|3|  
|2|4|  
  
 Die Eigenschaften und Methoden dieser Klasse können Sie eine Vielzahl von Verwaltungsaufgaben mit der Auflistung. Die <xref:System.Windows.Forms.ListBox.SelectedIndexCollection.Contains%2A> Methode können Sie bestimmen, ob eine Indexposition in die <xref:System.Windows.Forms.ListBox.ObjectCollection> Klasse ist ein Mitglied der ausgewählten Indizes gespeichert, der <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>. Sobald Sie wissen, dass das Element in der Auflistung befindet, können Sie die <xref:System.Windows.Forms.ListBox.SelectedIndexCollection.IndexOf%2A> Methode, um zu ermitteln, wo eine bestimmte Indexposition innerhalb der <xref:System.Windows.Forms.ListBox.ObjectCollection> für die <xref:System.Windows.Forms.ListBox> wird gespeichert.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.ListBox.FindString%2A> Methode, um alle Instanzen des Suchtexts in den Elementen der suchen die <xref:System.Windows.Forms.ListBox>. Im Beispiel wird die Version der <xref:System.Windows.Forms.ListBox.FindString%2A> -Methode, die Ihnen ermöglicht, eine Suche aus dem Sie eine kontinuierliche Suche aller Elemente im Angeben der <xref:System.Windows.Forms.ListBox>. Außerdem wird veranschaulicht, wie Sie bestimmen, wann die <xref:System.Windows.Forms.ListBox.FindString%2A> Methode beginnt die Suche am oberen Rand der Liste nach das Ende der Liste der Elemente erreichen, die eine rekursive Suche zu verhindern. Wenn Elemente, in gefunden wurden der <xref:System.Windows.Forms.ListBox>, sie ausgewählt werden, mithilfe der <xref:System.Windows.Forms.ListBox.SetSelected%2A> Methode.  
  
 [!code-cpp[ListBox.FindString#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.FindString/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.FindString#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.FindString/CS/form1.cs#1)]
 [!code-vb[ListBox.FindString#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.FindString/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SelectedIndexCollection (System.Windows.Forms.ListBox owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListBox owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.#ctor(System.Windows.Forms.ListBox)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListBox)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SelectedIndexCollection(System::Windows::Forms::ListBox ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListBox.SelectedIndexCollection : System.Windows.Forms.ListBox -&gt; System.Windows.Forms.ListBox.SelectedIndexCollection" Usage="new System.Windows.Forms.ListBox.SelectedIndexCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListBox" />
      </Parameters>
      <Docs>
        <param name="owner">Eine <see cref="T:System.Windows.Forms.ListBox" />, die den Besitzer der Auflistung darstellt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.ListBox.SelectedIndexCollection" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können keine Instanz dieser Klasse erstellen, ohne Zuordnung zu einem <xref:System.Windows.Forms.ListBox> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.Add(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(int index);" />
      <MemberSignature Language="F#" Value="member this.Add : int -&gt; unit" Usage="selectedIndexCollection.Add index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Die Position im Array, an der die <see cref="T:System.Windows.Forms.ListBox" /> hinzugefügt werden soll.</param>
        <summary>Fügt die <see cref="T:System.Windows.Forms.ListBox" /> an der angegebenen Indexposition hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="selectedIndexCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt alle Steuerelemente aus der Auflistung.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (int selectedIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(int32 selectedIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.Contains(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (selectedIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(int selectedIndex);" />
      <MemberSignature Language="F#" Value="member this.Contains : int -&gt; bool" Usage="selectedIndexCollection.Contains selectedIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="selectedIndex">Der in der Auflistung zu suchende Index.</param>
        <summary>Bestimmt, ob der angegebene Index in der Auflistung enthalten ist.</summary>
        <returns><see langword="true" />, wenn der angegebene Index aus der <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> für die <see cref="T:System.Windows.Forms.ListBox" /> ein Element in dieser Auflistung ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListBox.SelectedIndexCollection.Contains%2A> Methode können Sie bestimmen, ob eine Indexposition in die <xref:System.Windows.Forms.ListBox.ObjectCollection> Klasse ist ein Mitglied der ausgewählten Indizes gespeichert, der <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>. Hiermit können Sie bestimmen, ob ein bestimmtes Element in einer Mehrfachauswahl <xref:System.Windows.Forms.ListBox> ausgewählt ist.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.SelectedIndexCollection.IndexOf(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array dest, int index);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array dest, int32 index) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dest As Array, index As Integer)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ dest, int index);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="selectedIndexCollection.CopyTo (dest, index)" FrameworkAlternate="netframework-2.0" />
      <MemberSignature Language="C#" Value="public void CopyTo (Array destination, int index);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array destination, int32 index) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Array, index As Integer)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ destination, int index);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="selectedIndexCollection.CopyTo (destination, index)" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="destination" Type="System.Array" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" />
      </Parameters>
      <Docs>
        <param name="destination">Das Zielarray.</param>
        <param name="dest">Das Zielarray.</param>
        <param name="index">Der Index im Zielarray, an dem mit dem Speichern begonnen wird.</param>
        <summary>Kopiert die gesamte Auflistung an eine angegebene Position in einem vorhandenen Array.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Methode verwenden, der Indizes ausgewählter Elemente aus mehreren Sammlungen in ein einzelnes Array kombinieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.SelectedIndexCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListBox.SelectedIndexCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Elemente in der Auflistung ab.</summary>
        <value>Die Anzahl der Elemente in der Auflistung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Eigenschaft können Sie bestimmen, die Anzahl der ausgewählten Elemente in der <xref:System.Windows.Forms.ListBox>. Sie können diesen Wert dann verwenden, wenn die Werte der Auflistung zu durchlaufen, und Sie müssen eine Reihe von Iterationen zum Durchführen des schleifenvorgangs angeben. Wenn die <xref:System.Windows.Forms.ListBox.SelectionMode%2A> Eigenschaft der <xref:System.Windows.Forms.ListBox> nastaven NA hodnotu `SelectionMode.MultiSimple` oder `SelectionMode.MultiExtended`, gibt diese Eigenschaft immer den Wert 0 (null) oder eins (1) abhängig davon, ob Sie ein ausgewähltes Element.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.ListBox.FindString%2A> Methode, um alle Instanzen des Suchtexts in den Elementen der suchen die <xref:System.Windows.Forms.ListBox>. Im Beispiel wird die Version der <xref:System.Windows.Forms.ListBox.FindString%2A> -Methode, die Ihnen ermöglicht, eine Suche aus dem Sie eine kontinuierliche Suche aller Elemente im Angeben der <xref:System.Windows.Forms.ListBox>. Außerdem wird veranschaulicht, wie Sie bestimmen, wann die <xref:System.Windows.Forms.ListBox.FindString%2A> Methode beginnt die Suche am oberen Rand der Liste nach das Ende der Liste der Elemente erreichen, die eine rekursive Suche zu verhindern. Wenn Elemente, in gefunden wurden der <xref:System.Windows.Forms.ListBox>, sie ausgewählt werden, mithilfe der <xref:System.Windows.Forms.ListBox.SetSelected%2A> Methode.  
  
 [!code-cpp[ListBox.FindString#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.FindString/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.FindString#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.FindString/CS/form1.cs#1)]
 [!code-vb[ListBox.FindString#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.FindString/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="selectedIndexCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Enumerator zurück, der die Auflistung der ausgewählten Indizes durchlaufen soll.</summary>
        <returns>Ein <see cref="T:System.Collections.IEnumerator" />, der die Auflistung der Indizes ausgewählter Elemente darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (int selectedIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(int32 selectedIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.IndexOf(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (selectedIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(int selectedIndex);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : int -&gt; int" Usage="selectedIndexCollection.IndexOf selectedIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="selectedIndex">Der nullbasierte Index aus der <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />, der in dieser Auflistung gesucht werden soll.</param>
        <summary>Gibt den Index in der <see cref="T:System.Windows.Forms.ListBox.SelectedIndexCollection" /> des angegebenen Indexes aus der <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> der <see cref="T:System.Windows.Forms.ListBox" /> zurück.</summary>
        <returns>Der nullbasierte Index der Auflistung, an dem der angegebene Index der <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> in der <see cref="T:System.Windows.Forms.ListBox.SelectedIndexCollection" /> positioniert war, andernfalls minus eins (-1).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sobald Sie wissen, dass ein Element in der Auflistung ist (mit der <xref:System.Windows.Forms.ListBox.SelectedIndexCollection.Contains%2A> Methode), können Sie der <xref:System.Windows.Forms.ListBox.SelectedIndexCollection.IndexOf%2A> Methode, um zu ermitteln, wo in einer bestimmten Indexposition in der <xref:System.Windows.Forms.ListBox.ObjectCollection> für der <xref:System.Windows.Forms.ListBox> befindet sich in der <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.SelectedIndexCollection.Contains(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.SelectedIndexCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.ListBox.SelectedIndexCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
        <value><see langword="true" />, wenn die Auflistung schreibgeschützt ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist immer `true` für diese Sammlung. Die Elemente in dieser Auflistung geändert werden, nur durch die <xref:System.Windows.Forms.ListBox> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public int this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.SelectedIndexCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int default[int] { int get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : int" Usage="System.Windows.Forms.ListBox.SelectedIndexCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der Index des Elements in der Auflistung, der abgerufen werden soll.</param>
        <summary>Ruft den Indexwert am angegebenen Index in der Auflistung ab.</summary>
        <value>Der Indexwert aus der <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />, der an der angegebenen Position gespeichert ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Indexer können Sie zum Abrufen von eines bestimmten ausgewählten Indexes aus der <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>. Der Index in der Auflistung gespeicherten ist ein Index in der <xref:System.Windows.Forms.ListBox.ObjectCollection> von der <xref:System.Windows.Forms.ListBox> darstellender ein ausgewähltes Element in der <xref:System.Windows.Forms.ListBox>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="index" />-Parameter ist kleiner als 0 (null) bzw. größer oder gleich dem Wert der <see cref="P:System.Windows.Forms.ListBox.SelectedIndexCollection.Count" />-Eigenschaft der <see cref="T:System.Windows.Forms.ListBox.SelectedIndexCollection" />-Klasse.</exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.Remove(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(int index);" />
      <MemberSignature Language="F#" Value="member this.Remove : int -&gt; unit" Usage="selectedIndexCollection.Remove index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Das Steuerelement, das entfernt werden soll.</param>
        <summary>Entfernt das angegebene Steuerelement aus der Auflistung.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.SelectedIndexCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
        <value><see langword="false" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.SelectedIndexCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
        <value>Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Windows.Forms.ListBox.SelectedIndexCollection" /> synchronisiert werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Der der Auflistung hinzuzufügende Index.</param>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
        <returns>Die Position, an der der Index eingefügt wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 Sie können nicht geändert werden die <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> -Klasse direkt. Zum Hinzufügen eines Elements auf die <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>, verwenden Sie die <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> Eigenschaft oder der <xref:System.Windows.Forms.ListBox.SetSelected%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Collections.IList.Clear" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object selectedIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object selectedIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (selectedIndex As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ selectedIndex) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedIndex" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="selectedIndex">Der in der Auflistung zu suchende Index.</param>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
        <returns><see langword="true" />, wenn der angegebene Index aus der <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> für die <see cref="T:System.Windows.Forms.ListBox" /> ein Element in dieser Auflistung ist, andernfalls false.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 Die <xref:System.Windows.Forms.ListBox.SelectedIndexCollection.System%23Collections%23IList%23Contains%2A> Methode können Sie bestimmen, ob eine Indexposition in die <xref:System.Windows.Forms.ListBox.ObjectCollection> ein Mitglied der ausgewählten Indizes gespeichert, der <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>. Sie können diese Methode verwenden, um zu bestimmen, ob ein bestimmtes Element in einem Mehrfachauswahl-Listenfeld ausgewählt ist.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object selectedIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object selectedIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (selectedIndex As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ selectedIndex) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedIndex" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="selectedIndex">Der nullbasierte Index aus der <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />, der in dieser Auflistung gesucht werden soll.</param>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
        <returns>Der nullbasierte Index in der Auflistung, an dem sich der angegebene Index der <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> befindet, sofern er in der <see cref="T:System.Windows.Forms.ListBox.SelectedIndexCollection" /> vorhanden ist, andernfalls -1</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 Die <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> enthält die Indizes ausgewählter Elemente in der <xref:System.Windows.Forms.ListBox.ObjectCollection> des <xref:System.Windows.Forms.ListBox>-Steuerelements.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.IndexOf(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Der Index, an dem der Wert eingefügt werden soll.</param>
        <param name="value">Das dem <see cref="T:System.Windows.Forms.ListBox.SelectedIndexCollection" /> hinzuzufügende Objekt.</param>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 Sie können nicht geändert werden die <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> -Klasse direkt. Zum Hinzufügen eines Elements auf die <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>, verwenden Sie die <xref:System.Windows.Forms.ListBox.SelectedItem%2A> Eigenschaft oder der <xref:System.Windows.Forms.ListBox.SetSelected%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Wird immer ausgelöst.</exception>
        <altmember cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.SelectedIndexCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
        <value><see langword="true" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.SelectedIndexCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des abzurufenden Elements.</param>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
        <value>Der Indexwert aus der <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />, der an der angegebenen Position gespeichert ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das aus der <see cref="T:System.Windows.Forms.ListBox.SelectedIndexCollection" /> zu entfernende Objekt.</param>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 Sie können nicht geändert werden die <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> -Klasse direkt. So entfernen Sie ein Element aus der <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>, verwenden Sie die <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> Eigenschaft oder das <xref:System.Windows.Forms.ListBox.SetSelected%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Wird immer ausgelöst.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.SelectedIndexCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des zu entfernenden Elements.</param>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 Sie können nicht geändert werden die <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> -Klasse direkt. So entfernen Sie ein Element aus der <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>, verwenden Sie die <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> Eigenschaft oder das <xref:System.Windows.Forms.ListBox.SetSelected%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Wird immer ausgelöst.</exception>
        <altmember cref="M:System.Collections.IList.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>