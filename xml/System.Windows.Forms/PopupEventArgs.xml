<Type Name="PopupEventArgs" FullName="System.Windows.Forms.PopupEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="727e6270945e8def9c30e6235d722161f2875674" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30648504" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PopupEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PopupEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.PopupEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class PopupEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class PopupEventArgs : System::ComponentModel::CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Daten für das <see cref="E:System.Windows.Forms.ToolTip.Popup" />-Ereignis bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ToolTip.Popup> -Ereignis für die <xref:System.Windows.Forms.ToolTip> -Klasse wird ausgelöst, bevor eine QuickInfo angezeigt wird. Der Handler für dieses Ereignis empfängt einen Parameter vom Typ <xref:System.Windows.Forms.PopupEventArgs>. Dieser Parameter enthält Informationen über die QuickInfo und ermöglicht es Ihnen, die Größe der QuickInfo durch Ändern der <xref:System.Windows.Forms.PopupEventArgs.ToolTipSize%2A> Eigenschaft. Da <xref:System.Windows.Forms.ToolTip.Popup> leitet sich von <xref:System.ComponentModel.CancelEventArgs>, der Handler kann auch beenden, die QuickInfo angezeigt wird.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung dieses Typs. Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.ToolTip.Popup> Ereignis. Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen. Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.ToolTip> mit dem Namen `ToolTip1`. Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.ToolTip.Popup> Ereignis.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#619](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#619)]
 [!code-vb[System.Windows.Forms.EventExamples#619](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#619)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ToolTip" />
    <altmember cref="E:System.Windows.Forms.ToolTip.Popup" />
    <altmember cref="T:System.Windows.Forms.DrawToolTipEventArgs" />
    <altmember cref="P:System.Windows.Forms.PopupEventArgs.ToolTipSize" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PopupEventArgs (System.Windows.Forms.IWin32Window associatedWindow, System.Windows.Forms.Control associatedControl, bool isBalloon, System.Drawing.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.IWin32Window associatedWindow, class System.Windows.Forms.Control associatedControl, bool isBalloon, valuetype System.Drawing.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.PopupEventArgs.#ctor(System.Windows.Forms.IWin32Window,System.Windows.Forms.Control,System.Boolean,System.Drawing.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PopupEventArgs(System::Windows::Forms::IWin32Window ^ associatedWindow, System::Windows::Forms::Control ^ associatedControl, bool isBalloon, System::Drawing::Size size);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="associatedWindow" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="associatedControl" Type="System.Windows.Forms.Control" />
        <Parameter Name="isBalloon" Type="System.Boolean" />
        <Parameter Name="size" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="associatedWindow">Das <see cref="T:System.Windows.Forms.IWin32Window" />, an das die QuickInfo gebunden ist.</param>
        <param name="associatedControl">Das <see cref="T:System.Windows.Forms.Control" />, für das die QuickInfo erstellt wird.</param>
        <param name="isBalloon">
          <see langword="true" />, um anzugeben, dass das zugeordnete QuickInfo-Fenster sprechblasenförmig dargestellt wird, andernfalls <see langword="false" />, um anzugeben, dass das QuickInfo-Fenster die übliche rechteckige Form aufweist.</param>
        <param name="size">Die <see cref="T:System.Drawing.Size" /> der QuickInfo.</param>
        <summary>Initialisiert eine Instanz der <see cref="T:System.Windows.Forms.PopupEventArgs" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Parameter für die <xref:System.Windows.Forms.PopupEventArgs.%23ctor%2A> Konstruktor zur Initialisierung der entsprechenden ähnlich benannten Eigenschaften verwendet werden. Die `associatedControl` Parameter möglich `null` Wenn das besitzende Fenster nicht vom Typ <xref:System.Windows.Forms.Control>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.PopupEventArgs.AssociatedControl" />
        <altmember cref="P:System.Windows.Forms.PopupEventArgs.AssociatedWindow" />
        <altmember cref="P:System.Windows.Forms.PopupEventArgs.IsBalloon" />
        <altmember cref="P:System.Windows.Forms.PopupEventArgs.ToolTipSize" />
      </Docs>
    </Member>
    <Member MemberName="AssociatedControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control AssociatedControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control AssociatedControl" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.PopupEventArgs.AssociatedControl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssociatedControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ AssociatedControl { System::Windows::Forms::Control ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Steuerelement ab, für das der <see cref="T:System.Windows.Forms.ToolTip" /> gezeichnet wird.</summary>
        <value>Das der <see cref="T:System.Windows.Forms.Control" /> zugeordnete <see cref="T:System.Windows.Forms.ToolTip" /> oder <see langword="null" />, wenn die QuickInfo keinem Steuerelement zugeordnet ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da Sie zuordnen können die <xref:System.Windows.Forms.ToolTip> mit mehreren Steuerelementen über die <xref:System.Windows.Forms.ToolTip.SetToolTip%2A?displayProperty=nameWithType> Methode, die Sie verwenden können die <xref:System.Windows.Forms.PopupEventArgs.AssociatedControl%2A> Eigenschaft, um festzulegen, welche die <xref:System.Windows.Forms.ToolTip.Draw> Ereignis zugeordnet ist. Dies ist hilfreich, wenn Sie unterschiedliche QuickInfo basierend auf das zugeordnete Steuerelement durchführen möchten.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements. Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.ToolTip.Popup?displayProperty=nameWithType> Ereignis. Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen. Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.ToolTip> mit dem Namen `ToolTip1`. Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.ToolTip.Popup?displayProperty=nameWithType> Ereignis.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#619](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#619)]
 [!code-vb[System.Windows.Forms.EventExamples#619](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#619)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.PopupEventArgs.AssociatedWindow" />
        <altmember cref="M:System.Windows.Forms.ToolTip.SetToolTip(System.Windows.Forms.Control,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="AssociatedWindow">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IWin32Window AssociatedWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IWin32Window AssociatedWindow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.PopupEventArgs.AssociatedWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssociatedWindow As IWin32Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IWin32Window ^ AssociatedWindow { System::Windows::Forms::IWin32Window ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IWin32Window</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Fenster ab, an das dieser <see cref="T:System.Windows.Forms.ToolTip" /> gebunden ist.</summary>
        <value>Das Fenster, das den <see cref="T:System.Windows.Forms.ToolTip" /> besitzt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Fenster im Besitz eines anderen Fensters ist, wird das zugehörige Fenster minimiert und mit der das besitzende Fenster geschlossen. Im Besitz befindlichen Windows werden ebenfalls nicht hinter dem Besitzerformular angezeigt. In diesem Fall gehört die QuickInfo die systemeigenen Win32-Fenster, dargestellt durch die <xref:System.Windows.Forms.DrawToolTipEventArgs.AssociatedWindow%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements. Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.ToolTip.Popup?displayProperty=nameWithType> Ereignis. Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen. Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.ToolTip> mit dem Namen `ToolTip1`. Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.ToolTip.Popup?displayProperty=nameWithType> Ereignis.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#619](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#619)]
 [!code-vb[System.Windows.Forms.EventExamples#619](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#619)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.PopupEventArgs.AssociatedControl" />
      </Docs>
    </Member>
    <Member MemberName="IsBalloon">
      <MemberSignature Language="C#" Value="public bool IsBalloon { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBalloon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.PopupEventArgs.IsBalloon" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBalloon As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBalloon { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die QuickInfo in der rechteckigen Standardform oder als Sprechblasenfenster angezeigt wird.</summary>
        <value>
          <see langword="true" />, wenn die QuickInfo in einem Sprechblasenfenster angezeigt wird, andernfalls <see langword="false" />, wenn ein rechteckiges Standardfenster verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Typ des verwendeten Fensters für die QuickInfo wird angegeben, der <xref:System.Windows.Forms.ToolTip.IsBalloon%2A?displayProperty=nameWithType> Methode der <xref:System.Windows.Forms.ToolTip> Klasse.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements. Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.ToolTip.Popup?displayProperty=nameWithType> Ereignis. Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen. Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.ToolTip> mit dem Namen `ToolTip1`. Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.ToolTip.Popup?displayProperty=nameWithType> Ereignis.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#619](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#619)]
 [!code-vb[System.Windows.Forms.EventExamples#619](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#619)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolTip.IsBalloon" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size ToolTipSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size ToolTipSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.PopupEventArgs.ToolTipSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTipSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size ToolTipSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Größe der QuickInfo ab oder legt diese fest.</summary>
        <value>Die <see cref="T:System.Drawing.Size" /> des <see cref="T:System.Windows.Forms.ToolTip" />-Fensters.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.PopupEventArgs.ToolTipSize%2A> ermöglicht die <xref:System.Windows.Forms.ToolTip.Popup> Ereignishandler so ändern Sie die Größe des QuickInfo-Fenster. <xref:System.Windows.Forms.PopupEventArgs.ToolTipSize%2A> wird häufig in Verbindung mit den Elementen der <xref:System.Windows.Forms.DrawToolTipEventArgs> Klasse, um die Darstellung von QuickInfos anzupassen.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements. Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.ToolTip.Popup?displayProperty=nameWithType> Ereignis. Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen. Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.ToolTip> mit dem Namen `ToolTip1`. Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.ToolTip.Popup?displayProperty=nameWithType> Ereignis.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#619](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#619)]
 [!code-vb[System.Windows.Forms.EventExamples#619](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#619)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ToolTip.Popup" />
        <altmember cref="T:System.Windows.Forms.DrawToolTipEventArgs" />
      </Docs>
    </Member>
  </Members>
</Type>