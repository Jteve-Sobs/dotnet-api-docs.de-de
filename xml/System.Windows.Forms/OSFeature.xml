<Type Name="OSFeature" FullName="System.Windows.Forms.OSFeature">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5c5700602415f45d56c44d6ecb0c7e77a48f511a" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83533745" /></Metadata><TypeSignature Language="C#" Value="public class OSFeature : System.Windows.Forms.FeatureSupport" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OSFeature extends System.Windows.Forms.FeatureSupport" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.OSFeature" />
  <TypeSignature Language="VB.NET" Value="Public Class OSFeature&#xA;Inherits FeatureSupport" />
  <TypeSignature Language="C++ CLI" Value="public ref class OSFeature : System::Windows::Forms::FeatureSupport" />
  <TypeSignature Language="F#" Value="type OSFeature = class&#xA;    inherit FeatureSupport" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.FeatureSupport</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Abfragen von Features bereit, die spezifisch für das Betriebssystem sind.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die `static` Instanz dieser Klasse, die in der <xref:System.Windows.Forms.OSFeature.Feature%2A>-Eigenschaft bereitgestellt wird, um Betriebssystemfunktionen abzufragen. Eine Instanz dieser Klasse kann nicht erstellt werden.  
  
 Um die Version einer Funktion zu bestimmen, müssen Sie die <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>-Methode abrufen. Um zu ermitteln, ob eine Funktion oder eine bestimmte Version vorhanden ist, müssen Sie die <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>-Methode aufzurufen und die Funktion angeben, nach der mit den featurebezeichlern in dieser Klasse gesucht werden soll.  
  
   
  
## Examples  
 Im folgenden Beispiel wird <xref:System.Windows.Forms.OSFeature> verwendet, um das Betriebssystem abzufragen, um zu bestimmen, ob die <xref:System.Windows.Forms.OSFeature.LayeredWindows>-Funktion installiert ist. Das Beispiel zeigt zwei verschiedene Möglichkeiten, um zu überprüfen, ob die Funktion vorhanden ist. In der ersten Methode wird `myVersion` geprüft, um festzustellen, ob es `null`ist. Wenn die Version `null`ist, ist das Feature nicht installiert. In der zweiten Methode ruft das Beispiel die Methode der Basisklasse <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> auf, um festzustellen, ob die Funktion installiert ist. Die Ergebnisse werden in einem Textfeld angezeigt.  
  
 Dieser Code setzt voraus, dass `textBox1` erstellt und in einem Formular abgelegt wurde.  
  
 [!code-cpp[Classic OSFeature Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.AppDomain" />
    <altmember cref="T:System.Windows.Forms.Application" />
    <altmember cref="T:System.Environment" />
    <altmember cref="T:System.Windows.Forms.SystemInformation" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OSFeature ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OSFeature.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; OSFeature();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.OSFeature" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse kann nicht instanziiert werden. Verwenden Sie zum Abfragen von Betriebssystem Features die `static` Instanz von <xref:System.Windows.Forms.OSFeature>, die in dieser Klasse bereitgestellt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.OSFeature" />
      </Docs>
    </Member>
    <Member MemberName="Feature">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.OSFeature Feature { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.OSFeature Feature" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OSFeature.Feature" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Feature As OSFeature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::OSFeature ^ Feature { System::Windows::Forms::OSFeature ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Feature : System.Windows.Forms.OSFeature" Usage="System.Windows.Forms.OSFeature.Feature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.OSFeature</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine für Featureabfragen zu verwendende <see langword="static" />-Instanz der <see cref="T:System.Windows.Forms.OSFeature" />-Klasse ab. Diese Eigenschaft ist schreibgeschützt.</summary>
        <value>Eine Instanz der <see cref="T:System.Windows.Forms.OSFeature" />-Klasse.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese `static`-Eigenschaft, um die Betriebssystemfunktionen abzufragen. Eine Instanz dieser Klasse kann nicht erstellt werden.  
  
 Um die Version einer Funktion zu bestimmen, müssen Sie die <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>-Methode abrufen. Um zu ermitteln, ob eine Funktion oder eine bestimmte Version vorhanden ist, müssen Sie die <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>-Methode aufzurufen und die Funktion angeben, nach der mit den featurebezeichlern in dieser Klasse gesucht werden soll.  
  
   
  
## Examples  
 Im folgenden Beispiel werden <xref:System.Windows.Forms.OSFeature> für die <xref:System.Windows.Forms.OSFeature.LayeredWindows>-Funktion abgefragt. Die Version wird geprüft, um festzustellen, ob Sie `null`ist, um zu bestimmen, ob die Funktion vorhanden ist. Das Ergebnis wird in einem Textfeld angezeigt. Dieser Code setzt voraus, dass `textBox1` erstellt und in einem Formular abgelegt wurde.  
  
 [!code-cpp[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.OSFeature.#ctor" />
        <altmember cref="T:System.Version" />
        <altmember cref="T:System.Windows.Forms.FeatureSupport" />
        <altmember cref="F:System.Windows.Forms.OSFeature.LayeredWindows" />
      </Docs>
    </Member>
    <Member MemberName="GetVersionPresent">
      <MemberSignature Language="C#" Value="public override Version GetVersionPresent (object feature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Version GetVersionPresent(object feature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetVersionPresent (feature As Object) As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Version ^ GetVersionPresent(System::Object ^ feature);" />
      <MemberSignature Language="F#" Value="override this.GetVersionPresent : obj -&gt; Version" Usage="oSFeature.GetVersionPresent feature" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="feature">Das Feature, dessen Version angefordert wird, entweder <see cref="F:System.Windows.Forms.OSFeature.LayeredWindows" /> oder <see cref="F:System.Windows.Forms.OSFeature.Themes" />.</param>
        <summary>Ruft die im System derzeit verfügbare Version des angegebenen Features ab.</summary>
        <returns><see cref="T:System.Version" /> stellt die gegenwärtig auf dem System verfügbare Version des angegebenen Betriebssystemfeatures dar, oder <see langword="null" />, wenn das Feature nicht gefunden wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Windows.Forms.OSFeature.Feature%2A>-Eigenschaft, die `static` Instanz von <xref:System.Windows.Forms.OSFeature>, die in dieser Klasse bereitgestellt wird, um die Versionsnummer eines Features abzufragen.  
  
   
  
## Examples  
 Im folgenden Beispiel werden <xref:System.Windows.Forms.OSFeature> für die <xref:System.Windows.Forms.OSFeature.LayeredWindows>-Funktion abgefragt. Die Version wird geprüft, um festzustellen, ob Sie `null`ist, um zu bestimmen, ob die Funktion vorhanden ist. Das Ergebnis wird in einem Textfeld angezeigt. Dieser Code setzt voraus, dass `textBox1` erstellt und in einem Formular abgelegt wurde.  
  
 [!code-cpp[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Version" />
        <altmember cref="P:System.Windows.Forms.OSFeature.Feature" />
        <altmember cref="T:System.Windows.Forms.FeatureSupport" />
        <altmember cref="F:System.Windows.Forms.OSFeature.LayeredWindows" />
      </Docs>
    </Member>
    <Member MemberName="IsPresent">
      <MemberSignature Language="C#" Value="public static bool IsPresent (System.Windows.Forms.SystemParameter enumVal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPresent(valuetype System.Windows.Forms.SystemParameter enumVal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPresent (enumVal As SystemParameter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPresent(System::Windows::Forms::SystemParameter enumVal);" />
      <MemberSignature Language="F#" Value="static member IsPresent : System.Windows.Forms.SystemParameter -&gt; bool" Usage="System.Windows.Forms.OSFeature.IsPresent enumVal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumVal" Type="System.Windows.Forms.SystemParameter" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="enumVal">Ein <see cref="T:System.Windows.Forms.SystemParameter" />, der das zu suchende Feature darstellt.</param>
        <summary>Ruft einen Wert ab, der angibt, ob das Betriebssystem das angegebene Feature oder die angegebene Metrik unterstützt.</summary>
        <returns><see langword="true" />, wenn das Feature im System verfügbar ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalerweise verwenden Sie die <xref:System.Windows.Forms.OSFeature.IsPresent%2A>-Methode, um zu bestimmen, ob das Betriebssystem die von `enumValue`identifizierte bestimmte Funktion oder Metrik unterstützt. Basierend auf dem von <xref:System.Windows.Forms.OSFeature.IsPresent%2A>zurückgegebenen Wert würden Sie bedingte Aktionen im Code durchführen. Wenn Sie z. b. diese Methode mit dem Parameterwert <xref:System.Windows.Forms.SystemParameter.FlatMenu> den `true`zurückgibt, können Sie in der Anwendung in einem flachen Stil von einem Besitzer gezeichnete Menüs erstellen.  
  
 Durch den Zugriff auf einige System Features oder Metriken können Ausnahmen ausgelöst werden, wenn Sie nicht in einer bestimmten Betriebssystemversion verfügbar sind. Verwenden Sie in diesem Fall zuerst den entsprechenden <xref:System.Windows.Forms.SystemParameter> Enumerationswert zusammen mit <xref:System.Windows.Forms.OSFeature.IsPresent%2A>, um zu bestimmen, ob die Metrik unterstützt wird. Beispielsweise wird <xref:System.Windows.Forms.OSFeature.IsPresent%2A> mit <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A> aufgerufen, bevor der <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=nameWithType>-Eigenschafts Wert erhalten wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.OSFeature.IsPresent%2A>-Methode mit der <xref:System.Windows.Forms.SystemParameter>-Enumeration verwendet wird. Im Beispiel wird bestimmt, ob das Betriebssystem die `CaretWidth` Metrik unterstützt, bevor die <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=nameWithType>-Eigenschaft aufgerufen wird.  
  
 [!code-cpp[System.Windows.Forms.OSFeature.IsPresent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.OSFeature.IsPresent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.OSFeature.IsPresent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.OSFeature.IsPresent#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.OSFeature.IsPresent#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.OSFeature.IsPresent#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.SystemParameter" />
        <altmember cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LayeredWindows">
      <MemberSignature Language="C#" Value="public static readonly object LayeredWindows;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object LayeredWindows" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.OSFeature.LayeredWindows" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LayeredWindows As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ LayeredWindows;" />
      <MemberSignature Language="F#" Value=" staticval mutable LayeredWindows : obj" Usage="System.Windows.Forms.OSFeature.LayeredWindows" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt das Feature für überlappende Fenster oberster Ebene dar. Dieses Feld ist schreibgeschützt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein mehrstufiges Fenster kann durch das Betriebssystem transparent oder durchsichtig gemacht werden. Die Unterstützung für mehrschichtige Fenster wurde erstmals in Windows 2000 eingeführt. Weitere Informationen finden Sie unter "überlappende Fenster: eine neue Möglichkeit zur Verwendung von Transaktions-und Transparenz Effekten in Windows-Anwendungen" in der Platform SDK-Dokumentation unter https://msdn.microsoft.com.  
  
 Um zu ermitteln, ob das überlappende Windows-Feature installiert ist, verwenden Sie die <xref:System.Windows.Forms.OSFeature.Feature%2A>-Eigenschaft, um die-Methode der-Basisklasse aufzurufen, <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> mit <xref:System.Windows.Forms.OSFeature.LayeredWindows> als das zu suchen  
  
 Alternativ können Sie überprüfen, ob die Funktion installiert ist, indem Sie die <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>-Methode mit <xref:System.Windows.Forms.OSFeature.LayeredWindows> als zu suchende Funktion aufrufen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird bestimmt, ob das aktuelle System überlappende Fenster unterstützt. Die <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> der Basisklassen Methode wird mit <xref:System.Windows.Forms.OSFeature.LayeredWindows> als Funktion aufgerufen, nach der gesucht werden soll. Das Ergebnis wird in einem Textfeld angezeigt. Dieser Code setzt voraus, dass `textBox1` instanziiert und in einem Formular abgelegt wurde.  
  
 [!code-cpp[Classic OSFeature.LayeredWindows Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature.LayeredWindows Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature.LayeredWindows Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature.LayeredWindows Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature.LayeredWindows Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature.LayeredWindows Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.OSFeature.IsPresent" />
        <altmember cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
        <altmember cref="P:System.Windows.Forms.OSFeature.Feature" />
      </Docs>
    </Member>
    <Member MemberName="Themes">
      <MemberSignature Language="C#" Value="public static readonly object Themes;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object Themes" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.OSFeature.Themes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Themes As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ Themes;" />
      <MemberSignature Language="F#" Value=" staticval mutable Themes : obj" Usage="System.Windows.Forms.OSFeature.Themes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt das Designfeature des Betriebssystems dar. Dieses Feld ist schreibgeschützt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Design ist eine Auflistung von visuellen Schnittstellen Einstellungen mit Hintergrundbild, Cursor, Schriftarten, Tönen und Symbolen, die zuerst in Microsoft pluseingeführt wurden. für Windows 95. Das .NET Framework unterstützt die Bearbeitung von Designs nicht direkt, obwohl es über umfassende Unterstützung für visuelle Stile im <xref:System.Windows.Forms.VisualStyles?displayProperty=nameWithType>-Namespace verfügt. Weitere Informationen zu Windows-Designs finden Sie in den Themen Themen Designs und visuelle Stile und visuelle Stile im Win32-SDK.  
  
 Um zu ermitteln, ob die Designs-Funktion installiert ist, müssen Sie die Basisklassen Methode <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> mit <xref:System.Windows.Forms.OSFeature.Themes> als das zu über mittelende Feature abrufen.  
  
 Alternativ können Sie überprüfen, ob die Funktion installiert ist, indem Sie die <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>-Methode mit <xref:System.Windows.Forms.OSFeature.Themes> als zu suchende Funktion aufrufen.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.OSFeature.IsPresent" />
        <altmember cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
        <altmember cref="P:System.Windows.Forms.OSFeature.Feature" />
      </Docs>
    </Member>
  </Members>
</Type>
