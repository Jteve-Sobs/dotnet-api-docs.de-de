<Type Name="ListViewItem+ListViewSubItem" FullName="System.Windows.Forms.ListViewItem+ListViewSubItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8dfaf187ee4658a84209175713ea9b7e79767732" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70451386" /></Metadata><TypeSignature Language="C#" Value="public class ListViewItem.ListViewSubItem" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi serializable beforefieldinit ListViewItem/ListViewSubItem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewItem.ListViewSubItem" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListViewItem::ListViewSubItem" />
  <TypeSignature Language="F#" Value="type ListViewItem.ListViewSubItem = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ListViewSubItemConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt ein Unterelement eines <see cref="T:System.Windows.Forms.ListViewItem" /> dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Windows.Forms.ListView> -Steuerelement zeigt eine Liste der Elemente an, die <xref:System.Windows.Forms.ListViewItem> von der-Klasse definiert werden. Jede <xref:System.Windows.Forms.ListViewItem> kann Unterelement Objekte speichern, die von der <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> -Klasse definiert werden. Unter Elemente werden angezeigt, wenn die <xref:System.Windows.Forms.ListView.View%2A> -Eigenschaft <xref:System.Windows.Forms.ListView> des-Steuer Elements auf <xref:System.Windows.Forms.View.Details>festgelegt ist. In der Regel enthalten unter Elemente Informationen, die mit dem übergeordneten Element verknüpft sind. Wenn z. b. <xref:System.Windows.Forms.ListView> ein Steuerelement Elemente anzeigt, die Aufträge darstellen, könnte jedes Element die Bestellnummer anzeigen. Unter Elemente können jedem Element hinzugefügt werden, um Informationen wie das bestellte Produkt, die Menge der bestellten Elemente und den Gesamtpreis der bestellten Elemente anzuzeigen. Im <xref:System.Windows.Forms.ListViewItem> Gegensatz zu <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> -Objekten können-Objekte nicht direkt vom Benutzer bearbeitet werden (der <xref:System.Windows.Forms.ListViewItem> Benutzer kann- <xref:System.Windows.Forms.ListView.LabelEdit%2A> Objekte bearbeiten, <xref:System.Windows.Forms.ListView> wenn die-Eigenschaft `true`des-Steuer Elements auf festgelegt ist).  
  
 Da unter Elemente nicht direkt vom Benutzer bearbeitet werden können und keine Bilder anzeigen, sind die Eigenschaften auf diejenigen beschränkt, die sich auf den Stil des unter Elements auswirken, wenn es im <xref:System.Windows.Forms.ListView> -Steuerelement angezeigt wird. Wenn die <xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A> -Eigenschaft <xref:System.Windows.Forms.ListView> des-Objekts, das die unter Elemente enthält, auf `false`festgelegt ist, können <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Font%2A>Sie <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor%2A>die Eigenschaften <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor%2A> , und verwenden, um die auf die Textanzeige angewendeten Stile zu ändern. In der Regel sind die Stile des Elements und der unter Elemente in einem <xref:System.Windows.Forms.ListView> Steuerelement identisch. Wenn Sie jedoch den Stil eines bestimmten <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> ändern möchten, um ihn hervorzuheben, können Sie diese Eigenschaften für die Elemente verwenden, die Sie unterschiedlich anzeigen möchten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.ListView> -Steuerelement <xref:System.Windows.Forms.ListViewItem> mit drei angegebenen- <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> Objekten und drei für jedes Element angegebene-Objekte erstellt. Im Beispiel werden auch <xref:System.Windows.Forms.ColumnHeader> -Objekte erstellt, um die unter Elemente in der Detailansicht anzuzeigen. Im <xref:System.Windows.Forms.ImageList> Codebeispiel werden auch zwei Objekte erstellt, um Bilder für die <xref:System.Windows.Forms.ListViewItem> Objekte bereitzustellen. Diese <xref:System.Windows.Forms.ImageList> Objekte werden der-Eigenschaft <xref:System.Windows.Forms.ListView.LargeImageList%2A> und <xref:System.Windows.Forms.ListView.SmallImageList%2A> der-Eigenschaft hinzugefügt. In diesem Beispiel werden die folgenden Eigenschaften beim Erstellen <xref:System.Windows.Forms.ListView> des-Steuer Elements verwendet.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Sie müssen den Code zu einem <xref:System.Windows.Forms.Form> hinzufügen und die im Beispiel erstellte Methode aus dem Konstruktor oder einer anderen Methode im Formular abrufen. Das Beispiel setzt voraus, dass `MySmallImage1`sich `MySmallImage2`die `MyLargeImage1`Images, `MyLargeImage2` , und im Stammverzeichnis des Laufwerks C befinden.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListViewItem" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewSubItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewSubItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />-Klasse mit Standardwerten.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewSubItem (System.Windows.Forms.ListViewItem owner, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListViewItem owner, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItem.#ctor(System.Windows.Forms.ListViewItem,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListViewItem, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewSubItem(System::Windows::Forms::ListViewItem ^ owner, System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListViewItem.ListViewSubItem : System.Windows.Forms.ListViewItem * string -&gt; System.Windows.Forms.ListViewItem.ListViewSubItem" Usage="new System.Windows.Forms.ListViewItem.ListViewSubItem (owner, text)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListViewItem" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">Ein <see cref="T:System.Windows.Forms.ListViewItem" />, das das Element darstellt, das das Unterelement besitzt.</param>
        <param name="text">Der für das Unterelement anzuzeigende Text.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />-Klasse mit dem angegebenen Besitzer und Text.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewSubItem (System.Windows.Forms.ListViewItem owner, string text, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListViewItem owner, string text, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItem.#ctor(System.Windows.Forms.ListViewItem,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewSubItem(System::Windows::Forms::ListViewItem ^ owner, System::String ^ text, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Drawing::Font ^ font);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListViewItem.ListViewSubItem : System.Windows.Forms.ListViewItem * string * System.Drawing.Color * System.Drawing.Color * System.Drawing.Font -&gt; System.Windows.Forms.ListViewItem.ListViewSubItem" Usage="new System.Windows.Forms.ListViewItem.ListViewSubItem (owner, text, foreColor, backColor, font)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListViewItem" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="owner">Ein <see cref="T:System.Windows.Forms.ListViewItem" />, das das Element darstellt, das das Unterelement besitzt.</param>
        <param name="text">Der für das Unterelement anzuzeigende Text.</param>
        <param name="foreColor">Eine <see cref="T:System.Drawing.Color" />, die die Vordergrundfarbe des Unterelements darstellt.</param>
        <param name="backColor">Eine <see cref="T:System.Drawing.Color" />, die die Hintergrundfarbe des Unterelements darstellt.</param>
        <param name="font">Ein <see cref="T:System.Drawing.Font" />, der die Schriftart darstellt, in der der Text des Unterelements angezeigt werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />-Klasse mit dem angegebenen Besitzer, einem angegebenen Text und angegebenen Werten für die Vorder- und Hintergrundfarbe sowie die Schriftart.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Hintergrundfarbe für den Text des Unterelements ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Drawing.Color" />, die die Hintergrundfarbe des Texts des Unterelements darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor%2A> -Eigenschaft verwenden, um die hinter dem Unterelement Text angezeigte Farbe zu ändern. Diese Eigenschaft kann verwendet werden, wenn Sie verschiedene Kombinationen aus Hintergrund-und Vordergrundfarbe verwenden <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor%2A> möchten (mit der-Eigenschaft, um die Vordergrundfarbe festzulegen), um ein Unterelement von einem anderen zu unterscheiden. Beispielsweise können Sie die <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor%2A> -Eigenschaft auf <xref:System.Drawing.Color.Red%2A> festlegen, um unter Elemente zu identifizieren, die einen negativen Wert anzeigen.  
  
 Wenn die <xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A> -Eigenschaft <xref:System.Windows.Forms.ListViewItem> der, die das Unterelement besitzt, auf `true`festgelegt ist, hat das Festlegen dieser Eigenschaft keine Auswirkung.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItem.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.ListViewItem.ListViewSubItem.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das umschließende Rechteck des <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> ab.</summary>
        <value>Das umschließende <see cref="T:System.Drawing.Rectangle" /> des <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> nicht zu einem <xref:System.Windows.Forms.ListViewItem> hinzugefügt wurde oder das Besitz <xref:System.Windows.Forms.ListViewItem> Ende nicht zu einem <xref:System.Windows.Forms.ListView>hinzugefügt wurde, <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Bounds%2A> gibt die-Eigenschaft <xref:System.Drawing.Rectangle>eine leere zurück.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItem.Font" />
      <MemberSignature Language="VB.NET" Value="Public Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font with get, set" Usage="System.Windows.Forms.ListViewItem.ListViewSubItem.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Schriftart für den angezeigten Text des Unterelements ab oder legt diese fest.</summary>
        <value>Der <see cref="T:System.Drawing.Font" />, der auf den Text angewendet werden soll, der im Steuerelement angezeigt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Eigenschaft verwenden, um die auf den Text des unter Elements angewendeten Schriftart Stile zu ändern. Wenn die <xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A> -Eigenschaft <xref:System.Windows.Forms.ListViewItem> von auf `true`festgelegt ist, hat das Ändern dieser Eigenschaft keine Auswirkung. Da der <xref:System.Drawing.Font> unveränderlich ist (d. h., Sie können keine seiner Eigenschaften anpassen), können Sie die <xref:System.Windows.Forms.Control.Font%2A> Eigenschaft nur einem neuen <xref:System.Drawing.Font>zuweisen. Allerdings können Sie die neue Schriftart auf der vorhandenen Schriftart basieren.  
  
 Im folgenden finden Sie ein Beispiel dafür, wie Sie die vorhandene Schriftart anpassen, damit Sie fett formatiert ist:  
  
```csharp  
listViewItem1.SubItems[1].Font = new Font(listViewItem1.SubItems[1].Font,   
       listViewItem1.SubItems[1].Font.Style | FontStyle.Bold);  
```  
  
```vb  
ListViewItem1.SubItems[1].Font = New Font(ListViewItem1.SubItems[1].Font, _   
       ListViewItem1.SubItems[1].Font.Style Or FontStyle.Bold)  
```  
  
 Wenn die <xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A> -Eigenschaft <xref:System.Windows.Forms.ListViewItem> der, die das Unterelement besitzt, auf `true`festgelegt ist, hat das Festlegen dieser Eigenschaft keine Auswirkung.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A> -Eigenschaft `false` auf festgelegt wird, um <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> einen benutzerdefinierten Stil für-Objekte zu definieren. Im Beispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor%2A> Eigenschaften <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Font%2A> und festgelegt werden. Um das Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular ein, und `InitializeListView` geben Sie die-Methode im Konstruktor des Formulars oder <xref:System.Windows.Forms.Form.Load> der Ereignis Behandlungsmethode an.  
  
 [!code-cpp[System.Windows.Forms.ListViewItemStyle#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListViewItemStyle#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListViewItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.Font" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Vordergrundfarbe für den Text des Unterelements ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Drawing.Color" />, die die Vordergrundfarbe für den Text des Unterelements darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die- <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor%2A> Eigenschaft verwenden, um die Farbe des Unterelement Texts zu ändern. Diese Eigenschaft kann verwendet werden, wenn Sie verschiedene Kombinationen aus Hintergrund-und Vordergrundfarbe verwenden <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor%2A> möchten (mit der-Eigenschaft, um die Hintergrundfarbe festzulegen), um ein Element von einem anderen zu unterscheiden. Beispielsweise können Sie die <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor%2A> -Eigenschaft auf <xref:System.Drawing.Color.Red%2A> festlegen, um Elemente zu identifizieren, denen eine negative Zahl zugeordnet ist.  
  
 Wenn die <xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A> -Eigenschaft <xref:System.Windows.Forms.ListViewItem> der, die das Unterelement besitzt, auf `true`festgelegt ist, hat das Festlegen dieser Eigenschaft keine Auswirkung.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A> -Eigenschaft `false` auf festgelegt wird, um <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> einen benutzerdefinierten Stil für-Objekte zu definieren. Im Beispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor%2A> Eigenschaften <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Font%2A> und festgelegt werden. Um das Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular ein, und `InitializeListView` geben Sie die-Methode im Konstruktor des Formulars oder <xref:System.Windows.Forms.Form.Load> der Ereignis Behandlungsmethode an.  
  
 [!code-cpp[System.Windows.Forms.ListViewItemStyle#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListViewItemStyle#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListViewItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItem.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.ListViewItem.ListViewSubItem.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> ab oder legt diesen fest.</summary>
        <value>Der Name des <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> oder eine leere Zeichenfolge (""), wenn kein Name festgelegt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A> -Eigenschaft entspricht dem Schlüssel für ein <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> -Objekt <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>in einem-Objekt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetStyle">
      <MemberSignature Language="C#" Value="public void ResetStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItem.ResetStyle" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetStyle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetStyle();" />
      <MemberSignature Language="F#" Value="member this.ResetStyle : unit -&gt; unit" Usage="listViewSubItem.ResetStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt die für das Unterelement übernommenen Formate auf die Standardschriftart und -farben zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Methode können Sie die auf das Unterelement angewendeten Einstellungen für Schriftart, Hintergrundfarbe und Vordergrundfarbe zurücksetzen. Wenn die Stile zurückgesetzt werden, wird das Unterelement unter Verwendung der Standardeinstellungen für Schriftart, Hintergrundfarbe und Vordergrundfarbe angezeigt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie der Stil der unter <xref:System.Windows.Forms.ListViewItem> Elemente eines durch die Verwendung <xref:System.Windows.Forms.ListView.TopItem%2A?displayProperty=nameWithType> der-Eigenschaft und der <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ResetStyle%2A> -Methode zurückgesetzt wird. Um das Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular ein, das `Button1`eine Schaltfläche mit `InitializeListView` dem Namen enthält, und geben Sie die <xref:System.Windows.Forms.Form.Load> -Methode in der Konstruktor-oder Ereignis Behandlungsmethode des Formulars ein.  
  
 [!code-cpp[System.Windows.Forms.ListViewItemStyle#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListViewItemStyle#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ListViewItemStyle#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListViewItem.ListViewSubItem.Font" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItem.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.ListViewItem.ListViewSubItem.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt ab, das Daten über das <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> enthält, oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.Object" />, das Daten über den <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> enthält. Die Standardeinstellung ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Tag%2A> der-Eigenschaft können Sie zusätzliche Informationen für einen <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>speichern.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItem.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.ListViewItem.ListViewSubItem.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text des Unterelements ab oder legt diesen fest.</summary>
        <value>Der für das Unterelement anzuzeigende Text.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mithilfe <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Text%2A> der-Eigenschaft können Sie den für das Unterelement angezeigten Text ermitteln. Mit den <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor%2A>Eigenschaften, <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor%2A>und <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Font%2A> können Sie angeben, wie der Text angezeigt werden soll.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListViewItem.Text" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor" />
        <altmember cref="P:System.Windows.Forms.ListViewItem.ListViewSubItem.Font" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItem.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="listViewSubItem.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Zeichenfolge zurück, die das aktuelle Objekt darstellt.</summary>
        <returns>Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>
