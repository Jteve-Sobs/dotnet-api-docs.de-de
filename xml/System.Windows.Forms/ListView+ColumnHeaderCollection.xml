<Type Name="ListView+ColumnHeaderCollection" FullName="System.Windows.Forms.ListView+ColumnHeaderCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e7be82b2cd1122760e8c8e0b4c667c00ac863165" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48636842" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListView.ColumnHeaderCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListView/ColumnHeaderCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListView.ColumnHeaderCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListView::ColumnHeaderCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListView.ColumnHeaderCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt die Auflistung von Spaltenköpfen in einem <see cref="T:System.Windows.Forms.ListView" />-Steuerelement dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Windows.Forms.ListView.ColumnHeaderCollection> Klasse speichert die Spaltenüberschriften, die in angezeigt werden, die <xref:System.Windows.Forms.ListView> steuern, wann die <xref:System.Windows.Forms.ListView.View%2A> -Eigenschaftensatz auf <xref:System.Windows.Forms.View.Details>. Die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection> speichert <xref:System.Windows.Forms.ColumnHeader> -Objekten, definieren den Text, der für eine Spalte auch angezeigt werden soll, wie in die Kopfzeile der Spalte angezeigt wird, der <xref:System.Windows.Forms.ListView> gesteuert werden, wenn die Spalten angezeigt. Wenn eine <xref:System.Windows.Forms.ListView> Spalten anzeigt, die Elemente und deren Unterelemente in ihre eigenen Spalten angezeigt werden. Angeben, welche Spalten Daten für das Unterelement angezeigt werden, finden Sie unter den <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection> Klasse.  
  
 Es gibt eine Reihe von Möglichkeiten, die Spaltenüberschriften in der Auflistung hinzu. Die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Add%2A> Methode der Auflistung einen einzelnen Spaltenkopf hinzugefügt. Um der Auflistung eine Anzahl von Spaltenüberschriften hinzugefügt haben, erstellen Sie ein Array von <xref:System.Windows.Forms.ColumnHeader> Objekte aus, und übergeben es an der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange%2A> Methode. Wenn Sie an einer bestimmten Stelle in der Auflistung einen Spaltenkopf einfügen möchten, können Sie mithilfe der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert%2A> Methode. Um Spaltenüberschriften zu entfernen, verwenden Sie entweder die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Remove%2A> Methode oder der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.RemoveAt%2A> Methode, wenn Sie wissen, wo die Kopfzeile der Spalte in der Auflistung enthalten ist. Die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Clear%2A> Methode können Sie alle Spaltenköpfe aus der Auflistung statt Entfernen der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Remove%2A> Methode, um einen einzelnen Spaltenheader zu einem Zeitpunkt zu entfernen.  
  
 Zusätzlich zu Methoden und Eigenschaften zum Hinzufügen und Entfernen von Spaltenüberschriften die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection> stellt auch Methoden zum Suchen von Spaltenüberschriften in der Auflistung. Die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Contains%2A> Methode können Sie bestimmen, ob eine Spaltenüberschrift ein Member der Auflistung ist. Sobald Sie wissen, dass die Kopfzeile der Spalte in der Auflistung befindet, können Sie die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.IndexOf%2A> Methode, um zu bestimmen, wo sich die Kopfzeile der Spalte in der Auflistung befindet.  
  
> [!NOTE]
>  Wenn die kombinierte Breite aller Spalten 32.768 Pixel überschreitet, kann unerwartetes Verhalten führen.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt ein Formular, enthält eine <xref:System.Windows.Forms.ListView> Steuerelement, das Elemente aus, wenn eine Spalte in sortiert die <xref:System.Windows.Forms.ListView> -Steuerelement geklickt wird. Im Beispiel definiert eine Klasse namens `ListViewItemComparer` , implementiert die <xref:System.Collections.IComparer?displayProperty=nameWithType> -Schnittstelle, die führt die <xref:System.Windows.Forms.ListViewItem> Vergleich. Das Beispiel erstellt eine Instanz des `ListViewItemComparer` und verwendet sie zum Festlegen der <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> Eigenschaft der <xref:System.Windows.Forms.ListView> Steuerelement. Die <xref:System.Windows.Forms.ListView.Sort%2A> -Methodenaufruf in der <xref:System.Windows.Forms.ListView.ColumnClick> -Ereignishandler verwendet, die in definierten Methoden `ListViewItemComparer` , erfolgt die Sortierung der Elemente, die auf Grundlage der Spalte, auf die geklickt wird.  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColumnHeaderCollection (System.Windows.Forms.ListView owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListView owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.#ctor(System.Windows.Forms.ListView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ColumnHeaderCollection(System::Windows::Forms::ListView ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListView.ColumnHeaderCollection : System.Windows.Forms.ListView -&gt; System.Windows.Forms.ListView.ColumnHeaderCollection" Usage="new System.Windows.Forms.ListView.ColumnHeaderCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListView" />
      </Parameters>
      <Docs>
        <param name="owner">Das <see cref="T:System.Windows.Forms.ListView" />, das diese Auflistung besitzt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können keine Instanz dieser Klasse erstellen, ohne Zuordnung zu einem <xref:System.Windows.Forms.ListView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt der Auflistung einen Spaltenkopf hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ColumnHeader Add (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ColumnHeader Add(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (text As String) As ColumnHeader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ColumnHeader ^ Add(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member Add : string -&gt; System.Windows.Forms.ColumnHeader&#xA;override this.Add : string -&gt; System.Windows.Forms.ColumnHeader" Usage="columnHeaderCollection.Add text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnHeader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Der im Spaltenkopf anzuzeigende Text</param>
        <summary>Erstellt eine Spalte mit dem angegebenen Text und fügt diese der Auflistung hinzu.</summary>
        <returns>Der <see cref="T:System.Windows.Forms.ColumnHeader" /> mit dem angegebenen Text, der der <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" /> hinzugefügt wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Kopfzeile der Spalte wird an das Ende der Auflistung hinzugefügt werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (System.Windows.Forms.ColumnHeader value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(class System.Windows.Forms.ColumnHeader value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Add(System.Windows.Forms.ColumnHeader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (value As ColumnHeader) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Windows::Forms::ColumnHeader ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Windows.Forms.ColumnHeader -&gt; int&#xA;override this.Add : System.Windows.Forms.ColumnHeader -&gt; int" Usage="columnHeaderCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ColumnHeader" />
      </Parameters>
      <Docs>
        <param name="value">Der der Auflistung hinzuzufügende <see cref="T:System.Windows.Forms.ColumnHeader" />.</param>
        <summary>Fügt der Auflistung ein vorhandenes <see cref="T:System.Windows.Forms.ColumnHeader" /> hinzu.</summary>
        <returns>Der nullbasierte Index in die Auflistung, an dem der Spaltenkopf hinzugefügt wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Können Sie diese Version von der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Add%2A> Methode zum Hinzufügen von einer vorhandenen <xref:System.Windows.Forms.ColumnHeader> der Auflistung. Wenn Sie ein neues erstellen möchten <xref:System.Windows.Forms.ColumnHeader> an die Zeit, die Sie zur Auflistung hinzufügen, können Sie die andere Version der mithilfe der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Add%2A> Methode.  
  
 Wenn Spaltenüberschriften hinzugefügt werden, werden sie am Ende der Auflistung hinzugefügt. Um eine Spaltenüberschrift in der Auflistung, an einer bestimmten Position einzufügen, verwenden die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert%2A> Methode. Um einen Satz von Spaltenüberschriften in die Sammlung in einem einzigen Vorgang hinzuzufügen, verwenden die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange%2A> Methode.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt ein Formular, enthält eine <xref:System.Windows.Forms.ListView> Steuerelement, das Elemente aus, wenn eine Spalte in sortiert die <xref:System.Windows.Forms.ListView> -Steuerelement geklickt wird. Im Beispiel definiert eine Klasse namens `ListViewItemComparer` , implementiert die <xref:System.Collections.IComparer?displayProperty=nameWithType> -Schnittstelle, die führt die <xref:System.Windows.Forms.ListViewItem> Vergleich. Das Beispiel erstellt eine Instanz des `ListViewItemComparer` und verwendet sie zum Festlegen der <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> Eigenschaft der <xref:System.Windows.Forms.ListView> Steuerelement. Die <xref:System.Windows.Forms.ListView.Sort%2A> -Methodenaufruf in der <xref:System.Windows.Forms.ListView.ColumnClick> -Ereignishandler verwendet, die in definierten Methoden `ListViewItemComparer` , erfolgt die Sortierung der Elemente, die auf Grundlage der Spalte, auf die geklickt wird.  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert(System.Int32,System.Windows.Forms.ColumnHeader)" />
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange(System.Windows.Forms.ColumnHeader[])" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ColumnHeader Add (string text, int width);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ColumnHeader Add(string text, int32 width) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Add(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (text As String, width As Integer) As ColumnHeader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ColumnHeader ^ Add(System::String ^ text, int width);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * int -&gt; System.Windows.Forms.ColumnHeader&#xA;override this.Add : string * int -&gt; System.Windows.Forms.ColumnHeader" Usage="columnHeaderCollection.Add (text, width)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnHeader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="width" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">Der Text des <see cref="T:System.Windows.Forms.ColumnHeader" />, der der Auflistung hinzugefügt werden soll.</param>
        <param name="width">Die Breite des <see cref="T:System.Windows.Forms.ColumnHeader" />, der der Auflistung hinzugefügt werden soll.</param>
        <summary>Erstellt eine Spalte mit dem angegebenen Text und der angegebenen Breite und fügt diese der Auflistung hinzu.</summary>
        <returns>Der <see cref="T:System.Windows.Forms.ColumnHeader" /> mit dem angegebenen Text und der angegebenen Breite, der der <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" /> hinzugefügt wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Spalte wird am Ende der Auflistung hinzugefügt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ColumnHeader Add (string key, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ColumnHeader Add(string key, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, text As String) As ColumnHeader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ColumnHeader ^ Add(System::String ^ key, System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string -&gt; System.Windows.Forms.ColumnHeader&#xA;override this.Add : string * string -&gt; System.Windows.Forms.ColumnHeader" Usage="columnHeaderCollection.Add (key, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnHeader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Schlüssel des <see cref="T:System.Windows.Forms.ColumnHeader" />, der der Auflistung hinzugefügt werden soll.</param>
        <param name="text">Der Text des <see cref="T:System.Windows.Forms.ColumnHeader" />, der der Auflistung hinzugefügt werden soll.</param>
        <summary>Erstellt eine Spalte mit dem angegebenen Text und dem angegebenen Schlüssel und fügt diese der Auflistung hinzu.</summary>
        <returns>Der <see cref="T:System.Windows.Forms.ColumnHeader" /> mit dem angegebenen Schlüssel und dem angegebenen Text, der der <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" /> hinzugefügt wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ColumnHeader.Name%2A> Eigenschaft entspricht dem Schlüssel für eine Spalte in der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
 Die Spalte wird am Ende der Auflistung hinzugefügt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ColumnHeader Add (string key, string text, int width);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ColumnHeader Add(string key, string text, int32 width) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Add(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, text As String, width As Integer) As ColumnHeader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ColumnHeader ^ Add(System::String ^ key, System::String ^ text, int width);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string * int -&gt; System.Windows.Forms.ColumnHeader&#xA;override this.Add : string * string * int -&gt; System.Windows.Forms.ColumnHeader" Usage="columnHeaderCollection.Add (key, text, width)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnHeader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="width" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="key">Der Schlüssel des Spaltenheaders.</param>
        <param name="text">Der im Spaltenkopf anzuzeigende Text</param>
        <param name="width">Die ursprüngliche Breite des <see cref="T:System.Windows.Forms.ColumnHeader" />.</param>
        <summary>Erstellt eine Spalte mit dem angegebenen Text, dem angegebenen Schlüssel und der angegebenen Breite und fügt die Spalte der Auflistung hinzu.</summary>
        <returns>Der der Auflistung hinzugefügte <see cref="T:System.Windows.Forms.ColumnHeader" /> mit dem angegebenen Text, dem angegebenen Schlüssel und der angegebenen Breite.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ColumnHeader.Name%2A> Eigenschaft entspricht dem Schlüssel für eine Spalte in der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
 Die Spalte wird am Ende der Auflistung hinzugefügt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ColumnHeader Add (string str, int width, System.Windows.Forms.HorizontalAlignment textAlign);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ColumnHeader Add(string str, int32 width, valuetype System.Windows.Forms.HorizontalAlignment textAlign) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Add(System.String,System.Int32,System.Windows.Forms.HorizontalAlignment)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (str As String, width As Integer, textAlign As HorizontalAlignment) As ColumnHeader" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ColumnHeader ^ Add(System::String ^ str, int width, System::Windows::Forms::HorizontalAlignment textAlign);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member Add : string * int * System.Windows.Forms.HorizontalAlignment -&gt; System.Windows.Forms.ColumnHeader&#xA;override this.Add : string * int * System.Windows.Forms.HorizontalAlignment -&gt; System.Windows.Forms.ColumnHeader" Usage="columnHeaderCollection.Add (str, width, textAlign)" FrameworkAlternate="netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ColumnHeader Add (string text, int width, System.Windows.Forms.HorizontalAlignment textAlign);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ColumnHeader Add(string text, int32 width, valuetype System.Windows.Forms.HorizontalAlignment textAlign) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (text As String, width As Integer, textAlign As HorizontalAlignment) As ColumnHeader" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ColumnHeader ^ Add(System::String ^ text, int width, System::Windows::Forms::HorizontalAlignment textAlign);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member Add : string * int * System.Windows.Forms.HorizontalAlignment -&gt; System.Windows.Forms.ColumnHeader&#xA;override this.Add : string * int * System.Windows.Forms.HorizontalAlignment -&gt; System.Windows.Forms.ColumnHeader" Usage="columnHeaderCollection.Add (text, width, textAlign)" FrameworkAlternate="netframework-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnHeader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="width" Type="System.Int32" Index="1" />
        <Parameter Name="textAlign" Type="System.Windows.Forms.HorizontalAlignment" Index="2" />
      </Parameters>
      <Docs>
        <param name="text">Der im Spaltenkopf anzuzeigende Text</param>
        <param name="str">To be added.</param>
        <param name="width">Die Ausgangsbreite des Spaltenkopfes.</param>
        <param name="textAlign">Einer der <see cref="T:System.Windows.Forms.HorizontalAlignment" />-Werte.</param>
        <summary>Fügt der Auflistung einen Spaltenkopf mit den angegebenen Einstellungen für Text, Breite und Ausrichtung hinzu.</summary>
        <returns>Der der Auflistung hinzugefügte <see cref="T:System.Windows.Forms.ColumnHeader" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Können Sie diese Version von der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Add%2A> Methode zum Erstellen eines neuen <xref:System.Windows.Forms.ColumnHeader> in der Auflistung hinzu. Der Text des neuen <xref:System.Windows.Forms.ColumnHeader> hinzugefügt, das Steuerelement wird basierend auf den `text` Parameter. Diese Version von der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Add%2A> Methode auch können Sie die Breite der Spalte und die Ausrichtung des Texts in der Kopfzeile der Spalte angeben. Wenn Sie eine vorhandene haben <xref:System.Windows.Forms.ColumnHeader> , dass Sie der Auflistung hinzuzufügen, verwenden die Version des möchten die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Add%2A> Methode, die akzeptiert eine <xref:System.Windows.Forms.ColumnHeader> als Parameter.  
  
 Wenn Spaltenüberschriften hinzugefügt werden, werden sie am Ende der Auflistung hinzugefügt. Um eine Spaltenüberschrift in der Auflistung, an einer bestimmten Position einzufügen, verwenden die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert%2A> Methode. Um einen Satz von Spaltenüberschriften in die Sammlung in einem einzigen Vorgang hinzuzufügen, verwenden die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange%2A> Methode.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt eine <xref:System.Windows.Forms.ListView> -Steuerelement mit drei <xref:System.Windows.Forms.ListViewItem> angegebenen Objekte und drei <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> Objekte, die für jedes Element angegeben. Außerdem erstellt das Beispiel <xref:System.Windows.Forms.ColumnHeader> Objekte, die Unterelemente in der Detailansicht angezeigt werden sollen. Zwei <xref:System.Windows.Forms.ImageList> Objekte werden im Codebeispiel zu Images für außerdem erstellt der <xref:System.Windows.Forms.ListViewItem> Objekte. Diese <xref:System.Windows.Forms.ImageList> Objekte werden hinzugefügt, um die <xref:System.Windows.Forms.ListView.LargeImageList%2A> und <xref:System.Windows.Forms.ListView.SmallImageList%2A> Eigenschaften. Im Beispiel verwendet die folgenden Eigenschaften beim Erstellen der <xref:System.Windows.Forms.ListView> Steuerelement:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Dieses Beispiel erfordert, dass Sie den Code hinzugefügt haben eine <xref:System.Windows.Forms.Form> und rufen die Methode, die im Beispiel aus dem Konstruktor oder eine andere Methode auf dem Formular erstellt. Das Beispiel erfordert auch, dass die Images mit dem Namen `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, und `MyLargeImage2` befinden sich im Stammverzeichnis von Laufwerk C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert(System.Int32,System.Windows.Forms.ColumnHeader)" />
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange(System.Windows.Forms.ColumnHeader[])" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ColumnHeader Add (string key, string text, int width, System.Windows.Forms.HorizontalAlignment textAlign, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ColumnHeader Add(string key, string text, int32 width, valuetype System.Windows.Forms.HorizontalAlignment textAlign, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Add(System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, text As String, width As Integer, textAlign As HorizontalAlignment, imageIndex As Integer) As ColumnHeader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ColumnHeader ^ Add(System::String ^ key, System::String ^ text, int width, System::Windows::Forms::HorizontalAlignment textAlign, int imageIndex);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string * int * System.Windows.Forms.HorizontalAlignment * int -&gt; System.Windows.Forms.ColumnHeader&#xA;override this.Add : string * string * int * System.Windows.Forms.HorizontalAlignment * int -&gt; System.Windows.Forms.ColumnHeader" Usage="columnHeaderCollection.Add (key, text, width, textAlign, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnHeader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="textAlign" Type="System.Windows.Forms.HorizontalAlignment" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="key">Der Schlüssel des Spaltenheaders.</param>
        <param name="text">Der im Spaltenkopf anzuzeigende Text</param>
        <param name="width">Die Ausgangsbreite des Spaltenkopfes.</param>
        <param name="textAlign">Einer der <see cref="T:System.Windows.Forms.HorizontalAlignment" />-Werte.</param>
        <param name="imageIndex">Der Indexwert des in der Spalte anzuzeigenden Bilds.</param>
        <summary>Erstellt eine Spalte mit dem angegebenen Schlüssel, dem angegebenen ausgerichteten Text, der angegebenen Breite und dem angegebenen Bildindex und fügt diese der Auflistung hinzu.</summary>
        <returns>Der der Auflistung hinzugefügte <see cref="T:System.Windows.Forms.ColumnHeader" /> mit dem angegebenen Schlüssel, dem angegebenen ausgerichteten Text, der angegebenen Breite und dem angegebenen Bildindex.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ColumnHeader.Name%2A> Eigenschaft entspricht dem Schlüssel für eine Spalte in der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
 Die Spalte wird am Ende der Auflistung hinzugefügt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ColumnHeader Add (string key, string text, int width, System.Windows.Forms.HorizontalAlignment textAlign, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ColumnHeader Add(string key, string text, int32 width, valuetype System.Windows.Forms.HorizontalAlignment textAlign, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Add(System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, text As String, width As Integer, textAlign As HorizontalAlignment, imageKey As String) As ColumnHeader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ColumnHeader ^ Add(System::String ^ key, System::String ^ text, int width, System::Windows::Forms::HorizontalAlignment textAlign, System::String ^ imageKey);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string * int * System.Windows.Forms.HorizontalAlignment * string -&gt; System.Windows.Forms.ColumnHeader&#xA;override this.Add : string * string * int * System.Windows.Forms.HorizontalAlignment * string -&gt; System.Windows.Forms.ColumnHeader" Usage="columnHeaderCollection.Add (key, text, width, textAlign, imageKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnHeader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="textAlign" Type="System.Windows.Forms.HorizontalAlignment" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Schlüssel des Spaltenheaders.</param>
        <param name="text">Der im Spaltenkopf anzuzeigende Text</param>
        <param name="width">Die Ausgangsbreite des Spaltenkopfes.</param>
        <param name="textAlign">Einer der <see cref="T:System.Windows.Forms.HorizontalAlignment" />-Werte.</param>
        <param name="imageKey">Der Schlüsselwert des im Spaltenheader anzuzeigenden Bilds.</param>
        <summary>Erstellt eine Spalte mit dem angegebenen Schlüssel, dem angegebenen ausgerichteten Text, der angegebenen Breite und dem angegebenen Bildschlüssel und fügt diese der Auflistung hinzu.</summary>
        <returns>Der der Auflistung hinzugefügte <see cref="T:System.Windows.Forms.ColumnHeader" /> mit dem angegebenen Schlüssel, dem angegebenen ausgerichteten Text, der angegebenen Breite und dem angegebenen Bildschlüssel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ColumnHeader.Name%2A> Eigenschaft entspricht dem Schlüssel für eine Spalte in der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
 Die Spalte wird am Ende der Auflistung hinzugefügt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Windows.Forms.ColumnHeader[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Windows.Forms.ColumnHeader[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange(System.Windows.Forms.ColumnHeader[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRange (values As ColumnHeader())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRange(cli::array &lt;System::Windows::Forms::ColumnHeader ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="abstract member AddRange : System.Windows.Forms.ColumnHeader[] -&gt; unit&#xA;override this.AddRange : System.Windows.Forms.ColumnHeader[] -&gt; unit" Usage="columnHeaderCollection.AddRange values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Windows.Forms.ColumnHeader[]" />
      </Parameters>
      <Docs>
        <param name="values">Ein Array von <see cref="T:System.Windows.Forms.ColumnHeader" />-Objekten, die der Auflistung hinzugefügt werden sollen.</param>
        <summary>Fügt der Auflistung ein Array von Spaltenköpfen hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Methode verwenden, die Spaltenüberschriften in einer anderen verwendet wiederverwenden <xref:System.Windows.Forms.ListView> Steuerelement. Wenn Sie ein einzelnes hinzufügen möchten <xref:System.Windows.Forms.ColumnHeader>, verwenden Sie die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Add%2A> Methode. Sie können auch die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert%2A> Methode, wenn Sie ein einzelnes hinzufügen möchten <xref:System.Windows.Forms.ColumnHeader> an einer bestimmten Position in der Auflistung.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Add(System.String,System.Int32,System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert(System.Int32,System.Windows.Forms.ColumnHeader)" />
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="columnHeaderCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt alle Spaltenköpfe aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alle Informationen über die gelöschten Spaltenüberschriften geht verloren, wenn Sie die Spaltenüberschriften aus der Auflistung entfernen. So entfernen Sie einen einzelnen Spaltenkopf aus der Auflistung verwenden die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Remove%2A> oder <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.RemoveAt%2A> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Remove(System.Windows.Forms.ColumnHeader)" />
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.ColumnHeader value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.ColumnHeader value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Contains(System.Windows.Forms.ColumnHeader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As ColumnHeader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::ColumnHeader ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.ColumnHeader -&gt; bool" Usage="columnHeaderCollection.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ColumnHeader" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Windows.Forms.ColumnHeader" />, der den in der Auflistung zu suchenden Spaltenkopf darstellt.</param>
        <summary>Bestimmt, ob sich der angegebene Spaltenkopf in der Auflistung befindet.</summary>
        <returns>
          <see langword="true" />, wenn sich der Spaltenkopf in der Auflistung befindet, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Contains%2A> Methode können Sie bestimmen, ob eine <xref:System.Windows.Forms.ColumnHeader> ist ein Mitglied der Auflistung. Sobald Sie wissen, dass die Kopfzeile der Spalte in der Auflistung befindet, können Sie die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.IndexOf%2A> Methode, um die Position des Spaltenkopfes in der Auflistung zu bestimmen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.IndexOf(System.Windows.Forms.ColumnHeader)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="columnHeaderCollection.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Name der zu suchenden Spalte.</param>
        <summary>Bestimmt, ob eine Spalte mit dem angegebenen Schlüssel in der Auflistung enthalten ist.</summary>
        <returns>
          <see langword="true" />, wenn eine Spalte mit dem angegebenen Namen in der Auflistung enthalten ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Schlüsselvergleich wird nicht beachtet. Wenn `key` ist `null` oder leer ist, <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.ContainsKey%2A> zurückgibt `false.`  
  
 Die <xref:System.Windows.Forms.ColumnHeader.Name%2A> Eigenschaft entspricht dem Schlüssel für ein Element in der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ColumnHeaderCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListView.ColumnHeaderCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Elemente in der Auflistung ab.</summary>
        <value>Die Anzahl der Elemente in der Auflistung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Eigenschaft können Sie die Anzahl der Spalten zu bestimmen, die in angezeigt werden, die <xref:System.Windows.Forms.ListView> bei der <xref:System.Windows.Forms.ListView.View%2A> -Eigenschaftensatz auf <xref:System.Windows.Forms.View.Details>. Sie können diesen Wert dann verwenden, wenn Sie die Werte der Auflistung durchlaufen werden, und Sie eine Reihe von Iterationen zum Durchführen des schleifenvorgangs angeben müssen.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="columnHeaderCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Enumerator zurück, mit dem die Auflistung von Spaltenköpfen durchlaufen werden soll.</summary>
        <returns>Ein <see cref="T:System.Collections.IEnumerator" />, der die Elementauflistung darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.ColumnHeader value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.ColumnHeader value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.IndexOf(System.Windows.Forms.ColumnHeader)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As ColumnHeader) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::ColumnHeader ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.ColumnHeader -&gt; int" Usage="columnHeaderCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ColumnHeader" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Windows.Forms.ColumnHeader" />, der den in der Auflistung zu suchenden Spaltenkopf darstellt.</param>
        <summary>Gibt den Index des angegebenen Spaltenheaders in der Auflistung zurück.</summary>
        <returns>Der nullbasierte Index der Position des Spaltenkopfes in der Auflistung. Wenn sich der Spaltenheader nicht in der Auflistung befindet, ist der Rückgabewert -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.IndexOf%2A> Methode können Sie die Position eines Spaltenheaders in der Auflistung zu bestimmen. Um zu bestimmen, ob eine Spaltenüberschrift in der Auflistung vor dem Aufrufen dieser Methode enthalten ist, verwenden die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Contains%2A> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Contains(System.Windows.Forms.ColumnHeader)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfKey : string -&gt; int&#xA;override this.IndexOfKey : string -&gt; int" Usage="columnHeaderCollection.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Name der Spalte, deren Index abgerufen werden soll.</param>
        <summary>Bestimmt den Index für eine Spalte mit dem angegebenen Schlüssel.</summary>
        <returns>Der nullbasierte Index für das erste Vorkommen der Spalte mit dem angegebenen Namen (wenn gefunden), andernfalls -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Schlüsselvergleich wird nicht beachtet. Wenn `key` ist `null` oder eine leere Zeichenfolge <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.IndexOfKey%2A> gibt-1 zurück,`.`  
  
 Die <xref:System.Windows.Forms.ColumnHeader.Name%2A> Eigenschaft entspricht dem Schlüssel für eine Spalte in der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
 Wenn <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.IndexOfKey%2A> wird aufgerufen, die letzte zurückgegebene Index wird für eine Übereinstimmung mit Schlüssel zunächst geprüft werden, und wenn keine Übereinstimmung vorhanden ist, beginnt die Suche am Anfang der Auflistung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Insert">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt einer Auflistung einen Spaltenkopf am angegebenen Index hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string -&gt; unit" Usage="columnHeaderCollection.Insert (index, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">Die nullbasierte Indexposition, an der der Spaltenkopf eingefügt wird.</param>
        <param name="text">Der im Spaltenkopf anzuzeigende Text</param>
        <summary>Erstellt einen neuen Spaltenheader mit dem angegebenen Text und fügt den Header am angegebenen Index in die Auflistung ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie zum Hinzufügen einer Spaltenüberschrift ohne Angabe einer Position in der Auflistung der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Add%2A> Methode. Wenn Sie die Auflistung ein Array von Spaltenüberschriften hinzufügen möchten, verwenden Sie die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> ist kleiner als 0 (null) bzw. größer oder gleich dem Wert der <see cref="P:System.Windows.Forms.ListView.ColumnHeaderCollection.Count" />-Eigenschaft der <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Forms.ColumnHeader value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Forms.ColumnHeader value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert(System.Int32,System.Windows.Forms.ColumnHeader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As ColumnHeader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Forms::ColumnHeader ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Windows.Forms.ColumnHeader -&gt; unit" Usage="columnHeaderCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Windows.Forms.ColumnHeader" />
      </Parameters>
      <Docs>
        <param name="index">Die nullbasierte Indexposition, an der der Spaltenkopf eingefügt wird.</param>
        <param name="value">Die in die Auflistung einzufügende <see cref="T:System.Windows.Forms.ColumnHeader" />-Klasse.</param>
        <summary>Fügt einer Auflistung einen vorhandenen Spaltenkopf am angegebenen Index hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Version von der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert%2A> Methode können Sie eine vorhandene einzufügende <xref:System.Windows.Forms.ColumnHeader> an einer bestimmten Position in der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
 Wenn Sie ein neues erstellen möchten <xref:System.Windows.Forms.ColumnHeader> und fügen Sie sie an einer bestimmten Position in der Auflistung, die andere Version der dem <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert%2A> Methode. Verwenden Sie zum Hinzufügen einer Spaltenüberschrift ohne Angabe einer bestimmten Position in der Auflistung der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Add%2A> Methode. Wenn Sie die Auflistung ein Array von Spaltenüberschriften hinzufügen möchten, verwenden Sie die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> ist kleiner als 0 (null) bzw. größer oder gleich dem Wert der <see cref="P:System.Windows.Forms.ListView.ColumnHeaderCollection.Count" />-Eigenschaft der <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange(System.Windows.Forms.ListViewItem.ListViewSubItem[])" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, string text, int width);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string text, int32 width) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert(System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, text As String, width As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::String ^ text, int width);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string * int -&gt; unit" Usage="columnHeaderCollection.Insert (index, text, width)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="width" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Die nullbasierte Indexposition, an der der Spaltenkopf eingefügt wird.</param>
        <param name="text">Der im Spaltenkopf anzuzeigende Text</param>
        <param name="width">Die ursprüngliche Breite des Spaltenheaders in Pixel.</param>
        <summary>Erstellt einen neuen Spaltenheader mit dem angegebenen Text und der ursprünglichen Breite und fügt den Header am angegebenen Index in die Auflistung ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie zum Hinzufügen einer Spaltenüberschrift ohne Angabe einer Position in der Auflistung der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Add%2A> Methode. Wenn Sie die Auflistung ein Array von Spaltenüberschriften hinzufügen möchten, verwenden Sie die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, string key, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string key, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, key As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::String ^ key, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string * string -&gt; unit" Usage="columnHeaderCollection.Insert (index, key, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">Die nullbasierte Indexposition, an der der Spaltenkopf eingefügt wird.</param>
        <param name="key">Der Name des Spaltenheaders.</param>
        <param name="text">Der im Spaltenkopf anzuzeigende Text</param>
        <summary>Erstellt einen neuen Spaltenheader mit dem angegebenen Text und dem angegebenen Schlüssel und fügt den Header am angegebenen Index in die Auflistung ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie zum Hinzufügen einer Spaltenüberschrift ohne Angabe einer Position in der Auflistung der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Add%2A> Methode. Wenn Sie die Auflistung ein Array von Spaltenüberschriften hinzufügen möchten, verwenden Sie die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange%2A> Methode.  
  
 Die <xref:System.Windows.Forms.ColumnHeader.Name%2A> Eigenschaft entspricht dem Schlüssel für eine Spalte in der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, string key, string text, int width);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string key, string text, int32 width) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert(System.Int32,System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, key As String, text As String, width As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::String ^ key, System::String ^ text, int width);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string * string * int -&gt; unit" Usage="columnHeaderCollection.Insert (index, key, text, width)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="width" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Die nullbasierte Indexposition, an der der Spaltenkopf eingefügt wird.</param>
        <param name="key">Der Name des Spaltenheaders.</param>
        <param name="text">Der im Spaltenkopf anzuzeigende Text</param>
        <param name="width">Die ursprüngliche Breite des Spaltenheaders in Pixel.</param>
        <summary>Erstellt einen neuen Spaltenheader mit dem angegebenen Text, dem angegebenen Schlüssel und der angegebenen Breite und fügt den Header am angegebenen Index in die Auflistung ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie zum Hinzufügen einer Spaltenüberschrift ohne Angabe einer Position in der Auflistung der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Add%2A> Methode. Wenn Sie die Auflistung ein Array von Spaltenüberschriften hinzufügen möchten, verwenden Sie die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange%2A> Methode.  
  
 Die <xref:System.Windows.Forms.ColumnHeader.Name%2A> Eigenschaft entspricht dem Schlüssel für eine Spalte in der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, string str, int width, System.Windows.Forms.HorizontalAlignment textAlign);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string str, int32 width, valuetype System.Windows.Forms.HorizontalAlignment textAlign) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert(System.Int32,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, str As String, width As Integer, textAlign As HorizontalAlignment)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::String ^ str, int width, System::Windows::Forms::HorizontalAlignment textAlign);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string * int * System.Windows.Forms.HorizontalAlignment -&gt; unit" Usage="columnHeaderCollection.Insert (index, str, width, textAlign)" FrameworkAlternate="netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public void Insert (int index, string text, int width, System.Windows.Forms.HorizontalAlignment textAlign);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string text, int32 width, valuetype System.Windows.Forms.HorizontalAlignment textAlign) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, text As String, width As Integer, textAlign As HorizontalAlignment)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::String ^ text, int width, System::Windows::Forms::HorizontalAlignment textAlign);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string * int * System.Windows.Forms.HorizontalAlignment -&gt; unit" Usage="columnHeaderCollection.Insert (index, text, width, textAlign)" FrameworkAlternate="netframework-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" />
        <Parameter Name="str" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="text" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="width" Type="System.Int32" Index="2" />
        <Parameter Name="textAlign" Type="System.Windows.Forms.HorizontalAlignment" Index="3" />
      </Parameters>
      <Docs>
        <param name="index">Die nullbasierte Indexposition, an der der Spaltenkopf eingefügt wird.</param>
        <param name="text">Der im Spaltenkopf anzuzeigende Text</param>
        <param name="str">To be added.</param>
        <param name="width">Die Ausgangsbreite des Spaltenkopfes. Legen Sie den Wert zur automatischen Anpassung des Spaltenkopfes an den breitesten Unterelementtext der Spalte auf -1 fest. Wenn die Breite automatisch auf die Textbreite des Spaltenkopfes festgelegt werden soll, legen Sie den Wert auf -2 fest.</param>
        <param name="textAlign">Einer der <see cref="T:System.Windows.Forms.HorizontalAlignment" />-Werte.</param>
        <summary>Erstellt einen neuen Spaltenkopf und fügt ihn am angegebenen Index in die Auflistung ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Version von der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert%2A> Methode können Sie zum Erstellen eines neuen <xref:System.Windows.Forms.ColumnHeader> mit bestimmten Spaltenkopftext, Breite und Einstellung für die Ausrichtung von Text und fügen Sie ihn an einer bestimmten Position in der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>. Sie können diese Methode verwenden, wenn Sie einen neuen Spaltenheader in einer vorhandenen Auflistung von Spaltenüberschriften einfügen möchten. Wenn Sie eine vorhandene verwenden möchten <xref:System.Windows.Forms.ColumnHeader> und fügen Sie sie an einer bestimmten Position in der Auflistung, die andere Version der dem <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert%2A> Methode. Verwenden Sie zum Hinzufügen einer Spaltenüberschrift ohne Angabe einer bestimmten Position in der Auflistung der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Add%2A> Methode. Wenn Sie die Auflistung ein Array von Spaltenüberschriften hinzufügen möchten, verwenden Sie die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> ist kleiner als 0 (null) bzw. größer oder gleich dem Wert der <see cref="P:System.Windows.Forms.ListView.ColumnHeaderCollection.Count" />-Eigenschaft der <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange(System.Windows.Forms.ListViewItem.ListViewSubItem[])" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, string key, string text, int width, System.Windows.Forms.HorizontalAlignment textAlign, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string key, string text, int32 width, valuetype System.Windows.Forms.HorizontalAlignment textAlign, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert(System.Int32,System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, key As String, text As String, width As Integer, textAlign As HorizontalAlignment, imageIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::String ^ key, System::String ^ text, int width, System::Windows::Forms::HorizontalAlignment textAlign, int imageIndex);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string * string * int * System.Windows.Forms.HorizontalAlignment * int -&gt; unit" Usage="columnHeaderCollection.Insert (index, key, text, width, textAlign, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="textAlign" Type="System.Windows.Forms.HorizontalAlignment" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Die nullbasierte Indexposition, an der der Spaltenkopf eingefügt wird.</param>
        <param name="key">Der Name des Spaltenheaders.</param>
        <param name="text">Der im Spaltenkopf anzuzeigende Text</param>
        <param name="width">Die ursprüngliche Breite des Spaltenheaders in Pixel.</param>
        <param name="textAlign">Einer der <see cref="T:System.Windows.Forms.HorizontalAlignment" />-Werte.</param>
        <param name="imageIndex">Der Index des im Spaltenheader anzuzeigenden Bilds.</param>
        <summary>Erstellt einen neuen Spaltenheader mit dem angegebenen ausgerichteten Text, dem angegebenen Schlüssel, der angegebenen Breite und dem angegebenen Bildindex und fügt den Header am angegebenen Index in die Auflistung ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie zum Hinzufügen einer Spaltenüberschrift ohne Angabe einer Position in der Auflistung der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Add%2A> Methode. Wenn Sie die Auflistung ein Array von Spaltenüberschriften hinzufügen möchten, verwenden Sie die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange%2A> Methode.  
  
 Die <xref:System.Windows.Forms.ColumnHeader.Name%2A> Eigenschaft entspricht dem Schlüssel für eine Spalte in der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, string key, string text, int width, System.Windows.Forms.HorizontalAlignment textAlign, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string key, string text, int32 width, valuetype System.Windows.Forms.HorizontalAlignment textAlign, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Insert(System.Int32,System.String,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, key As String, text As String, width As Integer, textAlign As HorizontalAlignment, imageKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::String ^ key, System::String ^ text, int width, System::Windows::Forms::HorizontalAlignment textAlign, System::String ^ imageKey);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string * string * int * System.Windows.Forms.HorizontalAlignment * string -&gt; unit" Usage="columnHeaderCollection.Insert (index, key, text, width, textAlign, imageKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="textAlign" Type="System.Windows.Forms.HorizontalAlignment" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">Die nullbasierte Indexposition, an der der Spaltenkopf eingefügt wird.</param>
        <param name="key">Der Name des Spaltenheaders.</param>
        <param name="text">Der im Spaltenkopf anzuzeigende Text</param>
        <param name="width">Die ursprüngliche Breite des Spaltenheaders in Pixel.</param>
        <param name="textAlign">Einer der <see cref="T:System.Windows.Forms.HorizontalAlignment" />-Werte.</param>
        <param name="imageKey">Der Schlüssel des im Spaltenheader anzuzeigenden Bilds.</param>
        <summary>Erstellt einen neuen Spaltenheader mit dem angegebenen ausgerichteten Text, dem angegebenen Schlüssel, der angegebenen Breite und dem angegebenen Bildschlüssel und fügt den Header am angegebenen Index in die Auflistung ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie zum Hinzufügen einer Spaltenüberschrift ohne Angabe einer Position in der Auflistung der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Add%2A> Methode. Wenn Sie die Auflistung ein Array von Spaltenüberschriften hinzufügen möchten, verwenden Sie die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange%2A> Methode.  
  
 Die <xref:System.Windows.Forms.ColumnHeader.Name%2A> Eigenschaft entspricht dem Schlüssel für eine Spalte in der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ColumnHeaderCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.ListView.ColumnHeaderCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
        <value>
          <see langword="true" />, wenn die Auflistung schreibgeschützt ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist immer `false` für diese Sammlung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft einen Spaltenheader aus der Auflistung ab.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ColumnHeader this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ColumnHeader Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ColumnHeaderCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(index As Integer) As ColumnHeader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ColumnHeader ^ default[int] { System::Windows::Forms::ColumnHeader ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.ColumnHeader" Usage="System.Windows.Forms.ListView.ColumnHeaderCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnHeader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der Index des aus der Auflistung abzurufenden Spaltenheaders.</param>
        <summary>Ruft den Spaltenheader am angegebenen Index in der Auflistung ab.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.ColumnHeader" />, der den Spaltenkopf am angegebenen Index in der Auflistung darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Methode verwenden, zum Abrufen der <xref:System.Windows.Forms.ColumnHeader> an einer bestimmten Stelle in der Auflistung gespeichert. Verwenden Sie zum Bestimmen des Indexes der einer bestimmten Spaltenüberschrift in der Auflistung der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.IndexOf%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> ist kleiner als 0 (null) bzw. größer oder gleich dem Wert der <see cref="P:System.Windows.Forms.ListView.ColumnHeaderCollection.Count" />-Eigenschaft der <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.IndexOf(System.Windows.Forms.ColumnHeader)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ColumnHeader this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ColumnHeader Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ColumnHeaderCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As ColumnHeader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ColumnHeader ^ default[System::String ^] { System::Windows::Forms::ColumnHeader ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.ColumnHeader" Usage="System.Windows.Forms.ListView.ColumnHeaderCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnHeader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Name des aus der Auflistung abzurufenden Spaltenheaders.</param>
        <summary>Ruft den Spaltenheader mit dem angegebenen Schlüssel aus der Auflistung ab.</summary>
        <value>Das <see cref="T:System.Windows.Forms.ColumnHeader" /> mit dem angegebenen Schlüssel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Schlüsselvergleich wird nicht beachtet. Wenn `key` ist `null` oder eine leere Zeichenfolge <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Item%2A> gibt `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.Windows.Forms.ColumnHeader column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Windows.Forms.ColumnHeader column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Remove(System.Windows.Forms.ColumnHeader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (column As ColumnHeader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Windows::Forms::ColumnHeader ^ column);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Windows.Forms.ColumnHeader -&gt; unit&#xA;override this.Remove : System.Windows.Forms.ColumnHeader -&gt; unit" Usage="columnHeaderCollection.Remove column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Windows.Forms.ColumnHeader" />
      </Parameters>
      <Docs>
        <param name="column">Ein <see cref="T:System.Windows.Forms.ColumnHeader" />, der den aus der Auflistung zu entfernenden Spaltenkopf darstellt.</param>
        <summary>Entfernt den angegebenen Spaltenkopf aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie eine Spaltenüberschrift aus der Auflistung entfernen, ändern die Indizes für die folgenden Spaltenüberschriften in der Auflistung ein. Alle Informationen über die entfernten Spaltenüberschrift wird gelöscht. Sie können diese Methode verwenden, zu eine bestimmten Spaltenüberschrift aus der Auflistung entfernt werden, durch den tatsächlichen angeben <xref:System.Windows.Forms.ColumnHeader> entfernen. Verwenden Sie zum Angeben des Indexes des Spaltenheaders anstelle der Kopfzeile der Spalte selbst Entfernen der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.RemoveAt%2A> Methode. Um alle Spaltenköpfe aus der Auflistung zu entfernen, verwenden die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Clear%2A> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="columnHeaderCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des zu entfernenden Spaltenkopfes.</param>
        <summary>Entfernt den Spaltenkopf am angegebenen Index in der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie eine Spaltenüberschrift aus der Auflistung entfernen, ändern die Indizes für die folgenden Spaltenüberschriften in der Auflistung ein. Alle Informationen über die entfernten Spaltenüberschrift wird gelöscht. Sie können diese Methode verwenden, um zu eine bestimmten Spaltenüberschrift aus der Auflistung zu entfernen, indem Sie den Index des aus der Auflistung zu entfernenden Spaltenkopfes angeben. Verwenden Sie zum Angeben der Kopfzeile der Spalte So entfernen Sie anstelle der Index für den Spaltenheader der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Remove%2A> Methode. Um alle Spaltenköpfe aus der Auflistung zu entfernen, verwenden die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.Clear%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> ist kleiner als 0 (null) bzw. größer oder gleich dem Wert der <see cref="P:System.Windows.Forms.ListView.ColumnHeaderCollection.Count" />-Eigenschaft der <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Remove(System.Windows.Forms.ColumnHeader)" />
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveByKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member RemoveByKey : string -&gt; unit&#xA;override this.RemoveByKey : string -&gt; unit" Usage="columnHeaderCollection.RemoveByKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der aus der Auflistung zu entfernende Name der Spalte.</param>
        <summary>Entfernt die Spalte mit dem angegebenen Schlüssel aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ColumnHeader.Name%2A> Eigenschaft entspricht dem Schlüssel für eine Spalte in der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
 Schlüssel beim Vergleich wird von nicht-Groß-/Kleinschreibung. Wenn `key` ist `null` oder eine leere Zeichenfolge <xref:System.Windows.Forms.ListView.ColumnHeaderCollection.RemoveByKey%2A> ändert sich nicht auf die Sammlung`.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (dest As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ dest, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">Das eindimensionales Array, bei dem es sich um das Ziel der aus der Auflistung kopierten Elemente handelt. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
        <param name="index">Der nullbasierte Index im Array, ab dem der Kopiervorgang beginnt.</param>
        <summary>Kopiert die <see cref="T:System.Windows.Forms.ColumnHeader" />-Objekte in der <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" /> in ein Array, beginnend an einem bestimmten Arrayindex.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ColumnHeaderCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" /> synchronisiert (threadsicher) ist.</summary>
        <value>
          <see langword="true" /> in allen Fällen.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ColumnHeaderCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt ab, mit dem der Zugriff auf die Steuerelementauflistung synchronisiert werden kann</summary>
        <value>Das Objekt, mit dem die Auflistung synchronisiert wird.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Die <see cref="T:System.Windows.Forms.ColumnHeader" /> hinzuzufügende <see cref="T:System.Windows.Forms.ListView" />.</param>
        <summary>Fügt der <see cref="T:System.Windows.Forms.ColumnHeader" /> einen <see cref="T:System.Windows.Forms.ListView" /> hinzu.</summary>
        <returns>Der nullbasierte Index, der den Speicherort des Objekts angibt, das der Auflistung hinzugefügt wurde.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> ist keine <see cref="T:System.Windows.Forms.ColumnHeader" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Ein Objekt, das den in der Auflistung zu suchenden Spaltenheader darstellt.</param>
        <summary>Bestimmt, ob sich der angegebene Spaltenkopf in der Auflistung befindet.</summary>
        <returns>
          <see langword="true" />, wenn das Objekt ein Spaltenheader ist, der in der Auflistung enthalten ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Ein Objekt, das den in der Auflistung zu suchenden Spaltenheader darstellt.</param>
        <summary>Gibt den Index des angegebenen Spaltenheaders in der Auflistung zurück.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Die nullbasierte Indexposition, an der der Spaltenkopf eingefügt wird.</param>
        <param name="value">Die in die Auflistung einzufügende <see cref="T:System.Windows.Forms.ColumnHeader" />-Klasse.</param>
        <summary>Fügt einer Auflistung einen vorhandenen Spaltenkopf am angegebenen Index hinzu.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> ist kleiner als 0 (null) bzw. größer oder gleich dem Wert der <see cref="P:System.Windows.Forms.ListView.ColumnHeaderCollection.Count" />-Eigenschaft der <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ColumnHeaderCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" /> eine feste Größe aufweist.</summary>
        <value>
          <see langword="false" /> in allen Fällen.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ColumnHeaderCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll.</param>
        <summary>Ruft den Spaltenkopf am angegebenen Index in der Auflistung ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.ColumnHeader" />, der den Spaltenheader am angegebenen Index in der Auflistung darstellt.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> ist kleiner als 0 (null) bzw. größer oder gleich dem Wert der <see cref="P:System.Windows.Forms.ListView.ColumnHeaderCollection.Count" />-Eigenschaft der <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ColumnHeaderCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Windows.Forms.ColumnHeader" />, der den aus der Auflistung zu entfernenden Spaltenheader darstellt.</param>
        <summary>Entfernt den angegebenen Spaltenkopf aus der Auflistung.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>