<Type Name="ControlStyles" FullName="System.Windows.Forms.ControlStyles">
  <TypeSignature Language="C#" Value="public enum ControlStyles" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ControlStyles extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ControlStyles" />
  <TypeSignature Language="VB.NET" Value="Public Enum ControlStyles" />
  <TypeSignature Language="C++ CLI" Value="public enum class ControlStyles" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6b200-101">Gibt den Stil und das Verhalten eines Steuerelements an.</span><span class="sxs-lookup"><span data-stu-id="6b200-101">Specifies the style and behavior of a control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b200-102">Steuerelemente verwenden diese Enumeration in den verschiedenen Eigenschaften und Methoden zum Angeben der Funktionen.</span><span class="sxs-lookup"><span data-stu-id="6b200-102">Controls use this enumeration in various properties and methods to specify functionality.</span></span> <span data-ttu-id="6b200-103">Ein Steuerelement kann ein Format aktivieren, durch Aufrufen der <xref:System.Windows.Forms.Control.SetStyle%2A> -Methode und übergeben die entsprechende <xref:System.Windows.Forms.ControlStyles> Bit (oder Bits) und den booleschen Wert auf die Bit(s) festgelegt werden soll.</span><span class="sxs-lookup"><span data-stu-id="6b200-103">A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate <xref:System.Windows.Forms.ControlStyles> bit (or bits) and the Boolean value to set the bit(s) to.</span></span> <span data-ttu-id="6b200-104">Beispielsweise würde die folgende Codezeile für Visual Basic-Doppelpufferung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="6b200-104">For example, the following line of Visual Basic code would enable double-buffering.</span></span>  
  
```  
myControl.SetStyle(UserPaint Or AllPaintingInWmPaint Or DoubleBuffer, True)  
```  
  
 <span data-ttu-id="6b200-105">Wenn das AllPaintingInWmPaint Bit, um festgelegt ist `true`, die fenstermeldung WM_ERASEBKGND wird ignoriert, und die beiden <xref:System.Windows.Forms.Control.OnPaintBackground%2A> und <xref:System.Windows.Forms.Control.OnPaint%2A> Methoden werden aufgerufen, direkt aus dem Fensternachricht WM_PAINT.</span><span class="sxs-lookup"><span data-stu-id="6b200-105">If the AllPaintingInWmPaint bit is set to `true`, the window message WM_ERASEBKGND is ignored, and both <xref:System.Windows.Forms.Control.OnPaintBackground%2A> and <xref:System.Windows.Forms.Control.OnPaint%2A> methods are called directly from the window message WM_PAINT.</span></span> <span data-ttu-id="6b200-106">Dadurch wird im Allgemeinen Flackern reduziert, es sei denn, andere Steuerelemente an das Steuerelement die fenstermeldung WM_ERASEBKGND senden.</span><span class="sxs-lookup"><span data-stu-id="6b200-106">This generally reduces flicker unless other controls send the window message WM_ERASEBKGND to the control.</span></span> <span data-ttu-id="6b200-107">Sie können die fenstermeldung WM_ERASEBKGRND, um einen pseudozufälligen transparent SupportsTransparentBackColor ähnelt Effekt zu erzielen senden; z. B. eine <xref:System.Windows.Forms.ToolBar> mit flach dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="6b200-107">You might send the window message WM_ERASEBKGRND to achieve a pseudo-transparent effect similar to SupportsTransparentBackColor; for example, a <xref:System.Windows.Forms.ToolBar> with flat appearance does this.</span></span>  
  
 <span data-ttu-id="6b200-108">Sie können die OptimizedDoubleBuffer und das AllPaintingInWmPaint Bits auf festlegen, zum vollständigen Aktivieren doppelte Pufferung `true`.</span><span class="sxs-lookup"><span data-stu-id="6b200-108">To fully enable double-buffering, you can set the OptimizedDoubleBuffer and AllPaintingInWmPaint bits to `true`.</span></span> <span data-ttu-id="6b200-109">Die bevorzugte Methode zum Aktivieren der doppelten Pufferung, die das gleiche Ergebnis ergibt, ist jedoch zum Festlegen der <xref:System.Windows.Forms.Control.DoubleBuffered%2A> -Eigenschaft für das Steuerelement `true`.</span><span class="sxs-lookup"><span data-stu-id="6b200-109">However the preferred method for enabling double buffering, which yields the same result, is to set the <xref:System.Windows.Forms.Control.DoubleBuffered%2A> property for the control to `true`.</span></span>  
  
 <span data-ttu-id="6b200-110">Wenn das SupportsTransparentBackColor Bit, um festgelegt ist `true`, und die <xref:System.Windows.Forms.Control.BackColor%2A> festgelegt ist, um eine Farbe, deren Alphaanteil kleiner als 255 und ist <xref:System.Windows.Forms.Control.OnPaintBackground%2A> wird Transparenz simulieren, indem Sie gefragt werden, am übergeordneten Steuerelement mit der der Hintergrund gezeichnet.</span><span class="sxs-lookup"><span data-stu-id="6b200-110">If the SupportsTransparentBackColor bit is set to `true`, and the <xref:System.Windows.Forms.Control.BackColor%2A> is set to a color whose alpha component is less than 255, <xref:System.Windows.Forms.Control.OnPaintBackground%2A> will simulate transparency by asking its parent control to paint the background.</span></span> <span data-ttu-id="6b200-111">Dies ist keine echte Transparenz.</span><span class="sxs-lookup"><span data-stu-id="6b200-111">This is not true transparency.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6b200-112">Ist ein anderes Steuerelement zwischen dem Steuerelement und seinem übergeordneten Element, wird das aktuelle Steuerelement kein Steuerelement in der Mitte angezeigt.</span><span class="sxs-lookup"><span data-stu-id="6b200-112">If there is another control between the control and its parent, the current control will not show the control in the middle.</span></span>  
  
 <span data-ttu-id="6b200-113">Wenn das UserMouse Bit festgelegt ist, um `true`, die folgenden Methoden aufgerufen: <xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=nameWithType>, und <xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6b200-113">When the UserMouse bit is set to `true`, the following methods are still called: <xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=nameWithType>, and <xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6b200-114">Wenn das Steuerelement geklickt wird, wenn das StandardClick Bit, um festgelegt ist `true` der <xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=nameWithType> Methode wird aufgerufen, und es wird ausgelöst, die <xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="6b200-114">When the control is clicked, if the StandardClick bit is set to `true` the <xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=nameWithType> method is called and it raises the <xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="6b200-115">Wenn das Steuerelement doppelgeklickt wird, und sowohl die StandardDoubleClick-Wert der StandardClick Bits festgelegt sind `true`, der auf übergeben wird, die <xref:System.Windows.Forms.Control.DoubleClick> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="6b200-115">When the control is double-clicked, and both the StandardClick and StandardDoubleClick bits are set to `true`, the click is passed on to the <xref:System.Windows.Forms.Control.DoubleClick> event.</span></span> <span data-ttu-id="6b200-116">Die <xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=nameWithType> Methode wird aufgerufen, und es wird ausgelöst, die <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="6b200-116">Then the <xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=nameWithType> method is called and it raises the <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="6b200-117">Das Steuerelement kann jedoch aufrufen <xref:System.Windows.Forms.Control.OnClick%2A> oder <xref:System.Windows.Forms.Control.OnDoubleClick%2A> direkt unabhängig von der StandardClick und StandardDoubleClick-Wert Bitwerte.</span><span class="sxs-lookup"><span data-stu-id="6b200-117">However, the control can call <xref:System.Windows.Forms.Control.OnClick%2A> or <xref:System.Windows.Forms.Control.OnDoubleClick%2A> directly regardless of the StandardClick and StandardDoubleClick bit values.</span></span> <span data-ttu-id="6b200-118">Weitere Informationen zum Steuerelement klicken Sie auf, und klicken Sie mit der Doppelklicken auf Verhalten, finden Sie unter der <xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType> und <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType> Themen.</span><span class="sxs-lookup"><span data-stu-id="6b200-118">For more information on control click and double click behaviors, see the <xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType> and <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType> topics.</span></span>  
  
 <span data-ttu-id="6b200-119">Wenn das UseTextForAccessibility Bit festgelegt ist und es ist ein Wert in des Steuerelements `Text` -Eigenschaft, wird der Wert dieses Steuerelements `Text` Eigenschaft bestimmt den Namen und die Tastenkombination des Steuerelements standardmäßigen Active Accessibility-Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="6b200-119">When the UseTextForAccessibility bit is set and there is a value in the control's `Text` property, the value of that control's `Text` property determines the control's default Active Accessibility name and shortcut key.</span></span> <span data-ttu-id="6b200-120">Andernfalls, den Text der vorangehenden <xref:System.Windows.Forms.Label> Steuerelement wird stattdessen verwendet.</span><span class="sxs-lookup"><span data-stu-id="6b200-120">Otherwise, the text of the preceding <xref:System.Windows.Forms.Label> control will be used instead.</span></span> <span data-ttu-id="6b200-121">Dieser Stil ist standardmäßig festgelegt.</span><span class="sxs-lookup"><span data-stu-id="6b200-121">This style is set by default.</span></span> <span data-ttu-id="6b200-122">Bestimmte integrierte Steuerelementtypen, z. B. <xref:System.Windows.Forms.TextBox> und <xref:System.Windows.Forms.ComboBox>, setzen Sie dieses Format zurück, damit die `Text` Eigenschaft dieser Steuerelemente wird nicht vom Active Accessibility verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="6b200-122">Certain built-in control types, such as <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.ComboBox>, reset this style so that the `Text` property of those controls will not be used by Active Accessibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b200-123">Das folgende Beispiel veranschaulicht die Verwendung von <xref:System.Windows.Forms.ControlStyles> mit der <xref:System.Windows.Forms.Control.StyleChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="6b200-123">The following example demonstrates a use of <xref:System.Windows.Forms.ControlStyles> with the <xref:System.Windows.Forms.Control.StyleChanged> event.</span></span>  
  
 [!code-cpp[Control_StyleChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_StyleChanged/CPP/control_stylechanged.cpp#1)]
 [!code-csharp[Control_StyleChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_StyleChanged/CS/control_stylechanged.cs#1)]
 [!code-vb[Control_StyleChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_StyleChanged/VB/control_stylechanged.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="6b200-124">Erben von einer standardmäßigen Windows Forms-Steuerelement, und Ändern der <see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /> oder <see cref="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" /> Bitwerte auf <see langword="true" /> kann unerwartetes Verhalten verursachen oder können wirken sich nicht auf, wenn das Steuerelement nicht unterstützt die <see cref="E:System.Windows.Forms.Control.Click" /> oder <see cref="E:System.Windows.Forms.Control.DoubleClick" /> Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="6b200-124">Inheriting from a standard Windows Forms control and changing the <see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /> or <see cref="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" /> bit values to <see langword="true" /> can cause unexpected behavior or can have no effect at all if the control does not support the <see cref="E:System.Windows.Forms.Control.Click" /> or <see cref="E:System.Windows.Forms.Control.DoubleClick" /> events.</span></span></para>
    </block>
    <altmember cref="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
    <altmember cref="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
  </Docs>
  <Members>
    <Member MemberName="AllPaintingInWmPaint">
      <MemberSignature Language="C#" Value="AllPaintingInWmPaint" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles AllPaintingInWmPaint = int32(8192)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" />
      <MemberSignature Language="VB.NET" Value="AllPaintingInWmPaint" />
      <MemberSignature Language="C++ CLI" Value="AllPaintingInWmPaint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>8192</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6b200-125">Wenn <see langword="true" />, ignoriert das Steuerelement die Fensternachricht WM_ERASEBKGND, um Flimmern zu verringern.</span><span class="sxs-lookup"><span data-stu-id="6b200-125">If <see langword="true" />, the control ignores the window message WM_ERASEBKGND to reduce flicker.</span></span> <span data-ttu-id="6b200-126">Dieses Format sollte nur angewendet werden, wenn das <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" />-Bit auf <see langword="true" /> festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="6b200-126">This style should only be applied if the <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> bit is set to <see langword="true" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="CacheText">
      <MemberSignature Language="C#" Value="CacheText" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles CacheText = int32(16384)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.CacheText" />
      <MemberSignature Language="VB.NET" Value="CacheText" />
      <MemberSignature Language="C++ CLI" Value="CacheText" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>16384</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6b200-127">Wenn <see langword="true" />, behält das Steuerelement eine Kopie des Texts bei, anstatt ihn bei Bedarf jeweils vom <see cref="P:System.Windows.Forms.Control.Handle" /> abzurufen.</span><span class="sxs-lookup"><span data-stu-id="6b200-127">If <see langword="true" />, the control keeps a copy of the text rather than getting it from the <see cref="P:System.Windows.Forms.Control.Handle" /> each time it is needed.</span></span> <span data-ttu-id="6b200-128">Dieses Format hat den Standardwert <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6b200-128">This style defaults to <see langword="false" />.</span></span> <span data-ttu-id="6b200-129">Dieses Verhalten verbessert die Leistung, macht es jedoch schwierig, den Text synchronisiert zu halten.</span><span class="sxs-lookup"><span data-stu-id="6b200-129">This behavior improves performance, but makes it difficult to keep the text synchronized.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ContainerControl">
      <MemberSignature Language="C#" Value="ContainerControl" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles ContainerControl = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.ContainerControl" />
      <MemberSignature Language="VB.NET" Value="ContainerControl" />
      <MemberSignature Language="C++ CLI" Value="ContainerControl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6b200-130">Wenn <see langword="true" />, ist das Steuerelement ein containerähnliches Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="6b200-130">If <see langword="true" />, the control is a container-like control.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffer">
      <MemberSignature Language="C#" Value="DoubleBuffer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles DoubleBuffer = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.DoubleBuffer" />
      <MemberSignature Language="VB.NET" Value="DoubleBuffer" />
      <MemberSignature Language="C++ CLI" Value="DoubleBuffer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6b200-131">Wenn <see langword="true" />, wird das Zeichnen in einem Puffer ausgeführt, und nachdem der Vorgang abgeschlossen ist, wird das Ergebnis auf dem Bildschirm ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="6b200-131">If <see langword="true" />, drawing is performed in a buffer, and after it completes, the result is output to the screen.</span></span> <span data-ttu-id="6b200-132">Doppelte Pufferung verhindert durch das Neuzeichnen des Steuerelements verursachtes Flimmern.</span><span class="sxs-lookup"><span data-stu-id="6b200-132">Double-buffering prevents flicker caused by the redrawing of the control.</span></span> <span data-ttu-id="6b200-133">Wenn Sie <see cref="F:System.Windows.Forms.ControlStyles.DoubleBuffer" /> auf <see langword="true" /> festlegen, sollten Sie auch <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> und <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> auf <see langword="true" /> festlegen.</span><span class="sxs-lookup"><span data-stu-id="6b200-133">If you set <see cref="F:System.Windows.Forms.ControlStyles.DoubleBuffer" /> to <see langword="true" />, you should also set <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> and <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> to <see langword="true" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="EnableNotifyMessage">
      <MemberSignature Language="C#" Value="EnableNotifyMessage" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles EnableNotifyMessage = int32(32768)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" />
      <MemberSignature Language="VB.NET" Value="EnableNotifyMessage" />
      <MemberSignature Language="C++ CLI" Value="EnableNotifyMessage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>32768</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6b200-134">Wenn <see langword="true" />, wird die <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" />-Methode für jede Nachricht an die <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /> des Steuerelements gesendet.</span><span class="sxs-lookup"><span data-stu-id="6b200-134">If <see langword="true" />, the <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /> method is called for every message sent to the control's <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />.</span></span> <span data-ttu-id="6b200-135">Dieses Format hat den Standardwert <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6b200-135">This style defaults to <see langword="false" />.</span></span> <span data-ttu-id="6b200-136"><see cref="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" /> funktioniert nicht unter teilweiser Vertrauenswürdigkeit.</span><span class="sxs-lookup"><span data-stu-id="6b200-136"><see cref="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" /> does not work in partial trust.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="FixedHeight">
      <MemberSignature Language="C#" Value="FixedHeight" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles FixedHeight = int32(64)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.FixedHeight" />
      <MemberSignature Language="VB.NET" Value="FixedHeight" />
      <MemberSignature Language="C++ CLI" Value="FixedHeight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6b200-137">Wenn <see langword="true" />, hat das Steuerelement eine feste Höhe, wenn es automatisch skaliert wird.</span><span class="sxs-lookup"><span data-stu-id="6b200-137">If <see langword="true" />, the control has a fixed height when auto-scaled.</span></span> <span data-ttu-id="6b200-138">Wenn z.B. ein Layoutvorgang versucht, das Steuerelement zur Anpassung an eine neue <see cref="T:System.Drawing.Font" /> neu zu skalieren, bleibt die <see cref="P:System.Windows.Forms.Control.Height" /> des Steuerelements unverändert.</span><span class="sxs-lookup"><span data-stu-id="6b200-138">For example, if a layout operation attempts to rescale the control to accommodate a new <see cref="T:System.Drawing.Font" />, the control's <see cref="P:System.Windows.Forms.Control.Height" /> remains unchanged.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="FixedWidth">
      <MemberSignature Language="C#" Value="FixedWidth" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles FixedWidth = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.FixedWidth" />
      <MemberSignature Language="VB.NET" Value="FixedWidth" />
      <MemberSignature Language="C++ CLI" Value="FixedWidth" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6b200-139">Wenn <see langword="true" />, hat das Steuerelement eine feste Breite, wenn es automatisch skaliert wird.</span><span class="sxs-lookup"><span data-stu-id="6b200-139">If <see langword="true" />, the control has a fixed width when auto-scaled.</span></span> <span data-ttu-id="6b200-140">Wenn z.B. ein Layoutvorgang versucht, das Steuerelement zur Anpassung an eine neue <see cref="T:System.Drawing.Font" /> neu zu skalieren, bleibt die <see cref="P:System.Windows.Forms.Control.Width" /> des Steuerelements unverändert.</span><span class="sxs-lookup"><span data-stu-id="6b200-140">For example, if a layout operation attempts to rescale the control to accommodate a new <see cref="T:System.Drawing.Font" />, the control's <see cref="P:System.Windows.Forms.Control.Width" /> remains unchanged.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Opaque">
      <MemberSignature Language="C#" Value="Opaque" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles Opaque = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.Opaque" />
      <MemberSignature Language="VB.NET" Value="Opaque" />
      <MemberSignature Language="C++ CLI" Value="Opaque" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6b200-141">Wenn <see langword="true" />, wird das Steuerelement nicht transparent und der Hintergrund gar nicht gezeichnet.</span><span class="sxs-lookup"><span data-stu-id="6b200-141">If <see langword="true" />, the control is drawn opaque and the background is not painted.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="OptimizedDoubleBuffer">
      <MemberSignature Language="C#" Value="OptimizedDoubleBuffer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles OptimizedDoubleBuffer = int32(131072)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer" />
      <MemberSignature Language="VB.NET" Value="OptimizedDoubleBuffer" />
      <MemberSignature Language="C++ CLI" Value="OptimizedDoubleBuffer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>131072</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6b200-142">Wenn <see langword="true" />, wird das Steuerelement zuerst in einen Puffer gezeichnet anstatt direkt auf den Bildschirm, weil so das Flimmern verringert werden kann.</span><span class="sxs-lookup"><span data-stu-id="6b200-142">If <see langword="true" />, the control is first drawn to a buffer rather than directly to the screen, which can reduce flicker.</span></span> <span data-ttu-id="6b200-143">Wenn Sie diese Eigenschaft auf <see langword="true" /> festlegen, sollten Sie auch <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> auf <see langword="true" /> festlegen.</span><span class="sxs-lookup"><span data-stu-id="6b200-143">If you set this property to <see langword="true" />, you should also set the <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> to <see langword="true" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ResizeRedraw">
      <MemberSignature Language="C#" Value="ResizeRedraw" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles ResizeRedraw = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.ResizeRedraw" />
      <MemberSignature Language="VB.NET" Value="ResizeRedraw" />
      <MemberSignature Language="C++ CLI" Value="ResizeRedraw" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6b200-144">Wenn <see langword="true" />, wird das Steuerelement neu gezeichnet, wenn seine Größe geändert wird.</span><span class="sxs-lookup"><span data-stu-id="6b200-144">If <see langword="true" />, the control is redrawn when it is resized.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Selectable">
      <MemberSignature Language="C#" Value="Selectable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles Selectable = int32(512)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.Selectable" />
      <MemberSignature Language="VB.NET" Value="Selectable" />
      <MemberSignature Language="C++ CLI" Value="Selectable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6b200-145">Wenn <see langword="true" />, kann das Steuerelement den Fokus erhalten.</span><span class="sxs-lookup"><span data-stu-id="6b200-145">If <see langword="true" />, the control can receive focus.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="StandardClick">
      <MemberSignature Language="C#" Value="StandardClick" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles StandardClick = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.StandardClick" />
      <MemberSignature Language="VB.NET" Value="StandardClick" />
      <MemberSignature Language="C++ CLI" Value="StandardClick" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6b200-146">Wenn <see langword="true" />, implementiert das Steuerelement das standardmäßige <see cref="E:System.Windows.Forms.Control.Click" />-Verhalten.</span><span class="sxs-lookup"><span data-stu-id="6b200-146">If <see langword="true" />, the control implements the standard <see cref="E:System.Windows.Forms.Control.Click" /> behavior.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="StandardDoubleClick">
      <MemberSignature Language="C#" Value="StandardDoubleClick" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles StandardDoubleClick = int32(4096)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" />
      <MemberSignature Language="VB.NET" Value="StandardDoubleClick" />
      <MemberSignature Language="C++ CLI" Value="StandardDoubleClick" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6b200-147">Wenn <see langword="true" />, implementiert das Steuerelement das standardmäßige <see cref="E:System.Windows.Forms.Control.DoubleClick" />-Verhalten.</span><span class="sxs-lookup"><span data-stu-id="6b200-147">If <see langword="true" />, the control implements the standard <see cref="E:System.Windows.Forms.Control.DoubleClick" /> behavior.</span></span> <span data-ttu-id="6b200-148">Dieses Format wird ignoriert, wenn das <see cref="F:System.Windows.Forms.ControlStyles.StandardClick" />-Bit nicht auf <see langword="true" /> festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="6b200-148">This style is ignored if the <see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /> bit is not set to <see langword="true" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SupportsTransparentBackColor">
      <MemberSignature Language="C#" Value="SupportsTransparentBackColor" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles SupportsTransparentBackColor = int32(2048)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.SupportsTransparentBackColor" />
      <MemberSignature Language="VB.NET" Value="SupportsTransparentBackColor" />
      <MemberSignature Language="C++ CLI" Value="SupportsTransparentBackColor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>2048</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6b200-149">Wenn <see langword="true" />, akzeptiert das Steuerelement eine <see cref="P:System.Windows.Forms.Control.BackColor" /> mit einer Alphakomponente, die kleiner als 255 ist, um Transparenz zu simulieren.</span><span class="sxs-lookup"><span data-stu-id="6b200-149">If <see langword="true" />, the control accepts a <see cref="P:System.Windows.Forms.Control.BackColor" /> with an alpha component of less than 255 to simulate transparency.</span></span> <span data-ttu-id="6b200-150">Transparenz wird nur simuliert, wenn das <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" />-Bit auf <see langword="true" /> festgelegt und das übergeordnete Steuerelement von <see cref="T:System.Windows.Forms.Control" /> abgeleitet wird.</span><span class="sxs-lookup"><span data-stu-id="6b200-150">Transparency will be simulated only if the <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> bit is set to <see langword="true" /> and the parent control is derived from <see cref="T:System.Windows.Forms.Control" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UserMouse">
      <MemberSignature Language="C#" Value="UserMouse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles UserMouse = int32(1024)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.UserMouse" />
      <MemberSignature Language="VB.NET" Value="UserMouse" />
      <MemberSignature Language="C++ CLI" Value="UserMouse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>1024</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6b200-151">Wenn <see langword="true" />, führt das Steuerelement seine eigene Mausverarbeitung durch, und Mausereignisse werden nicht vom Betriebssystem behandelt.</span><span class="sxs-lookup"><span data-stu-id="6b200-151">If <see langword="true" />, the control does its own mouse processing, and mouse events are not handled by the operating system.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UserPaint">
      <MemberSignature Language="C#" Value="UserPaint" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles UserPaint = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.UserPaint" />
      <MemberSignature Language="VB.NET" Value="UserPaint" />
      <MemberSignature Language="C++ CLI" Value="UserPaint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6b200-152">Wenn <see langword="true" />, zeichnet sich das Steuerelement selbst, anstatt vom Betriebssystem gezeichnet zu werden.</span><span class="sxs-lookup"><span data-stu-id="6b200-152">If <see langword="true" />, the control paints itself rather than the operating system doing so.</span></span> <span data-ttu-id="6b200-153">Wenn <see langword="false" />, wird das <see cref="E:System.Windows.Forms.Control.Paint" />-Ereignis nicht ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="6b200-153">If <see langword="false" />, the <see cref="E:System.Windows.Forms.Control.Paint" /> event is not raised.</span></span> <span data-ttu-id="6b200-154">Dieses Format gilt nur für Klassen, die von <see cref="T:System.Windows.Forms.Control" /> abgeleitet sind.</span><span class="sxs-lookup"><span data-stu-id="6b200-154">This style only applies to classes derived from <see cref="T:System.Windows.Forms.Control" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UseTextForAccessibility">
      <MemberSignature Language="C#" Value="UseTextForAccessibility" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles UseTextForAccessibility = int32(262144)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.UseTextForAccessibility" />
      <MemberSignature Language="VB.NET" Value="UseTextForAccessibility" />
      <MemberSignature Language="C++ CLI" Value="UseTextForAccessibility" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>262144</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6b200-155">Gibt an, dass der Wert der <c>Text</c>-Eigenschaft des Steuerelements, sofern festgelegt, den standardmäßigen Active Accessibility-Namen und die Tastenkombination des Steuerelements bestimmt.</span><span class="sxs-lookup"><span data-stu-id="6b200-155">Specifies that the value of the control's <c>Text</c> property, if set, determines the control's default Active Accessibility name and shortcut key.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>