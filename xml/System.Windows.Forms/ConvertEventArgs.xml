<Type Name="ConvertEventArgs" FullName="System.Windows.Forms.ConvertEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="25a2931538dc37fe154cd6fa85308f4d9544b139" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82491534" /></Metadata><TypeSignature Language="C#" Value="public class ConvertEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConvertEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ConvertEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ConvertEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConvertEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ConvertEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Daten für das <see cref="E:System.Windows.Forms.Binding.Format" />-Ereignis und das <see cref="E:System.Windows.Forms.Binding.Parse" />-Ereignis bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Windows.Forms.ConvertEventArgs> wird verwendet, um Werte zu formatieren und zu formatieren, die von einem Windows Forms Steuerelement angezeigt werden, das an Daten über ein <xref:System.Windows.Forms.Binding> Objekt gebunden ist. Das <xref:System.Windows.Forms.Binding.Format>-Ereignis tritt auf, wenn eine Steuerelement Eigenschaft an einen Wert gebunden wird und das <xref:System.Windows.Forms.Binding.Parse> Ereignis auftritt, wenn sich der gebundene Wert ändert.  
  
 Mit den <xref:System.Windows.Forms.Binding.Format>-und <xref:System.Windows.Forms.Binding.Parse> Ereignissen können Sie benutzerdefinierte Formate zum Anzeigen von Daten erstellen. Wenn die Daten in einer Tabelle beispielsweise vom Typ <xref:System.Decimal>sind, können Sie angeben, dass die Daten im lokalen Währungs Format angezeigt werden sollen, indem Sie die <xref:System.Windows.Forms.ConvertEventArgs.Value%2A>-Eigenschaft der <xref:System.Windows.Forms.ConvertEventArgs> auf den formatierten Wert im <xref:System.Windows.Forms.Binding.Format>-Ereignis festlegen. Sie müssen daher den angezeigten Wert im <xref:System.Windows.Forms.Binding.Parse> Ereignis nicht formatieren.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine <xref:System.Windows.Forms.Binding>erstellt, dem <xref:System.Windows.Forms.Binding.Parse>-und dem <xref:System.Windows.Forms.Binding.Format>-Ereignis ein <xref:System.Windows.Forms.ConvertEventHandler> Delegat hinzugefügt und die <xref:System.Windows.Forms.Control.DataBindings%2A>-Eigenschaft verwendet, um den <xref:System.Windows.Forms.Binding> dem <xref:System.Windows.Forms.BindingsCollection> eines <xref:System.Windows.Forms.TextBox> Steuer Elements hinzuzufügen. Der `DecimalToCurrencyString` Ereignis Delegat, der dem <xref:System.Windows.Forms.Binding.Format>-Ereignis hinzugefügt wird, verwendet die <xref:System.Decimal.ToString%2A>-Methode, um den gebundenen Wert (einen <xref:System.Decimal> Typ) als Währung zu formatieren. Der `CurrencyStringToDecimal` Ereignis Delegat, der dem <xref:System.Windows.Forms.Binding.Parse>-Ereignis hinzugefügt wird, konvertiert den Wert, der vom-Steuerelement angezeigt wird, zurück in den <xref:System.Decimal>-Typ.  
  
 [!code-cpp[Classic ConvertEventArgs Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ConvertEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic ConvertEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ConvertEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Binding" />
    <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
    <altmember cref="T:System.Windows.Forms.BindingsCollection" />
    <altmember cref="P:System.Windows.Forms.Control.DataBindings" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConvertEventArgs (object value, Type desiredType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value, class System.Type desiredType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ConvertEventArgs.#ctor(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Object, desiredType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConvertEventArgs(System::Object ^ value, Type ^ desiredType);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ConvertEventArgs : obj * Type -&gt; System.Windows.Forms.ConvertEventArgs" Usage="new System.Windows.Forms.ConvertEventArgs (value, desiredType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="desiredType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Object" />, das den Wert der aktuellen Eigenschaft enthält.</param>
        <param name="desiredType">Der <see cref="T:System.Type" /> des Werts.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.ConvertEventArgs" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredType">
      <MemberSignature Language="C#" Value="public Type DesiredType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DesiredType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ConvertEventArgs.DesiredType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesiredType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DesiredType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesiredType : Type" Usage="System.Windows.Forms.ConvertEventArgs.DesiredType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Datentyp des gewünschten Werts ab.</summary>
        <value>Der <see cref="T:System.Type" /> des gewünschten Werts.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A>-Eigenschaft ermöglicht es Ihnen, den Typ der Eigenschaft zu überprüfen, in die der Wert konvertiert wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A>-Eigenschaft verwendet, um zu bestimmen, ob die Konvertierung eines Typs in einen anderen Vorgang fortgesetzt werden kann. Die `DecimalToCurrencyString`-Methode testet, ob die <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> eine Zeichenfolge ist. Andernfalls beendet der Code die-Methode. Ebenso testet die `CurrencyStringToDecimal`-Methode, ob die <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> ein <xref:System.Decimal>ist, und wird beendet, wenn Sie nicht `true`ist.  
  
 [!code-cpp[Classic ConvertEventArgs.DesiredType Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ConvertEventArgs.DesiredType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ConvertEventArgs.DesiredType Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ConvertEventArgs.DesiredType Example/CS/source.cs#1)]
 [!code-vb[Classic ConvertEventArgs.DesiredType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ConvertEventArgs.DesiredType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ConvertEventArgs.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Windows.Forms.ConvertEventArgs.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert von <see cref="T:System.Windows.Forms.ConvertEventArgs" /> ab oder legt ihn fest.</summary>
        <value>Der Wert des <see cref="T:System.Windows.Forms.ConvertEventArgs" />-Objekts.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert, der in der <xref:System.Windows.Forms.ConvertEventArgs.Value%2A>-Eigenschaft enthalten ist, hängt vom Ereignis ab, in dem die <xref:System.Windows.Forms.ConvertEventArgs> zurückgegeben wird. Der <xref:System.Windows.Forms.ConvertEventArgs> kann entweder im <xref:System.Windows.Forms.Binding.Format> Ereignis oder <xref:System.Windows.Forms.Binding.Parse> Ereignis zurückgegeben werden.  
  
 Wenn die <xref:System.Windows.Forms.ConvertEventArgs> im <xref:System.Windows.Forms.Binding.Format>-Ereignis zurückgegeben wird, enthält die <xref:System.Windows.Forms.ConvertEventArgs.Value%2A>-Eigenschaft den unformatierten-Eigenschafts Wert der Datenquelle. Innerhalb des <xref:System.Windows.Forms.Binding.Format> Ereignisses können Sie den Eigenschafts Wert lesen, den Wert formatieren und die <xref:System.Windows.Forms.ConvertEventArgs.Value%2A>-Eigenschaft auf den neuen (formatierten) Wert zurücksetzen, wodurch der im Daten gebundenen Steuerelement angezeigte Wert festgelegt wird.  
  
 Wenn die <xref:System.Windows.Forms.ConvertEventArgs> im <xref:System.Windows.Forms.Binding.Parse>-Ereignis zurückgegeben wird, enthält die-Eigenschaft den benutzerdefinierten Wert des Daten gebundenen Steuer Elements. Innerhalb des <xref:System.Windows.Forms.Binding.Parse> Ereignisses müssen Sie den formatierten Wert lesen, analysieren und wieder in den gleichen Datentyp wie die Datenquelle konvertieren. Anschließend können Sie die <xref:System.Windows.Forms.ConvertEventArgs.Value%2A>-Eigenschaft auf den unformatierten Wert zurücksetzen und so den Wert der Datenquelle festlegen. Überprüfen Sie den Wert der <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A>-Eigenschaft, um den Typ der Datenquelle zu ermitteln.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine <xref:System.Windows.Forms.Binding>erstellt, dem <xref:System.Windows.Forms.Binding.Parse>-und dem <xref:System.Windows.Forms.Binding.Format>-Ereignis ein <xref:System.Windows.Forms.ConvertEventHandler> Delegat hinzugefügt und die <xref:System.Windows.Forms.Control.DataBindings%2A>-Eigenschaft verwendet, um den <xref:System.Windows.Forms.Binding> dem <xref:System.Windows.Forms.BindingsCollection> eines <xref:System.Windows.Forms.TextBox> Steuer Elements hinzuzufügen. Der `DecimalToCurrencyString` Ereignis Delegat, der dem <xref:System.Windows.Forms.Binding.Format>-Ereignis hinzugefügt wird, verwendet die <xref:System.Decimal.ToString%2A>-Methode, um den gebundenen Wert (einen <xref:System.Decimal> Typ) als Währung zu formatieren. Der `CurrencyStringToDecimal` Ereignis Delegat, der dem <xref:System.Windows.Forms.Binding.Parse>-Ereignis hinzugefügt wird, konvertiert den Wert, der vom-Steuerelement angezeigt wird, zurück in den <xref:System.Decimal>-Typ.  
  
 [!code-cpp[Classic ConvertEventArgs Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ConvertEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic ConvertEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ConvertEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Binding" />
      </Docs>
    </Member>
  </Members>
</Type>
