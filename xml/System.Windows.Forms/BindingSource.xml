<Type Name="BindingSource" FullName="System.Windows.Forms.BindingSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="37807cf706cb60b2fcaf0a83cdb1e84a812e7777" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BindingSource : System.ComponentModel.Component, System.Collections.IList, System.ComponentModel.IBindingList, System.ComponentModel.IBindingListView, System.ComponentModel.ICancelAddNew, System.ComponentModel.ISupportInitialize, System.ComponentModel.ISupportInitializeNotification, System.ComponentModel.ITypedList, System.Windows.Forms.ICurrencyManagerProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingSource extends System.ComponentModel.Component implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.ComponentModel.IBindingList, class System.ComponentModel.IBindingListView, class System.ComponentModel.ICancelAddNew, class System.ComponentModel.ISupportInitialize, class System.ComponentModel.ISupportInitializeNotification, class System.ComponentModel.ITypedList, class System.Windows.Forms.ICurrencyManagerProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.BindingSource" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingSource&#xA;Inherits Component&#xA;Implements IBindingList, IBindingListView, ICancelAddNew, ICurrencyManagerProvider, IList, ISupportInitialize, ISupportInitializeNotification, ITypedList" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingSource : System::ComponentModel::Component, System::Collections::IList, System::ComponentModel::IBindingList, System::ComponentModel::IBindingListView, System::ComponentModel::ICancelAddNew, System::ComponentModel::ISupportInitialize, System::ComponentModel::ISupportInitializeNotification, System::ComponentModel::ITypedList, System::Windows::Forms::ICurrencyManagerProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IBindingList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IBindingListView</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ICancelAddNew</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitializeNotification</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ITypedList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.ICurrencyManagerProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ComplexBindingProperties("DataSource", "DataMember")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("CurrentChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("DataSource")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.BindingSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a7c82-101">Encapsulates the data source for a form.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a7c82-101">Encapsulates the data source for a form.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-102">Die <xref:System.Windows.Forms.BindingSource> Komponente dient vielen Zwecken.</span><span class="sxs-lookup"><span data-stu-id="a7c82-102">The <xref:System.Windows.Forms.BindingSource> component serves many purposes.</span></span> <span data-ttu-id="a7c82-103">Zunächst wird die Binden von Steuerelementen in einem Formular an Daten vereinfacht, indem währungsverwaltung, änderungsbenachrichtigung und andere Dienste zwischen Windows Forms-Steuerelemente und Datenquellen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-103">First, it simplifies binding controls on a form to data by providing currency management, change notification, and other services between Windows Forms controls and data sources.</span></span> <span data-ttu-id="a7c82-104">Dies erfolgt durch Anfügen der <xref:System.Windows.Forms.BindingSource> -Komponente an die Datenquelle mit dem <xref:System.Windows.Forms.BindingSource.DataSource%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a7c82-104">This is accomplished by attaching the <xref:System.Windows.Forms.BindingSource> component to your data source using the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property.</span></span> <span data-ttu-id="a7c82-105">Bei komplexen Bindungsszenarios Sie optional Festlegen der <xref:System.Windows.Forms.BindingSource.DataMember%2A> Eigenschaft, um eine bestimmte Spalte oder Liste in der Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="a7c82-105">For complex binding scenarios you can optionally set the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property to a specific column or list in the data source.</span></span> <span data-ttu-id="a7c82-106">Anschließend binden Sie Steuerelemente an die <xref:System.Windows.Forms.BindingSource>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-106">You then bind controls to the <xref:System.Windows.Forms.BindingSource>.</span></span> <span data-ttu-id="a7c82-107">Alle weiteren Interaktionen mit den Daten erfolgt durch Aufrufe der <xref:System.Windows.Forms.BindingSource> Komponente.</span><span class="sxs-lookup"><span data-stu-id="a7c82-107">All further interaction with the data is accomplished with calls to the <xref:System.Windows.Forms.BindingSource> component.</span></span> <span data-ttu-id="a7c82-108">Beispiele, wie sich die <xref:System.Windows.Forms.BindingSource> des Bindungsvorgangs vereinfachen können, finden Sie unter [Vorgehensweise: Binden von Windows Forms-Steuerelementen an DBNull-Datenbankwerte](~/docs/framework/winforms/controls/how-to-bind-windows-forms-controls-to-dbnull-database-values.md) und [wie: Behandeln von Fehlern und Ausnahmen, auftreten, mit der Datenbindung](~/docs/framework/winforms/controls/how-to-handle-errors-and-exceptions-that-occur-with-databinding.md).</span><span class="sxs-lookup"><span data-stu-id="a7c82-108">For examples on how the <xref:System.Windows.Forms.BindingSource> can simplify the binding process, see [How to: Bind Windows Forms Controls to DBNull Database Values](~/docs/framework/winforms/controls/how-to-bind-windows-forms-controls-to-dbnull-database-values.md) and [How to: Handle Errors and Exceptions that Occur with Databinding](~/docs/framework/winforms/controls/how-to-handle-errors-and-exceptions-that-occur-with-databinding.md).</span></span> <span data-ttu-id="a7c82-109">Navigation und Aktualisierung der Datenquelle erfolgt durch Methoden wie z. B. <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveLast%2A>, und <xref:System.Windows.Forms.BindingSource.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-109">Navigation and updating of the data source is accomplished through methods such as <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveLast%2A>, and <xref:System.Windows.Forms.BindingSource.Remove%2A>.</span></span> <span data-ttu-id="a7c82-110">Werden Vorgänge wie das Sortieren und Filtern von behandelt die <xref:System.Windows.Forms.BindingSource.Sort%2A> und <xref:System.Windows.Forms.BindingSource.Filter%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="a7c82-110">Operations such as sorting and filtering are handled through the <xref:System.Windows.Forms.BindingSource.Sort%2A> and <xref:System.Windows.Forms.BindingSource.Filter%2A> properties.</span></span> <span data-ttu-id="a7c82-111">Weitere Informationen zum Sortieren und Filtern mit der <xref:System.Windows.Forms.BindingSource>, finden Sie unter [wie: Sortieren und Filtern von ADO.NET-Daten mit der BindingSource-Komponente in Windows Forms](~/docs/framework/winforms/controls/sort-and-filter-ado-net-data-with-wf-bindingsource-component.md).</span><span class="sxs-lookup"><span data-stu-id="a7c82-111">For more information on using sorting and filtering with the <xref:System.Windows.Forms.BindingSource>, see [How to: Sort and Filter ADO.NET Data with the Windows Forms BindingSource Component](~/docs/framework/winforms/controls/sort-and-filter-ado-net-data-with-wf-bindingsource-component.md).</span></span>  
  
 <span data-ttu-id="a7c82-112">Darüber hinaus die <xref:System.Windows.Forms.BindingSource> Komponente als Quelle für eine stark typisierte Daten fungieren kann.</span><span class="sxs-lookup"><span data-stu-id="a7c82-112">In addition, the <xref:System.Windows.Forms.BindingSource> component can act as a strongly typed data source.</span></span> <span data-ttu-id="a7c82-113">Der Typ der zugrunde liegenden Datenquelle wird in der Regel über einen der folgenden Mechanismen wurden behoben:</span><span class="sxs-lookup"><span data-stu-id="a7c82-113">Typically the type of the underlying data source is fixed through one of the following mechanisms:</span></span>  
  
-   <span data-ttu-id="a7c82-114">Verwenden der <xref:System.Windows.Forms.BindingSource.Add%2A> Methode zum Hinzufügen eines Elements auf der <xref:System.Windows.Forms.BindingSource> Komponente.</span><span class="sxs-lookup"><span data-stu-id="a7c82-114">Use the <xref:System.Windows.Forms.BindingSource.Add%2A> method to add an item to the <xref:System.Windows.Forms.BindingSource> component.</span></span>  
  
-   <span data-ttu-id="a7c82-115">Legen Sie die <xref:System.Windows.Forms.BindingSource.DataSource%2A> Eigenschaft, um eine Liste, einzelnes Objekt oder Typ.</span><span class="sxs-lookup"><span data-stu-id="a7c82-115">Set the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property to a list, single object, or type.</span></span>  
  
 <span data-ttu-id="a7c82-116">Beide Mechanismen erstellen eine stark typisierte Liste.</span><span class="sxs-lookup"><span data-stu-id="a7c82-116">Both of these mechanisms create a strongly-typed list.</span></span> <span data-ttu-id="a7c82-117">Weitere Informationen zum Verwenden der <xref:System.Windows.Forms.BindingSource> zum Binden an einen Typ finden Sie unter [Vorgehensweise: Binden eines Windows Forms-Steuerelements an einen Typ](~/docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-type.md).</span><span class="sxs-lookup"><span data-stu-id="a7c82-117">For more information on how to use the <xref:System.Windows.Forms.BindingSource> to bind to a type, see [How to: Bind a Windows Forms Control to a Type](~/docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-type.md).</span></span> <span data-ttu-id="a7c82-118">Sie können auch die <xref:System.Windows.Forms.BindingSource> , die Steuerelemente an ein Factoryobjekt binden.</span><span class="sxs-lookup"><span data-stu-id="a7c82-118">You can also use the <xref:System.Windows.Forms.BindingSource> to bind your controls to a factory object.</span></span> <span data-ttu-id="a7c82-119">Weitere Informationen hierzu finden Sie unter [Vorgehensweise: Binden eines Windows Forms-Steuerelements an ein Factoryobjekt](~/docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-factory-object.md).</span><span class="sxs-lookup"><span data-stu-id="a7c82-119">For more information on how to do this, see [How to: Bind a Windows Forms Control to a Factory Object](~/docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-factory-object.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7c82-120">Da eine <xref:System.Windows.Forms.BindingSource> Handles sowohl einfache und komplexe Datenquellen Terminologie ist problematisch.</span><span class="sxs-lookup"><span data-stu-id="a7c82-120">Because a <xref:System.Windows.Forms.BindingSource> handles both simple and complex data sources, terminology is problematic.</span></span> <span data-ttu-id="a7c82-121">In dieser Klassendokumentation der Begriff *Liste* bezieht sich auf einer Datensammlung innerhalb der gehosteten Datenquelle und *Element* ein einzelnes Element kennzeichnet.</span><span class="sxs-lookup"><span data-stu-id="a7c82-121">Within this class documentation, the term *list* refers to a data collection within the hosted data source, and *item* denotes a single element.</span></span> <span data-ttu-id="a7c82-122">Wenn Abstimmung der Funktionalität komplexen Datenquellen zugeordnet, die entsprechenden Begriffe *Tabelle* und *Zeile* verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a7c82-122">When discussing functionality associated with complex data sources, the equivalent terms *table* and *row* are used.</span></span>  
  
 <span data-ttu-id="a7c82-123"><xref:System.Windows.Forms.BindingSource> stellt Member bereit, für den Zugriff auf die zugrunde liegenden Daten.</span><span class="sxs-lookup"><span data-stu-id="a7c82-123"><xref:System.Windows.Forms.BindingSource> provides members for accessing the underlying data.</span></span> <span data-ttu-id="a7c82-124">Das aktuelle Element abgerufen werden kann, über die <xref:System.Windows.Forms.BindingSource.Current%2A> -Eigenschaft und die gesamte Liste kann über abgerufen werden die <xref:System.Windows.Forms.BindingSource.List%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a7c82-124">The current item can be retrieved through the <xref:System.Windows.Forms.BindingSource.Current%2A> property, and the entire list can be retrieved through the <xref:System.Windows.Forms.BindingSource.List%2A> property.</span></span> <span data-ttu-id="a7c82-125">Bearbeitungsvorgänge werden unterstützt, auf das aktuelle Element über <xref:System.Windows.Forms.BindingSource.Current%2A> und <xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A>, <xref:System.Windows.Forms.BindingSource.EndEdit%2A>, <xref:System.Windows.Forms.BindingSource.CancelEdit%2A> und <xref:System.Windows.Forms.BindingSource.Add%2A> und <xref:System.Windows.Forms.BindingSource.AddNew%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="a7c82-125">Editing operations are supported on the current item through <xref:System.Windows.Forms.BindingSource.Current%2A> and the <xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A>, <xref:System.Windows.Forms.BindingSource.EndEdit%2A>, <xref:System.Windows.Forms.BindingSource.CancelEdit%2A> and <xref:System.Windows.Forms.BindingSource.Add%2A> and <xref:System.Windows.Forms.BindingSource.AddNew%2A> methods.</span></span> <span data-ttu-id="a7c82-126">Obwohl währungsverwaltung automatisch für alle zugrunde liegenden Datenquellentypen behandelt wird, stellt diese Klasse eine Anzahl von Ereignissen, wie z. B. <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> und <xref:System.Windows.Forms.BindingSource.DataSourceChanged>, mit denen für die Anpassung.</span><span class="sxs-lookup"><span data-stu-id="a7c82-126">Although currency management is handled automatically for all underlying data source types, this class exposes a number of events, such as <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> and <xref:System.Windows.Forms.BindingSource.DataSourceChanged>, that allow for customization.</span></span>  
  
 <span data-ttu-id="a7c82-127">Datenquellen, die gebunden sind eine <xref:System.Windows.Forms.BindingSource> Komponente auch navigiert und verwaltet werden kann mit der <xref:System.Windows.Forms.BindingNavigator> Klasse, die eine Videorecorder-ähnliche Benutzeroberfläche (UI) für die Navigation in Elemente in einer Liste bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="a7c82-127">Data sources that are bound to a <xref:System.Windows.Forms.BindingSource> component can also be navigated and managed with the <xref:System.Windows.Forms.BindingNavigator> class, which provides a VCR-like user interface (UI) for navigating items within a list.</span></span> <span data-ttu-id="a7c82-128">Obwohl <xref:System.Windows.Forms.BindingNavigator> gebunden werden kann für jede Datenquelle, es wurde entworfen, um integriert einen <xref:System.Windows.Forms.BindingSource> -Komponente über seine <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a7c82-128">Although <xref:System.Windows.Forms.BindingNavigator> can be bound to any data source, it was designed to integrate with a <xref:System.Windows.Forms.BindingSource> component through its <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="a7c82-129">Die Standardeigenschaft für die <xref:System.Windows.Forms.BindingSource> Klasse ist <xref:System.Windows.Forms.BindingSource.DataSource%2A>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-129">The default property for the <xref:System.Windows.Forms.BindingSource> class is <xref:System.Windows.Forms.BindingSource.DataSource%2A>.</span></span> <span data-ttu-id="a7c82-130">Das Standardereignis ist <xref:System.Windows.Forms.BindingSource.CurrentChanged>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-130">The default event is <xref:System.Windows.Forms.BindingSource.CurrentChanged>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="a7c82-131">Viele der Elemente der <xref:System.Windows.Forms.BindingSource> Klasse ausgeführt werden, auf die zugrunde liegende Liste dargestellt werden, indem Sie die <xref:System.Windows.Forms.BindingSource.List%2A> Eigenschaft, und verweisen Sie einfach den Vorgang auf die zugrunde liegende Liste.</span><span class="sxs-lookup"><span data-stu-id="a7c82-131">Many of the members of the <xref:System.Windows.Forms.BindingSource> class operate on the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property and simply refer their operation to the underlying list.</span></span> <span data-ttu-id="a7c82-132">Aus diesem Grund, dass bei der <xref:System.Windows.Forms.BindingSource> gebunden ist, um eine benutzerdefinierte Implementierung von <xref:System.Collections.IList>, das genaue Verhalten dieser Member unterscheidet sich vom Verhalten in der Klassendokumentation beschrieben.</span><span class="sxs-lookup"><span data-stu-id="a7c82-132">Therefore, when the <xref:System.Windows.Forms.BindingSource> is bound to a custom implementation of <xref:System.Collections.IList>, the exact behavior of these members may differ from the behavior described in the class documentation.</span></span> <span data-ttu-id="a7c82-133">Z. B. die <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> Methodenaufrufe <xref:System.Collections.IList.RemoveAt%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-133">For example, the <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> method calls <xref:System.Collections.IList.RemoveAt%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a7c82-134">Die <xref:System.Windows.Forms.BindingSource> Dokumentation wird beschrieben, die <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> Methode Voraussetzung ist, die die <xref:System.Collections.IList.RemoveAt%2A> Methode für das zugrunde liegende <xref:System.Collections.IList> ordnungsgemäß implementiert wird.</span><span class="sxs-lookup"><span data-stu-id="a7c82-134">The <xref:System.Windows.Forms.BindingSource> documentation describes the <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> method with the understanding that the <xref:System.Collections.IList.RemoveAt%2A> method for the underlying <xref:System.Collections.IList> is correctly implemented.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c82-135">Im folgenden Codebeispiel wird veranschaulicht, eine <xref:System.Windows.Forms.ListBox> gebunden werden, um eine <xref:System.Windows.Forms.BindingSource>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-135">The following code example demonstrates a <xref:System.Windows.Forms.ListBox> bound to a <xref:System.Windows.Forms.BindingSource>.</span></span> <span data-ttu-id="a7c82-136">Die <xref:System.Windows.Forms.BindingSource> gebunden ist, um eine <xref:System.ComponentModel.BindingList%601> , die eine Liste von Schriftarten enthält.</span><span class="sxs-lookup"><span data-stu-id="a7c82-136">The <xref:System.Windows.Forms.BindingSource> is bound to a <xref:System.ComponentModel.BindingList%601> that contains a list of fonts.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceAndBindingListOfT#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/CS/Form1.cs#0)]
 [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/VB/Form1.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.BindingSource" />
    <altmember cref="T:System.Windows.Forms.BindingNavigator" />
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.CurrencyManager" />
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.ComponentModel.IBindingList" />
    <altmember cref="T:System.ComponentModel.IEditableObject" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-137">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-137">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-138">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class to the default property values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-138">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class to the default property values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-139">Die folgende Tabelle zeigt die <xref:System.Windows.Forms.BindingSource> Eigenschaftswerte, die von diesem Konstruktor initialisiert.</span><span class="sxs-lookup"><span data-stu-id="a7c82-139">The following table shows the default <xref:System.Windows.Forms.BindingSource> property values initialized by this constructor.</span></span>  
  
|<span data-ttu-id="a7c82-140">Eigenschaft</span><span class="sxs-lookup"><span data-stu-id="a7c82-140">Property</span></span>|<span data-ttu-id="a7c82-141">Standardwert</span><span class="sxs-lookup"><span data-stu-id="a7c82-141">Default value</span></span>|  
|--------------|-------------------|  
|<xref:System.Windows.Forms.BindingSource.DataSource%2A>|`null`|  
|<xref:System.Windows.Forms.BindingSource.DataMember%2A>|<xref:System.String.Empty>|  
|<xref:System.Windows.Forms.BindingSource.Sort%2A>|`null`|  
|<xref:System.Windows.Forms.BindingSource.Filter%2A>|`null`|  
|<xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A>|`true`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="P:System.Windows.Forms.BindingSource.DataMember" />
        <altmember cref="T:System.Windows.Forms.CurrencyManager" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingSource (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingSource(System::ComponentModel::IContainer ^ container);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="a7c82-142">The <see cref="T:System.ComponentModel.IContainer" /> to add the current <see cref="T:System.Windows.Forms.BindingSource" /> to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-142">The <see cref="T:System.ComponentModel.IContainer" /> to add the current <see cref="T:System.Windows.Forms.BindingSource" /> to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-143">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class and adds the <see cref="T:System.Windows.Forms.BindingSource" /> to the specified container.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-143">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class and adds the <see cref="T:System.Windows.Forms.BindingSource" /> to the specified container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-144">Dieser Konstruktor wird der Standardkonstruktor aufgerufen, und fügt dann das aktuelle <xref:System.Windows.Forms.BindingSource> auf den angegebenen Container.</span><span class="sxs-lookup"><span data-stu-id="a7c82-144">This constructor calls the default constructor, and then adds the current <xref:System.Windows.Forms.BindingSource> to the specified container.</span></span> <span data-ttu-id="a7c82-145">Es wird nicht in der Regel vom Lösungsprogrammierer, sondern vom Autor während der Entwurfszeit-Umgebungen verwendet.</span><span class="sxs-lookup"><span data-stu-id="a7c82-145">It is not typically used by the solutions programmer, but instead by authors of design-time environments.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingSource (object dataSource, string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object dataSource, string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.#ctor(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataSource As Object, dataMember As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingSource(System::Object ^ dataSource, System::String ^ dataMember);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">
          <span data-ttu-id="a7c82-146">The data source for the <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-146">The data source for the <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </param>
        <param name="dataMember">
          <span data-ttu-id="a7c82-147">The specific column or list name within the data source to bind to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-147">The specific column or list name within the data source to bind to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-148">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class with the specified data source and data member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-148">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingSource" /> class with the specified data source and data member.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a7c82-149">An <see cref="T:System.Object" /> to be added to the internal list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-149">An <see cref="T:System.Object" /> to be added to the internal list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-150">Adds an existing item to the internal list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-150">Adds an existing item to the internal list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a7c82-151">The zero-based index at which <paramref name="value" /> was added to the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-151">The zero-based index at which <paramref name="value" /> was added to the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-152">Die <xref:System.Windows.Forms.BindingSource.Add%2A> Methode leitet den Aufruf an der zugrunde liegende Liste `Add` Methode.</span><span class="sxs-lookup"><span data-stu-id="a7c82-152">The <xref:System.Windows.Forms.BindingSource.Add%2A> method refers the call to the underlying list's `Add` method.</span></span>  
  
 <span data-ttu-id="a7c82-153">Die interne Liste muss homogene Typen enthalten.</span><span class="sxs-lookup"><span data-stu-id="a7c82-153">The internal list must contain homogenous types.</span></span> <span data-ttu-id="a7c82-154">Wenn die <xref:System.Windows.Forms.BindingSource.DataSource%2A> Eigenschaft wurde nicht festgelegt wurde, und klicken Sie dann das erste Objekt, das der Liste hinzugefügt, definiert den Typ der Liste.</span><span class="sxs-lookup"><span data-stu-id="a7c82-154">If the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property has not already been set, then the first object added to the list defines the type for the list.</span></span>  
  
 <span data-ttu-id="a7c82-155">Diese Methode löst die <xref:System.Windows.Forms.BindingSource.ListChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a7c82-155">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c82-156">Im folgenden Codebeispiel wird die Verwendung der <xref:System.Windows.Forms.BindingSource.Add%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a7c82-156">The following code example how to use the <xref:System.Windows.Forms.BindingSource.Add%2A> method.</span></span> <span data-ttu-id="a7c82-157">Um dieses Beispiel auszuführen, fügen Sie den Code in ein Windows Form, und rufen die `PopulateBindingSourceWithFonts` Methode aus den Konstruktor des Formulars.</span><span class="sxs-lookup"><span data-stu-id="a7c82-157">To run this example, paste the code into a Windows Form, and call the `PopulateBindingSourceWithFonts` method from the form's constructor.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a7c82-158">
            <paramref name="value" /> differs in type from the existing items in the underlying list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-158">
              <paramref name="value" /> differs in type from the existing items in the underlying list.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Remove(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="AddingNew">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AddingNewEventHandler AddingNew;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AddingNewEventHandler AddingNew" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.AddingNew" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AddingNew As AddingNewEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AddingNewEventHandler ^ AddingNew;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AddingNewEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-159">Occurs before an item is added to the underlying list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-159">Occurs before an item is added to the underlying list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-160">Die <xref:System.Windows.Forms.BindingSource.AddingNew> Ereignis tritt auf, bevor ein neues Objekt, auf die zugrunde liegende Liste dargestellt hinzugefügt wird durch die <xref:System.Windows.Forms.BindingSource.List%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a7c82-160">The <xref:System.Windows.Forms.BindingSource.AddingNew> event occurs before a new object is added to the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property.</span></span> <span data-ttu-id="a7c82-161">Dieses Ereignis wird ausgelöst, nachdem die <xref:System.Windows.Forms.BindingSource.AddNew%2A> Methode wird aufgerufen, aber bevor das neue Element erstellt und der zugrunde liegenden Liste hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="a7c82-161">This event is fired after the <xref:System.Windows.Forms.BindingSource.AddNew%2A> method is called, but before the new item is created and added to the underlying list.</span></span> <span data-ttu-id="a7c82-162">Durch die Behandlung dieses Ereignisses an, die Programmierer kann benutzerdefinierte Elementvorlagen erstellen und angeben Einfügeverhalten ohne forced Ableitung der <xref:System.Windows.Forms.BindingSource> Klasse.</span><span class="sxs-lookup"><span data-stu-id="a7c82-162">By handling this event, the programmer can provide custom item creation and insertion behavior without being forced to derive from the <xref:System.Windows.Forms.BindingSource> class.</span></span> <span data-ttu-id="a7c82-163">Dies erfolgt im Ereignishandler durch Festlegen der <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> Eigenschaft von der <xref:System.ComponentModel.AddingNewEventArgs?displayProperty=nameWithType> Parameter für das neue Element.</span><span class="sxs-lookup"><span data-stu-id="a7c82-163">This is accomplished in the event handler by setting the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property of the <xref:System.ComponentModel.AddingNewEventArgs?displayProperty=nameWithType> parameter to the new item.</span></span> <span data-ttu-id="a7c82-164">Das neue Objekt erstellt, der <xref:System.Windows.Forms.BindingSource.AddingNew> Ereignis muss denselben Typ wie in der Liste enthaltene Typ oder eine Ausnahme ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="a7c82-164">The new object created in the <xref:System.Windows.Forms.BindingSource.AddingNew> event must be of the same type as the type contained in the list or an exception will occur.</span></span> <span data-ttu-id="a7c82-165">Kann nicht festgelegt werden die <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> Eigenschaft, die bei der Bindung an eine <xref:System.Data.DataView> oder <xref:System.Data.DataTable> da Sie ein neues hinzufügen können <xref:System.Data.DataRowView> der Liste.</span><span class="sxs-lookup"><span data-stu-id="a7c82-165">You cannot set the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property when bound to a <xref:System.Data.DataView> or <xref:System.Data.DataTable> because you cannot add a new <xref:System.Data.DataRowView> to the list.</span></span>  
  
 <span data-ttu-id="a7c82-166">Weitere Informationen zum Angeben von benutzerdefinierten Funktionen für neue Elemente finden Sie unter der <xref:System.Windows.Forms.BindingSource.AddNew%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a7c82-166">For more information about supplying custom new item functionality, see the <xref:System.Windows.Forms.BindingSource.AddNew%2A> method.</span></span> <span data-ttu-id="a7c82-167">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a7c82-167">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c82-168">Im folgenden Codebeispiel wird mit einem <xref:System.Windows.Forms.BindingSource> -Komponente zum Binden einer Liste, um eine <xref:System.Windows.Forms.DataGridView> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="a7c82-168">The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind a list to a <xref:System.Windows.Forms.DataGridView> control.</span></span> <span data-ttu-id="a7c82-169">Neue Elemente werden hinzugefügt, um die Liste nach der <xref:System.Windows.Forms.BindingSource.AddingNew> -Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="a7c82-169">New items are added to the list by the <xref:System.Windows.Forms.BindingSource.AddingNew> event handler.</span></span> <span data-ttu-id="a7c82-170">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels [wie: Anpassen der Hinzufügung mit der BindingSource in Windows Forms](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md).</span><span class="sxs-lookup"><span data-stu-id="a7c82-170">This code example is part of a larger example provided in [How to: Customize Item Addition with the Windows Forms BindingSource](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.AddingNew#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.DataConnector.AddingNew#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.DataConnector.AddingNew#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a7c82-171">
            <see cref="P:System.ComponentModel.AddingNewEventArgs.NewObject" /> is not the same type as the type contained in the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-171">
              <see cref="P:System.ComponentModel.AddingNewEventArgs.NewObject" /> is not the same type as the type contained in the list.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" />
        <altmember cref="T:System.ComponentModel.AddingNewEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public virtual object AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddNew () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ AddNew();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-172">Adds a new item to the underlying list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-172">Adds a new item to the underlying list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a7c82-173">The <see cref="T:System.Object" /> that was created and added to the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-173">The <see cref="T:System.Object" /> that was created and added to the list.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-174">Die <xref:System.Windows.Forms.BindingSource.AddNew%2A> Methode fügt ein neues Element auf die zugrunde liegende Liste dargestellt durch die <xref:System.Windows.Forms.BindingSource.List%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a7c82-174">The <xref:System.Windows.Forms.BindingSource.AddNew%2A> method adds a new item to the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property.</span></span> <span data-ttu-id="a7c82-175">Diese Methode richtet die nachstehend beschriebenen Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="a7c82-175">This method sets up the following series of actions:</span></span>  
  
1.  <span data-ttu-id="a7c82-176">Die <xref:System.Windows.Forms.BindingSource.EndEdit%2A> Methode wird automatisch aufgerufen, um alle ausstehenden Bearbeitungsvorgänge einen Commit auszuführen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-176">The <xref:System.Windows.Forms.BindingSource.EndEdit%2A> method is automatically called to commit any pending edit operations.</span></span>  
  
2.  <span data-ttu-id="a7c82-177">Die <xref:System.Windows.Forms.BindingSource.AddingNew> Ereignis wird automatisch ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="a7c82-177">The <xref:System.Windows.Forms.BindingSource.AddingNew> event is automatically raised.</span></span> <span data-ttu-id="a7c82-178">Dieses Ereignis kann programmgesteuert behandelt werden, um das neue Element zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-178">This event can be programmatically handled to construct the new item.</span></span> <span data-ttu-id="a7c82-179">Dies erfolgt im Ereignishandler durch Festlegen der <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> Eigenschaft von der <xref:System.ComponentModel.AddingNewEventArgs?displayProperty=nameWithType> Parameter für das neue Element.</span><span class="sxs-lookup"><span data-stu-id="a7c82-179">This is accomplished in the event handler by setting the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property of the <xref:System.ComponentModel.AddingNewEventArgs?displayProperty=nameWithType> parameter to the new item.</span></span> <span data-ttu-id="a7c82-180">Das neue Objekt erstellt, der <xref:System.Windows.Forms.BindingSource.AddingNew> Ereignis muss denselben Typ wie in der Liste enthaltene Typ oder eine Ausnahme ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="a7c82-180">The new object created in the <xref:System.Windows.Forms.BindingSource.AddingNew> event must be of the same type as the type contained in the list or an exception will occur.</span></span>  
  
     <span data-ttu-id="a7c82-181">Wenn die <xref:System.Windows.Forms.BindingSource.AddingNew> Ereignis wird nicht verarbeitet werden, und die zugrunde liegende Liste eine <xref:System.ComponentModel.IBindingList>, und klicken Sie dann die Anforderung, um der Liste übergeben wird <xref:System.ComponentModel.IBindingList.AddNew%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="a7c82-181">If the <xref:System.Windows.Forms.BindingSource.AddingNew> event is not handled, and the underlying list is an <xref:System.ComponentModel.IBindingList>, then the request is passed to the list's <xref:System.ComponentModel.IBindingList.AddNew%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="a7c82-182">Wenn die zugrunde liegende Liste keine <xref:System.ComponentModel.IBindingList> ist, wird das Element automatisch über seinen öffentlichen Standardkonstruktor erstellt.</span><span class="sxs-lookup"><span data-stu-id="a7c82-182">If the underlying list is not an <xref:System.ComponentModel.IBindingList>, the item is automatically created through its public default constructor.</span></span> <span data-ttu-id="a7c82-183">In beiden Fällen wird das neue Element am Ende der Liste hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="a7c82-183">In either case, the new item is added to the end of the list.</span></span>  
  
3.  <span data-ttu-id="a7c82-184">Das neue Element wird der internen Liste sofort hinzugefügt, es sei denn, die Datenquelle implementiert die <xref:System.ComponentModel.IEditableObject> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="a7c82-184">The new item is added immediately to the internal list unless the data source implements the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="a7c82-185">In diesem Fall das neue Element wird nicht ausgeführt bis ein expliziter Aufruf von <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A> vorgenommen wird oder bis ein neue listenvorgang initiiert wird.</span><span class="sxs-lookup"><span data-stu-id="a7c82-185">In this case, the new item is not committed until an explicit call to <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A> is made or until a new list operation is initiated.</span></span> <span data-ttu-id="a7c82-186">Bevor eine Zusicherung erfolgt ist, das neue Element kann ein Rollback durch Aufrufen von <xref:System.Windows.Forms.BindingSource.CancelEdit%2A>, in diesem Fall das neue Element verworfen wird.</span><span class="sxs-lookup"><span data-stu-id="a7c82-186">Before it is committed, the new item can be rolled back by calling <xref:System.Windows.Forms.BindingSource.CancelEdit%2A>, in which case the new item is discarded.</span></span>  
  
 <span data-ttu-id="a7c82-187">Diese Methode löst die <xref:System.Windows.Forms.BindingSource.ListChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a7c82-187">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c82-188">Im folgenden Codebeispiel wird mit einem <xref:System.Windows.Forms.BindingSource> -Komponente zum Binden einer Liste, um eine <xref:System.Windows.Forms.DataGridView> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="a7c82-188">The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind a list to a <xref:System.Windows.Forms.DataGridView> control.</span></span> <span data-ttu-id="a7c82-189">Neue Elemente werden hinzugefügt, um die Liste nach der <xref:System.Windows.Forms.BindingSource.AddingNew> -Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="a7c82-189">New items are added to the list by the <xref:System.Windows.Forms.BindingSource.AddingNew> event handler.</span></span> <span data-ttu-id="a7c82-190">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels [wie: Anpassen der Hinzufügung mit der BindingSource in Windows Forms](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md).</span><span class="sxs-lookup"><span data-stu-id="a7c82-190">This code example is part of a larger example provided in [How to: Customize Item Addition with the Windows Forms BindingSource](~/docs/framework/winforms/controls/how-to-customize-item-addition-with-the-windows-forms-bindingsource.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.AddingNew#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.DataConnector.AddingNew#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.DataConnector.AddingNew#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.AddingNew/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a7c82-191">The <see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> property is set to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-191">The <see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> property is set to <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a7c82-192">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-192">-or-</span>
          </span>
          <span data-ttu-id="a7c82-193">A public default constructor could not be found for the current item type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-193">A public default constructor could not be found for the current item type.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="T:System.ComponentModel.AddingNewEventArgs" />
        <altmember cref="E:System.Windows.Forms.BindingSource.AddingNew" />
        <altmember cref="P:System.Windows.Forms.BindingSource.AllowNew" />
        <altmember cref="T:System.ComponentModel.IBindingList" />
      </Docs>
    </Member>
    <Member MemberName="AllowEdit">
      <MemberSignature Language="C#" Value="public virtual bool AllowEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.AllowEdit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowEdit { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-194">Gets a value indicating whether items in the underlying list can be edited.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-194">Gets a value indicating whether items in the underlying list can be edited.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c82-195">
            <see langword="true" /> um Listenelemente anzugeben bearbeitet werden können. andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-195">
              <see langword="true" /> to indicate list items can be edited; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-196">Die <xref:System.Windows.Forms.BindingSource.AllowEdit%2A> Eigenschaft wird in der Regel von anderen Komponenten verwendet, um festzustellen, ob die Bearbeitung von Elementen in der Liste zulässig ist.</span><span class="sxs-lookup"><span data-stu-id="a7c82-196">The <xref:System.Windows.Forms.BindingSource.AllowEdit%2A> property is typically used by other components to determine if editing of items in the list is allowed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowNew">
      <MemberSignature Language="C#" Value="public virtual bool AllowNew { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowNew" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.AllowNew" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowNew { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-197">Gets or sets a value indicating whether the <see cref="M:System.Windows.Forms.BindingSource.AddNew" /> method can be used to add items to the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-197">Gets or sets a value indicating whether the <see cref="M:System.Windows.Forms.BindingSource.AddNew" /> method can be used to add items to the list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c82-198">
            <see langword="true" /> Wenn <see cref="M:System.Windows.Forms.BindingSource.AddNew" /> kann das Hinzufügen von Elementen der Liste, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-198">
              <see langword="true" /> if <see cref="M:System.Windows.Forms.BindingSource.AddNew" /> can be used to add items to the list; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-199">Der Standardwert für die <xref:System.Windows.Forms.BindingSource.AllowNew%2A> Eigenschaft hängt von den zugrunde liegenden Datenquellentyp.</span><span class="sxs-lookup"><span data-stu-id="a7c82-199">The default value for the <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property depends on the underlying data source type.</span></span> <span data-ttu-id="a7c82-200">Wenn die zugrunde liegende Liste implementiert die <xref:System.ComponentModel.IBindingList> -Schnittstelle, wird diese Eigenschaft auf die zugrunde liegende Liste delegieren.</span><span class="sxs-lookup"><span data-stu-id="a7c82-200">If the underlying list implements the <xref:System.ComponentModel.IBindingList> interface, this property will delegate to the underlying list.</span></span> <span data-ttu-id="a7c82-201">Andernfalls gibt diese Eigenschaft zurück `false` , wenn die zugrunde liegende Liste eine der folgenden Merkmale aufweist:</span><span class="sxs-lookup"><span data-stu-id="a7c82-201">Otherwise, this property will return `false` if the underlying list has any of the following characteristics:</span></span>  
  
-   <span data-ttu-id="a7c82-202">Er eine feste Größe hat, als durch die <xref:System.Collections.IList.IsFixedSize%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a7c82-202">It has a fixed size, as determined by the <xref:System.Collections.IList.IsFixedSize%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="a7c82-203">Es ist schreibgeschützt, gemäß der <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a7c82-203">It is read-only, as determined by the <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="a7c82-204">Das Element-Typ weist keinen Standardkonstruktor auf.</span><span class="sxs-lookup"><span data-stu-id="a7c82-204">The item's type does not have a default constructor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7c82-205">Sobald der Wert dieser Eigenschaft festgelegt ist, verweist der Getter für eine nicht mehr den Aufruf von der zugrunde liegenden Liste.</span><span class="sxs-lookup"><span data-stu-id="a7c82-205">Once the value of this property is set, the getter no longer refers the call to the underlying list.</span></span> <span data-ttu-id="a7c82-206">Stattdessen einfach den Wert zurück, die zuvor bis festgelegt wurde die <xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A> -Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a7c82-206">Instead, it simply returns the value that was previously set until the <xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A> method is called.</span></span>  
  
 <span data-ttu-id="a7c82-207">Einstellung, die diese Eigenschaft löst die <xref:System.Windows.Forms.BindingSource.ListChanged> Ereignis "mit" <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> festgelegt <xref:System.ComponentModel.ListChangedType.Reset?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-207">Setting this property raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> set to <xref:System.ComponentModel.ListChangedType.Reset?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a7c82-208">Wenn Sie festlegen, die <xref:System.Windows.Forms.BindingSource.AllowNew%2A> Eigenschaft `true` und der zugrunde liegenden Listentyp nicht über einen Standardkonstruktor verfügt, müssen Sie behandeln die <xref:System.Windows.Forms.BindingSource.AddingNew> Ereignis und den entsprechenden Typ erstellen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-208">If you set the <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property to `true` and the underlying list type does not have a default constructor, you must handle the <xref:System.Windows.Forms.BindingSource.AddingNew> event and create the appropriate type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c82-209">Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Windows.Forms.BindingSource.AllowNew%2A> Eigenschaft von der <xref:System.Windows.Forms.BindingSource> Komponente, bei dem Benutzer neue Elemente hinzufügen das <xref:System.Windows.Forms.BindingSource> Komponente zugrunde liegenden Liste.</span><span class="sxs-lookup"><span data-stu-id="a7c82-209">The following code example demonstrates using the <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property of the <xref:System.Windows.Forms.BindingSource> component to permit the user to add new items to the <xref:System.Windows.Forms.BindingSource> component's underlying list.</span></span> <span data-ttu-id="a7c82-210">Wenn diese Eigenschaft auf `true` bewirkt, dass die Grenze <xref:System.Windows.Forms.DataGridView> Steuerelement, um die Zeile für neue Datensätze anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-210">Setting this property to `true` causes the bound <xref:System.Windows.Forms.DataGridView> control to display its row for new records.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ItemChangedEventMode#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.DataConnector.ItemChangedEventMode#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.DataConnector.ItemChangedEventMode#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a7c82-211">This property is set to <see langword="true" /> when the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property has a fixed size or is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-211">This property is set to <see langword="true" /> when the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property has a fixed size or is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="a7c82-212">The property is set to <see langword="true" /> and the <see cref="E:System.Windows.Forms.BindingSource.AddingNew" /> event is not handled when the underlying list type does not have a default constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-212">The property is set to <see langword="true" /> and the <see cref="E:System.Windows.Forms.BindingSource.AddingNew" /> event is not handled when the underlying list type does not have a default constructor.</span>
          </span>
        </exception>
        <altmember cref="P:System.ComponentModel.AddingNewEventArgs.NewObject" />
        <altmember cref="M:System.Windows.Forms.BindingSource.ResetAllowNew" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.AllowEdit" />
        <altmember cref="P:System.Windows.Forms.BindingSource.AllowRemove" />
        <altmember cref="M:System.Windows.Forms.BindingSource.EndEdit" />
        <altmember cref="M:System.Windows.Forms.BindingSource.CancelEdit" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="AllowRemove">
      <MemberSignature Language="C#" Value="public virtual bool AllowRemove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowRemove" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.AllowRemove" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowRemove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowRemove { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-213">Gets a value indicating whether items can be removed from the underlying list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-213">Gets a value indicating whether items can be removed from the underlying list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c82-214">
            <see langword="true" /> um anzugeben, dass können Elemente aus der Liste entfernt werden; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-214">
              <see langword="true" /> to indicate list items can be removed from the list; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-215">Die <xref:System.Windows.Forms.BindingSource.AllowRemove%2A> Eigenschaft wird in der Regel von anderen Komponenten verwendet, um festzustellen, ob die Bearbeitung von Elementen in der Liste zulässig ist.</span><span class="sxs-lookup"><span data-stu-id="a7c82-215">The <xref:System.Windows.Forms.BindingSource.AllowRemove%2A> property is typically used by other components to determine if editing of items in the list is allowed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ApplySort">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-216">Sorts the data source with the specified sort description or descriptions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-216">Sorts the data source with the specified sort description or descriptions.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplySort">
      <MemberSignature Language="C#" Value="public virtual void ApplySort (System.ComponentModel.ListSortDescriptionCollection sorts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplySort(class System.ComponentModel.ListSortDescriptionCollection sorts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ApplySort (sorts As ListSortDescriptionCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplySort(System::ComponentModel::ListSortDescriptionCollection ^ sorts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sorts" Type="System.ComponentModel.ListSortDescriptionCollection" />
      </Parameters>
      <Docs>
        <param name="sorts">
          <span data-ttu-id="a7c82-217">A <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> containing the sort descriptions to apply to the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-217">A <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> containing the sort descriptions to apply to the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-218">Sorts the data source with the specified sort descriptions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-218">Sorts the data source with the specified sort descriptions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-219"><xref:System.ComponentModel.IBindingListView> implementiert die mehrspaltige Sortierung als Satz von Eigenschaftendeskriptor-Richtung-Paaren.</span><span class="sxs-lookup"><span data-stu-id="a7c82-219"><xref:System.ComponentModel.IBindingListView> implements multi-column sorting as a set of property descriptor-direction pairs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a7c82-220">The data source is not an <see cref="T:System.ComponentModel.IBindingListView" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-220">The data source is not an <see cref="T:System.ComponentModel.IBindingListView" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ApplySort">
      <MemberSignature Language="C#" Value="public virtual void ApplySort (System.ComponentModel.PropertyDescriptor property, System.ComponentModel.ListSortDirection sort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplySort(class System.ComponentModel.PropertyDescriptor property, valuetype System.ComponentModel.ListSortDirection sort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ApplySort (property As PropertyDescriptor, sort As ListSortDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplySort(System::ComponentModel::PropertyDescriptor ^ property, System::ComponentModel::ListSortDirection sort);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="sort" Type="System.ComponentModel.ListSortDirection" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="a7c82-221">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that describes the property by which to sort the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-221">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that describes the property by which to sort the data source.</span>
          </span>
        </param>
        <param name="sort">
          <span data-ttu-id="a7c82-222">A <see cref="T:System.ComponentModel.ListSortDirection" /> indicating how the list should be sorted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-222">A <see cref="T:System.ComponentModel.ListSortDirection" /> indicating how the list should be sorted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-223">Sorts the data source using the specified property descriptor and sort direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-223">Sorts the data source using the specified property descriptor and sort direction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-224">Die <xref:System.ComponentModel.IBindingList> implementiert die einzelne spaltensortierung mit einer <xref:System.ComponentModel.PropertyDescriptor> an, dass eine Eigenschaft, um nach zu sortieren und eine <xref:System.ComponentModel.ListSortDirection> , der angibt, ob der Inhalt der Eigenschaft in aufsteigender oder absteigender Reihenfolge sortiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-224">The <xref:System.ComponentModel.IBindingList> implements single column sorting using a <xref:System.ComponentModel.PropertyDescriptor> to indicate a property to sort by and a <xref:System.ComponentModel.ListSortDirection> indicating whether the property contents should be sorted in ascending or descending order.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a7c82-225">The data source is not an <see cref="T:System.ComponentModel.IBindingList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-225">The data source is not an <see cref="T:System.ComponentModel.IBindingList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BindingComplete">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingCompleteEventHandler BindingComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingCompleteEventHandler BindingComplete" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.BindingComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BindingComplete As BindingCompleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingCompleteEventHandler ^ BindingComplete;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingCompleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-226">Occurs when all the clients have been bound to this <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-226">Occurs when all the clients have been bound to this <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-227">Die <xref:System.Windows.Forms.BindingSource.BindingComplete> Ereignis tritt auf, nachdem alle Clients in der Regel Steuerelemente gebunden wurden mit dem aktuellen <xref:System.Windows.Forms.BindingSource>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-227">The <xref:System.Windows.Forms.BindingSource.BindingComplete> event occurs after all the clients, typically controls, have been bound to the current <xref:System.Windows.Forms.BindingSource>.</span></span> <span data-ttu-id="a7c82-228">Der Handler für dieses Ereignis kann die entsprechende Aktion basierend auf den Erfolg, Fehler oder Ausnahmen des Bindungsvorgangs durch Untersuchen der <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> Eigenschaft von der <xref:System.Windows.Forms.BindingCompleteEventArgs> Parameter.</span><span class="sxs-lookup"><span data-stu-id="a7c82-228">The handler of this event can take the appropriate action based on the success, error, or exceptions in the binding process, by examining the <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> property of the <xref:System.Windows.Forms.BindingCompleteEventArgs> parameter.</span></span>  
  
 <span data-ttu-id="a7c82-229">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a7c82-229">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c82-230">Das folgende Codebeispiel veranschaulicht die Behandlung der <xref:System.Windows.Forms.BindingSource.BindingComplete> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a7c82-230">The following code example demonstrates handling the <xref:System.Windows.Forms.BindingSource.BindingComplete> event.</span></span> <span data-ttu-id="a7c82-231">Um diesen Code auszuführen, fügen Sie ihn in einer leeren Codedatei.</span><span class="sxs-lookup"><span data-stu-id="a7c82-231">To run this code, paste it into an empty code file.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState" />
        <altmember cref="T:System.Windows.Forms.BindingCompleteEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-232">Cancels the current edit operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-232">Cancels the current edit operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-233">Diese Methode verwirft die Änderungen an Daten seit der letzten Speichern oder laden Vorgang aus, wenn beide der folgenden Bedingungen erfüllt sind:</span><span class="sxs-lookup"><span data-stu-id="a7c82-233">This method discards modifications to data since the last save or load operation if both of the following conditions are met:</span></span>  
  
-   <span data-ttu-id="a7c82-234">Die Datenquelle implementiert die <xref:System.ComponentModel.IEditableObject> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="a7c82-234">The data source implements the <xref:System.ComponentModel.IEditableObject> interface.</span></span>  
  
-   <span data-ttu-id="a7c82-235">Die <xref:System.Windows.Forms.BindingSource.EndEdit%2A> Methode noch nicht aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="a7c82-235">The <xref:System.Windows.Forms.BindingSource.EndEdit%2A> method has not been called yet.</span></span>  
  
 <span data-ttu-id="a7c82-236">Diese Methode ruft die <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> Methode des zugrunde liegenden <xref:System.Windows.Forms.CurrencyManager>, und auf Zeilenebene Änderungen begrenzt.</span><span class="sxs-lookup"><span data-stu-id="a7c82-236">This method calls the <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> method of the underlying <xref:System.Windows.Forms.CurrencyManager>, and is scoped to row-level changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.EndEdit" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-237">Removes all elements from the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-237">Removes all elements from the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-238">Die <xref:System.Windows.Forms.BindingSource.Clear%2A> -Methode entfernt alle Elemente aus der zugrunde liegenden Liste dargestellt durch die <xref:System.Windows.Forms.BindingSource.List%2A> Eigenschaft und legt die <xref:System.Windows.Forms.BindingSource.Count%2A> Eigenschaft auf 0 (null).</span><span class="sxs-lookup"><span data-stu-id="a7c82-238">The <xref:System.Windows.Forms.BindingSource.Clear%2A> method removes all elements from the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property and sets the <xref:System.Windows.Forms.BindingSource.Count%2A> property to zero.</span></span>  
  
 <span data-ttu-id="a7c82-239">Diese Methode löst die <xref:System.Windows.Forms.BindingSource.ListChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a7c82-239">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="M:System.Windows.Forms.BindingSource.CancelEdit" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a7c82-240">The <see cref="T:System.Object" /> to locate in the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-240">The <see cref="T:System.Object" /> to locate in the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span>
          </span>
          <span data-ttu-id="a7c82-241">The value can be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-241">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-242">Determines whether an object is an item in the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-242">Determines whether an object is an item in the list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a7c82-243">
            <see langword="true" /> if the <paramref name="value" /> parameter is found in the <see cref="P:System.Windows.Forms.BindingSource.List" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-243">
              <see langword="true" /> if the <paramref name="value" /> parameter is found in the <see cref="P:System.Windows.Forms.BindingSource.List" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-244">Obwohl die Implementierung der zugrunde liegenden Liste abhängt `Contains` -Methode, in der Regel die folgenden Merkmale treffen:</span><span class="sxs-lookup"><span data-stu-id="a7c82-244">Although the implementation is dependent on the underlying list's `Contains` method, typically the following characteristics apply:</span></span>  
  
-   <span data-ttu-id="a7c82-245"><xref:System.Windows.Forms.BindingSource.List%2A> wird durchsucht, beginnend ab dem ersten Element und endet beim letzten Element.</span><span class="sxs-lookup"><span data-stu-id="a7c82-245"><xref:System.Windows.Forms.BindingSource.List%2A> is searched starting at the first element and ending at the last element.</span></span>  
  
-   <span data-ttu-id="a7c82-246">Die zugrunde liegende Methode führt eine lineare Suche; Daher ist die durchschnittliche Ausführungszeit proportional zum Wert der <xref:System.Windows.Forms.BindingSource.Count%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a7c82-246">The underlying method performs a linear search; therefore, the average execution time is proportional to the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property.</span></span>  
  
-   <span data-ttu-id="a7c82-247">Die zugrunde liegende Methode bestimmt die Gleichheit durch Aufrufen der <xref:System.Object.Equals%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a7c82-247">The underlying method determines equality by calling the <xref:System.Object.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.IndexOf(System.Object)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array arr, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array arr, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyTo (arr As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ arr, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arr" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="arr">
          <span data-ttu-id="a7c82-248">The destination array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-248">The destination array.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="a7c82-249">The index in the destination array at which to start the copy operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-249">The index in the destination array at which to start the copy operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-250">Copies the contents of the <see cref="P:System.Windows.Forms.BindingSource.List" /> to the specified array, starting at the specified index value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-250">Copies the contents of the <see cref="P:System.Windows.Forms.BindingSource.List" /> to the specified array, starting at the specified index value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-251">Sie können diese Methode verwenden, Kombinieren von Elementen aus mehreren Quellen in ein einzelnes Array.</span><span class="sxs-lookup"><span data-stu-id="a7c82-251">You can use this method to combine items from multiple sources into a single array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-252">Gets the total number of items in the underlying list, taking the current <see cref="P:System.Windows.Forms.BindingSource.Filter" /> value into consideration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-252">Gets the total number of items in the underlying list, taking the current <see cref="P:System.Windows.Forms.BindingSource.Filter" /> value into consideration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c82-253">Die Gesamtanzahl der gefilterten Elemente in der zugrunde liegenden Liste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-253">The total number of filtered items in the underlying list.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-254">Die <xref:System.Windows.Forms.BindingSource.Count%2A> -Eigenschaft ruft die Anzahl der Elemente in der zugrunde liegenden Liste dargestellt durch die <xref:System.Windows.Forms.BindingSource.List%2A> Eigenschaft durch den Wert des geänderten der <xref:System.Windows.Forms.BindingSource.Filter%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a7c82-254">The <xref:System.Windows.Forms.BindingSource.Count%2A> property gets the number of items in the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property as modified by the value of the <xref:System.Windows.Forms.BindingSource.Filter%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c82-255">Das folgende Codebeispiel veranschaulicht die <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, und <xref:System.Windows.Forms.BindingSource.Count%2A> Elemente.</span><span class="sxs-lookup"><span data-stu-id="a7c82-255">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, and <xref:System.Windows.Forms.BindingSource.Count%2A> members.</span></span> <span data-ttu-id="a7c82-256">Um dieses Beispiel auszuführen, fügen Sie den Code in ein Formular, enthält ein <xref:System.Windows.Forms.BindingSource> mit dem Namen `BindingSource1`, zwei Bezeichnungen, die mit dem Namen `label1` und `label2`, und eine Schaltfläche mit dem Namen `button1`.</span><span class="sxs-lookup"><span data-stu-id="a7c82-256">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1`, two labels named `label1` and `label2`, and a button named `button1`.</span></span> <span data-ttu-id="a7c82-257">Zuordnen der `button1_Click` Methode mit dem <xref:System.Windows.Forms.Control.Click> -Ereignis für `button1`.</span><span class="sxs-lookup"><span data-stu-id="a7c82-257">Associate the `button1_Click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="a7c82-258">Visual Basic-Benutzer müssen einen Verweis auf "System.Data.dll" hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-258">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyManager">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.CurrencyManager CurrencyManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CurrencyManager CurrencyManager" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.CurrencyManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrencyManager As CurrencyManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::CurrencyManager ^ CurrencyManager { System::Windows::Forms::CurrencyManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.ICurrencyManagerProvider.CurrencyManager</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CurrencyManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-259">Gets the currency manager associated with this <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-259">Gets the currency manager associated with this <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c82-260">Das dieser <see cref="T:System.Windows.Forms.CurrencyManager" /> zugeordnete <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-260">The <see cref="T:System.Windows.Forms.CurrencyManager" /> associated with this <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-261">Wenn Sie die datensatzzeigerverwaltung für eine andere Bindung für die Verwendung der gleichen Datenmember zugreifen möchten die <xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a7c82-261">If you want to access the currency manager for another binding to the same data member use the <xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-262">Gets the current item in the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-262">Gets the current item in the list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c82-263">Ein <see cref="T:System.Object" /> , die das aktuelle Element in der zugrunde liegenden Liste dargestellte darstellt der <see cref="P:System.Windows.Forms.BindingSource.List" /> Eigenschaft oder <see langword="null" /> , wenn die Liste keine Elemente enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-263">An <see cref="T:System.Object" /> that represents the current item in the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property, or <see langword="null" /> if the list has no items.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-264">Verwenden Sie die <xref:System.Windows.Forms.BindingSource.Current%2A> Eigenschaft das aktuelle Element zuzugreifen, verwenden Sie jedoch die <xref:System.Windows.Forms.BindingSource.List%2A> Eigenschaft, um die gesamte Liste abzurufen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-264">Use the <xref:System.Windows.Forms.BindingSource.Current%2A> property to access the current item, but use the <xref:System.Windows.Forms.BindingSource.List%2A> property to get the entire list.</span></span> <span data-ttu-id="a7c82-265">Um den Typ des aktuellen Objekts zu ermitteln, verwenden die <xref:System.Object.GetType%2A>, oder <xref:System.Object.ToString%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="a7c82-265">To determine the type of the current object, use the <xref:System.Object.GetType%2A>, or <xref:System.Object.ToString%2A> methods.</span></span>  
  
 <span data-ttu-id="a7c82-266">Um das aktuelle Element zu ändern, legen die <xref:System.Windows.Forms.BindingSource.Position%2A> Eigenschaft, um eine neue ganzzahligen Wert, oder verwenden Sie eine der Navigationsmethoden, z. B. <xref:System.Windows.Forms.BindingSource.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-266">To change the current item, set the <xref:System.Windows.Forms.BindingSource.Position%2A> property to a new integral value, or use one of the navigation methods such as <xref:System.Windows.Forms.BindingSource.MoveNext%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c82-267">Das folgende Codebeispiel veranschaulicht die <xref:System.Windows.Forms.BindingSource.Current%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a7c82-267">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.Current%2A> property.</span></span> <span data-ttu-id="a7c82-268">Um dieses Beispiel auszuführen, fügen Sie den Code in ein Formular, und rufen die `PopulateBindingSourceWithFonts` Methode aus des Formulars <xref:System.Windows.Forms.Form.Load> Methode für die Ereignisbehandlung.</span><span class="sxs-lookup"><span data-stu-id="a7c82-268">To run this example, paste the code into a form and call the `PopulateBindingSourceWithFonts` method from the form's <xref:System.Windows.Forms.Form.Load> event handling method.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
      </Docs>
    </Member>
    <Member MemberName="CurrentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.CurrentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-269">Occurs when the currently bound item changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-269">Occurs when the currently bound item changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-270">Die <xref:System.Windows.Forms.BindingSource.CurrentChanged> Ereignis wird ausgelöst, wenn die <xref:System.Windows.Forms.BindingSource.Current%2A> eigenschaftsänderungen für einen der folgenden Gründe:</span><span class="sxs-lookup"><span data-stu-id="a7c82-270">The <xref:System.Windows.Forms.BindingSource.CurrentChanged> event is raised whenever the <xref:System.Windows.Forms.BindingSource.Current%2A> property changes for any of the following reasons:</span></span>  
  
-   <span data-ttu-id="a7c82-271">Die aktuelle Position der <xref:System.Windows.Forms.BindingSource.List%2A> ändert.</span><span class="sxs-lookup"><span data-stu-id="a7c82-271">The current position of the <xref:System.Windows.Forms.BindingSource.List%2A> changes.</span></span>  
  
-   <span data-ttu-id="a7c82-272">Die <xref:System.Windows.Forms.BindingSource.DataSource%2A> oder <xref:System.Windows.Forms.BindingSource.DataMember%2A> Eigenschaften ändern.</span><span class="sxs-lookup"><span data-stu-id="a7c82-272">The <xref:System.Windows.Forms.BindingSource.DataSource%2A> or <xref:System.Windows.Forms.BindingSource.DataMember%2A> properties change.</span></span>  
  
-   <span data-ttu-id="a7c82-273">Die Mitgliedschaft der zugrunde liegenden <xref:System.Windows.Forms.BindingSource.List%2A> geändert wird, wodurch <xref:System.Windows.Forms.BindingSource.Position%2A> zum Verweisen auf ein anderes Element.</span><span class="sxs-lookup"><span data-stu-id="a7c82-273">The membership of the underlying <xref:System.Windows.Forms.BindingSource.List%2A> changes, which causes <xref:System.Windows.Forms.BindingSource.Position%2A> to refer to a different item.</span></span> <span data-ttu-id="a7c82-274">Beispiele: Hinzufügen oder Löschen eines Elements vor dem aktuellen Element, löschen oder verschieben das aktuelle Element selbst oder Verschieben eines Elements an der aktuellen Position.</span><span class="sxs-lookup"><span data-stu-id="a7c82-274">Examples include adding or deleting an item before the current item, deleting or moving the current item itself, or moving an item to the current position.</span></span>  
  
-   <span data-ttu-id="a7c82-275">Die zugrunde liegende Liste wird durch eine neue Sortierung oder Filterung Vorgang aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="a7c82-275">The underlying list is refreshed by a new sorting or filtering operation.</span></span>  
  
 <span data-ttu-id="a7c82-276">Wenn dieses Ereignis ausgelöst wird, die <xref:System.Windows.Forms.BindingSource.Current%2A> Eigenschaft wird den neuen Wert bereits enthalten.</span><span class="sxs-lookup"><span data-stu-id="a7c82-276">When this event is triggered, the <xref:System.Windows.Forms.BindingSource.Current%2A> property will already contain its new value.</span></span>  
  
 <span data-ttu-id="a7c82-277"><xref:System.Windows.Forms.BindingSource.CurrentChanged> ist das Standardereignis für die <xref:System.Windows.Forms.BindingSource> Klasse.</span><span class="sxs-lookup"><span data-stu-id="a7c82-277"><xref:System.Windows.Forms.BindingSource.CurrentChanged> is the default event for the <xref:System.Windows.Forms.BindingSource> class.</span></span>  
  
 <span data-ttu-id="a7c82-278">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a7c82-278">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.PositionChanged" />
      </Docs>
    </Member>
    <Member MemberName="CurrentItemChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentItemChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentItemChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentItemChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentItemChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-279">Occurs when a property value of the <see cref="P:System.Windows.Forms.BindingSource.Current" /> property has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-279">Occurs when a property value of the <see cref="P:System.Windows.Forms.BindingSource.Current" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-280">Die <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> Ereignis wird ausgelöst, als Antwort auf alle in den Fällen, die Auslösen der <xref:System.Windows.Forms.BindingSource.CurrentChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a7c82-280">The <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> event is raised in response to all of the circumstances that raise the <xref:System.Windows.Forms.BindingSource.CurrentChanged> event.</span></span> <span data-ttu-id="a7c82-281">Darüber hinaus <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> wird auch ausgelöst, wenn der Wert einer der Eigenschaften des <xref:System.Windows.Forms.BindingSource.Current%2A> geändert wird.</span><span class="sxs-lookup"><span data-stu-id="a7c82-281">Additionally, <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> is also fired whenever the value of one of the properties of <xref:System.Windows.Forms.BindingSource.Current%2A> is changed.</span></span>  
  
 <span data-ttu-id="a7c82-282">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a7c82-282">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.PositionChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataError">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingManagerDataErrorEventHandler DataError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingManagerDataErrorEventHandler DataError" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.DataError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataError As BindingManagerDataErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingManagerDataErrorEventHandler ^ DataError;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingManagerDataErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-283">Occurs when a currency-related exception is silently handled by the <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-283">Occurs when a currency-related exception is silently handled by the <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-284">Dieses Ereignis dient zu Informationszwecken und meldet nur CLS-kompatible Ausnahmen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-284">This event is informational and reports CLS-compliant exceptions only.</span></span> <span data-ttu-id="a7c82-285">Um zu bestimmen, welche Art von Ausnahme ist aufgetreten, behandeln Sie dieses Ereignis, und überprüfen Sie die <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A> Eigenschaft von der <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-285">To determine what type of exception occurred, handle this event and check the <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A> property of the <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs>.</span></span>  
  
 <span data-ttu-id="a7c82-286">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a7c82-286">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataMember">
      <MemberSignature Language="C#" Value="public string DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.DataMember" />
      <MemberSignature Language="VB.NET" Value="Public Property DataMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberListEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-287">Gets or sets the specific list in the data source to which the connector currently binds to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-287">Gets or sets the specific list in the data source to which the connector currently binds to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c82-288">Der Name einer Liste (oder Zeile) in der <see cref="P:System.Windows.Forms.BindingSource.DataSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-288">The name of a list (or row) in the <see cref="P:System.Windows.Forms.BindingSource.DataSource" />.</span>
          </span>
          <span data-ttu-id="a7c82-289">Der Standardwert ist eine leere Zeichenfolge ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-289">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-290">Wenn die <xref:System.Windows.Forms.BindingSource.DataSource%2A> enthält mehrere Listen (oder Tabellen) von Daten, Sie sollten Festlegen der <xref:System.Windows.Forms.BindingSource.DataMember%2A> Eigenschaft, um den Namen einer der Quellen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-290">If the <xref:System.Windows.Forms.BindingSource.DataSource%2A> contains multiple lists (or tables) of data, you should set the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property to the name of one of the sources.</span></span>  
  
 <span data-ttu-id="a7c82-291">Diese Eigenschaft löst Einstellung der <xref:System.Windows.Forms.BindingSource.DataMemberChanged> Ereignis</span><span class="sxs-lookup"><span data-stu-id="a7c82-291">Setting this property raises the <xref:System.Windows.Forms.BindingSource.DataMemberChanged> event</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataMemberChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataMemberChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataMemberChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.DataMemberChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataMemberChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataMemberChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-292">Occurs when the <see cref="P:System.Windows.Forms.BindingSource.DataMember" /> property value has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-292">Occurs when the <see cref="P:System.Windows.Forms.BindingSource.DataMember" /> property value has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-293">Die <xref:System.Windows.Forms.BindingSource.DataMemberChanged> Ereignis tritt auf, nachdem die <xref:System.Windows.Forms.BindingSource.DataMember%2A> -Eigenschaft ändert.</span><span class="sxs-lookup"><span data-stu-id="a7c82-293">The <xref:System.Windows.Forms.BindingSource.DataMemberChanged> event occurs after the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property changes.</span></span>  
  
 <span data-ttu-id="a7c82-294">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a7c82-294">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataMember" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AttributeProvider(typeof(System.ComponentModel.IListSource))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-295">Gets or sets the data source that the connector binds to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-295">Gets or sets the data source that the connector binds to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c82-296">Eine <see cref="T:System.Object" /> , die als Datenquelle fungiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-296">An <see cref="T:System.Object" /> that acts as a data source.</span>
          </span>
          <span data-ttu-id="a7c82-297">Die Standardeinstellung ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-297">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-298">Die <xref:System.Windows.Forms.BindingSource.DataSource%2A> Eigenschaft kann festgelegt werden, um eine Anzahl von Datenquellen, einschließlich Typen, Objekte und Listen von Typen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-298">The <xref:System.Windows.Forms.BindingSource.DataSource%2A> property can be set to a number of data sources, including types, objects, and lists of types.</span></span> <span data-ttu-id="a7c82-299">Die resultierende Datenquelle wird als Liste verfügbar gemacht werden.</span><span class="sxs-lookup"><span data-stu-id="a7c82-299">The resulting data source will be exposed as a list.</span></span> <span data-ttu-id="a7c82-300">Die folgende Tabelle zeigt einige der allgemeinen Datenquellen und die resultierende Liste Auswertung.</span><span class="sxs-lookup"><span data-stu-id="a7c82-300">The following table shows some of the common data sources and the resulting list evaluation.</span></span>  
  
|<span data-ttu-id="a7c82-301">DataSource-Eigenschaft</span><span class="sxs-lookup"><span data-stu-id="a7c82-301">DataSource property</span></span>|<span data-ttu-id="a7c82-302">Listenergebnissen</span><span class="sxs-lookup"><span data-stu-id="a7c82-302">List results</span></span>|  
|-------------------------|------------------|  
|`null`|<span data-ttu-id="a7c82-303">Ein leeres <xref:System.ComponentModel.IBindingList> von Objekten.</span><span class="sxs-lookup"><span data-stu-id="a7c82-303">An empty <xref:System.ComponentModel.IBindingList> of objects.</span></span> <span data-ttu-id="a7c82-304">Hinzufügen eines Elements wird die Liste in den Typ des hinzugefügten Elements.</span><span class="sxs-lookup"><span data-stu-id="a7c82-304">Adding an item sets the list to the type of the added item.</span></span>|  
|<span data-ttu-id="a7c82-305">`null` mit <xref:System.Windows.Forms.BindingSource.DataMember%2A> festlegen</span><span class="sxs-lookup"><span data-stu-id="a7c82-305">`null` with <xref:System.Windows.Forms.BindingSource.DataMember%2A> set</span></span>|<span data-ttu-id="a7c82-306">Nicht unterstützt, löst <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-306">Not supported, raises <xref:System.ArgumentException>.</span></span>|  
|<span data-ttu-id="a7c82-307">Nicht-Listentyp oder Objekt vom Typ "T"</span><span class="sxs-lookup"><span data-stu-id="a7c82-307">Non-list type or object of type "T"</span></span>|<span data-ttu-id="a7c82-308">Leere <xref:System.ComponentModel.IBindingList> vom Typ "T".</span><span class="sxs-lookup"><span data-stu-id="a7c82-308">Empty <xref:System.ComponentModel.IBindingList> of type "T".</span></span>|  
|<span data-ttu-id="a7c82-309">Array-Instanz</span><span class="sxs-lookup"><span data-stu-id="a7c82-309">Array instance</span></span>|<span data-ttu-id="a7c82-310"><xref:System.ComponentModel.IBindingList> enthält die Elemente des Arrays.</span><span class="sxs-lookup"><span data-stu-id="a7c82-310"><xref:System.ComponentModel.IBindingList> containing the array elements.</span></span>|  
|<span data-ttu-id="a7c82-311"><xref:System.Collections.IEnumerable> Instanz</span><span class="sxs-lookup"><span data-stu-id="a7c82-311"><xref:System.Collections.IEnumerable> instance</span></span>|<span data-ttu-id="a7c82-312">Ein <xref:System.ComponentModel.IBindingList> , enthält die <xref:System.Collections.IEnumerable> Elemente.</span><span class="sxs-lookup"><span data-stu-id="a7c82-312">An <xref:System.ComponentModel.IBindingList> containing the <xref:System.Collections.IEnumerable> items.</span></span>|  
|<span data-ttu-id="a7c82-313">Liste der Instanz, die mit Typ "T"</span><span class="sxs-lookup"><span data-stu-id="a7c82-313">List instance containing type "T"</span></span>|<span data-ttu-id="a7c82-314"><xref:System.ComponentModel.IBindingList> die Instanz, die Typ "T" enthält.</span><span class="sxs-lookup"><span data-stu-id="a7c82-314"><xref:System.ComponentModel.IBindingList> instance containing type "T".</span></span>|  
  
 <span data-ttu-id="a7c82-315">Darüber hinaus <xref:System.Windows.Forms.BindingSource.DataSource%2A> kann auf andere Listentypen festgelegt werden, z. B. <xref:System.ComponentModel.IListSource> und <xref:System.ComponentModel.ITypedList> und <xref:System.Windows.Forms.BindingSource> entsprechend behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="a7c82-315">In addition, <xref:System.Windows.Forms.BindingSource.DataSource%2A> can be set to other list types such as <xref:System.ComponentModel.IListSource> and <xref:System.ComponentModel.ITypedList> and the <xref:System.Windows.Forms.BindingSource> will handle them appropriately.</span></span> <span data-ttu-id="a7c82-316">In diesem Fall sollte in der Liste enthaltene Typ einen Standardkonstruktor verfügen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-316">In this case, the type contained in the list should have a default constructor.</span></span>  
  
 <span data-ttu-id="a7c82-317">Wenn Sie eine Datenquelle festlegen, wenn der angegebene Verweis mehr als eine Liste oder Tabelle enthält, müssen Sie festlegen der <xref:System.Windows.Forms.BindingSource.DataMember%2A> Eigenschaft, um eine Zeichenfolge, die in der Liste an gebunden wird.</span><span class="sxs-lookup"><span data-stu-id="a7c82-317">When setting a data source, if the supplied reference contains more than one list or table, you must set the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property to a string that specifies the list to bind to.</span></span> <span data-ttu-id="a7c82-318">Diese Eigenschaft löst Einstellung der <xref:System.Windows.Forms.BindingSource.DataSourceChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a7c82-318">Setting this property raises the <xref:System.Windows.Forms.BindingSource.DataSourceChanged> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7c82-319">Wenn Sie alle Änderungen an den stellen die <xref:System.Windows.Forms.BindingSource.DataSource%2A> Eigenschaftswert, sollten Sie dies tun auf dem Benutzerthread Benutzeroberfläche (UI), um sicherzustellen, dass die Benutzeroberfläche die Änderungen wiedergibt.</span><span class="sxs-lookup"><span data-stu-id="a7c82-319">If you make any changes to the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property value, you should do so on the user interface (UI) thread to ensure that the UI reflects the changes.</span></span>  
  
 <span data-ttu-id="a7c82-320">Die <xref:System.Windows.Forms.BindingSource.DataSource%2A> Eigenschaft ist die Standardeigenschaft für die <xref:System.Windows.Forms.BindingSource> Klasse.</span><span class="sxs-lookup"><span data-stu-id="a7c82-320">The <xref:System.Windows.Forms.BindingSource.DataSource%2A> property is the default property for the <xref:System.Windows.Forms.BindingSource> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c82-321">Im folgenden Codebeispiel wird eine Liste mit Kunden zugewiesen der <xref:System.Windows.Forms.BindingSource.DataSource%2A> von einem <xref:System.Windows.Forms.BindingSource> Komponente.</span><span class="sxs-lookup"><span data-stu-id="a7c82-321">The following code example assigns a list of customers to the <xref:System.Windows.Forms.BindingSource.DataSource%2A> of a <xref:System.Windows.Forms.BindingSource> component.</span></span> <span data-ttu-id="a7c82-322">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels unter [wie: Auslösen von Änderungsbenachrichtigungen mithilfe der ResetItem-Methode](~/docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md).</span><span class="sxs-lookup"><span data-stu-id="a7c82-322">This code example is part of a larger example provided at [How to: Raise Change Notifications Using the BindingSource ResetItem Method](~/docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ResetItem#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.DataConnector.ResetItem#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.DataConnector.ResetItem#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataMember" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="T:System.ComponentModel.IListSource" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-323">Occurs when the <see cref="P:System.Windows.Forms.BindingSource.DataSource" /> property value has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-323">Occurs when the <see cref="P:System.Windows.Forms.BindingSource.DataSource" /> property value has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-324">Die <xref:System.Windows.Forms.BindingSource.DataSourceChanged> Ereignis tritt auf, nachdem die <xref:System.Windows.Forms.BindingSource.DataSource%2A> -Eigenschaft ändert.</span><span class="sxs-lookup"><span data-stu-id="a7c82-324">The <xref:System.Windows.Forms.BindingSource.DataSourceChanged> event occurs after the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property changes.</span></span>  
  
 <span data-ttu-id="a7c82-325">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a7c82-325">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="a7c82-326">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-326">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-327">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.BindingSource" /> and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-327">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.BindingSource" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-328">Diese Methode wird aufgerufen, der öffentlich `Dispose` Methode und die <xref:System.Object.Finalize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a7c82-328">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="a7c82-329">`Dispose` Ruft die geschützte `Dispose(Boolean)` Methode mit dem `disposing` Parametersatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="a7c82-329">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="a7c82-330"><xref:System.Object.Finalize%2A> Ruft `Dispose` mit `disposing` festgelegt `false`.</span><span class="sxs-lookup"><span data-stu-id="a7c82-330"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="a7c82-331">Wenn die `disposing` Parameter ist "true", gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte, die von diesem <xref:System.Windows.Forms.BindingSource> Verweise.</span><span class="sxs-lookup"><span data-stu-id="a7c82-331">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.BindingSource> references.</span></span> <span data-ttu-id="a7c82-332">Diese Methode ruft die `Dispose`-Methode aller Objekte auf, auf die verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="a7c82-332">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a7c82-333">
              <see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7c82-333">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="a7c82-334">Zum Überschreiben <see langword="Dispose(Boolean)" /> Achten Sie darauf, dass Sie nicht auf Objekte verweisen, die einen früheren Aufruf freigegeben wurden <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7c82-334">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="a7c82-335">Weitere Informationen zum Implementieren <see langword="Dispose(Boolean)" />, finden Sie unter [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7c82-335">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="a7c82-336">Weitere Informationen zu <see langword="Dispose" /> und <see cref="M:System.Object.Finalize" />, finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Überschreiben der Finalize-Methode](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7c82-336">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public void EndEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.EndEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-337">Applies pending changes to the underlying data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-337">Applies pending changes to the underlying data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-338">Wenn die <xref:System.Windows.Forms.BindingSource.EndEdit%2A> -Methode aufgerufen wird, werden alle ausstehenden Änderungen an der zugrunde liegenden Datenquelle angewendet.</span><span class="sxs-lookup"><span data-stu-id="a7c82-338">When the <xref:System.Windows.Forms.BindingSource.EndEdit%2A> method is called, all pending changes are applied to the underlying data source.</span></span>  
  
 <span data-ttu-id="a7c82-339">Diese Methode hat keine Auswirkungen, es sei denn, die von der Datenquelle enthaltenen Objekte implementieren die <xref:System.ComponentModel.IEditableObject> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="a7c82-339">This method has no effect unless the objects contained by the data source implement the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="a7c82-340">Wenn die Objekte nicht implementieren die <xref:System.ComponentModel.IEditableObject> -Schnittstelle, Änderungen an den Daten in der zugrunde liegenden Datenquelle sofort nach jeder Änderung kopiert werden.</span><span class="sxs-lookup"><span data-stu-id="a7c82-340">If the objects do not implement the <xref:System.ComponentModel.IEditableObject> interface, changes to the data are copied to the underlying data source immediately after each change.</span></span>  
  
 <span data-ttu-id="a7c82-341">Diese Methode löst die <xref:System.Windows.Forms.BindingSource.ListChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a7c82-341">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
        <altmember cref="M:System.Windows.Forms.BindingSource.CancelEdit" />
        <altmember cref="M:System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#EndNew(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public virtual string Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Filter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-342">Gets or sets the expression used to filter which rows are viewed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-342">Gets or sets the expression used to filter which rows are viewed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c82-343">Eine Zeichenfolge, die angibt, wie Zeilen gefiltert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-343">A string that specifies how rows are to be filtered.</span>
          </span>
          <span data-ttu-id="a7c82-344">Die Standardeinstellung ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-344">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-345">In der Regel in komplexen Datenbindungsszenarien verwendet die <xref:System.Windows.Forms.BindingSource.Filter%2A> -Eigenschaft können Sie eine Teilmenge der Anzeigen der <xref:System.Windows.Forms.BindingSource.DataSource%2A>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-345">Typically used in complex data-binding scenarios, the <xref:System.Windows.Forms.BindingSource.Filter%2A> property allows you to view a subset of the <xref:System.Windows.Forms.BindingSource.DataSource%2A>.</span></span> <span data-ttu-id="a7c82-346">Nur den zugrunde liegenden Listen implementiert, die <xref:System.ComponentModel.IBindingListView> -Schnittstelle Unterstützung filtern.</span><span class="sxs-lookup"><span data-stu-id="a7c82-346">Only underlying lists that implement the <xref:System.ComponentModel.IBindingListView> interface support filtering.</span></span>  
  
 <span data-ttu-id="a7c82-347">Wenn <xref:System.Windows.Forms.BindingSource.Filter%2A> nicht `null`die <xref:System.Windows.Forms.BindingSource> übergibt diese Eigenschaft auf die zugrunde liegende Liste.</span><span class="sxs-lookup"><span data-stu-id="a7c82-347">When <xref:System.Windows.Forms.BindingSource.Filter%2A> is not `null`, the <xref:System.Windows.Forms.BindingSource> passes this property to the underlying list.</span></span> <span data-ttu-id="a7c82-348">Wenn Sie diese Eigenschaft während der Initialisierung festgelegt, wird der Aufruf bis verschoben werden, nach dem Abschluss der Initialisierung.</span><span class="sxs-lookup"><span data-stu-id="a7c82-348">If you set this property during object initialization, the call will be deferred until after initialization is complete.</span></span>  
  
 <span data-ttu-id="a7c82-349">Geben Sie den Namen einer Spalte, gefolgt von einem Operator und einen Wert, nach dem gefiltert, um einen Filterwert zu bilden.</span><span class="sxs-lookup"><span data-stu-id="a7c82-349">To form a filter value, specify the name of a column followed by an operator and a value to filter on.</span></span> <span data-ttu-id="a7c82-350">Die akzeptierte Filtersyntax hängt von der zugrunde liegenden Datenquelle ab.</span><span class="sxs-lookup"><span data-stu-id="a7c82-350">The accepted filter syntax depends on the underlying data source.</span></span> <span data-ttu-id="a7c82-351">Wenn die zugrunde liegenden Datenquelle ist eine <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, oder <xref:System.Data.DataView>, können Sie angeben, boolesche Ausdrücken, die mit der Syntax für dokumentiert die <xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a7c82-351">If the underlying data source is a <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, or <xref:System.Data.DataView>, you can specify Boolean expressions using the syntax documented for the <xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="a7c82-352">Der Wert der <xref:System.Windows.Forms.BindingSource.Filter%2A> Eigenschaft wirkt sich auf den Wert des der <xref:System.Windows.Forms.BindingSource.Count%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a7c82-352">The value of the <xref:System.Windows.Forms.BindingSource.Filter%2A> property affects the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property.</span></span> <span data-ttu-id="a7c82-353">Darüber hinaus die <xref:System.Windows.Forms.BindingSource.Filter%2A> Wert wird beibehalten, wenn die Datenquelle ändert.</span><span class="sxs-lookup"><span data-stu-id="a7c82-353">Additionally, the <xref:System.Windows.Forms.BindingSource.Filter%2A> value will persist when the data source changes.</span></span> <span data-ttu-id="a7c82-354">Zum Beenden der Filterung der <xref:System.Windows.Forms.BindingSource.DataSource%2A>, rufen Sie die <xref:System.Windows.Forms.BindingSource.RemoveFilter%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a7c82-354">To stop filtering the <xref:System.Windows.Forms.BindingSource.DataSource%2A>, call the <xref:System.Windows.Forms.BindingSource.RemoveFilter%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c82-355">Das folgende Beispiel zeigt, wie Sie die <xref:System.Windows.Forms.BindingSource.Filter%2A> Eigenschaft mit einem <xref:System.Data.DataView>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-355">The following example shows how to use the <xref:System.Windows.Forms.BindingSource.Filter%2A> property with a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="a7c82-356">Um dieses Beispiel auszuführen, fügen Sie den Code in einem Windows Form, und rufen `PopulateDataViewAndFilter` aus den Konstruktor des Formulars oder <xref:System.Windows.Forms.Form.Load> Ereignisbehandlungsmethode.</span><span class="sxs-lookup"><span data-stu-id="a7c82-356">To run this example, paste the code into a Windows Form and call `PopulateDataViewAndFilter` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span> <span data-ttu-id="a7c82-357">Das Formular importieren sollte die <xref:System.Xml> und <xref:System.IO> Namespaces.</span><span class="sxs-lookup"><span data-stu-id="a7c82-357">Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Sort" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveFilter" />
        <altmember cref="P:System.ComponentModel.IBindingList.IsSorted" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Find">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-358">Find the specified item in the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-358">Find the specified item in the data source.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public virtual int Find (System.ComponentModel.PropertyDescriptor prop, object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Find(class System.ComponentModel.PropertyDescriptor prop, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Find (prop As PropertyDescriptor, key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Find(System::ComponentModel::PropertyDescriptor ^ prop, System::Object ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="prop">
          <span data-ttu-id="a7c82-359">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-359">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="a7c82-360">The value of <c>prop</c> to match.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-360">The value of <c>prop</c> to match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-361">Searches for the index of the item that has the given property descriptor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-361">Searches for the index of the item that has the given property descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a7c82-362">The zero-based index of the item that has the given value for <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-362">The zero-based index of the item that has the given value for <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-363">Diese Methode wird in der Regel in komplexen Datenbindungsszenarios verwendet, um die erste Zeile gesucht, in denen der Wert des Felds gemäß, den `prop` der Wert entspricht der `key` Parameter</span><span class="sxs-lookup"><span data-stu-id="a7c82-363">This method is typically used in complex data-binding cases to locate the first row where the value of the field specified by the `prop` parameter equals the value of the `key` parameter</span></span>  
  
 <span data-ttu-id="a7c82-364">Diese Methode leitet einfach die Anforderung an der zugrunde liegende Liste <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="a7c82-364">This method simply refers the request to the underlying list's <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="a7c82-365">Beispielsweise wird die zugrunde liegenden Datenquelle eine <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, oder <xref:System.Data.DataView>, diese Methode ruft die <xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="a7c82-365">For example, if the underlying data source is a <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, or <xref:System.Data.DataView>, this method calls the <xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="a7c82-366">Das Verhalten des <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType>, z. B. der Wert zurückgegeben, wenn kein übereinstimmendes Element gefunden wird, hängt von der Implementierung der Methode in der zugrunde liegenden Liste.</span><span class="sxs-lookup"><span data-stu-id="a7c82-366">The behavior of <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType>, such as the value returned if no matching item is found, depends on the implementation of the method in the underlying list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c82-367">Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Windows.Forms.BindingSource.Find%2A>-Methode verwenden.</span><span class="sxs-lookup"><span data-stu-id="a7c82-367">The following code example demonstrates how to use the <xref:System.Windows.Forms.BindingSource.Find%2A> method.</span></span> <span data-ttu-id="a7c82-368">Das vollständige Beispiel finden Sie im Übersichtsthema.</span><span class="sxs-lookup"><span data-stu-id="a7c82-368">For the complete example see the class overview topic.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a7c82-369">The underlying list is not of type <see cref="T:System.ComponentModel.IBindingList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-369">The underlying list is not of type <see cref="T:System.ComponentModel.IBindingList" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="M:System.Windows.Forms.BindingSource.IndexOf(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Contains(System.Object)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public int Find (string propertyName, object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Find(string propertyName, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Find(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (propertyName As String, key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Find(System::String ^ propertyName, System::Object ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="a7c82-370">The name of the property to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-370">The name of the property to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="a7c82-371">The value of the item with the specified <c>propertyName</c> to find.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-371">The value of the item with the specified <c>propertyName</c> to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-372">Returns the index of the item in the list with the specified property name and value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-372">Returns the index of the item in the list with the specified property name and value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a7c82-373">The zero-based index of the item with the specified property name and value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-373">The zero-based index of the item with the specified property name and value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-374">Die <xref:System.Windows.Forms.BindingSource.Find%2A> Methode kann nur verwendet werden, wenn die zugrunde liegende Liste eine <xref:System.ComponentModel.IBindingList> Suche implementiert.</span><span class="sxs-lookup"><span data-stu-id="a7c82-374">The <xref:System.Windows.Forms.BindingSource.Find%2A> method can only be used when the underlying list is an <xref:System.ComponentModel.IBindingList> with searching implemented.</span></span> <span data-ttu-id="a7c82-375">Diese Methode leitet einfach die Anforderung an der zugrunde liegende Liste <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="a7c82-375">This method simply refers the request to the underlying list's <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="a7c82-376">Z. B. wenn die zugrunde liegenden Datenquelle ist eine <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, oder <xref:System.Data.DataView>, diese Methode konvertiert `propertyName` auf eine <xref:System.ComponentModel.PropertyDescriptor> und ruft die <xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a7c82-376">For example, if the underlying data source is a <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, or <xref:System.Data.DataView>, this method converts `propertyName` to a <xref:System.ComponentModel.PropertyDescriptor> and calls the <xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A> method.</span></span> <span data-ttu-id="a7c82-377">Das Verhalten des <xref:System.Windows.Forms.BindingSource.Find%2A>, z. B. der Wert zurückgegeben, wenn kein übereinstimmendes Element gefunden wird, hängt von der Implementierung der Methode in der zugrunde liegenden Liste.</span><span class="sxs-lookup"><span data-stu-id="a7c82-377">The behavior of <xref:System.Windows.Forms.BindingSource.Find%2A>, such as the value returned if no matching item is found, depends on the implementation of the method in the underlying list.</span></span>  
  
 <span data-ttu-id="a7c82-378">Die Eigenschaft Name-Vergleich wird die Groß-/Kleinschreibung.</span><span class="sxs-lookup"><span data-stu-id="a7c82-378">The property name comparison is case-insensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c82-379">Das folgende Beispiel zeigt, wie Sie die <xref:System.Windows.Forms.BindingSource.Find%2A> Methode mit einem <xref:System.Data.DataView>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-379">The following example shows how to use the <xref:System.Windows.Forms.BindingSource.Find%2A> method with a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="a7c82-380">Um dieses Beispiel auszuführen, fügen Sie den Code in einem Windows Form, und rufen `PopulateDataViewAndFind` aus den Konstruktor des Formulars oder <xref:System.Windows.Forms.Form.Load> Ereignisbehandlungsmethode.</span><span class="sxs-lookup"><span data-stu-id="a7c82-380">To run this example, paste the code into a Windows Form and call `PopulateDataViewAndFind` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span> <span data-ttu-id="a7c82-381">Das Formular importieren sollte die <xref:System.Xml> und <xref:System.IO> Namespaces.</span><span class="sxs-lookup"><span data-stu-id="a7c82-381">Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a7c82-382">The underlying list is not a <see cref="T:System.ComponentModel.IBindingList" /> with searching functionality implemented.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-382">The underlying list is not a <see cref="T:System.ComponentModel.IBindingList" /> with searching functionality implemented.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a7c82-383">
            <paramref name="propertyName" /> does not match a property in the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-383">
              <paramref name="propertyName" /> does not match a property in the list.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-384">Retrieves an enumerator for the <see cref="P:System.Windows.Forms.BindingSource.List" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-384">Retrieves an enumerator for the <see cref="P:System.Windows.Forms.BindingSource.List" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a7c82-385">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="P:System.Windows.Forms.BindingSource.List" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-385">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="P:System.Windows.Forms.BindingSource.List" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemProperties (listAccessors As PropertyDescriptor()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">
          <span data-ttu-id="a7c82-386">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to find in the list as bindable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-386">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to find in the list as bindable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-387">Retrieves an array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects representing the bindable properties of the data source list type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-387">Retrieves an array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects representing the bindable properties of the data source list type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a7c82-388">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represents the properties on this list type used to bind data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-388">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represents the properties on this list type used to bind data.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ListBindingHelper" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="public virtual string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetListName(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetListName (listAccessors As PropertyDescriptor()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetListName(cli::array &lt;System::ComponentModel::PropertyDescriptor ^&gt; ^ listAccessors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">
          <span data-ttu-id="a7c82-389">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to find in the list as bindable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-389">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to find in the list as bindable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-390">Gets the name of the list supplying data for the binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-390">Gets the name of the list supplying data for the binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a7c82-391">The name of the list supplying the data for binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-391">The name of the list supplying the data for binding.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ListBindingHelper" />
      </Docs>
    </Member>
    <Member MemberName="GetRelatedCurrencyManager">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.CurrencyManager GetRelatedCurrencyManager (string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.CurrencyManager GetRelatedCurrencyManager(string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRelatedCurrencyManager (dataMember As String) As CurrencyManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::CurrencyManager ^ GetRelatedCurrencyManager(System::String ^ dataMember);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.ICurrencyManagerProvider.GetRelatedCurrencyManager(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CurrencyManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataMember">
          <span data-ttu-id="a7c82-392">The name of column or list, within the data source to retrieve the currency manager for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-392">The name of column or list, within the data source to retrieve the currency manager for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-393">Gets the related currency manager for the specified data member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-393">Gets the related currency manager for the specified data member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a7c82-394">The related <see cref="T:System.Windows.Forms.CurrencyManager" /> for the specified data member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-394">The related <see cref="T:System.Windows.Forms.CurrencyManager" /> for the specified data member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-395">Wenn `dataMember` ist `null` oder eine leere Zeichenfolge (""), <xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A> gibt die hauptwährung-Manager; Andernfalls überprüft, ob eine andere <xref:System.Windows.Forms.BindingSource> an den angegebenen Datenmember gebunden, und gibt seine Currency Manager zurück.</span><span class="sxs-lookup"><span data-stu-id="a7c82-395">If `dataMember` is `null` or an empty string (""), <xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A> returns the main currency manager; otherwise, it checks for another <xref:System.Windows.Forms.BindingSource> bound to the specified data member and returns its currency manager.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a7c82-396">The <see cref="T:System.Object" /> to locate in the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-396">The <see cref="T:System.Object" /> to locate in the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span>
          </span>
          <span data-ttu-id="a7c82-397">The value can be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-397">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-398">Searches for the specified object and returns the index of the first occurrence within the entire list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-398">Searches for the specified object and returns the index of the first occurrence within the entire list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a7c82-399">The zero-based index of the first occurrence of the <paramref name="value" /> parameter; otherwise, -1 if <paramref name="value" /> is not in the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-399">The zero-based index of the first occurrence of the <paramref name="value" /> parameter; otherwise, -1 if <paramref name="value" /> is not in the list.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-400">Obwohl die Implementierung der zugrunde liegenden Liste abhängt `IndexOf` -Methode, in der Regel die folgenden Merkmale treffen:</span><span class="sxs-lookup"><span data-stu-id="a7c82-400">Although the implementation is dependent on the underlying list's `IndexOf` method, typically the following characteristics apply:</span></span>  
  
-   <span data-ttu-id="a7c82-401">Die <xref:System.Windows.Forms.BindingSource.List%2A> durchsucht wird, beginnend ab dem ersten Element und endet beim letzten Element.</span><span class="sxs-lookup"><span data-stu-id="a7c82-401">The <xref:System.Windows.Forms.BindingSource.List%2A> is searched starting at the first element and ending at the last element.</span></span>  
  
-   <span data-ttu-id="a7c82-402">Die zugrunde liegende Methode führt eine lineare Suche; Daher ist die durchschnittliche Ausführungszeit proportional zum Wert der <xref:System.Windows.Forms.BindingSource.Count%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a7c82-402">The underlying method performs a linear search; therefore, the average execution time is proportional to the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property.</span></span>  
  
-   <span data-ttu-id="a7c82-403">Die zugrunde liegende Methode bestimmt die Gleichheit durch Aufrufen der <xref:System.Object.Equals%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a7c82-403">The underlying method determines equality by calling the <xref:System.Object.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Contains(System.Object)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a7c82-404">The zero-based index at which <c>value</c> should be inserted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-404">The zero-based index at which <c>value</c> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a7c82-405">The <see cref="T:System.Object" /> to insert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-405">The <see cref="T:System.Object" /> to insert.</span>
          </span>
          <span data-ttu-id="a7c82-406">The value can be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-406">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-407">Inserts an item into the list at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-407">Inserts an item into the list at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-408">Diese Methode löst die <xref:System.Windows.Forms.BindingSource.ListChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a7c82-408">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a7c82-409">
            <paramref name="index" /> is less than zero or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-409">
              <paramref name="index" /> is less than zero or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a7c82-410">The list is read-only or has a fixed size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-410">The list is read-only or has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsReadOnly" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsFixedSize" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
      </Docs>
    </Member>
    <Member MemberName="IsBindingSuspended">
      <MemberSignature Language="C#" Value="public bool IsBindingSuspended { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBindingSuspended" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsBindingSuspended" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBindingSuspended As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBindingSuspended { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-411">Gets a value indicating whether the list binding is suspended.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-411">Gets a value indicating whether the list binding is suspended.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c82-412">
            <see langword="true" /> um anzugeben, dass die Bindung aufgehoben ist. andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-412">
              <see langword="true" /> to indicate the binding is suspended; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-413">Gets a value indicating whether the underlying list has a fixed size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-413">Gets a value indicating whether the underlying list has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c82-414">
            <see langword="true" /> Wenn die zugrunde liegende Liste eine feste Größe aufweist; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-414">
              <see langword="true" /> if the underlying list has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-415">Wenn die Liste eine feste Größe verfügt, lässt nicht das Hinzufügen oder Entfernen von Elementen nach dem die Liste erstellt wurde, aber Sie können vorhandene Elemente ändern.</span><span class="sxs-lookup"><span data-stu-id="a7c82-415">If the list has a fixed size, it does not allow the addition or removal of elements after the list has been created, but you can modify existing elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-416">Gets a value indicating whether the underlying list is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-416">Gets a value indicating whether the underlying list is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c82-417">
            <see langword="true" />, wenn die Liste schreibgeschützt ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-417">
              <see langword="true" /> if the list is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-418">Eine Liste mit nur-Lese lässt das Hinzufügen, entfernen oder Ändern von Listenelementen nach der Erstellung der Liste nicht zu.</span><span class="sxs-lookup"><span data-stu-id="a7c82-418">A list that is read-only does not allow the addition, removal, or modification of any list items after the list is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSorted">
      <MemberSignature Language="C#" Value="public virtual bool IsSorted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSorted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsSorted" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSorted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSorted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-419">Gets a value indicating whether the items in the underlying list are sorted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-419">Gets a value indicating whether the items in the underlying list are sorted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c82-420">
            <see langword="true" /> Wenn die Liste ist ein <see cref="T:System.ComponentModel.IBindingList" /> und sortiert ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-420">
              <see langword="true" /> if the list is an <see cref="T:System.ComponentModel.IBindingList" /> and is sorted; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-421"><xref:System.Windows.Forms.BindingSource.IsSorted%2A> Gibt immer `false` , wenn die Liste nicht ist ein <xref:System.ComponentModel.IBindingList>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-421"><xref:System.Windows.Forms.BindingSource.IsSorted%2A> always returns `false` if the list is not an <xref:System.ComponentModel.IBindingList>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-422">Gets a value indicating whether access to the collection is synchronized (thread safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-422">Gets a value indicating whether access to the collection is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c82-423">
            <see langword="true" /> um anzugeben, dass die Liste synchronisiert ist. andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-423">
              <see langword="true" /> to indicate the list is synchronized; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a7c82-424">The zero-based index of the element to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-424">The zero-based index of the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-425">Gets or sets the list element at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-425">Gets or sets the list element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c82-426">Das Element am angegebenen Index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-426">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-427">Die <xref:System.Windows.Forms.BindingSource.Item%2A> Eigenschaft darstellt, den Indexer für diese Klasse.</span><span class="sxs-lookup"><span data-stu-id="a7c82-427">The <xref:System.Windows.Forms.BindingSource.Item%2A> property represents the indexer for this class.</span></span> <span data-ttu-id="a7c82-428">Er akzeptiert `null` als gültigen Wert und lässt doppelte Elemente in der Liste.</span><span class="sxs-lookup"><span data-stu-id="a7c82-428">It accepts `null` as a valid value and allows duplicate items within the list.</span></span>  
  
 <span data-ttu-id="a7c82-429">Ein Wert löst festlegen die <xref:System.Windows.Forms.BindingSource.ListChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a7c82-429">Setting a value will raise the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a7c82-430">
            <paramref name="index" /> is less than zero or is equal to or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-430">
              <paramref name="index" /> is less than zero or is equal to or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public System.Collections.IList List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList List" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.List" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property List As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ List { System::Collections::IList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-431">Gets the list that the connector is bound to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-431">Gets the list that the connector is bound to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c82-432">Ein <see cref="T:System.Collections.IList" /> , die die Liste darstellt, oder <see langword="null" /> es ist keine zugrunde liegende Liste zugeordnete <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-432">An <see cref="T:System.Collections.IList" /> that represents the list, or <see langword="null" /> if there is no underlying list associated with this <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-433">Die <xref:System.Windows.Forms.BindingSource> Klasse einheitlich behandelt verschiedene Datenquellen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-433">The <xref:System.Windows.Forms.BindingSource> class uniformly handles different data sources.</span></span> <span data-ttu-id="a7c82-434">Im Idealfall der <xref:System.Windows.Forms.BindingSource.List%2A> Eigenschaft sollte festgelegt werden, um eine allgemeine <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-434">Ideally the <xref:System.Windows.Forms.BindingSource.List%2A> property should be set to a general <xref:System.Collections.IList>.</span></span> <span data-ttu-id="a7c82-435">Jedoch kann manchmal notwendig, diese Eigenschaft auf einen spezifischeren Typ umgewandelt sein.</span><span class="sxs-lookup"><span data-stu-id="a7c82-435">However, sometimes it may be necessary to cast this property to a more specific type.</span></span> <span data-ttu-id="a7c82-436">Die folgende Tabelle zeigt den zugrunde liegenden "List", den Typ oder den Wert der Datenquelle abhängig.</span><span class="sxs-lookup"><span data-stu-id="a7c82-436">The following table shows the underlying list type, which depends on the type or value of the data source.</span></span>  
  
|<span data-ttu-id="a7c82-437">Datenquellentyp</span><span class="sxs-lookup"><span data-stu-id="a7c82-437">Data source type</span></span>|<span data-ttu-id="a7c82-438">Beschreibung der zugrunde liegenden Liste</span><span class="sxs-lookup"><span data-stu-id="a7c82-438">Underlying list description</span></span>|  
|----------------------|---------------------------------|  
|<span data-ttu-id="a7c82-439"><xref:System.Windows.Forms.BindingSource.DataSource%2A> und <xref:System.Windows.Forms.BindingSource.DataMember%2A> sind `null`</span><span class="sxs-lookup"><span data-stu-id="a7c82-439"><xref:System.Windows.Forms.BindingSource.DataSource%2A> and <xref:System.Windows.Forms.BindingSource.DataMember%2A> are `null`</span></span>|<span data-ttu-id="a7c82-440">Ein leerer <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-440">An empty <xref:System.Collections.ArrayList>.</span></span>|  
|<span data-ttu-id="a7c82-441"><xref:System.Windows.Forms.BindingSource.DataSource%2A> ist `null`, aber <xref:System.Windows.Forms.BindingSource.DataMember%2A> nicht `null`</span><span class="sxs-lookup"><span data-stu-id="a7c82-441"><xref:System.Windows.Forms.BindingSource.DataSource%2A> is `null`, but <xref:System.Windows.Forms.BindingSource.DataMember%2A> is not `null`</span></span>|<span data-ttu-id="a7c82-442">None; Fehler beim Abrufen der <xref:System.Windows.Forms.BindingSource.List%2A> löst eine <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-442">None; an attempt to get the <xref:System.Windows.Forms.BindingSource.List%2A> will throw an <xref:System.ArgumentException>.</span></span>|  
|<span data-ttu-id="a7c82-443">Ein <xref:System.Array> Instanz</span><span class="sxs-lookup"><span data-stu-id="a7c82-443">An <xref:System.Array> instance</span></span>|<span data-ttu-id="a7c82-444">Eine <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-444">An <xref:System.Array>.</span></span>|  
|<span data-ttu-id="a7c82-445">Ein <xref:System.ComponentModel.IListSource> Instanz</span><span class="sxs-lookup"><span data-stu-id="a7c82-445">An <xref:System.ComponentModel.IListSource> instance</span></span>|<span data-ttu-id="a7c82-446">Der Rückgabewert eines Aufrufs der <xref:System.ComponentModel.IListSource.GetList%2A> -Methode dieses <xref:System.ComponentModel.IListSource> Instanz.</span><span class="sxs-lookup"><span data-stu-id="a7c82-446">The return value from a call to the <xref:System.ComponentModel.IListSource.GetList%2A> method of this <xref:System.ComponentModel.IListSource> instance.</span></span>|  
|<span data-ttu-id="a7c82-447">Ein <xref:System.ComponentModel.IBindingList> Instanz</span><span class="sxs-lookup"><span data-stu-id="a7c82-447">An <xref:System.ComponentModel.IBindingList> instance</span></span>|<span data-ttu-id="a7c82-448">Eine <xref:System.ComponentModel.IBindingList>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-448">An <xref:System.ComponentModel.IBindingList>.</span></span>|  
|<span data-ttu-id="a7c82-449">Ein <xref:System.Collections.IList> Instanz</span><span class="sxs-lookup"><span data-stu-id="a7c82-449">An <xref:System.Collections.IList> instance</span></span>|<span data-ttu-id="a7c82-450">Eine <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-450">An <xref:System.Collections.IList>.</span></span>|  
|<span data-ttu-id="a7c82-451">Nicht<xref:System.Collections.IList> Instanz vom Typ "T"</span><span class="sxs-lookup"><span data-stu-id="a7c82-451">A non-<xref:System.Collections.IList> instance of type "T"</span></span>|<span data-ttu-id="a7c82-452">Ein <xref:System.ComponentModel.BindingList%601> mit je einem Element.</span><span class="sxs-lookup"><span data-stu-id="a7c82-452">A <xref:System.ComponentModel.BindingList%601> with one element.</span></span>|  
|<span data-ttu-id="a7c82-453">Ein <xref:System.ComponentModel.ICustomTypeDescriptor> Instanz</span><span class="sxs-lookup"><span data-stu-id="a7c82-453">An <xref:System.ComponentModel.ICustomTypeDescriptor> instance</span></span>|<span data-ttu-id="a7c82-454">Ein <xref:System.Collections.ArrayList> mit je einem Element.</span><span class="sxs-lookup"><span data-stu-id="a7c82-454">An <xref:System.Collections.ArrayList> with one element.</span></span>|  
|<span data-ttu-id="a7c82-455">ein <xref:System.Collections.IEnumerable></span><span class="sxs-lookup"><span data-stu-id="a7c82-455">An <xref:System.Collections.IEnumerable></span></span>|<span data-ttu-id="a7c82-456">Ein <xref:System.Collections.ArrayList> mit den Elementen, die kopiert haben.</span><span class="sxs-lookup"><span data-stu-id="a7c82-456">An <xref:System.Collections.ArrayList> with the elements copied over.</span></span>|  
|<span data-ttu-id="a7c82-457">Die <xref:System.Array> mit geben <xref:System.Windows.Forms.BindingSource.DataMember%2A> des Elements geben Sie "T"</span><span class="sxs-lookup"><span data-stu-id="a7c82-457">The <xref:System.Array> type with <xref:System.Windows.Forms.BindingSource.DataMember%2A> of item type "T"</span></span>|<span data-ttu-id="a7c82-458">Ein <xref:System.ComponentModel.BindingList%601>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-458">A <xref:System.ComponentModel.BindingList%601>.</span></span>|  
|<span data-ttu-id="a7c82-459">Ein <xref:System.Type> darstellt, die eine <xref:System.ComponentModel.IListSource> oder <xref:System.ComponentModel.ITypedList></span><span class="sxs-lookup"><span data-stu-id="a7c82-459">A <xref:System.Type> that represents an <xref:System.ComponentModel.IListSource> or <xref:System.ComponentModel.ITypedList></span></span>|<span data-ttu-id="a7c82-460">Eine Instanz erstellt, die durch einen Aufruf der <xref:System.Activator.CreateInstance%28System.Type%29> Methode der <xref:System.Activator> Klasse.</span><span class="sxs-lookup"><span data-stu-id="a7c82-460">An instance created by a call to the <xref:System.Activator.CreateInstance%28System.Type%29> method of the <xref:System.Activator> class.</span></span> <span data-ttu-id="a7c82-461">Ein <xref:System.NotSupportedException> ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="a7c82-461">A <xref:System.NotSupportedException> may be thrown.</span></span>|  
|<span data-ttu-id="a7c82-462">Die <xref:System.Collections.IList> mit geben <xref:System.Windows.Forms.BindingSource.DataMember%2A> des Elements geben Sie "T"</span><span class="sxs-lookup"><span data-stu-id="a7c82-462">The <xref:System.Collections.IList> type with <xref:System.Windows.Forms.BindingSource.DataMember%2A> of item type "T"</span></span><br /><br /> <span data-ttu-id="a7c82-463">- oder - </span><span class="sxs-lookup"><span data-stu-id="a7c82-463">-or-</span></span><br /><br /> <span data-ttu-id="a7c82-464">Nicht<xref:System.Collections.IList> Typ</span><span class="sxs-lookup"><span data-stu-id="a7c82-464">A non-<xref:System.Collections.IList> type</span></span>|<span data-ttu-id="a7c82-465">Ein <xref:System.ComponentModel.BindingList%601>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-465">A <xref:System.ComponentModel.BindingList%601>.</span></span>|  
|<span data-ttu-id="a7c82-466">Die <xref:System.ComponentModel.ICustomTypeDescriptor> Typ</span><span class="sxs-lookup"><span data-stu-id="a7c82-466">The <xref:System.ComponentModel.ICustomTypeDescriptor> type</span></span>|<span data-ttu-id="a7c82-467">None; Fehler beim Abrufen der <xref:System.Windows.Forms.BindingSource.List%2A> löst eine <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-467">None; an attempt to get the <xref:System.Windows.Forms.BindingSource.List%2A> will throw an <xref:System.NotSupportedException>.</span></span>|  
  
 <span data-ttu-id="a7c82-468">Wenn der Typ abgerufen wird die <xref:System.Collections.IList> -Schnittstelle, die zugrunde liegende Auflistung kann komplexer sein und z. B. ein <xref:System.Collections.ArrayList> oder <xref:System.Data.DataView> Klasse.</span><span class="sxs-lookup"><span data-stu-id="a7c82-468">If the type retrieved is the <xref:System.Collections.IList> interface, the underlying collection may be more complex, such as an <xref:System.Collections.ArrayList> or <xref:System.Data.DataView> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c82-469">Das folgende Codebeispiel veranschaulicht die <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, und <xref:System.Windows.Forms.BindingSource.Count%2A> Elemente.</span><span class="sxs-lookup"><span data-stu-id="a7c82-469">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, and <xref:System.Windows.Forms.BindingSource.Count%2A> members.</span></span> <span data-ttu-id="a7c82-470">Um dieses Beispiel auszuführen, fügen Sie den Code in ein Formular, enthält ein <xref:System.Windows.Forms.BindingSource> mit dem Namen `BindingSource1`, zwei Bezeichnungen, die mit dem Namen `label1` und `label2`, und eine Schaltfläche mit dem Namen `button1`.</span><span class="sxs-lookup"><span data-stu-id="a7c82-470">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1`, two labels named `label1` and `label2`, and a button named `button1`.</span></span> <span data-ttu-id="a7c82-471">Zuordnen der `button1_Click` Methode mit dem <xref:System.Windows.Forms.Control.Click> -Ereignis für `button1`.</span><span class="sxs-lookup"><span data-stu-id="a7c82-471">Associate the `button1_Click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="a7c82-472">Visual Basic-Benutzer müssen einen Verweis auf "System.Data.dll" hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-472">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ListChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.ListChangedEventHandler ListChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.ListChangedEventHandler ListChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.ListChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ListChanged As ListChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::ComponentModel::ListChangedEventHandler ^ ListChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ListChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-473">Occurs when the underlying list changes or an item in the list changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-473">Occurs when the underlying list changes or an item in the list changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-474">Die <xref:System.Windows.Forms.BindingSource.ListChanged> Ereignis tritt auf, wenn eine der Mitgliedschaft oder die Metadaten der zugrunde liegenden Liste dargestellt Änderung durch die <xref:System.Windows.Forms.BindingSource.List%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a7c82-474">The <xref:System.Windows.Forms.BindingSource.ListChanged> event occurs when there is a change to the membership or metadata of the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property.</span></span> <span data-ttu-id="a7c82-475">Dieses Ereignis wird beispielsweise ausgelöst, wenn Elemente hinzugefügt, entfernt oder verschoben, oder die <xref:System.Windows.Forms.BindingSource.DataSource%2A> oder <xref:System.Windows.Forms.BindingSource.DataMember%2A> Eigenschaften ändern.</span><span class="sxs-lookup"><span data-stu-id="a7c82-475">For example, this event is raised when items are added, removed, or moved, or the <xref:System.Windows.Forms.BindingSource.DataSource%2A> or <xref:System.Windows.Forms.BindingSource.DataMember%2A> properties change.</span></span> <span data-ttu-id="a7c82-476">Die Werte der <xref:System.Windows.Forms.BindingSource.Sort%2A> und <xref:System.Windows.Forms.BindingSource.Filter%2A> Eigenschaften bleiben erhalten, wenn dieses Ereignis auftritt.</span><span class="sxs-lookup"><span data-stu-id="a7c82-476">The values of the <xref:System.Windows.Forms.BindingSource.Sort%2A> and <xref:System.Windows.Forms.BindingSource.Filter%2A> properties will persist when this event occurs.</span></span>  
  
 <span data-ttu-id="a7c82-477">Dieses Ereignis kann vollständig unterdrückt werden, durch Festlegen der <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> Eigenschaft `false`.</span><span class="sxs-lookup"><span data-stu-id="a7c82-477">This event can be completely suppressed by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`.</span></span> <span data-ttu-id="a7c82-478">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a7c82-478">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c82-479">Das folgende Codebeispiel veranschaulicht die Behandlung der <xref:System.Windows.Forms.BindingSource.ListChanged> -Ereignis für die <xref:System.Windows.Forms.BindingSource> Komponente feststellen, ob die <xref:System.Windows.Forms.BindingSource> zugrunde liegenden Komponentenliste geändert wird.</span><span class="sxs-lookup"><span data-stu-id="a7c82-479">The following code example demonstrates handling the <xref:System.Windows.Forms.BindingSource.ListChanged> event of the <xref:System.Windows.Forms.BindingSource> component to detect when the <xref:System.Windows.Forms.BindingSource> component's underlying list is changed.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ItemChangedEventMode#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/CPP/form1.cpp#9)]
 [!code-csharp[System.Windows.Forms.DataConnector.ItemChangedEventMode#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/CS/form1.cs#9)]
 [!code-vb[System.Windows.Forms.DataConnector.ItemChangedEventMode#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ItemChangedEventMode/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.RaiseListChangedEvents" />
        <altmember cref="T:System.ComponentModel.ListChangedType" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
      </Docs>
    </Member>
    <Member MemberName="MoveFirst">
      <MemberSignature Language="C#" Value="public void MoveFirst ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveFirst() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.MoveFirst" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveFirst ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveFirst();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-480">Moves to the first item in the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-480">Moves to the first item in the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-481">Ändert den aktuellen Wert der <xref:System.Windows.Forms.BindingSource.Position%2A> -Eigenschaft auf 0, der das erste Element in der zugrunde liegenden Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="a7c82-481">Changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to 0, the first item in the underlying data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c82-482">Das folgende Codebeispiel veranschaulicht die <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, und <xref:System.Windows.Forms.BindingSource.Position%2A> Elemente.</span><span class="sxs-lookup"><span data-stu-id="a7c82-482">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, and <xref:System.Windows.Forms.BindingSource.Position%2A> members.</span></span> <span data-ttu-id="a7c82-483">Um dieses Beispiel auszuführen, fügen Sie den Code in ein Formular, importiert der <xref:System.Drawing.Drawing2D> Namespace und enthält eine <xref:System.Windows.Forms.BindingSource> mit dem Namen `BindingSource1` und eine Schaltfläche mit dem Namen `button1`.</span><span class="sxs-lookup"><span data-stu-id="a7c82-483">To run this example, paste the code into a form that imports the <xref:System.Drawing.Drawing2D> namespace and contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1` and a button named `button1`.</span></span> <span data-ttu-id="a7c82-484">Zuordnen der `Form1_Load` und `Form1_Paint` Methoden mit den <xref:System.Windows.Forms.Form.Load> und <xref:System.Windows.Forms.Control.Paint> Ereignisse für das Formular, und ordnen die `button1_click` Methode mit der <xref:System.Windows.Forms.Control.Click> -Ereignis für `button1`.</span><span class="sxs-lookup"><span data-stu-id="a7c82-484">Associate the `Form1_Load` and `Form1_Paint` methods with the <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Control.Paint> events for the form, and associate the `button1_click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="a7c82-485">Visual Basic-Benutzer müssen einen Verweis auf "System.Data.dll" hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-485">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/cpp/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveNext" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MovePrevious" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveLast" />
      </Docs>
    </Member>
    <Member MemberName="MoveLast">
      <MemberSignature Language="C#" Value="public void MoveLast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveLast() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.MoveLast" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveLast ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveLast();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-486">Moves to the last item in the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-486">Moves to the last item in the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-487">Ändert den aktuellen Wert von der <xref:System.Windows.Forms.BindingSource.Position%2A> Eigenschaft auf den Index des letzten Elements in der zugrunde liegenden Datenquelle, die gleich dem Wert des ist die <xref:System.Windows.Forms.BindingSource.Count%2A> Eigenschaft minus 1.</span><span class="sxs-lookup"><span data-stu-id="a7c82-487">Changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to the index of the last item in the underlying data source, which is equal to the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property minus 1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveNext" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MovePrevious" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveFirst" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public void MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveNext ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveNext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-488">Moves to the next item in the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-488">Moves to the next item in the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-489">Ändert den aktuellen Wert der <xref:System.Windows.Forms.BindingSource.Position%2A> Eigenschaft zum nächsten Element in der zugrunde liegenden Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="a7c82-489">Changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to the next item in the underlying data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c82-490">Das folgende Codebeispiel veranschaulicht die <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, und <xref:System.Windows.Forms.BindingSource.Position%2A> Elemente.</span><span class="sxs-lookup"><span data-stu-id="a7c82-490">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, and <xref:System.Windows.Forms.BindingSource.Position%2A> members.</span></span> <span data-ttu-id="a7c82-491">Um dieses Beispiel auszuführen, fügen Sie den Code in ein Formular, importiert der <xref:System.Drawing.Drawing2D> Namespace und enthält eine <xref:System.Windows.Forms.BindingSource> mit dem Namen `BindingSource1` und eine Schaltfläche mit dem Namen `button1`.</span><span class="sxs-lookup"><span data-stu-id="a7c82-491">To run this example, paste the code into a form that imports the <xref:System.Drawing.Drawing2D> namespace and contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1` and a button named `button1`.</span></span> <span data-ttu-id="a7c82-492">Zuordnen der `Form1_Load` und `Form1_Paint` Methoden mit den <xref:System.Windows.Forms.Form.Load> und <xref:System.Windows.Forms.Control.Paint> Ereignisse für das Formular, und ordnen die `button1_click` Methode mit der <xref:System.Windows.Forms.Control.Click> -Ereignis für `button1`.</span><span class="sxs-lookup"><span data-stu-id="a7c82-492">Associate the `Form1_Load` and `Form1_Paint` methods with the <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Control.Paint> events for the form, and associate the `button1_click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="a7c82-493">Visual Basic-Benutzer müssen einen Verweis auf "System.Data.dll" hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-493">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/cpp/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveLast" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MovePrevious" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveFirst" />
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public void MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public Sub MovePrevious ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MovePrevious();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-494">Moves to the previous item in the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-494">Moves to the previous item in the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-495">Diese Methode ändert den aktuellen Wert der <xref:System.Windows.Forms.BindingSource.Position%2A> Eigenschaft zum vorherigen Element in der zugrunde liegenden Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="a7c82-495">This method changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to the previous item in the underlying data source.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveLast" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveNext" />
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveFirst" />
      </Docs>
    </Member>
    <Member MemberName="OnAddingNew">
      <MemberSignature Language="C#" Value="protected virtual void OnAddingNew (System.ComponentModel.AddingNewEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAddingNew(class System.ComponentModel.AddingNewEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAddingNew (e As AddingNewEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAddingNew(System::ComponentModel::AddingNewEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AddingNewEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a7c82-496">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-496">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-497">Raises the <see cref="E:System.Windows.Forms.BindingSource.AddingNew" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-497">Raises the <see cref="E:System.Windows.Forms.BindingSource.AddingNew" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-498">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-498">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="a7c82-499">Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a7c82-499">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="a7c82-500">Mit der <xref:System.Windows.Forms.BindingSource.OnAddingNew%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="a7c82-500">The <xref:System.Windows.Forms.BindingSource.OnAddingNew%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="a7c82-501">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="a7c82-501">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a7c82-502">Wenn Sie <see cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7c82-502">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingSource.AddingNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBindingComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnBindingComplete (System.Windows.Forms.BindingCompleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBindingComplete(class System.Windows.Forms.BindingCompleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBindingComplete (e As BindingCompleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBindingComplete(System::Windows::Forms::BindingCompleteEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.BindingCompleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a7c82-503">A <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-503">A <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-504">Raises the <see cref="E:System.Windows.Forms.BindingSource.BindingComplete" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-504">Raises the <see cref="E:System.Windows.Forms.BindingSource.BindingComplete" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-505">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-505">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="a7c82-506">Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a7c82-506">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="a7c82-507">Mit der <xref:System.Windows.Forms.BindingSource.OnBindingComplete%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="a7c82-507">The <xref:System.Windows.Forms.BindingSource.OnBindingComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="a7c82-508">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="a7c82-508">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a7c82-509">Wenn Sie <see cref="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7c82-509">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnCurrentChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCurrentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCurrentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCurrentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCurrentChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a7c82-510">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-510">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-511">Raises the <see cref="E:System.Windows.Forms.BindingSource.CurrentChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-511">Raises the <see cref="E:System.Windows.Forms.BindingSource.CurrentChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-512">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a7c82-512">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="a7c82-513">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-513">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="a7c82-514">Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a7c82-514">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="a7c82-515">Mit der <xref:System.Windows.Forms.BindingSource.OnCurrentChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="a7c82-515">The <xref:System.Windows.Forms.BindingSource.OnCurrentChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="a7c82-516">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="a7c82-516">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a7c82-517">Wenn Sie <see cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7c82-517">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnCurrentItemChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCurrentItemChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCurrentItemChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCurrentItemChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCurrentItemChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a7c82-518">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-518">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-519">Raises the <see cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-519">Raises the <see cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-520">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-520">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="a7c82-521">Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a7c82-521">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="a7c82-522">Mit der <xref:System.Windows.Forms.BindingSource.OnCurrentItemChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="a7c82-522">The <xref:System.Windows.Forms.BindingSource.OnCurrentItemChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="a7c82-523">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="a7c82-523">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a7c82-524">Wenn Sie <see cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7c82-524">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDataError">
      <MemberSignature Language="C#" Value="protected virtual void OnDataError (System.Windows.Forms.BindingManagerDataErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataError(class System.Windows.Forms.BindingManagerDataErrorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataError (e As BindingManagerDataErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataError(System::Windows::Forms::BindingManagerDataErrorEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.BindingManagerDataErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a7c82-525">A <see cref="T:System.Windows.Forms.BindingManagerDataErrorEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-525">A <see cref="T:System.Windows.Forms.BindingManagerDataErrorEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-526">Raises the <see cref="E:System.Windows.Forms.BindingSource.DataError" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-526">Raises the <see cref="E:System.Windows.Forms.BindingSource.DataError" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-527">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-527">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="a7c82-528">Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a7c82-528">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="a7c82-529">Mit der <xref:System.Windows.Forms.BindingSource.OnDataError%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="a7c82-529">The <xref:System.Windows.Forms.BindingSource.OnDataError%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="a7c82-530">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="a7c82-530">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a7c82-531">Wenn Sie <see cref="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7c82-531">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDataMemberChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataMemberChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataMemberChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataMemberChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataMemberChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a7c82-532">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-532">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-533">Raises the <see cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-533">Raises the <see cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-534">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-534">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="a7c82-535">Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a7c82-535">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="a7c82-536">Mit der <xref:System.Windows.Forms.BindingSource.OnDataMemberChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="a7c82-536">The <xref:System.Windows.Forms.BindingSource.OnDataMemberChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="a7c82-537">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="a7c82-537">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a7c82-538">Wenn Sie <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7c82-538">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
            <span data-ttu-id="a7c82-539">Mit der <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" />-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7c82-539">The <see cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" /> method also allows derived classes to handle the event without attaching a delegate.</span>
            </span>
            <span data-ttu-id="a7c82-540">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7c82-540">This is the preferred technique for handling the event in a derived class.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingSource.DataMemberChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.DataMember" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a7c82-541">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-541">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-542">Raises the <see cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-542">Raises the <see cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-543">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-543">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="a7c82-544">Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a7c82-544">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="a7c82-545">Mit der <xref:System.Windows.Forms.BindingSource.OnDataSourceChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="a7c82-545">The <xref:System.Windows.Forms.BindingSource.OnDataSourceChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="a7c82-546">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="a7c82-546">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a7c82-547">Wenn Sie <see cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7c82-547">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.DataSource" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnListChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnListChanged (System.ComponentModel.ListChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnListChanged(class System.ComponentModel.ListChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnListChanged (e As ListChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnListChanged(System::ComponentModel::ListChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.ListChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a7c82-548">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-548">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-549">Raises the <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-549">Raises the <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-550">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-550">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="a7c82-551">Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a7c82-551">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="a7c82-552">Mit der <xref:System.Windows.Forms.BindingSource.OnListChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="a7c82-552">The <xref:System.Windows.Forms.BindingSource.OnListChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="a7c82-553">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="a7c82-553">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a7c82-554">Wenn Sie <see cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7c82-554">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.DataSourceChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
      </Docs>
    </Member>
    <Member MemberName="OnPositionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPositionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPositionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPositionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPositionChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a7c82-555">A <see cref="T:System.ComponentModel.ListChangedEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-555">A <see cref="T:System.ComponentModel.ListChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-556">Raises the <see cref="E:System.Windows.Forms.BindingSource.PositionChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-556">Raises the <see cref="E:System.Windows.Forms.BindingSource.PositionChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-557">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-557">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="a7c82-558">Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a7c82-558">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="a7c82-559">Mit der <xref:System.Windows.Forms.BindingSource.OnPositionChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="a7c82-559">The <xref:System.Windows.Forms.BindingSource.OnPositionChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="a7c82-560">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="a7c82-560">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a7c82-561">Wenn Sie <see cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7c82-561">When overriding <see cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingSource.PositionChanged" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public int Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Position { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-562">Gets or sets the index of the current item in the underlying list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-562">Gets or sets the index of the current item in the underlying list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c82-563">Ein nullbasierter Index, der die Position des aktuellen Elements in der zugrunde liegenden Liste angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-563">A zero-based index that specifies the position of the current item in the underlying list.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-564">Beim Festlegen der <xref:System.Windows.Forms.BindingSource.Position%2A> Eigenschaft außerhalb des gültigen Bereichs Werte werden wie folgt behandelt:</span><span class="sxs-lookup"><span data-stu-id="a7c82-564">When setting the <xref:System.Windows.Forms.BindingSource.Position%2A> property, out-of-range values are treated in the following manner:</span></span>  
  
-   <span data-ttu-id="a7c82-565">Negative Werte werden als 0 behandelt.</span><span class="sxs-lookup"><span data-stu-id="a7c82-565">Negative values are treated as 0.</span></span>  
  
-   <span data-ttu-id="a7c82-566">Werte größer als oder gleich <xref:System.Windows.Forms.BindingSource.Count%2A> werden behandelt, als <xref:System.Windows.Forms.BindingSource.Count%2A> minus 1.</span><span class="sxs-lookup"><span data-stu-id="a7c82-566">Values greater than or equal to <xref:System.Windows.Forms.BindingSource.Count%2A> are treated as <xref:System.Windows.Forms.BindingSource.Count%2A> minus 1.</span></span>  
  
 <span data-ttu-id="a7c82-567">Ändern der <xref:System.Windows.Forms.BindingSource.Position%2A> Eigenschaft passt die <xref:System.Windows.Forms.BindingSource.Current%2A> Eigenschaft entsprechend.</span><span class="sxs-lookup"><span data-stu-id="a7c82-567">Changing the <xref:System.Windows.Forms.BindingSource.Position%2A> property will adjust the <xref:System.Windows.Forms.BindingSource.Current%2A> property likewise.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c82-568">Das folgende Codebeispiel veranschaulicht die <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, und <xref:System.Windows.Forms.BindingSource.Position%2A> Elemente.</span><span class="sxs-lookup"><span data-stu-id="a7c82-568">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, and <xref:System.Windows.Forms.BindingSource.Position%2A> members.</span></span> <span data-ttu-id="a7c82-569">Um dieses Beispiel auszuführen, fügen Sie den Code in ein Formular, importiert der <xref:System.Drawing.Drawing2D> Namespace und enthält eine <xref:System.Windows.Forms.BindingSource> mit dem Namen `BindingSource1` und eine Schaltfläche mit dem Namen `button1`.</span><span class="sxs-lookup"><span data-stu-id="a7c82-569">To run this example, paste the code into a form that imports the <xref:System.Drawing.Drawing2D> namespace and contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1` and a button named `button1`.</span></span> <span data-ttu-id="a7c82-570">Zuordnen der `Form1_Load` und `Form1_Paint` Methoden mit den <xref:System.Windows.Forms.Form.Load> und <xref:System.Windows.Forms.Control.Paint> Ereignisse für das Formular, und ordnen die `button1_click` Methode mit der <xref:System.Windows.Forms.Control.Click> -Ereignis für `button1`.</span><span class="sxs-lookup"><span data-stu-id="a7c82-570">Associate the `Form1_Load` and `Form1_Paint` methods with the <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Control.Paint> events for the form, and associate the `button1_click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="a7c82-571">Visual Basic-Benutzer müssen einen Verweis auf "System.Data.dll" hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-571">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/cpp/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.DataConnectorCurrent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorCurrent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Current" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
      </Docs>
    </Member>
    <Member MemberName="PositionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PositionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PositionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingSource.PositionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PositionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PositionChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-572">Occurs after the value of the <see cref="P:System.Windows.Forms.BindingSource.Position" /> property has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-572">Occurs after the value of the <see cref="P:System.Windows.Forms.BindingSource.Position" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-573">Die <xref:System.Windows.Forms.BindingSource.PositionChanged> Ereignis tritt auf, nachdem die <xref:System.Windows.Forms.BindingSource.Position%2A> -Eigenschaft geändert hat.</span><span class="sxs-lookup"><span data-stu-id="a7c82-573">The <xref:System.Windows.Forms.BindingSource.PositionChanged> event occurs after the <xref:System.Windows.Forms.BindingSource.Position%2A> property has changed.</span></span>  
  
 <span data-ttu-id="a7c82-574">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a7c82-574">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="M:System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RaiseListChangedEvents">
      <MemberSignature Language="C#" Value="public bool RaiseListChangedEvents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RaiseListChangedEvents" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.RaiseListChangedEvents" />
      <MemberSignature Language="VB.NET" Value="Public Property RaiseListChangedEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RaiseListChangedEvents { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-575">Gets or sets a value indicating whether <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> events should be raised.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-575">Gets or sets a value indicating whether <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> events should be raised.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c82-576">
            <see langword="true" /> Wenn <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> Ereignisse ausgelöst werden soll; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-576">
              <see langword="true" /> if <see cref="E:System.Windows.Forms.BindingSource.ListChanged" /> events should be raised; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a7c82-577">Die Standardeinstellung ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-577">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-578">Wenn die <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> Eigenschaft `false`, angehalten, das Auslösen von <xref:System.Windows.Forms.BindingSource.ListChanged> Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="a7c82-578">When the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property is `false`, it suspends the raising of <xref:System.Windows.Forms.BindingSource.ListChanged> events.</span></span> <span data-ttu-id="a7c82-579">Dieses Ereignis zeigt an, dass die gebundene Liste in irgendeiner Form, einschließlich hinzufügen, löschen, einfügen oder Ändern von Elementen geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="a7c82-579">This event indicates that the bound list has been modified in some way, including adding, deleting, inserting, or modifying items.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="E:System.Windows.Forms.BindingSource.CurrentItemChanged" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a7c82-580">The item to remove from the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-580">The item to remove from the underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-581">Removes the specified item from the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-581">Removes the specified item from the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-582">Die <xref:System.Windows.Forms.BindingSource.Remove%2A> Methode bewirkt, dass die Liste zu suchende der `value` Parameter.</span><span class="sxs-lookup"><span data-stu-id="a7c82-582">The <xref:System.Windows.Forms.BindingSource.Remove%2A> method causes the list to be searched for the `value` parameter.</span></span> <span data-ttu-id="a7c82-583">Wenn Sie gefunden wurde, versucht diese Methode entfernt das Element aus der <xref:System.Windows.Forms.BindingSource.List%2A>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-583">If found, this method will attempt to remove the item from the <xref:System.Windows.Forms.BindingSource.List%2A>.</span></span> <span data-ttu-id="a7c82-584">Dieser Versuch schlägt fehl, wenn die Liste eine feste Größe aufweist oder schreibgeschützt ist.</span><span class="sxs-lookup"><span data-stu-id="a7c82-584">This attempt will fail if the list has a fixed size or is read-only.</span></span> <span data-ttu-id="a7c82-585">Diese beiden Bedingungen getestet werden können, mit der <xref:System.Windows.Forms.BindingSource.IsFixedSize%2A> und <xref:System.Windows.Forms.BindingSource.IsReadOnly%2A> Eigenschaften bzw..</span><span class="sxs-lookup"><span data-stu-id="a7c82-585">These two conditions can be tested with the <xref:System.Windows.Forms.BindingSource.IsFixedSize%2A> and <xref:System.Windows.Forms.BindingSource.IsReadOnly%2A> properties, respectively.</span></span>  
  
 <span data-ttu-id="a7c82-586">Diese Methode löst die <xref:System.Windows.Forms.BindingSource.ListChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a7c82-586">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a7c82-587">The underlying list has a fixed size or is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-587">The underlying list has a fixed size or is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsFixedSize" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsReadOnly" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a7c82-588">The zero-based index of the item to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-588">The zero-based index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-589">Removes the item at the specified index in the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-589">Removes the item at the specified index in the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-590">Diese beiden Bedingungen getestet werden können, mit der <xref:System.Windows.Forms.BindingSource.IsFixedSize%2A> und <xref:System.Windows.Forms.BindingSource.IsReadOnly%2A> Eigenschaften bzw..</span><span class="sxs-lookup"><span data-stu-id="a7c82-590">These two conditions can be tested with the <xref:System.Windows.Forms.BindingSource.IsFixedSize%2A> and <xref:System.Windows.Forms.BindingSource.IsReadOnly%2A> properties, respectively.</span></span>  
  
 <span data-ttu-id="a7c82-591">Diese Methode löst die <xref:System.Windows.Forms.BindingSource.ListChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a7c82-591">This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c82-592">Das folgende Codebeispiel veranschaulicht die <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, und <xref:System.Windows.Forms.BindingSource.Count%2A> Elemente.</span><span class="sxs-lookup"><span data-stu-id="a7c82-592">The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, and <xref:System.Windows.Forms.BindingSource.Count%2A> members.</span></span> <span data-ttu-id="a7c82-593">Um dieses Beispiel auszuführen, fügen Sie den Code in ein Formular, enthält ein <xref:System.Windows.Forms.BindingSource> mit dem Namen `BindingSource1`, zwei Bezeichnungen, die mit dem Namen `label1` und `label2`, und eine Schaltfläche mit dem Namen `button1`.</span><span class="sxs-lookup"><span data-stu-id="a7c82-593">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1`, two labels named `label1` and `label2`, and a button named `button1`.</span></span> <span data-ttu-id="a7c82-594">Zuordnen der `button1_Click` Methode mit dem <xref:System.Windows.Forms.Control.Click> -Ereignis für `button1`.</span><span class="sxs-lookup"><span data-stu-id="a7c82-594">Associate the `button1_Click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`.</span></span> <span data-ttu-id="a7c82-595">Visual Basic-Benutzer müssen einen Verweis auf "System.Data.dll" hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-595">Visual Basic users will need to add a reference to System.Data.dll.</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.DataConnectorFilterAndSort#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorFilterAndSort/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a7c82-596">
            <paramref name="index" /> is less than zero or greater than the value of the <see cref="P:System.Windows.Forms.BindingSource.Count" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-596">
              <paramref name="index" /> is less than zero or greater than the value of the <see cref="P:System.Windows.Forms.BindingSource.Count" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a7c82-597">The underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property is read-only or has a fixed size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-597">The underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property is read-only or has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Remove(System.Object)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsFixedSize" />
        <altmember cref="P:System.Windows.Forms.BindingSource.IsReadOnly" />
        <altmember cref="M:System.Windows.Forms.BindingSource.IndexOf(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="RemoveCurrent">
      <MemberSignature Language="C#" Value="public void RemoveCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveCurrent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveCurrent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-598">Removes the current item from the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-598">Removes the current item from the list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-599">Die <xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A> Methode entspricht der <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a7c82-599">The <xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A> method is equivalent to the <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a7c82-600">The <see cref="P:System.Windows.Forms.BindingSource.AllowRemove" /> property is <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-600">The <see cref="P:System.Windows.Forms.BindingSource.AllowRemove" /> property is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a7c82-601">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-601">-or-</span>
          </span>
          <span data-ttu-id="a7c82-602">
            <see cref="P:System.Windows.Forms.BindingSource.Position" /> is less than zero or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-602">
              <see cref="P:System.Windows.Forms.BindingSource.Position" /> is less than zero or greater than <see cref="P:System.Windows.Forms.BindingSource.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a7c82-603">The underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property is read-only or has a fixed size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-603">The underlying list represented by the <see cref="P:System.Windows.Forms.BindingSource.List" /> property is read-only or has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveFilter">
      <MemberSignature Language="C#" Value="public virtual void RemoveFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveFilter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.RemoveFilter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveFilter ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveFilter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-604">Removes the filter associated with the <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-604">Removes the filter associated with the <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-605">Die <xref:System.Windows.Forms.BindingSource.RemoveFilter%2A> Methode leitet die Anforderung an der zugrunde liegende Liste <xref:System.ComponentModel.IBindingListView.RemoveFilter%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="a7c82-605">The <xref:System.Windows.Forms.BindingSource.RemoveFilter%2A> method refers the request to the underlying list's <xref:System.ComponentModel.IBindingListView.RemoveFilter%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="a7c82-606">Listet nur implementiert, <xref:System.ComponentModel.IBindingListView> Filtern zu unterstützen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-606">Only lists that implement <xref:System.ComponentModel.IBindingListView> support filtering.</span></span>  
  
 <span data-ttu-id="a7c82-607">Standardmäßig wird ein Aufruf dieser Methode entspricht einem Festlegen der <xref:System.Windows.Forms.BindingSource.Filter%2A> Eigenschaft `null`.</span><span class="sxs-lookup"><span data-stu-id="a7c82-607">By default, a call to this method is equivalent to setting the <xref:System.Windows.Forms.BindingSource.Filter%2A> property to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a7c82-608">The underlying list does not support filtering.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-608">The underlying list does not support filtering.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.Filter" />
      </Docs>
    </Member>
    <Member MemberName="RemoveSort">
      <MemberSignature Language="C#" Value="public virtual void RemoveSort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveSort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.RemoveSort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveSort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveSort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-609">Removes the sort associated with the <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-609">Removes the sort associated with the <see cref="T:System.Windows.Forms.BindingSource" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-610">Die <xref:System.Windows.Forms.BindingSource.RemoveSort%2A> Methode leitet die Anforderung an der zugrunde liegende Liste <xref:System.ComponentModel.IBindingList.RemoveSort%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="a7c82-610">The <xref:System.Windows.Forms.BindingSource.RemoveSort%2A> method refers the request to the underlying list's <xref:System.ComponentModel.IBindingList.RemoveSort%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="a7c82-611">Listet nur implementiert, <xref:System.ComponentModel.IBindingList> unterstützen die Sortierung.</span><span class="sxs-lookup"><span data-stu-id="a7c82-611">Only lists that implement <xref:System.ComponentModel.IBindingList> support sorting.</span></span>  
  
 <span data-ttu-id="a7c82-612">Standardmäßig wird ein Aufruf dieser Methode entspricht einem Festlegen der <xref:System.Windows.Forms.BindingSource.Sort%2A> Eigenschaft `null`.</span><span class="sxs-lookup"><span data-stu-id="a7c82-612">By default, a call to this method is equivalent to setting the <xref:System.Windows.Forms.BindingSource.Sort%2A> property to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a7c82-613">The underlying list does not support sorting.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-613">The underlying list does not support sorting.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingSource.Sort" />
      </Docs>
    </Member>
    <Member MemberName="ResetAllowNew">
      <MemberSignature Language="C#" Value="public virtual void ResetAllowNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetAllowNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResetAllowNew" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetAllowNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetAllowNew();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-614">Reinitializes the <see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-614">Reinitializes the <see cref="P:System.Windows.Forms.BindingSource.AllowNew" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-615">Die <xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A> Methode initialisiert die <xref:System.Windows.Forms.BindingSource.AllowNew%2A> -Eigenschaft reflektiert den Wert des entsprechenden <xref:System.Windows.Forms.BindingSource.AllowNew%2A> Eigenschaft in der zugrunde liegenden Liste.</span><span class="sxs-lookup"><span data-stu-id="a7c82-615">The <xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A> method reinitializes the <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property to reflect the value of the corresponding <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property in the underlying list.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.AllowNew" />
      </Docs>
    </Member>
    <Member MemberName="ResetBindings">
      <MemberSignature Language="C#" Value="public void ResetBindings (bool metadataChanged);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetBindings(bool metadataChanged) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResetBindings(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetBindings (metadataChanged As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetBindings(bool metadataChanged);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataChanged" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadataChanged">
          <span data-ttu-id="a7c82-616">
            <see langword="true" /> if the data schema has changed; <see langword="false" /> if only values have changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-616">
              <see langword="true" /> if the data schema has changed; <see langword="false" /> if only values have changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-617">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread all the items in the list and refresh their displayed values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-617">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread all the items in the list and refresh their displayed values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-618">Die <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> Methode dass alle gebundenen Steuerelementen der <xref:System.Windows.Forms.BindingSource> , deren Werte zu aktualisieren.</span><span class="sxs-lookup"><span data-stu-id="a7c82-618">The <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> method informs all controls bound to the <xref:System.Windows.Forms.BindingSource> to refresh their values.</span></span> <span data-ttu-id="a7c82-619">Hierfür durch das Auslösen die Methode der <xref:System.Windows.Forms.BindingSource.ListChanged> Ereignis mindestens einmal; das `metaDataChanged` Parameter gibt die Art der zugrunde liegenden Änderung an.</span><span class="sxs-lookup"><span data-stu-id="a7c82-619">The method does this by raising the <xref:System.Windows.Forms.BindingSource.ListChanged> event at least once; the `metaDataChanged` parameter indicates the nature of the underlying change.</span></span>  
  
-   <span data-ttu-id="a7c82-620">Ein `metaDataChanged` Wert `true` gibt an, dass das Datenschema des <xref:System.Windows.Forms.BindingSource> hat sich geändert.</span><span class="sxs-lookup"><span data-stu-id="a7c82-620">A `metaDataChanged` value of `true` indicates that the data schema of <xref:System.Windows.Forms.BindingSource> has changed.</span></span> <span data-ttu-id="a7c82-621">Ein <xref:System.Windows.Forms.BindingSource.ListChanged> Ereignis wird mit <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> festgelegt <xref:System.ComponentModel.ListChangedType.PropertyDescriptorChanged?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-621">A <xref:System.Windows.Forms.BindingSource.ListChanged> event is raised with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> set to <xref:System.ComponentModel.ListChangedType.PropertyDescriptorChanged?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="a7c82-622">Ein `metaDataChanged` Wert `false` gibt an, dass nur die Werte von einem oder mehreren Elementen geändert haben.</span><span class="sxs-lookup"><span data-stu-id="a7c82-622">A `metaDataChanged` value of `false` indicates that only the values of one or more items have changed.</span></span>  
  
 <span data-ttu-id="a7c82-623">Unabhängig vom Wert der `metaDataChanged`, <xref:System.Windows.Forms.BindingSource.ListChanged> Ereignis wird mit <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> festgelegt <xref:System.ComponentModel.ListChangedType.Reset?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-623">Regardless of the value of `metaDataChanged`, a <xref:System.Windows.Forms.BindingSource.ListChanged> event is raised with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> set to <xref:System.ComponentModel.ListChangedType.Reset?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a7c82-624">Daher Aufrufen <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> mit einem Parameter des `true` löst zwei <xref:System.Windows.Forms.BindingSource.ListChanged> Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="a7c82-624">As a consequence, calling <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> with a parameter of `true` will raise two <xref:System.Windows.Forms.BindingSource.ListChanged> events.</span></span>  
  
 <span data-ttu-id="a7c82-625"><xref:System.Windows.Forms.BindingSource.ResetBindings%2A> wird automatisch aufgerufen werden, wenn ein weiteres Element wichtige Änderungen auf dem Datenbindung wie z. B. Einstellung verursacht die <xref:System.Windows.Forms.BindingSource.DataSource%2A> oder <xref:System.Windows.Forms.BindingSource.DataMember%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="a7c82-625"><xref:System.Windows.Forms.BindingSource.ResetBindings%2A> is automatically called whenever another member makes major changes to the data-binding, such as setting the <xref:System.Windows.Forms.BindingSource.DataSource%2A> or <xref:System.Windows.Forms.BindingSource.DataMember%2A> properties.</span></span> <span data-ttu-id="a7c82-626">Allerdings kann der Programmierer diese Methode auch explizit aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-626">However, the programmer can also call this method explicitly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c82-627">Im folgenden Codebeispiel wird mit einem <xref:System.Windows.Forms.BindingSource> -Komponente zum Binden von einer Arrayliste der keine änderungsbenachrichtigung bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="a7c82-627">The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind an array list, which does not provide change notification.</span></span> <span data-ttu-id="a7c82-628">Ein Element aus der Liste entfernt wird, und die gebundene Steuerelemente werden durch Aufrufen der Änderung benachrichtigt die <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a7c82-628">An item is removed from the list, and the bound controls are notified of the change by calling the <xref:System.Windows.Forms.BindingSource.ResetBindings%2A> method.</span></span> <span data-ttu-id="a7c82-629">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels [Vorgehensweise: widerspiegeln von Datenquellenaktualisierungen in einem Windows Forms-Steuerelement mit der BindingSource-Komponente](~/docs/framework/winforms/controls/reflect-data-source-updates-in-a-wf-control-with-the-bindingsource.md).</span><span class="sxs-lookup"><span data-stu-id="a7c82-629">This code example is part of a larger example provided in [How to: Reflect Data Source Updates in a Windows Forms Control with the BindingSource](~/docs/framework/winforms/controls/reflect-data-source-updates-in-a-wf-control-with-the-bindingsource.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ResetBindings#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetBindings/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.DataConnector.ResetBindings#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetBindings/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.DataConnector.ResetBindings#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetBindings/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
        <altmember cref="M:System.Windows.Forms.BindingSource.ResetItem(System.Int32)" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="T:System.ComponentModel.ListChangedType" />
      </Docs>
    </Member>
    <Member MemberName="ResetCurrentItem">
      <MemberSignature Language="C#" Value="public void ResetCurrentItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCurrentItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResetCurrentItem" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCurrentItem ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCurrentItem();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-630">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread the currently selected item and refresh its displayed value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-630">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread the currently selected item and refresh its displayed value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-631">Aufrufen dieser Methode führt dazu, dass die <xref:System.Windows.Forms.BindingSource.ListChanged> -Ereignis auftritt, wobei das geänderte Element an der aktuellen Position.</span><span class="sxs-lookup"><span data-stu-id="a7c82-631">Calling this method will cause the <xref:System.Windows.Forms.BindingSource.ListChanged> event to occur, specifying the item changed at the current position.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetItem">
      <MemberSignature Language="C#" Value="public void ResetItem (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetItem(int32 itemIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResetItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetItem (itemIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetItem(int itemIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex">
          <span data-ttu-id="a7c82-632">The zero-based index of the item that has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-632">The zero-based index of the item that has changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-633">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread the item at the specified index, and refresh its displayed value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-633">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread the item at the specified index, and refresh its displayed value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-634">Die <xref:System.Windows.Forms.BindingSource.ResetItem%2A> -Methode benachrichtigt alle Steuerelemente, die an das Element am angegebenen gebunden <xref:System.Windows.Forms.BindingSource.Position%2A> , deren Werte zu aktualisieren.</span><span class="sxs-lookup"><span data-stu-id="a7c82-634">The <xref:System.Windows.Forms.BindingSource.ResetItem%2A> method notifies all controls bound to the item at the specified <xref:System.Windows.Forms.BindingSource.Position%2A> to refresh their values.</span></span> <span data-ttu-id="a7c82-635">Die Methode wird durch das Auslösen der <xref:System.Windows.Forms.BindingSource.ListChanged> Ereignis "mit" <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> festgelegt <xref:System.ComponentModel.ListChangedType.ItemChanged?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-635">The method does this by raising the <xref:System.Windows.Forms.BindingSource.ListChanged> event with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=nameWithType> set to <xref:System.ComponentModel.ListChangedType.ItemChanged?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a7c82-636"><xref:System.Windows.Forms.BindingSource.ResetItem%2A> wird automatisch aufgerufen, wenn der Wert eines einzelnen Elements geändert werden.</span><span class="sxs-lookup"><span data-stu-id="a7c82-636"><xref:System.Windows.Forms.BindingSource.ResetItem%2A> is automatically called whenever changes are made to the value of an individual item.</span></span> <span data-ttu-id="a7c82-637">Allerdings kann der Programmierer diese Methode auch explizit aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-637">However, the programmer can also call this method explicitly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c82-638">Im folgenden Codebeispiel wird mit einem <xref:System.Windows.Forms.BindingSource> -Komponente zum Binden einer Liste, um eine <xref:System.Windows.Forms.DataGridView> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="a7c82-638">The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind a list to a <xref:System.Windows.Forms.DataGridView> control.</span></span> <span data-ttu-id="a7c82-639">Die Liste löst keine änderungsbenachrichtigungen aus, damit die <xref:System.Windows.Forms.BindingSource.ResetItem%2A> Methode auf der <xref:System.Windows.Forms.BindingSource> dient zum Auslösen der <xref:System.Windows.Forms.BindingSource.ListChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="a7c82-639">The list does not raise change notifications, so the <xref:System.Windows.Forms.BindingSource.ResetItem%2A> method on the <xref:System.Windows.Forms.BindingSource> is used to raise the <xref:System.Windows.Forms.BindingSource.ListChanged> event.</span></span> <span data-ttu-id="a7c82-640">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels [wie: Auslösen von Änderungsbenachrichtigungen mithilfe der ResetItem-Methode](~/docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md).</span><span class="sxs-lookup"><span data-stu-id="a7c82-640">This code example is part of a larger example provided in [How to: Raise Change Notifications Using the BindingSource ResetItem Method](~/docs/framework/winforms/controls/how-to-raise-change-notifications-using-the-bindingsource-resetitem-method.md).</span></span>  
  
 [!code-cpp[System.Windows.Forms.DataConnector.ResetItem#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.DataConnector.ResetItem#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.DataConnector.ResetItem#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnector.ResetItem/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.ResetBindings(System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
        <altmember cref="E:System.Windows.Forms.BindingSource.ListChanged" />
        <altmember cref="T:System.ComponentModel.ListChangedType" />
      </Docs>
    </Member>
    <Member MemberName="ResumeBinding">
      <MemberSignature Language="C#" Value="public void ResumeBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResumeBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.ResumeBinding" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResumeBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResumeBinding();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-641">Resumes data binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-641">Resumes data binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-642"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> und <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> sind zwei Methoden, die die temporären Unterbrechung und Wiederaufnahme der Datenbindung in einem einfachen Datenbindungsszenario zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-642"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of data binding in a simple-binding scenario.</span></span> <span data-ttu-id="a7c82-643">Sie würden Datenbindung in der Regel anhalten, wenn der Benutzer zugelassen werden muss, um mehrere Änderungen an Datenfelder vorzunehmen, bevor die Überprüfung erfolgt.</span><span class="sxs-lookup"><span data-stu-id="a7c82-643">You would typically suspend data binding if the user must be allowed to make several edits to data fields before validation occurs.</span></span> <span data-ttu-id="a7c82-644">Z. B. würde Wenn ein Feld in Übereinstimmung mit einer Sekunde geändert werden muss, jedoch überprüft das erste Feld das zweite Feld fehlerhaft sein.</span><span class="sxs-lookup"><span data-stu-id="a7c82-644">For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7c82-645">Mit <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> verhindert, dass Änderungen in der Datenquelle bis gepusht <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> aufgerufen wird, aber tatsächlich verhindert keine Ereignisse auftreten.</span><span class="sxs-lookup"><span data-stu-id="a7c82-645">Using <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> prevents changes from being pushed into the data source until <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> is called, but does not actually prevent any events from occurring.</span></span> <span data-ttu-id="a7c82-646">Steuerelemente, die komplexe Datenbindung, z. B. verwenden die <xref:System.Windows.Forms.DataGridView> steuern, aktualisieren Sie ihre Werte basierend auf Change-Ereignissen, wie z. B. die <xref:System.Windows.Forms.CurrencyManager.ListChanged> Ereignis, deshalb wird beim Aufrufen <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> wird nicht verhindern, dass sie Änderungen an der Datenquelle empfangen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-646">Controls that use complex data binding, such as the <xref:System.Windows.Forms.DataGridView> control, update their values based on change events such as the <xref:System.Windows.Forms.CurrencyManager.ListChanged> event, so calling <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> will not prevent them from receiving changes to the data source.</span></span> <span data-ttu-id="a7c82-647">Aus diesem Grund dies <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> und <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> dienen zur Verwendung mit einfach gebundenen Steuerelementen, wie z. B. die <xref:System.Windows.Forms.TextBox> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="a7c82-647">For this reason, this <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are designed for use with simple-bound controls, such as the <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="a7c82-648">Alternativ können diese Methoden in einem komplexen Datenbindungsszenario Wenn unterdrückt <xref:System.Windows.Forms.BindingSource.ListChanged> Ereignisse durch Festlegen der <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> Eigenschaft `false`.</span><span class="sxs-lookup"><span data-stu-id="a7c82-648">Alternatively you can use these methods in a complex binding scenario if you suppress <xref:System.Windows.Forms.BindingSource.ListChanged> events by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.CurrencyManager.ResumeBinding" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public string Sort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Sort" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Property Sort As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Sort { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-649">Gets or sets the column names used for sorting, and the sort order for viewing the rows in the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-649">Gets or sets the column names used for sorting, and the sort order for viewing the rows in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c82-650">Eine Zeichenfolge mit Berücksichtigung der Groß- und Kleinschreibung, die den Spaltennamen enthält, und auf die "ASC" (für aufsteigend) oder "DESC" (für absteigend) folgt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-650">A case-sensitive string containing the column name followed by "ASC" (for ascending) or "DESC" (for descending).</span>
          </span>
          <span data-ttu-id="a7c82-651">Die Standardeinstellung ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-651">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-652">Die <xref:System.Windows.Forms.BindingSource.Sort%2A> Eigenschaft ist die Groß-/Kleinschreibung Zeichenfolge, der angibt, die Spaltennamen, die zum Sortieren der Zeilen sowie die Sortierreihenfolge an.</span><span class="sxs-lookup"><span data-stu-id="a7c82-652">The <xref:System.Windows.Forms.BindingSource.Sort%2A> property is a case-sensitive string that specifies the column names used to sort the rows, along with the sort direction.</span></span> <span data-ttu-id="a7c82-653">Spalten werden standardmäßig in aufsteigender Reihenfolge sortiert.</span><span class="sxs-lookup"><span data-stu-id="a7c82-653">Columns are sorted ascending by default.</span></span> <span data-ttu-id="a7c82-654">Mehrere Spalten können werden durch Kommas getrennt, z. B. `"State, ZipCode DESC"`.</span><span class="sxs-lookup"><span data-stu-id="a7c82-654">Multiple columns can be separated by commas, such as `"State, ZipCode DESC"`.</span></span>  
  
 <span data-ttu-id="a7c82-655">Damit die Sortierung unterstützt, muss die zugrunde liegende Liste implementieren die <xref:System.ComponentModel.IBindingList> oder <xref:System.ComponentModel.IBindingListView> Schnittstellen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-655">To support sorting, the underlying list must implement the <xref:System.ComponentModel.IBindingList> or <xref:System.ComponentModel.IBindingListView> interfaces.</span></span> <span data-ttu-id="a7c82-656">Diese Funktion kann abgefragt werden, über die <xref:System.Windows.Forms.BindingSource.SupportsSorting%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a7c82-656">This capability can be queried through the <xref:System.Windows.Forms.BindingSource.SupportsSorting%2A> property.</span></span> <span data-ttu-id="a7c82-657">Die mehrspaltige Sortierung ist verfügbar, wenn die <xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A> Eigenschaft ist `true`.</span><span class="sxs-lookup"><span data-stu-id="a7c82-657">Multicolumn sorting is available when the <xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="a7c82-658">Festlegen der <xref:System.Windows.Forms.BindingSource.Sort%2A> Eigenschaft ändert sich je nach Typ die interne Liste:</span><span class="sxs-lookup"><span data-stu-id="a7c82-658">Setting the <xref:System.Windows.Forms.BindingSource.Sort%2A> property will change the internal list depending on its type:</span></span>  
  
-   <span data-ttu-id="a7c82-659">Wenn die Liste vom Typ <xref:System.ComponentModel.IBindingList>, <xref:System.ComponentModel.IBindingList.SortProperty%2A?displayProperty=nameWithType> und <xref:System.ComponentModel.IBindingList.SortDirection%2A?displayProperty=nameWithType> Eigenschaften werden in der internen Liste festgelegt.</span><span class="sxs-lookup"><span data-stu-id="a7c82-659">If the list is of type <xref:System.ComponentModel.IBindingList>, the <xref:System.ComponentModel.IBindingList.SortProperty%2A?displayProperty=nameWithType> and <xref:System.ComponentModel.IBindingList.SortDirection%2A?displayProperty=nameWithType> properties are set in the internal list.</span></span>  
  
-   <span data-ttu-id="a7c82-660">Wenn die Liste vom Typ <xref:System.ComponentModel.IBindingListView>die <xref:System.ComponentModel.IBindingListView.SortDescriptions%2A?displayProperty=nameWithType> festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="a7c82-660">If the list is of type <xref:System.ComponentModel.IBindingListView>, the <xref:System.ComponentModel.IBindingListView.SortDescriptions%2A?displayProperty=nameWithType> property is set.</span></span>  
  
 <span data-ttu-id="a7c82-661">Sortiereigenschaften für die interne Liste werden nur geändert, wenn die Sortierzeichenfolge nicht `null`.</span><span class="sxs-lookup"><span data-stu-id="a7c82-661">The internal list's sort properties are only changed when the sort string is not `null`.</span></span> <span data-ttu-id="a7c82-662">Die `get` Accessor für diese Eigenschaft wird nicht den Sortierwert der internen Liste abgerufen werden; stattdessen wird zurückgegeben, die `set` Accessor-Wert.</span><span class="sxs-lookup"><span data-stu-id="a7c82-662">The `get` accessor for this property will not retrieve the sort value of the internal list; instead, it will return the `set` accessor value.</span></span> <span data-ttu-id="a7c82-663">Der Wert, der die <xref:System.Windows.Forms.BindingSource.Sort%2A> Eigenschaft bleibt erhalten, wenn die Datenquelle ändert.</span><span class="sxs-lookup"><span data-stu-id="a7c82-663">The value of the <xref:System.Windows.Forms.BindingSource.Sort%2A> property will persist when the data source changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c82-664">Das folgende Beispiel zeigt, wie Sie die <xref:System.Windows.Forms.BindingSource.Sort%2A> Eigenschaft, um eine grundlegende Sortierung mit einem <xref:System.Data.DataView>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-664">The following example shows how to use the <xref:System.Windows.Forms.BindingSource.Sort%2A> property to perform basic sorting with a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="a7c82-665">Um dieses Beispiel auszuführen, fügen Sie den Code in einem Windows Form, und rufen `PopulateDataViewAndSort` aus den Konstruktor des Formulars oder <xref:System.Windows.Forms.Form.Load> Ereignisbehandlungsmethode.</span><span class="sxs-lookup"><span data-stu-id="a7c82-665">To run this example, paste the code into a Windows Form and call `PopulateDataViewAndSort` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span> <span data-ttu-id="a7c82-666">Das Formular importieren sollte die <xref:System.Xml> und <xref:System.IO> Namespaces.</span><span class="sxs-lookup"><span data-stu-id="a7c82-666">Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#2)]  
  
 <span data-ttu-id="a7c82-667">Das folgende Beispiel zeigt, wie Sie die <xref:System.Windows.Forms.BindingSource.Sort%2A> Eigenschaft auszuführenden erweiterte Sortierung mit einem <xref:System.Data.DataView>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-667">The following example shows how to use the <xref:System.Windows.Forms.BindingSource.Sort%2A> property to perform advanced sorting with a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="a7c82-668">Um dieses Beispiel auszuführen, fügen Sie den Code in einem Windows Form, und rufen `PopulateDataViewAndAdvancedSort` aus den Konstruktor des Formulars oder <xref:System.Windows.Forms.Form.Load> Ereignisbehandlungsmethode.</span><span class="sxs-lookup"><span data-stu-id="a7c82-668">To run this example, paste the code into a Windows Form and call `PopulateDataViewAndAdvancedSort` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span> <span data-ttu-id="a7c82-669">Das Formular importieren sollte die <xref:System.Xml> und <xref:System.IO> Namespaces.</span><span class="sxs-lookup"><span data-stu-id="a7c82-669">Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMethods#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.BindingSourceMethods#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMethods/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Filter" />
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveSort" />
      </Docs>
    </Member>
    <Member MemberName="SortDescriptions">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ListSortDescriptionCollection SortDescriptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ListSortDescriptionCollection SortDescriptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SortDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortDescriptions As ListSortDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ListSortDescriptionCollection ^ SortDescriptions { System::ComponentModel::ListSortDescriptionCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ListSortDescriptionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-670">Gets the collection of sort descriptions applied to the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-670">Gets the collection of sort descriptions applied to the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c82-671">Wenn die Datenquelle ist ein <see cref="T:System.ComponentModel.IBindingListView" />, eine <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> , enthält die sortierbeschreibungen angewendet, um der Liste, andernfalls <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-671">If the data source is an <see cref="T:System.ComponentModel.IBindingListView" />, a <see cref="T:System.ComponentModel.ListSortDescriptionCollection" /> that contains the sort descriptions applied to the list; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-672">Wenn die Liste nicht ist ein <xref:System.ComponentModel.IBindingListView>, die <xref:System.Windows.Forms.BindingSource.SortDescriptions%2A> gibt immer `null`.</span><span class="sxs-lookup"><span data-stu-id="a7c82-672">If the list is not an <xref:System.ComponentModel.IBindingListView>, the <xref:System.Windows.Forms.BindingSource.SortDescriptions%2A> always returns `null`.</span></span>  
  
 <span data-ttu-id="a7c82-673">Die <xref:System.ComponentModel.ListSortDescriptionCollection> ist eine schreibgeschützte Auflistung.</span><span class="sxs-lookup"><span data-stu-id="a7c82-673">The <xref:System.ComponentModel.ListSortDescriptionCollection> is a read-only collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortDirection">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ListSortDirection SortDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.ListSortDirection SortDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SortDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortDirection As ListSortDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ListSortDirection SortDirection { System::ComponentModel::ListSortDirection get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ListSortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-674">Gets the direction the items in the list are sorted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-674">Gets the direction the items in the list are sorted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c82-675">Eines der <see cref="T:System.ComponentModel.ListSortDirection" /> Werte, die die Richtung angibt, die die Liste sortiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-675">One of the <see cref="T:System.ComponentModel.ListSortDirection" /> values indicating the direction the list is sorted.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-676">Wenn die zugrunde liegende Liste kein <xref:System.ComponentModel.IBindingList>, die <xref:System.Windows.Forms.BindingSource.SortDirection%2A> -Eigenschaft gibt stets <xref:System.ComponentModel.ListSortDirection.Ascending>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-676">If the underlying list is not an <xref:System.ComponentModel.IBindingList>, the <xref:System.Windows.Forms.BindingSource.SortDirection%2A> property will always return <xref:System.ComponentModel.ListSortDirection.Ascending>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortProperty">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptor SortProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor SortProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SortProperty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortProperty As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::PropertyDescriptor ^ SortProperty { System::ComponentModel::PropertyDescriptor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-677">Gets the <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is being used for sorting the list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-677">Gets the <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is being used for sorting the list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c82-678">Wenn die Liste ist ein <see cref="T:System.ComponentModel.IBindingList" />, die <see cref="T:System.ComponentModel.PropertyDescriptor" /> , die für die Sortierung verwendet; andernfalls wird <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-678">If the list is an <see cref="T:System.ComponentModel.IBindingList" />, the <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is being used for sorting; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-679">Wenn die Liste nicht ist ein <xref:System.ComponentModel.IBindingList>, <xref:System.Windows.Forms.BindingSource.SortProperty%2A> gibt immer `null`.</span><span class="sxs-lookup"><span data-stu-id="a7c82-679">If the list is not an <xref:System.ComponentModel.IBindingList>, <xref:System.Windows.Forms.BindingSource.SortProperty%2A> always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsAdvancedSorting">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAdvancedSorting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAdvancedSorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsAdvancedSorting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsAdvancedSorting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsAdvancedSorting { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-680">Gets a value indicating whether the data source supports multi-column sorting.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-680">Gets a value indicating whether the data source supports multi-column sorting.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c82-681">
            <see langword="true" /> Wenn die Liste ist ein <see cref="T:System.ComponentModel.IBindingListView" /> und das mit mehreren Spalten sortieren unterstützt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-681">
              <see langword="true" /> if the list is an <see cref="T:System.ComponentModel.IBindingListView" /> and supports multi-column sorting; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-682">Wenn die Liste nicht ist ein <xref:System.ComponentModel.IBindingListView>, <xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A> gibt immer `false`.</span><span class="sxs-lookup"><span data-stu-id="a7c82-682">If the list is not an <xref:System.ComponentModel.IBindingListView>, <xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A> always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsChangeNotification">
      <MemberSignature Language="C#" Value="public virtual bool SupportsChangeNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsChangeNotification" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsChangeNotification" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsChangeNotification As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsChangeNotification { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-683">Gets a value indicating whether the data source supports change notification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-683">Gets a value indicating whether the data source supports change notification.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c82-684">
            <see langword="true" /> in allen Fällen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-684">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFiltering">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFiltering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFiltering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsFiltering" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFiltering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFiltering { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-685">Gets a value indicating whether the data source supports filtering.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-685">Gets a value indicating whether the data source supports filtering.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c82-686">
            <see langword="true" /> Wenn die Liste ist ein <see cref="T:System.ComponentModel.IBindingListView" /> und unterstützt die Filterung von; anderenfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-686">
              <see langword="true" /> if the list is an <see cref="T:System.ComponentModel.IBindingListView" /> and supports filtering; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-687">Wenn die Liste nicht ist ein <xref:System.ComponentModel.IBindingListView>, <xref:System.Windows.Forms.BindingSource.SupportsFiltering%2A> gibt immer `false`.</span><span class="sxs-lookup"><span data-stu-id="a7c82-687">If the list is not an <xref:System.ComponentModel.IBindingListView>, <xref:System.Windows.Forms.BindingSource.SupportsFiltering%2A> always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsSearching">
      <MemberSignature Language="C#" Value="public virtual bool SupportsSearching { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsSearching" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsSearching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsSearching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsSearching { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-688">Gets a value indicating whether the data source supports searching with the <see cref="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-688">Gets a value indicating whether the data source supports searching with the <see cref="M:System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c82-689">
            <see langword="true" /> Wenn die Liste ist eine <see cref="T:System.ComponentModel.IBindingList" /> und unterstützt das Durchsuchen mit der <see cref="Overload:System.Windows.Forms.BindingSource.Find" /> Methode ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-689">
              <see langword="true" /> if the list is a <see cref="T:System.ComponentModel.IBindingList" /> and supports the searching with the <see cref="Overload:System.Windows.Forms.BindingSource.Find" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-690">Wenn die Datenquelle nicht ist ein <xref:System.ComponentModel.IBindingList>, <xref:System.Windows.Forms.BindingSource.SupportsSearching%2A> gibt immer `false`.</span><span class="sxs-lookup"><span data-stu-id="a7c82-690">If the data source is not an <xref:System.ComponentModel.IBindingList>, <xref:System.Windows.Forms.BindingSource.SupportsSearching%2A> always returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c82-691">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.BindingSource.SupportsSearching%2A> Member.</span><span class="sxs-lookup"><span data-stu-id="a7c82-691">The following code example demonstrates how to use the <xref:System.Windows.Forms.BindingSource.SupportsSearching%2A> member.</span></span> <span data-ttu-id="a7c82-692">Das vollständige Beispiel finden Sie im Übersichtsthema.</span><span class="sxs-lookup"><span data-stu-id="a7c82-692">For the complete example see the class overview topic.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceAndBindingListOfT/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsSorting">
      <MemberSignature Language="C#" Value="public virtual bool SupportsSorting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsSorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SupportsSorting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsSorting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsSorting { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-693">Gets a value indicating whether the data source supports sorting.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-693">Gets a value indicating whether the data source supports sorting.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c82-694">
            <see langword="true" /> Wenn die Datenquelle ist ein <see cref="T:System.ComponentModel.IBindingList" /> und unterstützt die Sortierung ist; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-694">
              <see langword="true" /> if the data source is an <see cref="T:System.ComponentModel.IBindingList" /> and supports sorting; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-695">Wenn die Datenquelle kein <xref:System.ComponentModel.IBindingList>, die <xref:System.Windows.Forms.BindingSource.SupportsSorting%2A> -Eigenschaft gibt immer `false`.</span><span class="sxs-lookup"><span data-stu-id="a7c82-695">If the data source is not an <xref:System.ComponentModel.IBindingList>, the <xref:System.Windows.Forms.BindingSource.SupportsSorting%2A> property always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuspendBinding">
      <MemberSignature Language="C#" Value="public void SuspendBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SuspendBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.SuspendBinding" />
      <MemberSignature Language="VB.NET" Value="Public Sub SuspendBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SuspendBinding();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-696">Suspends data binding to prevent changes from updating the bound data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-696">Suspends data binding to prevent changes from updating the bound data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-697"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> und <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> sind zwei Methoden, die die temporären Unterbrechung und Wiederaufnahme der Datenbindung in einem einfachen Datenbindungsszenario zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-697"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of data binding in a simple-binding scenario.</span></span> <span data-ttu-id="a7c82-698">Sie würden Datenbindung in der Regel anhalten, wenn der Benutzer zugelassen werden muss, um mehrere Änderungen an Datenfelder vorzunehmen, bevor die Überprüfung erfolgt.</span><span class="sxs-lookup"><span data-stu-id="a7c82-698">You would typically suspend data binding if the user must be allowed to make several edits to data fields before validation occurs.</span></span> <span data-ttu-id="a7c82-699">Z. B. würde Wenn ein Feld in Übereinstimmung mit einer Sekunde geändert werden muss, jedoch überprüft das erste Feld das zweite Feld fehlerhaft sein.</span><span class="sxs-lookup"><span data-stu-id="a7c82-699">For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a7c82-700">Mit <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> und verhindert, dass Änderungen in der Datenquelle bis gepusht <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> aufgerufen wird, aber tatsächlich verhindert keine Ereignisse auftreten.</span><span class="sxs-lookup"><span data-stu-id="a7c82-700">Using <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and prevents changes from being pushed into the data source until <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> is called, but does not actually prevent any events from occurring.</span></span> <span data-ttu-id="a7c82-701">Steuerelemente, die komplexe Datenbindung, z. B. verwenden die <xref:System.Windows.Forms.DataGridView> steuern, aktualisieren Sie ihre Werte basierend auf Change-Ereignissen, wie z. B. die <xref:System.Windows.Forms.CurrencyManager.ListChanged> Ereignis, deshalb wird beim Aufrufen <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> wird nicht verhindern, dass sie Änderungen an der Datenquelle empfangen.</span><span class="sxs-lookup"><span data-stu-id="a7c82-701">Controls that use complex data binding, such as the <xref:System.Windows.Forms.DataGridView> control, update their values based on change events such as the <xref:System.Windows.Forms.CurrencyManager.ListChanged> event, so calling <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> will not prevent them from receiving changes to the data source.</span></span> <span data-ttu-id="a7c82-702">Aus diesem Grund dies <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> und <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> dienen zur Verwendung mit einfach gebundenen Steuerelementen, wie z. B. die <xref:System.Windows.Forms.TextBox> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="a7c82-702">For this reason, this <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are designed for use with simple-bound controls, such as the <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="a7c82-703">Alternativ können diese Methoden in einem komplexen Datenbindungsszenario Wenn unterdrückt <xref:System.Windows.Forms.BindingSource.ListChanged> Ereignisse durch Festlegen der <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> Eigenschaft `false`.</span><span class="sxs-lookup"><span data-stu-id="a7c82-703">Alternatively you can use these methods in a complex binding scenario if you suppress <xref:System.Windows.Forms.BindingSource.ListChanged> events by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.CurrencyManager.SuspendBinding" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-704">Gets an object that can be used to synchronize access to the underlying list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-704">Gets an object that can be used to synchronize access to the underlying list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c82-705">Ein Objekt, mit dem der Zugriff auf die zugrunde liegende Liste synchronisiert werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-705">An object that can be used to synchronize access to the underlying list.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IBindingList.AddIndex">
      <MemberSignature Language="C#" Value="void IBindingList.AddIndex (System.ComponentModel.PropertyDescriptor property);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.IBindingList.AddIndex(class System.ComponentModel.PropertyDescriptor property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Sub AddIndex (property As PropertyDescriptor) Implements IBindingList.AddIndex" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.IBindingList.AddIndex(System::ComponentModel::PropertyDescriptor ^ property) = System::ComponentModel::IBindingList::AddIndex;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="a7c82-706">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to add to the indexes used for searching.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-706">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to add to the indexes used for searching.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-707">Adds the <see cref="T:System.ComponentModel.PropertyDescriptor" /> to the indexes used for searching.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-707">Adds the <see cref="T:System.ComponentModel.PropertyDescriptor" /> to the indexes used for searching.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-708">Wenn die zugrunde liegende Liste eine <xref:System.ComponentModel.IBindingList> Typ, der diese Methode wird hinzugefügt der <xref:System.ComponentModel.PropertyDescriptor> an den Indizes; andernfalls wird beim Aufrufen dieser Methode löst eine <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-708">If the underlying list is an <xref:System.ComponentModel.IBindingList> type, this method will add the <xref:System.ComponentModel.PropertyDescriptor> to the indexes; otherwise, calling this method will throw a <xref:System.NotSupportedException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a7c82-709">The underlying list is not an <see cref="T:System.ComponentModel.IBindingList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-709">The underlying list is not an <see cref="T:System.ComponentModel.IBindingList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IBindingList.RemoveIndex">
      <MemberSignature Language="C#" Value="void IBindingList.RemoveIndex (System.ComponentModel.PropertyDescriptor prop);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.IBindingList.RemoveIndex(class System.ComponentModel.PropertyDescriptor prop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveIndex (prop As PropertyDescriptor) Implements IBindingList.RemoveIndex" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.IBindingList.RemoveIndex(System::ComponentModel::PropertyDescriptor ^ prop) = System::ComponentModel::IBindingList::RemoveIndex;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prop" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="prop">
          <span data-ttu-id="a7c82-710">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to remove from the indexes used for searching.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-710">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> to remove from the indexes used for searching.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-711">Removes the <see cref="T:System.ComponentModel.PropertyDescriptor" /> from the indexes used for searching.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-711">Removes the <see cref="T:System.ComponentModel.PropertyDescriptor" /> from the indexes used for searching.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-712">Wenn die zugrunde liegende Liste keine <xref:System.ComponentModel.IBindingList?displayProperty=nameWithType>, diese Methode löst immer eine <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="a7c82-712">If the underlying list is not a <xref:System.ComponentModel.IBindingList?displayProperty=nameWithType>, this method will always throw a <xref:System.NotSupportedException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICancelAddNew.CancelNew">
      <MemberSignature Language="C#" Value="void ICancelAddNew.CancelNew (int position);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ICancelAddNew.CancelNew(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#CancelNew(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CancelNew (position As Integer) Implements ICancelAddNew.CancelNew" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ICancelAddNew.CancelNew(int position) = System::ComponentModel::ICancelAddNew::CancelNew;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="a7c82-713">The index of the item that was added to the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-713">The index of the item that was added to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-714">Discards a pending new item from the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-714">Discards a pending new item from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-715">Die <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23CancelNew%2A> Methode Rollback für eine ausstehende Hinzufügung eines Elements, das zuvor hinzugefügt haben, an dem angegebenen Index in die Auflistung `position`.</span><span class="sxs-lookup"><span data-stu-id="a7c82-715">The <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23CancelNew%2A> method rolls back a pending addition of an item previously added to the collection at the index specified by `position`.</span></span> <span data-ttu-id="a7c82-716">Die `position` -Parameter ist erforderlich, da mehrere neue Elemente gleichzeitig ausstehend sein können.</span><span class="sxs-lookup"><span data-stu-id="a7c82-716">The `position` parameter is necessary because several new items can be simultaneously pending.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICancelAddNew.EndNew">
      <MemberSignature Language="C#" Value="void ICancelAddNew.EndNew (int position);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ICancelAddNew.EndNew(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#EndNew(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub EndNew (position As Integer) Implements ICancelAddNew.EndNew" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ICancelAddNew.EndNew(int position) = System::ComponentModel::ICancelAddNew::EndNew;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="a7c82-717">The index of the item that was added to the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-717">The index of the item that was added to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7c82-718">Commits a pending new item to the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-718">Commits a pending new item to the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-719">Die <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A> -Methode führt einen Commit für eine ausstehende Hinzufügung eines Elements, das zuvor hinzugefügt haben, an dem angegebenen Index in die Auflistung `position`.</span><span class="sxs-lookup"><span data-stu-id="a7c82-719">The <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A> method commits a pending addition of an item previously added to the collection at the index specified by `position`.</span></span> <span data-ttu-id="a7c82-720">Die `position` -Parameter ist erforderlich, da mehrere neue Elemente gleichzeitig ausstehend sein können.</span><span class="sxs-lookup"><span data-stu-id="a7c82-720">The `position` parameter is necessary because several new items can be simultaneously pending.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICancelAddNew.EndNew(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-721">Signals the <see cref="T:System.Windows.Forms.BindingSource" /> that initialization is starting.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-721">Signals the <see cref="T:System.Windows.Forms.BindingSource" /> that initialization is starting.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-722">Signals the <see cref="T:System.Windows.Forms.BindingSource" /> that initialization is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-722">Signals the <see cref="T:System.Windows.Forms.BindingSource" /> that initialization is complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitializeNotification.IsInitialized">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.ISupportInitializeNotification.IsInitialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.ISupportInitializeNotification.IsInitialized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitializeNotification#IsInitialized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsInitialized As Boolean Implements ISupportInitializeNotification.IsInitialized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.ComponentModel.ISupportInitializeNotification.IsInitialized { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7c82-723">Gets a value indicating whether the <see cref="T:System.Windows.Forms.BindingSource" /> is initialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-723">Gets a value indicating whether the <see cref="T:System.Windows.Forms.BindingSource" /> is initialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7c82-724">
            <see langword="true" /> um anzugeben, die <see cref="T:System.Windows.Forms.BindingSource" /> initialisiert wurde, andernfalls wird <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7c82-724">
              <see langword="true" /> to indicate the <see cref="T:System.Windows.Forms.BindingSource" /> is initialized; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c82-725">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="a7c82-725">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a7c82-726">Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.BindingSource>-Instanz in eine <xref:System.ComponentModel.ISupportInitializeNotification>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="a7c82-726">It can be used only when the <xref:System.Windows.Forms.BindingSource> instance is cast to an <xref:System.ComponentModel.ISupportInitializeNotification> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>