<Type Name="StatusBar+StatusBarPanelCollection" FullName="System.Windows.Forms.StatusBar+StatusBarPanelCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9c26744d9bdae4e43e0e4fb0695862ff7af439da" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75177964" /></Metadata><TypeSignature Language="C#" Value="public class StatusBar.StatusBarPanelCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit StatusBar/StatusBarPanelCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class StatusBar.StatusBarPanelCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class StatusBar::StatusBarPanelCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type StatusBar.StatusBarPanelCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt die Auflistung von Bereichen in einem <see cref="T:System.Windows.Forms.StatusBar" />-Steuerelement dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection>-Klasse speichert die Bereiche, die in der <xref:System.Windows.Forms.StatusBar>angezeigt werden. Jedes Objekt in der Auflistung ist eine Instanz der <xref:System.Windows.Forms.StatusBarPanel>-Klasse, die die Anzeigeeigenschaften und das Verhalten eines Panels definiert, das in einem <xref:System.Windows.Forms.StatusBar>angezeigt wird.  
  
 Es gibt verschiedene Möglichkeiten, der Auflistung Panels hinzuzufügen. Die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A>-Methode bietet die Möglichkeit, der Auflistung ein einzelnes Panel hinzuzufügen. Wenn Sie der Auflistung eine Reihe von Bereichen hinzufügen möchten, erstellen Sie ein Array von <xref:System.Windows.Forms.StatusBarPanel> Objekten, und weisen Sie es der <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange%2A>-Methode zu. Wenn Sie ein Panel an einer bestimmten Position in der Auflistung einfügen möchten, können Sie die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert%2A>-Methode verwenden. Zum Entfernen von Bereichen können Sie entweder die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove%2A>-Methode oder die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveAt%2A>-Methode verwenden, wenn Sie wissen, wo sich der Bereich in der Auflistung befindet. Mit der <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Clear%2A>-Methode können Sie alle Bereiche aus der Auflistung entfernen, anstatt die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove%2A>-Methode zu verwenden, um einen einzelnen Bereich gleichzeitig zu entfernen.  
  
 Zusätzlich zu den Methoden und Eigenschaften zum Hinzufügen und Entfernen von Bereichen bietet das <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> auch Methoden zum Suchen von Bereichen in der Auflistung. Mit der <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Contains%2A>-Methode können Sie feststellen, ob ein Panel ein Member der Auflistung ist. Wenn Sie wissen, dass sich der Bereich in der Auflistung befindet, können Sie die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOf%2A>-Methode verwenden, um zu bestimmen, wo sich der Bereich in der Auflistung befindet.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.StatusBar>-Steuerelement auf einem Formular erstellt und zwei <xref:System.Windows.Forms.StatusBarPanel>-Objekte hinzugefügt. Einer der <xref:System.Windows.Forms.StatusBarPanel>mit dem Namen `panel1`zeigt den Status Text für eine Anwendung an. Mit dem zweiten <xref:System.Windows.Forms.StatusBarPanel>namens `panel2`wird das aktuelle Datum angezeigt, und die <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A>-Eigenschaft der <xref:System.Windows.Forms.StatusBarPanel>-Klasse wird verwendet, um die aktuelle Uhrzeit anzuzeigen. Im Beispiel wird die <xref:System.Windows.Forms.StatusBar.ShowPanels%2A>-Eigenschaft verwendet, um sicherzustellen, dass die Panels anstelle eines Standard Bereichs angezeigt werden, und die-Eigenschaft <xref:System.Windows.Forms.StatusBar.Panels%2A> wird verwendet, um auf die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A>-Methode der <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> zuzugreifen, um die Panels der <xref:System.Windows.Forms.StatusBar>hinzuzufügen. Das Beispiel verwendet auch die Eigenschaften <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A>, <xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A>, <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A>und <xref:System.Windows.Forms.StatusBarPanel.Text%2A>, um die <xref:System.Windows.Forms.StatusBarPanel> Objekte zu initialisieren. In diesem Beispiel wird davon ausgegangen, dass die im Beispiel definierte Methode definiert und vom Konstruktor einer <xref:System.Windows.Forms.Form>aufgerufen wird.  
  
 [!code-cpp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CPP/form1.cpp#1)]
 [!code-csharp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CS/form1.cs#1)]
 [!code-vb[StatusBar and StatusBarPanel Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.StatusBarPanel" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StatusBarPanelCollection (System.Windows.Forms.StatusBar owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.StatusBar owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.#ctor(System.Windows.Forms.StatusBar)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As StatusBar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StatusBarPanelCollection(System::Windows::Forms::StatusBar ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.StatusBar.StatusBarPanelCollection : System.Windows.Forms.StatusBar -&gt; System.Windows.Forms.StatusBar.StatusBarPanelCollection" Usage="new System.Windows.Forms.StatusBar.StatusBarPanelCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.StatusBar" />
      </Parameters>
      <Docs>
        <param name="owner">Das <see cref="T:System.Windows.Forms.StatusBar" />-Steuerelement, das diese Auflistung enthält.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es ist nicht möglich, eine Instanz dieser Klasse zu erstellen, ohne Sie mit einem <xref:System.Windows.Forms.StatusBar> Steuerelement zu verknüpfen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt der Auflistung eine <see cref="T:System.Windows.Forms.StatusBarPanel" /> hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.StatusBarPanel Add (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.StatusBarPanel Add(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (text As String) As StatusBarPanel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::StatusBarPanel ^ Add(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member Add : string -&gt; System.Windows.Forms.StatusBarPanel&#xA;override this.Add : string -&gt; System.Windows.Forms.StatusBarPanel" Usage="statusBarPanelCollection.Add text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.StatusBarPanel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Der Text für das <see cref="T:System.Windows.Forms.StatusBarPanel" />, das hinzugefügt wird.</param>
        <summary>Fügt der Auflistung ein <see cref="T:System.Windows.Forms.StatusBarPanel" /> mit dem angegebenen Text hinzu.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.StatusBarPanel" />, das den Bereich darstellt, der der Auflistung hinzugefügt wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können einem <xref:System.Windows.Forms.StatusBar> Steuerelement Panels hinzufügen, um mehr als eine Art von Informationen anzuzeigen. Diese Version der <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A>-Methode erstellt eine neue <xref:System.Windows.Forms.StatusBarPanel> mit dem im `text`-Parameter angegebenen Text und fügt Sie der-Auflistung hinzu. Die Reihenfolge, in der sich die Bereiche im <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> befinden, stellt die Reihenfolge dar, in der Bereiche innerhalb des <xref:System.Windows.Forms.StatusBar> Steuer Elements angezeigt werden. Panels werden von links nach rechts beginnend mit dem ersten Panel in der Auflistung angezeigt. Die <xref:System.Windows.Forms.Control.RightToLeft%2A>-Eigenschaft des <xref:System.Windows.Forms.StatusBar> Steuer Elements ändert nicht die Reihenfolge, in der Panels im <xref:System.Windows.Forms.StatusBar>angezeigt werden. Um ein Panel an einer bestimmten Position in der Auflistung einzufügen, verwenden Sie die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert%2A>-Methode. Verwenden Sie die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange%2A>-Methode, um der Auflistung in einem einzelnen Vorgang einen Satz von Panels hinzuzufügen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.StatusBarPanel" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange(System.Windows.Forms.StatusBarPanel[])" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert(System.Int32,System.Windows.Forms.StatusBarPanel)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (System.Windows.Forms.StatusBarPanel value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(class System.Windows.Forms.StatusBarPanel value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add(System.Windows.Forms.StatusBarPanel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (value As StatusBarPanel) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Windows::Forms::StatusBarPanel ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Windows.Forms.StatusBarPanel -&gt; int&#xA;override this.Add : System.Windows.Forms.StatusBarPanel -&gt; int" Usage="statusBarPanelCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.StatusBarPanel" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Windows.Forms.StatusBarPanel" />, das den Bereich darstellt, der der Auflistung hinzugefügt werden soll.</param>
        <summary>Fügt der Auflistung eine <see cref="T:System.Windows.Forms.StatusBarPanel" /> hinzu.</summary>
        <returns>Der nullbasierte Index des Elements in der Auflistung.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können einem <xref:System.Windows.Forms.StatusBar> Steuerelement Panels hinzufügen, um mehr als eine Art von Informationen anzuzeigen. Diese Version der <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A>-Methode fügt die im `value`-Parameter angegebene <xref:System.Windows.Forms.StatusBarPanel> der-Auflistung hinzu. Die Reihenfolge, in der sich die Bereiche im <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> befinden, stellt die Reihenfolge dar, in der Bereiche innerhalb des <xref:System.Windows.Forms.StatusBar> Steuer Elements angezeigt werden. Panels werden von links nach rechts beginnend mit dem ersten Panel in der Auflistung angezeigt. Die <xref:System.Windows.Forms.Control.RightToLeft%2A>-Eigenschaft des <xref:System.Windows.Forms.StatusBar> Steuer Elements ändert nicht die Reihenfolge, in der Panels im <xref:System.Windows.Forms.StatusBar>angezeigt werden. Um ein Panel an einer bestimmten Position in der Auflistung einzufügen, verwenden Sie die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert%2A>-Methode. Verwenden Sie die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange%2A>-Methode, um der Auflistung in einem einzelnen Vorgang einen Satz von Panels hinzuzufügen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.StatusBar>-Steuerelement auf einem Formular erstellt und zwei <xref:System.Windows.Forms.StatusBarPanel>-Objekte hinzugefügt. Eines der <xref:System.Windows.Forms.StatusBarPanel> Objekte mit dem Namen `panel1`zeigt den Status Text für eine Anwendung an. Mit dem zweiten <xref:System.Windows.Forms.StatusBarPanel>namens `panel2`wird das aktuelle Datum angezeigt, und die <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A>-Eigenschaft der <xref:System.Windows.Forms.StatusBarPanel>-Klasse wird verwendet, um die aktuelle Uhrzeit anzuzeigen. Im Beispiel wird die <xref:System.Windows.Forms.StatusBar.ShowPanels%2A>-Eigenschaft verwendet, um sicherzustellen, dass die Panels anstelle eines Standard Bereichs angezeigt werden, und die-Eigenschaft <xref:System.Windows.Forms.StatusBar.Panels%2A> wird verwendet, um auf die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A>-Methode der <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> zuzugreifen, um die Panels der <xref:System.Windows.Forms.StatusBar>hinzuzufügen. Das Beispiel verwendet auch die Eigenschaften <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A>, <xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A>, <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A>und <xref:System.Windows.Forms.StatusBarPanel.Text%2A>, um die <xref:System.Windows.Forms.StatusBarPanel> Objekte zu initialisieren. In diesem Beispiel wird davon ausgegangen, dass die im Beispiel definierte Methode definiert und vom Konstruktor einer <xref:System.Windows.Forms.Form>aufgerufen wird.  
  
 [!code-cpp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CPP/form1.cpp#1)]
 [!code-csharp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CS/form1.cs#1)]
 [!code-vb[StatusBar and StatusBarPanel Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Das der Auflistung hinzugefügte <see cref="T:System.Windows.Forms.StatusBarPanel" /> hatte den Wert <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Das im <see cref="T:System.Windows.Forms.StatusBarPanel" />-Parameter angegebene übergeordnete Element von <paramref name="value" /> ist nicht <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Forms.StatusBarPanel" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange(System.Windows.Forms.StatusBarPanel[])" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert(System.Int32,System.Windows.Forms.StatusBarPanel)" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Windows.Forms.StatusBarPanel[] panels);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Windows.Forms.StatusBarPanel[] panels) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange(System.Windows.Forms.StatusBarPanel[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRange (panels As StatusBarPanel())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRange(cli::array &lt;System::Windows::Forms::StatusBarPanel ^&gt; ^ panels);" />
      <MemberSignature Language="F#" Value="abstract member AddRange : System.Windows.Forms.StatusBarPanel[] -&gt; unit&#xA;override this.AddRange : System.Windows.Forms.StatusBarPanel[] -&gt; unit" Usage="statusBarPanelCollection.AddRange panels" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="panels" Type="System.Windows.Forms.StatusBarPanel[]" />
      </Parameters>
      <Docs>
        <param name="panels">Ein Array von <see cref="T:System.Windows.Forms.StatusBarPanel" />-Objekten, die hinzugefügt werden sollen.</param>
        <summary>Fügt der Auflistung ein Array von <see cref="T:System.Windows.Forms.StatusBarPanel" />-Objekten hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können einem <xref:System.Windows.Forms.StatusBar> Steuerelement Panels hinzufügen, um mehr als eine Art von Informationen anzuzeigen. Die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange%2A>-Methode fügt der Auflistung ein Array von <xref:System.Windows.Forms.StatusBarPanel> Objekten hinzu, die im `panels`-Parameter angegeben sind. Alle vorhandenen Bereiche in der Auflistung werden aus der Sammlung entfernt, bevor neue Bereiche eingefügt werden. Die Reihenfolge, in der sich die Bereiche im <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> befinden, stellt die Reihenfolge dar, in der Bereiche innerhalb des <xref:System.Windows.Forms.StatusBar> Steuer Elements angezeigt werden. Panels werden von links nach rechts beginnend mit dem ersten Panel in der Auflistung angezeigt. Die <xref:System.Windows.Forms.Control.RightToLeft%2A>-Eigenschaft des <xref:System.Windows.Forms.StatusBar> Steuer Elements ändert nicht die Reihenfolge, in der Panels im <xref:System.Windows.Forms.StatusBar>angezeigt werden. Um der Auflistung ein einzelnes <xref:System.Windows.Forms.StatusBarPanel> hinzuzufügen, verwenden Sie die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A>-Methode. Um ein Panel an einer bestimmten Position im <xref:System.Windows.Forms.StatusBar> Steuerelement (und in dieser Auflistung) einzufügen, verwenden Sie die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert%2A>-Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Das der Auflistung hinzugefügte Array von <see cref="T:System.Windows.Forms.StatusBarPanel" />-Objekten hatte den Wert <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Forms.StatusBarPanel" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert(System.Int32,System.Windows.Forms.StatusBarPanel)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="statusBarPanelCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt alle Elemente aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie Panels aus der Sammlung entfernen, gehen alle Informationen zu den gelöschten Panels verloren. Um einen einzelnen Bereich aus dem <xref:System.Windows.Forms.StatusBar>zu entfernen, verwenden Sie die Methode <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove%2A> oder <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveAt%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove(System.Windows.Forms.StatusBarPanel)" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.StatusBarPanel panel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.StatusBarPanel panel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Contains(System.Windows.Forms.StatusBarPanel)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (panel As StatusBarPanel) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::StatusBarPanel ^ panel);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.StatusBarPanel -&gt; bool" Usage="statusBarPanelCollection.Contains panel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="panel" Type="System.Windows.Forms.StatusBarPanel" />
      </Parameters>
      <Docs>
        <param name="panel">Die <see cref="T:System.Windows.Forms.StatusBarPanel" />, die in der Auflistung gesucht werden soll.</param>
        <summary>Bestimmt, ob der angegebene Bereich in der Auflistung enthalten ist.</summary>
        <returns><see langword="true" />, wenn der Bereich in der Auflistung enthalten ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Contains%2A>-Methode können Sie feststellen, ob ein Panel ein Member der Auflistung ist. Wenn Sie wissen, dass sich das Element in der Auflistung befindet, können Sie die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOf%2A>-Methode verwenden, um zu bestimmen, wo sich der Bereich in der Auflistung befindet.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOf(System.Windows.Forms.StatusBarPanel)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="statusBarPanelCollection.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Der Name des Elements, das in der Auflistung gesucht werden soll.</param>
        <summary>Bestimmt, ob die Auflistung ein <see cref="T:System.Windows.Forms.StatusBarPanel" /> mit dem angegebenen Schlüssel enthält.</summary>
        <returns><see langword="true" />, um anzugeben, dass die Auflistung ein <see cref="T:System.Windows.Forms.StatusBarPanel" /> mit dem angegebenen Schlüssel enthält, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.StatusBarPanel.Name%2A>-Eigenschaft entspricht dem Schlüssel für eine <xref:System.Windows.Forms.StatusBarPanel> im <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection>.  
  
 Beim Schlüssel Vergleich wird die Groß-/Kleinschreibung nicht beachtet. Wenn der `key`-Parameter `null` oder eine leere Zeichenfolge ist, gibt <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.ContainsKey%2A> zurück `false.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Elemente in der Auflistung ab.</summary>
        <value>Die Anzahl von <see cref="T:System.Windows.Forms.StatusBarPanel" />-Objekten in der Auflistung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ermöglicht es Ihnen, die Anzahl der Bereiche im <xref:System.Windows.Forms.StatusBar>zu bestimmen. Sie können diesen Wert dann verwenden, wenn Sie die Werte der Auflistung durchlaufen und eine Reihe von Iterationen bereitstellen müssen, um die Schleife auszuführen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="statusBarPanelCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Enumerator zurück, mit dem die Elementauflistung durchlaufen werden soll.</summary>
        <returns>Ein <see cref="T:System.Collections.IEnumerator" />, der die Elementauflistung darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.StatusBarPanel panel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.StatusBarPanel panel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOf(System.Windows.Forms.StatusBarPanel)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (panel As StatusBarPanel) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::StatusBarPanel ^ panel);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.StatusBarPanel -&gt; int" Usage="statusBarPanelCollection.IndexOf panel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="panel" Type="System.Windows.Forms.StatusBarPanel" />
      </Parameters>
      <Docs>
        <param name="panel">Die <see cref="T:System.Windows.Forms.StatusBarPanel" />, die in der Auflistung gesucht werden soll.</param>
        <summary>Gibt den Index des angegebenen Bereichs in der Auflistung zurück.</summary>
        <returns>Der nullbasierte Index der Position des Bereichs in der Auflistung, andernfalls -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOf%2A>-Methode ermöglicht Ihnen, zu bestimmen, wo sich ein Panel innerhalb der Auflistung befindet. Verwenden Sie die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Contains%2A>-Methode, um zu bestimmen, ob sich ein Element in der Auflistung befindet, bevor Sie diese Methode aufrufen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Contains(System.Windows.Forms.StatusBarPanel)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfKey : string -&gt; int&#xA;override this.IndexOfKey : string -&gt; int" Usage="statusBarPanelCollection.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Der Name des <see cref="T:System.Windows.Forms.StatusBarPanel" />, das in der Auflistung gesucht werden soll.</param>
        <summary>Gibt den Index des ersten Vorkommens eines <see cref="T:System.Windows.Forms.StatusBarPanel" /> mit dem angegebenen Schlüssel zurück.</summary>
        <returns>Der nullbasierende Index des ersten Vorkommens des <see cref="T:System.Windows.Forms.StatusBarPanel" /> mit dem angegebenen Schlüssel, sofern dieses gefunden wird, andernfalls -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOfKey%2A> nacheinander aufgerufen wird, wird der zuletzt zurückgegebene Index zuerst auf eine Schlüssel Übereinstimmung geprüft. wenn keine Entsprechung vorhanden ist, beginnt die Suche am Anfang der Auflistung.  
  
 Die <xref:System.Windows.Forms.StatusBarPanel.Name%2A>-Eigenschaft entspricht dem Schlüssel für eine <xref:System.Windows.Forms.StatusBarPanel> im <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection>. Beim Schlüssel Vergleich wird die Groß-/Kleinschreibung nicht beachtet.  
  
 Wenn der `key`-Parameter `null` oder eine leere Zeichenfolge ist, gibt <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOfKey%2A>-1 zurück.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int index, System.Windows.Forms.StatusBarPanel value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, class System.Windows.Forms.StatusBarPanel value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert(System.Int32,System.Windows.Forms.StatusBarPanel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (index As Integer, value As StatusBarPanel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Windows::Forms::StatusBarPanel ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * System.Windows.Forms.StatusBarPanel -&gt; unit&#xA;override this.Insert : int * System.Windows.Forms.StatusBarPanel -&gt; unit" Usage="statusBarPanelCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Windows.Forms.StatusBarPanel" />
      </Parameters>
      <Docs>
        <param name="index">Die nullbasierte Indexposition, an der der Bereich eingefügt wird.</param>
        <param name="value">Ein <see cref="T:System.Windows.Forms.StatusBarPanel" />, das den einzufügenden Bereich darstellt.</param>
        <summary>Fügt die angegebene <see cref="T:System.Windows.Forms.StatusBarPanel" />-Klasse am angegebenen Index in die Auflistung ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können einem <xref:System.Windows.Forms.StatusBar> Steuerelement Panels hinzufügen, um mehr als eine Art von Informationen anzuzeigen. Mit der <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert%2A>-Methode können Sie eine neue <xref:System.Windows.Forms.StatusBarPanel> erstellen und an einer bestimmten Position in der Auflistung einfügen. Die Reihenfolge, in der sich die Bereiche im <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> befinden, stellt die Reihenfolge dar, in der Bereiche innerhalb des <xref:System.Windows.Forms.StatusBar> Steuer Elements angezeigt werden. Panels werden von links nach rechts beginnend mit dem ersten Panel in der Auflistung angezeigt. Die <xref:System.Windows.Forms.Control.RightToLeft%2A>-Eigenschaft des <xref:System.Windows.Forms.StatusBar> Steuer Elements ändert nicht die Reihenfolge, in der Panels im <xref:System.Windows.Forms.StatusBar>angezeigt werden. Verwenden Sie die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A>-Methode, um ein Panel am Ende der Auflistung hinzuzufügen. Verwenden Sie die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange%2A>-Methode, um der Auflistung in einem einzelnen Vorgang einen Satz von Panels hinzuzufügen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der Parameter <paramref name="value" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Das übergeordnete Element des <paramref name="value" />-Parameters ist nicht <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="index" />-Parameter ist kleiner als 0 oder größer als der Wert der <see cref="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Count" />-Eigenschaft der <see cref="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" />-Klasse.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Die <see cref="P:System.Windows.Forms.StatusBarPanel.AutoSize" />-Eigenschaft des Bereichs des <paramref name="value" />-Parameters ist kein gültiger <see cref="T:System.Windows.Forms.StatusBarPanelAutoSize" />-Wert.</exception>
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange(System.Windows.Forms.StatusBarPanel[])" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.StatusBar.StatusBarPanelCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob diese Auflistung schreibgeschützt ist.</summary>
        <value><see langword="true" />, wenn diese Auflistung schreibgeschützt ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist für diese Auflistung immer `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft ein Element in der Auflistung ab oder legt dieses fest.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.StatusBarPanel this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.StatusBarPanel Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As StatusBarPanel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::StatusBarPanel ^ default[int] { System::Windows::Forms::StatusBarPanel ^ get(int index); void set(int index, System::Windows::Forms::StatusBarPanel ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.StatusBarPanel with get, set" Usage="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.StatusBarPanel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der Index des Bereichs, der aus der Auflistung abgerufen oder festgelegt werden soll.</param>
        <summary>Ruft die <see cref="T:System.Windows.Forms.StatusBarPanel" />-Klasse am angegebenen Index ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.StatusBarPanel" />, das den Bereich am angegebenen Index in der Auflistung darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Methode können Sie die <xref:System.Windows.Forms.StatusBarPanel> abrufen, die an einer bestimmten Position in der Auflistung gespeichert sind. Verwenden Sie die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOf%2A>-Methode, um den Index eines bestimmten Panels innerhalb der Auflistung zu bestimmen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="index" />-Parameter ist kleiner als 0 (null) bzw. größer oder gleich dem Wert der <see cref="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Count" />-Eigenschaft der <see cref="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" />-Klasse.</exception>
        <exception cref="T:System.ArgumentNullException">Das der Auflistung zugeordnete <see cref="T:System.Windows.Forms.StatusBarPanel" /> hatte den Wert <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Forms.StatusBarPanel" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.StatusBarPanel this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.StatusBarPanel Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As StatusBarPanel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::StatusBarPanel ^ default[System::String ^] { System::Windows::Forms::StatusBarPanel ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.StatusBarPanel" Usage="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.StatusBarPanel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Der Name des Elements, das aus der Auflistung abgerufen werden soll.</param>
        <summary>Ruft ein Element mit dem angegebenen Schlüssel aus der Auflistung ab.</summary>
        <value>Das <see cref="T:System.Windows.Forms.StatusBarPanel" /> mit dem angegebenen Schlüssel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.StatusBarPanel.Name%2A>-Eigenschaft entspricht dem Schlüssel für eine <xref:System.Windows.Forms.StatusBarPanel> im <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection>.  
  
 Beim Schlüssel Vergleich wird die Groß-/Kleinschreibung nicht beachtet. Wenn der `key`-Parameter `null` oder eine leere Zeichenfolge ist, gibt <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Item%2A> zurück `null.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.Windows.Forms.StatusBarPanel value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Windows.Forms.StatusBarPanel value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove(System.Windows.Forms.StatusBarPanel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (value As StatusBarPanel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Windows::Forms::StatusBarPanel ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Windows.Forms.StatusBarPanel -&gt; unit&#xA;override this.Remove : System.Windows.Forms.StatusBarPanel -&gt; unit" Usage="statusBarPanelCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.StatusBarPanel" />
      </Parameters>
      <Docs>
        <param name="value">Das <see cref="T:System.Windows.Forms.StatusBarPanel" />, das den aus der Auflistung zu entfernenden Bereich darstellt.</param>
        <summary>Entfernt den angegebenen <see cref="T:System.Windows.Forms.StatusBarPanel" /> aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie einen Bereich aus der Liste entfernen, werden die Indizes für nachfolgende Elemente in der Sammlung geändert. Alle Informationen über den entfernten Bereich werden gelöscht. Sie können diese Methode verwenden, um einen bestimmten Bereich aus der <xref:System.Windows.Forms.StatusBar> zu entfernen, indem Sie die tatsächliche <xref:System.Windows.Forms.StatusBarPanel> angeben, die aus der Auflistung entfernt werden sollen. Um den Index des Bereichs anzugeben, der anstelle des Bereichs selbst entfernt werden soll, verwenden Sie die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveAt%2A>-Methode. Verwenden Sie die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Clear%2A>-Methode, um alle Panels aus der Auflistung zu entfernen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Das dem <see cref="T:System.Windows.Forms.StatusBarPanel" />-Parameter zugewiesene <paramref name="value" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="statusBarPanelCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des zu entfernenden Elements.</param>
        <summary>Entfernt das <see cref="T:System.Windows.Forms.StatusBarPanel" />, das sich am angegebenen Index in der Auflistung befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie einen Bereich aus der Auflistung entfernen, werden die Indizes für nachfolgende Bereiche in der Sammlung geändert. Alle Informationen über den entfernten Bereich werden gelöscht. Mit dieser Methode können Sie einen bestimmten Bereich aus der Liste entfernen, indem Sie den Index des Panels angeben, der aus der Auflistung entfernt werden soll. Verwenden Sie die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove%2A>-Methode, um den Bereich anzugeben, der anstelle des Indexes für den Bereich entfernt werden soll. Um alle Bereiche aus dem <xref:System.Windows.Forms.StatusBar>-Steuerelement zu entfernen, verwenden Sie die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Clear%2A>-Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="index" />-Parameter ist kleiner als 0 (null) bzw. größer oder gleich dem Wert der <see cref="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Count" />-Eigenschaft der <see cref="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" />-Klasse.</exception>
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove(System.Windows.Forms.StatusBarPanel)" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveByKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member RemoveByKey : string -&gt; unit&#xA;override this.RemoveByKey : string -&gt; unit" Usage="statusBarPanelCollection.RemoveByKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Der aus der Auslistung zu entfernende Name von <see cref="T:System.Windows.Forms.StatusBarPanel" />.</param>
        <summary>Entfernt das <see cref="T:System.Windows.Forms.StatusBarPanel" /> mit dem angegebenen Schlüssel aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.StatusBarPanel.Name%2A>-Eigenschaft entspricht dem Schlüssel für eine <xref:System.Windows.Forms.StatusBarPanel> im <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection>.  
  
 Beim Schlüssel Vergleich wird die Groß-/Kleinschreibung nicht beachtet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (dest As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ dest, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">Das eindimensionale Array, das das Ziel der aus der Auflistung kopierten Elemente ist. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
        <param name="index">Der nullbasierte Index im Array, ab dem der Kopiervorgang beginnt.</param>
        <summary>Kopiert die <see cref="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" /> in ein kompatibles eindimensionales Array, beginnend am angegebenen Index des Zielarrays.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="array" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> ist kleiner als Null.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="array" /> ist mehrdimensional.  
  
- oder - 
Die Anzahl der Elemente in der <see cref="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" /> ist größer als der verfügbare Platz zwischen dem Index und dem Ende von <paramref name="array" />.</exception>
        <exception cref="T:System.InvalidCastException">Der Typ in der Auflistung kann nicht automatisch in den <paramref name="array" />-Typ umgewandelt werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die Auflistung synchronisiert (threadsicher) ist.</summary>
        <value><see langword="false" /> in allen Fällen.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt ab, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</summary>
        <value>Das Objekt, das zum Synchronisieren des Zugriffs auf die Auflistung verwendet wird.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Windows.Forms.StatusBarPanel" />, das den Bereich darstellt, der der Auflistung hinzugefügt werden soll.</param>
        <summary>Fügt der Auflistung eine <see cref="T:System.Windows.Forms.StatusBarPanel" /> hinzu.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <exception cref="T:System.ArgumentException"><paramref name="value" /> ist keine <see cref="T:System.Windows.Forms.StatusBarPanel" />.  
  
- oder - 
Das übergeordnete Element des Werts ist nicht <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object panel);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object panel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (panel As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ panel) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="panel" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="panel">Die <see cref="T:System.Windows.Forms.StatusBarPanel" />, die in der Auflistung gesucht werden soll.</param>
        <summary>Bestimmt, ob der angegebene Bereich in der Auflistung enthalten ist.</summary>
        <returns><see langword="true" />, wenn der Bereich ein in der Auflistung enthaltenes <see cref="T:System.Windows.Forms.StatusBarPanel" /> ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object panel);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object panel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (panel As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ panel) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="panel" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="panel">Die <see cref="T:System.Windows.Forms.StatusBarPanel" />, die in der Auflistung gesucht werden soll.</param>
        <summary>Gibt den Index des angegebenen Bereichs in der Auflistung zurück.</summary>
        <returns>Der nullbasierte Index des Bereichs, wenn dieser gefunden wird, innerhalb der gesamten Auflistung; andernfalls -1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Die nullbasierte Indexposition, an der der Bereich eingefügt wird.</param>
        <param name="value">Ein <see cref="T:System.Windows.Forms.StatusBarPanel" />, das den einzufügenden Bereich darstellt.</param>
        <summary>Fügt die angegebene <see cref="T:System.Windows.Forms.StatusBarPanel" />-Klasse am angegebenen Index in die Auflistung ein.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Indexparameter ist kleiner als 0 (null) oder größer als der Wert der <see langword="Count" />-Eigenschaft.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="value" /> ist keine <see cref="T:System.Windows.Forms.StatusBarPanel" />.  
  
- oder - 
Das übergeordnete Element des Werts ist nicht <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Auflistung über eine feste Größe verfügt.</summary>
        <value><see langword="false" /> in allen Fällen.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll.</param>
        <summary>Ruft das Element am angegebenen Index ab oder legt dieses fest.</summary>
        <value>Das Element am angegebenen Index.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="value" /> ist keine <see cref="T:System.Windows.Forms.StatusBarPanel" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das <see cref="T:System.Windows.Forms.StatusBarPanel" />, das den aus der Auflistung zu entfernenden Bereich darstellt.</param>
        <summary>Entfernt den angegebenen <see cref="T:System.Windows.Forms.StatusBarPanel" /> aus der Auflistung.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
