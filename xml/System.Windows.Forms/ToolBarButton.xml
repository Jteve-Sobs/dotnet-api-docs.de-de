<Type Name="ToolBarButton" FullName="System.Windows.Forms.ToolBarButton">
  <Metadata><Meta Name="ms.openlocfilehash" Value="59185f501d1feb883ddeac2863d7f82b82da7c36" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55327245" /></Metadata><TypeSignature Language="C#" Value="public class ToolBarButton : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ToolBarButton extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ToolBarButton" />
  <TypeSignature Language="VB.NET" Value="Public Class ToolBarButton&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolBarButton : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type ToolBarButton = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ToolBarButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ToolBarButtonDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ToolBarButtonDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine Schaltfläche einer Windows-Symbolleiste dar. Obwohl <see cref="T:System.Windows.Forms.ToolStripButton" /> das <see cref="T:System.Windows.Forms.ToolBarButton" />-Steuerelement vorheriger Versionen ersetzt und erweitert, wird das <see cref="T:System.Windows.Forms.ToolBarButton" />-Steuerelement sowohl aus Gründen der Abwärtskompatibilität als auch, falls gewünscht, für die zukünftige Verwendung beibehalten.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolBarButton> Steuerelemente werden durch ein übergeordnetes Element <xref:System.Windows.Forms.ToolBar> Steuerelemente. Allgemeine Eigenschaften festlegen, nach dem Erstellen der Symbolleisten-Schaltfläche <xref:System.Windows.Forms.ToolBarButton.Text%2A> und <xref:System.Windows.Forms.ToolBarButton.ImageIndex%2A>. Legen Sie die <xref:System.Windows.Forms.ToolBarButton.Text%2A> -Eigenschaft der Schaltfläche zum Anzeigen von Text unter dem oder der rechten Seite des Bilds. Den Schaltflächen Bilder zuweisen, durch das Erstellen einer <xref:System.Windows.Forms.ImageList>, zugewiesen wird die <xref:System.Windows.Forms.ToolBar.ImageList%2A> -Eigenschaft der Symbolleiste, weisen Sie dann den Indexwert des Bildes, der <xref:System.Windows.Forms.ToolBarButton.ImageIndex%2A> -Eigenschaft der Schaltfläche.  
  
 Um die Darstellung des der Symbolleisten-Schaltflächen der Symbolleiste zu ändern, legen die <xref:System.Windows.Forms.ToolBar.Appearance%2A> Eigenschaft des übergeordneten Symbolleisten-Steuerelements. Die `ToolBarAppearance.Flat` Aussehen verleiht den Schaltflächen flach dargestellt. Wie die Maus bewegt sich Zeiger über die Schaltflächen, die Änderungen aussehen dreidimensional dargestellt. Trennlinien angezeigt werden, sondern als Linien zwischen den Schaltflächen an, wenn Schaltflächen flach dargestellt sind. Wenn die <xref:System.Windows.Forms.ToolBar.Appearance%2A> -Eigenschaftensatz auf `ToolBarAppearance.Normal`, die Schaltflächen erhöht und dreidimensional angezeigt zu werden und die Trennzeichen, die als eine Lücke zwischen den Schaltflächen angezeigt werden.  
  
 Sie können Zuweisen einer <xref:System.Windows.Forms.ContextMenu> auf eine Schaltfläche Wenn der <xref:System.Windows.Forms.ToolBarButton.Style%2A> -Eigenschaftensatz auf `ToolBarButtonStyle.DropDown`. Wenn die Schaltfläche geklickt wird, wird das zugeordnete Menü angezeigt.  
  
 Zum Erstellen einer Sammlung von <xref:System.Windows.Forms.ToolBarButton> Steuerelemente zum Anzeigen einer <xref:System.Windows.Forms.ToolBar>, einzeln mithilfe die Schaltflächen Hinzufügen der <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A> Methode der <xref:System.Windows.Forms.ToolBar.Buttons%2A> Eigenschaft. Sie können auch mehrere mithilfe von Symbolleisten-Schaltflächen Hinzufügen der <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A> Methode.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt eine <xref:System.Windows.Forms.ToolBar> und drei <xref:System.Windows.Forms.ToolBarButton> Steuerelemente. Die Auflistung der Schaltflächen die Symbolleisten-Schaltflächen zugewiesen sind, die Auflistung der Symbolleiste zugewiesen ist und die Symbolleiste auf das Formular hinzugefügt wird. Auf der <xref:System.Windows.Forms.ToolBar.ButtonClick> Ereignis von der Symbolleiste der <xref:System.Windows.Forms.ToolBarButtonClickEventArgs.Button%2A> Eigenschaft der <xref:System.Windows.Forms.ToolBarButtonClickEventArgs> wird ausgewertet und das entsprechende Dialogfeld geöffnet. Dieser Code erfordert, dass eine <xref:System.Windows.Forms.Form>, <xref:System.Windows.Forms.OpenFileDialog>, <xref:System.Windows.Forms.SaveFileDialog>, und ein <xref:System.Windows.Forms.PrintDialog> erstellt wurden.  
  
 [!code-cpp[Classic ToolBar.ToolBar Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBar Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBar Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBar Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBar Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBar Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ToolBar" />
    <altmember cref="T:System.Windows.Forms.MenuItem" />
    <altmember cref="T:System.Windows.Forms.ImageList" />
    <altmember cref="T:System.Windows.Forms.ToolTip" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.ToolBarButton" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolBarButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBarButton.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolBarButton();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.ToolBarButton" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein neu erstelltes <xref:System.Windows.Forms.ToolBarButton> besitzt keinen Standard <xref:System.Windows.Forms.ToolBarButton.Text%2A> oder <xref:System.Drawing.Image> zugewiesen ist. Die Schaltfläche "das Standardformat ist `ToolBarButtonStyle.PushButton`.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt eine <xref:System.Windows.Forms.ToolBar> und drei <xref:System.Windows.Forms.ToolBarButton> steuert, weist die Schaltflächen der Symbolleiste, und einige der allgemeinen Eigenschaften der Schaltflächen festgelegt. Dieser Code erfordert, dass eine <xref:System.Windows.Forms.MenuItem>, <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> und <xref:System.Windows.Forms.Form> erstellt wurden und die <xref:System.Windows.Forms.ImageList> verfügt über mindestens ein <xref:System.Drawing.Image> zugewiesen ist.  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolBarButton (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBarButton.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolBarButton(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ToolBarButton : string -&gt; System.Windows.Forms.ToolBarButton" Usage="new System.Windows.Forms.ToolBarButton text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Der auf dem neuen <see cref="T:System.Windows.Forms.ToolBarButton" /> anzuzeigende Text.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.ToolBarButton" />-Klasse und zeigt den zugewiesenen Text auf der Schaltfläche an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die neu erstellte <xref:System.Windows.Forms.ToolBarButton> hat keine <xref:System.Drawing.Image> zugewiesen ist. Die Schaltfläche "das Standardformat ist <xref:System.Windows.Forms.ToolBarButtonStyle.PushButton>. Die `text` Parameter ist zugewiesen, um die <xref:System.Windows.Forms.ToolBarButton.Text%2A> Eigenschaft, und klicken Sie auf das neue Symbolleisten-Schaltflächen-Steuerelement angezeigt wird.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt eine <xref:System.Windows.Forms.ToolBar> und drei <xref:System.Windows.Forms.ToolBarButton> steuert, weist die Schaltflächen der Symbolleiste, und einige der allgemeinen Eigenschaften der Schaltflächen festgelegt. Dieser Code erfordert, dass eine <xref:System.Windows.Forms.MenuItem>, <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> und <xref:System.Windows.Forms.Form> erstellt wurden und die <xref:System.Windows.Forms.ImageList> verfügt über mindestens ein <xref:System.Drawing.Image> zugewiesen ist.  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBar" />
        <altmember cref="P:System.Windows.Forms.ToolBarButton.Text" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBarButton.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="toolBarButton.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
        <summary>Gibt die von <see cref="T:System.Windows.Forms.ToolBarButton" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, von der öffentlichen `Dispose` Methode und die <xref:System.Object.Finalize%2A> Methode. `Dispose` Ruft die geschützte `Dispose(Boolean)` -Methode mit dem `disposing` Parametersatz zu `true`. <xref:System.Object.Finalize%2A> Ruft `Dispose` mit `disposing` festgelegt `false`.  
  
 Wenn die `disposing` Parameter true ist, gibt diese Methode alle Ressourcen frei, die für verwaltete Objekte, die dieses <xref:System.Windows.Forms.ToolBarButton> Verweise. Diese Methode ruft die `Dispose`-Methode aller Objekte auf, auf die verwiesen wird.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden. Beim Überschreiben von <see langword="Dispose(Boolean)" /> Achten Sie darauf, dass Sie nicht auf Objekte verweisen, die zuvor von einem früheren Aufruf freigegeben wurden <see langword="Dispose" />. Weitere Informationen zur Implementierung <see langword="Dispose(Boolean)" />, finden Sie unter [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
Weitere Informationen zu <see langword="Dispose" /> und <see cref="M:System.Object.Finalize" />, finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Überschreiben der Finalize-Methode](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</para></block>
      </Docs>
    </Member>
    <Member MemberName="DropDownMenu">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Menu DropDownMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Menu DropDownMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.DropDownMenu" />
      <MemberSignature Language="VB.NET" Value="Public Property DropDownMenu As Menu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Menu ^ DropDownMenu { System::Windows::Forms::Menu ^ get(); void set(System::Windows::Forms::Menu ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DropDownMenu : System.Windows.Forms.Menu with get, set" Usage="System.Windows.Forms.ToolBarButton.DropDownMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Menu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das anzuzeigende Menü der Dropdown-Schaltfläche der Symbolleiste ab oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.ContextMenu" />, das auf der Dropdown-Schaltfläche der Symbolleiste angezeigt werden soll. Die Standardeinstellung ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können angeben, ein <xref:System.Windows.Forms.ContextMenu> angezeigt, wenn die Dropdown-Schaltfläche geklickt wird. Diese Eigenschaft wird nicht verwendet werden, es sei denn, die <xref:System.Windows.Forms.ToolBarButton.Style%2A> Eigenschaftswert wird festgelegt, um <xref:System.Windows.Forms.ToolBarButtonStyle.DropDownButton?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Obwohl die <xref:System.Windows.Forms.ToolBarButton.DropDownMenu%2A> -Eigenschaft ist definiert als eine <xref:System.Windows.Forms.Menu> geben, müssen Sie sie zuweisen eine <xref:System.Windows.Forms.ContextMenu> damit es ordnungsgemäß angezeigt. Wenn Sie Ihre eigenen erstellen <xref:System.Windows.Forms.MenuItem> abgeleitete Klasse müssen Sie dieses Objekt zum Zuweisen einer <xref:System.Windows.Forms.ContextMenu> und weisen Sie die <xref:System.Windows.Forms.ContextMenu> auf die <xref:System.Windows.Forms.ToolBarButton.DropDownMenu%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt eine <xref:System.Windows.Forms.ToolBar> und drei <xref:System.Windows.Forms.ToolBarButton> steuert, weist die Schaltflächen der Symbolleiste, und einige der allgemeinen Eigenschaften der Schaltflächen festgelegt. Dieser Code erfordert, dass ein <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> und <xref:System.Windows.Forms.Form> erstellt wurden und die <xref:System.Windows.Forms.ImageList> verfügt über mindestens ein <xref:System.Drawing.Image> zugewiesen ist.  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Das zugewiesene Objekt ist kein <see cref="T:System.Windows.Forms.ContextMenu" />.</exception>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.ToolBarButton.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Schaltfläche aktiviert ist, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die Schaltfläche aktiviert ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.ToolBarButton.Enabled%2A> -Eigenschaftensatz auf `false`, kann nicht auf die Symbolleisten-Schaltfläche geklickt werden, und die Darstellung der Schaltfläche ändert. Die <xref:System.Drawing.Image> und <xref:System.Windows.Forms.ToolBarButton.Text%2A> zugewiesen, auf die Schaltfläche abgeblendet. Wenn das Bild oder Text, mehrere Farben enthält, zeigen sie einfarbig grau dargestellt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageIndex">
      <MemberSignature Language="C#" Value="public int ImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.ImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ImageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ImageIndex : int with get, set" Usage="System.Windows.Forms.ToolBarButton.ImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Indexwert des Bildes ab, das der Schaltfläche zugeordnet ist, oder legt diesen fest.</summary>
        <value>Der Indexwert des der Symbolleisten-Schaltfläche zugeordneten <see cref="T:System.Drawing.Image" />. Der Standard ist -1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ToolBarButton.ImageIndex%2A> Wert verweist auf den indizierten Wert der Bilder in einer <xref:System.Windows.Forms.ImageList> dem übergeordneten Element zugewiesene <xref:System.Windows.Forms.ToolBar> Steuerelement.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt eine <xref:System.Windows.Forms.ToolBar> und drei <xref:System.Windows.Forms.ToolBarButton> steuert, weist die Schaltflächen der Symbolleiste, und einige der allgemeinen Eigenschaften der Schaltflächen festgelegt. Dieser Code erfordert, dass eine <xref:System.Windows.Forms.MenuItem>, <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> und <xref:System.Windows.Forms.Form> erstellt wurden und die <xref:System.Windows.Forms.ImageList> verfügt über mindestens ein <xref:System.Drawing.Image> zugewiesen ist.  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der zugewiesene Wert ist kleiner als -1.</exception>
        <altmember cref="T:System.Windows.Forms.ToolBar" />
        <altmember cref="T:System.Windows.Forms.ImageList" />
      </Docs>
    </Member>
    <Member MemberName="ImageKey">
      <MemberSignature Language="C#" Value="public string ImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.ImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageKey : string with get, set" Usage="System.Windows.Forms.ToolBarButton.ImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Bilds ab, das der Schaltfläche zugeordnet ist, oder legt diesen fest.</summary>
        <value>Der Name des der Symbolleisten-Schaltfläche zugeordneten <see cref="T:System.Drawing.Image" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ToolBarButton.ImageKey%2A> Wert gibt an, ein Bild in der <xref:System.Windows.Forms.ImageList> dem übergeordneten Element zugewiesene <xref:System.Windows.Forms.ToolBar> Steuerelement.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="T:System.Windows.Forms.ToolBar" />
        <altmember cref="P:System.Windows.Forms.ToolBar.ImageList" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.ToolBarButton.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Der Name der Schaltfläche.</summary>
        <value>Der Name der Schaltfläche.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können den Namen der Schaltfläche als Schlüssel zum Abrufen der <xref:System.Windows.Forms.ToolBarButton> aus der <xref:System.Windows.Forms.ToolBar.Buttons%2A> Auflistung von eine <xref:System.Windows.Forms.ToolBar> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolBar Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolBar Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As ToolBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolBar ^ Parent { System::Windows::Forms::ToolBar ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.ToolBar" Usage="System.Windows.Forms.ToolBarButton.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Symbolleisten-Steuerelement ab, dem die Symbolleisten-Schaltfläche zugewiesen ist.</summary>
        <value>Das <see cref="T:System.Windows.Forms.ToolBar" />-Steuerelement, dem <see cref="T:System.Windows.Forms.ToolBarButton" /> zugewiesen ist.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ToolBar" />
      </Docs>
    </Member>
    <Member MemberName="PartialPush">
      <MemberSignature Language="C#" Value="public bool PartialPush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PartialPush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.PartialPush" />
      <MemberSignature Language="VB.NET" Value="Public Property PartialPush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PartialPush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PartialPush : bool with get, set" Usage="System.Windows.Forms.ToolBarButton.PartialPush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob eine An-Aus-Schaltfläche einer Symbolleiste teilweise gedrückt ist, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn eine umschaltbare Symbolleisten-Schaltfläche teilweise gedrückt ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Windows.Forms.ToolBarButton.PartialPush%2A> nastaven NA hodnotu `true`, die Symbolleisten-Schaltfläche, die die Oberfläche ausgegraut angezeigt wird. Diese Darstellung unterscheidet sich von der abgeblendeten Darstellung bei der <xref:System.Windows.Forms.ToolBarButton.Enabled%2A> -Eigenschaftensatz auf `false` , da die Partial-Push-Darstellung einer undefinierbaren Masse auf die gesamte Oberfläche der Schaltfläche ermöglicht. Diese Eigenschaft hat keine Auswirkungen, es sei denn, die <xref:System.Windows.Forms.ToolBarButtonStyle> nastaven NA hodnotu `ToggleButton`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Windows.Forms.ToolBarButton.Pushed%2A>, und <xref:System.Windows.Forms.ToolBarButton.PartialPush%2A> Eigenschaften. Um das Beispiel auszuführen, fügen Sie in den folgenden Code in ein Formular mit einem <xref:System.Windows.Forms.RichTextBox> Steuerelement namens `RichTextBox1`. Rufen Sie die `InitializeToolBar` -Methode in den Konstruktor des Formulars oder `Load` Methode.  
  
 [!code-cpp[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBarButtonStyle" />
      </Docs>
    </Member>
    <Member MemberName="Pushed">
      <MemberSignature Language="C#" Value="public bool Pushed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Pushed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Pushed" />
      <MemberSignature Language="VB.NET" Value="Public Property Pushed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Pushed { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Pushed : bool with get, set" Usage="System.Windows.Forms.ToolBarButton.Pushed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob eine An-Aus-Schaltfläche einer Symbolleiste gegenwärtig gedrückt ist, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn eine umschaltbare Symbolleisten-Schaltfläche gegenwärtig gedrückt ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Windows.Forms.ToolBarButton.Pushed%2A> nastaven NA hodnotu `true`, die Symbolleisten-Schaltfläche angezeigt wird, vertieft oder abgesenkt Bezug auf die anderen Schaltflächen. Diese Eigenschaft hat keine Auswirkungen, es sei denn, die <xref:System.Windows.Forms.ToolBarButtonStyle> nastaven NA hodnotu `ToggleButton`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Windows.Forms.ToolBarButton.Pushed%2A>, und <xref:System.Windows.Forms.ToolBarButton.PartialPush%2A> Eigenschaften. Um das Beispiel auszuführen, fügen Sie in den folgenden Code in ein Formular mit einem <xref:System.Windows.Forms.RichTextBox> Steuerelement namens `RichTextBox1`. Rufen Sie die `InitializeToolBar` -Methode in den Konstruktor des Formulars oder `Load` Methode.  
  
 [!code-cpp[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBarButtonStyle" />
      </Docs>
    </Member>
    <Member MemberName="Rectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Rectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Rectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Rectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Rectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Rectangle : System.Drawing.Rectangle" Usage="System.Windows.Forms.ToolBarButton.Rectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das umschließende Rechteck für eine Symbolleisten-Schaltfläche ab.</summary>
        <value>Das umschließende <see cref="T:System.Drawing.Rectangle" /> für eine Symbolleisten-Schaltfläche.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.ToolBar> und die Schaltfläche "aktuelle" sind beide <xref:System.Windows.Forms.ToolBarButton.Visible%2A>, und klicken Sie dann diese Eigenschaft ruft das umschließende Rechteck ab, die Schaltfläche sich derzeit in befindet.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBar" />
        <altmember cref="P:System.Windows.Forms.ToolBarButton.Visible" />
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolBarButtonStyle Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolBarButtonStyle Style" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As ToolBarButtonStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolBarButtonStyle Style { System::Windows::Forms::ToolBarButtonStyle get(); void set(System::Windows::Forms::ToolBarButtonStyle value); };" />
      <MemberSignature Language="F#" Value="member this.Style : System.Windows.Forms.ToolBarButtonStyle with get, set" Usage="System.Windows.Forms.ToolBarButton.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolBarButtonStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Format der Symbolleisten-Schaltfläche ab oder legt dieses fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.ToolBarButtonStyle" />-Werte. Die Standardeinstellung ist <see langword="ToolBarButtonStyle.PushButton" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Schaltfläche mit den <xref:System.Windows.Forms.ToolBarButton.Style%2A> nastaven NA hodnotu <xref:System.Windows.Forms.ToolBarButtonStyle.DropDownButton> können Sie angeben, ein <xref:System.Windows.Forms.MenuItem> angezeigt, wenn die Dropdown-Schaltfläche gedrückt wird. Wenn das Format, um festgelegt ist `ToolBarButtonStyle.Separator`, die Symbolleisten-Schaltfläche angezeigt wird, als Schaltflächentrennzeichen für eine und nicht als Schaltfläche. Die `ToolBarButtonStyle.ToggleButton` Format bewirkt, dass die Symbolleisten-Schaltfläche, z. B. eine Umschaltfläche fungieren; es kann sein, einem ein- oder ausschalten Zustand.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt eine <xref:System.Windows.Forms.ToolBar> und drei <xref:System.Windows.Forms.ToolBarButton> steuert, weist die Schaltflächen der Symbolleiste, und einige der allgemeinen Eigenschaften der Schaltflächen festgelegt. Dieser Code erfordert, dass eine <xref:System.Windows.Forms.MenuItem>, <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> und <xref:System.Windows.Forms.Form> erstellt wurden und die <xref:System.Windows.Forms.ImageList> verfügt über mindestens ein <xref:System.Drawing.Image> zugewiesen ist.  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der zugewiesene Wert ist keiner der <see cref="T:System.Windows.Forms.ToolBarButtonStyle" />-Werte.</exception>
        <altmember cref="T:System.Windows.Forms.ToolBarButtonStyle" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.ToolBarButton.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Objekt ab, das die Daten über die Symbolleisten-Schaltfläche enthält, oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.Object" />, das Daten über die Symbolleisten-Schaltfläche enthält. Die Standardeinstellung ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ruft ab oder weist derzeit die Symbolleisten-Schaltfläche zugeordneten Daten. Alle <xref:System.Object> abgeleiteter Typ kann diese Eigenschaft zugewiesen werden. Wenn diese Eigenschaft über die Windows Forms-Designer festgelegt wird, kann nur Text zugewiesen werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Windows.Forms.ToolBarButton.Pushed%2A>, <xref:System.Windows.Forms.ToolBarButton.PartialPush%2A>, und <xref:System.Windows.Forms.ToolBarButton.Tag%2A> Eigenschaften. Um das Beispiel auszuführen, fügen Sie in den folgenden Code in ein Formular mit einem <xref:System.Windows.Forms.RichTextBox> Steuerelement namens `RichTextBox1`. Rufen Sie die `InitializeToolBar` -Methode in den Konstruktor des Formulars oder `Load` Methode.  
  
 [!code-cpp[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolBarButtonExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolBarButtonExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.ToolBarButton.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text ab, der auf der Symbolleisten-Schaltfläche angezeigt wird, oder legt diesen fest.</summary>
        <value>Der auf der Symbolleisten-Schaltfläche angezeigte Text. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Standardwert der Text-Eigenschaft ist eine leere Zeichenfolge (""), wenn Sie das Steuerelement mit erstellt die <xref:System.Windows.Forms.ToolBar.%23ctor%2A> Konstruktor, der die Zeichenfolge als Parameter akzeptiert. Die Ausrichtung des Texts auf der Symbolleisten-Schaltfläche richtet sich nach der <xref:System.Windows.Forms.ToolBar.TextAlign%2A> Eigenschaft der Schaltfläche übergeordneten <xref:System.Windows.Forms.ToolBar>, der auf einen der gesetzt werden kann die <xref:System.Windows.Forms.ToolBarTextAlign> -Enumerationswerte fest. Die Ausrichtung ist in Bezug auf das der Schaltfläche zugeordnete Bild. Wenn kein Bild der Schaltfläche zugeordnet ist, werden Leerzeichen links auf die Oberfläche des der Symbolleisten-Schaltfläche.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt eine <xref:System.Windows.Forms.ToolBar> und drei <xref:System.Windows.Forms.ToolBarButton> steuert, weist die Schaltflächen der Symbolleiste, und einige der allgemeinen Eigenschaften der Schaltflächen festgelegt. Dieser Code erfordert, dass eine <xref:System.Windows.Forms.MenuItem>, <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> und <xref:System.Windows.Forms.Form> erstellt wurden und die <xref:System.Windows.Forms.ImageList> verfügt über mindestens ein <xref:System.Drawing.Image> zugewiesen ist.  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Image" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipText">
      <MemberSignature Language="C#" Value="public string ToolTipText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTipText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.ToolTipText" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTipText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTipText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTipText : string with get, set" Usage="System.Windows.Forms.ToolBarButton.ToolTipText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text ab, der als QuickInfo für die Schaltfläche angezeigt wird, oder legt diesen fest.</summary>
        <value>Der Text, der angezeigt wird, wenn sich der Mauszeiger über der Symbolleisten-Schaltfläche befindet. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um die Anzeige der QuickInfo-Text zu aktivieren, wenn der Mauszeiger über die Schaltfläche bewegt wird, legen Sie die <xref:System.Windows.Forms.ToolBar.ShowToolTips%2A> Eigenschaft der Schaltfläche übergeordneten <xref:System.Windows.Forms.ToolBar> zu `true`.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt eine <xref:System.Windows.Forms.ToolBar> und drei <xref:System.Windows.Forms.ToolBarButton> steuert, weist die Schaltflächen der Symbolleiste, und einige der allgemeinen Eigenschaften der Schaltflächen festgelegt. Dieser Code erfordert, dass eine <xref:System.Windows.Forms.MenuItem>, <xref:System.Windows.Forms.ImageList>, <xref:System.Windows.Forms.ToolTip> und <xref:System.Windows.Forms.Form> erstellt wurden und die <xref:System.Windows.Forms.ImageList> verfügt über mindestens ein <xref:System.Drawing.Image> zugewiesen ist.  
  
 [!code-cpp[Classic ToolBarButton.Style Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBarButton.Style Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBarButton.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBarButton.Style Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolBar.ShowToolTips" />
        <altmember cref="T:System.Windows.Forms.ToolTip" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBarButton.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="toolBarButton.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Zeichenfolge zurück, die das <see cref="T:System.Windows.Forms.ToolBarButton" />-Steuerelement darstellt.</summary>
        <returns>Eine Zeichenfolge, die das aktuelle <see cref="T:System.Windows.Forms.ToolBarButton" /> darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ToolBarButton.ToString%2A> Methode gibt eine Zeichenfolge, die den Typ und den Wert der enthält die <xref:System.Windows.Forms.ToolBarButton.Style%2A> und <xref:System.Windows.Forms.ToolBarButton.Text%2A> Eigenschaften.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBarButton.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Windows.Forms.ToolBarButton.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Symbolleisten-Schaltfläche sichtbar ist, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die Symbolleisten-Schaltfläche sichtbar ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Symbolleisten-Schaltfläche nicht sichtbar ist, klicken Sie auf der Symbolleiste nicht angezeigt und kann deshalb keine Benutzereingaben empfangen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>