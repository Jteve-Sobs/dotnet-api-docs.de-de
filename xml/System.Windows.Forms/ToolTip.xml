<Type Name="ToolTip" FullName="System.Windows.Forms.ToolTip">
  <Metadata><Meta Name="ms.openlocfilehash" Value="49a7ed5afc4cbda7787ebf5e155a7c81d3bcf020" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65004962" /></Metadata><TypeSignature Language="C#" Value="public class ToolTip : System.ComponentModel.Component, System.ComponentModel.IExtenderProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ToolTip extends System.ComponentModel.Component implements class System.ComponentModel.IExtenderProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ToolTip" />
  <TypeSignature Language="VB.NET" Value="Public Class ToolTip&#xA;Inherits Component&#xA;Implements IExtenderProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolTip : System::ComponentModel::Component, System::ComponentModel::IExtenderProvider" />
  <TypeSignature Language="F#" Value="type ToolTip = class&#xA;    inherit Component&#xA;    interface IExtenderProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IExtenderProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.DefaultEvent("Popup")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ProvideProperty("ToolTip", typeof(System.Windows.Forms.Control))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt ein kleines Popupfenster dar, in dem eine kurze Beschreibung des Steuerelements angezeigt wird, wenn mit dem Mauszeiger auf das Steuerelement gezeigt wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der <xref:System.Windows.Forms.ToolTip> -Klasse, Sie können Hinweise für einen Benutzer bereitstellen, wenn der Benutzer den Zeiger auf ein Steuerelement platziert. Die <xref:System.Windows.Forms.ToolTip> Klasse wird normalerweise verwendet, um Benutzer für die beabsichtigte Verwendung eines Steuerelements. Sie können beispielsweise angeben, QuickInfo-Text für ein <xref:System.Windows.Forms.TextBox> -Steuerelement, das einen Namen, das Format von der Name, der in das Steuerelement eingegeben werden akzeptiert. Zusätzlich zum Bereitstellen von hinweisen, können Sie auch die <xref:System.Windows.Forms.ToolTip> Klasse, um Statusinformationen zur Laufzeit bereitzustellen. Beispielsweise können Sie die <xref:System.Windows.Forms.ToolTip> -Klasse Verbindung Geschwindigkeit und Qualität Positionsdaten angezeigt, wenn der Benutzer den Zeiger auf eine <xref:System.Windows.Forms.PictureBox> Steuerelement, das Internet-Verbindungsstatus anzeigt.  
  
 Die <xref:System.Windows.Forms.ToolTip> -Klasse kann in jedem Container verwendet werden. Um einen Container explizit anzugeben, verwenden Sie die <xref:System.Windows.Forms.ToolTip.%23ctor%28System.ComponentModel.IContainer%29> Konstruktor. Ein einzelnes <xref:System.Windows.Forms.ToolTip> Komponente in der Regel wird verwendet, um QuickInfos für mehrere Steuerelemente in einem Formular zu erstellen. Nach der Erstellung einer <xref:System.Windows.Forms.ToolTip>, verwenden Sie einen separaten Aufruf von der <xref:System.Windows.Forms.ToolTip.SetToolTip%2A> Methode, um die Anzeige der QuickInfo auf ein einzelnes Steuerelement zuordnen. Klicken Sie dann, wenn der Benutzer den Zeiger auf ein Steuerelement bewegt wird, wird die QuickInfo mit dem Text angezeigt. Rufen Sie <xref:System.Windows.Forms.ToolTip.SetToolTip%2A> mehr als einmal für das gleiche Steuerelement zum Ändern des Texts, der dem Steuerelement zugeordnet ist. Rufen Sie den Text, der mit einem Steuerelement verknüpft ist mit der <xref:System.Windows.Forms.ToolTip.GetToolTip%2A> Methode. So entfernen Sie alle Zuordnungen der QuickInfo-Text mit einer Instanz von der <xref:System.Windows.Forms.ToolTip> Klasse, verwenden Sie die <xref:System.Windows.Forms.ToolTip.RemoveAll%2A> Methode.  
  
> [!NOTE]
>  QuickInfo-Text wird für Steuerelemente, die deaktiviert sind, nicht angezeigt. Wenn die <xref:System.Windows.Forms.ToolTip.ShowAlways%2A> -Eigenschaftensatz auf `true`, QuickInfos werden nicht angezeigt, wenn der Container aktiv ist.  
  
 Die <xref:System.Windows.Forms.ToolTip> -Klasse bietet die folgenden Eigenschaften und Methoden so ändern Sie das Standardverhalten und die Darstellung einer QuickInfo.  
  
|Kategorie|Zugeordneten Elemente|  
|--------------|------------------------|  
|Manuelle anzeigen|<xref:System.Windows.Forms.ToolTip.Active%2A>, <xref:System.Windows.Forms.ToolTip.Show%2A>, <xref:System.Windows.Forms.ToolTip.Hide%2A>, <xref:System.Windows.Forms.ToolTip.ShowAlways%2A>, <xref:System.Windows.Forms.ToolTip.Popup>, <xref:System.Windows.Forms.ToolTip.StopTimer%2A>|  
|Zeitliche Steuerung der QuickInfo|<xref:System.Windows.Forms.ToolTip.AutoPopDelay%2A>, <xref:System.Windows.Forms.ToolTip.InitialDelay%2A>, <xref:System.Windows.Forms.ToolTip.ReshowDelay%2A>, <xref:System.Windows.Forms.ToolTip.AutomaticDelay%2A>, <xref:System.Windows.Forms.ToolTip.StopTimer%2A>|  
|Content|<xref:System.Windows.Forms.ToolTip.SetToolTip%2A>, <xref:System.Windows.Forms.ToolTip.GetToolTip%2A>, <xref:System.Windows.Forms.ToolTip.StripAmpersands%2A>, <xref:System.Windows.Forms.ToolTip.ToolTipIcon%2A>, <xref:System.Windows.Forms.ToolTip.ToolTipTitle%2A>, <xref:System.Windows.Forms.ToolTip.RemoveAll%2A>|  
|Darstellung|<xref:System.Windows.Forms.ToolTip.BackColor%2A>, <xref:System.Windows.Forms.ToolTip.ForeColor%2A>, <xref:System.Windows.Forms.ToolTip.IsBalloon%2A>, <xref:System.Windows.Forms.ToolTip.OwnerDraw%2A>, <xref:System.Windows.Forms.ToolTip.UseAnimation%2A>, <xref:System.Windows.Forms.ToolTip.UseFading%2A>|  
  
 Wenn Sie möchten alle QuickInfo-Text zu deaktivieren, sodass diese nicht in Ihrer Anwendung angezeigt werden, können Sie mithilfe der <xref:System.Windows.Forms.ToolTip.Active%2A> Eigenschaft. In der Regel die QuickInfo gezeichnet wird, vom Betriebssystem, sondern die Darstellung Anpassen der <xref:System.Windows.Forms.ToolTip>, Sie können festlegen, die <xref:System.Windows.Forms.ToolTip.OwnerDraw%2A> Eigenschaft, um `true` und behandeln die <xref:System.Windows.Forms.ToolTip.Draw> Ereignis.  
  
 Die <xref:System.Windows.Forms.ToolTip.ToolTipTitle%2A> -Klasse implementiert die <xref:System.ComponentModel.IExtenderProvider?displayProperty=nameWithType> -Schnittstelle, die eine einzelne Methode verfügt, <xref:System.Windows.Forms.ToolTip.CanExtend%2A>. QuickInfos erweitern Steuerelemente auf die gleiche Form zur Entwurfszeit Hinzufügen einer `ToolTip` Eigenschaft. Weitere Informationen über Extenderanbieter finden Sie unter [Extenderanbieter](https://msdn.microsoft.com/library/4ce043d8-cd48-49dd-abef-185a2079e96a).  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt eine Instanz von der <xref:System.Windows.Forms.ToolTip> -Klasse und ordnet die Instanz mit der <xref:System.Windows.Forms.Form> , die innerhalb die Instanz erstellt wird. Der Code initialisiert klicken Sie dann die Delay-Eigenschaften <xref:System.Windows.Forms.ToolTip.AutoPopDelay%2A>, <xref:System.Windows.Forms.ToolTip.InitialDelay%2A>, und <xref:System.Windows.Forms.ToolTip.ReshowDelay%2A>. Darüber hinaus die Instanz von der <xref:System.Windows.Forms.ToolTip> -Klasse legt die <xref:System.Windows.Forms.ToolTip.ShowAlways%2A> Eigenschaft `true` zum Aktivieren der QuickInfo-Text auch angezeigt, unabhängig davon, ob das Formular aktiv ist. Im Beispiel wird schließlich QuickInfo-Text mit zwei Steuerelemente eines Formulars eine <xref:System.Windows.Forms.Button> und <xref:System.Windows.Forms.CheckBox>. Im Codebeispiel wird vorausgesetzt, dass die Methode definiert, die im Beispiel in einer <xref:System.Windows.Forms.Form> , enthält eine <xref:System.Windows.Forms.Button> Steuerelement mit dem Namen `button1` und ein <xref:System.Windows.Forms.CheckBox> Steuerelement mit dem Namen `checkBox1`, und die die Methode wird vom Konstruktor aufgerufen von der <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[ToolTip Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolTip Example/CPP/form1.cpp#1)]
 [!code-csharp[ToolTip Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolTip Example/CS/form1.cs#1)]
 [!code-vb[ToolTip Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolTip Example/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ToolTipIcon" />
    <altmember cref="T:System.Windows.Forms.HelpProvider" />
    <related type="Article" href="https://msdn.microsoft.com/library/4ce043d8-cd48-49dd-abef-185a2079e96a">Extenderanbieter</related>
    <related type="Article" href="https://msdn.microsoft.com/library/82e71dc3-0159-4f91-9f22-499224f004a0">ToolTip-Komponente (Windows Forms)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.ToolTip" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolTip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolTip.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolTip();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Windows.Forms.ToolTip" /> ohne einen angegebenen Container.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor erstellt eine Instanz einer QuickInfo, die nicht auf einen beliebigen Container zugeordnet.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt eine Instanz von der <xref:System.Windows.Forms.ToolTip> Klasse. Der Code initialisiert klicken Sie dann die Delay-Eigenschaften <xref:System.Windows.Forms.ToolTip.AutoPopDelay%2A>, <xref:System.Windows.Forms.ToolTip.InitialDelay%2A>, und <xref:System.Windows.Forms.ToolTip.ReshowDelay%2A>. Darüber hinaus die Instanz von der <xref:System.Windows.Forms.ToolTip> -Klasse legt die <xref:System.Windows.Forms.ToolTip.ShowAlways%2A> Eigenschaft `true` zum Aktivieren der QuickInfo-Text, der angezeigt werden, unabhängig davon, ob das Formular aktiv ist. Im Beispiel wird schließlich QuickInfo-Text mit zwei Steuerelemente eines Formulars eine <xref:System.Windows.Forms.Button> und <xref:System.Windows.Forms.CheckBox>. Im Codebeispiel wird vorausgesetzt, dass die Methode definiert, die im Beispiel in einer <xref:System.Windows.Forms.Form> , enthält eine <xref:System.Windows.Forms.Button> Steuerelement mit dem Namen `button1` und <xref:System.Windows.Forms.CheckBox> Steuerelement mit dem Namen `checkBox1,` und, die die Methode wird vom Konstruktor aufgerufen die <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[ToolTip Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolTip Example/CPP/form1.cpp#1)]
 [!code-csharp[ToolTip Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolTip Example/CS/form1.cs#1)]
 [!code-vb[ToolTip Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolTip Example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
        <altmember cref="T:System.Windows.Forms.UserControl" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolTip (System.ComponentModel.IContainer cont);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer cont) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolTip.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cont As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolTip(System::ComponentModel::IContainer ^ cont);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ToolTip : System.ComponentModel.IContainer -&gt; System.Windows.Forms.ToolTip" Usage="new System.Windows.Forms.ToolTip cont" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cont" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="cont">Ein <see cref="T:System.ComponentModel.IContainer" /> , das den Container darstellt. die <see cref="T:System.Windows.Forms.ToolTip" />.</param>
        <summary>Initialisiert eine neue Instanz der dem <see cref="T:System.Windows.Forms.ToolTip" /> Klasse mit einem angegebenen Container.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ToolTip> Konstruktor ermöglicht Ihnen die Zuordnung einer <xref:System.Windows.Forms.ToolTip> mit einem <xref:System.ComponentModel.Container> Objekt. Durch Zuordnen der <xref:System.Windows.Forms.ToolTip> auf diese Weise übergeben Sie die Kontrolle der Lebensdauer der die QuickInfo ein, die <xref:System.ComponentModel.Container>. Dies kann nützlich sein, wenn Sie mehrere Komponenten in Ihrer Anwendung verwenden, und alle zur gleichen Zeit löschen möchten. Angenommen, Sie verknüpfen ein <xref:System.Windows.Forms.ToolTip>, eine <xref:System.Windows.Forms.ImageList>, und ein <xref:System.Windows.Forms.Timer> mit einer <xref:System.ComponentModel.Container>, wird beim Aufruf <xref:System.ComponentModel.Container.Dispose%2A> auf die <xref:System.ComponentModel.Container> erzwingt auch Verwerfen von all diese Komponenten.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Container" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="public bool Active { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolTip.Active" />
      <MemberSignature Language="VB.NET" Value="Public Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Active { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Active : bool with get, set" Usage="System.Windows.Forms.ToolTip.Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die QuickInfo gerade aktiv ist, oder legt diesen fest.</summary>
        <value><see langword="true" /> Wenn die QuickInfo gerade aktiv ist; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der <xref:System.Windows.Forms.ToolTip.Active%2A> -Eigenschaft, die Sie aktivieren oder deaktivieren Sie die Anzeige der QuickInfo-Text für alle Steuerelemente, die von diesem bestimmten angegebenen Text enthalten können <xref:System.Windows.Forms.ToolTip> Komponente. Obwohl mehr als eine <xref:System.Windows.Forms.ToolTip> Komponente erstellt und ein Formular, setzen Sie zugewiesen werden kann, die <xref:System.Windows.Forms.ToolTip.Active%2A> Eigenschaft, um `false` wirkt sich nur auf die aktuelle <xref:System.Windows.Forms.ToolTip>. Sie können angeben, können Benutzer den Wert dieser Eigenschaft in einem Formular festgelegt wird, die Optionen für Anwendungen bereitstellt. Diese Optionen geben wiederum den Benutzer die Möglichkeit zum Aktivieren oder deaktivieren die Anzeige von QuickInfos in Ihrer Anwendung.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolTip.Hide(System.Windows.Forms.IWin32Window)" />
        <altmember cref="M:System.Windows.Forms.ToolTip.RemoveAll" />
        <altmember cref="Overload:System.Windows.Forms.ToolTip.Show" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ShowAlways" />
      </Docs>
    </Member>
    <Member MemberName="AutomaticDelay">
      <MemberSignature Language="C#" Value="public int AutomaticDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AutomaticDelay" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolTip.AutomaticDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomaticDelay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AutomaticDelay { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AutomaticDelay : int with get, set" Usage="System.Windows.Forms.ToolTip.AutomaticDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(500)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die automatische Verzögerung für die QuickInfo ab oder legt diese fest.</summary>
        <value>Die automatische Verzögerung (in Millisekunden). Der Standard ist 500.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ToolTip.AutomaticDelay%2A> Eigenschaft können Sie einen einzelnen Verzögerungswert, dann dient zum Festlegen der Werte der <xref:System.Windows.Forms.ToolTip.AutoPopDelay%2A>, <xref:System.Windows.Forms.ToolTip.InitialDelay%2A>, und <xref:System.Windows.Forms.ToolTip.ReshowDelay%2A> Eigenschaften. Jedes Mal die <xref:System.Windows.Forms.ToolTip.AutomaticDelay%2A> -Eigenschaft festgelegt ist, werden die folgenden Werte standardmäßig festgelegt.  
  
|Eigenschaft|Standardwert|  
|--------------|-------------------|  
|<xref:System.Windows.Forms.ToolTip.AutoPopDelay%2A>|10-Mal die <xref:System.Windows.Forms.ToolTip.AutomaticDelay%2A> -Eigenschaftswert.|  
|<xref:System.Windows.Forms.ToolTip.InitialDelay%2A>|Entspricht der <xref:System.Windows.Forms.ToolTip.AutomaticDelay%2A> -Eigenschaftswert.|  
|<xref:System.Windows.Forms.ToolTip.ReshowDelay%2A>|1/5 der der <xref:System.Windows.Forms.ToolTip.AutomaticDelay%2A> -Eigenschaftswert.|  
  
 Diese Eigenschaften können auch unabhängig voneinander nach Festlegen der <xref:System.Windows.Forms.ToolTip.AutomaticDelay%2A> -Eigenschaft festgelegt wurde. Weitere Informationen finden Sie unter den <xref:System.Windows.Forms.ToolTip.AutoPopDelay%2A>, <xref:System.Windows.Forms.ToolTip.InitialDelay%2A>, und <xref:System.Windows.Forms.ToolTip.ReshowDelay%2A> Eigenschaften. Diese Eigenschaft wird normalerweise verwendet, um ein Muster der konsistent Verzögerung für die QuickInfo-Fenster bereitzustellen.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolTip.AutoPopDelay" />
        <altmember cref="P:System.Windows.Forms.ToolTip.InitialDelay" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ReshowDelay" />
        <altmember cref="P:System.Windows.Forms.ToolTip.UseFading" />
        <altmember cref="E:System.Windows.Forms.ToolTip.Popup" />
      </Docs>
    </Member>
    <Member MemberName="AutoPopDelay">
      <MemberSignature Language="C#" Value="public int AutoPopDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AutoPopDelay" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolTip.AutoPopDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoPopDelay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AutoPopDelay { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AutoPopDelay : int with get, set" Usage="System.Windows.Forms.ToolTip.AutoPopDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeitspanne ab, während der die QuickInfo sichtbar bleibt, wenn der Zeiger auf einem Steuerelement mit angegebenem QuickInfo-Text nicht bewegt wird, oder legt diese Zeitspanne fest.</summary>
        <value>Die Zeitspanne in Millisekunden, die die <see cref="T:System.Windows.Forms.ToolTip" /> sichtbar bleibt, wenn der Zeiger auf ein Steuerelement nicht bewegt wird. Der Standardwert ist 5000.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ToolTip.AutoPopDelay%2A> Eigenschaft können Sie die Zeit verkürzen oder verlängern, die die <xref:System.Windows.Forms.ToolTip> Fenster wird angezeigt, wenn der Zeiger auf ein Steuerelement befindet. Z. B. Wenn Sie eine ausführliche Hilfe in einer QuickInfo-Fenster anzeigen, können Sie erhöhen den Wert dieser Eigenschaft, um sicherzustellen, dass der Benutzer ausreichend Zeit zum Lesen des Texts.  
  
 Wenn Sie ein Muster der konsistent Verzögerung für die QuickInfo-Fenster haben möchten, legen Sie die <xref:System.Windows.Forms.ToolTip.AutomaticDelay%2A> Eigenschaft. Die <xref:System.Windows.Forms.ToolTip.AutomaticDelay%2A> Eigenschaftensätze der <xref:System.Windows.Forms.ToolTip.AutoPopDelay%2A>, <xref:System.Windows.Forms.ToolTip.ReshowDelay%2A>, und <xref:System.Windows.Forms.ToolTip.InitialDelay%2A> Eigenschaften auf die ursprünglichen Werte basierend auf einem einzelnen Wert. Jedes Mal, wenn die <xref:System.Windows.Forms.ToolTip.AutomaticDelay%2A> Eigenschaft festgelegt ist, die <xref:System.Windows.Forms.ToolTip.AutoPopDelay%2A> -Eigenschaftensatz auf 10 Mal den <xref:System.Windows.Forms.ToolTip.AutomaticDelay%2A> -Eigenschaftswert. Nach der <xref:System.Windows.Forms.ToolTip.AutomaticDelay%2A> -Eigenschaft festgelegt ist, können Sie unabhängig voneinander Festlegen der <xref:System.Windows.Forms.ToolTip.AutoPopDelay%2A> -Eigenschaft, den Standardwert zu überschreiben.  
  
 Die maximale Zeit, die ein Popup verzögert werden kann, ist 5000 Millisekunden. Verwenden Sie für längere Zeiträume, die <xref:System.Windows.Forms.ToolTip.Show%2A> Methode, um den genauen Zeitpunkt zu steuern, wenn die QuickInfo angezeigt wird.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt eine Instanz von der <xref:System.Windows.Forms.ToolTip> -Klasse und ordnet die Instanz mit der <xref:System.Windows.Forms.Form> , die innerhalb die Instanz erstellt wird. Der Code initialisiert klicken Sie dann die Delay-Eigenschaften <xref:System.Windows.Forms.ToolTip.AutoPopDelay%2A>, <xref:System.Windows.Forms.ToolTip.InitialDelay%2A>, und <xref:System.Windows.Forms.ToolTip.ReshowDelay%2A>. Darüber hinaus die Instanz von der <xref:System.Windows.Forms.ToolTip> -Klasse legt die <xref:System.Windows.Forms.ToolTip.ShowAlways%2A> Eigenschaft `true` zum Aktivieren der QuickInfo-Text, der angezeigt werden, unabhängig davon, ob das Formular aktiv ist. Im Beispiel wird schließlich QuickInfo-Text mit zwei Steuerelemente eines Formulars eine <xref:System.Windows.Forms.Button> und <xref:System.Windows.Forms.CheckBox>. Im Codebeispiel wird vorausgesetzt, dass die Methode definiert, die im Beispiel in einer <xref:System.Windows.Forms.Form> , enthält eine <xref:System.Windows.Forms.Button> Steuerelement mit dem Namen `button1` und <xref:System.Windows.Forms.CheckBox> Steuerelement mit dem Namen `checkBox1,` und, die die Methode wird vom Konstruktor aufgerufen die <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[ToolTip Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolTip Example/CPP/form1.cpp#1)]
 [!code-csharp[ToolTip Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolTip Example/CS/form1.cs#1)]
 [!code-vb[ToolTip Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolTip Example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolTip.AutomaticDelay" />
        <altmember cref="P:System.Windows.Forms.ToolTip.InitialDelay" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ReshowDelay" />
        <altmember cref="P:System.Windows.Forms.ToolTip.UseFading" />
        <altmember cref="E:System.Windows.Forms.ToolTip.Popup" />
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolTip.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ToolTip.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Info")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Hintergrundfarbe für die QuickInfo ab oder legt diese fest.</summary>
        <value>Der Hintergrund des <see cref="T:System.Drawing.Color" />-Elements.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die QuickInfo Ownerdrawn-ist, wird diese Eigenschaft ignoriert.  
  
 Die Standardschriftart des Systems wird automatisch verwendet und dürfen nur überschrieben, indem Ownerdrawing-QuickInfo. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Windows.Forms.ToolTip.OwnerDraw%2A>-Eigenschaft.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolTip.ForeColor" />
        <altmember cref="P:System.Windows.Forms.ToolTip.IsBalloon" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ToolTipIcon" />
        <altmember cref="P:System.Windows.Forms.ToolTip.OwnerDraw" />
      </Docs>
    </Member>
    <Member MemberName="CanExtend">
      <MemberSignature Language="C#" Value="public bool CanExtend (object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExtend(object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolTip.CanExtend(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExtend (target As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanExtend(System::Object ^ target);" />
      <MemberSignature Language="F#" Value="abstract member CanExtend : obj -&gt; bool&#xA;override this.CanExtend : obj -&gt; bool" Usage="toolTip.CanExtend target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target">Das Zielobjekt, um eine Extendereigenschaft hinzugefügt werden soll.</param>
        <summary>Gibt <see langword="true" /> , wenn die QuickInfo eine Extendereigenschaft für die angegebene Zielkomponente anbieten kann.</summary>
        <returns><see langword="true" /> Wenn die <see cref="T:System.Windows.Forms.ToolTip" /> -Klasse eine oder mehrere Extendereigenschaften anbieten kann, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ToolTip.CanExtend%2A> Methode ist das einzige Mitglied der <xref:System.ComponentModel.IExtenderProvider?displayProperty=nameWithType> Schnittstelle. Diese Methode gibt `true` Wenn die `target` Parameter ist vom Typ <xref:System.Windows.Forms.Control>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IExtenderProvider" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolTip.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.ToolTip.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Erstellungsparameter für das QuickInfo-Fenster ab.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.CreateParams" /> mit den Informationen zum Erstellen der QuickInfo benötigten.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ToolTip.CreateParams%2A> Eigenschaft darf nur erweitert werden, wenn Sie eine standardmäßige Windows-Steuerelementklasse oder festzulegende Formate werden nicht von bereitgestellt der <xref:System.Windows.Forms?displayProperty=nameWithType> Namespace. Weitere Informationen über das Erstellen, finden Sie unter den `CreateWindow` und `CreateWindowEx` Funktionen und die `CREATESTRUCT` Struktur Dokumentation in der Referenz zur Windows-Plattform-SDK befindet sich in der MSDN Library.  
  
> [!NOTE]
>  Beim Überschreiben der <xref:System.Windows.Forms.ToolTip.CreateParams%2A> Eigenschaft in einer abgeleiteten Klasse verwenden, der Basisklasse <xref:System.Windows.Forms.ToolTip.CreateParams%2A> Eigenschaft, um die grundlegende Implementierung zu erweitern.  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">Für erbende Klassen zum nicht verwalteten Code aufrufen, beim Abrufen des Werts der Eigenschaft.</permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">für den unmittelbaren Aufrufer zum Aufrufen von nicht verwalteten Codes, beim Abrufen des Werts der Eigenschaft.</permission>
        <altmember cref="T:System.Windows.Forms.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolTip.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="toolTip.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
        <summary>Gibt die von <see cref="T:System.ComponentModel.Component" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawToolTipEventHandler Draw;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawToolTipEventHandler Draw" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolTip.Draw" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Draw As DrawToolTipEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawToolTipEventHandler ^ Draw;" />
      <MemberSignature Language="F#" Value="member this.Draw : System.Windows.Forms.DrawToolTipEventHandler " Usage="member this.Draw : System.Windows.Forms.DrawToolTipEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawToolTipEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn die QuickInfo gezeichnet wird und die <see cref="P:System.Windows.Forms.ToolTip.OwnerDraw" /> -Eigenschaftensatz auf <see langword="true" /> und <see cref="P:System.Windows.Forms.ToolTip.IsBalloon" /> Eigenschaft <see langword="false" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der <xref:System.Windows.Forms.ToolTip.Draw> Ereignis können Sie die Darstellung der Anpassen der <xref:System.Windows.Forms.ToolTip>.  
  
 Die <xref:System.Windows.Forms.ToolTip.Draw> Ereignis wird ausgelöst, durch die <xref:System.Windows.Forms.ToolTip> Klasse an, wenn die <xref:System.Windows.Forms.ToolTip> gezeichnet wird und die <xref:System.Windows.Forms.ToolTip.OwnerDraw%2A?displayProperty=nameWithType> Eigenschaftswert ist `true` und <xref:System.Windows.Forms.ToolTip.IsBalloon%2A> -Eigenschaft ist `false`. Die <xref:System.Windows.Forms.DrawToolTipEventArgs> Klasse enthält alle Informationen zum Zeichnen der <xref:System.Windows.Forms.ToolTip>, einschließlich des QuickInfo-Texts, der <xref:System.Drawing.Rectangle>, und die <xref:System.Drawing.Graphics> -Objekt, auf dem gezeichnet werden soll. Verwenden Sie zum Anpassen der Darstellung der QuickInfo der <xref:System.Drawing.Rectangle> um zu bestimmen, das die Begrenzungen des QuickInfo und die <xref:System.Drawing.Graphics> Objekt, das die benutzerdefinierte Zeichnung durchführen. Sie können sich auf die Grenzen von der <xref:System.Windows.Forms.ToolTip> bevor es durch Behandlung angezeigt wird der <xref:System.Windows.Forms.ToolTip.Popup> Ereignis.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie benutzerdefiniertes Zeichnen die <xref:System.Windows.Forms.ToolTip>. Das Beispiel erstellt eine <xref:System.Windows.Forms.ToolTip> und ordnet dieses auf drei <xref:System.Windows.Forms.Button> Steuerelemente befindet sich auf die <xref:System.Windows.Forms.Form>. Im Beispiel wird die <xref:System.Windows.Forms.ToolTip.OwnerDraw%2A> Eigenschaft `true` und behandelt die <xref:System.Windows.Forms.ToolTip.Draw> Ereignis. In der <xref:System.Windows.Forms.ToolTip.Draw> -Ereignishandler der <xref:System.Windows.Forms.ToolTip> ist unterschiedlich, je nachdem welche Schaltfläche gezeichnet der <xref:System.Windows.Forms.ToolTip> angezeigt wird durch die <xref:System.Windows.Forms.DrawToolTipEventArgs.AssociatedControl%2A?displayProperty=nameWithType> Eigenschaft.  
  
 [!code-cpp[System.Windows.Forms.ToolTip.OwnerDraw#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolTip.OwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolTip.OwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolTip.OwnerDraw" />
        <altmember cref="P:System.Windows.Forms.ToolTip.BackColor" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ForeColor" />
        <altmember cref="P:System.Windows.Forms.ToolTip.IsBalloon" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ToolTipIcon" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ToolTipTitle" />
        <altmember cref="E:System.Windows.Forms.ToolTip.Popup" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ToolTip ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolTip.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ToolTip ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="toolTip.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Der nicht verwalteten Ressourcen frei und führt andere Bereinigungsvorgänge vor der <see cref="T:System.Windows.Forms.Cursor" /> vom Garbage Collector wieder zugänglich gemacht wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode überschreibt <xref:System.Object.Finalize%2A?displayProperty=nameWithType>. Anwendungscode sollte diese Methode nicht aufgerufen. ein Objekt des <xref:System.Object.Finalize%2A> Methode wird automatisch während der Garbagecollection vom Garbage Collector durch einen Aufruf von Collection aufgerufen wurde hat die <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> Methode. Weitere Informationen finden Sie unter [Finalize-Methoden und Destruktoren](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md), und [Überschreiben der Finalize-Methode](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.ToolTip.Dispose" />
        <altmember cref="M:System.Object.Finalize" />
        <altmember cref="M:System.GC.SuppressFinalize(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolTip.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ToolTip.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "InfoText")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Vordergrundfarbe für die QuickInfo ab oder legt diese fest.</summary>
        <value>Der Vordergrund <see cref="T:System.Drawing.Color" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Windows.Forms.ToolTip.BackColor%2A> und <xref:System.Windows.Forms.ToolTip.ForeColor%2A> Eigenschaften zum Ändern des Farbschemas, die von QuickInfos verwendet. Die Standardschriftart des Systems wird automatisch verwendet und dürfen nur überschrieben, indem Ownerdrawing-QuickInfo. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Windows.Forms.ToolTip.OwnerDraw%2A>-Eigenschaft.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolTip.BackColor" />
        <altmember cref="P:System.Windows.Forms.ToolTip.IsBalloon" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ToolTipIcon" />
        <altmember cref="P:System.Windows.Forms.ToolTip.OwnerDraw" />
      </Docs>
    </Member>
    <Member MemberName="GetToolTip">
      <MemberSignature Language="C#" Value="public string GetToolTip (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetToolTip(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolTip.GetToolTip(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetToolTip(System::Windows::Forms::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetToolTip : System.Windows.Forms.Control -&gt; string" Usage="toolTip.GetToolTip control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">Die <see cref="T:System.Windows.Forms.Control" /> für das Abrufen der <see cref="T:System.Windows.Forms.ToolTip" /> Text.</param>
        <summary>Ruft den QuickInfo-Text ab, der dem angegebenen Steuerelement zugeordnet ist.</summary>
        <returns>Ein <see cref="T:System.String" /> , die den QuickInfo-Text für das angegebene Steuerelement enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der <xref:System.Windows.Forms.ToolTip.GetToolTip%2A> -Methode, Sie können die QuickInfo-Text für jedes Steuerelement abrufen. Wenn die QuickInfo-Text in einer Anwendung dynamisch geändert wird, können Sie diese Methode, um herauszufinden, welcher Text zu jedem Zeitpunkt abhängig vom Status der Anwendung angezeigt wird. Um den Text zu ändern, die ein Steuerelement angezeigt wird, verwenden Sie die <xref:System.Windows.Forms.ToolTip.SetToolTip%2A> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolTip.SetToolTip(System.Windows.Forms.Control,System.String)" />
        <altmember cref="P:System.Windows.Forms.ToolTip.StripAmpersands" />
        <altmember cref="M:System.Windows.Forms.ToolTip.ToString" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ToolTipTitle" />
        <altmember cref="P:System.Windows.Forms.ToolTip.Tag" />
      </Docs>
    </Member>
    <Member MemberName="Hide">
      <MemberSignature Language="C#" Value="public void Hide (System.Windows.Forms.IWin32Window win);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Hide(class System.Windows.Forms.IWin32Window win) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolTip.Hide(System.Windows.Forms.IWin32Window)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Hide (win As IWin32Window)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Hide(System::Windows::Forms::IWin32Window ^ win);" />
      <MemberSignature Language="F#" Value="member this.Hide : System.Windows.Forms.IWin32Window -&gt; unit" Usage="toolTip.Hide win" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="win" Type="System.Windows.Forms.IWin32Window" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="win">Die <see cref="T:System.Windows.Forms.IWin32Window" /> des zugeordneten Fensters oder Steuerelements, das die QuickInfo zugeordnet ist.</param>
        <summary>Blendet das angegebene QuickInfo-Fenster aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ToolTip.Hide%2A> Methode blendet die QuickInfo für den angegebenen <xref:System.Windows.Forms.Control> , wenn es gerade angezeigt wird. Deaktivieren oder nicht andernfalls nicht dieselbe QuickInfo angezeigt wird, in der Zukunft. So deaktivieren Sie alle QuickInfo-Fenster verknüpft ist, mit dem aktuellen stattdessen <xref:System.Windows.Forms.ToolTip.ToolTipTitle%2A> Komponentensatz, der <xref:System.Windows.Forms.ToolTip.Active%2A> Eigenschaft `false`.  
  
 Anwendungen, die bei teilweiser Vertrauenswürdigkeit ausgeführt, müssen bestätigen die <xref:System.Security.Permissions.UIPermissionWindow.AllWindows> Berechtigung zur Verwendung dieser Methode wird als <xref:System.Windows.Forms.ToolTip.Hide%2A> können die QuickInfo, die unabhängig von der Aktion durch den Benutzer ausblenden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="win" /> ist <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Erfordert <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> Berechtigung.</permission>
        <altmember cref="Overload:System.Windows.Forms.ToolTip.Show" />
        <altmember cref="P:System.Windows.Forms.ToolTip.Active" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ShowAlways" />
        <altmember cref="P:System.Windows.Forms.ToolTip.UseFading" />
        <altmember cref="M:System.Windows.Forms.ToolTip.RemoveAll" />
        <altmember cref="M:System.Windows.Forms.ToolTip.StopTimer" />
        <altmember cref="E:System.Windows.Forms.ToolTip.Popup" />
      </Docs>
    </Member>
    <Member MemberName="InitialDelay">
      <MemberSignature Language="C#" Value="public int InitialDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InitialDelay" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolTip.InitialDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property InitialDelay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InitialDelay { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.InitialDelay : int with get, set" Usage="System.Windows.Forms.ToolTip.InitialDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die bis zum Anzeigen der QuickInfo verstreichende Zeit ab oder legt diese fest.</summary>
        <value>Die Zeitspanne in Millisekunden, in der der Zeiger auf einem Steuerelement nicht bewegt werden darf, bevor das QuickInfo-Fenster angezeigt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der <xref:System.Windows.Forms.ToolTip.InitialDelay%2A> -Eigenschaft, können Sie verkürzen oder verlängern die Zeit, die die <xref:System.Windows.Forms.ToolTip> wartet, bevor eine QuickInfo-Fenster anzeigt. Wenn der Wert des der <xref:System.Windows.Forms.ToolTip.InitialDelay%2A> -Eigenschaftensatz auf einen Wert zu lange Dauer, die Benutzer der Anwendung möglicherweise nicht bekannt, dass Ihre Anwendung die QuickInfo-Hilfe zur Verfügung. Sie können diese Eigenschaft verwenden, um sicherzustellen, dass der Benutzer schnell angezeigt werden, indem die angegebene Zeit verkürzen QuickInfos verfügt.  
  
 Der Wert für diese Eigenschaft darf 32767 nicht überschreiten.  
  
 Wenn Sie ein Muster der konsistent Verzögerung für die QuickInfo-Fenster haben möchten, legen Sie die <xref:System.Windows.Forms.ToolTip.AutomaticDelay%2A> Eigenschaft. Die <xref:System.Windows.Forms.ToolTip.AutomaticDelay%2A> Eigenschaftensätze der <xref:System.Windows.Forms.ToolTip.AutoPopDelay%2A>, <xref:System.Windows.Forms.ToolTip.ReshowDelay%2A>, und <xref:System.Windows.Forms.ToolTip.InitialDelay%2A> Eigenschaften auf die ursprünglichen Werte basierend auf einem einzelnen Wert. Jedes Mal, wenn die <xref:System.Windows.Forms.ToolTip.AutomaticDelay%2A> Eigenschaft festgelegt ist, die <xref:System.Windows.Forms.ToolTip.InitialDelay%2A> -Eigenschaftensatz auf den gleichen Wert wie die <xref:System.Windows.Forms.ToolTip.AutomaticDelay%2A> Eigenschaft. Nach der <xref:System.Windows.Forms.ToolTip.AutomaticDelay%2A> -Eigenschaft festgelegt ist, können Sie unabhängig voneinander Festlegen der <xref:System.Windows.Forms.ToolTip.InitialDelay%2A> -Eigenschaft, den Standardwert zu überschreiben.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt eine Instanz von der <xref:System.Windows.Forms.ToolTip> -Klasse und ordnet die Instanz mit der <xref:System.Windows.Forms.Form> , die innerhalb die Instanz erstellt wird. Der Code initialisiert klicken Sie dann die Delay-Eigenschaften <xref:System.Windows.Forms.ToolTip.AutoPopDelay%2A>, <xref:System.Windows.Forms.ToolTip.InitialDelay%2A>, und <xref:System.Windows.Forms.ToolTip.ReshowDelay%2A>. Darüber hinaus die Instanz von der <xref:System.Windows.Forms.ToolTip> -Klasse legt die <xref:System.Windows.Forms.ToolTip.ShowAlways%2A> Eigenschaft `true` zum Aktivieren der QuickInfo-Text, der angezeigt werden, unabhängig davon, ob das Formular aktiv ist. Im Beispiel wird schließlich QuickInfo-Text mit zwei Steuerelemente eines Formulars eine <xref:System.Windows.Forms.Button> und <xref:System.Windows.Forms.CheckBox>. Im Codebeispiel wird vorausgesetzt, dass die Methode definiert, die im Beispiel in einer <xref:System.Windows.Forms.Form> , enthält eine <xref:System.Windows.Forms.Button> Steuerelement mit dem Namen `button1` und <xref:System.Windows.Forms.CheckBox> Steuerelement mit dem Namen `checkBox1,` und, die die Methode wird vom Konstruktor aufgerufen die <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[ToolTip Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolTip Example/CPP/form1.cpp#1)]
 [!code-csharp[ToolTip Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolTip Example/CS/form1.cs#1)]
 [!code-vb[ToolTip Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolTip Example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolTip.AutomaticDelay" />
        <altmember cref="P:System.Windows.Forms.ToolTip.AutoPopDelay" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ReshowDelay" />
        <altmember cref="P:System.Windows.Forms.ToolTip.UseFading" />
        <altmember cref="E:System.Windows.Forms.ToolTip.Popup" />
      </Docs>
    </Member>
    <Member MemberName="IsBalloon">
      <MemberSignature Language="C#" Value="public bool IsBalloon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBalloon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolTip.IsBalloon" />
      <MemberSignature Language="VB.NET" Value="Public Property IsBalloon As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBalloon { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsBalloon : bool with get, set" Usage="System.Windows.Forms.ToolTip.IsBalloon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob für die QuickInfo ein Sprechblasenfenster verwenden werden soll, oder legt diesen fest.</summary>
        <value><see langword="true" /> Wenn ein Sprechblasenfenster verwendet werden sollte. andernfalls <see langword="false" /> Wenn ein rechteckiges Standardfenster verwendet werden soll. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig werden QuickInfos mit einfachen rechteckigen Fenstern angezeigt. Durch Festlegen der <xref:System.Windows.Forms.ToolTip.IsBalloon%2A> Eigenschaft `true`, die QuickInfo wird mit einem Sprechblasenfenster angezeigt werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolTip.BackColor" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ForeColor" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ToolTipIcon" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ToolTipTitle" />
      </Docs>
    </Member>
    <Member MemberName="OwnerDraw">
      <MemberSignature Language="C#" Value="public bool OwnerDraw { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OwnerDraw" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolTip.OwnerDraw" />
      <MemberSignature Language="VB.NET" Value="Public Property OwnerDraw As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OwnerDraw { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OwnerDraw : bool with get, set" Usage="System.Windows.Forms.ToolTip.OwnerDraw" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die QuickInfo vom Betriebssystem oder von dem Code, den Sie bereitstellen, gezeichnet wird, oder legt diesen Wert fest.</summary>
        <value><see langword="true" /> Wenn die <see cref="T:System.Windows.Forms.ToolTip" /> von Code, den Sie bereitstellen; gezeichnet wird <see langword="false" /> Wenn die <see cref="T:System.Windows.Forms.ToolTip" /> vom Betriebssystem gezeichnet wird. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel eine <xref:System.Windows.Forms.ToolTip> gezeichnet wird, vom Betriebssystem, sondern die Darstellung Anpassen der <xref:System.Windows.Forms.ToolTip> können Sie festlegen, die <xref:System.Windows.Forms.ToolTip.OwnerDraw%2A> Eigenschaft, um `true` und behandeln die <xref:System.Windows.Forms.ToolTip.Draw> Ereignis.  
  
 Die <xref:System.Windows.Forms.ToolTip.IsBalloon%2A> Eigenschaft austauschverarbeitungsmodi Vorrang vor den <xref:System.Windows.Forms.ToolTip.OwnerDraw%2A> Eigenschaft. Wenn beide so `true`, <xref:System.Windows.Forms.ToolTip> wird über ein Sprechblasenfenster statt über einen Besitzer gezeichneten-Fenster angezeigt werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie der Besitzer gezeichnet der <xref:System.Windows.Forms.ToolTip>. Das Beispiel erstellt eine <xref:System.Windows.Forms.ToolTip> und ordnet dieses auf drei <xref:System.Windows.Forms.Button> Steuerelemente befindet sich auf die <xref:System.Windows.Forms.Form>. Im Beispiel wird die <xref:System.Windows.Forms.ToolTip.OwnerDraw%2A> Eigenschaft `true` und behandelt die <xref:System.Windows.Forms.ToolTip.Draw> Ereignis. In der <xref:System.Windows.Forms.ToolTip.Draw> -Ereignishandler der <xref:System.Windows.Forms.ToolTip> benutzerdefinierte wird gezeichnet, je nachdem welche Schaltfläche die <xref:System.Windows.Forms.ToolTip> angezeigt wird durch die <xref:System.Windows.Forms.DrawToolTipEventArgs.AssociatedControl%2A?displayProperty=nameWithType> Eigenschaft.  
  
 [!code-cpp[System.Windows.Forms.ToolTip.OwnerDraw#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolTip.OwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolTip.OwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolTip.OwnerDraw/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolTip.BackColor" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ForeColor" />
        <altmember cref="P:System.Windows.Forms.ToolTip.IsBalloon" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ToolTipIcon" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ToolTipTitle" />
        <altmember cref="E:System.Windows.Forms.ToolTip.Draw" />
      </Docs>
    </Member>
    <Member MemberName="Popup">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PopupEventHandler Popup;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PopupEventHandler Popup" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolTip.Popup" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Popup As PopupEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PopupEventHandler ^ Popup;" />
      <MemberSignature Language="F#" Value="member this.Popup : System.Windows.Forms.PopupEventHandler " Usage="member this.Popup : System.Windows.Forms.PopupEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PopupEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, bevor eine QuickInfo anfänglich angezeigt wird. Dies ist das Standardereignis für die <see cref="T:System.Windows.Forms.ToolTip" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ToolTip.Popup> Ereignis wird ausgelöst, wenn eine QuickInfo angezeigt wird, entweder durch einen expliziten Aufruf eines der <xref:System.Windows.Forms.ToolTip.Show%2A> Methoden oder wenn die <xref:System.Windows.Forms.ToolTip> Klasse implizit zeigt eine QuickInfo an. Dieses Ereignis kann abgebrochen werden.  
  
 Aufrufen von Eigenschaften in dieser Aufgabe, die dazu führen, dass die zugrunde liegende Fensterhandle, z. B. neu erstellt werden <xref:System.Windows.Forms.ToolTip.IsBalloon%2A>, führt dazu, dass eine Ausnahme ausgelöst wird.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung des neuen Elements. Im Beispiel meldet sich ein Ereignishandler für das Vorhandensein der <xref:System.Windows.Forms.ToolTip.Popup> Ereignis. In diesem Bericht können Sie entnehmen, wann das Ereignis tritt auf, können Sie beim Debuggen unterstützen. Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, beachten Sie, und Ersetzen Sie dabei <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, eine Instanz des Typs enthält <xref:System.Windows.Forms.ToolTip> mit dem Namen `ToolTip1`. Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.ToolTip.Popup> Ereignis.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#619](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#619)]
 [!code-vb[System.Windows.Forms.EventExamples#619](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#619)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolTip.InitialDelay" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ReshowDelay" />
        <altmember cref="P:System.Windows.Forms.ToolTip.UseFading" />
        <altmember cref="Overload:System.Windows.Forms.ToolTip.Show" />
        <altmember cref="E:System.Windows.Forms.ToolTip.Draw" />
        <altmember cref="T:System.Windows.Forms.PopupEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolTip.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAll();" />
      <MemberSignature Language="F#" Value="member this.RemoveAll : unit -&gt; unit" Usage="toolTip.RemoveAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt den gesamten QuickInfo-Text, der derzeit der QuickInfo-Komponente zugeordnet ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Methode verwenden, um QuickInfo-Text zu entfernen, die zugeordnet ist die <xref:System.Windows.Forms.ToolTip> Komponente für alle zugeordneten Steuerelemente. Um die Anzeige von Text stattdessen zu deaktivieren, verwenden Sie die <xref:System.Windows.Forms.ToolTip.Active%2A> Eigenschaft. Um den Text für ein einzelnes zugeordnete Steuerelement zu ändern, verwenden die <xref:System.Windows.Forms.ToolTip.SetToolTip%2A> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolTip.Hide(System.Windows.Forms.IWin32Window)" />
        <altmember cref="P:System.Windows.Forms.ToolTip.Active" />
        <altmember cref="M:System.Windows.Forms.ToolTip.SetToolTip(System.Windows.Forms.Control,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ReshowDelay">
      <MemberSignature Language="C#" Value="public int ReshowDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReshowDelay" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolTip.ReshowDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property ReshowDelay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReshowDelay { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReshowDelay : int with get, set" Usage="System.Windows.Forms.ToolTip.ReshowDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeitspanne für das Anzeigen weiterer QuickInfo-Fenster ab, wenn der Zeiger von einem Steuerelement zu einem anderen bewegt wird, oder legt diese fest.</summary>
        <value>Die Zeitspanne in Millisekunden, nach der weitere QuickInfo-Fenster angezeigt werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der <xref:System.Windows.Forms.ToolTip.ReshowDelay%2A> -Eigenschaft, können Sie verkürzen oder verlängern die Zeit, die die <xref:System.Windows.Forms.ToolTip> wartet, bevor ein QuickInfo-Fenster angezeigt, nachdem ein vorheriges QuickInfo-Fenster angezeigt wird. Beim ersten ein QuickInfo-Fenster angezeigt wird, den Wert des der <xref:System.Windows.Forms.ToolTip.InitialDelay%2A> Eigenschaft wird verwendet, um zu bestimmen, die Verzögerung vor dem ersten Anzeigen der QuickInfo-Fenster anwenden. Wenn ein QuickInfo-Fenster gerade angezeigt wird und der Benutzer bewegt den Zeiger auf ein anderes Steuerelement, das zeigt ein QuickInfo-Fenster den Wert des der <xref:System.Windows.Forms.ToolTip.ReshowDelay%2A> Eigenschaft vor dem Anzeigen der QuickInfo für das neue Steuerelement verwendet wird. Der QuickInfo-Fenster das vorherige Steuerelement muss immer noch angezeigt werden, in der Reihenfolge für die Verzögerung in angegebenen die <xref:System.Windows.Forms.ToolTip.ReshowDelay%2A> Eigenschaft verwendet werden; andernfalls der <xref:System.Windows.Forms.ToolTip.InitialDelay%2A> Eigenschaftswert verwendet wird.  
  
 Wenn Sie ein konsistentes Verzögerung-Muster für die QuickInfo-Fenster haben möchten, legen Sie die <xref:System.Windows.Forms.ToolTip.AutomaticDelay%2A> Eigenschaft. Die <xref:System.Windows.Forms.ToolTip.AutomaticDelay%2A> Eigenschaftensätze der <xref:System.Windows.Forms.ToolTip.AutoPopDelay%2A>, <xref:System.Windows.Forms.ToolTip.ReshowDelay%2A>, und <xref:System.Windows.Forms.ToolTip.InitialDelay%2A> Eigenschaften auf die ursprünglichen Werte basierend auf einem einzelnen Wert. Jedes Mal, wenn die <xref:System.Windows.Forms.ToolTip.AutomaticDelay%2A> Eigenschaft festgelegt ist, die <xref:System.Windows.Forms.ToolTip.ReshowDelay%2A> -Eigenschaftensatz auf 1/5 der der <xref:System.Windows.Forms.ToolTip.AutomaticDelay%2A> -Eigenschaftswert. Nach der <xref:System.Windows.Forms.ToolTip.AutomaticDelay%2A> -Eigenschaft festgelegt ist, können Sie unabhängig voneinander Festlegen der <xref:System.Windows.Forms.ToolTip.ReshowDelay%2A> -Eigenschaft, den Standardwert zu überschreiben.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt eine Instanz von der <xref:System.Windows.Forms.ToolTip> -Klasse und ordnet die Instanz mit der <xref:System.Windows.Forms.Form> , die innerhalb die Instanz erstellt wird. Der Code initialisiert klicken Sie dann die Delay-Eigenschaften <xref:System.Windows.Forms.ToolTip.AutoPopDelay%2A>, <xref:System.Windows.Forms.ToolTip.InitialDelay%2A>, und <xref:System.Windows.Forms.ToolTip.ReshowDelay%2A>. Darüber hinaus die Instanz von der <xref:System.Windows.Forms.ToolTip> -Klasse legt die <xref:System.Windows.Forms.ToolTip.ShowAlways%2A> Eigenschaft `true` zum Aktivieren der QuickInfo-Text, der angezeigt werden, unabhängig davon, ob das Formular aktiv ist. Im Beispiel wird schließlich QuickInfo-Text mit zwei Steuerelemente eines Formulars eine <xref:System.Windows.Forms.Button> und <xref:System.Windows.Forms.CheckBox>. Im Codebeispiel wird vorausgesetzt, dass die Methode definiert, die im Beispiel in einer <xref:System.Windows.Forms.Form> , enthält eine <xref:System.Windows.Forms.Button> Steuerelement mit dem Namen `button1` und <xref:System.Windows.Forms.CheckBox> Steuerelement mit dem Namen `checkBox1,` und, die die Methode wird vom Konstruktor aufgerufen die <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[ToolTip Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolTip Example/CPP/form1.cpp#1)]
 [!code-csharp[ToolTip Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolTip Example/CS/form1.cs#1)]
 [!code-vb[ToolTip Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolTip Example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolTip.AutomaticDelay" />
        <altmember cref="P:System.Windows.Forms.ToolTip.AutoPopDelay" />
        <altmember cref="P:System.Windows.Forms.ToolTip.InitialDelay" />
        <altmember cref="P:System.Windows.Forms.ToolTip.UseFading" />
        <altmember cref="E:System.Windows.Forms.ToolTip.Popup" />
      </Docs>
    </Member>
    <Member MemberName="SetToolTip">
      <MemberSignature Language="C#" Value="public void SetToolTip (System.Windows.Forms.Control control, string caption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetToolTip(class System.Windows.Forms.Control control, string caption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolTip.SetToolTip(System.Windows.Forms.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetToolTip(System::Windows::Forms::Control ^ control, System::String ^ caption);" />
      <MemberSignature Language="F#" Value="member this.SetToolTip : System.Windows.Forms.Control * string -&gt; unit" Usage="toolTip.SetToolTip (control, caption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="caption" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">Die <see cref="T:System.Windows.Forms.Control" /> der QuickInfo-Text zuordnen.</param>
        <param name="caption">Der QuickInfo-Text, um anzuzeigen, wenn der Zeiger auf das Steuerelement befindet.</param>
        <summary>Ordnet QuickInfo-Text dem angegebenen Steuerelement zu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zusätzlich zum Angeben des QuickInfo-Texts für ein Steuerelement angezeigt werden soll, können Sie diese Methode auch verwenden, um den QuickInfo-Text für ein Steuerelement zu ändern. Aufrufen der <xref:System.Windows.Forms.ToolTip.SetToolTip%2A> Methode mehr als einmal für ein bestimmtes Steuerelement gibt keinen mehrere QuickInfo-Text für ein Steuerelement angezeigt werden soll, aber stattdessen ändert sich der aktuelle QuickInfo-Text für das Steuerelement. Um den QuickInfo-Text zu bestimmen, die zur Laufzeit mit einem Steuerelement verknüpft ist, verwenden die <xref:System.Windows.Forms.ToolTip.GetToolTip%2A> Methode.  
  
 Als allgemeine Regel sollte der verwendete Text kurz sein; Sie können jedoch Zeilenumbrüche einfügen, mit der `\r\n` escape-Zeichensequenz. Kaufmännische und-Zeichen (&) im Text behandelt werden, wie die <xref:System.Windows.Forms.ToolTip.StripAmpersands%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt eine Instanz von der <xref:System.Windows.Forms.ToolTip> -Klasse und ordnet die Instanz mit der <xref:System.Windows.Forms.Form> , die innerhalb die Instanz erstellt wird. Der Code initialisiert klicken Sie dann die Delay-Eigenschaften <xref:System.Windows.Forms.ToolTip.AutoPopDelay%2A>, <xref:System.Windows.Forms.ToolTip.InitialDelay%2A>, und <xref:System.Windows.Forms.ToolTip.ReshowDelay%2A>. Darüber hinaus die Instanz von der <xref:System.Windows.Forms.ToolTip> -Klasse legt die <xref:System.Windows.Forms.ToolTip.ShowAlways%2A> Eigenschaft `true` zum Aktivieren der QuickInfo-Text, der angezeigt werden, unabhängig davon, ob das Formular aktiv ist. Im Beispiel wird schließlich QuickInfo-Text mit zwei Steuerelemente eines Formulars eine <xref:System.Windows.Forms.Button> und <xref:System.Windows.Forms.CheckBox>. Dieses Beispiel erfordert, dass die Methode definiert, die im Beispiel in einer <xref:System.Windows.Forms.Form> , enthält eine <xref:System.Windows.Forms.Button> Steuerelement mit dem Namen `button1` und ein <xref:System.Windows.Forms.CheckBox> Steuerelement mit dem Namen `checkBox1`, und die die Methode wird vom Konstruktor aufgerufen die <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[ToolTip Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolTip Example/CPP/form1.cpp#1)]
 [!code-csharp[ToolTip Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolTip Example/CS/form1.cs#1)]
 [!code-vb[ToolTip Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolTip Example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolTip.GetToolTip(System.Windows.Forms.Control)" />
        <altmember cref="P:System.Windows.Forms.ToolTip.StripAmpersands" />
        <altmember cref="M:System.Windows.Forms.ToolTip.ToString" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ToolTipTitle" />
        <altmember cref="P:System.Windows.Forms.ToolTip.Tag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Show">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Legt den einer QuickInfo zugeordneten Text fest und zeigt ihn dann an.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (string text, System.Windows.Forms.IWin32Window window);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(string text, class System.Windows.Forms.IWin32Window window) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolTip.Show(System.String,System.Windows.Forms.IWin32Window)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Show (text As String, window As IWin32Window)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show(System::String ^ text, System::Windows::Forms::IWin32Window ^ window);" />
      <MemberSignature Language="F#" Value="member this.Show : string * System.Windows.Forms.IWin32Window -&gt; unit" Usage="toolTip.Show (text, window)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="window" Type="System.Windows.Forms.IWin32Window" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">Ein <see cref="T:System.String" /> , die den neuen QuickInfo-Text enthält.</param>
        <param name="window">Die <see cref="T:System.Windows.Forms.Control" /> für die QuickInfo angezeigt.</param>
        <summary>Legt den dem angegebenen Steuerelement zugeordneten QuickInfo-Text fest und zeigt die QuickInfo modal an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Version der <xref:System.Windows.Forms.ToolTip.Show%2A> Methode zeigt die QuickInfo für das angegebene Steuerelement modal; d. h. die QuickInfo wird angezeigt, bis die <xref:System.Windows.Forms.ToolTip.Hide%2A> Methode aufgerufen wird, oder bis das übergeordnete Formular minimiert wird, ausgeblendet oder geschlossen. Die QuickInfo wird in der Mitte des zugeordneten Steuerelements positioniert.  
  
 Anwendungen, die bei teilweiser Vertrauenswürdigkeit ausgeführt, müssen bestätigen die <xref:System.Security.Permissions.UIPermissionWindow.AllWindows> Berechtigung zur Verwendung dieser Methode wird als <xref:System.Windows.Forms.ToolTip.Show%2A> können steuern, den Anzeigenamen und den Speicherort einer QuickInfo, die unabhängig von der Aktion durch den Benutzer.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="window" />-Parameter ist <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Erfordert <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> Berechtigung.</permission>
        <altmember cref="M:System.Windows.Forms.ToolTip.Hide(System.Windows.Forms.IWin32Window)" />
        <altmember cref="M:System.Windows.Forms.ToolTip.GetToolTip(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.ToolTip.SetToolTip(System.Windows.Forms.Control,System.String)" />
        <altmember cref="P:System.Windows.Forms.ToolTip.IsBalloon" />
        <altmember cref="P:System.Windows.Forms.ToolTip.StripAmpersands" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ToolTipTitle" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ToolTipIcon" />
        <altmember cref="P:System.Windows.Forms.ToolTip.OwnerDraw" />
        <altmember cref="E:System.Windows.Forms.ToolTip.Popup" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (string text, System.Windows.Forms.IWin32Window window, System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(string text, class System.Windows.Forms.IWin32Window window, valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolTip.Show(System.String,System.Windows.Forms.IWin32Window,System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show(System::String ^ text, System::Windows::Forms::IWin32Window ^ window, System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.Show : string * System.Windows.Forms.IWin32Window * System.Drawing.Point -&gt; unit" Usage="toolTip.Show (text, window, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="window" Type="System.Windows.Forms.IWin32Window" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="point" Type="System.Drawing.Point" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">Ein <see cref="T:System.String" /> , die den neuen QuickInfo-Text enthält.</param>
        <param name="window">Die <see cref="T:System.Windows.Forms.Control" /> für die QuickInfo angezeigt.</param>
        <param name="point">Ein <see cref="T:System.Drawing.Point" /> , die das Offset in Pixel relativ zum der oberen linken Ecke des zugeordneten Steuerelementfensters, für die Anzeige der QuickInfo enthält.</param>
        <summary>Legt den dem angegebenen Steuerelement zugeordneten QuickInfo-Text fest und zeigt die QuickInfo dann modal an der angegebenen relativen Position an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `pt` Parameter kann eine Position außerhalb der Grenzen des zugeordneten Steuerelements, deren übergeordnetes Formular oder sogar auf dem Desktop angeben. Die Version der <xref:System.Windows.Forms.ToolTip.Show%2A> Methode zeigt die QuickInfo für das angegebene Steuerelement modal; d. h. die QuickInfo wird angezeigt, bis die <xref:System.Windows.Forms.ToolTip.Hide%2A> Methode aufgerufen wird, oder bis das übergeordnete Formular minimiert wird, ausgeblendet oder geschlossen.  
  
 Anwendungen, die bei teilweiser Vertrauenswürdigkeit ausgeführt, müssen bestätigen die <xref:System.Security.Permissions.UIPermissionWindow.AllWindows> Berechtigung zur Verwendung dieser Methode wird als <xref:System.Windows.Forms.ToolTip.Show%2A> können steuern, den Anzeigenamen und den Speicherort einer QuickInfo, die unabhängig von der Aktion durch den Benutzer.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="window" />-Parameter ist <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Erfordert <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> Berechtigung.</permission>
        <altmember cref="M:System.Windows.Forms.ToolTip.Hide(System.Windows.Forms.IWin32Window)" />
        <altmember cref="M:System.Windows.Forms.ToolTip.GetToolTip(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.ToolTip.SetToolTip(System.Windows.Forms.Control,System.String)" />
        <altmember cref="P:System.Windows.Forms.ToolTip.IsBalloon" />
        <altmember cref="P:System.Windows.Forms.ToolTip.StripAmpersands" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ToolTipTitle" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ToolTipIcon" />
        <altmember cref="P:System.Windows.Forms.ToolTip.OwnerDraw" />
        <altmember cref="E:System.Windows.Forms.ToolTip.Popup" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (string text, System.Windows.Forms.IWin32Window window, int duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(string text, class System.Windows.Forms.IWin32Window window, int32 duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolTip.Show(System.String,System.Windows.Forms.IWin32Window,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Show (text As String, window As IWin32Window, duration As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show(System::String ^ text, System::Windows::Forms::IWin32Window ^ window, int duration);" />
      <MemberSignature Language="F#" Value="member this.Show : string * System.Windows.Forms.IWin32Window * int -&gt; unit" Usage="toolTip.Show (text, window, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="window" Type="System.Windows.Forms.IWin32Window" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="duration" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">Ein <see cref="T:System.String" /> , die den neuen QuickInfo-Text enthält.</param>
        <param name="window">Die <see cref="T:System.Windows.Forms.Control" /> für die QuickInfo angezeigt.</param>
        <param name="duration">Ein <see cref="T:System.Int32" /> , die die Dauer in Millisekunden für die Anzeige der QuickInfos enthält.</param>
        <summary>Legt den dem angegebenen Steuerelement zugeordneten QuickInfo-Text fest und zeigt die QuickInfo dann während einer angegebenen Zeitdauer an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die QuickInfo positioniert wird, in der Mitte des zugeordneten Steuerelements durch dargestellt die `win` Parameter. Um die QuickInfo modal anzuzeigen, rufen die <xref:System.Windows.Forms.ToolTip.Show%28System.String%2CSystem.Windows.Forms.IWin32Window%29> stattdessen, Version dieser Methode zu überladen.  
  
 Anwendungen, die bei teilweiser Vertrauenswürdigkeit ausgeführt, müssen bestätigen die <xref:System.Security.Permissions.UIPermissionWindow.AllWindows> Berechtigung zur Verwendung dieser Methode wird als <xref:System.Windows.Forms.ToolTip.Show%2A> können steuern, den Anzeigenamen und den Speicherort einer QuickInfo, die unabhängig von der Aktion durch den Benutzer.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="window" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration" /> ist kleiner oder gleich 0.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Erfordert <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> Berechtigung.</permission>
        <altmember cref="M:System.Windows.Forms.ToolTip.Hide(System.Windows.Forms.IWin32Window)" />
        <altmember cref="M:System.Windows.Forms.ToolTip.GetToolTip(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.ToolTip.SetToolTip(System.Windows.Forms.Control,System.String)" />
        <altmember cref="P:System.Windows.Forms.ToolTip.IsBalloon" />
        <altmember cref="P:System.Windows.Forms.ToolTip.StripAmpersands" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ToolTipTitle" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ToolTipIcon" />
        <altmember cref="P:System.Windows.Forms.ToolTip.OwnerDraw" />
        <altmember cref="E:System.Windows.Forms.ToolTip.Popup" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (string text, System.Windows.Forms.IWin32Window window, System.Drawing.Point point, int duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(string text, class System.Windows.Forms.IWin32Window window, valuetype System.Drawing.Point point, int32 duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolTip.Show(System.String,System.Windows.Forms.IWin32Window,System.Drawing.Point,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show(System::String ^ text, System::Windows::Forms::IWin32Window ^ window, System::Drawing::Point point, int duration);" />
      <MemberSignature Language="F#" Value="member this.Show : string * System.Windows.Forms.IWin32Window * System.Drawing.Point * int -&gt; unit" Usage="toolTip.Show (text, window, point, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="window" Type="System.Windows.Forms.IWin32Window" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="point" Type="System.Drawing.Point" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="duration" Type="System.Int32" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">Ein <see cref="T:System.String" /> , die den neuen QuickInfo-Text enthält.</param>
        <param name="window">Die <see cref="T:System.Windows.Forms.Control" /> für die QuickInfo angezeigt.</param>
        <param name="point">Ein <see cref="T:System.Drawing.Point" /> , die das Offset in Pixel relativ zum der oberen linken Ecke des zugeordneten Steuerelementfensters, für die Anzeige der QuickInfo enthält.</param>
        <param name="duration">Ein <see cref="T:System.Int32" /> , die die Dauer in Millisekunden für die Anzeige der QuickInfos enthält.</param>
        <summary>Legt den dem angegebenen Steuerelement zugeordneten QuickInfo-Text fest und zeigt die QuickInfo dann während der angegebenen Zeitdauer an der angegebenen relativen Position an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `pt` Parameter kann eine Position außerhalb der Grenzen des zugeordneten Steuerelements, deren übergeordnetes Formular oder sogar auf dem Desktop angeben.  Die QuickInfo wird in der Mitte des zugeordneten Steuerelements positioniert. Um die QuickInfo modal anzuzeigen, rufen die <xref:System.Windows.Forms.ToolTip.Show%28System.String%2CSystem.Windows.Forms.IWin32Window%2CSystem.Drawing.Point%29> stattdessen, Version dieser Methode zu überladen.  
  
 Anwendungen, die bei teilweiser Vertrauenswürdigkeit ausgeführt, müssen bestätigen die <xref:System.Security.Permissions.UIPermissionWindow.AllWindows> Berechtigung zur Verwendung dieser Methode wird als <xref:System.Windows.Forms.ToolTip.Show%2A> können steuern, den Anzeigenamen und den Speicherort einer QuickInfo, die unabhängig von der Aktion durch den Benutzer.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="window" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration" /> ist kleiner oder gleich 0.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Erfordert <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> Berechtigung.</permission>
        <altmember cref="M:System.Windows.Forms.ToolTip.Hide(System.Windows.Forms.IWin32Window)" />
        <altmember cref="M:System.Windows.Forms.ToolTip.GetToolTip(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.ToolTip.SetToolTip(System.Windows.Forms.Control,System.String)" />
        <altmember cref="P:System.Windows.Forms.ToolTip.IsBalloon" />
        <altmember cref="P:System.Windows.Forms.ToolTip.StripAmpersands" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ToolTipTitle" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ToolTipIcon" />
        <altmember cref="P:System.Windows.Forms.ToolTip.OwnerDraw" />
        <altmember cref="E:System.Windows.Forms.ToolTip.Popup" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (string text, System.Windows.Forms.IWin32Window window, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(string text, class System.Windows.Forms.IWin32Window window, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolTip.Show(System.String,System.Windows.Forms.IWin32Window,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Show (text As String, window As IWin32Window, x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show(System::String ^ text, System::Windows::Forms::IWin32Window ^ window, int x, int y);" />
      <MemberSignature Language="F#" Value="member this.Show : string * System.Windows.Forms.IWin32Window * int * int -&gt; unit" Usage="toolTip.Show (text, window, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="window" Type="System.Windows.Forms.IWin32Window" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="x" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="y" Type="System.Int32" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">Ein <see cref="T:System.String" /> , die den neuen QuickInfo-Text enthält.</param>
        <param name="window">Die <see cref="T:System.Windows.Forms.Control" /> für die QuickInfo angezeigt.</param>
        <param name="x">Der horizontale Offset in Pixel relativ zur linken oberen Ecke des zugeordneten Steuerelementfensters, mit dem die QuickInfo angezeigt wird.</param>
        <param name="y">Der vertikale Offset in Pixel relativ zur linken oberen Ecke des zugeordneten Steuerelementfensters, mit dem die QuickInfo angezeigt wird.</param>
        <summary>Legt den dem angegebenen Steuerelement zugeordneten QuickInfo-Text fest und zeigt die QuickInfo dann modal an der angegebenen relativen Position an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Version der überladenen <xref:System.Windows.Forms.ToolTip.Show%2A> -Methode funktioniert genauso wie die <xref:System.Windows.Forms.ToolTip.Show%28System.String%2CSystem.Windows.Forms.IWin32Window%2CSystem.Drawing.Point%29> Version, mit dem Unterschied, dass der Offset angegeben wird, wie trennen Sie die x- und y-Koordinaten anstelle von einem <xref:System.Drawing.Point>.  
  
 Anwendungen, die bei teilweiser Vertrauenswürdigkeit ausgeführt, müssen bestätigen die <xref:System.Security.Permissions.UIPermissionWindow.AllWindows> Berechtigung zur Verwendung dieser Methode wird als <xref:System.Windows.Forms.ToolTip.Show%2A> können steuern, den Anzeigenamen und den Speicherort einer QuickInfo, die unabhängig von der Aktion durch den Benutzer.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">Erfordert <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> Berechtigung.</permission>
        <altmember cref="M:System.Windows.Forms.ToolTip.Hide(System.Windows.Forms.IWin32Window)" />
        <altmember cref="M:System.Windows.Forms.ToolTip.GetToolTip(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.ToolTip.SetToolTip(System.Windows.Forms.Control,System.String)" />
        <altmember cref="P:System.Windows.Forms.ToolTip.IsBalloon" />
        <altmember cref="P:System.Windows.Forms.ToolTip.StripAmpersands" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ToolTipTitle" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ToolTipIcon" />
        <altmember cref="P:System.Windows.Forms.ToolTip.OwnerDraw" />
        <altmember cref="E:System.Windows.Forms.ToolTip.Popup" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (string text, System.Windows.Forms.IWin32Window window, int x, int y, int duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(string text, class System.Windows.Forms.IWin32Window window, int32 x, int32 y, int32 duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolTip.Show(System.String,System.Windows.Forms.IWin32Window,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Show (text As String, window As IWin32Window, x As Integer, y As Integer, duration As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show(System::String ^ text, System::Windows::Forms::IWin32Window ^ window, int x, int y, int duration);" />
      <MemberSignature Language="F#" Value="member this.Show : string * System.Windows.Forms.IWin32Window * int * int * int -&gt; unit" Usage="toolTip.Show (text, window, x, y, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="window" Type="System.Windows.Forms.IWin32Window" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="x" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="y" Type="System.Int32" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="duration" Type="System.Int32" Index="4" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">Ein <see cref="T:System.String" /> , die den neuen QuickInfo-Text enthält.</param>
        <param name="window">Die <see cref="T:System.Windows.Forms.Control" /> für die QuickInfo angezeigt.</param>
        <param name="x">Der horizontale Offset in Pixel relativ zur linken oberen Ecke des zugeordneten Steuerelementfensters, mit dem die QuickInfo angezeigt wird.</param>
        <param name="y">Der vertikale Offset in Pixel relativ zur linken oberen Ecke des zugeordneten Steuerelementfensters, mit dem die QuickInfo angezeigt wird.</param>
        <param name="duration">Ein <see cref="T:System.Int32" /> , die die Dauer in Millisekunden für die Anzeige der QuickInfos enthält.</param>
        <summary>Legt den dem angegebenen Steuerelement zugeordneten QuickInfo-Text fest und zeigt die QuickInfo dann während der angegebenen Zeitdauer an der angegebenen relativen Position an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Version der überladenen <xref:System.Windows.Forms.ToolTip.Show%2A> -Methode funktioniert genauso wie die <xref:System.Windows.Forms.ToolTip.Show%28System.String%2CSystem.Windows.Forms.IWin32Window%2CSystem.Drawing.Point%2CSystem.Int32%29> Version, mit dem Unterschied, dass der Offset wird als separate x und y-anstelle von Koordinaten einem <xref:System.Drawing.Point>. Um die QuickInfo modal anzuzeigen, rufen die <xref:System.Windows.Forms.ToolTip.Show%28System.String%2CSystem.Windows.Forms.IWin32Window%2CSystem.Int32%2CSystem.Int32%29> stattdessen, Version dieser Methode zu überladen.  
  
 Anwendungen, die bei teilweiser Vertrauenswürdigkeit ausgeführt, müssen bestätigen die <xref:System.Security.Permissions.UIPermissionWindow.AllWindows> Berechtigung zur Verwendung dieser Methode wird als <xref:System.Windows.Forms.ToolTip.Show%2A> können steuern, den Anzeigenamen und den Speicherort einer QuickInfo, die unabhängig von der Aktion durch den Benutzer.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="window" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration" /> ist kleiner oder gleich 0.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Erfordert <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> Berechtigung.</permission>
        <altmember cref="M:System.Windows.Forms.ToolTip.Hide(System.Windows.Forms.IWin32Window)" />
        <altmember cref="M:System.Windows.Forms.ToolTip.GetToolTip(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.ToolTip.SetToolTip(System.Windows.Forms.Control,System.String)" />
        <altmember cref="P:System.Windows.Forms.ToolTip.IsBalloon" />
        <altmember cref="P:System.Windows.Forms.ToolTip.StripAmpersands" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ToolTipTitle" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ToolTipIcon" />
        <altmember cref="P:System.Windows.Forms.ToolTip.OwnerDraw" />
        <altmember cref="E:System.Windows.Forms.ToolTip.Popup" />
      </Docs>
    </Member>
    <Member MemberName="ShowAlways">
      <MemberSignature Language="C#" Value="public bool ShowAlways { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowAlways" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolTip.ShowAlways" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowAlways As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowAlways { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowAlways : bool with get, set" Usage="System.Windows.Forms.ToolTip.ShowAlways" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob ein QuickInfo-Fenster auch dann angezeigt wird, wenn das übergeordnete Steuerelement nicht aktiv ist, oder legt diesen Wert fest.</summary>
        <value><see langword="true" /> Wenn die QuickInfo immer angezeigt wird. andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der <xref:System.Windows.Forms.ToolTip.ShowAlways%2A> -Eigenschaft, die Sie anzeigen können ein QuickInfo-Fenster, auch wenn der Container die <xref:System.Windows.Forms.ToolTip> ist nicht aktiv. Können Sie diese Funktion in einer Anwendung nicht modales Fenster Aktivieren des QuickInfo-Fenster angezeigt wird, werden unabhängig davon, welches nicht modales Fenster aktiv ist. Dieses Feature ist auch nützlich, wenn Sie, erstellen Sie ein Steuerelement mithilfe möchten der <xref:System.Windows.Forms.UserControl>, enthält eine Reihe von Steuerelementen darin, die QuickInfo-Fenster angezeigt. Da die <xref:System.Windows.Forms.UserControl> ist häufig nicht in einem Formular, das Festlegen dieser Eigenschaft auf das aktive Fenster `true` können die Steuerelemente innerhalb der <xref:System.Windows.Forms.UserControl> anzuzeigende QuickInfo-Fenster zu einem beliebigen Zeitpunkt.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt eine Instanz von der <xref:System.Windows.Forms.ToolTip> -Klasse und ordnet die Instanz mit der <xref:System.Windows.Forms.Form> , die innerhalb die Instanz erstellt wird. Der Code initialisiert klicken Sie dann die Delay-Eigenschaften <xref:System.Windows.Forms.ToolTip.AutoPopDelay%2A>, <xref:System.Windows.Forms.ToolTip.InitialDelay%2A>, und <xref:System.Windows.Forms.ToolTip.ReshowDelay%2A>. Darüber hinaus die Instanz von der <xref:System.Windows.Forms.ToolTip> -Klasse legt die <xref:System.Windows.Forms.ToolTip.ShowAlways%2A> Eigenschaft `true` zum Aktivieren der QuickInfo-Text, der angezeigt werden, unabhängig davon, ob das Formular aktiv ist. Im Beispiel wird schließlich QuickInfo-Text mit zwei Steuerelemente eines Formulars eine <xref:System.Windows.Forms.Button> und <xref:System.Windows.Forms.CheckBox>. Im Codebeispiel wird vorausgesetzt, dass die Methode definiert, die im Beispiel in einer <xref:System.Windows.Forms.Form> , enthält eine <xref:System.Windows.Forms.Button> Steuerelement mit dem Namen `button1` und ein <xref:System.Windows.Forms.CheckBox> Steuerelement mit dem Namen `checkBox1`, und die die Methode wird vom Konstruktor aufgerufen von der <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[ToolTip Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolTip Example/CPP/form1.cpp#1)]
 [!code-csharp[ToolTip Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolTip Example/CS/form1.cs#1)]
 [!code-vb[ToolTip Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolTip Example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.UserControl" />
        <altmember cref="P:System.Windows.Forms.ToolTip.Active" />
        <altmember cref="Overload:System.Windows.Forms.ToolTip.Show" />
      </Docs>
    </Member>
    <Member MemberName="StopTimer">
      <MemberSignature Language="C#" Value="protected void StopTimer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void StopTimer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolTip.StopTimer" />
      <MemberSignature Language="VB.NET" Value="Protected Sub StopTimer ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void StopTimer();" />
      <MemberSignature Language="F#" Value="member this.StopTimer : unit -&gt; unit" Usage="toolTip.StopTimer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Hält den Timer an, der angezeigte QuickInfos ausblendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ToolTip> -Klasse verfügt über einen internen Zeitgeber, die zum Festlegen der Anzeigedauer für QuickInfos verwendet. Dieser Timer zugeordnete Dauer festgelegt ist, über die <xref:System.Windows.Forms.ToolTip.AutoPopDelay%2A> Eigenschaft. Die <xref:System.Windows.Forms.ToolTip.StopTimer%2A> Methode hält diesen internen Zeitgeber, wodurch alle angezeigten QuickInfos modal angezeigt werden, bis die <xref:System.Windows.Forms.ToolTip.Hide%2A> Methode aufgerufen wird, oder das übergeordnete Formular minimiert, ausgeblendet oder geschlossen ist.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolTip.AutoPopDelay" />
        <altmember cref="Overload:System.Windows.Forms.ToolTip.Show" />
        <altmember cref="M:System.Windows.Forms.ToolTip.Hide(System.Windows.Forms.IWin32Window)" />
        <altmember cref="P:System.Windows.Forms.ToolTip.Active" />
      </Docs>
    </Member>
    <Member MemberName="StripAmpersands">
      <MemberSignature Language="C#" Value="public bool StripAmpersands { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StripAmpersands" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolTip.StripAmpersands" />
      <MemberSignature Language="VB.NET" Value="Public Property StripAmpersands As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StripAmpersands { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StripAmpersands : bool with get, set" Usage="System.Windows.Forms.ToolTip.StripAmpersands" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der bestimmt, wie kaufmännische Und-Zeichen (&amp;) behandelt werden, oder legt diesen fest.</summary>
        <value><see langword="true" /> Wenn das kaufmännische und-Zeichen aus dem QuickInfo-Text entfernt werden; andernfalls <see langword="false" />. Der Standardwert ist FALSE.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Anwendung verwendet häufig die gleichen Zeichenfolgenressource für mehrere Zwecke, z. B. ein Menüelement und eine QuickInfo an. Menüs ermöglichen jedoch häufig-Zugriffstasten ist gekennzeichnet durch ein kaufmännisches und-Zeichen, in der Zeichenfolge des Menüelements. QuickInfos unterstützen diese Funktion nicht damit in der Standardeinstellung kaufmännische und-Zeichen nur als normale Zeichen angezeigt werden. Festlegen der <xref:System.Windows.Forms.ToolTip.StripAmpersands%2A> Eigenschaft `true` alle kaufmännische und-Zeichen aus dem QuickInfo-Text entfernt.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolTip.GetToolTip(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.ToolTip.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolTip.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.ToolTip.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt das Objekt, das vom Programmierer bereitgestellte Daten, die zugeordneten enthält die <see cref="T:System.Windows.Forms.ToolTip" />.</summary>
        <value>Ein <see cref="T:System.Object" />, das Daten über den <see cref="T:System.Windows.Forms.ToolTip" /> enthält. Die Standardeinstellung ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalerweise verwenden Sie die <xref:System.Windows.Forms.ToolTip.Tag%2A> Eigenschaft zum Speichern von Daten, die eng mit der <xref:System.Windows.Forms.ToolTip>. Angenommen, Sie Anzeigen einer <xref:System.Windows.Forms.ToolTip> für ein Steuerelement, das Informationen zu den Kunden anzeigt, können Sie speichern die <xref:System.Data.DataSet> , enthält die Kundeninformationen in das <xref:System.Windows.Forms.ToolTip.Tag%2A> Eigenschaft, sodass die Daten schnell zugegriffen werden können.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolTip.ToString" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipIcon">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolTipIcon ToolTipIcon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolTipIcon ToolTipIcon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolTip.ToolTipIcon" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTipIcon As ToolTipIcon" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolTipIcon ToolTipIcon { System::Windows::Forms::ToolTipIcon get(); void set(System::Windows::Forms::ToolTipIcon value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTipIcon : System.Windows.Forms.ToolTipIcon with get, set" Usage="System.Windows.Forms.ToolTip.ToolTipIcon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolTipIcon</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der den Typ des neben dem QuickInfo-Text anzuzeigenden Symbols definiert, oder legt diesen fest.</summary>
        <value>Eines der <see cref="T:System.Windows.Forms.ToolTipIcon" /> aufgelistete Werte bereitstellen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie eine Grafik, die durch nicht definiert ist, verwenden möchten die <xref:System.Windows.Forms.ToolTipIcon?displayProperty=nameWithType> Enumeration, müssen Sie Besitzer-zeichnen die gesamte QuickInfo. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Windows.Forms.ToolTip.OwnerDraw%2A>-Eigenschaft.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolTipIcon" />
        <altmember cref="P:System.Windows.Forms.ToolTip.BackColor" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ForeColor" />
        <altmember cref="P:System.Windows.Forms.ToolTip.IsBalloon" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ToolTipTitle" />
        <altmember cref="P:System.Windows.Forms.ToolTip.OwnerDraw" />
        <altmember cref="M:System.Windows.Forms.ToolTip.GetToolTip(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipTitle">
      <MemberSignature Language="C#" Value="public string ToolTipTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTipTitle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolTip.ToolTipTitle" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTipTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTipTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTipTitle : string with get, set" Usage="System.Windows.Forms.ToolTip.ToolTipTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Titel für das QuickInfo-Fenster ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.String" /> , der den Fenstertitel enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Titel wird als eine Zeile mit fett formatierten Text über dem standard Text, der eine Beschreibung der QuickInfo-Steuerelement innerhalb des Fensters angezeigt. Titel werden in der Regel nur verwendet, um verschiedene Kategorien von Steuerelementen in einem Formular oder als Einführung in eine relativ lange steuerelementbeschreibung zu unterscheiden.  
  
 Die maximale Länge eines Titels ist 99 Zeichen besteht. Wenn diese Eigenschaft eine Zeichenfolge mit mehr als 99 Zeichen enthält, wird kein Titel angezeigt.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolTip.BackColor" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ForeColor" />
        <altmember cref="P:System.Windows.Forms.ToolTip.IsBalloon" />
        <altmember cref="P:System.Windows.Forms.ToolTip.ToolTipIcon" />
        <altmember cref="P:System.Windows.Forms.ToolTip.OwnerDraw" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolTip.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="toolTip.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Zeichenfolgendarstellung für dieses Steuerelement zurück.</summary>
        <returns>Ein <see cref="T:System.String" /> , enthält eine Beschreibung der <see cref="T:System.Windows.Forms.ToolTip" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese außer Kraft gesetzte Version von der <xref:System.Windows.Forms.ToolTip.ToString%2A> Methode zeigt den Klassennamen, gefolgt von den Werten der an die <xref:System.Windows.Forms.ToolTip.InitialDelay%2A> und <xref:System.Windows.Forms.ToolTip.ShowAlways%2A> Eigenschaften.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolTip.GetToolTip(System.Windows.Forms.Control)" />
        <altmember cref="P:System.Windows.Forms.ToolTip.Tag" />
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="UseAnimation">
      <MemberSignature Language="C#" Value="public bool UseAnimation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAnimation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolTip.UseAnimation" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAnimation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAnimation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseAnimation : bool with get, set" Usage="System.Windows.Forms.ToolTip.UseAnimation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der bestimmt, ob beim Anzeigen der QuickInfo ein Animationseffekt verwendet werden soll, oder legt diesen fest.</summary>
        <value><see langword="true" /> Wenn Fensteranimation verwendet werden soll. andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Internet Explorer 5 und Microsoft Windows XP eingeführt, dynamischen Effekte der Benutzeroberfläche wie z. B. das Ausblenden von Fenstern und Animationen. Wenn der Benutzer diese Funktionen nicht deaktiviert hat die <xref:System.Windows.Forms.ToolTip.UseAnimation%2A> Eigenschaft kann zum Aktivieren dieser Funktion für QuickInfos, auf diesen Plattformen angezeigt verwendet werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolTip.UseFading" />
        <altmember cref="P:System.Windows.Forms.ToolTip.OwnerDraw" />
      </Docs>
    </Member>
    <Member MemberName="UseFading">
      <MemberSignature Language="C#" Value="public bool UseFading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseFading" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolTip.UseFading" />
      <MemberSignature Language="VB.NET" Value="Public Property UseFading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseFading { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseFading : bool with get, set" Usage="System.Windows.Forms.ToolTip.UseFading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der bestimmt, ob beim Anzeigen der QuickInfo ein Ausblendungseffekt verwendet werden soll, oder legt diesen fest.</summary>
        <value><see langword="true" /> Wenn das Ausblenden von Fenstern verwendet werden soll. andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Internet Explorer 5 und Microsoft Windows XP eingeführt, dynamischen Effekte der Benutzeroberfläche wie z. B. das Ausblenden von Fenstern und Animationen. Wenn der Benutzer diese Funktionen nicht deaktiviert hat die <xref:System.Windows.Forms.ToolTip.UseFading%2A> Eigenschaft kann zum Aktivieren dieser Funktion für QuickInfos, auf diesen Plattformen angezeigt verwendet werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolTip.UseAnimation" />
        <altmember cref="P:System.Windows.Forms.ToolTip.OwnerDraw" />
      </Docs>
    </Member>
  </Members>
</Type>