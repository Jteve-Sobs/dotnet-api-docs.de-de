<Type Name="DataGridViewRow" FullName="System.Windows.Forms.DataGridViewRow">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f294303ceb03a49545983b72efeb60cbcd7b1e88" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57946039" /></Metadata><TypeSignature Language="C#" Value="public class DataGridViewRow : System.Windows.Forms.DataGridViewBand" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewRow extends System.Windows.Forms.DataGridViewBand" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewRow" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewRow&#xA;Inherits DataGridViewBand" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewRow : System::Windows::Forms::DataGridViewBand" />
  <TypeSignature Language="F#" Value="type DataGridViewRow = class&#xA;    inherit DataGridViewBand" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataGridViewBand</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataGridViewRowConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine Zeile in einem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRow> Klasse repräsentiert eine Zeile in einer <xref:System.Windows.Forms.DataGridView> Steuerelement. Sie können Zeilen durch Abrufen der <xref:System.Windows.Forms.DataGridView.Rows%2A> und <xref:System.Windows.Forms.DataGridView.SelectedRows%2A> Sammlungen des Steuerelements.  
  
 Im Gegensatz zu einem <xref:System.Windows.Forms.DataGridViewColumn>, <xref:System.Windows.Forms.DataGridViewRow> physisch enthält eine Auflistung aller Zellen in dieser Zeile. Sie können auf zugreifen, diese Auflistung über den <xref:System.Windows.Forms.DataGridViewRow.Cells%2A> Eigenschaft.  
  
 Die <xref:System.Windows.Forms.DataGridViewRow> Klasse wird verwendet, um den einzelne Zelle, auch Zugriff auf Elemente, passen Sie das Aussehen und Verhalten der Zeile-Benutzeroberfläche (UI), z. B. Höhe und der Zelle. In der Regel sollten Sie alle Zeilen oder die meisten Zeilen in das Steuerelement, das die gleichen Merkmale aufweisen. Um Zellstile für alle Zeilen im Steuerelement festzulegen, legen Sie die Eigenschaften des Objekts zurückgegeben werden, indem die <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A?displayProperty=nameWithType> Eigenschaft. Verwenden Sie zum Festlegen von Stilen für abwechselnde Zeilen der <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A?displayProperty=nameWithType> Eigenschaft. Weitere Informationen zu Zellstile, finden Sie unter [Zellstile im DataGridView-Steuerelement in Windows Forms](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md). Sie können auch die <xref:System.Windows.Forms.DataGridView.RowTemplate%2A?displayProperty=nameWithType> Eigenschaft, um eine Zeile zu definieren, die als Grundlage für alle Zeilen, die dem Steuerelement hinzugefügt wird, verwendet werden.  
  
 Die <xref:System.Windows.Forms.DataGridView> Steuerelement gemeinsam <xref:System.Windows.Forms.DataGridViewRow> Objekten über mehrere Datenzeilen nach Möglichkeit, um Leistungseinbußen zu vermeiden. Es sei denn, Sie mit großen Mengen von Daten und keine Leistungsprobleme arbeiten, können Sie in der Regel Freigeben von Zeilen ignorieren. Eine freigegebene Zeile wird angegeben, indem ein <xref:System.Windows.Forms.DataGridViewBand.Index%2A> Eigenschaftswert-1. Ein Mitglied der <xref:System.Windows.Forms.DataGridViewRow> Klasse kann nicht freigegebene Zeilen verwendet werden, aber Sie können die Freigabe eine Zeile aufheben, durch den Zugriff auf die über die <xref:System.Windows.Forms.DataGridViewRowCollection.Item%2A?displayProperty=nameWithType> Eigenschaft. Zeilen können auch auf andere Weise aufgehoben werden. Zugriff auf eine Zeile ohne die Freigabe aufzuheben, verwenden Sie die <xref:System.Windows.Forms.DataGridViewRowCollection.SharedRow%2A?displayProperty=nameWithType> Methode. Bei der Arbeit mit großen Datenmengen sollten Sie achten wie Zeilen werden ausgetauscht und ohne Freigabe, um Leistungseinbußen zu vermeiden. Weitere Informationen finden Sie unter [Best Practices für das Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung dieses Typs. In diesem Beispiel ist Teil eines umfangreicheren Beispiels in [Vorgehensweise: Bearbeiten von Zeilen im DataGridView-Steuerelement in Windows Forms](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md).  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#209)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#209)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#209)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Beim Ableiten von <see cref="T:System.Windows.Forms.DataGridViewRow" /> und der abgeleiteten Klasse neue Eigenschaften hinzufügen, achten Sie darauf, dass Sie zum Überschreiben der <see cref="M:System.Windows.Forms.DataGridViewRow.Clone" /> Methode, um die neuen Eigenschaften bei Klonvorgängen kopiert. Sie sollten auch der Basisklasse aufrufen <see cref="M:System.Windows.Forms.DataGridViewRow.Clone" /> Methode, damit die Eigenschaften der Basisklasse in die neue Zelle kopiert werden.</para></block>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.DataGridViewColumn" />
    <altmember cref="M:System.Windows.Forms.DataGridViewRow.Clone" />
    <related type="Article" href="https://msdn.microsoft.com/library/8321a8a6-6340-4fd1-b475-fa090b905aaf">Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms</related>
    <related type="Article" href="https://msdn.microsoft.com/library/dbb75ed6-8804-4232-8382-f9920c2e380c">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewRow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewRow();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.DataGridViewRow" />-Klasse ohne Verwendung einer Vorlage.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor initialisiert die Zeile im leeren Zustand.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="AccessibilityObject">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AccessibleObject AccessibilityObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject AccessibilityObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.AccessibilityObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessibilityObject As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AccessibleObject ^ AccessibilityObject { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessibilityObject : System.Windows.Forms.AccessibleObject" Usage="System.Windows.Forms.DataGridViewRow.AccessibilityObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das der <see cref="T:System.Windows.Forms.DataGridViewRow.DataGridViewRowAccessibleObject" /> zugewiesene <see cref="T:System.Windows.Forms.DataGridViewRow" /> ab.</summary>
        <value>Das der <see cref="T:System.Windows.Forms.DataGridViewRow.DataGridViewRowAccessibleObject" /> zugewiesene <see cref="T:System.Windows.Forms.DataGridViewRow" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Instanz, die von dieser Methode zurückgegebene überschreiben, um die <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> Methode.  
  
 Wenn dem Steuerelement gerade kein <xref:System.Windows.Forms.AccessibleObject> zugewiesen ist, wird eine neue Instanz davon erstellt.  
  
> [!NOTE]
>  Zum Abrufen oder Festlegen der <xref:System.Windows.Forms.DataGridViewRow.AccessibilityObject%2A> -Eigenschaft, müssen Sie einen Verweis zum Hinzufügen der `Accessibility` mit installierte Assembly die [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 Weitere Informationen zu barrierefreiheitsobjekten finden Sie im Abschnitt "Active Accessibility" der MSDN Library unter [ http://msdn.microsoft.com/library ](https://msdn.microsoft.com/library).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow.DataGridViewRowAccessibleObject" />
        <altmember cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <Member MemberName="AdjustRowHeaderBorderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustRowHeaderBorderStyle (System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput, System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceholder, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedRow, bool isLastVisibleRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustRowHeaderBorderStyle(class System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput, class System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceholder, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedRow, bool isLastVisibleRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.AdjustRowHeaderBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AdjustRowHeaderBorderStyle (dataGridViewAdvancedBorderStyleInput As DataGridViewAdvancedBorderStyle, dataGridViewAdvancedBorderStylePlaceholder As DataGridViewAdvancedBorderStyle, singleVerticalBorderAdded As Boolean, singleHorizontalBorderAdded As Boolean, isFirstDisplayedRow As Boolean, isLastVisibleRow As Boolean) As DataGridViewAdvancedBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ AdjustRowHeaderBorderStyle(System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ dataGridViewAdvancedBorderStyleInput, System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ dataGridViewAdvancedBorderStylePlaceholder, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedRow, bool isLastVisibleRow);" />
      <MemberSignature Language="F#" Value="abstract member AdjustRowHeaderBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle * bool * bool * bool * bool -&gt; System.Windows.Forms.DataGridViewAdvancedBorderStyle&#xA;override this.AdjustRowHeaderBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle * bool * bool * bool * bool -&gt; System.Windows.Forms.DataGridViewAdvancedBorderStyle" Usage="dataGridViewRow.AdjustRowHeaderBorderStyle (dataGridViewAdvancedBorderStyleInput, dataGridViewAdvancedBorderStylePlaceholder, singleVerticalBorderAdded, singleHorizontalBorderAdded, isFirstDisplayedRow, isLastVisibleRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAdvancedBorderStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewAdvancedBorderStyleInput" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="dataGridViewAdvancedBorderStylePlaceholder" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="singleVerticalBorderAdded" Type="System.Boolean" />
        <Parameter Name="singleHorizontalBorderAdded" Type="System.Boolean" />
        <Parameter Name="isFirstDisplayedRow" Type="System.Boolean" />
        <Parameter Name="isLastVisibleRow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataGridViewAdvancedBorderStyleInput">Ein <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />, der die zu ändernde Rahmenart für den Zeilenheader darstellt.</param>
        <param name="dataGridViewAdvancedBorderStylePlaceholder">Ein <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />, in dem Zwischenänderungen an der Rahmenart des Zeilenheaders gespeichert werden.</param>
        <param name="singleVerticalBorderAdded"><see langword="true" />, um dem Ergebnis eine einzelne vertikale Rahmenlinie hinzuzufügen, andernfalls <see langword="false" />.</param>
        <param name="singleHorizontalBorderAdded"><see langword="true" />, um dem Ergebnis eine einzelne horizontale Rahmenlinie hinzuzufügen, andernfalls <see langword="false" />.</param>
        <param name="isFirstDisplayedRow"><see langword="true" />, wenn die Zeile die erste in der <see cref="T:System.Windows.Forms.DataGridView" /> angezeigte Zeile darstellt, andernfalls <see langword="false" />.</param>
        <param name="isLastVisibleRow"><see langword="true" />, wenn die Zeile die letzte Zeile in der <see cref="T:System.Windows.Forms.DataGridView" /> darstellt, bei der die <see cref="P:System.Windows.Forms.DataGridViewRow.Visible" />-Eigenschaft auf <see langword="true" /> festgelegt ist, andernfalls <see langword="false" />.</param>
        <summary>Ändert die Rahmenart für den Header einer Eingabezeile gemäß den angegebenen Kriterien.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />, der die neue verwendete Rahmenart darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridView> kontrollaufrufe intern die <xref:System.Windows.Forms.DataGridViewRow.AdjustRowHeaderBorderStyle%2A> Methode, um die Darstellung der Rahmen für die Zeilenheaderzellen festzulegen. Die <xref:System.Windows.Forms.DataGridView> Steuerelement in der Regel verwendet den Wert der <xref:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle%2A> -Eigenschaft für die `dataGridViewAdvancedBorderStyleInput` Parameter.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Überschreiben der <xref:System.Windows.Forms.DataGridViewRow.AdjustRowHeaderBorderStyle%2A> Methode, um die Rahmen der Zeilenheaderzellen anzupassen. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Windows.Forms.DataGridViewAdvancedBorderStyle> Klasse.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewAdvancedBorderStyle#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/CS/advancedborderstyle.cs#30)]
 [!code-vb[System.Windows.Forms.DataGridViewAdvancedBorderStyle#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/VB/advancedborderstyle.vb#30)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Überschreiben Sie diese Methode, wenn die Darstellung des Rahmens der Zeilenheaderzellen angepasst werden soll.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.Visible" />
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellCollection Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellCollection Cells" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As DataGridViewCellCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellCollection ^ Cells { System::Windows::Forms::DataGridViewCellCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cells : System.Windows.Forms.DataGridViewCellCollection" Usage="System.Windows.Forms.DataGridViewRow.Cells" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung von Zellen ab, mit denen die Zeile aufgefüllt ist.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.DataGridViewCellCollection" />, die alle Zellen in der Zeile enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Zeile keine Zellen enthält, wenn diese Eigenschaft zugegriffen wird, ein neues leeres <xref:System.Windows.Forms.DataGridViewCellCollection> erstellt werden, durch einen Aufruf der <xref:System.Windows.Forms.DataGridViewRow.CreateCellsInstance%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Windows.Forms.DataGridViewRow.Cells%2A> Eigenschaft, um den Wert einer Zelle in der Zeile festzulegen. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels, das sich [Vorgehensweise: Bearbeiten von Zeilen im DataGridView-Steuerelement in Windows Forms](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md).  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#211)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#211)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#211)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellCollection" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.CreateCellsInstance" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; obj" Usage="dataGridViewRow.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine identische Kopie dieser Zeile.</summary>
        <returns>Ein <see cref="T:System.Object" />, das die geklonte <see cref="T:System.Windows.Forms.DataGridViewRow" /> darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRow.Clone%2A> Methode kopiert die Zeile und seine Eigenschaft Werte annehmen, aber nicht kopiert die Zellenwerte, die die Zeile enthält. Informationen über das Kopieren von Zellwerten beim Klonen einer Zeile finden Sie im Beispielabschnitt.  
  
 Überschreiben der <xref:System.Windows.Forms.DataGridViewRow.Clone%2A> -Methode auf, wenn Sie eine Ableitung aus <xref:System.Windows.Forms.DataGridViewRow> und der abgeleiteten Klasse neue Eigenschaften hinzufügen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.DataGridViewRow.Clone%2A> Methode zum Kopieren einer Zeile aus, und füllen dann die Kopie mit den Werten der Zelle aus der ursprünglichen Zeile.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#60](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#60)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#60](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#60)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Beim Überschreiben von <see cref="M:System.Windows.Forms.DataGridViewRow.Clone" /> in einer abgeleiteten Klasse die Basisklasse aufrufen <see cref="M:System.Windows.Forms.DataGridViewRow.Clone" /> Methode, damit die Eigenschaften der Basisklasse in die neue Zeile beim Übertragungsvorgang kopiert werden, und achten Sie darauf, dass Sie auch die Werte der Eigenschaften kopieren, die die abgeleitete Klasse hinzugefügt wurden.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenuStrip">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenuStrip ContextMenuStrip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.ContextMenuStrip" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContextMenuStrip As ContextMenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ContextMenuStrip ^ ContextMenuStrip { System::Windows::Forms::ContextMenuStrip ^ get(); void set(System::Windows::Forms::ContextMenuStrip ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenuStrip : System.Windows.Forms.ContextMenuStrip with get, set" Usage="System.Windows.Forms.DataGridViewRow.ContextMenuStrip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenuStrip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Kontextmenü für die Zeile ab oder legt dieses fest.</summary>
        <value>Der der aktuellen <see cref="T:System.Windows.Forms.ContextMenuStrip" /> zugeordnete <see cref="T:System.Windows.Forms.DataGridViewRow" />. Die Standardeinstellung ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft gibt an, die angezeigt wird, wenn der Benutzer die Zeile, wenn mit der rechten Maustaste im Kontextmenü der <xref:System.Windows.Forms.DataGridView> Steuerelement <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded> Ereignis oder die Zeile <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> Eigenschaft überschreibt das Kontextmenü für die bestimmte Zelle, auf die geklickt wurde.  
  
 Bei der <xref:System.Windows.Forms.DataGridView> Steuerelement <xref:System.Windows.Forms.DataGridView.DataSource%2A> festgelegt wird oder den zugehörigen <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> -Eigenschaft ist `true`, Abrufen des Werts der <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> Eigenschaft löst die <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> Ereignis des Steuerelements und gibt den Wert von der <xref:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs.ContextMenuStrip%2A?displayProperty=nameWithType> -Eigenschaft im Ereignishandler angegeben. Wenn kein Handler für das Ereignis vorhanden sind, Abrufen des Werts der <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> Eigenschaft zurückgibt, der zuvor angegebene Wert oder den Standardwert `null`.  
  
 Behandeln der <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> Ereignis ist vor allem nützlich, bei der Arbeit mit großen Mengen von Daten, um Leistungseinbußen zu verhindern, wenn Sie die Zeile festlegen <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> Wert für mehrere Zeilen. Weitere Informationen finden Sie unter [Best Practices für das Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Löst das Ändern dieser Eigenschaft die <xref:System.Windows.Forms.DataGridView.RowContextMenuStripChanged> Ereignis für die besitzende <xref:System.Windows.Forms.DataGridView>, sofern vorhanden.  
  
 Wenn die aktuelle Zeile freigegeben ist, verwenden Sie die <xref:System.Windows.Forms.DataGridViewRow.GetContextMenuStrip%2A> -Methode, statt beim Abrufen des Werts dieser Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Windows.Forms.DataGridViewColumn.ContextMenuStrip%2A?displayProperty=nameWithType> Eigenschaft, die nahezu identisch mit der <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> Eigenschaft der <xref:System.Windows.Forms.DataGridViewRow> Klasse. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels, das sich der <xref:System.Windows.Forms.DataGridViewColumn> Klasse.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#130](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewColumnDemo.cpp#130)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#130](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewColumnDemo.cs#130)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#130](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewcolumndemo.vb#130)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Beim Abrufen des Werts dieser Eigenschaft befindet sich die Zeile in einem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement und stellt eine freigegebene Zeile dar.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowContextMenuStripChanged" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="T:System.Windows.Forms.ContextMenuStrip" />
        <related type="Article" href="https://msdn.microsoft.com/library/8321a8a6-6340-4fd1-b475-fa090b905aaf">Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="dataGridViewRow.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein neues barrierefreies Objekt für die <see cref="T:System.Windows.Forms.DataGridViewRow" />.</summary>
        <returns>Ein neues <see cref="T:System.Windows.Forms.DataGridViewRow.DataGridViewRowAccessibleObject" /> für die <see cref="T:System.Windows.Forms.DataGridViewRow" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie die <xref:System.Windows.Forms.DataGridViewRow.CreateAccessibilityInstance%2A>-Methode nicht explizit aufrufen, wird sie beim Verweis auf die <xref:System.Windows.Forms.DataGridViewRow.AccessibilityObject%2A>-Eigenschaft aufgerufen.  
  
> [!NOTE]
>  Zum Abrufen oder festlegen <xref:System.Windows.Forms.DataGridViewRow.AccessibilityObject%2A>, müssen Sie einen Verweis zum Hinzufügen der `Accessibility` mit installierte Assembly die [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateCells">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Setzt die Zellen in der Zeile zurück.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateCells">
      <MemberSignature Language="C#" Value="public void CreateCells (System.Windows.Forms.DataGridView dataGridView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateCells(class System.Windows.Forms.DataGridView dataGridView) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.CreateCells(System.Windows.Forms.DataGridView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateCells(System::Windows::Forms::DataGridView ^ dataGridView);" />
      <MemberSignature Language="F#" Value="member this.CreateCells : System.Windows.Forms.DataGridView -&gt; unit" Usage="dataGridViewRow.CreateCells dataGridView" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridView" Type="System.Windows.Forms.DataGridView" />
      </Parameters>
      <Docs>
        <param name="dataGridView">Eine <see cref="T:System.Windows.Forms.DataGridView" />, die als Vorlage für Zellstile fungiert.</param>
        <summary>Löscht die vorhandenen Zellen und legt die entsprechende Vorlage gemäß der bereitgestellten <see cref="T:System.Windows.Forms.DataGridView" />-Vorlage fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode löscht die Zeile <xref:System.Windows.Forms.DataGridViewCellCollection> und initialisiert sie mit der <xref:System.Windows.Forms.DataGridViewColumn.CellTemplate%2A> Eigenschaft für jede Spalte von der `dataGridView` Parameter. Daher nimmt die Zeile, das Aussehen und Verhalten einer Zeile aus der `dataGridView` Parameter.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dataGridView" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Es wurde eine Zeile hinzugefügt, die bereits zur <see cref="T:System.Windows.Forms.DataGridView" /> gehört.  
  
- oder - 
Es wurde eine Spalte hinzugefügt, die keine Zellvorlage besitzt.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellCollection" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCellCollection.Clear" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.CellTemplate" />
      </Docs>
    </Member>
    <Member MemberName="CreateCells">
      <MemberSignature Language="C#" Value="public void CreateCells (System.Windows.Forms.DataGridView dataGridView, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateCells(class System.Windows.Forms.DataGridView dataGridView, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.CreateCells(System.Windows.Forms.DataGridView,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateCells(System::Windows::Forms::DataGridView ^ dataGridView, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.CreateCells : System.Windows.Forms.DataGridView * obj[] -&gt; unit" Usage="dataGridViewRow.CreateCells (dataGridView, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridView" Type="System.Windows.Forms.DataGridView" />
        <Parameter Name="values" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="dataGridView">Eine <see cref="T:System.Windows.Forms.DataGridView" />, die als Vorlage für Zellstile fungiert.</param>
        <param name="values">Ein Array von Objekten, die die zurückgesetzten Zellen initialisieren.</param>
        <summary>Löscht die vorhandenen Zellen und legt ihre Vorlage sowie ihre Werte fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode löscht die Zeile <xref:System.Windows.Forms.DataGridViewCellCollection> und initialisiert sie mit der <xref:System.Windows.Forms.DataGridViewColumn.CellTemplate%2A> Eigenschaft für jede Spalte von der `dataGridView` Parameter. Daher nimmt die Zeile, das Aussehen und Verhalten einer Zeile aus der `dataGridView` Parameter.  
  
 Wenn es mehr Elemente in sind der `values` Array als Zellen initialisiert werden, werden die zusätzlichen Elemente ignoriert. Wenn weniger Elemente als erforderlich vorhanden sind, werden die verbleibenden Zellen für nicht übereinstimmenden die ursprünglichen Standardwerte beibehalten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Einer der Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Es wurde eine Zeile hinzugefügt, die bereits zur <see cref="T:System.Windows.Forms.DataGridView" /> gehört.  
  
- oder - 
Es wurde eine Spalte hinzugefügt, die keine Zellvorlage besitzt.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellCollection" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.SetValues(System.Object[])" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.CellTemplate" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.SetValue(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CreateCellsInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.DataGridViewCellCollection CreateCellsInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.DataGridViewCellCollection CreateCellsInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.CreateCellsInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateCellsInstance () As DataGridViewCellCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::DataGridViewCellCollection ^ CreateCellsInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateCellsInstance : unit -&gt; System.Windows.Forms.DataGridViewCellCollection&#xA;override this.CreateCellsInstance : unit -&gt; System.Windows.Forms.DataGridViewCellCollection" Usage="dataGridViewRow.CreateCellsInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt anhand dieser Zeile eine neue Auflistung von Zellen.</summary>
        <returns>Der neu erstellte <see cref="T:System.Windows.Forms.DataGridViewCellCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode erstellt ein leeres <xref:System.Windows.Forms.DataGridViewCellCollection> mit der <xref:System.Windows.Forms.BaseCollection.Count%2A> -Eigenschaft auf 0 festgelegt.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Abgeleitete Klassen sollten in der Regel ihre eigene Version der implementieren die <see cref="M:System.Windows.Forms.DataGridViewRow.CreateCellsInstance" /> -Methode und nicht rufen die Basisklassenversion.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellCollection" />
      </Docs>
    </Member>
    <Member MemberName="DataBoundItem">
      <MemberSignature Language="C#" Value="public object DataBoundItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataBoundItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.DataBoundItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBoundItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataBoundItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBoundItem : obj" Usage="System.Windows.Forms.DataGridViewRow.DataBoundItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das datengebundene Objekt ab, mit dem die Zeile aufgefüllt wurde.</summary>
        <value>Das datengebundene <see cref="T:System.Object" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zugriff auf die von datengebundenen Objekten direkt über Zeilenobjekte ist nützlich, wenn Sie nicht über direkten Zugriff auf die Datenquelle, die mit den Objekten verfügen. Es ist auch praktisch, wenn Bearbeiten von Objekten, die gebunden werden, um ausgewählte Zeilen oder Zeilen, die als Argumente an den Ereignishandler übergeben werden sollen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Windows.Forms.DataGridViewRow.DataBoundItem%2A> -Eigenschaft auf ein Geschäftsobjekt an eine Zeile gebunden. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels [Vorgehensweise: Zugreifen auf Objekte gebunden zu Windows Forms-DataGridView-Zeilen](~/docs/framework/winforms/controls/how-to-access-objects-bound-to-windows-forms-datagridview-rows.md).  
  
 [!code-csharp[System.Windows.Forms.DataGridViewObjectBinding#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewObjectBinding/CS/datagridviewobjectbinding.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewObjectBinding#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewObjectBinding/VB/datagridviewobjectbinding.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCellStyle">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.DefaultCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultCellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataGridViewCellStyle ^ DefaultCellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridViewRow.DefaultCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Standardstile für die Zeile ab, mit denen Zellen in der Zeile gerendert werden, wenn die Stile nicht überschrieben werden.</summary>
        <value>Das <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />, das als Standardformat übernommen werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridView> -Steuerelement zeigt die Zellen, die mithilfe der Stile, die von der Zelle angegebene <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> -Eigenschaft, die erbt Formatvorlagen aus anderen Eigenschaften des Typs <xref:System.Windows.Forms.DataGridViewCellStyle>. Für die Zellen in dieser Zeile, die Stile, die über angegeben die <xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A> Eigenschaft überschreiben die Stile, über die <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A?displayProperty=nameWithType>, und <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A?displayProperty=nameWithType> Eigenschaften, jedoch außer Kraft gesetzt werden, durch die Stile, über die <xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType> Eigenschaft.  
  
 Weitere Informationen finden Sie unter [Zellstile im DataGridView-Steuerelement in Windows Forms](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md).  
  
 Beim Abrufen dieser Eigenschaft ist eine <xref:System.Windows.Forms.DataGridViewCellStyle> Standardwert erstellt, wenn die Eigenschaft noch nicht zugegriffen wurde. Dies kann zu Leistungseinbußen führen, wenn diese Eigenschaft für viele Zeilen abgerufen. Verwenden Sie nach Möglichkeit eine einzelne <xref:System.Windows.Forms.DataGridViewCellStyle> zum Festlegen dieser Eigenschaft für mehrere Zeilen. Weitere Informationen finden Sie unter [Best Practices für das Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie mit dieser Eigenschaft in einem <xref:System.Windows.Forms.DataGridView> Steuerelement soll in erster Linie für die Anzeige. Klicken Sie in diesem Beispiel wird die visuelle Darstellung des Steuerelements auf unterschiedliche Weise angepasst, und das Steuerelement für begrenzt Interaktivität konfiguriert ist. In diesem Beispiel ist Teil eines umfangreicheren Beispiels zur Verfügung, in der <xref:System.Windows.Forms.DataGridViewCellStyle> Übersicht über die Klasse.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Beim Festlegen dieser Eigenschaft befindet sich die Zeile in einem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement und stellt eine freigegebene Zeile dar.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbb75ed6-8804-4232-8382-f9920c2e380c">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
        <related type="Article" href="https://msdn.microsoft.com/library/8321a8a6-6340-4fd1-b475-fa090b905aaf">Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="Displayed">
      <MemberSignature Language="C#" Value="public override bool Displayed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Displayed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.Displayed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Displayed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Displayed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Displayed : bool" Usage="System.Windows.Forms.DataGridViewRow.Displayed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob diese Zeile auf dem Bildschirm angezeigt wird.</summary>
        <value><see langword="true" />, wenn die Zeile gegenwärtig auf dem Bildschirm angezeigt wird, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Die Zeile befindet sich in einem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement und stellt eine freigegebene Zeile dar.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <related type="Article" href="https://msdn.microsoft.com/library/8321a8a6-6340-4fd1-b475-fa090b905aaf">Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="DividerHeight">
      <MemberSignature Language="C#" Value="public int DividerHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DividerHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.DividerHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property DividerHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DividerHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DividerHeight : int with get, set" Usage="System.Windows.Forms.DataGridViewRow.DividerHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Höhe des Zeilenunterteilers in Pixel ab oder legt diese fest.</summary>
        <value>Die Höhe des Unterteilers (des unteren Rands der Zeile) in Pixel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist nützlich, geben Sie eine visual Grenze zwischen fixierte Zeilen und Zeilen, die einen Bildlauf durchführen können. Der zusätzliche Rand ist Teil der aktuellen Zeile, obwohl es die Vordergrundfarbe des zugeordneten dauert <xref:System.Windows.Forms.DataGridView>. Der zusätzliche Rand erstreckt sich nicht auf den Bereich, in dem Benutzer doppelklicken können, um automatisch die Größe eine Zeile ändern, aus. Zum Ändern der Größe einer Zeile muss der Benutzer an der Grenze zwischen dem Unterteiler und die angrenzende Zeile doppelklicken.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Höhe des Unterteilers Betonung zu einer Zeile geändert.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#210](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#210)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#210](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#210)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#210](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#210)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Beim Festlegen dieser Eigenschaft befindet sich die Zeile in einem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement und stellt eine freigegebene Zeile dar.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <related type="Article" href="https://msdn.microsoft.com/library/8321a8a6-6340-4fd1-b475-fa090b905aaf">Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="DrawFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void DrawFocus (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle bounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates rowState, System.Windows.Forms.DataGridViewCellStyle cellStyle, bool cellsPaintSelectionBackground);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void DrawFocus(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle bounds, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewElementStates rowState, class System.Windows.Forms.DataGridViewCellStyle cellStyle, bool cellsPaintSelectionBackground) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.DrawFocus(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Windows.Forms.DataGridViewCellStyle,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void DrawFocus(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle bounds, int rowIndex, System::Windows::Forms::DataGridViewElementStates rowState, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, bool cellsPaintSelectionBackground);" />
      <MemberSignature Language="F#" Value="abstract member DrawFocus : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * System.Windows.Forms.DataGridViewCellStyle * bool -&gt; unit&#xA;override this.DrawFocus : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * System.Windows.Forms.DataGridViewCellStyle * bool -&gt; unit" Usage="dataGridViewRow.DrawFocus (graphics, clipBounds, bounds, rowIndex, rowState, cellStyle, cellsPaintSelectionBackground)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="rowState" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="cellsPaintSelectionBackground" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="graphics">Die <see cref="T:System.Drawing.Graphics" />, mit der die <see cref="T:System.Windows.Forms.DataGridViewRow" /> gezeichnet wird.</param>
        <param name="clipBounds">Ein <see cref="T:System.Drawing.Rectangle" />, das die Fläche der zu zeichnenden <see cref="T:System.Windows.Forms.DataGridView" /> darstellt.</param>
        <param name="bounds">Ein <see cref="T:System.Drawing.Rectangle" />, das die Begrenzungen der <see cref="T:System.Windows.Forms.DataGridViewRow" /> enthält, die gezeichnet wird.</param>
        <param name="rowIndex">Der Zeilenindex der gezeichneten Zelle.</param>
        <param name="rowState">Eine bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werten, die den Zustand der Zeile angibt.</param>
        <param name="cellStyle">Der zum Zeichnen des Fokusrechtecks verwendete <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />.</param>
        <param name="cellsPaintSelectionBackground"><see langword="true" /> für die Verwendung der <see cref="P:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor" />-Eigenschaft von <paramref name="cellStyle" /> als Farbe des Fokusrechtecks, <see langword="false" /> für die Verwendung der <see cref="P:System.Windows.Forms.DataGridViewCellStyle.BackColor" />-Eigenschaft von <paramref name="cellStyle" /> als Farbe des Fokusrechtecks.</param>
        <summary>Zeichnet ein Fokusrechteck um die angegebenen Begrenzungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `rowIndex` Parameter wird nicht verwendet, in der Basisklasse-Implementierung von der <xref:System.Windows.Forms.DataGridViewRow.DrawFocus%2A> -Methode, obwohl sie verwendet werden kann, wenn diese Methode in einer abgeleiteten Klasse außer Kraft gesetzt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Zeile wurde keinem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement hinzugefügt.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="graphics" /> ist <see langword="null" />.  
  
- oder -  
 <paramref name="cellStyle" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="ErrorText">
      <MemberSignature Language="C#" Value="public string ErrorText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.ErrorText" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ErrorText : string with get, set" Usage="System.Windows.Forms.DataGridViewRow.ErrorText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Fehlermeldungstext für Fehler auf Zeilenebene ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.String" />, der die Fehlermeldung enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Eigenschaft, um eine Fehlermeldung auf Zeilenebene Fehler bereitzustellen. Die angegebene Nachricht ist in einer QuickInfo angezeigt, wenn der Benutzer den Mauszeiger auf das Fehlersymbol angezeigt, die in den Zeilenheader bewegt.  
  
 Ab .NET Framework 4.5.2, ist das Fehlersymbol gemäß der System-DPI-Einstellung geändert, wenn die Datei "App.config" den folgenden Eintrag enthält:  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
  
```  
  
 Wenn diese Zeile zugeordnet ist eine <xref:System.Windows.Forms.DataGridView> Steuerelement durch Festlegen dieser Eigenschaft löst die <xref:System.Windows.Forms.DataGridView.RowErrorTextChanged> Ereignis.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A> -Eigenschaft in einem <xref:System.Windows.Forms.DataGridView.DataError> -Ereignishandler. In diesem Beispiel ist Teil eines umfangreicheren Beispiels zur Verfügung, in der <xref:System.Windows.Forms.DataGridViewComboBoxColumn> Übersicht über die Klasse.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Beim Abrufen des Werts dieser Eigenschaft stellt die Zeile eine freigegebene Zeile in einem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement dar.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ErrorText" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowErrorTextChanged" />
        <altmember cref="T:System.Windows.Forms.ErrorProvider" />
        <related type="Article" href="https://msdn.microsoft.com/library/8321a8a6-6340-4fd1-b475-fa090b905aaf">Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="Frozen">
      <MemberSignature Language="C#" Value="public override bool Frozen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Frozen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.Frozen" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Frozen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Frozen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Frozen : bool with get, set" Usage="System.Windows.Forms.DataGridViewRow.Frozen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Zeile fixiert ist, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn die Zeile fixiert ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Eigenschaft können Sie eine oder mehrere Zeilen mit wichtigen Informationen direktes beibehalten, wenn ein Benutzer einen Bildlauf der <xref:System.Windows.Forms.DataGridView>. Alle Zeilen über die fixierte Zeile sind auch fixiert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Windows.Forms.DataGridViewBand.Frozen%2A?displayProperty=nameWithType> Eigenschaft, die nahezu identisch mit der <xref:System.Windows.Forms.DataGridViewRow.Frozen%2A> Eigenschaft der <xref:System.Windows.Forms.DataGridViewRow> Klasse. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Windows.Forms.DataGridViewBand> Klasse.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewBandDemo.cpp#7)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewBandDemo.cs#7)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewbanddemo.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Zeile befindet sich in einem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement und stellt eine freigegebene Zeile dar.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <related type="Article" href="https://msdn.microsoft.com/library/8321a8a6-6340-4fd1-b475-fa090b905aaf">Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="GetContextMenuStrip">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ContextMenuStrip GetContextMenuStrip (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ContextMenuStrip GetContextMenuStrip(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.GetContextMenuStrip(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContextMenuStrip (rowIndex As Integer) As ContextMenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ContextMenuStrip ^ GetContextMenuStrip(int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.GetContextMenuStrip : int -&gt; System.Windows.Forms.ContextMenuStrip" Usage="dataGridViewRow.GetContextMenuStrip rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenuStrip</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Der Index der aktuellen Zeile.</param>
        <summary>Ruft das Kontextmenü für die Zeile ab.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.ContextMenuStrip" />, der zur <see cref="T:System.Windows.Forms.DataGridViewRow" /> am angegebenen Index gehört.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Übergeben Sie die <xref:System.Windows.Forms.DataGridViewRow.GetContextMenuStrip%2A> Methode den Indexer, die Sie zum Abrufen der <xref:System.Windows.Forms.DataGridViewRow>. Verwenden Sie nicht die <xref:System.Windows.Forms.DataGridViewBand.Index%2A> -Eigenschaft für die `rowIndex` Parameter. Wenn die Zeile freigegeben ist, <xref:System.Windows.Forms.DataGridViewBand.Index%2A> ist-1. dies ein ungültiger Wert ist für `rowIndex`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="rowIndex" /> ist -1.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" /> ist kleiner als 0 (null) bzw. größer oder gleich der Anzahl von Zeilen im Steuerelement minus 1.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <related type="Article" href="https://msdn.microsoft.com/library/8321a8a6-6340-4fd1-b475-fa090b905aaf">Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="GetErrorText">
      <MemberSignature Language="C#" Value="public string GetErrorText (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetErrorText(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.GetErrorText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetErrorText (rowIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetErrorText(int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.GetErrorText : int -&gt; string" Usage="dataGridViewRow.GetErrorText rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Der Index der Zeile, die den Fehler enthält.</param>
        <summary>Ruft den Fehlertext für die Zeile am angegebenen Index ab.</summary>
        <returns>Eine Zeichenfolge, die den Fehler der Zeile am angegebenen Index beschreibt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Übergeben Sie die <xref:System.Windows.Forms.DataGridViewRow.GetErrorText%2A> Methode den Index, die Sie zum Abrufen der <xref:System.Windows.Forms.DataGridViewRow>. Verwenden Sie nicht die <xref:System.Windows.Forms.DataGridViewBand.Index%2A> -Eigenschaft für die `rowIndex` Parameter. Wenn die Zeile freigegeben ist, <xref:System.Windows.Forms.DataGridViewBand.Index%2A> ist-1. dies ein ungültiger Wert ist für `rowIndex`. Weitere Informationen zum Freigeben von Zeilen finden Sie unter [Best Practices für das Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Zeile gehört zu einem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement und stellt eine freigegebene Zeile dar.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Die Zeile gehört zu einem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement, und <paramref name="rowIndex" /> ist kleiner als 0 (null) oder größer als die Anzahl der Zeilen im Steuerelement minus 1.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <related type="Article" href="https://msdn.microsoft.com/library/8321a8a6-6340-4fd1-b475-fa090b905aaf">Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="GetPreferredHeight">
      <MemberSignature Language="C#" Value="public virtual int GetPreferredHeight (int rowIndex, System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetPreferredHeight(int32 rowIndex, valuetype System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.GetPreferredHeight(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPreferredHeight (rowIndex As Integer, autoSizeRowMode As DataGridViewAutoSizeRowMode, fixedWidth As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetPreferredHeight(int rowIndex, System::Windows::Forms::DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth);" />
      <MemberSignature Language="F#" Value="abstract member GetPreferredHeight : int * System.Windows.Forms.DataGridViewAutoSizeRowMode * bool -&gt; int&#xA;override this.GetPreferredHeight : int * System.Windows.Forms.DataGridViewAutoSizeRowMode * bool -&gt; int" Usage="dataGridViewRow.GetPreferredHeight (rowIndex, autoSizeRowMode, fixedWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="autoSizeRowMode" Type="System.Windows.Forms.DataGridViewAutoSizeRowMode" />
        <Parameter Name="fixedWidth" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Der Index der Zeile, deren bevorzugte Höhe berechnet wird.</param>
        <param name="autoSizeRowMode">Ein <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" />, der einen Modus für die automatische Größenänderung angibt.</param>
        <param name="fixedWidth"><see langword="true" />, wenn die bevorzugte Höhe für eine feste Zellbreite berechnet werden soll, andernfalls <see langword="false" />.</param>
        <summary>Berechnet die optimale Höhe der angegebenen Zeile anhand der angegebenen Kriterien.</summary>
        <returns>Die optimale Höhe der Zeile in Pixel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wird verwendet, von der automatischen größenanpassung inhaltsbasierte-Funktion von der <xref:System.Windows.Forms.DataGridView> Steuerelement, um die optimale Höhe einer Zeile zu bestimmen. Die `rowIndex` Wert können Sie angeben, den tatsächlichen Zeilenindex einer freigegebenen Zeile. (Freigegebene Zeilen haben <xref:System.Windows.Forms.DataGridViewBand.Index%2A> Eigenschaftswerte von-1.)  
  
 Ein `fixedWidth` Parameterwert `false` berechnet die Höhe der Zeilen basierend auf einer berechneten Spaltenbreiten verwendet, die ideale Höhe und Breite Verhältnis Zelle erreicht werden.  
  
 Für den Inhalt der Zelle in mehrere Zeilen umbrochen werden soll, müssen der Zellstil für die Zelle eine <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> Eigenschaftswert <xref:System.Windows.Forms.DataGridViewTriState.True>.  
  
 Weitere Informationen zu automatischen größenanpassung, finden Sie unter [Größenänderungsoptionen im DataGridView-Steuerelement in Windows Forms](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Windows.Forms.DataGridViewRow.GetPreferredHeight%2A> Methode, um die neue Auffüllung für eine Zeile zu ermitteln, die Größe geändert wurde. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels [Vorgehensweise: Anpassen die Darstellung von Zeilen im DataGridView-Steuerelement in Windows Forms](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md).  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#40)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="autoSizeRowMode" /> ist kein gültiger <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" />-Wert.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="rowIndex" /> befindet sich nicht im gültigen Bereich (0 bis Anzahl der Zeilen im Steuerelement minus 1).</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.WrapMode" />
        <altmember cref="M:System.Windows.Forms.DataGridViewColumn.GetPreferredWidth(System.Windows.Forms.DataGridViewAutoSizeColumnMode,System.Boolean)" />
        <related type="Article" href="https://msdn.microsoft.com/library/d40b53d2-7e7c-48c5-8570-6e79d15c3bbb">Gewusst wie: Anpassen der Darstellung von Zeilen im DataGridView-Steuerelement in Windows Forms</related>
        <related type="Article" href="https://msdn.microsoft.com/library/a5620a9c-0d06-41e3-8934-c25ddb16c9e6">Größenänderungsoptionen im DataGridView-Steuerelement in Windows Forms</related>
        <related type="Article" href="https://msdn.microsoft.com/library/8321a8a6-6340-4fd1-b475-fa090b905aaf">Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="GetState">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridViewElementStates GetState (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Forms.DataGridViewElementStates GetState(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.GetState(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetState (rowIndex As Integer) As DataGridViewElementStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::DataGridViewElementStates GetState(int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetState : int -&gt; System.Windows.Forms.DataGridViewElementStates&#xA;override this.GetState : int -&gt; System.Windows.Forms.DataGridViewElementStates" Usage="dataGridViewRow.GetState rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewElementStates</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Der Index der Zeile.</param>
        <summary>Gibt einen Wert zurück, der den aktuellen Zustand der Zeile angibt.</summary>
        <returns>Eine bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werten, die den Zeilenzustand angeben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich zum Ermitteln des Status einer freigegebenen Zeile. Freigegebene Zeilen haben <xref:System.Windows.Forms.DataGridViewBand.Index%2A> Werte 1, der Sie von der Verwendung verhindert, dass die <xref:System.Windows.Forms.DataGridViewRow.State%2A> Eigenschaft mit dem freigegebene Zeilen. Um diese Methode verwenden, übergeben Sie den tatsächlichen Zeilenindex. Sie können den tatsächlichen Index einer freigegebenen Zeile abrufen, durch den Aufruf der <xref:System.Windows.Forms.DataGridViewRowCollection.IndexOf%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die Zeile wurde einem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement hinzugefügt, der <paramref name="rowIndex" />-Wert befindet sich jedoch nicht im gültigen Bereich zwischen 0 (null) und der Anzahl von Zeilen im Steuerelement minus 1.</exception>
        <exception cref="T:System.ArgumentException">Die Zeile stellt keine freigegebene Zeile dar, der <paramref name="rowIndex" />-Wert entspricht jedoch nicht dem <see cref="P:System.Windows.Forms.DataGridViewBand.Index" />-Eigenschaftswert der Zeile.  
  
- oder - 
Die Zeile wurde keinem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement hinzugefügt, der <paramref name="rowIndex" />-Wert entspricht jedoch nicht dem <see cref="P:System.Windows.Forms.DataGridViewBand.Index" />-Eigenschaftswert der Zeile.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
        <altmember cref="P:System.Windows.Forms.DataGridViewBand.Index" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.State" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRowCollection.IndexOf(System.Windows.Forms.DataGridViewRow)" />
        <related type="Article" href="https://msdn.microsoft.com/library/8321a8a6-6340-4fd1-b475-fa090b905aaf">Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="HeaderCell">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewRowHeaderCell HeaderCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewRowHeaderCell HeaderCell" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.HeaderCell" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderCell As DataGridViewRowHeaderCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewRowHeaderCell ^ HeaderCell { System::Windows::Forms::DataGridViewRowHeaderCell ^ get(); void set(System::Windows::Forms::DataGridViewRowHeaderCell ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderCell : System.Windows.Forms.DataGridViewRowHeaderCell with get, set" Usage="System.Windows.Forms.DataGridViewRow.HeaderCell" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowHeaderCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Headerzelle der Zeile ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />, die die Headerzelle der Zeile darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Headerzelle einer Zeile wird normalerweise verwendet, um die zeilenbeschriftung einer angezeigt werden. Benutzer können auch klicken, den Zeilenheader, um die Zeile auszuwählen, wenn die <xref:System.Windows.Forms.DataGridView.SelectionMode%2A?displayProperty=nameWithType> -Eigenschaftensatz auf <xref:System.Windows.Forms.DataGridViewSelectionMode.RowHeaderSelect?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Windows.Forms.DataGridViewRow.HeaderCell%2A> Eigenschaft Label-Zeilenheader.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#209)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#209)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#209)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.SelectionMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Height { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Height : int with get, set" Usage="System.Windows.Forms.DataGridViewRow.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(22)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die aktuelle Höhe der Zeile ab oder legt diese fest.</summary>
        <value>Die Höhe der Zeile in Pixel. Der Standardwert wird aus der Höhe der Standardschriftart plus 9 Pixel berechnet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um die minimale Höhe für eine Zeile festzulegen, verwenden die <xref:System.Windows.Forms.DataGridViewRow.MinimumHeight%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Windows.Forms.DataGridViewRow.Height%2A> Eigenschaft, um die Höhe der ersten Zeile festzulegen. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels, das sich [Vorgehensweise: Bearbeiten von Zeilen im DataGridView-Steuerelement in Windows Forms](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md).  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#208](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#208)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#208](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#208)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#208](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#208)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Beim Festlegen dieser Eigenschaft befindet sich die Zeile in einem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement und stellt eine freigegebene Zeile dar.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.MinimumHeight" />
        <related type="Article" href="https://msdn.microsoft.com/library/8321a8a6-6340-4fd1-b475-fa090b905aaf">Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="InheritedStyle">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DataGridViewCellStyle InheritedStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle InheritedStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.InheritedStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property InheritedStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataGridViewCellStyle ^ InheritedStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InheritedStyle : System.Windows.Forms.DataGridViewCellStyle" Usage="System.Windows.Forms.DataGridViewRow.InheritedStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den für die Zeile gültigen Zellstil ab.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />, der die Formatierungs- und Stilinformationen für die Zellen in der Zeile angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist nützlich, um zu bestimmen, welche Zellstile auf alle Zellen in einer Zeile unabhängig von Spaltenformate angewendet werden, die auch auf Zellen angewendet werden. Die Zeile <xref:System.Windows.Forms.DataGridViewRow.InheritedStyle%2A> -Eigenschaft erbt seine Werte aus den folgenden Eigenschaften:  
  
-   <xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A>  
  
-   <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A?displayProperty=nameWithType> (für Zeilen mit ungerader Indexnummer)  
  
-   <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A?displayProperty=nameWithType>  
  
 Weitere Informationen zur Vererbung von Zellenstilen finden Sie unter [Zellstile im DataGridView-Steuerelement in Windows Forms](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Zeile befindet sich in einem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement und stellt eine freigegebene Zeile dar.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.DefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.RowsDefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/dbb75ed6-8804-4232-8382-f9920c2e380c">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
        <related type="Article" href="https://msdn.microsoft.com/library/8321a8a6-6340-4fd1-b475-fa090b905aaf">Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="IsNewRow">
      <MemberSignature Language="C#" Value="public bool IsNewRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNewRow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.IsNewRow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNewRow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNewRow { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNewRow : bool" Usage="System.Windows.Forms.DataGridViewRow.IsNewRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Zeile die Zeile für neue Datensätze darstellt.</summary>
        <value><see langword="true" />, wenn die Zeile die letzte Zeile in der <see cref="T:System.Windows.Forms.DataGridView" /> darstellt, die für die Eingabe einer neuen Datenzeile verwendet wird, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da die Zeile für neue Datensätze wird die <xref:System.Windows.Forms.DataGridView.Rows%2A> erfassen, verwenden die <xref:System.Windows.Forms.DataGridViewRow.IsNewRow%2A> Eigenschaft, um zu bestimmen, ob eine Zeile die Zeile für neue Datensätze oder eine aufgefüllte Zeile.  
  
 Eine Zeile wird beendet, wird die neue Zeile, wenn die Eingabe von Daten in der Zeile beginnt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Windows.Forms.DataGridViewRow.IsNewRow%2A> möchte, dass die Eigenschaft, um zu verhindern, dass die Bezeichnung der Zeile für neue Datensätze festgelegt.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#209)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#209)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#209)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <related type="Article" href="https://msdn.microsoft.com/library/6110f1ea-9794-442c-a98a-f104a1feeaf4">Verwenden der Zeile für neue Datensätze im DataGridView-Steuerelement in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="MinimumHeight">
      <MemberSignature Language="C#" Value="public int MinimumHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.MinimumHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumHeight : int with get, set" Usage="System.Windows.Forms.DataGridViewRow.MinimumHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Mindesthöhe der Zeile ab oder legt diese fest.</summary>
        <value>Die Mindesthöhe der Zeile in Pixel. Sie liegt zwischen 2 und <see cref="F:System.Int32.MaxValue" />. Der Standard ist 3.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRow.MinimumHeight%2A> Eigenschaft verwaltet die Anzeige der Zeile durch Festlegen von eine Beschränkung, wie weit der Benutzer die Höhe der Zeile über die Benutzeroberfläche (UI) ändern kann.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Windows.Forms.DataGridViewRow.MinimumHeight%2A> Eigenschaft, um die minimale Höhe der zweiten Zeile festzulegen. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels, das sich [Vorgehensweise: Bearbeiten von Zeilen im DataGridView-Steuerelement in Windows Forms](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md).  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#207](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#207)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#207](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#207)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#207](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#207)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Beim Festlegen dieser Eigenschaft befindet sich die Zeile in einem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement und stellt eine freigegebene Zeile dar.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der beim Festlegen dieser Eigenschaft angegebene Wert ist kleiner als 2.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.Height" />
        <related type="Article" href="https://msdn.microsoft.com/library/8321a8a6-6340-4fd1-b475-fa090b905aaf">Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="protected internal virtual void Paint (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle rowBounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Paint(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle rowBounds, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Paint(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle rowBounds, int rowIndex, System::Windows::Forms::DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow);" />
      <MemberSignature Language="F#" Value="abstract member Paint : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * bool * bool -&gt; unit&#xA;override this.Paint : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * bool * bool -&gt; unit" Usage="dataGridViewRow.Paint (graphics, clipBounds, rowBounds, rowIndex, rowState, isFirstDisplayedRow, isLastVisibleRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="rowState" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="isFirstDisplayedRow" Type="System.Boolean" />
        <Parameter Name="isLastVisibleRow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="graphics">Die <see cref="T:System.Drawing.Graphics" />, mit der die <see cref="T:System.Windows.Forms.DataGridViewRow" /> gezeichnet wird.</param>
        <param name="clipBounds">Ein <see cref="T:System.Drawing.Rectangle" />, das die Fläche der zu zeichnenden <see cref="T:System.Windows.Forms.DataGridView" /> darstellt.</param>
        <param name="rowBounds">Ein <see cref="T:System.Drawing.Rectangle" />, das die Begrenzungen der <see cref="T:System.Windows.Forms.DataGridViewRow" /> enthält, die gezeichnet wird.</param>
        <param name="rowIndex">Der Zeilenindex der gezeichneten Zelle.</param>
        <param name="rowState">Eine bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werten, die den Zustand der Zeile angibt.</param>
        <param name="isFirstDisplayedRow"><see langword="true" />, um anzugeben, ob die aktuelle Zeile die erste in der <see cref="T:System.Windows.Forms.DataGridView" /> angezeigte Zeile darstellt, andernfalls <see langword="false" />.</param>
        <param name="isLastVisibleRow"><see langword="true" />, um anzugeben, ob die aktuelle Zeile die letzte Zeile in der <see cref="T:System.Windows.Forms.DataGridView" /> ist, deren <see cref="P:System.Windows.Forms.DataGridViewRow.Visible" />-Eigenschaft auf <see langword="true" /> festgelegt ist, andernfalls <see langword="false" />.</param>
        <summary>Zeichnet die aktuelle Zeile.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridView> Steuerelement ruft diese Methode, um die Zeile zu zeichnen.  
  
 Löst das Aufrufen dieser Methode die <xref:System.Windows.Forms.DataGridView.RowPrePaint?displayProperty=nameWithType> Ereignis. Wenn ein Handler für das Ereignis nicht festgelegt ist die <xref:System.ComponentModel.HandledEventArgs.Handled%2A?displayProperty=nameWithType> Eigenschaft, um `true`, diese Methode ruft auch die <xref:System.Windows.Forms.DataGridViewRow.PaintHeader%2A> und <xref:System.Windows.Forms.DataGridViewRow.PaintCells%2A> Methoden und löst die <xref:System.Windows.Forms.DataGridView.RowPostPaint?displayProperty=nameWithType> Ereignis.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Zeile wurde keinem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement hinzugefügt.  
  
- oder - 
Die Zeile befindet sich in einem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement und stellt eine freigegebene Zeile dar.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Die Zeile befindet sich in einem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement, und <paramref name="rowIndex" /> ist kleiner als 0 (null) oder größer als die Anzahl der Zeilen im Steuerelement minus 1.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowPrePaint" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowPostPaint" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.PaintHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean,System.Windows.Forms.DataGridViewPaintParts)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.PaintCells(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean,System.Windows.Forms.DataGridViewPaintParts)" />
        <related type="Article" href="https://msdn.microsoft.com/library/8321a8a6-6340-4fd1-b475-fa090b905aaf">Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="PaintCells">
      <MemberSignature Language="C#" Value="protected internal virtual void PaintCells (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle rowBounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow, System.Windows.Forms.DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PaintCells(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle rowBounds, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow, valuetype System.Windows.Forms.DataGridViewPaintParts paintParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.PaintCells(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean,System.Windows.Forms.DataGridViewPaintParts)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void PaintCells(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle rowBounds, int rowIndex, System::Windows::Forms::DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow, System::Windows::Forms::DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="F#" Value="abstract member PaintCells : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * bool * bool * System.Windows.Forms.DataGridViewPaintParts -&gt; unit&#xA;override this.PaintCells : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * bool * bool * System.Windows.Forms.DataGridViewPaintParts -&gt; unit" Usage="dataGridViewRow.PaintCells (graphics, clipBounds, rowBounds, rowIndex, rowState, isFirstDisplayedRow, isLastVisibleRow, paintParts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="rowState" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="isFirstDisplayedRow" Type="System.Boolean" />
        <Parameter Name="isLastVisibleRow" Type="System.Boolean" />
        <Parameter Name="paintParts" Type="System.Windows.Forms.DataGridViewPaintParts" />
      </Parameters>
      <Docs>
        <param name="graphics">Die <see cref="T:System.Drawing.Graphics" />, mit der die <see cref="T:System.Windows.Forms.DataGridViewRow" /> gezeichnet wird.</param>
        <param name="clipBounds">Ein <see cref="T:System.Drawing.Rectangle" />, das die Fläche der zu zeichnenden <see cref="T:System.Windows.Forms.DataGridView" /> darstellt.</param>
        <param name="rowBounds">Ein <see cref="T:System.Drawing.Rectangle" />, das die Begrenzungen der <see cref="T:System.Windows.Forms.DataGridViewRow" /> enthält, die gezeichnet wird.</param>
        <param name="rowIndex">Der Zeilenindex der gezeichneten Zelle.</param>
        <param name="rowState">Eine bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werten, die den Zustand der Zeile angibt.</param>
        <param name="isFirstDisplayedRow"><see langword="true" />, um anzugeben, ob die aktuelle Zeile die erste in der <see cref="T:System.Windows.Forms.DataGridView" /> angezeigte Zeile darstellt, andernfalls <see langword="false" />.</param>
        <param name="isLastVisibleRow"><see langword="true" />, um anzugeben, ob die aktuelle Zeile die letzte Zeile in der <see cref="T:System.Windows.Forms.DataGridView" /> ist, deren <see cref="P:System.Windows.Forms.DataGridViewRow.Visible" />-Eigenschaft auf <see langword="true" /> festgelegt ist, andernfalls <see langword="false" />.</param>
        <param name="paintParts">Eine bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewPaintParts" />-Werten, die die Teile der Zellen angeben, die gezeichnet werden sollen.</param>
        <summary>Zeichnet die Zellen in der aktuellen Zeile.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridView> Steuerelement ruft diese Methode, um die Zellen in der Zeile mit Ausnahme von gezeichnet werden soll, wenn ein Handler für die <xref:System.Windows.Forms.DataGridView.RowPrePaint?displayProperty=nameWithType> Ereignis legt die <xref:System.ComponentModel.HandledEventArgs.Handled%2A?displayProperty=nameWithType> Eigenschaft `true`. Weitere Informationen finden Sie unter <xref:System.Windows.Forms.DataGridViewRow.Paint%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Zeile wurde keinem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement hinzugefügt.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="paintParts" /> ist keine gültige bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewPaintParts" />-Werten.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowPrePaint" />
        <altmember cref="P:System.ComponentModel.HandledEventArgs.Handled" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PaintHeader">
      <MemberSignature Language="C#" Value="protected internal virtual void PaintHeader (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle rowBounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow, System.Windows.Forms.DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PaintHeader(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle rowBounds, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow, valuetype System.Windows.Forms.DataGridViewPaintParts paintParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.PaintHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean,System.Windows.Forms.DataGridViewPaintParts)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void PaintHeader(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle rowBounds, int rowIndex, System::Windows::Forms::DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow, System::Windows::Forms::DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="F#" Value="abstract member PaintHeader : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * bool * bool * System.Windows.Forms.DataGridViewPaintParts -&gt; unit&#xA;override this.PaintHeader : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * bool * bool * System.Windows.Forms.DataGridViewPaintParts -&gt; unit" Usage="dataGridViewRow.PaintHeader (graphics, clipBounds, rowBounds, rowIndex, rowState, isFirstDisplayedRow, isLastVisibleRow, paintParts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="rowState" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="isFirstDisplayedRow" Type="System.Boolean" />
        <Parameter Name="isLastVisibleRow" Type="System.Boolean" />
        <Parameter Name="paintParts" Type="System.Windows.Forms.DataGridViewPaintParts" />
      </Parameters>
      <Docs>
        <param name="graphics">Die <see cref="T:System.Drawing.Graphics" />, mit der die <see cref="T:System.Windows.Forms.DataGridViewRow" /> gezeichnet wird.</param>
        <param name="clipBounds">Ein <see cref="T:System.Drawing.Rectangle" />, das die Fläche der zu zeichnenden <see cref="T:System.Windows.Forms.DataGridView" /> darstellt.</param>
        <param name="rowBounds">Ein <see cref="T:System.Drawing.Rectangle" />, das die Begrenzungen der <see cref="T:System.Windows.Forms.DataGridViewRow" /> enthält, die gezeichnet wird.</param>
        <param name="rowIndex">Der Zeilenindex der gezeichneten Zelle.</param>
        <param name="rowState">Eine bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werten, die den Zustand der Zeile angibt.</param>
        <param name="isFirstDisplayedRow"><see langword="true" />, um anzugeben, ob die aktuelle Zeile die erste in der <see cref="T:System.Windows.Forms.DataGridView" /> angezeigte Zeile darstellt, andernfalls <see langword="false" />.</param>
        <param name="isLastVisibleRow"><see langword="true" />, um anzugeben, dass die aktuelle Zeile die letzte Zeile in der <see cref="T:System.Windows.Forms.DataGridView" /> darstellt, bei der die <see cref="P:System.Windows.Forms.DataGridViewRow.Visible" />-Eigenschaft auf <see langword="true" /> festgelegt ist, andernfalls <see langword="false" />.</param>
        <param name="paintParts">Eine bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewPaintParts" />-Werten, die die Teile der Zellen angeben, die gezeichnet werden sollen.</param>
        <summary>Zeichnet die Headerzelle der aktuellen Zeile.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridView> Steuerelement ruft diese Methode, um den Zeilenheader mit Ausnahme von gezeichnet werden soll, einen Handler für die <xref:System.Windows.Forms.DataGridView.RowPrePaint?displayProperty=nameWithType> Ereignis legt das <xref:System.ComponentModel.HandledEventArgs.Handled%2A?displayProperty=nameWithType> Eigenschaft `true`. Weitere Informationen finden Sie unter <xref:System.Windows.Forms.DataGridViewRow.Paint%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Zeile wurde keinem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement hinzugefügt.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="paintParts" /> ist keine gültige bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewPaintParts" />-Werten.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowPrePaint" />
        <altmember cref="P:System.ComponentModel.HandledEventArgs.Handled" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public override bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Windows.Forms.DataGridViewRow.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Zeile schreibgeschützt ist, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn die Zeile schreibgeschützt ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRow.ReadOnly%2A> Eigenschaft wirkt sich auf die <xref:System.Windows.Forms.DataGridViewCell.ReadOnly%2A?displayProperty=nameWithType> -Eigenschaft jeder Zelle in der Zeile.  
  
 Durch Festlegen dieser Eigenschaft hat keine Auswirkung, wenn der Wert des der <xref:System.Windows.Forms.DataGridView.ReadOnly%2A?displayProperty=nameWithType> Eigenschaft `true`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Windows.Forms.DataGridViewBand.ReadOnly%2A?displayProperty=nameWithType> Eigenschaft, die nahezu identisch mit der <xref:System.Windows.Forms.DataGridViewRow.ReadOnly%2A> Eigenschaft der <xref:System.Windows.Forms.DataGridViewRow> Klasse. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Windows.Forms.DataGridViewBand> Klasse.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewBandDemo.cpp#11)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewBandDemo.cs#11)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewbanddemo.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Zeile befindet sich in einem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement und stellt eine freigegebene Zeile dar.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ReadOnly" />
        <related type="Article" href="https://msdn.microsoft.com/library/8321a8a6-6340-4fd1-b475-fa090b905aaf">Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="Resizable">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DataGridViewTriState Resizable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewTriState Resizable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.Resizable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Resizable As DataGridViewTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataGridViewTriState Resizable { System::Windows::Forms::DataGridViewTriState get(); void set(System::Windows::Forms::DataGridViewTriState value); };" />
      <MemberSignature Language="F#" Value="member this.Resizable : System.Windows.Forms.DataGridViewTriState with get, set" Usage="System.Windows.Forms.DataGridViewRow.Resizable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Benutzer die Größe der Zeile ändern können, bzw. dass das Verhalten von der <see cref="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows" />-Eigenschaft geerbt wird, oder legt diesen Wert fest.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.DataGridViewTriState" />-Wert, der angibt, ob die Größe der Zeile geändert werden kann oder ob die Größe nur dann geändert werden kann, wenn die <see cref="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows" />-Eigenschaft auf <see langword="true" /> festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können keine dieser Eigenschaft mit einer freigegebenen Zeile. Weitere Informationen zu freigegebenen Zeilen finden Sie unter [Best Practices für das Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Wenn die <xref:System.Windows.Forms.DataGridViewRow.Resizable%2A> Eigenschaft <xref:System.Windows.Forms.DataGridViewTriState.False>, der Benutzer wird nicht in der Lage, die Zeilenhöhe manuell anpassen.  
  
 In der Standardeinstellung die <xref:System.Windows.Forms.DataGridViewRow.Resizable%2A> Eigenschaftswert basiert auf der <xref:System.Windows.Forms.DataGridView.AllowUserToResizeRows%2A?displayProperty=nameWithType> -Eigenschaftswert. Wenn Sie explizit festlegen <xref:System.Windows.Forms.DataGridViewRow.Resizable%2A> zu <xref:System.Windows.Forms.DataGridViewTriState.True> oder <xref:System.Windows.Forms.DataGridViewTriState.False>, die Control-Wert wird jedoch ignoriert. Legen Sie <xref:System.Windows.Forms.DataGridViewRow.Resizable%2A> zu <xref:System.Windows.Forms.DataGridViewTriState.NotSet> um das Verhalten der Vererbung von Eigenschaftswerten wiederherzustellen.  
  
 Da <xref:System.Windows.Forms.DataGridViewTriState.NotSet> stellt die Vererbung von Eigenschaftswerten, die <xref:System.Windows.Forms.DataGridViewRow.Resizable%2A> Eigenschaft wird nie zurückgegeben. ein <xref:System.Windows.Forms.DataGridViewTriState.NotSet> Wert, es sei denn, die Zeile nicht hinzugefügt wurde eine <xref:System.Windows.Forms.DataGridView> Steuerelement. Wenn Sie ermitteln müssen, ob die <xref:System.Windows.Forms.DataGridViewRow.Resizable%2A> Eigenschaftswert, der eine Zeile wird geerbt oder explizit angegeben wurde überprüfen die <xref:System.Windows.Forms.DataGridViewElement.State%2A> Eigenschaft. Wenn die <xref:System.Windows.Forms.DataGridViewElement.State%2A> Wert enthält die <xref:System.Windows.Forms.DataGridViewElementStates.ResizableSet> Flag, das <xref:System.Windows.Forms.DataGridViewRow.Resizable%2A> Eigenschaftswert wird nicht geerbt.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung dieser Eigenschaft.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.MouseBasedResizing#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.MouseBasedResizing/CPP/mousesizing.cpp#15)]
 [!code-csharp[System.Windows.Forms.DataGridView.MouseBasedResizing#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.MouseBasedResizing/CS/mousesizing.cs#15)]
 [!code-vb[System.Windows.Forms.DataGridView.MouseBasedResizing#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.MouseBasedResizing/VB/mousesizing.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Zeile befindet sich in einem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement und stellt eine freigegebene Zeile dar.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows" />
        <related type="Article" href="https://msdn.microsoft.com/library/8321a8a6-6340-4fd1-b475-fa090b905aaf">Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public override bool Selected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selected" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Selected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Selected { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Selected : bool with get, set" Usage="System.Windows.Forms.DataGridViewRow.Selected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Zeile ausgewählt ist, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn die Zeile ausgewählt ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können keine dieser Eigenschaft mit einer freigegebenen Zeile. Weitere Informationen zu freigegebenen Zeilen finden Sie unter [Best Practices für das Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung dieser Eigenschaft.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectedCollections#05](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectedCollections/CS/DataGridViewSelectedCollections.cs#05)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectedCollections#05](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectedCollections/VB/DataGridViewSelectedCollections.vb#05)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Zeile befindet sich in einem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement und stellt eine freigegebene Zeile dar.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <related type="Article" href="https://msdn.microsoft.com/library/8321a8a6-6340-4fd1-b475-fa090b905aaf">Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="SetValues">
      <MemberSignature Language="C#" Value="public bool SetValues (params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.SetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetValues (ParamArray values As Object()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetValues(... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.SetValues : obj[] -&gt; bool" Usage="dataGridViewRow.SetValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="values">Ein Objekt oder mehrere Objekte, die die Zellwerte in der Zeile darstellen.  
  
- oder - 
Ein <see cref="T:System.Array" /> von <see cref="T:System.Object" />-Werten.</param>
        <summary>Legt die Werte für die Zellen der Zeile fest.</summary>
        <returns><see langword="true" />, wenn alle Werte festgelegt wurden, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `values` Parameter stellt eine Variable Anzahl von Argumenten, die zum Auffüllen der Werte von Zellen in der Zeile verwendet. Diese Werte können auf diese Methode übergeben werden, als mehrere einzelne Argumente oder als Mitglieder einer einzelnen <xref:System.Array>. Da die Werte erwartet werden Instanzen des Typs <xref:System.Object>jedoch wenn Sie ein Array von Werten der Werttyp übergeben (wie z. B. <xref:System.Int32> Werte), diese Methode wird das Array als ein einzelnes Objekt zu behandeln und zu einer einzelnen Zelle zugewiesen. Um dieses Verhalten zu vermeiden, müssen Sie eine Umwandlung einem Werttyp-Array eine <xref:System.Object> array oder mehrere Werte als mehrere Argumente übergeben.  
  
 Wenn mehrere Werte in der `values` Liste als Zellen zu initialisierenden vorhanden sind, wird diese Methode werden die zusätzlichen Werte ignoriert und gibt `false`. Diese Methode gibt auch zurück `false` Wenn einer der angegebenen Werte festgelegt werden kann.  
  
 Wenn weniger Werte vorhanden sind als Zellen vorhanden sind, behalten die verbleibenden Zellen für nicht übereinstimmenden ihre aktuellen Werte.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="values" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Diese Methode wird aufgerufen, wenn die zugeordnete <see cref="T:System.Windows.Forms.DataGridView" /> im virtuellen Modus ausgeführt wird.  
  
- oder - 
Diese Zeile stellt eine freigegebene Zeile dar.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.CreateCells(System.Windows.Forms.DataGridView)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.SetValue(System.Int32,System.Object)" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/8321a8a6-6340-4fd1-b475-fa090b905aaf">Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DataGridViewElementStates State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewElementStates State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As DataGridViewElementStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataGridViewElementStates State { System::Windows::Forms::DataGridViewElementStates get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.DataGridViewElementStates" Usage="System.Windows.Forms.DataGridViewRow.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewElementStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den aktuellen Zustand der Zeile ab.</summary>
        <value>Eine bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werten, die den Zeilenzustand angeben.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft kann nicht mit freigegebenen Zeilen verwenden werden, da freigegebene Zeilen nicht ihren Zustand lokal gespeichert werden. Um den Zustand einer freigegebenen Zeile abzurufen, verwenden die <xref:System.Windows.Forms.DataGridViewRow.GetState%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Zeile befindet sich in einem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement und stellt eine freigegebene Zeile dar.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.GetState(System.Int32)" />
        <related type="Article" href="https://msdn.microsoft.com/library/8321a8a6-6340-4fd1-b475-fa090b905aaf">Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dataGridViewRow.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft eine Klartextzeichenfolge ab, die die Zeile beschreibt.</summary>
        <returns>Ein <see cref="T:System.String" />, der diese Zeile beschreibt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese außer Kraft gesetzte Version von der <xref:System.Windows.Forms.DataGridViewRow.ToString%2A> Methode bereitstellt, den Namen der Klasse und die <xref:System.Windows.Forms.DataGridViewBand.Index%2A> Informationen für diese Instanz die <xref:System.Windows.Forms.DataGridViewRow> Klasse.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewBand.Index" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Windows.Forms.DataGridViewRow.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Zeile sichtbar ist, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn die Zeile sichtbar ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Eigenschaft können Sie eine Zeile aus der Ansicht der zeilenupdates im Ausblenden der <xref:System.Windows.Forms.DataGridView>. Wenn um eine Zeile vollständig zu entfernen, verwenden die <xref:System.Windows.Forms.DataGridViewRowCollection.Remove%2A?displayProperty=nameWithType> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Windows.Forms.DataGridViewBand.Visible%2A?displayProperty=nameWithType> Eigenschaft, die nahezu identisch mit der <xref:System.Windows.Forms.DataGridViewRow.Visible%2A> Eigenschaft der <xref:System.Windows.Forms.DataGridViewRow> Klasse. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Windows.Forms.DataGridViewBand> Klasse.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewBandDemo.cpp#9)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewBandDemo.cs#9)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewbanddemo.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Zeile befindet sich in einem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement und stellt eine freigegebene Zeile dar.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRowCollection.Remove(System.Windows.Forms.DataGridViewRow)" />
        <related type="Article" href="https://msdn.microsoft.com/library/8321a8a6-6340-4fd1-b475-fa090b905aaf">Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms</related>
      </Docs>
    </Member>
  </Members>
</Type>