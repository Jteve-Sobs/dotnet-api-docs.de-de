<Type Name="ListView" FullName="System.Windows.Forms.ListView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="59323d73540d2bda66af42c4230cf914281d5c0c" />
    <Meta Name="ms.sourcegitcommit" Value="78b53877672f179ce9714e2e55e55afe30312465" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/15/2018" />
    <Meta Name="ms.locfileid" Value="51682417" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListView : System.Windows.Forms.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListView extends System.Windows.Forms.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListView" />
  <TypeSignature Language="VB.NET" Value="Public Class ListView&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListView : System::Windows::Forms::Control" />
  <TypeSignature Language="F#" Value="type ListView = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedIndexChanged")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("Items")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ListViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.Ask)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ListViewDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ListViewDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt ein Listenansicht-Steuerelement von Windows dar, das eine Auflistung von Elementen anzeigt, die in einer von vier Ansichten angezeigt werden können.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch ein <xref:System.Windows.Forms.ListView>-Steuerelement wird Ihnen das Anzeigen einer Liste von Elementen mitsamt dem Elementtext und optional mit einem Symbol zum Identifizieren des Elementtyps ermöglicht. Die Liste der Windows Explorer-Dateien ähnelt beispielsweise einem <xref:System.Windows.Forms.ListView>-Steuerelement. Sie zeigt eine Liste der Dateien und Ordner an, die derzeit in der Struktur ausgewählt sind. Für jede Datei und jeden Ordner wird ein Symbol angezeigt, um die Identifizierung des Datei- oder Ordnertyps zu erleichtern. Die <xref:System.Windows.Forms.ListViewItem>-Klasse stellt ein Element mit einem <xref:System.Windows.Forms.ListView>-Steuerelement dar. Die in der Liste angezeigten Elemente können in einer von fünf verschiedenen Ansichten dargestellt werden. Die Elemente können als große Symbole, kleine Symbole oder kleine Symbole in einer vertikalen Liste angezeigt werden. Elemente können ebenfalls über Unterelemente verfügen, die Informationen mit Bezug zum übergeordneten Element enthalten. Durch die Detailansicht können Sie das Element und seine Unterelemente in einem Raster mit Spaltenheader anzeigen, wodurch die in einem Unterelement angezeigten Informationen identifiziert werden. Die Titelansicht ist wie im Folgenden beschrieben nur begrenzt verfügbar und ermöglicht Ihnen das Anzeigen des Elements und seiner Unterelemente als Kachel, die ein großes Symbol neben den Textinformationen enthält. <xref:System.Windows.Forms.ListView> unterstützt Einzel- oder Mehrfachauswahl. Durch die Mehrfachauswahl kann der Benutzer ähnlich wie bei einem <xref:System.Windows.Forms.ListBox>-Steuerelement eine Liste von Elementen auswählen. Zusätzlich kann der Benutzer die ausgewählten Elemente zur Ausführung eines Tasks aktivieren. Sie können beispielweise ein <xref:System.Windows.Forms.ListView>-Steuerelement verwenden, um eine Liste von Dateien anzuzeigen, die von der Anwendung geöffnet und verwendet werden können. Der Benutzer kann die zu öffnenden Dateien auswählen und auf diese doppelklicken, um die Elemente zu aktivieren und die Dateien in der Anwendung zu öffnen. Durch <xref:System.Windows.Forms.ListView> können mithilfe der <xref:System.Windows.Forms.ListView.CheckBoxes%2A>-Eigenschaft ebenfalls Kontrollkästchen angezeigt werden. Dadurch wird es dem Benutzer ermöglicht, die Elemente zu aktivieren, für die eine Aktion ausgeführt werden soll. Es gibt viele Verwendungsmöglichkeiten für das <xref:System.Windows.Forms.ListView>-Steuerelement. Das Steuerelement kann verwendet werden, um Informationen aus einer Anwendung, einer Datenbank oder einer Textdatei anzuzeigen. Das <xref:System.Windows.Forms.ListView>-Steuerelement kann ebenfalls verwendet werden, um Informationen vom Benutzer abzurufen, z.B. die Auswahl mehrerer zu verarbeitender Dateien.  
  
 <xref:System.Windows.Forms.ListView> stellt viele Eigenschaften bereit, die Flexibilität bezüglich der Darstellung und des Verhaltens bieten. Durch die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft können Sie die Darstellungsweise von Elementen ändern. Durch die <xref:System.Windows.Forms.ListView.LargeImageList%2A>-, <xref:System.Windows.Forms.ListView.SmallImageList%2A>- und <xref:System.Windows.Forms.ListView.StateImageList%2A>-Eigenschaften können Sie die <xref:System.Windows.Forms.ImageList>-Objekte angeben, die die für die Elemente angezeigten Bilder enthalten. Im Fall von <xref:System.Windows.Forms.ListView.StateImageList%2A> enthalten diese die Kontrollkästchen, die angezeigt werden, wenn die <xref:System.Windows.Forms.ListView.CheckBoxes%2A>-Eigenschaft auf `true` festgelegt wird. Sie können die <xref:System.Windows.Forms.ListView.CheckedItems%2A>-Eigenschaft für den Zugriff auf die <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection>-Auflistung verwenden, um zu bestimmen, welche Elemente aktiviert sind. Die <xref:System.Windows.Forms.ListView.Columns%2A>-Eigenschaft ermöglicht den Zugriff auf die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>-Klasse, in der die Spaltenheader gespeichert sind, die angezeigt werden, wenn die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft des Steuerelements auf <xref:System.Windows.Forms.View.Details> festgelegt ist. Über die <xref:System.Windows.Forms.ListView.Items%2A>-Eigenschaft werden Elemente zu <xref:System.Windows.Forms.ListView> hinzugefügt und daraus entfernt. Durch die <xref:System.Windows.Forms.ListView.Items%2A>-Eigenschaft können Sie auf die <xref:System.Windows.Forms.ListView.ListViewItemCollection>-Klasse des Steuerelements zugreifen. Diese enthält Methoden zum Bearbeiten der Elemente im Steuerelement. Wenn Sie es dem Benutzer ermöglichen möchten, den Text eines Elements zu bearbeiten, können Sie die <xref:System.Windows.Forms.ListView.LabelEdit%2A>-Eigenschaft verwenden. Wenn das Steuerelement eine große Anzahl von Elementen enthält, ist es für den Benutzer häufig einfacher, diese in einer sortierten Liste anzuzeigen. Sie können die <xref:System.Windows.Forms.ListView.Sorting%2A>-Eigenschaft verwenden, um die Elemente alphabetisch zu sortieren. Sie können die Darstellung des <xref:System.Windows.Forms.ListView>-Steuerelements ebenfalls vollständig anpassen. Legen Sie hierfür die <xref:System.Windows.Forms.ListView.OwnerDraw%2A>-Eigenschaft auf `true` fest, und führen Sie mindestens eins der folgenden Ereignisse aus: <xref:System.Windows.Forms.ListView.DrawItem>, <xref:System.Windows.Forms.ListView.DrawSubItem>, <xref:System.Windows.Forms.ListView.DrawColumnHeader>  
  
 Viele Eigenschaften des <xref:System.Windows.Forms.ListView>-Steuerelements werden verwendet, wenn die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft des Steuerelements auf <xref:System.Windows.Forms.View.Details> festgelegt ist. Durch die <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>-Eigenschaft wird es dem Benutzer Ihres <xref:System.Windows.Forms.ListView>-Steuerelements ermöglicht, die Reihenfolge der Spalten zur Laufzeit neu zu konfigurieren. Durch die <xref:System.Windows.Forms.ListView.FullRowSelect%2A>-Eigenschaft können ein Element und dessen Unterelemente ausgewählt werden, statt nur das Element auszuwählen. Sie können die <xref:System.Windows.Forms.ListView.GridLines%2A>-Eigenschaft verwenden, um Gitternetzlinien in der Detailansicht anzuzeigen, damit die Grenzen der Elemente und Unterelemente in <xref:System.Windows.Forms.ListView> identifiziert werden können. Durch die <xref:System.Windows.Forms.ListView.HeaderStyle%2A>-Eigenschaft können Sie den Typ der anzuzeigenden Spaltenheader angeben.  
  
 Ein <xref:System.Windows.Forms.ListView>-Steuerelement kann im virtuellen Modus betrieben werden, in dem <xref:System.Windows.Forms.ListViewItem>-Objekte dynamisch generiert werden, statt in der <xref:System.Windows.Forms.ListView.Items%2A>-Auflistung gespeichert zu werden. Dies kann für den Umgang mit großen Listen oder Listen, deren Inhalte sich häufig ändern, nützlich sein. Legen Sie die <xref:System.Windows.Forms.ListView.VirtualMode%2A>-Eigenschaft auf `true` fest, und führen Sie die Ereignisse <xref:System.Windows.Forms.ListView.RetrieveVirtualItem>, <xref:System.Windows.Forms.ListView.CacheVirtualItems> und <xref:System.Windows.Forms.ListView.SearchForVirtualItem> aus, um den virtuellen Modus zu aktivieren.  
  
 Zusätzlich zu den vielen Eigenschaften, die für ein <xref:System.Windows.Forms.ListView>-Steuerelement verfügbar sind, gibt es Methoden und Ereignisse, die Ihre Anwendung verwenden kann, um zusätzliche Funktionen für <xref:System.Windows.Forms.ListView> bereitzustellen. Durch die <xref:System.Windows.Forms.ListView.BeginUpdate%2A>- und <xref:System.Windows.Forms.ListView.EndUpdate%2A>-Methoden können Sie die Leistung verbessern, wenn Sie viele Elemente zu <xref:System.Windows.Forms.ListView> hinzufügen, indem Sie verhindern, dass das Steuerelement jedes Mal aktualisiert wird, wenn ein Element hinzugefügt wird. Wenn Ihr <xref:System.Windows.Forms.ListView>-Steuerelement Elemente und Unterelemente anzeigt, sollten Sie Funktionen dafür bereitstellen, wenn der Benutzer mit der rechten Maustaste auf ein Unterelement klickt. Sie können die <xref:System.Windows.Forms.ListView.GetItemAt%2A>-Methode verwenden, um zu bestimmen, auf welches Unterelement geklickt wird. Bei der Überprüfung der Elemente, nachdem der Benutzer diese bearbeitet hat, sollten Sie dem Benutzer ein bestimmtes Element anzeigen, das geändert werden soll. Die <xref:System.Windows.Forms.ListView.EnsureVisible%2A>-Methode kann aufgerufen werden, um sicherzustellen, dass das bestimmte Element sich im sichtbaren Bereich des Steuerelements befindet.  
  
 Wenn die <xref:System.Windows.Forms.ListView.LabelEdit%2A>-Eigenschaft auf `true` festgelegt ist, können Sie durch das Erstellen eines Ereignishandlers für die <xref:System.Windows.Forms.ListView.BeforeLabelEdit>- und <xref:System.Windows.Forms.ListView.AfterLabelEdit>-Ereignisse Tasks ausführen, z.B. das Überprüfen, dass der Text vor und nach Änderungen bearbeitet wurde. Sie können einen Ereignishandler für das <xref:System.Windows.Forms.ListView>-Ereignis erstellen, um Aufgaben wie das Öffnen einer Datei oder das Anzeigen eines Dialogfelds für das Bearbeiten eines Elements, das in einem <xref:System.Windows.Forms.ListView.ItemActivate>-Steuerelement angezeigt wird, durchzuführen. Wenn Sie es dem Benutzer ermöglichen, die Elemente in einem <xref:System.Windows.Forms.ListView>-Steuerelement durch Klicken auf den Spaltenheader zu sortieren, können Sie einen Ereignishandler für das <xref:System.Windows.Forms.ListView.ColumnClick>-Ereignis erstellen, um den Sortiervorgang auszuführen. Wenn die <xref:System.Windows.Forms.ListView.CheckBoxes%2A>-Eigenschaft auf `true` festgelegt ist, können Sie bestimmen, wann eine Änderung im Aktivierungszustand eines Elements aufgetreten ist, indem Sie das <xref:System.Windows.Forms.ListView.ItemCheck>-Ereignis auslösen.  
  
 Mithilfe der <xref:System.Windows.Forms.Control.BackgroundImage%2A>-Eigenschaft können Sie ebenfalls ein Hintergrundbild für <xref:System.Windows.Forms.ListView> festlegen. In der `Main`-Methode Ihrer Anwendung muss <xref:System.STAThreadAttribute> vorhanden sein, damit das Hintergrundbild für das <xref:System.Windows.Forms.ListView>-Steuerelement ordnungsgemäß angezeigt wird. Wenn ein <xref:System.Windows.Forms.ListView>-Steuerelement mit einem Hintergrundbild in Internet Explorer gehostet wird, geben Sie zusätzlich „comctl32.dll“ (Version 6.0) als abhängige Assembly in der Manifestdatei der Anwendung an, um sicherzustellen, dass das Hintergrundbild ordnungsgemäß angezeigt wird.  
  
> [!NOTE]
>  Das Festlegen der <xref:System.Windows.Forms.Control.Cursor%2A>-Eigenschaft für ein <xref:System.Windows.Forms.ListView>-Steuerelement hat keine Auswirkung auf die Darstellung des Cursors in Version 1.1 und früher von [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 Windows XP und Windows Server 2003 bieten drei Features, die das <xref:System.Windows.Forms.ListView>-Steuerelement verbessern, wenn die Anwendung die <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType>-Methode aufruft: die Kachelansicht, die Gruppierung und die Einfügemarke.  
  
 Durch die Kachelansicht können Sie grafische und textbasierte Informationen anordnen, indem der Text von Elementen und Unterelementen neben großen Symbolen angezeigt wird. Legen Sie die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft auf <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType> fest, um dieses Verhalten zu aktivieren.  
  
 Durch das Gruppierungsfeature können Sie Elemente visuell in verwandte Kategorien gruppieren. Wenn Sie dieses Features aktivieren möchten, verwenden Sie die <xref:System.Windows.Forms.ListView.Groups%2A>-Eigenschaft, um <xref:System.Windows.Forms.ListViewGroup>-Objekte zum <xref:System.Windows.Forms.ListView>-Steuerelement hinzuzufügen. Legen Sie die <xref:System.Windows.Forms.ListView.ShowGroups%2A>-Eigenschaft auf `false` fest, um dieses Feature vorübergehend zu deaktivieren.  
  
 Durch das Feature für Einfügemarken ermöglichen Sie das Neupositionieren von Elementen mithilfe von Drag & Drop. Dabei gibt es visuelles Feedback, mit dem der Ablageort angezeigt wird. Verwenden Sie das aus der <xref:System.Windows.Forms.ListView.InsertionMark%2A>-Eigenschaft abgerufene <xref:System.Windows.Forms.ListViewInsertionMark>-Objekt, um die Einfügemarke anzuzeigen.  
  
 Diese Features sind nur unter Windows XP und Windows Server 2003 verfügbar. Bei früheren Betriebssystemen hat der Code für diese Features keine Auswirkung. Die Kachelansicht wird als Ansicht mit großen Symbolen angezeigt, die Einfügemarken und Gruppierungen werden hingegen gar nicht angezeigt. In einigen Fällen sollten Sie Code einfügen, durch den bestimmt wird, ob diese Features verfügbar sind sowie alternative Funktionalitäten bereitstellen, wenn diese nicht verfügbar sind. Diese Features werden von derselben Bibliothek bereitgestellt, die das Designfeature des Betriebssystems bereitstellt. Rufen Sie die <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType>-Methodenüberladung auf, und übergeben Sie den <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType>-Wert, um die Verfügbarkeit dieser Bibliothek zu überprüfen.  
  
 In der folgenden Tabelle werden einige der <xref:System.Windows.Forms.ListView>-Members und die Ansichten, in denen diese gültig sind, aufgeführt.  
  
|ListView-Member|Ansicht|  
|---------------------|----------|  
|<xref:System.Windows.Forms.ListView.Alignment%2A> -Eigenschaft|<xref:System.Windows.Forms.View.SmallIcon> oder <xref:System.Windows.Forms.View.LargeIcon>|  
|<xref:System.Windows.Forms.ListView.AutoArrange%2A> -Eigenschaft|<xref:System.Windows.Forms.View.SmallIcon> oder <xref:System.Windows.Forms.View.LargeIcon>|  
|<xref:System.Windows.Forms.ListView.AutoResizeColumn%2A>-Methode|<xref:System.Windows.Forms.View.Details>|  
|<xref:System.Windows.Forms.ListView.Columns%2A> -Eigenschaft|<xref:System.Windows.Forms.View.Details> oder <xref:System.Windows.Forms.View.Tile>|  
|<xref:System.Windows.Forms.ListView.DrawSubItem> -Ereignis|<xref:System.Windows.Forms.View.Details>|  
|<xref:System.Windows.Forms.ListView.FindItemWithText%2A>-Methode|<xref:System.Windows.Forms.View.Details>, <xref:System.Windows.Forms.View.List>oder <xref:System.Windows.Forms.View.Tile>|  
|<xref:System.Windows.Forms.ListView.FindNearestItem%2A>-Methode|<xref:System.Windows.Forms.View.SmallIcon> oder <xref:System.Windows.Forms.View.LargeIcon>|  
|<xref:System.Windows.Forms.ListView.GetItemAt%2A>-Methode|<xref:System.Windows.Forms.View.Details> oder <xref:System.Windows.Forms.View.Tile>|  
|<xref:System.Windows.Forms.ListView.Groups%2A> -Eigenschaft|Alle Ansichten außer <xref:System.Windows.Forms.View.List>|  
|<xref:System.Windows.Forms.ListView.HeaderStyle%2A> -Eigenschaft|<xref:System.Windows.Forms.View.Details>|  
|<xref:System.Windows.Forms.ListView.InsertionMark%2A> -Eigenschaft|<xref:System.Windows.Forms.View.LargeIcon>, <xref:System.Windows.Forms.View.SmallIcon>oder <xref:System.Windows.Forms.View.Tile>|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.ListView>-Steuerelement mit je drei <xref:System.Windows.Forms.ListViewItem>- und <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>-Objekten erstellt, die für jedes Element angegeben werden. Im Beispiel wird ebenfalls ein <xref:System.Windows.Forms.ColumnHeader>-Objekt erstellt, um die Unterelemente in der Detailansicht anzuzeigen. Ebenfalls werden zwei <xref:System.Windows.Forms.ImageList>-Objekte im Codebeispiel erstellt, die Bilder für die <xref:System.Windows.Forms.ListViewItem>-Objekte bereitstellen. Diese <xref:System.Windows.Forms.ImageList>-Objekte werden zu den <xref:System.Windows.Forms.ListView.LargeImageList%2A>- und <xref:System.Windows.Forms.ListView.SmallImageList%2A>-Eigenschaften hinzugefügt. Im Beispiel werden folgende Eigenschaft bei der Erstellung des <xref:System.Windows.Forms.ListView>-Steuerelements verwendet:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Für dieses Beispiel ist erforderlich, dass Sie den Code zu einer <xref:System.Windows.Forms.Form>-Klasse hinzufügen und die Methode aufrufen, die im Beispiel aus dem Konstruktor oder einer anderen Methode der Form-Klasse erstellt wurde. Für das Beispiel ist ebenfalls erforderlich, dass die Bilder namens `MySmallImage1`, `MySmallImage2`, `MyLargeImage1` und `MyLargeImage2` sich im Stammverzeichnis von Laufwerk C befinden.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListViewItem" />
    <altmember cref="T:System.Windows.Forms.ImageList" />
    <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.ListView" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.ListView>-Steuerelement mit je drei <xref:System.Windows.Forms.ListViewItem>- und <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>-Objekten erstellt, die für jedes Element angegeben werden. Im Beispiel wird ebenfalls ein <xref:System.Windows.Forms.ColumnHeader>-Objekt erstellt, um die Unterelemente in der Detailansicht anzuzeigen. Ebenfalls werden zwei <xref:System.Windows.Forms.ImageList>-Objekte im Codebeispiel erstellt, die Bilder für die <xref:System.Windows.Forms.ListViewItem>-Objekte bereitstellen. Diese <xref:System.Windows.Forms.ImageList>-Objekte werden zu den <xref:System.Windows.Forms.ListView.LargeImageList%2A>- und <xref:System.Windows.Forms.ListView.SmallImageList%2A>-Eigenschaften hinzugefügt. Im Beispiel werden folgende Eigenschaft bei der Erstellung des <xref:System.Windows.Forms.ListView>-Steuerelements verwendet:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Für dieses Beispiel ist erforderlich, dass Sie den Code zu einer <xref:System.Windows.Forms.Form>-Klasse hinzufügen und die Methode aufrufen, die im Beispiel aus dem Konstruktor oder einer anderen Methode der Form-Klasse erstellt wurde. Für das Beispiel ist ebenfalls erforderlich, dass die Bilder namens `MySmallImage1`, `MySmallImage2`, `MyLargeImage1` und `MyLargeImage2` sich im Stammverzeichnis von Laufwerk C befinden.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activation">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ItemActivation Activation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ItemActivation Activation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Activation" />
      <MemberSignature Language="VB.NET" Value="Public Property Activation As ItemActivation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ItemActivation Activation { System::Windows::Forms::ItemActivation get(); void set(System::Windows::Forms::ItemActivation value); };" />
      <MemberSignature Language="F#" Value="member this.Activation : System.Windows.Forms.ItemActivation with get, set" Usage="System.Windows.Forms.ListView.Activation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemActivation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ der Aktion ab, die der Benutzer zum Aktivieren eines Elements ausführen muss, oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.ItemActivation" />-Werte. Der Standardwert ist <see cref="F:System.Windows.Forms.ItemActivation.Standard" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch die <xref:System.Windows.Forms.ListView.Activation%2A>-Eigenschaft können Sie angeben, wie der Benutzer ein Element im <xref:System.Windows.Forms.ListView>-Steuerelement aktiviert. Das Aktivieren eines Elements in einem <xref:System.Windows.Forms.ListView>-Steuerelement unterscheidet sich vom Auswählen eines Elements. Wenn ein Element aktiviert wird, erfolgt üblicherweise eine Aktion in einem Ereignishandler für das <xref:System.Windows.Forms.ListView.ItemActivate>-Ereignis. Ein Element wird beispielsweise dadurch aktiviert, dass Sie eine Datei öffnen oder ein Dialogfeld angezeigt wird, durch das die Bearbeitung des Elements ermöglicht wird. Üblicherweise wird ein Element aktiviert, indem der Benutzer darauf doppelklickt. Wenn die <xref:System.Windows.Forms.ListView.Activation%2A>-Eigenschaft auf <xref:System.Windows.Forms.ItemActivation.OneClick> festgelegt ist, wird das Element durch einmaliges Klicken aktiviert. Das Festlegen der <xref:System.Windows.Forms.ListView.Activation%2A>-Eigenschaft auf <xref:System.Windows.Forms.ItemActivation.TwoClick> unterscheidet sich von einem normalen Doppelklick, da zwischen den beiden Mausklicks ein gewisser Zeitraum liegen kann.  
  
> [!NOTE]
>  Wenn die <xref:System.Windows.Forms.ListView.Activation%2A>-Eigenschaft auf <xref:System.Windows.Forms.ItemActivation.OneClick> oder <xref:System.Windows.Forms.ItemActivation.TwoClick> festgelegt ist, wird das Bearbeiten von Bezeichnungen unabhängig vom Wert der <xref:System.Windows.Forms.ListView.LabelEdit%2A>-Eigenschaft nicht zugelassen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der angegebene Wert ist kein <see cref="T:System.Windows.Forms.ItemActivation" />-Member.</exception>
        <altmember cref="T:System.Windows.Forms.ItemActivation" />
        <altmember cref="E:System.Windows.Forms.ListView.ItemActivate" />
      </Docs>
    </Member>
    <Member MemberName="AfterLabelEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.LabelEditEventHandler AfterLabelEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.LabelEditEventHandler AfterLabelEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.AfterLabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AfterLabelEdit As LabelEditEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::LabelEditEventHandler ^ AfterLabelEdit;" />
      <MemberSignature Language="F#" Value="member this.AfterLabelEdit : System.Windows.Forms.LabelEditEventHandler " Usage="member this.AfterLabelEdit : System.Windows.Forms.LabelEditEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LabelEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn die Bezeichnung eines Elements vom Benutzer bearbeitet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.ListView.AfterLabelEdit>-Ereignis tritt auf, wenn der Benutzer das Ändern des Texts eines Elements beendet. Die neue Zeichenfolge, die der Benutzer eingibt, für das Element auf das Ereignis übergeben wird, und der Ereignishandler kann die Änderung ablehnen. Wenn der Ereignishandler die Änderung ablehnt, wird der Text vorlag, bevor der Benutzer begonnen hat, bearbeiten das Element auf den Text zurückgesetzt.  
  
> [!NOTE]
>  Da die <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> Ereignis findet statt, bevor es sich bei der bezeichnungsbearbeitung abgeschlossen aufgerufen wird, die <xref:System.Windows.Forms.ListView.Sort%2A?displayProperty=nameWithType> -Methode in einen Handler für dieses Ereignis wird das Element mit dem ursprünglichen Wert sortiert.  
  
 In der Reihenfolge für die <xref:System.Windows.Forms.ListView.AfterLabelEdit> Ereignis ausgelöst wird, die <xref:System.Windows.Forms.ListView.LabelEdit%2A> Eigenschaft der <xref:System.Windows.Forms.ListView> Steuerelement muss festgelegt werden, um `true`.  
  
 Sie können angeben, erstellen einen Ereignishandler für die <xref:System.Windows.Forms.ListView.BeforeLabelEdit> Ereignis, um Aufgaben durchzuführen, bevor der Benutzer den Text eines Elements bearbeitet.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Windows.Forms.ListView.AfterLabelEdit> Ereignis, um eine Bezeichnung neu bearbeitete auf alphabetische Zeichen beschränken. Im Beispiel wird die <xref:System.Text.ASCIIEncoding> Klasse, um den ASCII-Zeichencode der einzelnen Zeichen, der die neue Bezeichnung abzurufen. Wenn das Zeichen zwischen der ASCII-Codes, die Zahlen darstellen fällt, kann nicht die neue Bezeichnung für das Element angewendet werden. Dieses Beispiel erfordert, nach der Erstellung einer <xref:System.Windows.Forms.ListView> -Steuerelement auf einem Formular und Elemente hinzugefügt. Das Beispiel erfordert auch, dass Sie eine Verbindung hergestellt haben die <xref:System.Windows.Forms.ListView.AfterLabelEdit> Ereignis an den Ereignishandler, der im Beispielcode definiert. Zum Verwenden der <xref:System.Text.ASCIIEncoding> -Klasse, die Datei muss enthalten der <xref:System.Text> Namespace.  
  
 [!code-cpp[ListView.AfterLabelEdit#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CPP/form1.cpp#1)]
 [!code-csharp[ListView.AfterLabelEdit#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CS/form1.cs#1)]
 [!code-vb[ListView.AfterLabelEdit#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.AfterLabelEdit/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
        <altmember cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.LabelEdit" />
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ListViewAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Property Alignment As ListViewAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewAlignment Alignment { System::Windows::Forms::ListViewAlignment get(); void set(System::Windows::Forms::ListViewAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.Alignment : System.Windows.Forms.ListViewAlignment with get, set" Usage="System.Windows.Forms.ListView.Alignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Ausrichtung von Elementen im Steuerelement ab oder legt diese fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.ListViewAlignment" />-Werte. Der Standardwert ist <see cref="F:System.Windows.Forms.ListViewAlignment.Top" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.Alignment%2A> Eigenschaft wirkt sich nur auf die Ausrichtung bei der <xref:System.Windows.Forms.ListView.View%2A> -Eigenschaftensatz auf <xref:System.Windows.Forms.View.LargeIcon> oder <xref:System.Windows.Forms.View.SmallIcon>.  
  
> [!NOTE]
>  Wird diese Eigenschaft auf <xref:System.Windows.Forms.ListView.View%2A> festgelegt, hat die <xref:System.Windows.Forms.View.List>-Eigenschaft keine Auswirkungen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der angegebene Wert ist keiner der <see cref="T:System.Windows.Forms.ListViewAlignment" />-Werte.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewAlignment" />
      </Docs>
    </Member>
    <Member MemberName="AllowColumnReorder">
      <MemberSignature Language="C#" Value="public bool AllowColumnReorder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowColumnReorder" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.AllowColumnReorder" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowColumnReorder As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowColumnReorder { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowColumnReorder : bool with get, set" Usage="System.Windows.Forms.ListView.AllowColumnReorder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Benutzer Spaltenköpfe ziehen können, um die Spalten im Steuerelement neu anzuordnen, oder legt diesen fest.</summary>
        <value>
          <see langword="false" />, wenn die Neuanordnung von Spalten mit Drag &amp;amp; Drop zulässig ist, andernfalls .<see langword="true" /> Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Einstellung der <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>-Eigenschaft hat nur Auswirkungen, wenn die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft auf <xref:System.Windows.Forms.View.Details> festgelegt ist. Sie können diese Eigenschaft verwenden, um Benutzern das Verschieben von Spalten im Steuerelement zur Laufzeit ermöglichen. Wenn die <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A> -Eigenschaftensatz auf `true`, Benutzer können die Spalten im Steuerelement das Element und seine Unterelemente in einer Weise anzeigen, die ihren in Ihrer Anwendung Anforderungen positionieren.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.ListView>-Steuerelement mit je drei <xref:System.Windows.Forms.ListViewItem>- und <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>-Objekten erstellt, die für jedes Element angegeben werden. Im Beispiel wird ebenfalls ein <xref:System.Windows.Forms.ColumnHeader>-Objekt erstellt, um die Unterelemente in der Detailansicht anzuzeigen. Ebenfalls werden zwei <xref:System.Windows.Forms.ImageList>-Objekte im Codebeispiel erstellt, die Bilder für die <xref:System.Windows.Forms.ListViewItem>-Objekte bereitstellen. Diese <xref:System.Windows.Forms.ImageList>-Objekte werden zu den <xref:System.Windows.Forms.ListView.LargeImageList%2A>- und <xref:System.Windows.Forms.ListView.SmallImageList%2A>-Eigenschaften hinzugefügt. Im Beispiel werden folgende Eigenschaft bei der Erstellung des <xref:System.Windows.Forms.ListView>-Steuerelements verwendet:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Für dieses Beispiel ist erforderlich, dass Sie den Code zu einer <xref:System.Windows.Forms.Form>-Klasse hinzufügen und die Methode aufrufen, die im Beispiel aus dem Konstruktor oder einer anderen Methode der Form-Klasse erstellt wurde. Für das Beispiel ist ebenfalls erforderlich, dass die Bilder namens `MySmallImage1`, `MySmallImage2`, `MyLargeImage1` und `MyLargeImage2` sich im Stammverzeichnis von Laufwerk C befinden.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ArrangeIcons">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ordnet Elemente im Steuerelement an, wenn sie als Symbole angezeigt werden.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ArrangeIcons">
      <MemberSignature Language="C#" Value="public void ArrangeIcons ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ArrangeIcons() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ArrangeIcons" />
      <MemberSignature Language="VB.NET" Value="Public Sub ArrangeIcons ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ArrangeIcons();" />
      <MemberSignature Language="F#" Value="member this.ArrangeIcons : unit -&gt; unit" Usage="listView.ArrangeIcons " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ordnet Elemente im Steuerelement auf Grundlage des Werts der <see cref="P:System.Windows.Forms.ListView.Alignment" />-Eigenschaft an, wenn diese als Symbole angezeigt werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> Methode ist nur nützlich, wenn die <xref:System.Windows.Forms.ListView.View%2A> -Eigenschaftensatz auf <xref:System.Windows.Forms.View.LargeIcon> oder <xref:System.Windows.Forms.View.SmallIcon>. Aufrufen von dieser Version von der <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> Methode ordnet die Elemente basierend auf den Wert des der <xref:System.Windows.Forms.ListView.Alignment%2A> Eigenschaft. Dazu führen, dass die Elemente, die ausgerichtet werden basierend auf der ein Wert, der von der unterscheidet die <xref:System.Windows.Forms.ListView.Alignment%2A> -Eigenschaft, die andere Version von der <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="ArrangeIcons">
      <MemberSignature Language="C#" Value="public void ArrangeIcons (System.Windows.Forms.ListViewAlignment value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ArrangeIcons(valuetype System.Windows.Forms.ListViewAlignment value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ArrangeIcons(System.Windows.Forms.ListViewAlignment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ArrangeIcons (value As ListViewAlignment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ArrangeIcons(System::Windows::Forms::ListViewAlignment value);" />
      <MemberSignature Language="F#" Value="member this.ArrangeIcons : System.Windows.Forms.ListViewAlignment -&gt; unit" Usage="listView.ArrangeIcons value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewAlignment" />
      </Parameters>
      <Docs>
        <param name="value">Einer der <see cref="T:System.Windows.Forms.ListViewAlignment" />-Werte.</param>
        <summary>Ordnet Elemente im Steuerelement mit einer angegebenen Einstellung für die Ausrichtung an, wenn sie als Symbole angezeigt werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> Methode ist nur nützlich, wenn die <xref:System.Windows.Forms.ListView.View%2A> -Eigenschaftensatz auf <xref:System.Windows.Forms.View.LargeIcon> oder <xref:System.Windows.Forms.View.SmallIcon>. Diese Version von der <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> Methode ordnet die Symbole in der <xref:System.Windows.Forms.ListView> basierend auf den <xref:System.Windows.Forms.ListViewAlignment> Wert in der `value` Parameter. Das Aufrufen dieser Methode ändert sich nicht auf den Wert des der <xref:System.Windows.Forms.ListView.Alignment%2A> -Eigenschaft des Steuerelements. Diese Methode wird verwendet, um das Anordnen von Symbolen für das Steuerelement mit einem anderen Wert als der der <xref:System.Windows.Forms.ListView.Alignment%2A> Eigenschaft. Dazu führen, dass die Elemente, die ausgerichtet werden basierend auf dem Wert der <xref:System.Windows.Forms.ListView.Alignment%2A> -Eigenschaft verwenden, die andere Version der der <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der im <paramref name="value" />-Parameter angegebene Wert ist kein Member der <see cref="T:System.Windows.Forms.ListViewAlignment" />-Enumeration.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewAlignment" />
        <altmember cref="P:System.Windows.Forms.ListView.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="AutoArrange">
      <MemberSignature Language="C#" Value="public bool AutoArrange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoArrange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.AutoArrange" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoArrange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoArrange { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoArrange : bool with get, set" Usage="System.Windows.Forms.ListView.AutoArrange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab, ob die Anordnung von Symbolen automatisch beibehalten wird, oder legt dieses fest.</summary>
        <value>
          <see langword="true" />, wenn die Anordnung von Symbolen automatisch beibehalten wird und die Symbole am Datenblatt ausgerichtet werden, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.AutoArrange%2A> Eigenschaft ordnet nur die Elemente in der <xref:System.Windows.Forms.ListView> steuern, wann die <xref:System.Windows.Forms.ListView.View%2A> -Eigenschaftensatz auf <xref:System.Windows.Forms.View.LargeIcon> oder <xref:System.Windows.Forms.View.SmallIcon>. So ändern Sie die Ausrichtung der Elemente in der <xref:System.Windows.Forms.ListView> steuern, verwenden Sie die <xref:System.Windows.Forms.ListView.Alignment%2A> Eigenschaft. Können Sie <xref:System.Windows.Forms.ListView.AutoArrange%2A> , stellen Sie sicher, dass alle Elemente in Ihre <xref:System.Windows.Forms.ListView> Steuerelement automatisch angeordnet werden, vermeiden Sie überlappende zur Laufzeit.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumn">
      <MemberSignature Language="C#" Value="public void AutoResizeColumn (int columnIndex, System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumn(int32 columnIndex, valuetype System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.AutoResizeColumn(System.Int32,System.Windows.Forms.ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumn (columnIndex As Integer, headerAutoResize As ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumn(int columnIndex, System::Windows::Forms::ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumn : int * System.Windows.Forms.ColumnHeaderAutoResizeStyle -&gt; unit" Usage="listView.AutoResizeColumn (columnIndex, headerAutoResize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="headerAutoResize" Type="System.Windows.Forms.ColumnHeaderAutoResizeStyle" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Der nullbasierte Index der Spalte, deren Breite geändert werden soll.</param>
        <param name="headerAutoResize">Einer der <see cref="T:System.Windows.Forms.ColumnHeaderAutoResizeStyle" />-Werte.</param>
        <summary>Ändert die Breite der angegebenen Spalte gemäß der Formatvorlage für die Größenänderung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Aufrufen dieser Methode ist nur wirksam, sobald die <xref:System.Windows.Forms.ListView> enthält <xref:System.Windows.Forms.Form> erstellt wurden, und die <xref:System.Windows.Forms.ListView> Spaltenüberschriften und Spalten mit Elementen aufgefüllt werden. Wenn neue Elemente hinzugefügt werden die <xref:System.Windows.Forms.ListView>, die Spalten werden nicht angepasst werden, es sei denn, <xref:System.Windows.Forms.ListView.AutoResizeColumn%2A> erneut aufgerufen wird.  
  
   
  
## Examples  
 Im folgenden Beispiel initialisiert einen <xref:System.Windows.Forms.ListView> in der Detailansicht und automatisch ändert die Größe der Spalten, die mithilfe der <xref:System.Windows.Forms.ListView.AutoResizeColumn%2A> Methode. Um dieses Beispiel auszuführen, fügen Sie diesen Code in einem Windows Form, und rufen die `InitializeResizingListView` Methode aus dem Konstruktor des Formulars oder <xref:System.Windows.Forms.Form.Load> -Ereignishandler.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="columnIndex" /> ist größer als 0 (null), wenn <see cref="P:System.Windows.Forms.ListView.Columns" /><see langword="null" /> ist.  
  
- oder -  
 <paramref name="columnIndex" /> ist kleiner als 0 (null) oder größer als die Anzahl der festgelegten Spalten.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="headerAutoResize" /> ist kein Member der <see cref="T:System.Windows.Forms.ColumnHeaderAutoResizeStyle" />-Enumeration.</exception>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumns">
      <MemberSignature Language="C#" Value="public void AutoResizeColumns (System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumns(valuetype System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.AutoResizeColumns(System.Windows.Forms.ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumns (headerAutoResize As ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumns(System::Windows::Forms::ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumns : System.Windows.Forms.ColumnHeaderAutoResizeStyle -&gt; unit" Usage="listView.AutoResizeColumns headerAutoResize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="headerAutoResize" Type="System.Windows.Forms.ColumnHeaderAutoResizeStyle" />
      </Parameters>
      <Docs>
        <param name="headerAutoResize">Einer der <see cref="T:System.Windows.Forms.ColumnHeaderAutoResizeStyle" />-Werte.</param>
        <summary>Ändert die Breite der Spalten gemäß der Formatvorlage für die Größenänderung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Aufrufen dieser Methode ist nur wirksam, sobald die <xref:System.Windows.Forms.ListView> enthält <xref:System.Windows.Forms.Form> erstellt wurden, und die <xref:System.Windows.Forms.ListView> Spaltenüberschriften und Spalten mit Elementen aufgefüllt werden. Wenn neue Elemente hinzugefügt werden die <xref:System.Windows.Forms.ListView>, die Spalten werden nicht angepasst werden, es sei denn, <xref:System.Windows.Forms.ListView.AutoResizeColumns%2A> erneut aufgerufen wird.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Initialisieren einer <xref:System.Windows.Forms.ListView> im Detail-Ansicht und die automatische Größenänderung der Spalten, die mit der <xref:System.Windows.Forms.ListView.AutoResizeColumns%2A> Methode. Um dieses Beispiel auszuführen, fügen Sie diesen Code in einem Windows Form, und rufen die `InitializeResizingListView2` Methode aus dem Konstruktor des Formulars oder <xref:System.Windows.Forms.Form.Load> -Ereignishandler.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#9)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Windows.Forms.ListView.AutoResizeColumn(System.Int32,System.Windows.Forms.ColumnHeaderAutoResizeStyle)" /> wird mit einem anderen Wert als <see cref="F:System.Windows.Forms.ColumnHeaderAutoResizeStyle.None" /> aufgerufen, wenn <see cref="P:System.Windows.Forms.ListView.View" /> nicht auf <see cref="F:System.Windows.Forms.View.Details" /> festgelegt ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ListView.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Hintergrundfarbe ab oder legt sie fest.</summary>
        <value>Die <see cref="T:System.Drawing.Color" /> des Hintergrunds.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.ListView.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.ListView.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen <see cref="T:System.Windows.Forms.ImageLayout" />-Wert ab oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.ImageLayout" />-Werte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft hat keine Auswirkungen auf das Layout des Hintergrundbilds des der <xref:System.Windows.Forms.ListView> -Steuerelement wird daher im Designer oder von IntelliSense nicht angezeigt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der angegebene Wert ist keiner der <see cref="T:System.Windows.Forms.ImageLayout" />-Werte.</exception>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich die <see cref="P:System.Windows.Forms.ListView.BackgroundImageLayout" />-Eigenschaft ändert.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageTiled">
      <MemberSignature Language="C#" Value="public bool BackgroundImageTiled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BackgroundImageTiled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BackgroundImageTiled" />
      <MemberSignature Language="VB.NET" Value="Public Property BackgroundImageTiled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BackgroundImageTiled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageTiled : bool with get, set" Usage="System.Windows.Forms.ListView.BackgroundImageTiled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Hintergrundbild von <see cref="T:System.Windows.Forms.ListView" /> aufgeteilt werden soll, oder legt diesen Wert fest.</summary>
        <value>
          <see langword="true" />, wenn das Hintergrundbild der <see cref="T:System.Windows.Forms.ListView" /> aufgeteilt werden soll, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.BackgroundImageTiled%2A> -Eigenschaft gibt `false` Wenn ein Bild nicht festgelegt ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeLabelEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.LabelEditEventHandler BeforeLabelEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.LabelEditEventHandler BeforeLabelEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeforeLabelEdit As LabelEditEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::LabelEditEventHandler ^ BeforeLabelEdit;" />
      <MemberSignature Language="F#" Value="member this.BeforeLabelEdit : System.Windows.Forms.LabelEditEventHandler " Usage="member this.BeforeLabelEdit : System.Windows.Forms.LabelEditEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LabelEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Benutzer mit dem Bearbeiten der Bezeichnung eines Elements beginnt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.ListView.BeforeLabelEdit>-Ereignis tritt auf, wenn der Benutzer das Ändern des Texts eines Elements beendet. Wenn der Ereignishandler das Ereignis abbricht, kann der Benutzer der Text nicht bearbeiten. Sie können dieses Ereignis verwenden, um zu verhindern, dass den Benutzer bestimmte Elemente im Bearbeiten der <xref:System.Windows.Forms.ListView> Steuerelement. Wenn die <xref:System.Windows.Forms.ListView.LabelEdit%2A> Eigenschaft der <xref:System.Windows.Forms.ListView> -Steuerelement so eingestellt ist, dass `false`, <xref:System.Windows.Forms.ListView.BeforeLabelEdit> Ereignis wird nicht ausgelöst; alle Benutzer Versuche elementbezeichnungen bearbeiten werden automatisch abgelehnt.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Behandlung der <xref:System.Windows.Forms.ListView.BeforeLabelEdit> -Ereignisses und die Verwendung der <xref:System.Windows.Forms.LabelEditEventArgs.Item%2A?displayProperty=nameWithType> und <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A?displayProperty=nameWithType> Eigenschaften. Um das Beispiel auszuführen, fügen Sie in den folgenden Code in ein Formular enthält ein <xref:System.Windows.Forms.ListView> Steuerelement mit dem Namen `ListView1` und mit mindestens drei Elementen gefüllt. Stellen Sie sicher, dass der Ereignishandler im Beispiel wird das Ereignis zugeordnet ist.  
  
 [!code-cpp[System.Windows.Forms.ListView3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView3/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
        <altmember cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.LabelEdit" />
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public void BeginUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.BeginUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginUpdate();" />
      <MemberSignature Language="F#" Value="member this.BeginUpdate : unit -&gt; unit" Usage="listView.BeginUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verhindert das Zeichnen des Steuerelements bis zum Aufruf der <see cref="M:System.Windows.Forms.ListView.EndUpdate" />-Methode.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die bevorzugte Methode zum Hinzufügen mehrerer Elemente zu einer <xref:System.Windows.Forms.ListView> ist die Verwendung der <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> -Methode der der <xref:System.Windows.Forms.ListView.ListViewItemCollection> (Zugriff erfolgt über die <xref:System.Windows.Forms.ListView.Items%2A> Eigenschaft der <xref:System.Windows.Forms.ListView>). Dies ermöglicht Ihnen, ein Array von Elementen der Liste in einem einzigen Vorgang hinzuzufügen. Allerdings, wenn Sie den hinzuzufügenden Elemente zu einem Zeitpunkt mithilfe der <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> -Methode der der <xref:System.Windows.Forms.ListView.ListViewItemCollection> -Klasse, die Sie verwenden die <xref:System.Windows.Forms.ListView.BeginUpdate%2A> Methode, um zu verhindern, dass das Steuerelement neu gezeichnet der <xref:System.Windows.Forms.ListView> jedes Mal, die ein Element hinzugefügt wird. Wenn Sie den Vorgang des Hinzufügens von Elementen zum Steuerelement abgeschlossen ist, rufen Sie die <xref:System.Windows.Forms.ListView.EndUpdate%2A> Methode zum Aktivieren der <xref:System.Windows.Forms.ListView> neu aufgebaut werden kann. Hinzufügen von Elementen kann diese Art von Zeichnen Flackern der <xref:System.Windows.Forms.ListView> Wenn viele Elemente für das Steuerelement hinzugefügt wird.  
  
 Wenn <xref:System.Windows.Forms.ListView.BeginUpdate%2A> mehr als einmal aufgerufen wird <xref:System.Windows.Forms.ListView.EndUpdate%2A> muss eine entsprechende Anzahl von Malen aufgerufen werden. Bis zum letzten Aufruf von <xref:System.Windows.Forms.ListView.EndUpdate%2A> der <xref:System.Windows.Forms.ListView> nicht neu aufgebaut. Außerdem mehrere Aufrufe <xref:System.Windows.Forms.ListView.BeginUpdate%2A> haben keine Auswirkungen.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Initialisieren einer <xref:System.Windows.Forms.ListView> Steuerelement Kontrollkästchen enthalten. Außerdem wird veranschaulicht, wie Sie mit der <xref:System.Windows.Forms.ListView.BeginUpdate%2A> und <xref:System.Windows.Forms.ListView.EndUpdate%2A> Methoden. Um dieses Beispiel auszuführen, fügen Sie in den folgenden Code in ein Formular enthält ein <xref:System.Windows.Forms.ListView> mit dem Namen `ListView1`. Rufen Sie die `InititalizeListView` Methode aus dem Konstruktor des Formulars oder `Load` Methode.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.EndUpdate" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Windows.Forms.BorderStyle with get, set" Usage="System.Windows.Forms.ListView.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Rahmenart des Steuerelements ab oder legt diese fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.BorderStyle" />-Werte. Der Standardwert ist <see cref="F:System.Windows.Forms.BorderStyle.Fixed3D" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Können Sie die <xref:System.Windows.Forms.ListView.BorderStyle%2A> zu die Rahmenart des zu ändernden Eigenschaft der <xref:System.Windows.Forms.ListView> -Steuerelement mit die stileinstellungen für Rahmen anderer Steuerelemente auf dem Formular übereinstimmt. Beispielsweise, wenn keines der anderen Steuerelemente im Formular einen Rahmen angezeigt wird, können Sie festlegen der <xref:System.Windows.Forms.ListView.BorderStyle%2A> Eigenschaft der <xref:System.Windows.Forms.ListView> die Steuerung an <xref:System.Windows.Forms.BorderStyle.None> entsprechend die anderen Steuerelementen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der angegebene Wert ist keiner der <see cref="T:System.Windows.Forms.BorderStyle" />-Werte.</exception>
        <altmember cref="T:System.Windows.Forms.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="CacheVirtualItems">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.CacheVirtualItemsEventHandler CacheVirtualItems;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.CacheVirtualItemsEventHandler CacheVirtualItems" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.CacheVirtualItems" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CacheVirtualItems As CacheVirtualItemsEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::CacheVirtualItemsEventHandler ^ CacheVirtualItems;" />
      <MemberSignature Language="F#" Value="member this.CacheVirtualItems : System.Windows.Forms.CacheVirtualItemsEventHandler " Usage="member this.CacheVirtualItems : System.Windows.Forms.CacheVirtualItemsEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CacheVirtualItemsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich die Inhalte des Anzeigebereichs für eine <see cref="T:System.Windows.Forms.ListView" /> im virtuellen Modus geändert haben und die <see cref="T:System.Windows.Forms.ListView" /> bestimmt, dass ein neuer Bereich von Elementen erforderlich ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt nur auf, wenn <xref:System.Windows.Forms.ListView.VirtualMode%2A> ist `true`. Ermöglicht die Behandlung dieses Ereignisses das <xref:System.Windows.Forms.ListView> Elementinformationen aktualisieren, im Cache, damit diese leicht verfügbar sind. Dies kann die Leistung für umfangreiche Listen oder Listen, deren Elemente berechnen teuer sind, verbessern.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung des -Attributs veranschaulicht. Im Beispiel überprüft der Ereignishandler, um sicherzustellen, dass eine Aktualisierung des Cache wirklich notwendig ist, und erstellt dann den Cache neu. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Windows.Forms.ListView.VirtualMode%2A> Eigenschaft.  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#3)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxes">
      <MemberSignature Language="C#" Value="public bool CheckBoxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckBoxes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckBoxes" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckBoxes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckBoxes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckBoxes : bool with get, set" Usage="System.Windows.Forms.ListView.CheckBoxes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob neben jedem Element im Steuerelement ein Kontrollkästchen angezeigt wird, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn neben jedem Element im <see cref="T:System.Windows.Forms.ListView" />-Steuerelement ein Kontrollkästchen angezeigt wird, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.CheckBoxes%2A> Eigenschaft können Sie das Kontrollkästchen neben jedem Element in der Liste angezeigt. Dadurch kann die Anwendung aus, um eine Liste von Elementen anzuzeigen (und die Unterelemente darstellen, wenn die <xref:System.Windows.Forms.ListView.View%2A> -Eigenschaftensatz auf `View.Details`), dass der Benutzer auswählen kann, indem Sie auf das Kontrollkästchen. Die <xref:System.Windows.Forms.ListView.CheckBoxes%2A> Eigenschaft bietet eine Möglichkeit zur Auswahl mehrerer Elemente in der <xref:System.Windows.Forms.ListView> Steuerelement ohne die STRG-Taste. Abhängig von Ihrer Anwendung kann die Verwendung von Kontrollkästchen verweisen, statt den Standard Auswählen mehrerer Auswahlmethode für den Benutzer einfacher sein. Auch wenn die <xref:System.Windows.Forms.ListView.MultiSelect%2A> Eigenschaft der <xref:System.Windows.Forms.ListView> -Steuerelement so eingestellt ist, dass `false`, können Sie weiterhin anzeigen Kontrollkästchen und mehrere Auswahlfunktionen für den Benutzer bereitstellen. Dieses Feature kann nützlich sein, wenn Sie nicht mehrere Elemente ausgewählt werden soll noch immer noch dem Benutzer ermöglichen, wählen Sie mehrere Elemente aus der Liste einen Vorgang in Ihrer Anwendung ausführen möchten.  
  
 Um zu bestimmen, wann ein Element aktiviert wurde, erstellen Sie einen Ereignishandler für die <xref:System.Windows.Forms.ListView.ItemCheck> Ereignis. Um alle Elemente abzurufen, die eingecheckt werden die <xref:System.Windows.Forms.ListView>, verwenden Sie die <xref:System.Windows.Forms.ListView.CheckedItems%2A> Eigenschaft, die Zugriff auf die <xref:System.Windows.Forms.ListView.CheckedIndexCollection> für das Steuerelement. Um die Indizes aller Elemente abzurufen, die eingecheckt werden die <xref:System.Windows.Forms.ListView>, verwenden Sie die <xref:System.Windows.Forms.ListView.CheckedIndices%2A> Eigenschaft.  
  
 Wenn ein <xref:System.Windows.Forms.ImageList> angegeben ist, der <xref:System.Windows.Forms.ListView.StateImageList%2A> -Eigenschaft, die Bilder an der Indexposition 0 und 1 in der <xref:System.Windows.Forms.ImageList> werden angezeigt, statt das Kontrollkästchen. Das Bild an der Indexposition 0 wird angezeigt, statt das Kontrollkästchen deaktiviert, und das Bild an der Indexposition 1 anstelle der aktivierten Kontrollkästchens angezeigt wird.  
  
> [!NOTE]
>  Wenn Sie diese Eigenschaft festlegen, um `true`, <xref:System.Windows.Forms.ListView.ItemCheck> Ereignis auftritt.  
>   
>  Kontrollkästchen werden nicht angezeigt wird, wenn die <xref:System.Windows.Forms.ListView.View%2A> -Eigenschaftensatz auf <xref:System.Windows.Forms.View.Tile>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.ListView>-Steuerelement mit je drei <xref:System.Windows.Forms.ListViewItem>- und <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>-Objekten erstellt, die für jedes Element angegeben werden. Im Beispiel wird ebenfalls ein <xref:System.Windows.Forms.ColumnHeader>-Objekt erstellt, um die Unterelemente in der Detailansicht anzuzeigen. Ebenfalls werden zwei <xref:System.Windows.Forms.ImageList>-Objekte im Codebeispiel erstellt, die Bilder für die <xref:System.Windows.Forms.ListViewItem>-Objekte bereitstellen. Diese <xref:System.Windows.Forms.ImageList>-Objekte werden zu den <xref:System.Windows.Forms.ListView.LargeImageList%2A>- und <xref:System.Windows.Forms.ListView.SmallImageList%2A>-Eigenschaften hinzugefügt. Im Beispiel werden folgende Eigenschaft bei der Erstellung des <xref:System.Windows.Forms.ListView>-Steuerelements verwendet:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Für dieses Beispiel ist erforderlich, dass Sie den Code zu einer <xref:System.Windows.Forms.Form>-Klasse hinzufügen und die Methode aufrufen, die im Beispiel aus dem Konstruktor oder einer anderen Methode der Form-Klasse erstellt wurde. Für das Beispiel ist ebenfalls erforderlich, dass die Bilder namens `MySmallImage1`, `MySmallImage2`, `MyLargeImage1` und `MyLargeImage2` sich im Stammverzeichnis von Laufwerk C befinden.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.StateImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="P:System.Windows.Forms.ListView.MultiSelect" />
      </Docs>
    </Member>
    <Member MemberName="CheckedIndices">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.CheckedIndexCollection CheckedIndices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/CheckedIndexCollection CheckedIndices" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedIndices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckedIndices As ListView.CheckedIndexCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::CheckedIndexCollection ^ CheckedIndices { System::Windows::Forms::ListView::CheckedIndexCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckedIndices : System.Windows.Forms.ListView.CheckedIndexCollection" Usage="System.Windows.Forms.ListView.CheckedIndices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+CheckedIndexCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Indizes der gegenwärtig im Steuerelement aktivierten Elemente ab.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" />, die die Indizes der gegenwärtig aktivierten Elemente enthält. Wenn gegenwärtig keine Elemente aktiviert sind, wird eine leere <see cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" /> zurückgegeben.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist nur nützlich, wenn die <xref:System.Windows.Forms.ListView.CheckBoxes%2A> Eigenschaft der <xref:System.Windows.Forms.ListView> -Steuerelement so eingestellt ist, dass `true`. Die <xref:System.Windows.Forms.ListView.CheckedIndices%2A> -Eigenschaft gibt eine Auflistung, die die Indexpositionen in enthält die <xref:System.Windows.Forms.ListView.ListViewItemCollection> aller Elemente, die im Steuerelement geprüft werden. Weitere Informationen zum Bearbeiten der Elemente in der Auflistung, finden Sie unter <xref:System.Windows.Forms.ListView.CheckedIndexCollection>.  
  
 Wenn eine Auflistung der Elemente abzurufen, die eingecheckt werden sollen die <xref:System.Windows.Forms.ListView> -Steuerelement, statt die Indexpositionen der Elemente, die überprüft wurden, verwenden die <xref:System.Windows.Forms.ListView.CheckedItems%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckedItems" />
      </Docs>
    </Member>
    <Member MemberName="CheckedItems">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.CheckedListViewItemCollection CheckedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/CheckedListViewItemCollection CheckedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckedItems As ListView.CheckedListViewItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::CheckedListViewItemCollection ^ CheckedItems { System::Windows::Forms::ListView::CheckedListViewItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckedItems : System.Windows.Forms.ListView.CheckedListViewItemCollection" Usage="System.Windows.Forms.ListView.CheckedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+CheckedListViewItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die gegenwärtig im Steuerelement aktivierten Elemente ab.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" />, die die gegenwärtig aktivierten Elemente enthält. Wenn gegenwärtig keine Elemente aktiviert sind, wird eine leere <see cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" /> zurückgegeben.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist nur nützlich, wenn die <xref:System.Windows.Forms.ListView.CheckBoxes%2A> Eigenschaft der <xref:System.Windows.Forms.ListView> -Steuerelement so eingestellt ist, dass `true`. Die <xref:System.Windows.Forms.ListView.CheckedItems%2A> -Eigenschaft gibt eine Auflistung, die alle Elemente enthält, die im Steuerelement geprüft werden. Weitere Informationen zum Bearbeiten der Elemente in der Auflistung, finden Sie unter <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection>.  
  
 Wenn Sie eine Auflistung von Indexpositionen in abrufen möchten die <xref:System.Windows.Forms.ListView.ListViewItemCollection> der Elemente, die eingecheckt werden die <xref:System.Windows.Forms.ListView> -Steuerelement, statt die Elemente, die überprüft wurden, verwenden die <xref:System.Windows.Forms.ListView.CheckedIndices%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, einen aktivierten <xref:System.Windows.Forms.ListView> , behandelt der <xref:System.Windows.Forms.ListView.ItemChecked> Ereignis. Im Beispiel wird die <xref:System.Windows.Forms.ListView.CheckedItems%2A> Eigenschaft, um einen neuen Preis jedes Mal gibt, die ein Element aktiviert oder deaktiviert ist. Um dieses Beispiel auszuführen, fügen Sie in den folgenden Code in ein Formular enthält ein <xref:System.Windows.Forms.ListView> mit dem Namen `ListView1` und <xref:System.Windows.Forms.TextBox> mit dem Namen `Textbox1`. Rufen Sie die `InititalizeListView` Methode aus dem Konstruktor des Formulars oder `Load` Methode.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#3)]
[!code-csharp[System.Windows.Forms.ListView2#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#3)]
[!code-vb[System.Windows.Forms.ListView2#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckedIndices" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="listView.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt alle Elemente und Spalten aus dem Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Methode verwenden, entfernen Sie alle Elemente und Spalten aus der <xref:System.Windows.Forms.ListView> Steuerelement ohne die einzelnen anrufen `Clear` Methoden aus der <xref:System.Windows.Forms.ListView.ColumnHeaderCollection> und <xref:System.Windows.Forms.ListView.ListViewItemCollection> Klassen.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.ListView.Clear%2A> Methode löscht nicht <xref:System.Windows.Forms.ListView.Groups%2A> für die <xref:System.Windows.Forms.ListView> Steuerelement. Zum Löschen <xref:System.Windows.Forms.ListView.Groups%2A> Aufrufen <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung von <xref:System.Windows.Forms.ListView.Clear%2A> und <xref:System.Windows.Forms.ListViewItem.Selected%2A?displayProperty=nameWithType> Member. Um dieses Beispiel auszuführen, fügen Sie in den folgenden Code in ein Formular enthält ein <xref:System.Windows.Forms.ListView> mit dem Namen `ListView1` sowie eine Schaltfläche befindet sich im unteren Bereich des Formulars, mit dem Namen `Button1`. Rufen Sie die `InitializeListView` Methode aus dem Konstruktor des Formulars oder `Load` Methode.  
  
 [!code-cpp[System.Windows.Forms.ListView4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView4/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView4/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView4/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="ColumnClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnClickEventHandler ColumnClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnClickEventHandler ColumnClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnClick As ColumnClickEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnClickEventHandler ^ ColumnClick;" />
      <MemberSignature Language="F#" Value="member this.ColumnClick : System.Windows.Forms.ColumnClickEventHandler " Usage="member this.ColumnClick : System.Windows.Forms.ColumnClickEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn Benutzer im Listenansicht-Steuerelement auf einen Spaltenkopf klicken.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.ColumnClick> Ereignis tritt auf, wenn der Benutzer, einen der angegebenen Spalte in der Detailansicht der Elemente in klickt einer <xref:System.Windows.Forms.ListView> Steuerelement (wenn die <xref:System.Windows.Forms.ListView.View%2A> -Eigenschaftensatz auf <xref:System.Windows.Forms.View.Details>). Die <xref:System.Windows.Forms.ListView.ColumnClick> Ereignis erfolgt in der Regel zum Sortieren der Elemente in der <xref:System.Windows.Forms.ListView> anhand der Spalte sortiert werden, auf die geklickt wurde.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt ein Formular, enthält eine <xref:System.Windows.Forms.ListView> Steuerelement, das Elemente aus, wenn eine Spalte in sortiert die <xref:System.Windows.Forms.ListView> -Steuerelement geklickt wird. Im Beispiel definiert eine Klasse namens `ListViewItemComparer` , implementiert die <xref:System.Collections.IComparer?displayProperty=nameWithType> -Schnittstelle, die führt die <xref:System.Windows.Forms.ListViewItem> Vergleich. Das Beispiel erstellt eine Instanz des `ListViewItemComparer` und verwendet sie zum Festlegen der <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> Eigenschaft der <xref:System.Windows.Forms.ListView> Steuerelement. Die <xref:System.Windows.Forms.ListView.Sort%2A> -Methodenaufruf in der <xref:System.Windows.Forms.ListView.ColumnClick> -Ereignishandler verwendet, die in definierten Methoden `ListViewItemComparer` , erfolgt die Sortierung der Elemente, die auf Grundlage der Spalte, auf die geklickt wird.  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ColumnReordered">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnReorderedEventHandler ColumnReordered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnReorderedEventHandler ColumnReordered" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnReordered" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnReordered As ColumnReorderedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnReorderedEventHandler ^ ColumnReordered;" />
      <MemberSignature Language="F#" Value="member this.ColumnReordered : System.Windows.Forms.ColumnReorderedEventHandler " Usage="member this.ColumnReordered : System.Windows.Forms.ColumnReorderedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnReorderedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn die Reihenfolge der Spaltenheader geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.ColumnReordered> Ereignis ist ein abbrechbares Ereignis und kann abgebrochen werden, indem das Ereignis behandeln und die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft `true`. Jedoch, wenn das Ereignis abgebrochen wird, die <xref:System.Windows.Forms.ColumnReorderedEventArgs.NewDisplayIndex%2A> von der <xref:System.Windows.Forms.ColumnReorderedEventArgs> ändert sich nicht um die <xref:System.Windows.Forms.ColumnReorderedEventArgs.OldDisplayIndex%2A> Wert.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung des -Attributs veranschaulicht. Im Beispiel meldet sich ein Ereignishandler für das Vorhandensein der <xref:System.Windows.Forms.ListView.ColumnReordered> Ereignis. In diesem Bericht können Sie entnehmen, wann das Ereignis tritt auf, können Sie beim Debuggen unterstützen. Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, beachten Sie, und Ersetzen Sie dabei <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, eine Instanz des Typs enthält <xref:System.Windows.Forms.ListView> mit dem Namen `ListView1`. Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.ListView.ColumnReordered> Ereignis.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#467](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#467)]
 [!code-vb[System.Windows.Forms.EventExamples#467](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#467)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.ColumnHeaderCollection Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/ColumnHeaderCollection Columns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As ListView.ColumnHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::ColumnHeaderCollection ^ Columns { System::Windows::Forms::ListView::ColumnHeaderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Columns : System.Windows.Forms.ListView.ColumnHeaderCollection" Usage="System.Windows.Forms.ListView.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ColumnHeaderCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ColumnHeaderCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+ColumnHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung aller Spaltenköpfe ab, die im Steuerelement angezeigt werden.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />, die die Spaltenheader darstellt, die angezeigt werden, wenn die <see cref="P:System.Windows.Forms.ListView.View" />-Eigenschaft auf <see cref="F:System.Windows.Forms.View.Details" /> festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.Columns%2A> Eigenschaft gibt eine Auflistung mit den <xref:System.Windows.Forms.ColumnHeader> Objekte, die in angezeigt werden, die <xref:System.Windows.Forms.ListView> Steuerelement. <xref:System.Windows.Forms.ColumnHeader> -Objekte definieren die Spalten, die in angezeigt werden, die <xref:System.Windows.Forms.ListView> steuern, wann die <xref:System.Windows.Forms.ListView.View%2A> -Eigenschaftensatz auf <xref:System.Windows.Forms.View.Details>. Jede Spalte wird verwendet, um das Anzeigen von Informationen zu den Unterelementen für jedes Element in der <xref:System.Windows.Forms.ListView>. Weitere Informationen zum Bearbeiten der Elemente in der Auflistung, finden Sie unter <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
> [!NOTE]
>  Wenn Ihre <xref:System.Windows.Forms.ListView> Steuerelement enthält keine Spaltenheader angegeben, und legen Sie Sie der <xref:System.Windows.Forms.ListView.View%2A> Eigenschaft <xref:System.Windows.Forms.View.Details>, <xref:System.Windows.Forms.ListView> Steuerelement keine Elemente angezeigt werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.ListView>-Steuerelement mit je drei <xref:System.Windows.Forms.ListViewItem>- und <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>-Objekten erstellt, die für jedes Element angegeben werden. Im Beispiel wird ebenfalls ein <xref:System.Windows.Forms.ColumnHeader>-Objekt erstellt, um die Unterelemente in der Detailansicht anzuzeigen. Ebenfalls werden zwei <xref:System.Windows.Forms.ImageList>-Objekte im Codebeispiel erstellt, die Bilder für die <xref:System.Windows.Forms.ListViewItem>-Objekte bereitstellen. Diese <xref:System.Windows.Forms.ImageList>-Objekte werden zu den <xref:System.Windows.Forms.ListView.LargeImageList%2A>- und <xref:System.Windows.Forms.ListView.SmallImageList%2A>-Eigenschaften hinzugefügt. Im Beispiel werden folgende Eigenschaft bei der Erstellung des <xref:System.Windows.Forms.ListView>-Steuerelements verwendet:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Für dieses Beispiel ist erforderlich, dass Sie den Code zu einer <xref:System.Windows.Forms.Form>-Klasse hinzufügen und die Methode aufrufen, die im Beispiel aus dem Konstruktor oder einer anderen Methode der Form-Klasse erstellt wurde. Für das Beispiel ist ebenfalls erforderlich, dass die Bilder namens `MySmallImage1`, `MySmallImage2`, `MyLargeImage1` und `MyLargeImage2` sich im Stammverzeichnis von Laufwerk C befinden.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
      </Docs>
    </Member>
    <Member MemberName="ColumnWidthChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnWidthChangedEventHandler ColumnWidthChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnWidthChangedEventHandler ColumnWidthChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnWidthChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnWidthChanged As ColumnWidthChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnWidthChangedEventHandler ^ ColumnWidthChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnWidthChanged : System.Windows.Forms.ColumnWidthChangedEventHandler " Usage="member this.ColumnWidthChanged : System.Windows.Forms.ColumnWidthChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnWidthChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, nachdem die Breite einer Spalte erfolgreich geändert wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis wird nicht auftreten, wenn das Ändern der Spaltenbreite in abgebrochen wird die <xref:System.Windows.Forms.ListView.ColumnWidthChanging> Ereignis  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung des -Attributs veranschaulicht. Im Beispiel meldet sich ein Ereignishandler für das Vorhandensein der <xref:System.Windows.Forms.ListView.ColumnWidthChanged> Ereignis. In diesem Bericht können Sie entnehmen, wann das Ereignis tritt auf, können Sie beim Debuggen unterstützen. Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, beachten Sie, und Ersetzen Sie dabei <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, eine Instanz des Typs enthält <xref:System.Windows.Forms.ListView> mit dem Namen `ListView1`. Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.ListView.ColumnWidthChanged> Ereignis.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#468](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#468)]
 [!code-vb[System.Windows.Forms.EventExamples#468](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#468)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnWidthChanging">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnWidthChangingEventHandler ColumnWidthChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnWidthChangingEventHandler ColumnWidthChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnWidthChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnWidthChanging As ColumnWidthChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnWidthChangingEventHandler ^ ColumnWidthChanging;" />
      <MemberSignature Language="F#" Value="member this.ColumnWidthChanging : System.Windows.Forms.ColumnWidthChangingEventHandler " Usage="member this.ColumnWidthChanging : System.Windows.Forms.ColumnWidthChangingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnWidthChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich die Breite einer Spalte ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit diesem Ereignis können Sie überprüfen, ob die neue Spaltenbreite mit der <xref:System.Windows.Forms.ColumnWidthChangingEventArgs.NewWidth%2A?displayProperty=nameWithType> -Eigenschaft, und "Abbrechen", das Ereignis bei der Auswahl durch Festlegen der <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft `true`.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Behandlung der <xref:System.Windows.Forms.ListView.ColumnWidthChanging> Ereignis. Außerdem veranschaulicht Sie die <xref:System.Windows.Forms.ColumnWidthChangingEventArgs.NewWidth%2A?displayProperty=nameWithType> und <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Member. Um dieses Beispiel auszuführen, fügen Sie den Code in eine Windows Form aus. Rufen Sie `InitializeListView1` aus den Konstruktor des Formulars oder <xref:System.Windows.Forms.Form.Load> -Ereignishandler.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="listView.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine neue Instanz des Zugriffsobjekts für das <see cref="T:System.Windows.Forms.ListView" />-Steuerelement.</summary>
        <returns>Der <see cref="T:System.Windows.Forms.Control.ControlAccessibleObject" /> für dieses <see cref="T:System.Windows.Forms.ListView" />-Steuerelement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberSignature Language="F#" Value="override this.CreateHandle : unit -&gt; unit" Usage="listView.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein Handle für das Steuerelement.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.ListView.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft ist für diese Klasse nicht relevant.</summary>
        <value>
          <see langword="null" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist für diese Klasse nicht relevant.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.ListView.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Standardgröße des Steuerelements ab.</summary>
        <value>Die Standard-<see cref="T:System.Drawing.Size" /> des Steuerelements.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="listView.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
        <summary>Gibt die von <see cref="T:System.Windows.Forms.ListView" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rufen Sie die <xref:System.Windows.Forms.ListView.Dispose%2A> Methode, wenn die Komponente nicht mehr benötigt wird. Diese Methode entfernt die Komponente von seinem Container, (wenn die Komponente einen Standort enthält) und die Dispose-Ereignis auslöst.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffered">
      <MemberSignature Language="C#" Value="protected override bool DoubleBuffered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleBuffered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.DoubleBuffered" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DoubleBuffered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DoubleBuffered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoubleBuffered : bool with get, set" Usage="System.Windows.Forms.ListView.DoubleBuffered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Steuerelement seine Oberfläche unter Verwendung eines sekundären Puffers neu zeichnen soll, um Flackern zu verringern oder zu vermeiden, oder legt diesen Wert fest.</summary>
        <value>
          <see langword="true" />, wenn die Oberfläche des Steuerelements mit Doppelpufferung gezeichnet werden soll, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawColumnHeader">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawListViewColumnHeaderEventHandler DrawColumnHeader;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawListViewColumnHeaderEventHandler DrawColumnHeader" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.DrawColumnHeader" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawColumnHeader As DrawListViewColumnHeaderEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawListViewColumnHeaderEventHandler ^ DrawColumnHeader;" />
      <MemberSignature Language="F#" Value="member this.DrawColumnHeader : System.Windows.Forms.DrawListViewColumnHeaderEventHandler " Usage="member this.DrawColumnHeader : System.Windows.Forms.DrawListViewColumnHeaderEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawListViewColumnHeaderEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn die Detailansicht einer <see cref="T:System.Windows.Forms.ListView" /> gezeichnet wird und die <see cref="P:System.Windows.Forms.ListView.OwnerDraw" />-Eigenschaft auf <see langword="true" /> festgelegt ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit diesem Ereignis können Sie die Gestaltung einer <xref:System.Windows.Forms.ListView> -Steuerelement mit Ownerdrawing. Wenn der Wert auf <xref:System.Windows.Forms.ListView.OwnerDraw%2A> festgelegt ist, wird die `true`-Eigenschaft auf <xref:System.Windows.Forms.ListView.View%2A> und die <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>-Eigenschaft auf  festgelegt. Dieses Ereignis kann für jede Spaltenüberschrift im Steuerelement auftreten. Weitere Informationen zu Ownerdrawing, finden Sie unter den <xref:System.Windows.Forms.ListView.OwnerDraw%2A> Referenzthema-Eigenschaft.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel stellt eine Implementierung von einem <xref:System.Windows.Forms.ListView.DrawColumnHeader> -Ereignishandler. Das vollständige Beispiel, einschließlich die Implementierung der <xref:System.Windows.Forms.ListView.DrawSubItem> -Ereignishandler finden Sie unter der <xref:System.Windows.Forms.ListView.OwnerDraw%2A> Referenzthema.  
  
 [!code-csharp[ListViewOwnerDraw#5](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#5)]
 [!code-vb[ListViewOwnerDraw#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="T:System.Windows.Forms.DrawListViewColumnHeaderEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="DrawItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawListViewItemEventHandler DrawItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawListViewItemEventHandler DrawItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.DrawItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawItem As DrawListViewItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawListViewItemEventHandler ^ DrawItem;" />
      <MemberSignature Language="F#" Value="member this.DrawItem : System.Windows.Forms.DrawListViewItemEventHandler " Usage="member this.DrawItem : System.Windows.Forms.DrawListViewItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawListViewItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn eine <see cref="T:System.Windows.Forms.ListView" /> gezeichnet wird und die <see cref="P:System.Windows.Forms.ListView.OwnerDraw" />-Eigenschaft auf <see langword="true" /> festgelegt ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit diesem Ereignis können Sie die Gestaltung einer <xref:System.Windows.Forms.ListView> -Steuerelement mit Ownerdrawing. Es wird ausgelöst, nur, wenn die <xref:System.Windows.Forms.ListView.OwnerDraw%2A> -Eigenschaftensatz auf `true`. Weitere Informationen zu Ownerdrawing, finden Sie unter den <xref:System.Windows.Forms.ListView.OwnerDraw%2A> Referenzthema-Eigenschaft.  
  
 Die <xref:System.Windows.Forms.ListView.DrawItem> Ereignis kann auftreten, für die einzelnen <xref:System.Windows.Forms.ListView> Element. Wenn die <xref:System.Windows.Forms.ListView.View%2A> -Eigenschaftensatz auf <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>, <xref:System.Windows.Forms.ListView.DrawSubItem> und <xref:System.Windows.Forms.ListView.DrawColumnHeader> auch Ereignisse. Sie können in diesem Fall behandeln die <xref:System.Windows.Forms.ListView.DrawItem> Ereignis, um die allgemeinen Elemente aller Elemente, z. B. Hintergrund zeichnen und behandeln die <xref:System.Windows.Forms.ListView.DrawSubItem> -Ereignis zum Zeichnen der Elemente für einzelne Unterelemente, z. B. Textwerte. Sie können auch alle Elemente zeichnen, der <xref:System.Windows.Forms.ListView> steuern mit einem der beiden Ereignisse, obwohl dies weniger praktisch sein kann. Um Spaltenüberschriften in der Detailansicht zu zeichnen, müssen Sie behandeln die <xref:System.Windows.Forms.ListView.DrawColumnHeader> Ereignis.  
  
> [!NOTE]
>  Aufgrund eines Fehlers in der zugrunde liegende Win32-Steuerelements das <xref:System.Windows.Forms.ListView.DrawItem> Ereignis tritt auf, ohne begleitende <xref:System.Windows.Forms.ListView.DrawSubItem> Ereignisse einmal pro Zeile in der Detailansicht, wenn der Mauszeiger über der Zeile bewegt wird, sodass nichts gezeichnet, einem <xref:System.Windows.Forms.ListView.DrawSubItem> -Ereignishandler werden durch einen benutzerdefinierten Hintergrund gezeichnet gezeichnet eine <xref:System.Windows.Forms.ListView.DrawItem> -Ereignishandler. Siehe das Beispiel in der <xref:System.Windows.Forms.ListView.OwnerDraw%2A> Referenzthema für dieses Problem zu umgehen, die jede Zeile wird ungültig, wenn das zusätzliche Ereignis eintritt. Eine alternative problemumgehung besteht darin, alle Ihre benutzerdefinierten Code zum Zeichnen einer <xref:System.Windows.Forms.ListView.DrawSubItem> -Ereignishandler und Paint-Hintergrund für das gesamte Element (einschließlich der Unterelemente) nur, wenn die <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.ColumnIndex%2A?displayProperty=nameWithType> Wert ist 0.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel stellt eine Implementierung von einem <xref:System.Windows.Forms.ListView.DrawItem> -Ereignishandler. Das vollständige Beispiel finden Sie unter den <xref:System.Windows.Forms.ListView.OwnerDraw%2A> Referenzthema.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="T:System.Windows.Forms.DrawListViewItemEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawColumnHeader" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="DrawSubItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawListViewSubItemEventHandler DrawSubItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawListViewSubItemEventHandler DrawSubItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.DrawSubItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawSubItem As DrawListViewSubItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawListViewSubItemEventHandler ^ DrawSubItem;" />
      <MemberSignature Language="F#" Value="member this.DrawSubItem : System.Windows.Forms.DrawListViewSubItemEventHandler " Usage="member this.DrawSubItem : System.Windows.Forms.DrawListViewSubItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawListViewSubItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn die Detailansicht einer <see cref="T:System.Windows.Forms.ListView" /> gezeichnet wird und die <see cref="P:System.Windows.Forms.ListView.OwnerDraw" />-Eigenschaft auf <see langword="true" /> festgelegt ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit diesem Ereignis können Sie die Gestaltung einer <xref:System.Windows.Forms.ListView> -Steuerelement mit Ownerdrawing. Wenn der Wert auf <xref:System.Windows.Forms.ListView.OwnerDraw%2A> festgelegt ist, wird die `true`-Eigenschaft auf <xref:System.Windows.Forms.ListView.View%2A> und die <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>-Eigenschaft auf  festgelegt. Weitere Informationen zu Ownerdrawing, finden Sie unter den <xref:System.Windows.Forms.ListView.OwnerDraw%2A> Referenzthema-Eigenschaft.  
  
> [!NOTE]
>  Informationen zu den Unterelementen, die in der Regel in der Ansicht "Nebeneinander" angezeigt wird, als auch die Details anzuzeigen, aber in der Ansicht "Nebeneinander", es in einem Handler für gezeichnet werden muss die <xref:System.Windows.Forms.ListView.DrawItem> Ereignis.  
  
 Die <xref:System.Windows.Forms.ListView.DrawSubItem> Ereignis kann auftreten, für die einzelnen <xref:System.Windows.Forms.ListView> Unterelements. Können Sie behandeln die <xref:System.Windows.Forms.ListView.DrawItem> -Ereignis zum Zeichnen der Elemente, die alle Unterelemente, z. B. den Hintergrund und behandeln die <xref:System.Windows.Forms.ListView.DrawSubItem> -Ereignis zum Zeichnen der Elemente für einzelne Unterelemente, z. B. Textwerte. Sie können auch alle Elemente zeichnen, der <xref:System.Windows.Forms.ListView> steuern mit einem der beiden Ereignisse, obwohl dies weniger praktisch sein kann. Um Spaltenüberschriften in der Detailansicht zu zeichnen, müssen Sie behandeln die <xref:System.Windows.Forms.ListView.DrawColumnHeader> Ereignis.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.ListView.DrawSubItem> Ereignis erfolgt nicht für alle dazugehörigen untergeordneten Elemente für die keine <xref:System.Windows.Forms.ColumnHeader> Objekt wurde hinzugefügt die <xref:System.Windows.Forms.ListView.Columns%2A> Auflistung. Beachten Sie auch, dass das erste Unterelement der einzelnen <xref:System.Windows.Forms.ListViewItem> -Objekt stellt das übergeordnete Element selbst und wird in der ersten Spalte angezeigt.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel stellt eine Implementierung von einem <xref:System.Windows.Forms.ListView.DrawSubItem> -Ereignishandler. Das vollständige Beispiel finden Sie unter den <xref:System.Windows.Forms.ListView.OwnerDraw%2A> Referenzthema.  
  
 [!code-csharp[ListViewOwnerDraw#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#4)]
 [!code-vb[ListViewOwnerDraw#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="T:System.Windows.Forms.DrawListViewSubItemEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawColumnHeader" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="EndUpdate">
      <MemberSignature Language="C#" Value="public void EndUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.EndUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndUpdate();" />
      <MemberSignature Language="F#" Value="member this.EndUpdate : unit -&gt; unit" Usage="listView.EndUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Nimmt das Zeichnen des Listenfeld-Steuerelements wieder auf, nachdem es durch die <see cref="M:System.Windows.Forms.ListView.BeginUpdate" />-Methode angehalten wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die bevorzugte Methode zum Hinzufügen mehrerer Elemente zu einer <xref:System.Windows.Forms.ListView> ist die Verwendung der <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> -Methode der der <xref:System.Windows.Forms.ListView.ListViewItemCollection> (Zugriff erfolgt über die <xref:System.Windows.Forms.ListView.Items%2A> Eigenschaft der <xref:System.Windows.Forms.ListView>). Dies ermöglicht Ihnen, ein Array von Elementen der Liste in einem einzigen Vorgang hinzuzufügen. Allerdings, wenn Sie den hinzuzufügenden Elemente zu einem Zeitpunkt mithilfe der <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> -Methode der der <xref:System.Windows.Forms.ListView.ListViewItemCollection> -Klasse, die Sie verwenden die <xref:System.Windows.Forms.ListView.BeginUpdate%2A> Methode, um zu verhindern, dass das Steuerelement neu gezeichnet der <xref:System.Windows.Forms.ListView> jedes Mal ein Element hinzugefügt wird. Sobald Sie den Vorgang des Hinzufügens von Elementen zum Steuerelement abgeschlossen ist, rufen Sie die <xref:System.Windows.Forms.ListView.EndUpdate%2A> Methode zum Aktivieren der <xref:System.Windows.Forms.ListView> neu aufgebaut werden kann. Hinzufügen von Elementen kann diese Art von Zeichnen Flackern der <xref:System.Windows.Forms.ListView> Wenn sind eine große Anzahl von Elementen zum Steuerelement hinzugefügt wird.  
  
 Wenn <xref:System.Windows.Forms.ListView.BeginUpdate%2A> mehr als einmal aufgerufen wird <xref:System.Windows.Forms.ListView.EndUpdate%2A> muss eine entsprechende Anzahl von Malen aufgerufen werden. Bis zum letzten Aufruf von <xref:System.Windows.Forms.ListView.EndUpdate%2A> der <xref:System.Windows.Forms.ListView> nicht neu aufgebaut. Außerdem mehrere Aufrufe <xref:System.Windows.Forms.ListView.BeginUpdate%2A> haben keine Auswirkungen.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Initialisieren einer <xref:System.Windows.Forms.ListView> Steuerelement Kontrollkästchen enthalten. Außerdem wird das Verwenden der <xref:System.Windows.Forms.ListView.BeginUpdate%2A> und <xref:System.Windows.Forms.ListView.EndUpdate%2A> Methoden. Um dieses Beispiel auszuführen, fügen Sie in den folgenden Code in ein Formular enthält ein <xref:System.Windows.Forms.ListView> mit dem Namen `ListView1`. Rufen Sie die `InititalizeListView` Methode aus dem Konstruktor des Formulars oder `Load` Methode.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.BeginUpdate" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="EnsureVisible">
      <MemberSignature Language="C#" Value="public void EnsureVisible (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnsureVisible(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.EnsureVisible(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnsureVisible (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnsureVisible(int index);" />
      <MemberSignature Language="F#" Value="member this.EnsureVisible : int -&gt; unit" Usage="listView.EnsureVisible index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des Elements, das durch einen Bildlauf sichtbar gemacht werden soll.</param>
        <summary>Gewährleistet, dass das angegebene Element im Steuerelement angezeigt wird und führt ggf. einen Bildlauf durch den Inhalt des Steuerelements durch.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Methode verwenden, um sicherzustellen, dass ein bestimmtes Element sichtbar innerhalb der <xref:System.Windows.Forms.ListView> Steuerelement. Während der Validierung für die Elemente in einem <xref:System.Windows.Forms.ListView>, rufen Sie die <xref:System.Windows.Forms.ListView.EnsureVisible%2A> Methode, um sicherzustellen, dass ein Element, das Fehler bei der Überprüfung, in angezeigt wird der <xref:System.Windows.Forms.ListView> Steuerelement, damit die Benutzer Änderungen auf das Element ausführen können. Wenn das Element, das Sie sicherstellen möchten, sichtbar ist befindet sich oberhalb des sichtbaren Bereichs des der <xref:System.Windows.Forms.ListView> zu steuern, Aufrufen der <xref:System.Windows.Forms.ListView.EnsureVisible%2A> -Methode wird der Inhalt des Steuerelements einen Bildlauf durch, bis sie das erste Element im sichtbaren Bereich des Steuerelements ist. Wenn das Element unterhalb des sichtbaren Bereichs des der <xref:System.Windows.Forms.ListView> zu steuern, Aufrufen der <xref:System.Windows.Forms.ListView.EnsureVisible%2A> -Methode den Inhalt ein Bildlauf durch die <xref:System.Windows.Forms.ListView> Steuerelements, bis das Element das letzte Element im sichtbaren Bereich des Steuerelements ist.  
  
 Um festzustellen, ob ein Element am oberen Rand den Anzeigebereich des befindet ein <xref:System.Windows.Forms.ListView> steuern, verwenden Sie die <xref:System.Windows.Forms.ListView.TopItem%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.TopItem" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindItemWithText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sucht das erste <see cref="T:System.Windows.Forms.ListViewItem" />, das mit dem angegebenen Textwert beginnt.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindItemWithText">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindItemWithText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindItemWithText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindItemWithText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItemWithText (text As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindItemWithText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.FindItemWithText : string -&gt; System.Windows.Forms.ListViewItem" Usage="listView.FindItemWithText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Der zu suchende Text.</param>
        <summary>Sucht das erste <see cref="T:System.Windows.Forms.ListViewItem" />, das mit dem angegebenen Textwert beginnt.</summary>
        <returns>Das erste <see cref="T:System.Windows.Forms.ListViewItem" />, das mit dem angegebenen Textwert beginnt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Groß- und Kleinschreibung wird bei der Suche nicht berücksichtigt.  
  
 Die `text` -Parameter kann eine Teilzeichenfolge des gewünschten übereinstimmenden Texts angeben. Darüber hinaus gibt diese Methode das erste Element zurück, das mit dem angegebenen Text beginnt. Z. B. wenn ein <xref:System.Windows.Forms.ListView> enthält zwei Listenelemente – das erste Element Text "spitze Klammer" und der Text des zweiten Elements auf "bracket" festgelegt, einen Aufruf von <xref:System.Windows.Forms.ListView.FindItemWithText%2A> übergeben `brack` wie der Parameter das Element zurück, dessen Text ist "bracket".  
  
 Die <xref:System.Windows.Forms.ListView.FindItemWithText%2A> Methodenrückgabe `null` , wenn die Liste leer ist oder kein entsprechendes Element vorhanden ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, die <xref:System.Windows.Forms.ListView.FindItemWithText%2A> Methode. Um dieses Beispiel auszuführen, fügen Sie in den folgenden Code in einem Windows Form, und rufen die `InitializeFindListView` Methode aus dem Konstruktor des Formulars oder <xref:System.Windows.Forms.Form.Load> -Ereignishandler. Klicken Sie auf die Schaltfläche zum Anzeigen der Ergebnisse des Methodenaufrufs.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindItemWithText">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindItemWithText (string text, bool includeSubItemsInSearch, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindItemWithText(string text, bool includeSubItemsInSearch, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindItemWithText(System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItemWithText (text As String, includeSubItemsInSearch As Boolean, startIndex As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindItemWithText(System::String ^ text, bool includeSubItemsInSearch, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindItemWithText : string * bool * int -&gt; System.Windows.Forms.ListViewItem" Usage="listView.FindItemWithText (text, includeSubItemsInSearch, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="includeSubItemsInSearch" Type="System.Boolean" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">Der zu suchende Text.</param>
        <param name="includeSubItemsInSearch">
          <see langword="true" />, wenn Unterelemente in der Suche enthalten sein sollen, andernfalls <see langword="false" />.</param>
        <param name="startIndex">Der Index des Elements, bei dem mit der Suche begonnen werden soll.</param>
        <summary>Sucht das erste <see cref="T:System.Windows.Forms.ListViewItem" /> oder, sofern angegeben, das erste <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />, das mit dem angegebenen Textwert beginnt. Die Suche beginnt am angegebenen Index.</summary>
        <returns>Das erste <see cref="T:System.Windows.Forms.ListViewItem" />, das mit dem angegebenen Textwert beginnt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Groß- und Kleinschreibung wird bei der Suche nicht berücksichtigt.  
  
 Die `text` -Parameter kann eine Teilzeichenfolge des gewünschten übereinstimmenden Texts angeben. Darüber hinaus gibt diese Methode das erste Element zurück, das mit dem angegebenen Text beginnt. Z. B. wenn ein <xref:System.Windows.Forms.ListView> enthält zwei Listenelemente – das erste Element Text "spitze Klammer" und der Text des zweiten Elements auf "bracket" festgelegt – einen Aufruf von <xref:System.Windows.Forms.ListView.FindItemWithText%2A> der "Brack" ist "bracket", wie der Parameter dem Element, dessen Text zurückgegeben wird.  
  
 Die <xref:System.Windows.Forms.ListView.FindItemWithText%2A> Methodenrückgabe `null` , wenn die Liste leer ist oder kein entsprechendes Element vorhanden ist.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Anzahl der Elemente in <see cref="T:System.Windows.Forms.ListView" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindItemWithText">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindItemWithText (string text, bool includeSubItemsInSearch, int startIndex, bool isPrefixSearch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindItemWithText(string text, bool includeSubItemsInSearch, int32 startIndex, bool isPrefixSearch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindItemWithText(System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItemWithText (text As String, includeSubItemsInSearch As Boolean, startIndex As Integer, isPrefixSearch As Boolean) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindItemWithText(System::String ^ text, bool includeSubItemsInSearch, int startIndex, bool isPrefixSearch);" />
      <MemberSignature Language="F#" Value="member this.FindItemWithText : string * bool * int * bool -&gt; System.Windows.Forms.ListViewItem" Usage="listView.FindItemWithText (text, includeSubItemsInSearch, startIndex, isPrefixSearch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="includeSubItemsInSearch" Type="System.Boolean" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="isPrefixSearch" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">Der zu suchende Text.</param>
        <param name="includeSubItemsInSearch">
          <see langword="true" />, wenn Unterelemente in der Suche enthalten sein sollen, andernfalls <see langword="false" />.</param>
        <param name="startIndex">Der Index des Elements, bei dem mit der Suche begonnen werden soll.</param>
        <param name="isPrefixSearch">
          <see langword="true" />, wenn Teilübereinstimmungen zulässig sind, andernfalls <see langword="false" />.</param>
        <summary>Sucht das erste <see cref="T:System.Windows.Forms.ListViewItem" /> oder, sofern angegeben, das erste <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />, das mit dem angegebenen Textwert beginnt. Die Suche beginnt am angegebenen Index.</summary>
        <returns>Das erste <see cref="T:System.Windows.Forms.ListViewItem" />, das mit dem angegebenen Textwert beginnt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.FindItemWithText%2A> Methodenrückgabe `null` , wenn die Liste leer ist oder kein entsprechendes Element vorhanden ist.  
  
 Die Groß- und Kleinschreibung wird bei der Suche nicht berücksichtigt.  
  
 Die `text` -Parameter kann eine Teilzeichenfolge des gewünschten übereinstimmenden Texts angeben. Diese Methode gibt das erste Element, das mit dem angegebenen Text, beginnt, es sei denn, `false` für übergeben `isPrefixSearch`. Z. B. wenn ein <xref:System.Windows.Forms.ListView> enthält zwei Listenelemente – das erste Element Text "spitze Klammer" und der Text des zweiten Elements auf "bracket" festgelegt, einen Aufruf von <xref:System.Windows.Forms.ListView.FindItemWithText%2A> der "Brack" ist "bracket", wie Sie der Suchtext ein dem Element, dessen Text zurückgegeben wird. Wenn `isPrefixSearch` nastaven NA hodnotu `false`, dieser Aufruf gibt `null`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Anzahl der Elemente in der <see cref="T:System.Windows.Forms.ListView" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindNearestItem">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sucht von einem angegebenen Punkt aus in der angegebenen Richtung nach dem nächsten Element.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindNearestItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindNearestItem (System.Windows.Forms.SearchDirectionHint dir, System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindNearestItem(valuetype System.Windows.Forms.SearchDirectionHint dir, valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindNearestItem(System.Windows.Forms.SearchDirectionHint,System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindNearestItem(System::Windows::Forms::SearchDirectionHint dir, System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.FindNearestItem : System.Windows.Forms.SearchDirectionHint * System.Drawing.Point -&gt; System.Windows.Forms.ListViewItem" Usage="listView.FindNearestItem (dir, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dir" Type="System.Windows.Forms.SearchDirectionHint" />
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="dir">Einer der <see cref="T:System.Windows.Forms.SearchDirectionHint" />-Werte.</param>
        <param name="point">Der Punkt, an dem die Suche beginnen soll.</param>
        <summary>Sucht vom angegebenen Punkt aus in der angegebenen Richtung nach dem nächsten Element.</summary>
        <returns>Das <see cref="T:System.Windows.Forms.ListViewItem" />, das dem angegebenen Punkt in der angegebenen Richtung am nächsten ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.FindNearestItem%2A> Methodenrückgabe `null` Wenn in der angegebenen Richtung kein Element gefunden wird. Das nächste Element identifizierende kann variieren, je nach Betriebssystem die Anwendung ausgeführt wird, und wirkt sich die Ergebnisse der <xref:System.Windows.Forms.ListView.FindNearestItem%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.ListView.View" /> ist auf einen anderen Wert als <see cref="F:System.Windows.Forms.View.SmallIcon" /> oder <see cref="F:System.Windows.Forms.View.LargeIcon" /> festgelegt.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindNearestItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindNearestItem (System.Windows.Forms.SearchDirectionHint searchDirection, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindNearestItem(valuetype System.Windows.Forms.SearchDirectionHint searchDirection, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindNearestItem(System.Windows.Forms.SearchDirectionHint,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNearestItem (searchDirection As SearchDirectionHint, x As Integer, y As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindNearestItem(System::Windows::Forms::SearchDirectionHint searchDirection, int x, int y);" />
      <MemberSignature Language="F#" Value="member this.FindNearestItem : System.Windows.Forms.SearchDirectionHint * int * int -&gt; System.Windows.Forms.ListViewItem" Usage="listView.FindNearestItem (searchDirection, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchDirection" Type="System.Windows.Forms.SearchDirectionHint" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="searchDirection">Einer der <see cref="T:System.Windows.Forms.SearchDirectionHint" />-Werte.</param>
        <param name="x">Die x-Koordinate für den Punkt, an dem die Suche beginnen soll.</param>
        <param name="y">Die y-Koordinate für den Punkt, an dem die Suche beginnen soll.</param>
        <summary>Sucht von den angegebenen x- und y-Koordinaten ausgehend in der angegebenen Richtung nach dem nächsten Element.</summary>
        <returns>Das <see cref="T:System.Windows.Forms.ListViewItem" />, das den angegebenen Koordinaten in der angegebenen Richtung am nächsten ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.FindNearestItem%2A> Methodenrückgabe `null` Wenn in der angegebenen Richtung kein Element gefunden wird. Das nächste Element identifizierende kann variieren, je nach Betriebssystem die Anwendung ausgeführt wird, und wirkt sich die Ergebnisse der <xref:System.Windows.Forms.ListView.FindNearestItem%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.ListView.View" /> ist auf einen anderen Wert als <see cref="F:System.Windows.Forms.View.SmallIcon" /> oder <see cref="F:System.Windows.Forms.View.LargeIcon" /> festgelegt.</exception>
      </Docs>
    </Member>
    <Member MemberName="FocusedItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FocusedItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem FocusedItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.FocusedItem" />
      <MemberSignature Language="VB.NET" Value="Public Property FocusedItem As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem ^ FocusedItem { System::Windows::Forms::ListViewItem ^ get(); void set(System::Windows::Forms::ListViewItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FocusedItem : System.Windows.Forms.ListViewItem with get, set" Usage="System.Windows.Forms.ListView.FocusedItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Element im Steuerelement ab, das gegenwärtig den Fokus besitzt, oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.ListViewItem" />, das das Element mit dem Fokus darstellt, oder <see langword="null" />, wenn kein Element in der <see cref="T:System.Windows.Forms.ListView" /> den Fokus besitzt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.FocusedItem%2A> -Eigenschaft gibt die <xref:System.Windows.Forms.ListViewItem> , das das Element, das Anzeigen von derzeit das Fokusrechteck für darstellt. die <xref:System.Windows.Forms.ListView> Steuerelement. Da eine <xref:System.Windows.Forms.ListView> Steuerelement hat keine direkt bearbeitet werden Bereiche als die Elemente, die angezeigt wird, wenn die <xref:System.Windows.Forms.ListView> Steuerelement den Fokus hat, ein Element in der <xref:System.Windows.Forms.ListView> zeigt das Fokusrechteck um die Item-Text. In der Regel das zuletzt ausgewählte Element in der <xref:System.Windows.Forms.ListView> Steuerelement ist das Element den Fokus besitzt. Auch wenn ein Element das Fokusrechteck anzeigen diejenige sein kann, er tatsächlich möglicherweise kein ausgewähltes Element in der <xref:System.Windows.Forms.ListView>. Verwenden der <xref:System.Windows.Forms.ListView.SelectedItems%2A> oder <xref:System.Windows.Forms.ListView.SelectedIndices%2A> Eigenschaften zum Abrufen der ausgewählten Elemente in der <xref:System.Windows.Forms.ListView> -Steuerelement, das <xref:System.Windows.Forms.ListView.FocusedItem%2A> -Eigenschaft ist nicht unbedingt ausgewählt. Können Sie die <xref:System.Windows.Forms.ListView.FocusedItem%2A> Eigenschaft, um zu bestimmen, welches Element entsprechend seiner letzten geklickt wird, der <xref:System.Windows.Forms.ListView> -Steuerelement, unabhängig von den Auswahlzustand.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ListView.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Vordergrundfarbe ab oder legt sie fest.</summary>
        <value>Die <see cref="T:System.Drawing.Color" />, die die Vordergrundfarbe darstellt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullRowSelect">
      <MemberSignature Language="C#" Value="public bool FullRowSelect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FullRowSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.FullRowSelect" />
      <MemberSignature Language="VB.NET" Value="Public Property FullRowSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FullRowSelect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FullRowSelect : bool with get, set" Usage="System.Windows.Forms.ListView.FullRowSelect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob beim Klicken auf ein Element alle seine Unterelemente ausgewählt werden, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn beim Klicken auf ein Element das Element und alle seine Unterelemente ausgewählt werden, <see langword="false" />, wenn beim Klicken auf ein Element nur das Element selbst ausgewählt wird. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.FullRowSelect%2A> Eigenschaft hat keine Auswirkungen, es sei denn, die <xref:System.Windows.Forms.ListView.View%2A> Eigenschaft der <xref:System.Windows.Forms.ListView> -Steuerelement so eingestellt ist, dass <xref:System.Windows.Forms.View.Details>. Die <xref:System.Windows.Forms.ListView.FullRowSelect%2A> Eigenschaft wird normalerweise verwendet, wenn eine <xref:System.Windows.Forms.ListView> Zeigt Elemente mit vielen Unterelemente und es ist wichtig, werden die ausgewählten Elemente angezeigt, wenn der Elementtext nicht aufgrund der horizontalen Bildlauf der der Inhalt des Steuerelements angezeigt wird.  
  
> [!NOTE]
>  Wenn <xref:System.Windows.Forms.ListView.FullRowSelect%2A> nastaven NA hodnotu `true`, QuickInfos für eine <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> wird nicht angezeigt; nur die QuickInfo für das übergeordnete Element <xref:System.Windows.Forms.ListViewItem> wird angezeigt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.ListView>-Steuerelement mit je drei <xref:System.Windows.Forms.ListViewItem>- und <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>-Objekten erstellt, die für jedes Element angegeben werden. Im Beispiel wird ebenfalls ein <xref:System.Windows.Forms.ColumnHeader>-Objekt erstellt, um die Unterelemente in der Detailansicht anzuzeigen. Ebenfalls werden zwei <xref:System.Windows.Forms.ImageList>-Objekte im Codebeispiel erstellt, die Bilder für die <xref:System.Windows.Forms.ListViewItem>-Objekte bereitstellen. Diese <xref:System.Windows.Forms.ImageList>-Objekte werden zu den <xref:System.Windows.Forms.ListView.LargeImageList%2A>- und <xref:System.Windows.Forms.ListView.SmallImageList%2A>-Eigenschaften hinzugefügt. Im Beispiel werden folgende Eigenschaft bei der Erstellung des <xref:System.Windows.Forms.ListView>-Steuerelements verwendet:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Für dieses Beispiel ist erforderlich, dass Sie den Code zu einer <xref:System.Windows.Forms.Form>-Klasse hinzufügen und die Methode aufrufen, die im Beispiel aus dem Konstruktor oder einer anderen Methode der Form-Klasse erstellt wurde. Für das Beispiel ist ebenfalls erforderlich, dass die Bilder namens `MySmallImage1`, `MySmallImage2`, `MyLargeImage1` und `MyLargeImage2` sich im Stammverzeichnis von Laufwerk C befinden.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="F:System.Windows.Forms.View.Details" />
      </Docs>
    </Member>
    <Member MemberName="GetItemAt">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem GetItemAt (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem GetItemAt(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.GetItemAt(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemAt (x As Integer, y As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ GetItemAt(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.GetItemAt : int * int -&gt; System.Windows.Forms.ListViewItem" Usage="listView.GetItemAt (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Die x-Koordinate der Position für die Suche nach einem Element (ausgedrückt in Clientkoordinaten).</param>
        <param name="y">Die y-Koordinate der Position für die Suche nach einem Element (ausgedrückt in Clientkoordinaten).</param>
        <summary>Ruft das Element an der angegebenen Position ab.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.ListViewItem" />, das das Element an der angegebenen Position darstellt. Wenn sich an der angegebenen Position kein Element befindet, gibt die Methode <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.GetItemAt%2A> Methode können Sie ermitteln, welches Element an einer bestimmten Stelle im Clientbereich des befindet der <xref:System.Windows.Forms.ListView> Steuerelement. Sie können diese Methode verwenden, wenn der Benutzer klickt, oder mit der rechten ein Unterelement Maustaste (wenn die <xref:System.Windows.Forms.ListView.View%2A> -Eigenschaftensatz auf `View.Details`) und möchten herausfinden, welches Element besitzt das Unterelement ab, auf die geklickt wurde, basierend auf den Koordinaten der Maus zum Zeitpunkt die Maus geklickt .  
  
> [!NOTE]
>  Wenn die <xref:System.Windows.Forms.ListView.FullRowSelect%2A> Eigenschaftswert ist `false`, nur, wenn der angegebenen Position innerhalb der Grenzen des übergeordneten Elements ist (die in der ersten Spalte angezeigt wird, wenn das Steuerelement im Details-Modus ist), gibt diese Methode ein Element zurück. Sie müssen festlegen, die <xref:System.Windows.Forms.ListView.FullRowSelect%2A> Eigenschaft `true` zum Abrufen eines Elements mit dieser Methode erhalten einen Speicherort innerhalb der Grenzen eines Unterelements. Sie können auch die <xref:System.Windows.Forms.ListView.HitTest%2A> Methode, um ausführliche Informationen über das Element an einem bestimmten Standort abzurufen.  
  
 Sie Drag & Drop neu positionieren von Elementen innerhalb einer <xref:System.Windows.Forms.ListView>, möglicherweise möchten Sie verwenden die <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A?displayProperty=nameWithType> Methode anstelle der <xref:System.Windows.Forms.ListView.GetItemAt%2A> Methode. Die <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A?displayProperty=nameWithType> Methode sucht das nächste Element unabhängig davon, wo sich der Mauszeiger befindet. Die <xref:System.Windows.Forms.ListView.GetItemAt%2A> , auf der anderen Seite Methodenrückgabe `null` Wenn an der angegebenen Position kein Element vorhanden ist.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.ListViewInsertionMark> Klasse wird nur unter Windows XP und Windows Server 2003 unterstützt, wenn die Anwendung ruft die <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> Methode.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Windows.Forms.PictureBox> und <xref:System.Windows.Forms.ListView> Steuerelemente. Die <xref:System.Windows.Forms.PictureBox> wird initialisiert, indem die <xref:System.Windows.Forms.PictureBox.BorderStyle%2A?displayProperty=nameWithType> und <xref:System.Windows.Forms.PictureBox.SizeMode%2A?displayProperty=nameWithType> Eigenschaften mithilfe der <xref:System.Windows.Forms.BorderStyle> und <xref:System.Windows.Forms.PictureBoxSizeMode> Enumerationen, bzw. Die <xref:System.Windows.Forms.ListView> wird mit Bildern aus dem Verzeichnis "Samples" aufgefüllt. Die <xref:System.Windows.Forms.ListView.GetItemAt%2A> -Methode verwendet wird, bei der Verarbeitung der <xref:System.Windows.Forms.ListView> des Steuerelements <xref:System.Windows.Forms.Control.MouseDown> Ereignis, um zu bestimmen, ob ein Element ausgewählt ist. Wenn ein Element ausgewählt ist, zeigt der Ereignishandler die ausgewählte Datei durch Festlegen der <xref:System.Windows.Forms.PictureBox.Image%2A?displayProperty=nameWithType> Eigenschaft. Das Beispiel erfordert das Vorhandensein von JPG-Dateien im Verzeichnis C:\documents und Einstellungen\Alle Benutzer\Dokumente\Eigene Bilder\beispielbilder. Um dieses Beispiel auszuführen, fügen Sie den Code in ein Formular, und rufen die `InitializePictureBox` und `PopulateListView` Methoden in den Konstruktor des Formulars oder `Load` Methode. Stellen Sie sicher, dass alle Ereignisse Ereignishandlern zugeordnet sind.  
  
 [!code-cpp[System.Windows.Forms.ListViewAndPictureBox#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewAndPictureBox/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListViewAndPictureBox#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewAndPictureBox/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ListViewAndPictureBox#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewAndPictureBox/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)" />
        <altmember cref="T:System.Windows.Forms.ListViewInsertionMark" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetItemRect">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft das umschließende Rechteck für ein Element im Steuerelement ab.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetItemRect">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetItemRect (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetItemRect(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.GetItemRect(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemRect (index As Integer) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetItemRect(int index);" />
      <MemberSignature Language="F#" Value="member this.GetItemRect : int -&gt; System.Drawing.Rectangle" Usage="listView.GetItemRect index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des Elements in der <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />, dessen umschließendes Rechteck zurückgegeben werden soll.</param>
        <summary>Ruft das umschließende Rechteck für ein bestimmtes Element im Listenansicht-Steuerelement ab.</summary>
        <returns>Ein <see cref="T:System.Drawing.Rectangle" />, das das umschließende Rechteck des angegebenen <see cref="T:System.Windows.Forms.ListViewItem" /> darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das umschließende Rechteck zurückgegeben, die von dieser Version von der <xref:System.Windows.Forms.ListView.GetItemRect%2A> Methode darstellt, das gesamte Element einschließlich Symbol, Elementtext und Text des Unterelements ab. Verwenden Sie zum Angeben des Elements ein bestimmten Teil des umschließenden Rechtecks, die andere Version der dem <xref:System.Windows.Forms.ListView.GetItemRect%2A> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="GetItemRect">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetItemRect (int index, System.Windows.Forms.ItemBoundsPortion portion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetItemRect(int32 index, valuetype System.Windows.Forms.ItemBoundsPortion portion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.GetItemRect(System.Int32,System.Windows.Forms.ItemBoundsPortion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemRect (index As Integer, portion As ItemBoundsPortion) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetItemRect(int index, System::Windows::Forms::ItemBoundsPortion portion);" />
      <MemberSignature Language="F#" Value="member this.GetItemRect : int * System.Windows.Forms.ItemBoundsPortion -&gt; System.Drawing.Rectangle" Usage="listView.GetItemRect (index, portion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="portion" Type="System.Windows.Forms.ItemBoundsPortion" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des Elements in der <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />, dessen umschließendes Rechteck zurückgegeben werden soll.</param>
        <param name="portion">Einer der <see cref="T:System.Windows.Forms.ItemBoundsPortion" />-Werte, der den Teil des <see cref="T:System.Windows.Forms.ListViewItem" /> darstellt, für den das umschließende Rechteck abgerufen werden soll.</param>
        <summary>Ruft den angegebenen Teil des umschließenden Rechtecks für ein bestimmtes Element im Listenansicht-Steuerelement ab.</summary>
        <returns>Ein <see cref="T:System.Drawing.Rectangle" />, das das umschließende Rechteck für den angegebenen Teil des angegebenen <see cref="T:System.Windows.Forms.ListViewItem" /> darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das umschließende Rechteck zurückgegeben, die von dieser Version von der <xref:System.Windows.Forms.ListView.GetItemRect%2A> Methode darstellt, nur den Abschnitt des angegebenen Elements der `portion` Parameter. Um das umschließende Rechteck des gesamten Elements zurückzugeben, verwenden Sie die andere Version von der <xref:System.Windows.Forms.ListView.GetItemRect%2A> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="T:System.Windows.Forms.ItemBoundsPortion" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public bool GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Property GridLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GridLines { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.GridLines : bool with get, set" Usage="System.Windows.Forms.ListView.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Datenblattlinien zwischen den Zeilen und Spalten mit den Elementen und Unterelementen im Steuerelement angezeigt werden, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn Datenblattlinien zwischen Elementen und Unterelementen gezeichnet werden, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.GridLines%2A> Eigenschaft hat keine Auswirkungen, es sei denn, die <xref:System.Windows.Forms.ListView.View%2A> Eigenschaft der <xref:System.Windows.Forms.ListView> -Steuerelement so eingestellt ist, dass <xref:System.Windows.Forms.View.Details>. Die <xref:System.Windows.Forms.ListView.GridLines%2A> Eigenschaft können Sie zum Anzeigen von Zeilen aus, um zu identifizieren, die Zeilen und Spalten, die in angezeigt werden, die <xref:System.Windows.Forms.ListView> steuern, wenn es Elemente und deren Unterelemente angezeigt. Die Rasterlinien, die angezeigt werden, bieten keine Zeilen und Spalten als Anwendung der Größe anpassen, wie z. B. Microsoft Excel angegeben. Nur Spalten können geändert werden, wenn die Spaltenköpfe angezeigt werden, indem Sie den Mauszeiger auf die rechte Seite der Spalte, die die Größe ändern und auf, und ziehen, bis die Spalte die gewünschten beträgt. Die Raster-Zeilen-Funktion wird verwendet, um die Benutzer des Steuerelements mit sichtbaren Bereichs Datenblattlinien zwischen Elementen und Unterelementen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.ListView>-Steuerelement mit je drei <xref:System.Windows.Forms.ListViewItem>- und <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>-Objekten erstellt, die für jedes Element angegeben werden. Im Beispiel wird ebenfalls ein <xref:System.Windows.Forms.ColumnHeader>-Objekt erstellt, um die Unterelemente in der Detailansicht anzuzeigen. Ebenfalls werden zwei <xref:System.Windows.Forms.ImageList>-Objekte im Codebeispiel erstellt, die Bilder für die <xref:System.Windows.Forms.ListViewItem>-Objekte bereitstellen. Diese <xref:System.Windows.Forms.ImageList>-Objekte werden zu den <xref:System.Windows.Forms.ListView.LargeImageList%2A>- und <xref:System.Windows.Forms.ListView.SmallImageList%2A>-Eigenschaften hinzugefügt. Im Beispiel werden folgende Eigenschaft bei der Erstellung des <xref:System.Windows.Forms.ListView>-Steuerelements verwendet:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Für dieses Beispiel ist erforderlich, dass Sie den Code zu einer <xref:System.Windows.Forms.Form>-Klasse hinzufügen und die Methode aufrufen, die im Beispiel aus dem Konstruktor oder einer anderen Methode der Form-Klasse erstellt wurde. Für das Beispiel ist ebenfalls erforderlich, dass die Bilder namens `MySmallImage1`, `MySmallImage2`, `MyLargeImage1` und `MyLargeImage2` sich im Stammverzeichnis von Laufwerk C befinden.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
      </Docs>
    </Member>
    <Member MemberName="Groups">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroupCollection Groups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroupCollection Groups" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Groups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Groups As ListViewGroupCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroupCollection ^ Groups { System::Windows::Forms::ListViewGroupCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Groups : System.Windows.Forms.ListViewGroupCollection" Usage="System.Windows.Forms.ListView.Groups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewGroupCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewGroupCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung von <see cref="T:System.Windows.Forms.ListViewGroup" />-Objekten ab, die dem Steuerelement zugeordnet sind.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.ListViewGroupCollection" />, die alle Gruppen im <see cref="T:System.Windows.Forms.ListView" />-Steuerelement enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView> gruppenfunktion ermöglicht das Erstellen von visuellen Gruppen von logisch zusammengehörigen <xref:System.Windows.Forms.ListView> Elemente. Jede Gruppe besteht aus einem TextHeader, gefolgt von einer horizontalen Zeile und die Elemente, die dieser Gruppe zugewiesen. Sie können den Headertext linksbündig, rechtsbündig oder zentriert des Steuerelements ausrichten. Zugewiesene Gruppen eine <xref:System.Windows.Forms.ListView> Steuerelement angezeigt werden, wenn die <xref:System.Windows.Forms.ListView.View%2A> Eigenschaft auf einen Wert festgelegt ist als <xref:System.Windows.Forms.View.List?displayProperty=nameWithType>.  
  
 <xref:System.Windows.Forms.ListView> Gruppen können Ihre Benutzer, die die Elemente zu finden sie gesuchte durch die Elemente in nützliche Kategorien zu trennen. Sie können alle Kategorien erstellen, Sie müssen. Ein typischer Ansatz besteht darin, gruppieren die Elemente basierend auf dem Weg, die die Liste sortiert wird. Beispielsweise können Sie die Elemente nach dem ersten Buchstaben des Elementnamens gruppieren, wenn die Liste alphabetisch oder nach Unterelementen, z. B. Typ oder wenn die Liste sortiert wird, indem Sie auf eine Spaltenüberschrift in der Detailansicht Datum sortiert wird. Windows-Explorer verwendet diese Art der Gruppierung.  
  
 Um die Grouping-Funktion verwenden zu können, fügen Sie eine oder mehrere <xref:System.Windows.Forms.ListViewGroup> Objekte die <xref:System.Windows.Forms.ListView.Groups%2A> Auflistung von einem <xref:System.Windows.Forms.ListView> Steuerelement. Legen Sie den Text und Header Ausrichtung in die <xref:System.Windows.Forms.ListViewGroup.%23ctor%2A> Konstruktor oder legen Sie sie mit der <xref:System.Windows.Forms.ListViewGroup.Header%2A?displayProperty=nameWithType> und <xref:System.Windows.Forms.ListViewGroup.HeaderAlignment%2A?displayProperty=nameWithType> Eigenschaften.  
  
 Legen Sie die <xref:System.Windows.Forms.ListView.ShowGroups%2A>-Eigenschaft auf `false` fest, um dieses Feature vorübergehend zu deaktivieren.  
  
 Sie können ein Element zu einer Gruppe zuweisen, durch Angeben der Gruppe in der <xref:System.Windows.Forms.ListViewItem.%23ctor%2A> Konstruktor durch Festlegen der <xref:System.Windows.Forms.ListViewItem.Group%2A?displayProperty=nameWithType> -Eigenschaft, oder indem Sie direkt das Element, das die <xref:System.Windows.Forms.ListViewGroup.Items%2A?displayProperty=nameWithType> Auflistung einer Gruppe. Alle Elemente sollten Gruppen zugewiesen werden, bevor sie angezeigt werden. Alle Elemente, die nicht zu einer Gruppe zugewiesen sind werden angezeigt, in der Gruppe "Standard", die die headerbezeichnung "DefaultGroup{0}". Die Standardgruppe ist nicht Bestandteil der <xref:System.Windows.Forms.ListView.Groups%2A> -Auflistung, und kann nicht geändert werden. Es ist in erster Linie hilfreich beim Debuggen, um sicherzustellen, dass alle Elemente ordnungsgemäß zu Gruppen hinzugefügt wurden.  
  
 Ein Element kann jeweils nur in einer Gruppe sein. Sie können ändern, dass die Gruppe, zu dem ein Element, durch Festlegen gehört, der <xref:System.Windows.Forms.ListViewItem.Group%2A?displayProperty=nameWithType> Eigenschaft zur Laufzeit oder indem sie zum Hinzufügen der <xref:System.Windows.Forms.ListViewGroup.Items%2A?displayProperty=nameWithType> Sammlung einer anderen Gruppe, aus der vorherigen Gruppe automatisch entfernt.  
  
 Die einfügemarkenfunktion ist deaktiviert, wenn Sie Gruppen verwenden. Dies ist, da die gruppenfunktion sortiert die Elemente durch die Gruppenmitgliedschaft, während die einfügemarkenfunktion verwendet wird, mit Drag & Drop neu zu positionieren, einem <xref:System.Windows.Forms.ListView> -Steuerelement, das bereits die Elemente sortiert nicht ist.  
  
 <xref:System.Windows.Forms.ListView> Gruppen sind nur auf Windows XP und Windows Server 2003 verfügbar, wenn die Anwendung aufruft der <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> Methode. Unter früheren Betriebssystemen Code im Zusammenhang mit Gruppen hat keine Auswirkungen, und die Gruppen werden nicht angezeigt. Daher kann die jeglicher Code, der die gruppenfunktion hängt nicht ordnungsgemäß.  
  
 Sie können Code, der bestimmt, ob die gruppenfunktion verfügbar ist, einschließen möchten, und eine andere Funktionalität bereitstellen, wenn sie nicht verfügbar ist. Beispielsweise empfiehlt es sich, geben Sie die alternative Sortierung, wenn unter Betriebssystemen ausgeführt werden, die Sortierung nach Gruppen nicht unterstützen.  
  
 Diese Features werden von derselben Bibliothek bereitgestellt, die das Designfeature des Betriebssystems bereitstellt. Rufen Sie die <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType>-Methodenüberladung auf, und übergeben Sie den <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType>-Wert, um die Verfügbarkeit dieser Bibliothek zu überprüfen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Windows.Forms.ListView> gruppenfunktion Elemente nach dem Wert eines Unterelements in der Detailansicht zu organisieren. Diese Form der Gruppierung ähnelt der Gruppierung, die in Windows Explorer verwendet. Im Beispiel werden die Gruppen dynamisch erstellt. Für jede Unterelementspalte wird eine Gruppe für jeden eindeutigen Unterelementwert erstellt. Für das übergeordnete Element-Spalte wird eine Gruppe für jeden eindeutigen Anfangsbuchstaben erstellt. Klicken Sie auf den Header einer Spalte sortiert die Elemente in den Gruppen, die für diese Spalte erstellt. Klicken Sie erneut auf die gleiche Spaltenüberschrift kehrt die Reihenfolge der Gruppen.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
        <altmember cref="T:System.Windows.Forms.ListViewGroupCollection" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListView.ShowGroups" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ColumnHeaderStyle HeaderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ColumnHeaderStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderStyle As ColumnHeaderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ColumnHeaderStyle HeaderStyle { System::Windows::Forms::ColumnHeaderStyle get(); void set(System::Windows::Forms::ColumnHeaderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderStyle : System.Windows.Forms.ColumnHeaderStyle with get, set" Usage="System.Windows.Forms.ListView.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnHeaderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Spaltenkopfstil ab oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.ColumnHeaderStyle" />-Werte. Der Standardwert ist <see cref="F:System.Windows.Forms.ColumnHeaderStyle.Clickable" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.HeaderStyle%2A> Eigenschaft können Sie angeben, welche Spaltenüberschriften angezeigt wird, wenn die <xref:System.Windows.Forms.ListView.View%2A> Eigenschaft der <xref:System.Windows.Forms.ListView> -Steuerelement so eingestellt ist, dass <xref:System.Windows.Forms.View.Details> und <xref:System.Windows.Forms.ListView> Steuerelement hat <xref:System.Windows.Forms.ColumnHeader> Objekte, die in der angegeben<xref:System.Windows.Forms.ListView.ColumnHeaderCollection>. <xref:System.Windows.Forms.ColumnHeader> -Objekte definieren die Spalten, die in angezeigt werden, die <xref:System.Windows.Forms.ListView> Steuerelement. Jede Spalte wird verwendet, um das Anzeigen von Informationen zu den Unterelementen für jedes Element in der <xref:System.Windows.Forms.ListView>.  
  
 Die <xref:System.Windows.Forms.ListView.HeaderStyle%2A> Eigenschaft können Sie angeben, ob die Spaltenköpfe sichtbar sind, oder, wenn sie sichtbar sind, gibt an, ob sie als klickbare Schaltflächen fungieren. Wenn die <xref:System.Windows.Forms.ListView.HeaderStyle%2A> -Eigenschaftensatz auf <xref:System.Windows.Forms.ColumnHeaderStyle.None?displayProperty=nameWithType>, die Spaltenüberschriften werden nicht angezeigt, obwohl die Elemente und Unterelemente von der <xref:System.Windows.Forms.ListView> Steuerelement immer noch in Spalten angeordnet sind. Wenn die <xref:System.Windows.Forms.ListView.HeaderStyle%2A> -Eigenschaftensatz auf <xref:System.Windows.Forms.ColumnHeaderStyle.Clickable?displayProperty=nameWithType>, die Spaltenüberschriften Verhalten sich wie Schaltflächen, die Benutzer klicken können, um eine Aktion, z. B. die Sortierung der Elemente in der <xref:System.Windows.Forms.ListView> steuern, verwenden die Elemente in der Spalte geklickt wurde, als Schlüssel. Sie können dieses Verhalten implementieren, in einem Handler für die <xref:System.Windows.Forms.ListView.ColumnClick> Ereignis. Wenn die <xref:System.Windows.Forms.ListView.HeaderStyle%2A> -Eigenschaftensatz auf <xref:System.Windows.Forms.ColumnHeaderStyle.Nonclickable?displayProperty=nameWithType>, die Spaltenüberschriften angezeigt, jedoch nicht angeklickt werden kann.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, eine <xref:System.Windows.Forms.ListView> , die mehrere Elemente ausgewählt werden können. Das Beispiel veranschaulicht das Festlegen der <xref:System.Windows.Forms.ListView.HideSelection%2A> und <xref:System.Windows.Forms.ListView.HeaderStyle%2A> Eigenschaften. Außerdem veranschaulicht Sie die <xref:System.Windows.Forms.ColumnHeader.Text%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.ColumnHeader.TextAlign%2A?displayProperty=nameWithType> und <xref:System.Windows.Forms.ColumnHeader.Width%2A?displayProperty=nameWithType> Eigenschaften. Um dieses Beispiel auszuführen, fügen Sie in den folgenden Code in ein Formular enthält ein <xref:System.Windows.Forms.ListView> Objekt mit dem Namen `ListView1` und <xref:System.Windows.Forms.TextBox> mit dem Namen `TextBox1`. Rufen Sie die `InitializeListView` Methode aus dem Konstruktor des Formulars oder <xref:System.Windows.Forms.Form.Load> -Ereignishandler.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der angegebene Wert ist keiner der <see cref="T:System.Windows.Forms.ColumnHeaderStyle" />-Werte.</exception>
        <altmember cref="E:System.Windows.Forms.ListView.ColumnClick" />
        <altmember cref="T:System.Windows.Forms.ColumnHeaderStyle" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="HideSelection">
      <MemberSignature Language="C#" Value="public bool HideSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HideSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HideSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HideSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HideSelection : bool with get, set" Usage="System.Windows.Forms.ListView.HideSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das ausgewählte Element im Steuerelement hervorgehoben bleibt, wenn das Steuerelement den Fokus verloren hat, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn das Steuerelement den Fokus nicht mehr besitzt und das ausgewählte Element nicht mehr hervorgehoben ist, <see langword="false" />, wenn das Steuerelement den Fokus nicht mehr besitzt und das ausgewählte Element weiterhin hervorgehoben ist. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft auf festgelegt ist `false`, ausgewählte Elemente im der <xref:System.Windows.Forms.ListView> Steuerelement bleibt in einer anderen Farbe als die aktuelle Auswahl vom Betriebssystem festgelegten hervorgehoben, wenn die <xref:System.Windows.Forms.ListView> -Steuerelement den Fokus verliert. Sie können diese Eigenschaft verwenden, um Elemente zu halten, die ausgewählt werden, indem der Benutzer sichtbar, wenn der Benutzer klickt auf ein anderes Steuerelement im Formular oder in ein anderes Fenster verschoben wird.  
  
> [!NOTE]
>  Wenn Sie mit der Zugriff auf Ihre Anwendungen sind, werden es wird empfohlen, die Sie festlegen, die <xref:System.Windows.Forms.ListView.HideSelection%2A> Eigenschaft `false`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, eine <xref:System.Windows.Forms.ListView> , die mehrere Elemente ausgewählt werden können. Das Beispiel veranschaulicht das Festlegen der <xref:System.Windows.Forms.ListView.HideSelection%2A> und <xref:System.Windows.Forms.ListView.HeaderStyle%2A> Eigenschaften. Außerdem veranschaulicht Sie die <xref:System.Windows.Forms.ColumnHeader.Text%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.ColumnHeader.TextAlign%2A?displayProperty=nameWithType>, und <xref:System.Windows.Forms.ColumnHeader.Width%2A?displayProperty=nameWithType> Eigenschaften. Um dieses Beispiel auszuführen, fügen Sie in den folgenden Code in ein Formular enthält ein <xref:System.Windows.Forms.ListView> Objekt mit dem Namen `ListView1` und <xref:System.Windows.Forms.TextBox> mit dem Namen `TextBox1`. Rufen Sie die `InitializeListView` Methode aus dem Konstruktor des Formulars oder <xref:System.Windows.Forms.Form.Load> -Ereignishandler.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTest">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Stellt Elementinformationen bereit, wenn eine x- und eine y-Koordinate angegeben sind.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewHitTestInfo HitTest (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewHitTestInfo HitTest(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.HitTest(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewHitTestInfo ^ HitTest(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.HitTest : System.Drawing.Point -&gt; System.Windows.Forms.ListViewHitTestInfo" Usage="listView.HitTest point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewHitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">Der <see cref="T:System.Drawing.Point" />, an dem die Elementinformationen abgerufen werden sollen. Die Koordinaten sind relativ zur linken oberen Ecke des Steuerelements.</param>
        <summary>Stellt Elementinformationen bereit, wenn ein Punkt angegeben ist.</summary>
        <returns>Elementinformationen, wenn ein Punkt angegeben ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um zu bestimmen, ob ein Punkt eines Elements oder Unterelements wird und, in dem das Element der befindet, z. B. auf den Bereich für Bezeichnung oder Bild. Befinden sich die Koordinaten außerhalb des Steuerelements, das zurückgegebene <xref:System.Windows.Forms.ListViewHitTestInfo> Objekt verfügt über eine <xref:System.Windows.Forms.ListViewHitTestInfo.Location%2A> Eigenschaft von "None"; und die <xref:System.Windows.Forms.ListViewHitTestInfo.Item%2A> und <xref:System.Windows.Forms.ListViewHitTestInfo.SubItem%2A> Eigenschaften festgelegt werden, um `null`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Punkt enthält Koordinaten, die kleiner als 0 (null) sind.</exception>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewHitTestInfo HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewHitTestInfo HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer) As ListViewHitTestInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewHitTestInfo ^ HitTest(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.HitTest : int * int -&gt; System.Windows.Forms.ListViewHitTestInfo" Usage="listView.HitTest (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewHitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Die x-Koordinate, an der die Elementinformationen abgerufen werden sollen. Die Koordinate ist relativ zur linken oberen Ecke des Steuerelements.</param>
        <param name="y">Die y-Koordinate, an der die Elementinformationen abgerufen werden sollen. Die Koordinate ist relativ zur linken oberen Ecke des Steuerelements.</param>
        <summary>Stellt Elementinformationen bereit, wenn x- und y-Koordinaten angegeben sind.</summary>
        <returns>Elementinformationen, wenn x- und y-Koordinaten angegeben sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um zu bestimmen, ob ein Punkt in einem Element oder Unterelement ist, und, in dem das Element der befindet, z. B. auf den Bereich für Bezeichnung oder Bild. Befinden sich die Koordinaten außerhalb des Steuerelements, das zurückgegebene <xref:System.Windows.Forms.ListViewHitTestInfo> Objekt verfügt über eine <xref:System.Windows.Forms.ListViewHitTestInfo.Location%2A> Eigenschaft von "None"; und die <xref:System.Windows.Forms.ListViewHitTestInfo.Item%2A> und <xref:System.Windows.Forms.ListViewHitTestInfo.SubItem%2A> Eigenschaften festgelegt werden, um `null`.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Windows.Forms.ListView.HitTest%2A> Methode, um zu bestimmen, den Speicherort eines Maus-Ereignisses in einem <xref:System.Windows.Forms.ListView>. Um dieses Beispiel auszuführen, fügen Sie ihn in einer Windows-Formular mit einem <xref:System.Windows.Forms.ListView> mit dem Namen `listView1` , die mit Elementen aufgefüllt ist. Ordnen Sie die <xref:System.Windows.Forms.Control.MouseDown> -Ereignis für `listView1` mit der `listView1_MouseDown` -Methode in diesem Beispiel.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die x- oder y-Koordinate ist kleiner als 0 (null).</exception>
      </Docs>
    </Member>
    <Member MemberName="HotTracking">
      <MemberSignature Language="C#" Value="public bool HotTracking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HotTracking" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HotTracking" />
      <MemberSignature Language="VB.NET" Value="Public Property HotTracking As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HotTracking { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HotTracking : bool with get, set" Usage="System.Windows.Forms.ListView.HotTracking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Text eines Elements oder Unterelements als Link dargestellt wird, wenn der Mauszeiger darüber bewegt wird.</summary>
        <value>
          <see langword="true" />, wenn der Elementtext als Link dargestellt wird, wenn der Mauszeiger darüber bewegt wird, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Hot Track Willcause aktivieren die <xref:System.Windows.Forms.ListView.Activation%2A> Eigenschaft festgelegt werden, um <xref:System.Windows.Forms.ItemActivation.OneClick> und <xref:System.Windows.Forms.ListView.HoverSelection%2A> Eigenschaft festgelegt werden, um `true`. Darüber hinaus wird zur Laufzeit Bezeichnung Bearbeiten nicht zulässig, wenn hot Track aktiviert ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, eine <xref:System.Windows.Forms.ListView> mit hot Track aktiviert. Um dieses Beispiel auszuführen, fügen Sie in den folgenden Code in einem Windows Form, und rufen die `InitializeHotTrackingListView` Methode aus dem Konstruktor des Formulars oder <xref:System.Windows.Forms.Form.Load> -Ereignishandler.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HoverSelection">
      <MemberSignature Language="C#" Value="public bool HoverSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HoverSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HoverSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HoverSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HoverSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HoverSelection : bool with get, set" Usage="System.Windows.Forms.ListView.HoverSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob ein Element automatisch ausgewählt wird, wenn der Mauszeiger einige Sekunden auf dem betreffenden Element ruht, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn beim Zeigen mit dem Mauszeiger auf ein bestimmtes Element dieses automatisch ausgewählt wird, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft auf festgelegt ist `true`, die Benutzer kann verweisen auf ein Element in der <xref:System.Windows.Forms.ListView> Steuerelement, um das Element auszuwählen. Mehrere Elemente ausgewählt werden können (wenn die <xref:System.Windows.Forms.ListView.MultiSelect%2A> -Eigenschaftensatz auf "true") Sie die STRG-Taste gedrückt halten und auf jedes Element verweist. Sie können dieses Feature verwenden, um eine einfachere Methode für den Benutzer der Anwendung, um das Auswählen von Elementen im bereitzustellen der <xref:System.Windows.Forms.ListView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertionMark">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewInsertionMark InsertionMark { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewInsertionMark InsertionMark" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.InsertionMark" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertionMark As ListViewInsertionMark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewInsertionMark ^ InsertionMark { System::Windows::Forms::ListViewInsertionMark ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertionMark : System.Windows.Forms.ListViewInsertionMark" Usage="System.Windows.Forms.ListView.InsertionMark" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewInsertionMark</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt zum Anzeigen der erwarteten Position für das Ablegen ab, wenn ein Element innerhalb eines <see cref="T:System.Windows.Forms.ListView" />-Steuerelements gezogen wird.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.ListViewInsertionMark" />-Objekt, das die Einfügemarke darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView> einfügemarkenfunktion können Sie visuell die erwarteten Dateiablage-Speicherort in einem Drag & Drop-Vorgang, wenn ein Element an eine neue Position gezogen wird. Dieses Feature funktioniert nur, wenn die <xref:System.Windows.Forms.ListView.AutoArrange%2A> -Eigenschaftensatz auf `true` und wann die <xref:System.Windows.Forms.ListView> Steuerelement werden keine sortiert die Elemente automatisch. Um zu verhindern, dass automatische Sortierung, die <xref:System.Windows.Forms.ListView.Sorting%2A> Eigenschaft muss festgelegt werden, um <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> und <xref:System.Windows.Forms.ListView.View%2A> Eigenschaft muss festgelegt werden, um <xref:System.Windows.Forms.View.LargeIcon?displayProperty=nameWithType>, <xref:System.Windows.Forms.View.SmallIcon?displayProperty=nameWithType>, oder <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType>. Darüber hinaus die einfügemarkenfunktion möglicherweise nicht sichtbar, mit der <xref:System.Windows.Forms.ListView> Feature gruppieren, da die Grouping-Funktion die Elemente durch eine Gruppenmitgliedschaft sortiert.  
  
 Die <xref:System.Windows.Forms.ListViewInsertionMark> Klasse dient in der Regel in einem Handler für die <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> oder <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> Ereignis, um die Position der Einfügemarke zu aktualisieren, wie ein Element gezogen wird. Darüber hinaus wird in einem Handler für die <xref:System.Windows.Forms.Control.DragDrop?displayProperty=nameWithType> oder <xref:System.Windows.Forms.Control.MouseUp?displayProperty=nameWithType> Ereignis, um ein gezogenes Element am richtigen Speicherort einzufügen. Weitere Informationen finden Sie unter <xref:System.Windows.Forms.ListViewInsertionMark> und [Vorgehensweise: Anzeigen einer Einfügemarke in ein ListView-Steuerelement in Windows Forms](~/docs/framework/winforms/controls/how-to-display-an-insertion-mark-in-a-windows-forms-listview-control.md).  
  
> [!NOTE]
>  Die Einfügemarkenfunktion steht unter <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> nur zur Verfügung, wenn die Anwendung die  Methode aufruft. Unter früheren Betriebssystemen hat Code in Zusammenhang mit der Einfügemarke keine Auswirkungen, und die Einfügemarke wird daher nicht angezeigt. Daher kann die jeglicher Code, der die einfügemarkenfunktion hängt nicht ordnungsgemäß. Sie können Code, der bestimmt, ob dieses Feature verfügbar ist, einschließen möchten, und eine andere Funktionalität bereitstellen, wenn sie nicht verfügbar ist. Beispielsweise empfiehlt es sich der gesamte Code umgehen, der implementiert Drag & Drop-Element neu positionieren, wenn unter Betriebssystemen ausgeführt werden, die keine Einfügemarken unterstützen.  
>   
>  Diese Features werden von derselben Bibliothek bereitgestellt, die das Designfeature des Betriebssystems bereitstellt. Rufen Sie die <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType>-Methodenüberladung auf, und übergeben Sie den <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType>-Wert, um die Verfügbarkeit dieser Bibliothek zu überprüfen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Windows.Forms.ListView> einfügemarkenfunktion. In diesem Beispiel implementiert die Drag & Drop neuanordnung mit standard-Drop-Ereignisse. Die Position der Einfügemarke wird aktualisiert, in einem Handler für die <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> Ereignis. In diesem Handler wird die Position des Mauszeigers wird mit den Mittelpunkt des nächsten Elements verglichen, und das Ergebnis wird verwendet, um zu bestimmen, ob die Einfügemarke nach links oder rechts neben dem Element angezeigt wird.  
  
 [!code-cpp[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewInsertionMark" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="listView.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Einer der <see cref="T:System.Windows.Forms.Keys" />-Werte.</param>
        <summary>Bestimmt, ob es sich bei der angegebenen Taste um eine normale Eingabetaste handelt oder um eine Sondertaste, für die eine Vorverarbeitung erforderlich ist.</summary>
        <returns>
          <see langword="true" />, wenn die angegebene Taste eine normale Taste ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemActivate">
      <MemberSignature Language="C#" Value="public event EventHandler ItemActivate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ItemActivate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemActivate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemActivate As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ItemActivate;" />
      <MemberSignature Language="F#" Value="member this.ItemActivate : EventHandler " Usage="member this.ItemActivate : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Element aktiviert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.ItemActivate> Ereignis tritt auf, wenn der Benutzer ein oder mehrere Elemente in aktiviert die <xref:System.Windows.Forms.ListView> Steuerelement. Aktiviert der Benutzer kann ein Element mit einem Klick oder doppelklicken Sie darauf, abhängig vom Wert der <xref:System.Windows.Forms.ListView.Activation%2A> -Eigenschaft oder der Tastatur. Von innerhalb des ereignishandlers für die <xref:System.Windows.Forms.ListView.ItemActivate> Ereignis, die Sie verweisen können die <xref:System.Windows.Forms.ListView.SelectedItems%2A> oder <xref:System.Windows.Forms.ListView.SelectedIndices%2A> Eigenschaften, die Zugriff auf die Auflistung der in der ausgewählten Elemente der <xref:System.Windows.Forms.ListView> um zu bestimmen, welche Elemente aktiviert sind.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung des -Attributs veranschaulicht. Im Beispiel meldet sich ein Ereignishandler für das Vorhandensein der <xref:System.Windows.Forms.ListView.ItemActivate> Ereignis. In diesem Bericht können Sie entnehmen, wann das Ereignis tritt auf, können Sie beim Debuggen unterstützen. Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, beachten Sie, und Ersetzen Sie dabei <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, eine Instanz des Typs enthält <xref:System.Windows.Forms.ListView> mit dem Namen `ListView1`. Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.ListView.ItemActivate> Ereignis.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#473](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#473)]
 [!code-vb[System.Windows.Forms.EventExamples#473](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#473)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.Activation" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
      </Docs>
    </Member>
    <Member MemberName="ItemCheck">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemCheckEventHandler ItemCheck;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemCheckEventHandler ItemCheck" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemCheck" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCheck As ItemCheckEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemCheckEventHandler ^ ItemCheck;" />
      <MemberSignature Language="F#" Value="member this.ItemCheck : System.Windows.Forms.ItemCheckEventHandler " Usage="member this.ItemCheck : System.Windows.Forms.ItemCheckEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemCheckEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Aktivierungszustand eines Elements geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.CheckBoxes%2A> Eigenschaft muss festgelegt werden, auf "true" in der Reihenfolge für die Kontrollkästchen neben jedem Element im angezeigt werden die <xref:System.Windows.Forms.ListView> Steuerelement. Die <xref:System.Windows.Forms.ListView.ItemCheck> Ereignis tritt auf, wenn der Aktivierungszustand eines Elements geändert wird oder wenn die <xref:System.Windows.Forms.ListView.CheckBoxes%2A> -Eigenschaftensatz auf `true`. Sie können einen Ereignishandler für Erstellen der <xref:System.Windows.Forms.ListView.ItemCheck> Ereignis, um Aufgaben wie das Ändern des Status eines Elements oder einer anderen anwendungsspezifischen Aufgabe jedes Mal ein Element eingecheckt wird. die <xref:System.Windows.Forms.ListView> Steuerelement.  
  
> [!NOTE]
>  Wenn das Handle des Fensters nicht, wenn erstellt wurde die <xref:System.Windows.Forms.ListView.ItemCheck> -Ereignis ausgelöst wird, wird das Ereignis verzögert werden. Nachdem das Fensterhandle erstellt wurde, (wenn das Formular angezeigt wird), alle verzögert <xref:System.Windows.Forms.ListView.ItemCheck> Ereignisse ausgelöst. Weitere Informationen finden Sie unter <xref:System.Windows.Forms.Control.HandleCreated>.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, einen aktivierten <xref:System.Windows.Forms.ListView> Steuerelement, behandelt der <xref:System.Windows.Forms.ListView.ItemCheck> Ereignis. Die Methode verwendet die <xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A?displayProperty=nameWithType> und <xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A?displayProperty=nameWithType> Eigenschaften zum Abrufen und den Preis des ausgewählten Menüelemente zu berechnen. Um dieses Beispiel auszuführen, fügen Sie in den folgenden Code in ein Formular enthält ein `ListView` mit dem Namen `ListView1` und `TextBox` mit dem Namen `Textbox1`. Rufen Sie die `InititalizeListView` Methode aus dem Konstruktor des Formulars oder `Load` Methode. Sicherstellen, dass die <xref:System.Windows.Forms.ListView.ItemCheck> Ereignis ist mit der Ereignishandler in diesem Beispiel verbunden.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" />
        <altmember cref="T:System.Windows.Forms.ItemCheckEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ItemChecked">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemCheckedEventHandler ItemChecked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemCheckedEventHandler ItemChecked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemChecked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemChecked As ItemCheckedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemCheckedEventHandler ^ ItemChecked;" />
      <MemberSignature Language="F#" Value="member this.ItemChecked : System.Windows.Forms.ItemCheckedEventHandler " Usage="member this.ItemChecked : System.Windows.Forms.ItemCheckedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemCheckedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Aktivierungszustand eines Elements geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis ähnelt dem <xref:System.Windows.Forms.ListView.ItemCheck> Ereignis jedoch ausgelöst, nachdem das Element aktiviert wurde.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung des -Attributs veranschaulicht. Im Beispiel meldet sich ein Ereignishandler für das Vorhandensein der <xref:System.Windows.Forms.ListView.ItemChecked> Ereignis. In diesem Bericht können Sie entnehmen, wann das Ereignis tritt auf, können Sie beim Debuggen unterstützen. Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, beachten Sie, und Ersetzen Sie dabei <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.  
  
 Ein weiteres Beispiel finden Sie unter den <xref:System.Windows.Forms.ListView.ItemCheck> Ereignis. Der Code funktioniert ebenso gut, wenn der Ereignishandler angefügt ist die <xref:System.Windows.Forms.ListView.ItemChecked> Ereignis.  
  
 Um dieses Beispielcode auszuführen, fügen Sie ihn in ein Projekt, eine Instanz des Typs enthält <xref:System.Windows.Forms.ListView> mit dem Namen `ListView1`. Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.ListView.ItemChecked> Ereignis.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#475](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#475)]
 [!code-vb[System.Windows.Forms.EventExamples#475](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#475)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemDragEventHandler ItemDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemDragEventHandler ItemDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDrag As ItemDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemDragEventHandler ^ ItemDrag;" />
      <MemberSignature Language="F#" Value="member this.ItemDrag : System.Windows.Forms.ItemDragEventHandler " Usage="member this.ItemDrag : System.Windows.Forms.ItemDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Benutzer beginnt, ein Element zu ziehen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.ItemDrag>Tritt ein, wenn der Benutzer beginnt, ein Element zu ziehen. In der Regel der Ereignishandler für die <xref:System.Windows.Forms.ListView.ItemDrag> Ereignis führt die Aufgabe der Ziehvorgang durch einen Aufruf der <xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=nameWithType> Methode. Sie können dieses Ereignis die erforderlichen Aufgaben zum Ziehen von Elementen in und aus Ihrer Anwendungsverzeichnis ausführen <xref:System.Windows.Forms.ListView> Steuerelement.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung des -Attributs veranschaulicht. Im Beispiel meldet sich ein Ereignishandler für das Vorhandensein der <xref:System.Windows.Forms.ListView.ItemDrag> Ereignis. In diesem Bericht können Sie entnehmen, wann das Ereignis tritt auf, können Sie beim Debuggen unterstützen. Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, beachten Sie, und Ersetzen Sie dabei <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, eine Instanz des Typs enthält <xref:System.Windows.Forms.ListView> mit dem Namen `ListView1`. Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.ListView.ItemDrag> Ereignis.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#476](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#476)]
 [!code-vb[System.Windows.Forms.EventExamples#476](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#476)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" />
        <altmember cref="T:System.Windows.Forms.ItemDragEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ItemMouseHover">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ListViewItemMouseHoverEventHandler ItemMouseHover;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ListViewItemMouseHoverEventHandler ItemMouseHover" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemMouseHover" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemMouseHover As ListViewItemMouseHoverEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ListViewItemMouseHoverEventHandler ^ ItemMouseHover;" />
      <MemberSignature Language="F#" Value="member this.ItemMouseHover : System.Windows.Forms.ListViewItemMouseHoverEventHandler " Usage="member this.ItemMouseHover : System.Windows.Forms.ListViewItemMouseHoverEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItemMouseHoverEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn die Maus über ein Element bewegt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung des -Attributs veranschaulicht. Im Beispiel meldet sich ein Ereignishandler für das Vorhandensein der <xref:System.Windows.Forms.ListView.ItemMouseHover> Ereignis. In diesem Bericht können Sie entnehmen, wann das Ereignis tritt auf, können Sie beim Debuggen unterstützen. Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, beachten Sie, und Ersetzen Sie dabei <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, eine Instanz des Typs enthält <xref:System.Windows.Forms.ListView> mit dem Namen `ListView1`. Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.ListView.ItemMouseHover> Ereignis.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#477](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#477)]
 [!code-vb[System.Windows.Forms.EventExamples#477](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#477)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.ListViewItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/ListViewItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ListView.ListViewItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::ListViewItemCollection ^ Items { System::Windows::Forms::ListView::ListViewItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Windows.Forms.ListView.ListViewItemCollection" Usage="System.Windows.Forms.ListView.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewItemCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewItemCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+ListViewItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung mit allen Elementen im Steuerelement ab.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />, die alle Elemente im <see cref="T:System.Windows.Forms.ListView" />-Steuerelement enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mithilfe der <xref:System.Windows.Forms.ListView.ListViewItemCollection> von dieser Eigenschaft zurückgegeben wird, Sie können Elemente hinzufügen, Entfernen von Elementen und eine Anzahl von Elementen zu erhalten. Weitere Informationen zu Aufgaben, die mit den Elementen in der Auflistung ausgeführt werden können, finden Sie unter den <xref:System.Windows.Forms.ListView.ListViewItemCollection> – Referenzthemen zur Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.ListView>-Steuerelement mit je drei <xref:System.Windows.Forms.ListViewItem>- und <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>-Objekten erstellt, die für jedes Element angegeben werden. Im Beispiel wird ebenfalls ein <xref:System.Windows.Forms.ColumnHeader>-Objekt erstellt, um die Unterelemente in der Detailansicht anzuzeigen. Ebenfalls werden zwei <xref:System.Windows.Forms.ImageList>-Objekte im Codebeispiel erstellt, die Bilder für die <xref:System.Windows.Forms.ListViewItem>-Objekte bereitstellen. Diese <xref:System.Windows.Forms.ImageList>-Objekte werden zu den <xref:System.Windows.Forms.ListView.LargeImageList%2A>- und <xref:System.Windows.Forms.ListView.SmallImageList%2A>-Eigenschaften hinzugefügt. Im Beispiel werden folgende Eigenschaft bei der Erstellung des <xref:System.Windows.Forms.ListView>-Steuerelements verwendet:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Für dieses Beispiel ist erforderlich, dass Sie den Code zu einer <xref:System.Windows.Forms.Form>-Klasse hinzufügen und die Methode aufrufen, die im Beispiel aus dem Konstruktor oder einer anderen Methode der Form-Klasse erstellt wurde. Für das Beispiel ist ebenfalls erforderlich, dass die Bilder namens `MySmallImage1`, `MySmallImage2`, `MyLargeImage1` und `MyLargeImage2` sich im Stammverzeichnis von Laufwerk C befinden.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="ItemSelectionChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ListViewItemSelectionChangedEventHandler ItemSelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ListViewItemSelectionChangedEventHandler ItemSelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemSelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemSelectionChanged As ListViewItemSelectionChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ListViewItemSelectionChangedEventHandler ^ ItemSelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.ItemSelectionChanged : System.Windows.Forms.ListViewItemSelectionChangedEventHandler " Usage="member this.ItemSelectionChanged : System.Windows.Forms.ListViewItemSelectionChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItemSelectionChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Auswahlzustand eines Elements geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Im virtuellen Modus befindet die <xref:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged> Ereignis tritt auf, wenn der Auswahlzustand mehrerer Elemente geändert.  
  
 Die <xref:System.Windows.Forms.ListView.ItemSelectionChanged> Ereignis wird ausgegeben, wenn der Zustand von ausgewählten aufgehoben oder umgekehrt geändert wird.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung des -Attributs veranschaulicht. Im Beispiel meldet sich ein Ereignishandler für das Vorhandensein der <xref:System.Windows.Forms.ListView.ItemSelectionChanged> Ereignis. In diesem Bericht können Sie entnehmen, wann das Ereignis tritt auf, können Sie beim Debuggen unterstützen. Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, beachten Sie, und Ersetzen Sie dabei <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, eine Instanz des Typs enthält <xref:System.Windows.Forms.ListView> mit dem Namen `ListView1`. Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.ListView.ItemSelectionChanged> Ereignis.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#478](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#478)]
 [!code-vb[System.Windows.Forms.EventExamples#478](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#478)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged" />
      </Docs>
    </Member>
    <Member MemberName="LabelEdit">
      <MemberSignature Language="C#" Value="public bool LabelEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LabelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.LabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LabelEdit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LabelEdit : bool with get, set" Usage="System.Windows.Forms.ListView.LabelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Benutzer die Bezeichnungen von Elementen im Steuerelement bearbeiten können, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn der Benutzer die Bezeichnungen von Elementen zur Laufzeit bearbeiten kann, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.ListView.LabelEdit%2A> -Eigenschaftensatz auf `true`, wird der Benutzer kann den Text eines Elements zu ändern, indem Sie auf den Elementtext, um es auszuwählen, und klicken Sie dann auf den Elementtext erneut aus, um platzieren den Text der Bezeichnung in den Bearbeitungsmodus. Der Benutzer kann dann ändern oder ersetzen die textbezeichnung des Elements. Sie können die <xref:System.Windows.Forms.ListView.BeforeLabelEdit> und <xref:System.Windows.Forms.ListView.AfterLabelEdit> Ereignisse Aufgaben ausführen, bevor und nachdem der Benutzer den Text eines Elements bearbeitet. Der Text der Unterelemente kann nicht geändert werden, wenn diese Eigenschaft, um festgelegt wird `true`. Um den Text für Unterelemente zu ändern, können Sie ein Dialogfeld für Benutzer anzeigen, wenn sie ein Unterelement im Steuerelement doppelklicken.  
  
> [!NOTE]
>  Wenn die <xref:System.Windows.Forms.ListView.Activation%2A>-Eigenschaft auf <xref:System.Windows.Forms.ItemActivation.OneClick> oder <xref:System.Windows.Forms.ItemActivation.TwoClick> festgelegt ist, wird das Bearbeiten von Bezeichnungen unabhängig vom Wert der <xref:System.Windows.Forms.ListView.LabelEdit%2A>-Eigenschaft nicht zugelassen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.ListView>-Steuerelement mit je drei <xref:System.Windows.Forms.ListViewItem>- und <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>-Objekten erstellt, die für jedes Element angegeben werden. Im Beispiel wird ebenfalls ein <xref:System.Windows.Forms.ColumnHeader>-Objekt erstellt, um die Unterelemente in der Detailansicht anzuzeigen. Ebenfalls werden zwei <xref:System.Windows.Forms.ImageList>-Objekte im Codebeispiel erstellt, die Bilder für die <xref:System.Windows.Forms.ListViewItem>-Objekte bereitstellen. Diese <xref:System.Windows.Forms.ImageList>-Objekte werden zu den <xref:System.Windows.Forms.ListView.LargeImageList%2A>- und <xref:System.Windows.Forms.ListView.SmallImageList%2A>-Eigenschaften hinzugefügt. Im Beispiel werden folgende Eigenschaft bei der Erstellung des <xref:System.Windows.Forms.ListView>-Steuerelements verwendet:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Für dieses Beispiel ist erforderlich, dass Sie den Code zu einer <xref:System.Windows.Forms.Form>-Klasse hinzufügen und die Methode aufrufen, die im Beispiel aus dem Konstruktor oder einer anderen Methode der Form-Klasse erstellt wurde. Für das Beispiel ist ebenfalls erforderlich, dass die Bilder namens `MySmallImage1`, `MySmallImage2`, `MyLargeImage1` und `MyLargeImage2` sich im Stammverzeichnis von Laufwerk C befinden.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
        <altmember cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />
      </Docs>
    </Member>
    <Member MemberName="LabelWrap">
      <MemberSignature Language="C#" Value="public bool LabelWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LabelWrap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.LabelWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LabelWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LabelWrap : bool with get, set" Usage="System.Windows.Forms.ListView.LabelWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Elementbezeichnungen umbrochen werden, wenn Elemente im Steuerelement als Symbole angezeigt werden, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn Elementbezeichnungen bei der Anzeige von Elementen als Symbole umbrochen werden, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.ListView.LabelWrap%2A> -Eigenschaftensatz auf `true`, Text des Elements in die nächste Zeile des Texts umbrochen werden, wenn erforderlich. Wenn der Text länger als zwei Textzeilen ist, wird der Text gekürzt. Wenn der Benutzer das Element auswählt, wird der Elementtext angezeigt. Wenn die <xref:System.Windows.Forms.ListView.LabelWrap%2A> -Eigenschaftensatz auf `false`, alle Elementtext wird in einer einzelnen Zeile angezeigt. Der gesamte Elementtext wird angezeigt, wenn die <xref:System.Windows.Forms.ListView.LabelWrap%2A> nastaven NA hodnotu `false`. Diese Eigenschaft wird nur verwendet, wenn die <xref:System.Windows.Forms.ListView.View%2A> -Eigenschaftensatz auf <xref:System.Windows.Forms.View.LargeIcon> oder <xref:System.Windows.Forms.View.SmallIcon>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
      </Docs>
    </Member>
    <Member MemberName="LargeImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList LargeImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList LargeImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.LargeImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property LargeImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ LargeImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LargeImageList : System.Windows.Forms.ImageList with get, set" Usage="System.Windows.Forms.ListView.LargeImageList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Windows.Forms.ImageList" /> ab, die verwendet werden soll, wenn die Elemente im Steuerelement als große Symbole angezeigt werden, oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.ImageList" /> mit den Symbolen, die verwendet werden sollen, wenn die <see cref="P:System.Windows.Forms.ListView.View" />-Eigenschaft auf <see cref="F:System.Windows.Forms.View.LargeIcon" /> festgelegt ist. Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Windows.Forms.ListView.LargeImageList%2A> Eigenschaft können Sie angeben, ein <xref:System.Windows.Forms.ImageList> Objekt mit Symbolen, die verwendet werden, wenn die Elemente mit großen Symbolen angezeigt (wenn die <xref:System.Windows.Forms.ListView.View%2A> -Eigenschaftensatz auf <xref:System.Windows.Forms.View.LargeIcon>). Die <xref:System.Windows.Forms.ListView> -Steuerelement formatieren von Grafiken, akzeptiert die <xref:System.Windows.Forms.ImageList> -Steuerelement unterstützt wird, wenn die Anzeige von Symbolen. Die <xref:System.Windows.Forms.ListView> Steuerelement ist nicht beschränkt auf ICO-Dateien. Einmal eine <xref:System.Windows.Forms.ImageList> zugewiesen wird die <xref:System.Windows.Forms.ListView.LargeImageList%2A> -Eigenschaft, die Sie festlegen können die <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> Eigenschaft der einzelnen <xref:System.Windows.Forms.ListViewItem> in die <xref:System.Windows.Forms.ListView> Steuerelement an die Indexposition des Bilds in entsprechende der <xref:System.Windows.Forms.ImageList>. Die Größe der Symbole für die <xref:System.Windows.Forms.ListView.LargeImageList%2A> wird angegeben, indem die <xref:System.Windows.Forms.ImageList.ImageSize%2A>.  
  
 Da nur ein Index für die angegeben werden, kann die <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A?displayProperty=nameWithType> -Eigenschaft, die <xref:System.Windows.Forms.ImageList> Objekte in angegebenen die <xref:System.Windows.Forms.ListView.LargeImageList%2A> und <xref:System.Windows.Forms.ListView.SmallImageList%2A> Eigenschaften sollten die gleichen Indexpositionsbereichs für die anzuzeigenden Bilder aufweisen. Z. B. wenn die <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> Eigenschaft eine <xref:System.Windows.Forms.ListViewItem> festgelegt ist 0 ist, muss sich die Bilder, die für kleine und große Symbole an die gleiche Indexposition in die <xref:System.Windows.Forms.ImageList> Objekte in angegebenen die <xref:System.Windows.Forms.ListView.LargeImageList%2A> und <xref:System.Windows.Forms.ListView.SmallImageList%2A> Eigenschaften.  
  
> [!NOTE]
>  Wenn die Images mit Schlüsseln angegeben werden, benötigen Sie für kleine und große Versionen des Images an die gleiche Indexposition in der jeweiligen Bildliste platzieren. Beim Wechseln zwischen Ansichten wird die Indexposition des Bilds in einer Liste verwendet, um das Abbild aus der anderen, unabhängig vom angegebenen Schlüsselwert auszuwählen.  
  
 Festlegen der <xref:System.Windows.Forms.ImageList> verwenden, wenn die Elemente mit kleinen Symbolen angezeigt (allen Ansichtsmodi außer <xref:System.Windows.Forms.View.LargeIcon>), verwenden Sie die <xref:System.Windows.Forms.ListView.SmallImageList%2A> Eigenschaft. Wenn Sie Images Zustand anzuzeigen, verwenden Sie verwenden möchten die <xref:System.Windows.Forms.ListView.StateImageList%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.ListView>-Steuerelement mit je drei <xref:System.Windows.Forms.ListViewItem>- und <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>-Objekten erstellt, die für jedes Element angegeben werden. Im Beispiel wird ebenfalls ein <xref:System.Windows.Forms.ColumnHeader>-Objekt erstellt, um die Unterelemente in der Detailansicht anzuzeigen. Ebenfalls werden zwei <xref:System.Windows.Forms.ImageList>-Objekte im Codebeispiel erstellt, die Bilder für die <xref:System.Windows.Forms.ListViewItem>-Objekte bereitstellen. Diese <xref:System.Windows.Forms.ImageList>-Objekte werden zu den <xref:System.Windows.Forms.ListView.LargeImageList%2A>- und <xref:System.Windows.Forms.ListView.SmallImageList%2A>-Eigenschaften hinzugefügt. Im Beispiel werden folgende Eigenschaft bei der Erstellung des <xref:System.Windows.Forms.ListView>-Steuerelements verwendet:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Für dieses Beispiel ist erforderlich, dass Sie den Code zu einer <xref:System.Windows.Forms.Form>-Klasse hinzufügen und die Methode aufrufen, die im Beispiel aus dem Konstruktor oder einer anderen Methode der Form-Klasse erstellt wurde. Für das Beispiel ist ebenfalls erforderlich, dass die Bilder namens `MySmallImage1`, `MySmallImage2`, `MyLargeImage1` und `MyLargeImage2` sich im Stammverzeichnis von Laufwerk C befinden.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.SmallImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.StateImageList" />
      </Docs>
    </Member>
    <Member MemberName="ListViewItemSorter">
      <MemberSignature Language="C#" Value="public System.Collections.IComparer ListViewItemSorter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IComparer ListViewItemSorter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemSorter" />
      <MemberSignature Language="VB.NET" Value="Public Property ListViewItemSorter As IComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IComparer ^ ListViewItemSorter { System::Collections::IComparer ^ get(); void set(System::Collections::IComparer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ListViewItemSorter : System.Collections.IComparer with get, set" Usage="System.Windows.Forms.ListView.ListViewItemSorter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Sortiervergleich für das Steuerelement ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Collections.IComparer" />, der den Sortiervergleich für das Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> Eigenschaft können Sie zum Angeben des Objekts, der ausführt, die Sortierung der Elemente in einem <xref:System.Windows.Forms.ListView> steuern, wann die <xref:System.Windows.Forms.ListView.Sort%2A> Methode wird aufgerufen, oder wenn die Elemente der Liste hinzugefügt werden. Beachten Sie, dass Elemente nicht automatisch sortiert werden, wenn ihre Bezeichnungstext geändert wird.  
  
 Das angegebene Objekt muss eine Instanz einer Klasse, die implementiert werden die <xref:System.Collections.IComparer> -Schnittstelle, die eine einzelne Methode namens hat <xref:System.Collections.Comparer.Compare%2A?displayProperty=nameWithType>.  
  
 Sie können diese Eigenschaft verwenden, zu benutzerdefinierten Sortieren, z. B. wenn auf eine Spaltenüberschrift in der Detailansicht geklickt wird. Zu diesem Zweck erstellen Sie eine Klasse, implementiert die <xref:System.Collections.IComparer> Schnittstelle, und bietet einen Konstruktor, der den Index einer Spalte, nach dem sortiert akzeptiert. Danach können Sie implementieren einen Handler für die <xref:System.Windows.Forms.ListView.ColumnClick> -Ereignis, das eine Instanz dieser Klasse mit dem Index der Spalte, auf die geklickt wurde erstellt. Beim Festlegen der <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> Eigenschaft, um die neue Instanz der <xref:System.Windows.Forms.ListView> Steuerelement automatisch mithilfe des angegebenen Objekts sortiert wird. Nachfolgende Aufrufe der <xref:System.Windows.Forms.ListView.Sort%2A> Methode verwenden, das gleiche Objekt.  
  
> [!NOTE]
>  Beim Festlegen des Werts des der <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> -Eigenschaft, die <xref:System.Windows.Forms.ListView.Sort%2A> Methode wird automatisch aufgerufen.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt ein Formular, enthält eine <xref:System.Windows.Forms.ListView> Steuerelement, das Elemente aus, wenn eine Spalte in sortiert die <xref:System.Windows.Forms.ListView> -Steuerelement geklickt wird. Im Beispiel definiert eine Klasse namens `ListViewItemComparer` , implementiert die <xref:System.Collections.IComparer?displayProperty=nameWithType> -Schnittstelle, die führt die <xref:System.Windows.Forms.ListViewItem> Vergleich. Das Beispiel erstellt eine Instanz des `ListViewItemComparer` und verwendet sie zum Festlegen der <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> Eigenschaft der <xref:System.Windows.Forms.ListView> Steuerelement. Die <xref:System.Windows.Forms.ListView.Sort%2A> -Methodenaufruf in der <xref:System.Windows.Forms.ListView.ColumnClick> -Ereignishandler verwendet, die in definierten Methoden `ListViewItemComparer` , erfolgt die Sortierung der Elemente, die auf Grundlage der Spalte, auf die geklickt wird.  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="E:System.Windows.Forms.ListView.ColumnClick" />
      </Docs>
    </Member>
    <Member MemberName="MultiSelect">
      <MemberSignature Language="C#" Value="public bool MultiSelect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MultiSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.MultiSelect" />
      <MemberSignature Language="VB.NET" Value="Public Property MultiSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MultiSelect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MultiSelect : bool with get, set" Usage="System.Windows.Forms.ListView.MultiSelect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob mehrere Elemente ausgewählt werden können, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn mehrere Elemente im Steuerelement gleichzeitig ausgewählt werden können, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.ListView.MultiSelect%2A> -Eigenschaftensatz auf `true`, mehrere Elemente ausgewählt werden können, der <xref:System.Windows.Forms.ListView> Steuerelement. Um mehrere Elemente auszuwählen, muss der Benutzer die STRG-Taste gedrückt halten, beim Klicken die auszuwählenden Elemente. Aufeinander folgende Elemente können ausgewählt werden, indem Sie auf das erste Element auswählen und dann bei gedrückter Umschalttaste auf das letzte Element auswählen. Sie können der Mehrfachauswahl verwenden, zum Auswählen mehrerer Elemente in der <xref:System.Windows.Forms.ListView> steuern, und führen einen Vorgang für alle ausgewählten Elemente. Beispielsweise kann der Benutzer mehrere Elemente auswählen und per Rechtsklick ein ausgewähltes Element um ein Kontextmenü anzuzeigen, die eine Reihe von Aufgaben anzeigt, die für die ausgewählten Elemente ausgeführt werden können.  
  
 Um zu bestimmen, welche Elemente ausgewählt sind, in der <xref:System.Windows.Forms.ListView> steuern, verwenden Sie die <xref:System.Windows.Forms.ListView.SelectedItems%2A> Eigenschaft. Die <xref:System.Windows.Forms.ListView.SelectedItems%2A> Eigenschaft ermöglicht den Zugriff auf die <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection> , die eine Liste der ausgewählten Elemente enthält. Wenn Sie die Indexpositionen, in möchten der <xref:System.Windows.Forms.ListView.ListViewItemCollection> anstelle der Elemente können Sie die <xref:System.Windows.Forms.ListView.SelectedIndices%2A> Eigenschaft, die Zugriff auf die <xref:System.Windows.Forms.ListView.SelectedIndexCollection>.  
  
 Wenn Sie nicht, die in die Mehrfachauswahl zulässig möchten der <xref:System.Windows.Forms.ListView>, dennoch möchte den Benutzer bieten eine Möglichkeit, mehrere Elemente ausgewählt werden, können Sie Kontrollkästchen angezeigt, durch Festlegen der <xref:System.Windows.Forms.ListView.CheckBoxes%2A> Eigenschaft, um `true`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, eine <xref:System.Windows.Forms.ListView> , die mehrere Elemente ausgewählt werden können. Das Beispiel veranschaulicht das Festlegen der <xref:System.Windows.Forms.ListView.HideSelection%2A> und <xref:System.Windows.Forms.ListView.HeaderStyle%2A> Eigenschaften. Um dieses Beispiel auszuführen, fügen Sie in den folgenden Code in ein Formular enthält ein <xref:System.Windows.Forms.ListView> Objekt mit dem Namen `ListView1` und <xref:System.Windows.Forms.TextBox> mit dem Namen `TextBox1`. Rufen Sie die `InitializeListView` Methode aus dem Konstruktor des Formulars oder `Load` Methode.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
        <altmember cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />
        <altmember cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="OnAfterLabelEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterLabelEdit (System.Windows.Forms.LabelEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterLabelEdit(class System.Windows.Forms.LabelEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterLabelEdit (e As LabelEditEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterLabelEdit(System::Windows::Forms::LabelEditEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterLabelEdit : System.Windows.Forms.LabelEditEventArgs -&gt; unit&#xA;override this.OnAfterLabelEdit : System.Windows.Forms.LabelEditEventArgs -&gt; unit" Usage="listView.OnAfterLabelEdit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LabelEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.LabelEditEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnAfterLabelEdit%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Windows.Forms.ListView.AfterLabelEdit> Ereignis, um eine Bezeichnung neu bearbeitete auf alphabetische Zeichen beschränken. Im Beispiel wird die <xref:System.Text.ASCIIEncoding> Klasse, um den ASCII-Zeichencode der einzelnen Zeichen, der die neue Bezeichnung abzurufen. Wenn das Zeichen zwischen der ASCII-Codes, die Zahlen darstellen fällt, kann nicht die neue Bezeichnung für das Element angewendet werden. Dieses Beispiel erfordert, nach der Erstellung einer <xref:System.Windows.Forms.ListView> -Steuerelement auf einem Formular und Elemente hinzugefügt. Das Beispiel erfordert auch, dass Sie eine Verbindung hergestellt haben die <xref:System.Windows.Forms.ListView.AfterLabelEdit> Ereignis an den Ereignishandler, der im Beispielcode definiert. Zum Verwenden der <xref:System.Text.ASCIIEncoding> -Klasse, die Datei muss enthalten der <xref:System.Text> Namespace.  
  
 [!code-cpp[ListView.AfterLabelEdit#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CPP/form1.cpp#1)]
 [!code-csharp[ListView.AfterLabelEdit#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CS/form1.cs#1)]
 [!code-vb[ListView.AfterLabelEdit#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.AfterLabelEdit/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundImageChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackgroundImageChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackgroundImageChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnBackgroundImageChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackgroundImageChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackgroundImageChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBackgroundImageChanged : EventArgs -&gt; unit" Usage="listView.OnBackgroundImageChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnBackgroundImageChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnBackgroundImageChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnBackgroundImageChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnBeforeLabelEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeLabelEdit (System.Windows.Forms.LabelEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeLabelEdit(class System.Windows.Forms.LabelEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeLabelEdit (e As LabelEditEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeLabelEdit(System::Windows::Forms::LabelEditEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeLabelEdit : System.Windows.Forms.LabelEditEventArgs -&gt; unit&#xA;override this.OnBeforeLabelEdit : System.Windows.Forms.LabelEditEventArgs -&gt; unit" Usage="listView.OnBeforeLabelEdit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LabelEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.LabelEditEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnBeforeLabelEdit%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnCacheVirtualItems">
      <MemberSignature Language="C#" Value="protected virtual void OnCacheVirtualItems (System.Windows.Forms.CacheVirtualItemsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCacheVirtualItems(class System.Windows.Forms.CacheVirtualItemsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnCacheVirtualItems(System.Windows.Forms.CacheVirtualItemsEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCacheVirtualItems (e As CacheVirtualItemsEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCacheVirtualItems(System::Windows::Forms::CacheVirtualItemsEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCacheVirtualItems : System.Windows.Forms.CacheVirtualItemsEventArgs -&gt; unit&#xA;override this.OnCacheVirtualItems : System.Windows.Forms.CacheVirtualItemsEventArgs -&gt; unit" Usage="listView.OnCacheVirtualItems e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.CacheVirtualItemsEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.CacheVirtualItemsEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.CacheVirtualItems" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnCacheVirtualItems%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnCacheVirtualItems(System.Windows.Forms.CacheVirtualItemsEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnCacheVirtualItems(System.Windows.Forms.CacheVirtualItemsEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnClick (System.Windows.Forms.ColumnClickEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnClick(class System.Windows.Forms.ColumnClickEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnClick (e As ColumnClickEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnClick(System::Windows::Forms::ColumnClickEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnClick : System.Windows.Forms.ColumnClickEventArgs -&gt; unit&#xA;override this.OnColumnClick : System.Windows.Forms.ColumnClickEventArgs -&gt; unit" Usage="listView.OnColumnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnClickEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.ColumnClickEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.ColumnClick" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnColumnClick%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt ein Formular, enthält eine <xref:System.Windows.Forms.ListView> Steuerelement, das Elemente aus, wenn eine Spalte in sortiert die <xref:System.Windows.Forms.ListView> -Steuerelement geklickt wird. Im Beispiel definiert eine Klasse namens `ListViewItemComparer` , implementiert die <xref:System.Collections.IComparer?displayProperty=nameWithType> -Schnittstelle, die führt die <xref:System.Windows.Forms.ListViewItem> Vergleich. Das Beispiel erstellt eine Instanz des `ListViewItemComparer` und verwendet sie zum Festlegen der <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> Eigenschaft der <xref:System.Windows.Forms.ListView> Steuerelement. Die <xref:System.Windows.Forms.ListView.Sort%2A> -Methodenaufruf in der <xref:System.Windows.Forms.ListView.ColumnClick> -Ereignishandler verwendet, die in definierten Methoden `ListViewItemComparer` , erfolgt die Sortierung der Elemente, die auf Grundlage der Spalte, auf die geklickt wird.  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.ListView.ColumnClick" />
        <altmember cref="T:System.Windows.Forms.ColumnClickEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnColumnReordered">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnReordered (System.Windows.Forms.ColumnReorderedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnReordered(class System.Windows.Forms.ColumnReorderedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnReordered(System.Windows.Forms.ColumnReorderedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnReordered (e As ColumnReorderedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnReordered(System::Windows::Forms::ColumnReorderedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnReordered : System.Windows.Forms.ColumnReorderedEventArgs -&gt; unit&#xA;override this.OnColumnReordered : System.Windows.Forms.ColumnReorderedEventArgs -&gt; unit" Usage="listView.OnColumnReordered e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnReorderedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Forms.ColumnReorderedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.ColumnReordered" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnColumnReordered%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnColumnReordered(System.Windows.Forms.ColumnReorderedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnColumnReordered(System.Windows.Forms.ColumnReorderedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnWidthChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnWidthChanged (System.Windows.Forms.ColumnWidthChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnWidthChanged(class System.Windows.Forms.ColumnWidthChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnWidthChanged(System.Windows.Forms.ColumnWidthChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnWidthChanged (e As ColumnWidthChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnWidthChanged(System::Windows::Forms::ColumnWidthChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnWidthChanged : System.Windows.Forms.ColumnWidthChangedEventArgs -&gt; unit&#xA;override this.OnColumnWidthChanged : System.Windows.Forms.ColumnWidthChangedEventArgs -&gt; unit" Usage="listView.OnColumnWidthChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnWidthChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.ColumnWidthChangedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.ColumnWidthChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnColumnWidthChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanged(System.Windows.Forms.ColumnWidthChangedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanged(System.Windows.Forms.ColumnWidthChangedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnWidthChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnWidthChanging (System.Windows.Forms.ColumnWidthChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnWidthChanging(class System.Windows.Forms.ColumnWidthChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnWidthChanging(System.Windows.Forms.ColumnWidthChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnWidthChanging (e As ColumnWidthChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnWidthChanging(System::Windows::Forms::ColumnWidthChangingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnWidthChanging : System.Windows.Forms.ColumnWidthChangingEventArgs -&gt; unit&#xA;override this.OnColumnWidthChanging : System.Windows.Forms.ColumnWidthChangingEventArgs -&gt; unit" Usage="listView.OnColumnWidthChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnWidthChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.ColumnWidthChangingEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.ColumnWidthChanging" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.ColumnWidthChanging> Ereignis erfolgt keine Drag-Funktion, die Option "Fensterinhalt beim Ziehen anzeigen" ist deaktiviert, wenn das Fenster voll ist.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnColumnWidthChanging%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanging(System.Windows.Forms.ColumnWidthChangingEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanging(System.Windows.Forms.ColumnWidthChangingEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDrawColumnHeader">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawColumnHeader (System.Windows.Forms.DrawListViewColumnHeaderEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawColumnHeader(class System.Windows.Forms.DrawListViewColumnHeaderEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawColumnHeader (e As DrawListViewColumnHeaderEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawColumnHeader(System::Windows::Forms::DrawListViewColumnHeaderEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawColumnHeader : System.Windows.Forms.DrawListViewColumnHeaderEventArgs -&gt; unit&#xA;override this.OnDrawColumnHeader : System.Windows.Forms.DrawListViewColumnHeaderEventArgs -&gt; unit" Usage="listView.OnDrawColumnHeader e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawListViewColumnHeaderEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DrawListViewColumnHeaderEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.DrawColumnHeader" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnDrawColumnHeader%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDrawItem">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawItem (System.Windows.Forms.DrawListViewItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawItem(class System.Windows.Forms.DrawListViewItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawItem (e As DrawListViewItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawItem(System::Windows::Forms::DrawListViewItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawItem : System.Windows.Forms.DrawListViewItemEventArgs -&gt; unit&#xA;override this.OnDrawItem : System.Windows.Forms.DrawListViewItemEventArgs -&gt; unit" Usage="listView.OnDrawItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawListViewItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DrawListViewItemEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.DrawItem" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnDrawItem%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.DrawListViewItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnDrawSubItem">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawSubItem (System.Windows.Forms.DrawListViewSubItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawSubItem(class System.Windows.Forms.DrawListViewSubItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawSubItem (e As DrawListViewSubItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawSubItem(System::Windows::Forms::DrawListViewSubItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawSubItem : System.Windows.Forms.DrawListViewSubItemEventArgs -&gt; unit&#xA;override this.OnDrawSubItem : System.Windows.Forms.DrawListViewSubItemEventArgs -&gt; unit" Usage="listView.OnDrawSubItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawListViewSubItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DrawListViewSubItemEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.DrawSubItem" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnDrawSubItem%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DrawListViewSubItemEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
      </Docs>
    </Member>
    <Member MemberName="OnEnabledChanged">
      <MemberSignature Language="C#" Value="protected override void OnEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnEnabledChanged : EventArgs -&gt; unit" Usage="listView.OnEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="listView.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see langword="FontChanged" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="listView.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.HandleCreated" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="listView.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.HandleDestroyed" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemActivate">
      <MemberSignature Language="C#" Value="protected virtual void OnItemActivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemActivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemActivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemActivate(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemActivate : EventArgs -&gt; unit&#xA;override this.OnItemActivate : EventArgs -&gt; unit" Usage="listView.OnItemActivate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.ItemActivate" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnItemActivate%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.ListView.ItemActivate" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCheck">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCheck (System.Windows.Forms.ItemCheckEventArgs ice);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCheck(class System.Windows.Forms.ItemCheckEventArgs ice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCheck (ice As ItemCheckEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCheck(System::Windows::Forms::ItemCheckEventArgs ^ ice);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCheck : System.Windows.Forms.ItemCheckEventArgs -&gt; unit&#xA;override this.OnItemCheck : System.Windows.Forms.ItemCheckEventArgs -&gt; unit" Usage="listView.OnItemCheck ice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ice" Type="System.Windows.Forms.ItemCheckEventArgs" />
      </Parameters>
      <Docs>
        <param name="ice">Ein <see cref="T:System.Windows.Forms.ItemCheckEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.ItemCheck" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnItemCheck%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.ListView.ItemCheck" />
        <altmember cref="T:System.Windows.Forms.ItemCheckEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemChecked">
      <MemberSignature Language="C#" Value="protected virtual void OnItemChecked (System.Windows.Forms.ItemCheckedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemChecked(class System.Windows.Forms.ItemCheckedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemChecked(System.Windows.Forms.ItemCheckedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemChecked (e As ItemCheckedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemChecked(System::Windows::Forms::ItemCheckedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemChecked : System.Windows.Forms.ItemCheckedEventArgs -&gt; unit&#xA;override this.OnItemChecked : System.Windows.Forms.ItemCheckedEventArgs -&gt; unit" Usage="listView.OnItemChecked e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ItemCheckedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.ItemCheckedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.ItemChecked" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnItemChecked%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnItemChecked(System.Windows.Forms.ItemCheckedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnItemChecked(System.Windows.Forms.ItemCheckedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDrag (System.Windows.Forms.ItemDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDrag(class System.Windows.Forms.ItemDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDrag (e As ItemDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDrag(System::Windows::Forms::ItemDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDrag : System.Windows.Forms.ItemDragEventArgs -&gt; unit&#xA;override this.OnItemDrag : System.Windows.Forms.ItemDragEventArgs -&gt; unit" Usage="listView.OnItemDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ItemDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.ItemDragEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.ItemDrag" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnItemDrag%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.ListView.ItemDrag" />
        <altmember cref="T:System.Windows.Forms.ItemDragEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemMouseHover">
      <MemberSignature Language="C#" Value="protected virtual void OnItemMouseHover (System.Windows.Forms.ListViewItemMouseHoverEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemMouseHover(class System.Windows.Forms.ListViewItemMouseHoverEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemMouseHover(System.Windows.Forms.ListViewItemMouseHoverEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemMouseHover (e As ListViewItemMouseHoverEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemMouseHover(System::Windows::Forms::ListViewItemMouseHoverEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemMouseHover : System.Windows.Forms.ListViewItemMouseHoverEventArgs -&gt; unit&#xA;override this.OnItemMouseHover : System.Windows.Forms.ListViewItemMouseHoverEventArgs -&gt; unit" Usage="listView.OnItemMouseHover e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ListViewItemMouseHoverEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.ListViewItemMouseHoverEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.ItemMouseHover" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnItemMouseHover%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnItemMouseHover(System.Windows.Forms.ListViewItemMouseHoverEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnItemMouseHover(System.Windows.Forms.ListViewItemMouseHoverEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemSelectionChanged (System.Windows.Forms.ListViewItemSelectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemSelectionChanged(class System.Windows.Forms.ListViewItemSelectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemSelectionChanged(System.Windows.Forms.ListViewItemSelectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemSelectionChanged (e As ListViewItemSelectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemSelectionChanged(System::Windows::Forms::ListViewItemSelectionChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemSelectionChanged : System.Windows.Forms.ListViewItemSelectionChangedEventArgs -&gt; unit&#xA;override this.OnItemSelectionChanged : System.Windows.Forms.ListViewItemSelectionChangedEventArgs -&gt; unit" Usage="listView.OnItemSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ListViewItemSelectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.ListViewItemSelectionChangedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.ItemSelectionChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnItemSelectionChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnItemSelectionChanged(System.Windows.Forms.ListViewItemSelectionChangedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnItemSelectionChanged(System.Windows.Forms.ListViewItemSelectionChangedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected override void OnMouseHover (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseHover(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnMouseHover(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseHover (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseHover(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseHover : EventArgs -&gt; unit" Usage="listView.OnMouseHover e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.MouseHover" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.ListView.OnMouseHover%2A> Methode wird aufgerufen, wenn die Maus zeigt eine <xref:System.Windows.Forms.ListViewItem>, löst die Methode die <xref:System.Windows.Forms.ListView.ItemMouseHover> Ereignis.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnMouseHover%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnMouseHover(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnMouseHover(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : EventArgs -&gt; unit" Usage="listView.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.MouseLeave" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnParentChanged">
      <MemberSignature Language="C#" Value="protected override void OnParentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnParentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnParentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnParentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnParentChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnParentChanged : EventArgs -&gt; unit" Usage="listView.OnParentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.ParentChanged" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected override void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnResize(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnResize : EventArgs -&gt; unit" Usage="listView.OnResize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.Resize" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRetrieveVirtualItem">
      <MemberSignature Language="C#" Value="protected virtual void OnRetrieveVirtualItem (System.Windows.Forms.RetrieveVirtualItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRetrieveVirtualItem(class System.Windows.Forms.RetrieveVirtualItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnRetrieveVirtualItem(System.Windows.Forms.RetrieveVirtualItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRetrieveVirtualItem (e As RetrieveVirtualItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRetrieveVirtualItem(System::Windows::Forms::RetrieveVirtualItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRetrieveVirtualItem : System.Windows.Forms.RetrieveVirtualItemEventArgs -&gt; unit&#xA;override this.OnRetrieveVirtualItem : System.Windows.Forms.RetrieveVirtualItemEventArgs -&gt; unit" Usage="listView.OnRetrieveVirtualItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.RetrieveVirtualItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.RetrieveVirtualItemEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnRetrieveVirtualItem%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnRetrieveVirtualItem(System.Windows.Forms.RetrieveVirtualItemEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnRetrieveVirtualItem(System.Windows.Forms.RetrieveVirtualItemEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRightToLeftLayoutChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRightToLeftLayoutChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRightToLeftLayoutChanged : EventArgs -&gt; unit&#xA;override this.OnRightToLeftLayoutChanged : EventArgs -&gt; unit" Usage="listView.OnRightToLeftLayoutChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.RightToLeftLayoutChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSearchForVirtualItem">
      <MemberSignature Language="C#" Value="protected virtual void OnSearchForVirtualItem (System.Windows.Forms.SearchForVirtualItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSearchForVirtualItem(class System.Windows.Forms.SearchForVirtualItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnSearchForVirtualItem(System.Windows.Forms.SearchForVirtualItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSearchForVirtualItem (e As SearchForVirtualItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSearchForVirtualItem(System::Windows::Forms::SearchForVirtualItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSearchForVirtualItem : System.Windows.Forms.SearchForVirtualItemEventArgs -&gt; unit&#xA;override this.OnSearchForVirtualItem : System.Windows.Forms.SearchForVirtualItemEventArgs -&gt; unit" Usage="listView.OnSearchForVirtualItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.SearchForVirtualItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.SearchForVirtualItemEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.SearchForVirtualItem" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnSearchForVirtualItem%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnSearchForVirtualItem(System.Windows.Forms.SearchForVirtualItemEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnSearchForVirtualItem(System.Windows.Forms.SearchForVirtualItemEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedIndexChanged : EventArgs -&gt; unit&#xA;override this.OnSelectedIndexChanged : EventArgs -&gt; unit" Usage="listView.OnSelectedIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.SelectedIndexChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnSelectedIndexChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.ListView.SelectedIndexChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnSystemColorsChanged">
      <MemberSignature Language="C#" Value="protected override void OnSystemColorsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSystemColorsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnSystemColorsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSystemColorsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSystemColorsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSystemColorsChanged : EventArgs -&gt; unit" Usage="listView.OnSystemColorsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.SystemColorsChanged" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVirtualItemsSelectionRangeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnVirtualItemsSelectionRangeChanged (System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnVirtualItemsSelectionRangeChanged(class System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged(System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnVirtualItemsSelectionRangeChanged (e As ListViewVirtualItemsSelectionRangeChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnVirtualItemsSelectionRangeChanged(System::Windows::Forms::ListViewVirtualItemsSelectionRangeChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnVirtualItemsSelectionRangeChanged : System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs -&gt; unit&#xA;override this.OnVirtualItemsSelectionRangeChanged : System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs -&gt; unit" Usage="listView.OnVirtualItemsSelectionRangeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged(System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged(System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OwnerDraw">
      <MemberSignature Language="C#" Value="public bool OwnerDraw { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OwnerDraw" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.OwnerDraw" />
      <MemberSignature Language="VB.NET" Value="Public Property OwnerDraw As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OwnerDraw { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OwnerDraw : bool with get, set" Usage="System.Windows.Forms.ListView.OwnerDraw" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob das <see cref="T:System.Windows.Forms.ListView" />-Steuerelement vom Betriebssystem oder durch selbst bereitgestellten Code gezeichnet wird.</summary>
        <value>
          <see langword="true" />, wenn das <see cref="T:System.Windows.Forms.ListView" />-Steuerelement von Code gezeichnet wird, den Sie bereitstellen; <see langword="false" />, wenn das <see cref="T:System.Windows.Forms.ListView" />-Steuerelement vom Betriebssystem gezeichnet wird. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Windows.Forms.ListView> Steuerelement normalerweise vom Betriebssystem gezeichnet wird. Um die Darstellung anpassen <xref:System.Windows.Forms.ListView> Elemente, Unterelemente und Spaltenheader, Menge der <xref:System.Windows.Forms.ListView.OwnerDraw%2A> Eigenschaft `true` , und geben Sie einen Handler für eine oder mehrere der folgenden Ereignisse: <xref:System.Windows.Forms.ListView.DrawItem>, <xref:System.Windows.Forms.ListView.DrawSubItem>, <xref:System.Windows.Forms.ListView.DrawColumnHeader>. Dies wird Ownerdrawing bezeichnet. Bei der <xref:System.Windows.Forms.ListView.View%2A> -Eigenschaftensatz auf <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>, alle drei Ereignisse auftreten; andernfalls nur der <xref:System.Windows.Forms.ListView.DrawItem> Ereignis tritt auf.  
  
> [!NOTE]
>  Informationen zu den Unterelementen, die in der Regel in der Ansicht "Nebeneinander" angezeigt wird, als auch die Details anzuzeigen, aber in der Ansicht "Nebeneinander", es in einem Handler für gezeichnet werden muss die <xref:System.Windows.Forms.ListView.DrawItem> Ereignis. Die <xref:System.Windows.Forms.ListView.DrawSubItem> Ereignis erfolgt nicht für alle dazugehörigen untergeordneten Elemente für die keine <xref:System.Windows.Forms.ColumnHeader> Objekt wurde hinzugefügt die <xref:System.Windows.Forms.ListView.Columns%2A> Auflistung. Beachten Sie auch, dass das erste Unterelement der einzelnen <xref:System.Windows.Forms.ListViewItem> -Objekt stellt das übergeordnete Element selbst und wird in der ersten Spalte angezeigt.  
  
 Sie können in der Detailansicht, behandeln die <xref:System.Windows.Forms.ListView.DrawItem> -Ereignis zum Zeichnen der Elemente, die alle Unterelemente, z. B. den Hintergrund und Behandeln der <xref:System.Windows.Forms.ListView.DrawSubItem> -Ereignis zum Zeichnen der Elemente für einzelne Unterelemente, z.B. Textwerte. Sie können auch alle Elemente zeichnen, der <xref:System.Windows.Forms.ListView> steuern mit einem der beiden Ereignisse, obwohl dies weniger praktisch sein kann. Um Spaltenüberschriften in der Detailansicht zu zeichnen, müssen Sie behandeln die <xref:System.Windows.Forms.ListView.DrawColumnHeader> Ereignis.  
  
> [!NOTE]
>  Vermeiden Flimmern auftreten wenn Ownerdrawing, überschreiben die <xref:System.Windows.Forms.ListView> steuern, und legen Sie die <xref:System.Windows.Forms.ListView.DoubleBuffered%2A> Eigenschaft `true`.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie benutzerdefinierte Zeichnungen für eine <xref:System.Windows.Forms.ListView> Steuerelement. Die <xref:System.Windows.Forms.ListView> Steuerelement im Beispiel hat einen Hintergrund mit Farbverlauf. Unterelemente mit negativen Werten haben einen roten Vordergrund und erhält einen schwarzen Hintergrund.  
  
 Ein Handler für die <xref:System.Windows.Forms.ListView.DrawItem> Ereignis zeichnet den Hintergrund für das gesamte Element. Ein Handler für die <xref:System.Windows.Forms.ListView.DrawSubItem> Ereignis zeichnet die Textwerte sowie Text und Hintergrund für Unterelemente, die negative Werte haben. Ein Handler für die <xref:System.Windows.Forms.ListView.DrawColumnHeader> Ereignis zeichnet jede Spaltenüberschrift.  
  
 Ein <xref:System.Windows.Forms.ContextMenu> Komponente bietet eine Möglichkeit, zwischen der Ansicht und der Listenansicht zu wechseln. In der Listenansicht, nur die <xref:System.Windows.Forms.ListView.DrawItem> Ereignis wird ausgelöst. In diesem Fall Text und Hintergrund sowohl stammen der <xref:System.Windows.Forms.ListView.DrawItem> -Ereignishandler.  
  
 [!code-csharp[ListViewOwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#1)]
 [!code-vb[ListViewOwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawColumnHeader" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.ListView.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Abstand zwischen dem <see cref="T:System.Windows.Forms.ListView" />-Steuerelement und seinem Inhalt ab oder legt diesen fest.</summary>
        <value>Der <see cref="T:System.Windows.Forms.Padding" />, der den Abstand zwischen dem <see cref="T:System.Windows.Forms.ListView" />-Steuerelement und seinem Inhalt angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist für diese Klasse nicht relevant.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.ListView.Padding" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberSignature Language="F#" Value="member this.Paint : System.Windows.Forms.PaintEventHandler " Usage="member this.Paint : System.Windows.Forms.PaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn das <see cref="T:System.Windows.Forms.ListView" />-Steuerelement gezeichnet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView> -Steuerelement vom Betriebssystem gezeichnet wird oder gezeichnet, sodass der <xref:System.Windows.Forms.ListView.Paint> Ereignis wird nie ausgelöst. Weitere Informationen zu Ownerdrawing-, finden Sie unter den <xref:System.Windows.Forms.ListView.OwnerDraw%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RealizeProperties">
      <MemberSignature Language="C#" Value="protected void RealizeProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RealizeProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.RealizeProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RealizeProperties ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RealizeProperties();" />
      <MemberSignature Language="F#" Value="member this.RealizeProperties : unit -&gt; unit" Usage="listView.RealizeProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initialisiert die Eigenschaften des <see cref="T:System.Windows.Forms.ListView" />-Steuerelements, die die Darstellung des Steuerelements verwalten.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedrawItems">
      <MemberSignature Language="C#" Value="public void RedrawItems (int startIndex, int endIndex, bool invalidateOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedrawItems(int32 startIndex, int32 endIndex, bool invalidateOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.RedrawItems(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedrawItems (startIndex As Integer, endIndex As Integer, invalidateOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedrawItems(int startIndex, int endIndex, bool invalidateOnly);" />
      <MemberSignature Language="F#" Value="member this.RedrawItems : int * int * bool -&gt; unit" Usage="listView.RedrawItems (startIndex, endIndex, invalidateOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="endIndex" Type="System.Int32" />
        <Parameter Name="invalidateOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startIndex">Der Index für das erste Element im neu zu zeichnenden Bereich.</param>
        <param name="endIndex">Der Index für das letzte Element des neu zu zeichnenden Bereichs.</param>
        <param name="invalidateOnly">
          <see langword="true" />, um den Bereich von Elementen ungültig zu machen, <see langword="false" />, um die Elemente ungültig zu machen und neu zu zeichnen.</param>
        <summary>Erzwingt das Neuzeichnen eines Bereichs von <see cref="T:System.Windows.Forms.ListViewItem" />-Objekten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.RedrawItems%2A> Methode sein kann, ob die <xref:System.Windows.Forms.ListView> befindet sich im virtuellen Modus oder im normalen Modus.  
  
 Wenn die <xref:System.Windows.Forms.ListView.BeginUpdate%2A> -Methode aufgerufen wurde, vor dem Aufruf von <xref:System.Windows.Forms.ListView.RedrawItems%2A>, das Neuzeichnen wird nicht ausgeführt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startIndex" /> oder <paramref name="endIndex" /> ist kleiner als 0 (null), größer oder gleich der Anzahl von Elementen in der <see cref="T:System.Windows.Forms.ListView" /> bzw. im virtuellen Modus größer als der Wert von <see cref="P:System.Windows.Forms.ListView.VirtualListSize" />.  
  
- oder -  
Der angegebene <paramref name="startIndex" /> ist größer als der <paramref name="endIndex." />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RetrieveVirtualItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.RetrieveVirtualItemEventHandler RetrieveVirtualItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.RetrieveVirtualItemEventHandler RetrieveVirtualItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.RetrieveVirtualItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RetrieveVirtualItem As RetrieveVirtualItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::RetrieveVirtualItemEventHandler ^ RetrieveVirtualItem;" />
      <MemberSignature Language="F#" Value="member this.RetrieveVirtualItem : System.Windows.Forms.RetrieveVirtualItemEventHandler " Usage="member this.RetrieveVirtualItem : System.Windows.Forms.RetrieveVirtualItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RetrieveVirtualItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich <see cref="T:System.Windows.Forms.ListView" /> im virtuellen Modus befindet und ein <see cref="T:System.Windows.Forms.ListViewItem" /> erforderlich ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine <xref:System.Windows.Forms.ListView> Objekt befindet sich im virtuellen Modus befindet, wird erstellt <xref:System.Windows.Forms.ListViewItem> Objekte dynamisch anstelle der <xref:System.Windows.Forms.ListView.Items%2A> Auflistung. Dieses Ereignis wird ausgelöst, wenn das Objekt erstellen, muss ein <xref:System.Windows.Forms.ListViewItem> Objekt. Einen Handler für dieses Ereignis sollte die entsprechende erstellen <xref:System.Windows.Forms.ListViewItem> oder aus dem Cache abzurufen, und übergeben Sie ihn anschließend in der die <xref:System.Windows.Forms.RetrieveVirtualItemEventArgs.Item%2A> Eigenschaft.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Festlegen eines Ereignishandlers für dieses Ereignis veranschaulicht: In diesem Beispiel benötigt listView1 jedes <xref:System.Windows.Forms.ListViewItem> das Quadrat der dessen Index angezeigt. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Windows.Forms.ListView.VirtualMode%2A> Eigenschaft.  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Windows.Forms.RetrieveVirtualItemEventArgs.Item" />-Eigenschaft ist nicht auf ein Element festgelegt, wenn das <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" />-Ereignis behandelt wird.</exception>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayout">
      <MemberSignature Language="C#" Value="public virtual bool RightToLeftLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeftLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.RightToLeftLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeftLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RightToLeftLayout { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeftLayout : bool with get, set" Usage="System.Windows.Forms.ListView.RightToLeftLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Layout des Steuerelements von rechts nach links erfolgt, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, um anzugeben, dass das Layout des <see cref="T:System.Windows.Forms.ListView" />-Steuerelements von rechts nach links erfolgt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView> Eigenschaft ist für die Verwendung mit internationale Anwendungen, in denen die Sprache wird von rechts nach links gelesen. Setzen Sie <xref:System.Windows.Forms.ListView> und <xref:System.Windows.Forms.RightToLeft> auf Inhalt und den Text des Steuerelements "true" angeordnet werden von rechts nach links.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.RightToLeftLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RightToLeftLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RightToLeftLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.RightToLeftLayoutChanged : EventHandler " Usage="member this.RightToLeftLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.ListView.RightToLeftLayout" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung des -Attributs veranschaulicht. Im Beispiel meldet sich ein Ereignishandler für das Vorhandensein der <xref:System.Windows.Forms.ListView.RightToLeftLayoutChanged> Ereignis. In diesem Bericht können Sie entnehmen, wann das Ereignis tritt auf, können Sie beim Debuggen unterstützen. Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, beachten Sie, und Ersetzen Sie dabei <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, eine Instanz des Typs enthält <xref:System.Windows.Forms.ListView> mit dem Namen `ListView1`. Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.ListView.RightToLeftLayoutChanged> Ereignis.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#462](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#462)]
 [!code-vb[System.Windows.Forms.EventExamples#462](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#462)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scrollable">
      <MemberSignature Language="C#" Value="public bool Scrollable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Scrollable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Scrollable" />
      <MemberSignature Language="VB.NET" Value="Public Property Scrollable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Scrollable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Scrollable : bool with get, set" Usage="System.Windows.Forms.ListView.Scrollable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob dem Steuerelement eine Bildlaufleiste hinzugefügt wird, wenn nicht genügend Platz für die Anzeige aller Elemente vorhanden ist, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn dem Steuerelement eine Bildlaufleiste hinzugefügt wird, um ggf. alle Elemente anzeigen zu können, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft auf festgelegt ist `true`, <xref:System.Windows.Forms.ListView> zeigt eine vertikale Bildlaufleiste verwenden, wenn die Anzahl der Elemente die Größe des Clientbereichs des Steuerelements überschreitet. Sie können diese Eigenschaft verwenden, um sicherzustellen, dass der Benutzer alle Elemente zugreifen kann, die in verfügbaren der <xref:System.Windows.Forms.ListView> Steuerelement.  
  
> [!NOTE]
>  In Versionen von der [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] vor Version 2.0, die Spaltenüberschriften wurden nicht richtig gezeichnet, beim Festlegen dieser Eigenschaft auf `false` und Ändern der Größe des Steuerelements, um es zu vergrößern. Um dieses Problem zu umgehen, legen Sie diese Eigenschaft auf `true` in einem <xref:System.Windows.Forms.Form.ResizeBegin> -Ereignishandler und wieder in `false` in einer <xref:System.Windows.Forms.Form.ResizeEnd> -Ereignishandler.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchForVirtualItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.SearchForVirtualItemEventHandler SearchForVirtualItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.SearchForVirtualItemEventHandler SearchForVirtualItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.SearchForVirtualItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SearchForVirtualItem As SearchForVirtualItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::SearchForVirtualItemEventHandler ^ SearchForVirtualItem;" />
      <MemberSignature Language="F#" Value="member this.SearchForVirtualItem : System.Windows.Forms.SearchForVirtualItemEventHandler " Usage="member this.SearchForVirtualItem : System.Windows.Forms.SearchForVirtualItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SearchForVirtualItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich <see cref="T:System.Windows.Forms.ListView" /> im virtuellen Modus befindet und eine Suche ausgeführt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt auf, wenn eine <xref:System.Windows.Forms.ListView> im virtuellen Modus befindet und die <xref:System.Windows.Forms.ListView.FindNearestItem%2A> oder <xref:System.Windows.Forms.ListView.FindItemWithText%2A> Methode wird aufgerufen. Wenn das Ereignis verarbeiten, müssen Sie berechnen, die aus der Liste der Elemente, die vom Element der <xref:System.Windows.Forms.ListView.Items%2A> Eigenschaft entspricht den Suchkriterien entsprechen, und legen die <xref:System.Windows.Forms.SearchForVirtualItemEventArgs.Index%2A?displayProperty=nameWithType> Eigenschaft auf den Index des der <xref:System.Windows.Forms.ListViewItem>. Wenn ein Element nicht angegeben wird, <xref:System.Windows.Forms.ListView.FindNearestItem%2A> und <xref:System.Windows.Forms.ListView.FindItemWithText%2A> zurück `null`.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung des -Attributs veranschaulicht. Im Beispiel gibt eine Suche die nächste Übereinstimmung mit einer angegebenen Ganzzahl in einer Liste von ersten zehntausend Quadrate zurück. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Windows.Forms.ListView.VirtualMode%2A> Eigenschaft.  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#4)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.SelectedIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedIndexChanged : EventHandler " Usage="member this.SelectedIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn die <see cref="P:System.Windows.Forms.ListView.SelectedIndices" />-Auflistung geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.SelectedIndices%2A> Auflistung geändert wird, wenn die <xref:System.Windows.Forms.ListViewItem.Selected%2A> Eigenschaft eine <xref:System.Windows.Forms.ListViewItem> Änderungen. Die Eigenschaftenänderung kann programmgesteuert auftreten oder wenn der Benutzer wählt ein Element oder hebt die Auswahl eines Elements. Wenn der Benutzer ein Element auswählt, ohne zum Ausführen der Auswahl mehrerer Elemente STRG-Taste drücken, löscht das Steuerelement zuerst die vorherige Auswahl. In diesem Fall tritt dieses Ereignis, einmal für jedes Element, das zuvor ausgewählt wurde und ein weiteres Mal für das neu ausgewählte Element.  
  
 Um zu bestimmen, welche Elemente ausgewählt sind, in der <xref:System.Windows.Forms.ListView> steuern, verwenden Sie die <xref:System.Windows.Forms.ListView.SelectedItems%2A> Eigenschaft, die Zugriff auf die <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection>. Sie können angeben, erstellen einen Ereignishandler für dieses Ereignis, um Aufgaben auszuführen, wenn eine Änderung der ausgewählten Elemente in der <xref:System.Windows.Forms.ListView> Steuerelement.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Windows.Forms.ListView.SelectedItems%2A> Eigenschaft <xref:System.Windows.Forms.ListView.SelectedIndexChanged> Ereignis <xref:System.Windows.Forms.ListView.HeaderStyle%2A> Member, und die <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection> Klasse. Um dieses Beispiel auszuführen, fügen Sie in den folgenden Code in ein Formular enthält ein <xref:System.Windows.Forms.ListView> Objekt mit dem Namen `ListView1` und <xref:System.Windows.Forms.TextBox> mit dem Namen `TextBox1`. Rufen Sie die `InitializeListView` Methode aus dem Konstruktor des Formulars oder `Load` Methode. Dieses Beispiel erfordert, dass der Ereignishandler ordnungsgemäß zugeordnet ist. die <xref:System.Windows.Forms.ListView.SelectedIndexChanged> Ereignis  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.ItemSelectionChanged" />
        <altmember cref="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndices">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.SelectedIndexCollection SelectedIndices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/SelectedIndexCollection SelectedIndices" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SelectedIndices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedIndices As ListView.SelectedIndexCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::SelectedIndexCollection ^ SelectedIndices { System::Windows::Forms::ListView::SelectedIndexCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedIndices : System.Windows.Forms.ListView.SelectedIndexCollection" Usage="System.Windows.Forms.ListView.SelectedIndices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+SelectedIndexCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Indizes der ausgewählten Elemente im Steuerelement ab.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />, die die Indizes der ausgewählten Elemente enthält. Wenn gegenwärtig keine Elemente ausgewählt sind, wird eine leere <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" /> zurückgegeben.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.SelectedIndices%2A> Eigenschaft enthält keine Indizes aus, wenn die Eigenschaft, bevor zugegriffen wird die <xref:System.Windows.Forms.ListView> Handle erstellt wird bei der <xref:System.Windows.Forms.ListView> anfänglich für die Anzeige im Formular geladen wird. Sie können überprüfen, um festzustellen, ob das Handle erstellt wird, mit der <xref:System.Windows.Forms.Control.IsHandleCreated%2A> Eigenschaft. Wenn die <xref:System.Windows.Forms.ListView.MultiSelect%2A> -Eigenschaftensatz auf `true`, gibt diese Eigenschaft eine Auflistung, die die Indizes aller Elemente, die im ausgewählten enthält die <xref:System.Windows.Forms.ListView>. Für eine Einfachauswahl <xref:System.Windows.Forms.ListView>, gibt diese Eigenschaft eine Auflistung mit einem einzelnen Element mit dem Index, der das einzige ausgewählte Element in der <xref:System.Windows.Forms.ListView>. Weitere Informationen zu Aufgaben, die mit den Elementen in der Auflistung ausgeführt werden können, finden Sie unter <xref:System.Windows.Forms.ListView.SelectedIndexCollection>.  
  
 Sollten Sie eine Auflistung der Elemente abzurufen, die im ausgewählten der <xref:System.Windows.Forms.ListView> -Steuerelement, statt die Indexpositionen der Elemente, die ausgewählt sind, verwenden die <xref:System.Windows.Forms.ListView.SelectedItems%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Windows.Forms.ListView.SelectedIndices%2A>, <xref:System.Windows.Forms.ListView.SelectedIndexChanged>, und <xref:System.Windows.Forms.ListView.HeaderStyle%2A> Elemente und die <xref:System.Windows.Forms.ListView.SelectedIndexCollection> Klasse. Um dieses Beispiel auszuführen, fügen Sie in den folgenden Code in ein Formular enthält ein <xref:System.Windows.Forms.ListView> Objekt mit dem Namen `ListView1` und <xref:System.Windows.Forms.TextBox> mit dem Namen `TextBox1`. Rufen Sie die `InitializeListView` Methode aus dem Konstruktor des Formulars oder `Load` Methode. Für dieses Beispiel ist der Ereignishandler ordnungsgemäß zugeordnet ist die <xref:System.Windows.Forms.ListView.SelectedIndexChanged> Ereignis.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView1#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#3)]
[!code-csharp[System.Windows.Forms.ListView1#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#3)]
[!code-vb[System.Windows.Forms.ListView1#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItems">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.SelectedListViewItemCollection SelectedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/SelectedListViewItemCollection SelectedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SelectedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedItems As ListView.SelectedListViewItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::SelectedListViewItemCollection ^ SelectedItems { System::Windows::Forms::ListView::SelectedListViewItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItems : System.Windows.Forms.ListView.SelectedListViewItemCollection" Usage="System.Windows.Forms.ListView.SelectedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+SelectedListViewItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die im Steuerelement ausgewählten Elemente ab.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" />, die die im Steuerelement ausgewählten Elemente enthält. Wenn gegenwärtig keine Elemente ausgewählt sind, wird eine leere <see cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" /> zurückgegeben.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.SelectedItems%2A> Eigenschaft enthält keine Elemente aus, wenn die Eigenschaft, bevor zugegriffen wird die <xref:System.Windows.Forms.ListView> Handle erstellt wird bei der <xref:System.Windows.Forms.ListView> anfänglich für die Anzeige im Formular geladen wird. Sie können überprüfen, um festzustellen, ob das Handle erstellt wird, mit der <xref:System.Windows.Forms.Control.IsHandleCreated%2A> Eigenschaft. Wenn die <xref:System.Windows.Forms.ListView.MultiSelect%2A> -Eigenschaftensatz auf `true`, gibt diese Eigenschaft eine Auflistung mit den Elementen, die im ausgewählten der <xref:System.Windows.Forms.ListView>. Für eine Einfachauswahl <xref:System.Windows.Forms.ListView>, diese Eigenschaft gibt eine Auflistung mit das einzige ausgewählte Element in der <xref:System.Windows.Forms.ListView>. Weitere Informationen zu Aufgaben, die mit den Elementen in der Auflistung ausgeführt werden können, finden Sie unter <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection>.  
  
 Wenn Sie eine Auflistung von Indexpositionen in abrufen möchten die <xref:System.Windows.Forms.ListView.ListViewItemCollection> der Elemente, die im ausgewählten der <xref:System.Windows.Forms.ListView> -Steuerelement, statt die Elemente, die ausgewählt sind, verwenden die <xref:System.Windows.Forms.ListView.SelectedIndices%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Windows.Forms.ListView.SelectedItems%2A>, <xref:System.Windows.Forms.ListView.SelectedIndexChanged> Ereignis und <xref:System.Windows.Forms.ListView.HeaderStyle%2A> Elemente und die <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection> Klasse. Um dieses Beispiel auszuführen, fügen Sie in den folgenden Code in ein Formular enthält ein <xref:System.Windows.Forms.ListView> Objekt mit dem Namen `ListView1` und <xref:System.Windows.Forms.TextBox> mit dem Namen `TextBox1`. Rufen Sie die `InitializeListView` Methode aus dem Konstruktor des Formulars oder `Load` Methode. Für dieses Beispiel ist der Ereignishandler ordnungsgemäß zugeordnet ist die <xref:System.Windows.Forms.ListView.SelectedIndexChanged> Ereignis  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
      </Docs>
    </Member>
    <Member MemberName="ShowGroups">
      <MemberSignature Language="C#" Value="public bool ShowGroups { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowGroups" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ShowGroups" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowGroups As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowGroups { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowGroups : bool with get, set" Usage="System.Windows.Forms.ListView.ShowGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Elemente in Gruppen angezeigt werden, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, um Elemente in Gruppen anzuzeigen, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zugewiesene Gruppen eine <xref:System.Windows.Forms.ListView> Steuerelement angezeigt werden, wenn die <xref:System.Windows.Forms.ListView.View%2A> Eigenschaft auf einen Wert festgelegt ist als <xref:System.Windows.Forms.View.List>. Die <xref:System.Windows.Forms.ListView> gruppenfunktion ermöglicht das Erstellen von visuellen Gruppen von logisch zusammengehörigen <xref:System.Windows.Forms.ListView> Elemente auf Windows XP und Windows Server 2003. Um dieses Feature zu aktivieren, muss Ihre Anwendung Aufrufen der <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> Methode. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Windows.Forms.ListView.Groups%2A>-Eigenschaft.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Groups" />
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
        <altmember cref="T:System.Windows.Forms.ListViewGroupCollection" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="ShowItemToolTips">
      <MemberSignature Language="C#" Value="public bool ShowItemToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowItemToolTips" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ShowItemToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowItemToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowItemToolTips { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowItemToolTips : bool with get, set" Usage="System.Windows.Forms.ListView.ShowItemToolTips" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob für die in <see cref="T:System.Windows.Forms.ListViewItem" /> enthaltenen <see cref="T:System.Windows.Forms.ListView" />-Objekte die QuickInfo angezeigt wird, oder legt diesen Wert fest.</summary>
        <value>
          <see langword="true" />, wenn die <see cref="T:System.Windows.Forms.ListViewItem" />-QuickInfo angezeigt werden soll, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.ListView.ShowItemToolTips%2A> -Eigenschaftensatz auf `true`, <xref:System.Windows.Forms.ListViewItem> , bei dem eine QuickInfo wird angezeigt; andernfalls wird nichts angezeigt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Windows.Forms.ListView.ShowItemToolTips%2A> und <xref:System.Windows.Forms.ListViewItem.ToolTipText%2A?displayProperty=nameWithType> Eigenschaften. Um dieses Beispiel auszuführen, fügen Sie den Code in einem Windows Form, und rufen `InitializeItemsWithToolTips` aus den Konstruktor des Formulars oder <xref:System.Windows.Forms.Form.Load> -Ereignishandler.  
  
 [!code-csharp[System.Windows.Forms.ListViewItemWhidbeyMembers#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ListViewItemWhidbeyMembers#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmallImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList SmallImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList SmallImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SmallImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property SmallImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ SmallImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SmallImageList : System.Windows.Forms.ImageList with get, set" Usage="System.Windows.Forms.ListView.SmallImageList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Windows.Forms.ImageList" /> ab, die verwendet werden soll, wenn die Elemente im Steuerelement als kleine Symbole angezeigt werden, oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.ImageList" /> mit den Symbolen, die verwendet werden sollen, wenn die <see cref="P:System.Windows.Forms.ListView.View" />-Eigenschaft auf <see cref="F:System.Windows.Forms.View.SmallIcon" /> festgelegt ist. Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.SmallImageList%2A> Eigenschaft können Sie angeben, ein <xref:System.Windows.Forms.ImageList> Objekt mit Symbolen, die verwendet werden, wenn die Elemente mit kleinen Symbolen angezeigt (wenn die <xref:System.Windows.Forms.ListView.View%2A> -Eigenschaftensatz auf einen beliebigen Wert außer <xref:System.Windows.Forms.View.LargeIcon>). Die <xref:System.Windows.Forms.ListView> -Steuerelement formatieren von Grafiken, akzeptiert die <xref:System.Windows.Forms.ImageList> -Steuerelement unterstützt wird, wenn die Anzeige von Symbolen. Die <xref:System.Windows.Forms.ListView> Steuerelement ist nicht beschränkt auf ICO-Dateien. Einmal eine <xref:System.Windows.Forms.ImageList> zugewiesen wird die <xref:System.Windows.Forms.ListView.SmallImageList%2A> -Eigenschaft, die Sie festlegen können die <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> Eigenschaft der einzelnen <xref:System.Windows.Forms.ListViewItem> in die <xref:System.Windows.Forms.ListView> Steuerelement an die Indexposition des Bilds in entsprechende der <xref:System.Windows.Forms.ImageList>. Die Größe der Symbole für die <xref:System.Windows.Forms.ListView.SmallImageList%2A> wird angegeben, indem die <xref:System.Windows.Forms.ImageList.ImageSize%2A> Eigenschaft.  
  
 Da nur ein Index für die angegeben werden, kann die <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A?displayProperty=nameWithType> -Eigenschaft, die <xref:System.Windows.Forms.ImageList> Objekte in angegebenen die <xref:System.Windows.Forms.ListView.LargeImageList%2A> und <xref:System.Windows.Forms.ListView.SmallImageList%2A> Eigenschaften sollten die gleichen Indexpositionsbereichs für die anzuzeigenden Bilder aufweisen. Z. B. wenn die <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> Eigenschaft eine <xref:System.Windows.Forms.ListViewItem> festgelegt ist 0 ist, muss sich die Bilder, die für kleine und große Symbole an die gleiche Indexposition in die <xref:System.Windows.Forms.ImageList> Objekte in angegebenen die <xref:System.Windows.Forms.ListView.LargeImageList%2A> und <xref:System.Windows.Forms.ListView.SmallImageList%2A> Eigenschaften.  
  
> [!NOTE]
>  Wenn die Images mit Schlüsseln angegeben werden, benötigen Sie für kleine und große Versionen des Images an die gleiche Indexposition in der jeweiligen Bildliste platzieren. Beim Wechseln zwischen Ansichten wird die Indexposition des Bilds in einer Liste verwendet, um das Abbild aus der anderen, unabhängig vom angegebenen Schlüsselwert auszuwählen.  
  
 Festlegen der <xref:System.Windows.Forms.ImageList> verwenden, wenn die Elemente mit großen Symbolen angezeigt (wenn die <xref:System.Windows.Forms.ListView.View%2A> -Eigenschaftensatz auf <xref:System.Windows.Forms.View.LargeIcon>), verwenden die <xref:System.Windows.Forms.ListView.LargeImageList%2A> Eigenschaft. Wenn Sie Images Zustand anzuzeigen, verwenden Sie verwenden möchten die <xref:System.Windows.Forms.ListView.StateImageList%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.ListView>-Steuerelement mit je drei <xref:System.Windows.Forms.ListViewItem>- und <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>-Objekten erstellt, die für jedes Element angegeben werden. Im Beispiel wird ebenfalls ein <xref:System.Windows.Forms.ColumnHeader>-Objekt erstellt, um die Unterelemente in der Detailansicht anzuzeigen. Ebenfalls werden zwei <xref:System.Windows.Forms.ImageList>-Objekte im Codebeispiel erstellt, die Bilder für die <xref:System.Windows.Forms.ListViewItem>-Objekte bereitstellen. Diese <xref:System.Windows.Forms.ImageList>-Objekte werden zu den <xref:System.Windows.Forms.ListView.LargeImageList%2A>- und <xref:System.Windows.Forms.ListView.SmallImageList%2A>-Eigenschaften hinzugefügt. Im Beispiel werden folgende Eigenschaft bei der Erstellung des <xref:System.Windows.Forms.ListView>-Steuerelements verwendet:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Für dieses Beispiel ist erforderlich, dass Sie den Code zu einer <xref:System.Windows.Forms.Form>-Klasse hinzufügen und die Methode aufrufen, die im Beispiel aus dem Konstruktor oder einer anderen Methode der Form-Klasse erstellt wurde. Für das Beispiel ist ebenfalls erforderlich, dass die Bilder namens `MySmallImage1`, `MySmallImage2`, `MyLargeImage1` und `MyLargeImage2` sich im Stammverzeichnis von Laufwerk C befinden.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="P:System.Windows.Forms.ListView.LargeImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.StateImageList" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort();" />
      <MemberSignature Language="F#" Value="member this.Sort : unit -&gt; unit" Usage="listView.Sort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sortiert die Elemente der Listenansicht.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalerweise werden Elemente mit sortiert die <xref:System.Windows.Forms.ListView.Sorting%2A> -Eigenschaft, die Elemente basierend auf den Elementtext sortiert. Um die Sortierreihenfolge anzupassen, müssen Sie schreiben eine Klasse, implementiert die <xref:System.Collections.IComparer> Schnittstelle, und legen Sie die <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> Eigenschaft auf ein Objekt dieser Klasse. Dies empfiehlt sich beispielsweise, wenn Sie Elemente nach Unterelementtext sortieren möchten. Weitere Informationen zum manuellen Sortieren von Elementen finden Sie im Beispiel für die <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> Eigenschaft.  
  
 Wenn die <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> Eigenschaft auf einen Wert festgelegt ist als <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> oder, wenn die <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> -Eigenschaft festgelegt ist, automatisch die Liste sortiert wird, wenn Elemente hinzugefügt werden. Elemente werden nicht automatisch sortiert werden, wenn der Bezeichnungstext ändert.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.ListViewItemSorter" />
      </Docs>
    </Member>
    <Member MemberName="Sorting">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.SortOrder Sorting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.SortOrder Sorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Sorting" />
      <MemberSignature Language="VB.NET" Value="Public Property Sorting As SortOrder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::SortOrder Sorting { System::Windows::Forms::SortOrder get(); void set(System::Windows::Forms::SortOrder value); };" />
      <MemberSignature Language="F#" Value="member this.Sorting : System.Windows.Forms.SortOrder with get, set" Usage="System.Windows.Forms.ListView.Sorting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SortOrder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Sortierreihenfolge für Elemente im Steuerelement ab oder legt diese fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.SortOrder" />-Werte. Der Standardwert ist <see cref="F:System.Windows.Forms.SortOrder.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.Sorting%2A> Eigenschaft können Sie angeben, und zwar unabhängig davon, ob Elemente sortiert werden, in der <xref:System.Windows.Forms.ListView> Steuerelement. Standardmäßig wird keine Sortierung durchgeführt. Wenn die <xref:System.Windows.Forms.ListView.Sorting%2A> -Eigenschaftensatz auf <xref:System.Windows.Forms.SortOrder.Ascending> oder <xref:System.Windows.Forms.SortOrder.Descending>, die Elemente in der <xref:System.Windows.Forms.ListView> werden automatisch in aufsteigender alphabetischer Reihenfolge sortiert (wenn die Eigenschaft auf festgelegt ist <xref:System.Windows.Forms.SortOrder.Ascending>) oder absteigender alphabetischer Reihenfolge (bei der -Eigenschaftensatz auf <xref:System.Windows.Forms.SortOrder.Descending>). Sie können diese Eigenschaft verwenden, die in der angezeigten Elemente automatisch zu sortieren Ihrer <xref:System.Windows.Forms.ListView> Steuerelement, um ihn leichter für Benutzer, um Elemente zu finden, wenn eine große Anzahl von Elementen zur Verfügung stehen.  
  
 Wenn Sie einen eigenen Elemente sortieren, anstatt ausführen möchten die <xref:System.Windows.Forms.ListView.Sorting%2A> -Eigenschaft, mit der <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> Eigenschaft in Kombination mit der <xref:System.Windows.Forms.ListView.Sort%2A> Methode.  
  
 Wenn die <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> Eigenschaft auf einen Wert festgelegt ist als <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> oder, wenn die <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> -Eigenschaft festgelegt ist, wird automatisch die Liste sortiert beim Hinzufügen von Elementen. Elemente werden nicht automatisch sortiert werden, wenn der Bezeichnungstext ändert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.ListView>-Steuerelement mit je drei <xref:System.Windows.Forms.ListViewItem>- und <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>-Objekten erstellt, die für jedes Element angegeben werden. Im Beispiel wird ebenfalls ein <xref:System.Windows.Forms.ColumnHeader>-Objekt erstellt, um die Unterelemente in der Detailansicht anzuzeigen. Ebenfalls werden zwei <xref:System.Windows.Forms.ImageList>-Objekte im Codebeispiel erstellt, die Bilder für die <xref:System.Windows.Forms.ListViewItem>-Objekte bereitstellen. Diese <xref:System.Windows.Forms.ImageList>-Objekte werden zu den <xref:System.Windows.Forms.ListView.LargeImageList%2A>- und <xref:System.Windows.Forms.ListView.SmallImageList%2A>-Eigenschaften hinzugefügt. Im Beispiel werden folgende Eigenschaft bei der Erstellung des <xref:System.Windows.Forms.ListView>-Steuerelements verwendet:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Für dieses Beispiel ist erforderlich, dass Sie den Code zu einer <xref:System.Windows.Forms.Form>-Klasse hinzufügen und die Methode aufrufen, die im Beispiel aus dem Konstruktor oder einer anderen Methode der Form-Klasse erstellt wurde. Für das Beispiel ist ebenfalls erforderlich, dass die Bilder namens `MySmallImage1`, `MySmallImage2`, `MyLargeImage1` und `MyLargeImage2` sich im Stammverzeichnis von Laufwerk C befinden.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der angegebene Wert ist keiner der <see cref="T:System.Windows.Forms.SortOrder" />-Werte.</exception>
        <altmember cref="T:System.Windows.Forms.SortOrder" />
      </Docs>
    </Member>
    <Member MemberName="StateImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList StateImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList StateImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.StateImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property StateImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ StateImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StateImageList : System.Windows.Forms.ImageList with get, set" Usage="System.Windows.Forms.ListView.StateImageList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Windows.Forms.ImageList" /> ab, die den von der Anwendung definierten Zuständen im Steuerelement zugeordnet ist, oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.ImageList" />, die eine Gruppe von Zustandsgrafiken enthält, mit denen der von der Anwendung definierte Zustand eines Elements angegeben werden kann. Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.StateImageList%2A> Eigenschaft ermöglicht Ihnen die Angabe einer <xref:System.Windows.Forms.ImageList> , Bilder, die zur Darstellung eines Elements in eines anwendungsspezifischen Status enthält eine <xref:System.Windows.Forms.ListView> Steuerelement. Status der Bilder werden auf der linken Seite eines Symbols für das Element angezeigt. Status-Bilder, z. B. Kontrollkästchen aktiviert oder deaktiviert, können an der Anwendung definierte Element-Zustände. Zustandsgrafiken sind sichtbar, in allen Ansichten des der <xref:System.Windows.Forms.ListView> Steuerelement.  
  
 Wenn ein <xref:System.Windows.Forms.ImageList> angegeben ist, der <xref:System.Windows.Forms.ListView.StateImageList%2A> Eigenschaft und die <xref:System.Windows.Forms.ListView.CheckBoxes%2A> -Eigenschaftensatz auf `true`, die Bilder an der Indexposition 0 und 1 in der <xref:System.Windows.Forms.ImageList> werden angezeigt, statt das Kontrollkästchen. Das Bild an der Indexposition 0 wird angezeigt, statt das Kontrollkästchen deaktiviert, und das Bild an der Indexposition 1 anstelle der aktivierten Kontrollkästchens angezeigt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.LargeImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.SmallImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.ListView.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft ist für diese Klasse nicht relevant.</summary>
        <value>Der im <see cref="T:System.Windows.Forms.ListView" />-Steuerelement anzuzeigende Text.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist für diese Klasse nicht relevant.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberSignature Language="F#" Value="member this.TextChanged : EventHandler " Usage="member this.TextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich die <see cref="P:System.Windows.Forms.ListView.Text" />-Eigenschaft ändert.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TileSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size TileSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size TileSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.TileSize" />
      <MemberSignature Language="VB.NET" Value="Public Property TileSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size TileSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.TileSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.ListView.TileSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Größe der in der Kachelansicht angezeigten Fenster ab oder legt die Größe fest.</summary>
        <value>Eine <see cref="T:System.Drawing.Size" />, die die neue Fenstergröße enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft steuert die Größe der Kacheln, wenn die <xref:System.Windows.Forms.ListView.View%2A> -Eigenschaftensatz auf <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType>. Durch Festlegen dieser Eigenschaft ist nützlich, um Zeilenumbrüche zu vermeiden, wenn das Unterelementtext zu lang, um in einer einzelnen Zeile angezeigt werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Windows.Forms.ListView> Tiling-Funktion. Im Beispiel zeigt die Ansicht "Nebeneinander" Elemente, die Bücher darstellen. Jedes Element wird als eine Kachel mit einem Symbol für ein Buch, den Titel, Autor und das Veröffentlichungsjahr angezeigt. Für den Beispielcode funktioniert müssen Sie eine Symboldatei, die Book.ico im gleichen Verzeichnis wie im Beispiel enthalten. Auf die Kachel ohne Symbole, kommentieren Sie die Zeilen, die im Zusammenhang mit der <xref:System.Windows.Forms.ImageList> Objekt.  
  
 [!code-cpp[System.Windows.Forms.ListView.Tiling#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Tiling/CPP/listviewtilingexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.Tiling#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Tiling/CS/listviewtilingexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.Tiling#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Tiling/VB/listviewtilingexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="TopItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem TopItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem TopItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.TopItem" />
      <MemberSignature Language="VB.NET" Value="Public Property TopItem As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem ^ TopItem { System::Windows::Forms::ListViewItem ^ get(); void set(System::Windows::Forms::ListViewItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TopItem : System.Windows.Forms.ListViewItem with get, set" Usage="System.Windows.Forms.ListView.TopItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das erste sichtbare Element im Steuerelement ab oder legt das Element fest.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.ListViewItem" />, das das erste sichtbare Element im Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Element mit der Indexposition 0 (null) ist zunächst am oberen Rand der <xref:System.Windows.Forms.ListView> Steuerelement. Wenn die <xref:System.Windows.Forms.ListView> Steuerelement Inhalt ein Bildlauf durchgeführt werden, kann ein anderes Element am oberen Rand des Steuerelements. Sie können diese Eigenschaft anzugeben oder zu bestimmen, welches Element am oberen Rand angezeigt wird der <xref:System.Windows.Forms.ListView> Steuerelement. Der Wert des der <xref:System.Windows.Forms.ListView.TopItem%2A> Eigenschaft wird nicht immer beibehalten, je nachdem, in denen das gewünschte oberste Element in der Liste angezeigt wird.  
  
 Die Anzahl der Elemente angezeigt, in einem <xref:System.Windows.Forms.ListView> Steuerelement zu einem beliebigen Zeitpunkt auf die Höhe der Listenansicht als auch die Anzahl der darin enthaltenen Elemente abhängt. Wenn die Elemente, die Höhe der Listenansicht überschreiten, werden die Elemente auf mehreren Seiten weiterhin der durch der Benutzer Scrollen kann. Setzen Sie die <xref:System.Windows.Forms.ListView.TopItem%2A> Eigenschaft, um ein Element in der letzten Seite des der <xref:System.Windows.Forms.ListView>, das Element wird automatisch einen Bildlauf sichtbar; allerdings <xref:System.Windows.Forms.ListView.TopItem%2A> wird auf das tatsächliche obere Element der letzten Seite festgelegt.  
  
 Um sicherzustellen, dass ein bestimmtes Element in den sichtbaren Bereich des Steuerelements (jedoch nicht unbedingt in der obersten Position), verwenden die <xref:System.Windows.Forms.ListView.EnsureVisible%2A> Methode.  
  
> [!NOTE]
>    Diese Einstellung hat keinerlei Auswirkungen, wenn der -Eigenschaftswert  ist.`false`<xref:System.Windows.Forms.ListView.Scrollable%2A>  
>   
>  Durch Festlegen dieser Eigenschaft wird nicht unterstützt in-Versionen der [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] vor Version 2.0.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, Zurücksetzen des Formats der ein <xref:System.Windows.Forms.ListViewItem> Unterelemente mithilfe des-Objekts den <xref:System.Windows.Forms.ListView.TopItem%2A> Eigenschaft und die <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ResetStyle%2A?displayProperty=nameWithType> Methode. Um das Beispiel auszuführen, fügen Sie in den folgenden Code in ein Format, das eine Schaltfläche mit dem Namen `Button1` , und rufen Sie die `InitializeListView` -Methode in den Konstruktor des Formulars oder <xref:System.Windows.Forms.Form.Load> -Ereignishandler.  
  
 [!code-cpp[System.Windows.Forms.ListViewItemStyle#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListViewItemStyle#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ListViewItemStyle#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Windows.Forms.ListView.View" />-Eigenschaft ist auf <see cref="F:System.Windows.Forms.View.LargeIcon" />, <see cref="F:System.Windows.Forms.View.SmallIcon" /> oder <see cref="F:System.Windows.Forms.View.Tile" /> festgelegt.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="M:System.Windows.Forms.ListView.EnsureVisible(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="listView.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Zeichenfolgendarstellung des <see cref="T:System.Windows.Forms.ListView" />-Steuerelements zurück.</summary>
        <returns>Eine Zeichenfolge, die den Steuerelementtyp, die Anzahl der Elemente im <see cref="T:System.Windows.Forms.ListView" />-Steuerelement sowie den Typ des ersten Elements in der <see cref="T:System.Windows.Forms.ListView" /> angibt, wenn die Anzahl nicht 0 (null) ist.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateExtendedStyles">
      <MemberSignature Language="C#" Value="protected void UpdateExtendedStyles ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateExtendedStyles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.UpdateExtendedStyles" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UpdateExtendedStyles ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UpdateExtendedStyles();" />
      <MemberSignature Language="F#" Value="member this.UpdateExtendedStyles : unit -&gt; unit" Usage="listView.UpdateExtendedStyles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktualisiert die erweiterten Stile, die auf das Listenansicht-Steuerelement angewendet werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Können Sie die <xref:System.Windows.Forms.ListView.UpdateExtendedStyles%2A> -Methode in der abgeleiteten Klasse überschreiben Sie die erweiterten Stile, die von verwendet die <xref:System.Windows.Forms.ListView> Steuerelement. Wenn Sie diese Methode aufrufen, Sie sollten sicherstellen, dass die erweiterten Stile, die durch Eigenschaften festgelegt werden, auf die <xref:System.Windows.Forms.ListView> Steuerelement in die abgeleitete Version des Steuerelements verwendet werden.  
  
 Im folgenden sind die Eigenschaften, die einen erweiterten Stil zum Anwenden der <xref:System.Windows.Forms.ListView> Steuerelement.  
  
-   <xref:System.Windows.Forms.ListView.Activation%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.HoverSelection%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Activation" />
        <altmember cref="P:System.Windows.Forms.ListView.AllowColumnReorder" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckBoxes" />
        <altmember cref="P:System.Windows.Forms.ListView.FullRowSelect" />
        <altmember cref="P:System.Windows.Forms.ListView.GridLines" />
        <altmember cref="P:System.Windows.Forms.ListView.HoverSelection" />
      </Docs>
    </Member>
    <Member MemberName="UseCompatibleStateImageBehavior">
      <MemberSignature Language="C#" Value="public bool UseCompatibleStateImageBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCompatibleStateImageBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCompatibleStateImageBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCompatibleStateImageBehavior { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseCompatibleStateImageBehavior : bool with get, set" Usage="System.Windows.Forms.ListView.UseCompatibleStateImageBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, mit dem angegeben wird, ob für die <see cref="T:System.Windows.Forms.ListView" /> ein Verhalten der Zustandsgrafik verwendet wird, das mit [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], Version 1.1, oder [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], Version 2.0, kompatibel ist, oder legt diesen Wert fest.</summary>
        <value>
          <see langword="true" />, wenn das Verhalten der Zustandsgrafik mit [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], Version 1.1 kompatibel ist; <see langword="false" />, wenn das Verhalten mit [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], Version 2.0 kompatibel ist. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Änderungen an der <xref:System.Windows.Forms.ListView> steuern, der [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0 ermöglichen, benutzerdefinierte Zustandsgrafiken festgelegt werden, um anzugeben, ob ein Element aktiviert oder deaktiviert ist oder in einem unbestimmten Zustand. Durch das Hinzufügen dieser Funktion wird die [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0 weist ein anderes Verhalten als .NET Framework 1.1. Wenn Sie Anwendungen erstellt haben, die abhängig von dem Verhalten in der [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 1.1, stellen sicher, dass die <xref:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior%2A> -Eigenschaftensatz auf `true`, dies ist der Standardwert. Um die Vorteile von benutzerdefinierten Zustandsgrafiken vollständig nutzen zu können, legen Sie <xref:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior%2A> zu `false`.  
  
> [!NOTE]
>  Bei Verwendung der [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] -Designer die <xref:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior%2A> Eigenschaft auf festgelegt `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.View View { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.View View" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.View" />
      <MemberSignature Language="VB.NET" Value="Public Property View As View" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::View View { System::Windows::Forms::View get(); void set(System::Windows::Forms::View value); };" />
      <MemberSignature Language="F#" Value="member this.View : System.Windows.Forms.View with get, set" Usage="System.Windows.Forms.ListView.View" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.View</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab, wie Elemente im Steuerelement angezeigt werden, oder legt dieses fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.View" />-Werte. Der Standardwert ist <see cref="F:System.Windows.Forms.View.LargeIcon" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.View%2A> Eigenschaft können Sie angeben, die Art der Anzeige der <xref:System.Windows.Forms.ListView> -Steuerelement verwendet, um Elemente anzuzeigen. Sie können festlegen, die <xref:System.Windows.Forms.ListView.View%2A> Eigenschaft, die einzelnen Elemente mit großen oder kleinen Symbolen oder Elemente in einer vertikalen Liste anzeigen. Die umfassendste Möglichkeit ist die Detailansicht, die Sie nicht nur die Elemente, sondern alle dazugehörigen untergeordneten Elemente angegeben, für die einzelnen Elemente anzeigen kann. Jedes Element wird vertikal aufgeführten Elementen und Unterelementen für jedes Element in einer Spalte mit Spaltenüberschriften angezeigt in einem Raster angezeigt. Die Detailansicht ist eine perfekte Möglichkeit, Informationen zu einem Benutzer angezeigt. Mit Windows XP und Windows Server 2003 können Sie auch Elemente als Kacheln anzeigen, die grafischen und textbasierten Daten ausgleichen, indem Sie ein großes Symbol zusammen mit Informationen zu den Unterelementen Ihrer Wahl anzeigen. Zum Aktivieren der Tile-Ansicht Ihrer Anwendung aufrufen, muss die <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> Methode. Die Miniaturansicht wird jedes Element mit einem Symbol und textbasierten Daten, die rechts neben dem Symbol an. Die große Bild zeigt die einzelnen Elemente in ein Symbol und Textinformationen unterhalb des Symbols. Die Größe der Symbole für die Bildliste wird angegeben, durch die <xref:System.Windows.Forms.ImageList.ImageSize%2A> Eigenschaft der <xref:System.Windows.Forms.ImageList> für die <xref:System.Windows.Forms.ListView.SmallImageList%2A> oder <xref:System.Windows.Forms.ListView.LargeImageList%2A> Eigenschaften.  
  
> [!NOTE]
>  Wenn Sie mehrere Bildlisten für kleine und große Symbolansicht mit verwenden, sind ein <xref:System.Windows.Forms.ListView> -Steuerelement, fügen Sie kleine und große Versionen des Images zur gleichen Indexposition, an der in der jeweiligen Bildliste. Beim Wechseln zwischen Ansichten wird die Indexposition des Bilds in einer Liste verwendet, um das Abbild aus der anderen, unabhängig vom angegebenen Schlüsselwert auszuwählen.  
  
 Die meisten Eigenschaften in der <xref:System.Windows.Forms.ListView> Steuerelements beeinflussen, wie die verschiedenen Ansichten Verhalten oder angezeigt werden. Einige Eigenschaften, die sich auf die Ansichten für die Elemente sind nur hilfreich, wenn die <xref:System.Windows.Forms.ListView.View%2A> Eigenschaft auf einen bestimmten Wert festgelegt ist, während andere Benutzer in allen Ansichten verwendet werden. Z. B. Eigenschaften, z. B. <xref:System.Windows.Forms.ListView.GridLines%2A> und <xref:System.Windows.Forms.ListView.FullRowSelect%2A> sind nur hilfreich, wenn die <xref:System.Windows.Forms.ListView.View%2A> -Eigenschaftensatz auf <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>, während die <xref:System.Windows.Forms.ListView.MultiSelect%2A> und <xref:System.Windows.Forms.ListView.CheckBoxes%2A> Eigenschaften sind in allen Ansichten.  
  
 In der folgenden Tabelle werden einige der <xref:System.Windows.Forms.ListView>-Members und die Ansichten, in denen diese gültig sind, aufgeführt.  
  
|ListView-Member|Ansicht|  
|---------------------|----------|  
|<xref:System.Windows.Forms.ListView.Alignment%2A> -Eigenschaft|<xref:System.Windows.Forms.View.SmallIcon> oder <xref:System.Windows.Forms.View.LargeIcon>|  
|<xref:System.Windows.Forms.ListView.AutoArrange%2A> -Eigenschaft|<xref:System.Windows.Forms.View.SmallIcon> oder <xref:System.Windows.Forms.View.LargeIcon>|  
|<xref:System.Windows.Forms.ListView.AutoResizeColumn%2A>-Methode|<xref:System.Windows.Forms.View.Details>|  
|<xref:System.Windows.Forms.ListView.CheckBoxes%2A>|Alle Ansichten außer <xref:System.Windows.Forms.View.Tile>|  
|<xref:System.Windows.Forms.ListView.Columns%2A> -Eigenschaft|<xref:System.Windows.Forms.View.Details> oder <xref:System.Windows.Forms.View.Tile>|  
|<xref:System.Windows.Forms.ListView.DrawSubItem> -Ereignis|<xref:System.Windows.Forms.View.Details>|  
|<xref:System.Windows.Forms.ListView.FindItemWithText%2A>-Methode|<xref:System.Windows.Forms.View.Details>, <xref:System.Windows.Forms.View.List>oder <xref:System.Windows.Forms.View.Tile>|  
|<xref:System.Windows.Forms.ListView.FindNearestItem%2A>-Methode|<xref:System.Windows.Forms.View.SmallIcon> oder <xref:System.Windows.Forms.View.LargeIcon>|  
|<xref:System.Windows.Forms.ListView.GetItemAt%2A>-Methode|<xref:System.Windows.Forms.View.Details> oder <xref:System.Windows.Forms.View.Tile>|  
|<xref:System.Windows.Forms.ListView.Groups%2A> -Eigenschaft|Alle Ansichten außer <xref:System.Windows.Forms.View.List>|  
|<xref:System.Windows.Forms.ListView.HeaderStyle%2A> -Eigenschaft|<xref:System.Windows.Forms.View.Details>|  
|<xref:System.Windows.Forms.ListView.InsertionMark%2A> -Eigenschaft|<xref:System.Windows.Forms.View.LargeIcon>, <xref:System.Windows.Forms.View.SmallIcon>oder <xref:System.Windows.Forms.View.Tile>|  
  
 Sie können die <xref:System.Windows.Forms.ListView.View%2A> Eigenschaft, die verschiedene Ansichten der Daten in Ihrer Anwendung bereitstellen, oder Sperren Sie eine bestimmte Ansicht, um deren Vorteile zu nutzen. Z. B. die <xref:System.Windows.Forms.ListView.View%2A> -Eigenschaftensatz häufig auf <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType> , da die Detailansicht eine Reihe von Optionen, die nicht in den anderen Ansichten zur Verfügung stellt.  
  
> [!NOTE]
>  Wenn Ihre <xref:System.Windows.Forms.ListView> Steuerelement enthält keine Spaltenheader angegeben, und legen Sie Sie der <xref:System.Windows.Forms.ListView.View%2A> Eigenschaft <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>, <xref:System.Windows.Forms.ListView> Steuerelement keine Elemente angezeigt werden. Wenn Ihre <xref:System.Windows.Forms.ListView> Steuerelement enthält keine Spaltenheader angegeben, und legen Sie Sie der <xref:System.Windows.Forms.ListView.View%2A> Eigenschaft <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType>, <xref:System.Windows.Forms.ListView> -Steuerelement alle dazugehörigen untergeordneten Elemente nicht angezeigt wird.  
  
 Die Tile-Ansicht zeigt alle Elemente mit einem großen Symbol auf der linken und der Text auf der rechten Seite. Die elementbezeichnung, gefolgt von Unterelementen besteht die Textinformationen aus. Standardmäßig wird nur das erste Unterelement angezeigt, die elementbezeichnung entspricht. Um zusätzliche Unterelemente anzuzeigen, müssen Sie die hinzufügen <xref:System.Windows.Forms.ColumnHeader> Objekte die <xref:System.Windows.Forms.ListView.Columns%2A> Auflistung. Jedes Unterelement in der Kachel entspricht einer Spaltenüberschrift. Um zu steuern, welche Unterelemente und die Reihenfolge, in der sie angezeigt werden, Sie müssen festlegen, die <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A?displayProperty=nameWithType> Eigenschaft für jedes Element und die <xref:System.Windows.Forms.ColumnHeader.Name%2A?displayProperty=nameWithType> -Eigenschaft für jeden Header. Sie klicken Sie dann hinzufügen, entfernen und Neuanordnen von Headern in der <xref:System.Windows.Forms.ListView.Columns%2A> -Auflistung, um das gewünschte Ergebnis erzielt.  
  
 Um die Größe der Kacheln in der Ansicht "Nebeneinander" zu steuern, legen die <xref:System.Windows.Forms.ListView.TileSize%2A> Eigenschaft. Dies ist nützlich, um Zeilenumbrüche zu vermeiden, wenn das Unterelementtext zu lang für eine einzelne Zeile ist.  
  
 Ein Beispiel für die Ansicht "Nebeneinander", finden Sie unter den <xref:System.Windows.Forms.ListView.TileSize%2A> Eigenschaft.  
  
> [!NOTE]
>  Obwohl Spalten nur in der Ansicht angezeigt werden, werden die Unterelemente ohne Spaltenheader nicht in der Ansicht oder die Ansicht "Nebeneinander" angezeigt.  
  
 Die Tile-Ansicht ist nur auf Windows XP und Windows Server 2003 verfügbar, wenn die Anwendung aufruft der <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> Methode. Unter älteren Betriebssystemen hat Code in Bezug auf die Ansicht "Nebeneinander" keine Auswirkungen, und das <xref:System.Windows.Forms.ListView>-Steuerelement wird in der Ansicht "Große Symbole" angezeigt. Daher kann die jeglicher Code, der von der Ansicht "Nebeneinander" abhängig ist nicht ordnungsgemäß.  
  
 Sie können Code, der bestimmt, ob der Tile-Ansicht verfügbar sind, einschließen möchten, und eine andere Funktionalität bereitstellen, wenn sie nicht verfügbar ist. Z. B. bei Verwendung von Ownerdrawing zum Anpassen der Darstellung des <xref:System.Windows.Forms.ListView> Elemente in der Ansicht "Nebeneinander", Sie möchten Zeichnungscode, die an die Ansicht "große Symbole" verwenden, wenn unter Betriebssystemen ausgeführt werden, die die Ansicht "Nebeneinander" nicht unterstützen.  
  
 Diese Features werden von derselben Bibliothek bereitgestellt, die das Designfeature des Betriebssystems bereitstellt. Rufen Sie die <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType>-Methodenüberladung auf, und übergeben Sie den <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType>-Wert, um die Verfügbarkeit dieser Bibliothek zu überprüfen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.ListView>-Steuerelement mit je drei <xref:System.Windows.Forms.ListViewItem>- und <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>-Objekten erstellt, die für jedes Element angegeben werden. Im Beispiel wird ebenfalls ein <xref:System.Windows.Forms.ColumnHeader>-Objekt erstellt, um die Unterelemente in der Detailansicht anzuzeigen. Ebenfalls werden zwei <xref:System.Windows.Forms.ImageList>-Objekte im Codebeispiel erstellt, die Bilder für die <xref:System.Windows.Forms.ListViewItem>-Objekte bereitstellen. Diese <xref:System.Windows.Forms.ImageList>-Objekte werden zu den <xref:System.Windows.Forms.ListView.LargeImageList%2A>- und <xref:System.Windows.Forms.ListView.SmallImageList%2A>-Eigenschaften hinzugefügt. Im Beispiel werden folgende Eigenschaft bei der Erstellung des <xref:System.Windows.Forms.ListView>-Steuerelements verwendet:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Für dieses Beispiel ist erforderlich, dass Sie den Code zu einer <xref:System.Windows.Forms.Form>-Klasse hinzufügen und die Methode aufrufen, die im Beispiel aus dem Konstruktor oder einer anderen Methode der Form-Klasse erstellt wurde. Für das Beispiel ist ebenfalls erforderlich, dass die Bilder namens `MySmallImage1`, `MySmallImage2`, `MyLargeImage1` und `MyLargeImage2` sich im Stammverzeichnis von Laufwerk C befinden.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der angegebene Wert ist keiner der <see cref="T:System.Windows.Forms.View" />-Werte.</exception>
        <altmember cref="T:System.Windows.Forms.View" />
        <altmember cref="P:System.Windows.Forms.ListView.TileSize" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="VirtualItemsSelectionRangeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler VirtualItemsSelectionRangeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler VirtualItemsSelectionRangeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VirtualItemsSelectionRangeChanged As ListViewVirtualItemsSelectionRangeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ListViewVirtualItemsSelectionRangeChangedEventHandler ^ VirtualItemsSelectionRangeChanged;" />
      <MemberSignature Language="F#" Value="member this.VirtualItemsSelectionRangeChanged : System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler " Usage="member this.VirtualItemsSelectionRangeChanged : System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich eine <see cref="T:System.Windows.Forms.ListView" /> im virtuellen Modus befindet und der Auswahlzustand eines Bereichs von Elementen geändert wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.ListView> befindet sich nicht im virtuellen Modus befindet, die <xref:System.Windows.Forms.ListView.ItemSelectionChanged> Ereignis erfolgt.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung des -Attributs veranschaulicht. Im Beispiel meldet sich ein Ereignishandler für das Vorhandensein der <xref:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged> Ereignis. In diesem Bericht können Sie entnehmen, wann das Ereignis tritt auf, können Sie beim Debuggen unterstützen. Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, beachten Sie, und Ersetzen Sie dabei <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, eine Instanz des Typs enthält <xref:System.Windows.Forms.ListView> mit dem Namen `ListView1`. Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged> Ereignis.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#482](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#482)]
 [!code-vb[System.Windows.Forms.EventExamples#482](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#482)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.ItemSelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="VirtualListSize">
      <MemberSignature Language="C#" Value="public int VirtualListSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VirtualListSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.VirtualListSize" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualListSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int VirtualListSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.VirtualListSize : int with get, set" Usage="System.Windows.Forms.ListView.VirtualListSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl von <see cref="T:System.Windows.Forms.ListViewItem" />-Objekten in einer Liste im virtuellen Modus ab, oder legt diese fest.</summary>
        <value>Die Anzahl von <see cref="T:System.Windows.Forms.ListViewItem" />-Objekten, die im virtuellen Modus in der <see cref="T:System.Windows.Forms.ListView" /> enthalten sind.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Abrufen oder Festlegen der <xref:System.Windows.Forms.ListView.VirtualListSize%2A> Eigenschaft beim <xref:System.Windows.Forms.ListView.VirtualMode%2A> festgelegt `false` hat keine Auswirkungen auf die <xref:System.Windows.Forms.ListView>.  
  
 Wenn <xref:System.Windows.Forms.ListView.VirtualMode%2A> nastaven NA hodnotu `true`, und die <xref:System.Windows.Forms.ListView.VirtualListSize%2A> -Eigenschaft größer als 0 ist, müssen Sie behandeln die <xref:System.Windows.Forms.ListView.RetrieveVirtualItem> -Ereignis, und ein gültiges <xref:System.Windows.Forms.ListViewItem>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Windows.Forms.ListView.VirtualListSize" /> ist auf einen Wert unter 0 (null) festgelegt.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.ListView.VirtualMode" /> ist auf <see langword="true" /> festgelegt, <see cref="P:System.Windows.Forms.ListView.VirtualListSize" /> ist größer als 0 (null), und <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> wird nicht behandelt.</exception>
        <altmember cref="P:System.Windows.Forms.ListView.VirtualMode" />
      </Docs>
    </Member>
    <Member MemberName="VirtualMode">
      <MemberSignature Language="C#" Value="public bool VirtualMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VirtualMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.VirtualMode" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VirtualMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.VirtualMode : bool with get, set" Usage="System.Windows.Forms.ListView.VirtualMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob für das <see cref="T:System.Windows.Forms.ListView" />-Steuerelement eigene Operationen zur Datenverwaltung bereitgestellt wurden.</summary>
        <value>
          <see langword="true" />, wenn <see cref="T:System.Windows.Forms.ListView" /> Datenverwaltungsvorgänge verwendet, die Sie bereitstellen; andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Festlegen der <xref:System.Windows.Forms.ListView.VirtualMode%2A> Eigenschaft `true` setzt die <xref:System.Windows.Forms.ListView> im virtuellen Modus. Im virtuellen Modus wird die normale <xref:System.Windows.Forms.ListView.Items%2A> Auflistung wird nicht verwendet. Stattdessen <xref:System.Windows.Forms.ListViewItem> Objekte dynamisch erstellt werden, als die <xref:System.Windows.Forms.ListView> benötigt.  
  
 Virtueller Modus kann in vielen Situationen nützlich sein. Wenn eine <xref:System.Windows.Forms.ListView> Objekt muss aufgefüllt werden, mithilfe einer sehr großen Sammlung bereits im Speicher, erstellen eine <xref:System.Windows.Forms.ListViewItem> -Objekt für jeden Eintrag sehr aufwändig sein kann. Im virtuellen Modus befindet werden nur die erforderlichen Elemente erstellt. In anderen Fällen, die Werte der <xref:System.Windows.Forms.ListViewItem> Objekte möglicherweise häufig neu berechnet werden und dadurch für die gesamte Auflistung nicht akzeptablen Leistung ergibt. Im virtuellen Modus befindet werden nur die benötigten Elemente berechnet.  
  
 Um virtuellen Modus zu verwenden, müssen Sie behandeln die <xref:System.Windows.Forms.ListView.RetrieveVirtualItem> -Ereignis, das ausgelöst wird, dass Sie jedes Mal die <xref:System.Windows.Forms.ListView> erfordert ein Element. Dieser Ereignishandler sollten erstellen, die <xref:System.Windows.Forms.ListViewItem> -Objekt, das am angegebenen Index gehört. Darüber hinaus die <xref:System.Windows.Forms.ListView.VirtualListSize%2A> Eigenschaft muss auf die Größe des virtuellen Liste festgelegt werden.  
  
 Behandeln der <xref:System.Windows.Forms.ListView.SearchForVirtualItem> Ereignis kann eine Suche im virtuellen Modus befindet. Wenn dieses Ereignis nicht behandelt wird, die <xref:System.Windows.Forms.ListView.FindItemWithText%2A> und <xref:System.Windows.Forms.ListView.FindNearestItem%2A> Methoden zurück, `null`.  
  
 Sie können behandeln die <xref:System.Windows.Forms.ListView.CacheVirtualItems> Ereignis, um einen Cache der verwalten <xref:System.Windows.Forms.ListViewItem> Objekte. Wenn die Berechnung oder eine Suche beim Erstellen einer <xref:System.Windows.Forms.ListViewItem> Objekt ist teuer, warten ein Cache kann die Leistung verbessern.  
  
 Wenn die <xref:System.Windows.Forms.ListView.View%2A> -Eigenschaftensatz auf <xref:System.Windows.Forms.View.Tile>, der Wert wird automatisch geändert werden, um <xref:System.Windows.Forms.View.LargeIcon> beim <xref:System.Windows.Forms.ListView.VirtualMode%2A> nastaven NA hodnotu `true`.  
  
 Im virtuellen Modus befindet die <xref:System.Windows.Forms.ListView.Items%2A> -Erfassung ist deaktiviert. Es wird versucht, darauf zuzugreifen, löst eine <xref:System.InvalidOperationException>. Das gleiche gilt für die <xref:System.Windows.Forms.ListView.CheckedItems%2A> Auflistung und die <xref:System.Windows.Forms.ListView.SelectedItems%2A> Auflistung. Wenn Sie die ausgewählten oder aktivierten Elemente abrufen möchten, verwenden die <xref:System.Windows.Forms.ListView.SelectedIndices%2A> und <xref:System.Windows.Forms.ListView.CheckedIndices%2A> Sammlungen stattdessen.  
  
   
  
## Examples  
 Dieses Beispiel veranschaulicht eine einfache <xref:System.Windows.Forms.ListView> , deren Inhalt werden die ersten zehn Tausend Quadrate. Es behandelt, gesucht und verwendet einen Cache für eine höhere Leistung.  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.ListView.VirtualMode" /> ist auf <see langword="true" /> festgelegt, und eine der folgenden Voraussetzungen ist erfüllt: 
-   <see cref="P:System.Windows.Forms.ListView.VirtualListSize" /> ist größer als 0 (null), und <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> wird nicht behandelt.  
  
- oder -  
-   <see cref="P:System.Windows.Forms.ListView.Items" />, <see cref="P:System.Windows.Forms.ListView.CheckedItems" /> oder <see cref="P:System.Windows.Forms.ListView.SelectedItems" /> enthält Elemente.  
  
- oder -  
–   <see cref="P:System.Windows.Forms.ListView.Items" /> wird bearbeitet.</exception>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="listView.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">Die zu verarbeitende Windows-<see cref="T:System.Windows.Forms.Message" />.</param>
        <summary>Überschreibt <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>