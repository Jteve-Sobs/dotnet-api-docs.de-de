<Type Name="ListView" FullName="System.Windows.Forms.ListView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="262df49e5148bc47e8c0e8c55b83399832730cb0" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83518288" /></Metadata><TypeSignature Language="C#" Value="public class ListView : System.Windows.Forms.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListView extends System.Windows.Forms.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListView" />
  <TypeSignature Language="VB.NET" Value="Public Class ListView&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListView : System::Windows::Forms::Control" />
  <TypeSignature Language="F#" Value="type ListView = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedIndexChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Items")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ListViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
      <AttributeName>System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.Ask)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ListViewDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ListViewDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt ein Listenansicht-Steuerelement von Windows dar, das eine Auflistung von Elementen anzeigt, die in einer von vier Ansichten angezeigt werden können.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit einem <xref:System.Windows.Forms.ListView>-Steuerelement können Sie eine Liste von Elementen mit Element Text anzeigen und optional ein Symbol, um den Elementtyp zu identifizieren. Beispielsweise ähnelt die Windows Explorer-Liste der Dateien einer <xref:System.Windows.Forms.ListView>-Steuerelement. Es wird eine Liste der Dateien und Ordner angezeigt, die derzeit in der Struktur ausgewählt sind. Jede Datei und jeder Ordner zeigt ein Symbol an, das ihm zugeordnet ist, um den Typ der Datei oder des Ordners zu identifizieren. Die <xref:System.Windows.Forms.ListViewItem>-Klasse stellt ein Element in einem <xref:System.Windows.Forms.ListView> Steuerelement dar. Die Elemente, die in der Liste angezeigt werden, können in einer von fünf verschiedenen Ansichten angezeigt werden. Elemente können als große Symbole, als kleine Symbole oder als kleine Symbole in einer vertikalen Liste angezeigt werden. Elemente können auch unter Elemente aufweisen, die Informationen enthalten, die mit dem übergeordneten Element verknüpft sind. In der Detailansicht können Sie das Element und seine unter Elemente in einem Raster mit Spalten Headern anzeigen, mit denen die in einem Unterelement angezeigten Informationen identifiziert werden. Die Kachel Ansicht mit eingeschränkter Verfügbarkeit, wie unten beschrieben, ermöglicht es Ihnen, das Element und seine unter Elemente als Kachel anzuzeigen, die ein großes Symbol neben den Textinformationen enthält. <xref:System.Windows.Forms.ListView> unterstützt eine einzelne oder mehrere Auswahl. Die Mehrfachauswahl ermöglicht dem Benutzer die Auswahl aus einer Liste von Elementen auf eine Weise, die einem <xref:System.Windows.Forms.ListBox> Steuerelement ähnelt. Außerdem kann der Benutzer ausgewählte Elemente aktivieren, um eine Aufgabe auszuführen. Beispielsweise können Sie ein <xref:System.Windows.Forms.ListView>-Steuerelement verwenden, um eine Liste von Dateien anzuzeigen, die von der Anwendung geöffnet und verwendet werden können. Der Benutzer kann die Dateien auswählen, die geöffnet werden sollen, und dann auf die Dateien doppelklicken, um die Elemente zu aktivieren und die Dateien in der Anwendung zu öffnen. Der <xref:System.Windows.Forms.ListView> kann auch mithilfe der <xref:System.Windows.Forms.ListView.CheckBoxes%2A>-Eigenschaft Kontrollkästchen anzeigen, damit der Benutzer die Elemente, für die eine Aktion ausgeführt werden soll, überprüfen kann. Sie können das <xref:System.Windows.Forms.ListView>-Steuerelement auf verschiedene Weise verwenden. Das-Steuerelement kann verwendet werden, um Informationen aus einer Anwendung, einer Datenbank oder einer Textdatei anzuzeigen. Der <xref:System.Windows.Forms.ListView> kann auch zum Abrufen von Informationen vom Benutzer verwendet werden, z. b. zum Auswählen eines zu verarbeitenden Satzes von Dateien.  
  
 <xref:System.Windows.Forms.ListView> bietet eine große Anzahl von Eigenschaften, die Flexibilität in Darstellung und Verhalten bieten. Die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft ermöglicht es Ihnen, die Art und Weise zu ändern, in der Elemente angezeigt werden. Mit den Eigenschaften <xref:System.Windows.Forms.ListView.LargeImageList%2A>, <xref:System.Windows.Forms.ListView.SmallImageList%2A>und <xref:System.Windows.Forms.ListView.StateImageList%2A> können Sie die <xref:System.Windows.Forms.ImageList> Objekte angeben, die die für Elemente angezeigten Bilder enthalten, und im Fall der <xref:System.Windows.Forms.ListView.StateImageList%2A>die Kontrollkästchen, die angezeigt werden, wenn die <xref:System.Windows.Forms.ListView.CheckBoxes%2A>-Eigenschaft auf `true`festgelegt ist. Um zu ermitteln, welche Elemente aktiviert sind, können Sie die <xref:System.Windows.Forms.ListView.CheckedItems%2A>-Eigenschaft verwenden, um auf die <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection> Auflistung zuzugreifen. Die <xref:System.Windows.Forms.ListView.Columns%2A>-Eigenschaft ermöglicht den Zugriff auf die <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>, in der die Spaltenheader gespeichert werden, die angezeigt werden, wenn die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft des Steuer Elements auf <xref:System.Windows.Forms.View.Details>festgelegt ist. Elemente werden durch die <xref:System.Windows.Forms.ListView.Items%2A>-Eigenschaft hinzugefügt und aus der <xref:System.Windows.Forms.ListView> entfernt. Die <xref:System.Windows.Forms.ListView.Items%2A>-Eigenschaft ermöglicht Ihnen den Zugriff auf die <xref:System.Windows.Forms.ListView.ListViewItemCollection> des Steuer Elements, das Methoden zum Bearbeiten der Elemente im-Steuerelement bereitstellt. Wenn Sie es dem Benutzer ermöglichen möchten, den Text eines Elements zu bearbeiten, können Sie die <xref:System.Windows.Forms.ListView.LabelEdit%2A>-Eigenschaft verwenden. Wenn das Steuerelement eine große Anzahl von Elementen enthält, ist es für den Benutzer häufig einfacher, Sie in einer sortierten Liste anzuzeigen. Sie können die <xref:System.Windows.Forms.ListView.Sorting%2A>-Eigenschaft verwenden, um die Elemente alphabetisch zu sortieren. Sie können auch das Aussehen eines <xref:System.Windows.Forms.ListView> Steuer Elements vollständig anpassen. Legen Sie zu diesem Zweck die <xref:System.Windows.Forms.ListView.OwnerDraw%2A>-Eigenschaft auf `true` fest, und behandeln Sie mindestens eines der folgenden Ereignisse: <xref:System.Windows.Forms.ListView.DrawItem>, <xref:System.Windows.Forms.ListView.DrawSubItem>, <xref:System.Windows.Forms.ListView.DrawColumnHeader>.  
  
 Viele Eigenschaften des <xref:System.Windows.Forms.ListView>-Steuer Elements werden verwendet, wenn die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft des Steuer Elements auf <xref:System.Windows.Forms.View.Details>festgelegt ist. Die <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>-Eigenschaft ermöglicht es dem Benutzer des <xref:System.Windows.Forms.ListView> Steuer Elements, die Reihenfolge der Spalten zur Laufzeit neu zu konfigurieren. Die <xref:System.Windows.Forms.ListView.FullRowSelect%2A>-Eigenschaft ermöglicht, dass ein Element und seine unter Elemente anstelle des Elements ausgewählt werden. Zum Anzeigen von Rasterlinien in der Detailansicht, um die Begrenzungen von Elementen und unter Elementen in der <xref:System.Windows.Forms.ListView>zu identifizieren, können Sie die <xref:System.Windows.Forms.ListView.GridLines%2A>-Eigenschaft verwenden. Mit der <xref:System.Windows.Forms.ListView.HeaderStyle%2A>-Eigenschaft können Sie den Typ der anzuzeigenden Spaltenheader angeben.  
  
 Ein <xref:System.Windows.Forms.ListView>-Steuerelement kann im virtuellen Modus betrieben werden, in dem <xref:System.Windows.Forms.ListViewItem> Objekte dynamisch generiert werden, anstatt in der <xref:System.Windows.Forms.ListView.Items%2A> Auflistung gespeichert zu werden. Dies kann für den Umgang mit sehr großen Listen oder Listen nützlich sein, deren Inhalte sich häufig ändern. Legen Sie zum Aktivieren des virtuellen Modus die <xref:System.Windows.Forms.ListView.VirtualMode%2A>-Eigenschaft auf `true` fest, und behandeln Sie die Ereignisse <xref:System.Windows.Forms.ListView.RetrieveVirtualItem>, <xref:System.Windows.Forms.ListView.CacheVirtualItems>und <xref:System.Windows.Forms.ListView.SearchForVirtualItem>.  
  
 Zusätzlich zu den zahlreichen Eigenschaften, die für ein <xref:System.Windows.Forms.ListView>-Steuerelement verfügbar sind, gibt es Methoden und Ereignisse, die Ihre Anwendung verwenden kann, um zusätzliche Funktionen für die <xref:System.Windows.Forms.ListView>bereitzustellen. Mit den Methoden <xref:System.Windows.Forms.ListView.BeginUpdate%2A> und <xref:System.Windows.Forms.ListView.EndUpdate%2A> können Sie die Leistung verbessern, wenn Sie einer <xref:System.Windows.Forms.ListView> viele Elemente hinzufügen, indem Sie verhindern, dass das Steuerelement jedes Mal, wenn ein Element hinzugefügt wird, neu gezeichnet wird. Wenn im <xref:System.Windows.Forms.ListView> Steuerelement Elemente und unter Elemente angezeigt werden, können Sie Funktionen bereitstellen, wenn der Benutzer mit der rechten Maustaste auf ein Unterelement klickt. Um das Element zu bestimmen, auf dessen Unterelement geklickt wird, können Sie die <xref:System.Windows.Forms.ListView.GetItemAt%2A>-Methode verwenden. Beim Durchführen der Überprüfung der Elemente, nachdem Sie vom Benutzer bearbeitet wurden, empfiehlt es sich, dem Benutzer ein bestimmtes Element zum Ändern anzuzeigen. Die <xref:System.Windows.Forms.ListView.EnsureVisible%2A>-Methode kann aufgerufen werden, um sicherzustellen, dass sich das jeweilige Element im sichtbaren Bereich des Steuer Elements befindet.  
  
 Wenn die <xref:System.Windows.Forms.ListView.LabelEdit%2A>-Eigenschaft auf `true`festgelegt ist, können Sie Aufgaben wie das Überprüfen des Texts, der vor und nach dem Ändern des Texts bearbeitet wird, ausführen, indem Sie einen Ereignishandler für die <xref:System.Windows.Forms.ListView.BeforeLabelEdit>-und <xref:System.Windows.Forms.ListView.AfterLabelEdit>-Ereignisse erstellen. Um Aufgaben wie das Öffnen einer Datei oder das Anzeigen eines Dialog Felds zum Bearbeiten eines in einem <xref:System.Windows.Forms.ListView>angezeigten Elements auszuführen, können Sie einen Ereignishandler für das <xref:System.Windows.Forms.ListView.ItemActivate>-Ereignis erstellen. Wenn Sie dem Benutzer das Sortieren der Elemente in einer <xref:System.Windows.Forms.ListView> gestatten, wenn diese auf eine Spaltenüberschrift klicken, können Sie einen Ereignishandler für das <xref:System.Windows.Forms.ListView.ColumnClick> Ereignis erstellen, um die Sortierung auszuführen. Wenn die <xref:System.Windows.Forms.ListView.CheckBoxes%2A>-Eigenschaft auf `true`festgelegt ist, können Sie bestimmen, wann eine Änderung des Prüf Zustands eines Elements aufgetreten ist, indem Sie das <xref:System.Windows.Forms.ListView.ItemCheck>-Ereignis behandeln.  
  
 Sie können auch ein Hintergrundbild für die <xref:System.Windows.Forms.ListView> mit der <xref:System.Windows.Forms.Control.BackgroundImage%2A>-Eigenschaft festlegen. Die Anwendung muss über die <xref:System.STAThreadAttribute> für die `Main`-Methode verfügen, damit das Hintergrundbild für das <xref:System.Windows.Forms.ListView>-Steuerelement ordnungsgemäß angezeigt wird. Wenn außerdem ein <xref:System.Windows.Forms.ListView> Steuerelement mit einem Hintergrundbild in Internet Explorer gehostet wird, geben Sie Comctl32. dll Version 6,0 als abhängige Assembly in der Anwendungs Manifest-Datei an, um sicherzustellen, dass das Hintergrundbild angezeigt wird.  
  
> [!NOTE]
>  Das Festlegen der <xref:System.Windows.Forms.Control.Cursor%2A>-Eigenschaft für ein <xref:System.Windows.Forms.ListView> Steuerelement hat keine Auswirkung auf die Darstellung des Cursors in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], Version 1,1 und früher.  
  
 Windows XP und Windows Server 2003 bieten drei Features, die die <xref:System.Windows.Forms.ListView> Steuerung erweitern, wenn Ihre Anwendung die <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType>-Methode aufruft: Kachel Ansicht, Gruppierung und Einfügemarke.  
  
 Mithilfe der Kachel Ansicht können Sie grafische und Textinformationen ausgleichen, indem Sie Element-und Unterelement Text neben großen Symbolen anzeigen. Legen Sie die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft auf <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType> fest, um dieses Verhalten zu aktivieren.  
  
 Mit der Gruppierungs Funktion können Sie Elemente visuell in verwandte Kategorien gruppieren. Verwenden Sie die <xref:System.Windows.Forms.ListView.Groups%2A>-Eigenschaft, um dem <xref:System.Windows.Forms.ListView>-Steuerelement <xref:System.Windows.Forms.ListViewGroup> Objekte hinzuzufügen, wenn Sie dieses Feature aktivieren möchten. Um die Funktion vorübergehend zu deaktivieren, legen Sie die <xref:System.Windows.Forms.ListView.ShowGroups%2A>-Eigenschaft auf `false`fest.  
  
 Mit dem Feature "Einfügemarke" können Sie die Neupositionierung von Drag & Drop-Elementen mit visuellem Feedback zum Angeben von Ablage Standorten bereitstellen. Verwenden Sie das <xref:System.Windows.Forms.ListViewInsertionMark> Objekt, das über die Eigenschaft <xref:System.Windows.Forms.ListView.InsertionMark%2A> abgerufen wurde, um die Einfügemarke anzuzeigen.  
  
 Diese Features sind nur unter Windows XP und Windows Server 2003 verfügbar. Unter früheren Betriebssystemen hat der Code, der sich auf diese Features bezieht, keine Auswirkung. die Kachel Ansicht wird als große Symbol Ansicht angezeigt, und die Einfügemarke und die Gruppen werden nicht angezeigt. In einigen Fällen möchten Sie möglicherweise Code einschließen, der bestimmt, ob diese Features verfügbar sind, und alternative Funktionen bereitstellen, wenn Sie nicht verfügbar sind. Diese Features werden von der gleichen Bibliothek bereitgestellt, in der die Designs des Betriebssystems bereitgestellt werden. Um die Verfügbarkeit dieser Bibliothek zu überprüfen, müssen Sie die <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType>-Methoden Überladung aufrufen und den <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType>-Wert übergeben.  
  
 In der folgenden Tabelle werden einige der <xref:System.Windows.Forms.ListView> Member und die Ansichten angezeigt, in denen Sie gültig sind.  
  
|ListView-Member|Sicht|  
|---------------------|----------|  
|<xref:System.Windows.Forms.ListView.Alignment%2A>-Eigenschaft|<xref:System.Windows.Forms.View.SmallIcon> oder <xref:System.Windows.Forms.View.LargeIcon>|  
|<xref:System.Windows.Forms.ListView.AutoArrange%2A>-Eigenschaft|<xref:System.Windows.Forms.View.SmallIcon> oder <xref:System.Windows.Forms.View.LargeIcon>|  
|<xref:System.Windows.Forms.ListView.AutoResizeColumn%2A> -Methode|<xref:System.Windows.Forms.View.Details>|  
|<xref:System.Windows.Forms.ListView.Columns%2A>-Eigenschaft|<xref:System.Windows.Forms.View.Details> oder <xref:System.Windows.Forms.View.Tile>|  
|<xref:System.Windows.Forms.ListView.DrawSubItem> -Ereignis|<xref:System.Windows.Forms.View.Details>|  
|<xref:System.Windows.Forms.ListView.FindItemWithText%2A> -Methode|<xref:System.Windows.Forms.View.Details>, <xref:System.Windows.Forms.View.List> oder <xref:System.Windows.Forms.View.Tile>|  
|<xref:System.Windows.Forms.ListView.FindNearestItem%2A> -Methode|<xref:System.Windows.Forms.View.SmallIcon> oder <xref:System.Windows.Forms.View.LargeIcon>|  
|<xref:System.Windows.Forms.ListView.GetItemAt%2A> -Methode|<xref:System.Windows.Forms.View.Details> oder <xref:System.Windows.Forms.View.Tile>|  
|<xref:System.Windows.Forms.ListView.Groups%2A>-Eigenschaft|Alle Sichten außer <xref:System.Windows.Forms.View.List>|  
|<xref:System.Windows.Forms.ListView.HeaderStyle%2A>-Eigenschaft|<xref:System.Windows.Forms.View.Details>|  
|<xref:System.Windows.Forms.ListView.InsertionMark%2A>-Eigenschaft|<xref:System.Windows.Forms.View.LargeIcon>, <xref:System.Windows.Forms.View.SmallIcon> oder <xref:System.Windows.Forms.View.Tile>|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.ListView>-Steuerelement mit drei <xref:System.Windows.Forms.ListViewItem> angegebenen Objekten und drei <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>-Objekten erstellt, die für jedes Element angegeben wurden. Im Beispiel werden auch <xref:System.Windows.Forms.ColumnHeader> Objekte erstellt, um die unter Elemente in der Detailansicht anzuzeigen. Zwei <xref:System.Windows.Forms.ImageList> Objekte werden auch im Codebeispiel erstellt, um Bilder für die <xref:System.Windows.Forms.ListViewItem> Objekte bereitzustellen. Diese <xref:System.Windows.Forms.ImageList> Objekte werden den Eigenschaften <xref:System.Windows.Forms.ListView.LargeImageList%2A> und <xref:System.Windows.Forms.ListView.SmallImageList%2A> hinzugefügt. Das Beispiel verwendet die folgenden Eigenschaften, um das <xref:System.Windows.Forms.ListView>-Steuerelement zu erstellen:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Dieses Beispiel erfordert, dass Sie den Code zu einem <xref:System.Windows.Forms.Form> hinzugefügt und die im Beispiel erstellte Methode aus dem Konstruktor oder einer anderen Methode im Formular aufgerufen haben. Das Beispiel setzt auch voraus, dass Images mit dem Namen `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`und `MyLargeImage2` sich im Stammverzeichnis des Laufwerks C befinden.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListViewItem" />
    <altmember cref="T:System.Windows.Forms.ImageList" />
    <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.Windows.Forms.ListView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.ListView>-Steuerelement mit drei <xref:System.Windows.Forms.ListViewItem> angegebenen Objekten und drei <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>-Objekten erstellt, die für jedes Element angegeben wurden. Im Beispiel werden auch <xref:System.Windows.Forms.ColumnHeader> Objekte erstellt, um die unter Elemente in der Detailansicht anzuzeigen. Zwei <xref:System.Windows.Forms.ImageList> Objekte werden auch im Codebeispiel erstellt, um Bilder für die <xref:System.Windows.Forms.ListViewItem> Objekte bereitzustellen. Diese <xref:System.Windows.Forms.ImageList> Objekte werden den Eigenschaften <xref:System.Windows.Forms.ListView.LargeImageList%2A> und <xref:System.Windows.Forms.ListView.SmallImageList%2A> hinzugefügt. Das Beispiel verwendet die folgenden Eigenschaften, um das <xref:System.Windows.Forms.ListView>-Steuerelement zu erstellen:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Dieses Beispiel erfordert, dass Sie den Code zu einem <xref:System.Windows.Forms.Form> hinzugefügt und die im Beispiel erstellte Methode aus dem Konstruktor oder einer anderen Methode im Formular aufgerufen haben. Das Beispiel setzt auch voraus, dass Images mit dem Namen `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`und `MyLargeImage2` sich im Stammverzeichnis des Laufwerks C befinden.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activation">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ItemActivation Activation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ItemActivation Activation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Activation" />
      <MemberSignature Language="VB.NET" Value="Public Property Activation As ItemActivation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ItemActivation Activation { System::Windows::Forms::ItemActivation get(); void set(System::Windows::Forms::ItemActivation value); };" />
      <MemberSignature Language="F#" Value="member this.Activation : System.Windows.Forms.ItemActivation with get, set" Usage="System.Windows.Forms.ListView.Activation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemActivation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ der Aktion ab, die der Benutzer zum Aktivieren eines Elements ausführen muss, oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.ItemActivation" />-Werte. Der Standardwert lautet <see cref="F:System.Windows.Forms.ItemActivation.Standard" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der <xref:System.Windows.Forms.ListView.Activation%2A>-Eigenschaft können Sie angeben, wie der Benutzer ein Element im <xref:System.Windows.Forms.ListView> Steuerelement aktivieren soll. Das Aktivieren eines Elements in einem <xref:System.Windows.Forms.ListView> unterscheidet sich von der Auswahl eines Elements. Wenn ein Element aktiviert ist, wird in der Regel eine Aktion in einem Ereignishandler für das Ereignis <xref:System.Windows.Forms.ListView.ItemActivate> ausgeführt. Wenn ein Element z. b. aktiviert ist, können Sie eine Datei öffnen oder ein Dialogfeld anzeigen, in dem das Element bearbeitet werden kann. In der Regel wird der Benutzer auf ein Element Doppel geklickt, um es zu aktivieren. Wenn die <xref:System.Windows.Forms.ListView.Activation%2A>-Eigenschaft auf <xref:System.Windows.Forms.ItemActivation.OneClick>festgelegt ist, wird Sie durch Klicken auf das Element einmal aktiviert. Wenn Sie die <xref:System.Windows.Forms.ListView.Activation%2A>-Eigenschaft auf <xref:System.Windows.Forms.ItemActivation.TwoClick> festlegen, weicht dies vom Standard-Doppelklick ab, da die beiden Klicks eine beliebige Dauer aufweisen können.  
  
> [!NOTE]
>  Wenn die <xref:System.Windows.Forms.ListView.Activation%2A>-Eigenschaft auf <xref:System.Windows.Forms.ItemActivation.OneClick> oder <xref:System.Windows.Forms.ItemActivation.TwoClick>festgelegt ist, ist die Bezeichnungs Bearbeitung unabhängig vom Wert der <xref:System.Windows.Forms.ListView.LabelEdit%2A>-Eigenschaft nicht zulässig.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der angegebene Wert ist kein <see cref="T:System.Windows.Forms.ItemActivation" />-Member.</exception>
        <altmember cref="T:System.Windows.Forms.ItemActivation" />
        <altmember cref="E:System.Windows.Forms.ListView.ItemActivate" />
      </Docs>
    </Member>
    <Member MemberName="AfterLabelEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.LabelEditEventHandler AfterLabelEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.LabelEditEventHandler AfterLabelEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.AfterLabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AfterLabelEdit As LabelEditEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::LabelEditEventHandler ^ AfterLabelEdit;" />
      <MemberSignature Language="F#" Value="member this.AfterLabelEdit : System.Windows.Forms.LabelEditEventHandler " Usage="member this.AfterLabelEdit : System.Windows.Forms.LabelEditEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LabelEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn die Bezeichnung eines Elements vom Benutzer bearbeitet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.ListView.AfterLabelEdit>-Ereignis tritt auf, wenn der Benutzer das Ändern des Texts für ein Element abgeschlossen hat. Die neue Zeichenfolge, die der Benutzer für das Element eingibt, wird an das-Ereignis übermittelt, und der Ereignishandler kann die Änderung ablehnen. Wenn der Ereignishandler die Änderung ablehnt, wird der Text auf den Text zurückgesetzt, wie er war, bevor der Benutzer mit der Bearbeitung des Elements begonnen hat.  
  
> [!NOTE]
>  Da das <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType>-Ereignis stattfindet, bevor für die Bezeichnungs Bearbeitung ein Commit ausgeführt wird, wird durch den Aufruf der <xref:System.Windows.Forms.ListView.Sort%2A?displayProperty=nameWithType>-Methode in einem Handler für dieses Ereignis das Element mit dem ursprünglichen Wert sortiert.  
  
 Damit das <xref:System.Windows.Forms.ListView.AfterLabelEdit>-Ereignis ausgelöst wird, muss die <xref:System.Windows.Forms.ListView.LabelEdit%2A>-Eigenschaft des <xref:System.Windows.Forms.ListView>-Steuer Elements auf `true`festgelegt werden.  
  
 Sie können einen Ereignishandler für das <xref:System.Windows.Forms.ListView.BeforeLabelEdit> Ereignis erstellen, um Aufgaben auszuführen, bevor der Benutzer den Text eines Elements bearbeitet.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie mit dem <xref:System.Windows.Forms.ListView.AfterLabelEdit>-Ereignis eine neu bearbeitete Bezeichnung auf Zeichen im Alphabet beschränkt wird. Im Beispiel wird die <xref:System.Text.ASCIIEncoding>-Klasse verwendet, um den ASCII-Zeichencode jedes Zeichens der neuen Bezeichnung abzurufen. Wenn das Zeichen zwischen den ASCII-Codes liegt, die Zahlen darstellen, kann die neue Bezeichnung nicht auf das Element angewendet werden. Für dieses Beispiel ist es erforderlich, dass Sie ein <xref:System.Windows.Forms.ListView>-Steuerelement auf einem Formular erstellt und ihm Elemente hinzugefügt haben. Das Beispiel erfordert auch, dass Sie das <xref:System.Windows.Forms.ListView.AfterLabelEdit>-Ereignis mit dem im Beispielcode definierten Ereignishandler verbunden haben. Um die <xref:System.Text.ASCIIEncoding>-Klasse verwenden zu können, muss die Datei den <xref:System.Text>-Namespace enthalten.  
  
 [!code-cpp[ListView.AfterLabelEdit#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CPP/form1.cpp#1)]
 [!code-csharp[ListView.AfterLabelEdit#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CS/form1.cs#1)]
 [!code-vb[ListView.AfterLabelEdit#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.AfterLabelEdit/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
        <altmember cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.LabelEdit" />
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ListViewAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Property Alignment As ListViewAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewAlignment Alignment { System::Windows::Forms::ListViewAlignment get(); void set(System::Windows::Forms::ListViewAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.Alignment : System.Windows.Forms.ListViewAlignment with get, set" Usage="System.Windows.Forms.ListView.Alignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Ausrichtung von Elementen im Steuerelement ab oder legt diese fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.ListViewAlignment" />-Werte. Der Standardwert lautet <see cref="F:System.Windows.Forms.ListViewAlignment.Top" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.Alignment%2A>-Eigenschaft wirkt sich nur auf die Ausrichtung aus, wenn die Eigenschaft <xref:System.Windows.Forms.ListView.View%2A> auf <xref:System.Windows.Forms.View.LargeIcon> oder <xref:System.Windows.Forms.View.SmallIcon>festgelegt ist.  
  
> [!NOTE]
>  Diese Eigenschaft hat keine Auswirkung, wenn die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft auf <xref:System.Windows.Forms.View.List>festgelegt ist.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der angegebene Wert ist keiner der <see cref="T:System.Windows.Forms.ListViewAlignment" />-Werte.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewAlignment" />
      </Docs>
    </Member>
    <Member MemberName="AllowColumnReorder">
      <MemberSignature Language="C#" Value="public bool AllowColumnReorder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowColumnReorder" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.AllowColumnReorder" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowColumnReorder As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowColumnReorder { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowColumnReorder : bool with get, set" Usage="System.Windows.Forms.ListView.AllowColumnReorder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Benutzer Spaltenköpfe ziehen können, um die Spalten im Steuerelement neu anzuordnen, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die Neuanordnung von Spalten mit Drag &amp; amp; Drop zulässig ist. Andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Festlegen des Werts der <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>-Eigenschaft hat keine Auswirkung, es sei denn, die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft ist auf <xref:System.Windows.Forms.View.Details>festgelegt. Sie können diese Eigenschaft verwenden, um Benutzern das Neupositionieren von Spalten im-Steuerelement zur Laufzeit zu ermöglichen. Wenn die <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>-Eigenschaft auf `true`festgelegt ist, können Benutzer die Spalten im-Steuerelement positionieren, um das Element und seine unter Elemente auf eine Weise anzuzeigen, die Ihren Anforderungen in der Anwendung entspricht.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.ListView>-Steuerelement mit drei <xref:System.Windows.Forms.ListViewItem> angegebenen Objekten und drei <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>-Objekten erstellt, die für jedes Element angegeben wurden. Im Beispiel werden auch <xref:System.Windows.Forms.ColumnHeader> Objekte erstellt, um die unter Elemente in der Detailansicht anzuzeigen. Zwei <xref:System.Windows.Forms.ImageList> Objekte werden auch im Codebeispiel erstellt, um Bilder für die <xref:System.Windows.Forms.ListViewItem> Objekte bereitzustellen. Diese <xref:System.Windows.Forms.ImageList> Objekte werden den Eigenschaften <xref:System.Windows.Forms.ListView.LargeImageList%2A> und <xref:System.Windows.Forms.ListView.SmallImageList%2A> hinzugefügt. Das Beispiel verwendet die folgenden Eigenschaften, um das <xref:System.Windows.Forms.ListView>-Steuerelement zu erstellen:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Dieses Beispiel erfordert, dass Sie den Code zu einem <xref:System.Windows.Forms.Form> hinzugefügt und die im Beispiel erstellte Methode aus dem Konstruktor oder einer anderen Methode im Formular aufgerufen haben. Das Beispiel setzt auch voraus, dass Images mit dem Namen `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`und `MyLargeImage2` sich im Stammverzeichnis des Laufwerks C befinden.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ArrangeIcons">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ordnet Elemente im Steuerelement an, wenn sie als Symbole angezeigt werden.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ArrangeIcons">
      <MemberSignature Language="C#" Value="public void ArrangeIcons ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ArrangeIcons() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ArrangeIcons" />
      <MemberSignature Language="VB.NET" Value="Public Sub ArrangeIcons ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ArrangeIcons();" />
      <MemberSignature Language="F#" Value="member this.ArrangeIcons : unit -&gt; unit" Usage="listView.ArrangeIcons " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ordnet Elemente im Steuerelement auf Grundlage des Werts der <see cref="P:System.Windows.Forms.ListView.Alignment" />-Eigenschaft an, wenn diese als Symbole angezeigt werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.ArrangeIcons%2A>-Methode ist nur nützlich, wenn die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft auf <xref:System.Windows.Forms.View.LargeIcon> oder <xref:System.Windows.Forms.View.SmallIcon>festgelegt ist. Wenn Sie diese Version der <xref:System.Windows.Forms.ListView.ArrangeIcons%2A>-Methode aufrufen, werden die Elemente basierend auf dem Wert der <xref:System.Windows.Forms.ListView.Alignment%2A>-Eigenschaft sortiert. Verwenden Sie die andere Version der <xref:System.Windows.Forms.ListView.ArrangeIcons%2A>-Methode, um die Ausrichtung der Elemente auf Grundlage eines Werts zu bewirken, der sich von dem der <xref:System.Windows.Forms.ListView.Alignment%2A> Eigenschaft unterscheidet.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="ArrangeIcons">
      <MemberSignature Language="C#" Value="public void ArrangeIcons (System.Windows.Forms.ListViewAlignment value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ArrangeIcons(valuetype System.Windows.Forms.ListViewAlignment value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ArrangeIcons(System.Windows.Forms.ListViewAlignment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ArrangeIcons (value As ListViewAlignment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ArrangeIcons(System::Windows::Forms::ListViewAlignment value);" />
      <MemberSignature Language="F#" Value="member this.ArrangeIcons : System.Windows.Forms.ListViewAlignment -&gt; unit" Usage="listView.ArrangeIcons value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewAlignment" />
      </Parameters>
      <Docs>
        <param name="value">Einer der <see cref="T:System.Windows.Forms.ListViewAlignment" />-Werte.</param>
        <summary>Ordnet Elemente im Steuerelement mit einer angegebenen Einstellung für die Ausrichtung an, wenn sie als Symbole angezeigt werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.ArrangeIcons%2A>-Methode ist nur nützlich, wenn die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft auf <xref:System.Windows.Forms.View.LargeIcon> oder <xref:System.Windows.Forms.View.SmallIcon>festgelegt ist. Diese Version der <xref:System.Windows.Forms.ListView.ArrangeIcons%2A>-Methode ordnet die Symbole in der <xref:System.Windows.Forms.ListView> auf der Grundlage des im `value`-Parameter angegebenen <xref:System.Windows.Forms.ListViewAlignment> Werts an. Durch Aufrufen dieser Methode wird der Wert der <xref:System.Windows.Forms.ListView.Alignment%2A>-Eigenschaft des Steuer Elements nicht geändert. Diese Methode wird verwendet, um Symbole auf dem Steuerelement mit einem anderen Wert als der <xref:System.Windows.Forms.ListView.Alignment%2A>-Eigenschaft anzuordnen. Wenn die Elemente basierend auf dem Wert der <xref:System.Windows.Forms.ListView.Alignment%2A>-Eigenschaft ausgerichtet werden sollen, verwenden Sie die andere Version der <xref:System.Windows.Forms.ListView.ArrangeIcons%2A>-Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der im <paramref name="value" />-Parameter angegebene Wert ist kein Member der <see cref="T:System.Windows.Forms.ListViewAlignment" />-Enumeration.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewAlignment" />
        <altmember cref="P:System.Windows.Forms.ListView.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="AutoArrange">
      <MemberSignature Language="C#" Value="public bool AutoArrange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoArrange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.AutoArrange" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoArrange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoArrange { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoArrange : bool with get, set" Usage="System.Windows.Forms.ListView.AutoArrange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab, ob die Anordnung von Symbolen automatisch beibehalten wird, oder legt dieses fest.</summary>
        <value><see langword="true" />, wenn die Anordnung von Symbolen automatisch beibehalten wird und die Symbole am Datenblatt ausgerichtet werden, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.AutoArrange%2A>-Eigenschaft ordnet nur Elemente im <xref:System.Windows.Forms.ListView>-Steuerelement an, wenn die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft auf <xref:System.Windows.Forms.View.LargeIcon> oder <xref:System.Windows.Forms.View.SmallIcon>festgelegt ist. Um die Ausrichtung von Elementen im <xref:System.Windows.Forms.ListView> Steuerelement zu ändern, verwenden Sie die <xref:System.Windows.Forms.ListView.Alignment%2A>-Eigenschaft. Sie können <xref:System.Windows.Forms.ListView.AutoArrange%2A> verwenden, um sicherzustellen, dass alle Elemente in Ihrem <xref:System.Windows.Forms.ListView>-Steuerelement automatisch so angeordnet werden, dass sich zur Laufzeit Überschneidungen vermeiden lassen.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumn">
      <MemberSignature Language="C#" Value="public void AutoResizeColumn (int columnIndex, System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumn(int32 columnIndex, valuetype System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.AutoResizeColumn(System.Int32,System.Windows.Forms.ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumn (columnIndex As Integer, headerAutoResize As ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumn(int columnIndex, System::Windows::Forms::ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumn : int * System.Windows.Forms.ColumnHeaderAutoResizeStyle -&gt; unit" Usage="listView.AutoResizeColumn (columnIndex, headerAutoResize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="headerAutoResize" Type="System.Windows.Forms.ColumnHeaderAutoResizeStyle" Index="1" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Der nullbasierte Index der Spalte, deren Breite geändert werden soll.</param>
        <param name="headerAutoResize">Einer der <see cref="T:System.Windows.Forms.ColumnHeaderAutoResizeStyle" />-Werte.</param>
        <summary>Ändert die Breite der angegebenen Spalte gemäß der Formatvorlage für die Größenänderung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Aufrufen dieser Methode ist nur wirksam, wenn die <xref:System.Windows.Forms.ListView> und enthaltende <xref:System.Windows.Forms.Form> erstellt wurden, und die Spaltenheader und Spalten der <xref:System.Windows.Forms.ListView> werden mit Elementen aufgefüllt. Wenn der <xref:System.Windows.Forms.ListView>neue Elemente hinzugefügt werden, wird die Größe der Spalten nur dann geändert, wenn <xref:System.Windows.Forms.ListView.AutoResizeColumn%2A> erneut aufgerufen wird.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine <xref:System.Windows.Forms.ListView> in der Detailansicht initialisiert und die Spalten automatisch mit der <xref:System.Windows.Forms.ListView.AutoResizeColumn%2A>-Methode angepasst. Fügen Sie diesen Code in ein Windows Form ein, und nennen Sie die `InitializeResizingListView`-Methode aus dem Konstruktor des Formulars oder <xref:System.Windows.Forms.Form.Load>-Ereignishandler, um dieses Beispiel auszuführen.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> ist größer als 0 (null), wenn <see cref="P:System.Windows.Forms.ListView.Columns" /><see langword="null" /> ist.  
  
Oder 
 <paramref name="columnIndex" /> ist kleiner als 0 (null) oder größer als die Anzahl der festgelegten Spalten.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="headerAutoResize" /> ist kein Member der <see cref="T:System.Windows.Forms.ColumnHeaderAutoResizeStyle" />-Enumeration.</exception>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumns">
      <MemberSignature Language="C#" Value="public void AutoResizeColumns (System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumns(valuetype System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.AutoResizeColumns(System.Windows.Forms.ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumns (headerAutoResize As ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumns(System::Windows::Forms::ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumns : System.Windows.Forms.ColumnHeaderAutoResizeStyle -&gt; unit" Usage="listView.AutoResizeColumns headerAutoResize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="headerAutoResize" Type="System.Windows.Forms.ColumnHeaderAutoResizeStyle" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="headerAutoResize">Einer der <see cref="T:System.Windows.Forms.ColumnHeaderAutoResizeStyle" />-Werte.</param>
        <summary>Ändert die Breite der Spalten gemäß der Formatvorlage für die Größenänderung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Aufrufen dieser Methode ist nur wirksam, wenn die <xref:System.Windows.Forms.ListView> und enthaltende <xref:System.Windows.Forms.Form> erstellt wurden, und die Spaltenheader und Spalten der <xref:System.Windows.Forms.ListView> werden mit Elementen aufgefüllt. Wenn der <xref:System.Windows.Forms.ListView>neue Elemente hinzugefügt werden, wird die Größe der Spalten nur dann geändert, wenn <xref:System.Windows.Forms.ListView.AutoResizeColumns%2A> erneut aufgerufen wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Initialisierung eines <xref:System.Windows.Forms.ListView> in der Detailansicht und das automatische Ändern der Größe der Spalten mit der <xref:System.Windows.Forms.ListView.AutoResizeColumns%2A>-Methode veranschaulicht. Fügen Sie diesen Code in ein Windows Form ein, und nennen Sie die `InitializeResizingListView2`-Methode aus dem Konstruktor des Formulars oder <xref:System.Windows.Forms.Form.Load>-Ereignishandler, um dieses Beispiel auszuführen.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#9)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Windows.Forms.ListView.AutoResizeColumn(System.Int32,System.Windows.Forms.ColumnHeaderAutoResizeStyle)" /> wird mit einem anderen Wert als <see cref="F:System.Windows.Forms.ColumnHeaderAutoResizeStyle.None" /> aufgerufen, wenn <see cref="P:System.Windows.Forms.ListView.View" /> nicht auf <see cref="F:System.Windows.Forms.View.Details" /> festgelegt ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ListView.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Hintergrundfarbe ab oder legt sie fest.</summary>
        <value>Die <see cref="T:System.Drawing.Color" /> des Hintergrunds.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.ListView.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das in diesem <see cref="T:System.Windows.Forms.ListView" />-Steuerelement angezeigte Hintergrundbild ab oder legt dieses fest.</summary>
        <value>Das Bild, das im Hintergrund des-Steuer Elements angezeigt werden soll.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.ListView.BackgroundImage" />-Eigenschaft ändert.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.ListView.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen <see cref="T:System.Windows.Forms.ImageLayout" />-Wert ab oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.ImageLayout" />-Werte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft hat keine Auswirkung auf das Layout des Hintergrund Bilds des <xref:System.Windows.Forms.ListView> Steuer Elements und wird daher nicht im Designer oder in IntelliSense angezeigt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der angegebene Wert ist keiner der <see cref="T:System.Windows.Forms.ImageLayout" />-Werte.</exception>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich die <see cref="P:System.Windows.Forms.ListView.BackgroundImageLayout" />-Eigenschaft ändert.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageTiled">
      <MemberSignature Language="C#" Value="public bool BackgroundImageTiled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BackgroundImageTiled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BackgroundImageTiled" />
      <MemberSignature Language="VB.NET" Value="Public Property BackgroundImageTiled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BackgroundImageTiled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageTiled : bool with get, set" Usage="System.Windows.Forms.ListView.BackgroundImageTiled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Hintergrundbild von <see cref="T:System.Windows.Forms.ListView" /> aufgeteilt werden soll, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn das Hintergrundbild der <see cref="T:System.Windows.Forms.ListView" /> aufgeteilt werden soll, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.BackgroundImageTiled%2A>-Eigenschaft gibt `false` zurück, wenn kein Bild festgelegt ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeLabelEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.LabelEditEventHandler BeforeLabelEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.LabelEditEventHandler BeforeLabelEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeforeLabelEdit As LabelEditEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::LabelEditEventHandler ^ BeforeLabelEdit;" />
      <MemberSignature Language="F#" Value="member this.BeforeLabelEdit : System.Windows.Forms.LabelEditEventHandler " Usage="member this.BeforeLabelEdit : System.Windows.Forms.LabelEditEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LabelEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Benutzer mit dem Bearbeiten der Bezeichnung eines Elements beginnt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.ListView.BeforeLabelEdit>-Ereignis tritt auf, wenn der Benutzer beginnt, den Text für ein Element zu ändern. Wenn der Ereignishandler dieses Ereignis abbricht, kann der Benutzer den Text nicht bearbeiten. Sie können dieses Ereignis verwenden, um zu verhindern, dass der Benutzer bestimmte Elemente im <xref:System.Windows.Forms.ListView> Steuerelement bearbeitet. Wenn die <xref:System.Windows.Forms.ListView.LabelEdit%2A>-Eigenschaft des <xref:System.Windows.Forms.ListView>-Steuer Elements auf `false`festgelegt ist, wird das <xref:System.Windows.Forms.ListView.BeforeLabelEdit>-Ereignis nicht ausgelöst. alle Benutzer Versuche, Element Bezeichnungen zu bearbeiten, werden automatisch abgelehnt.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Behandlung des <xref:System.Windows.Forms.ListView.BeforeLabelEdit> Ereignisses und die Verwendung der Eigenschaften <xref:System.Windows.Forms.LabelEditEventArgs.Item%2A?displayProperty=nameWithType> und <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A?displayProperty=nameWithType>. Um das Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular ein, das ein <xref:System.Windows.Forms.ListView>-Steuerelement mit dem Namen `ListView1` enthält und mindestens drei Elemente enthält. Stellen Sie sicher, dass der Ereignishandler im Beispiel dem-Ereignis zugeordnet ist.  
  
 [!code-cpp[System.Windows.Forms.ListView3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView3/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
        <altmember cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.LabelEdit" />
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public void BeginUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.BeginUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginUpdate();" />
      <MemberSignature Language="F#" Value="member this.BeginUpdate : unit -&gt; unit" Usage="listView.BeginUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verhindert das Zeichnen des Steuerelements bis zum Aufruf der <see cref="M:System.Windows.Forms.ListView.EndUpdate" />-Methode.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die bevorzugte Methode zum Hinzufügen mehrerer Elemente zu einem <xref:System.Windows.Forms.ListView> ist die Verwendung der <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A>-Methode des <xref:System.Windows.Forms.ListView.ListViewItemCollection> (der über die <xref:System.Windows.Forms.ListView.Items%2A>-Eigenschaft des <xref:System.Windows.Forms.ListView>aufgerufen wird). Dies ermöglicht es Ihnen, der Liste in einem einzelnen Vorgang ein Array von Elementen hinzuzufügen. Wenn Sie jedoch Elemente gleichzeitig mit der <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A>-Methode der <xref:System.Windows.Forms.ListView.ListViewItemCollection>-Klasse hinzufügen möchten, können Sie die <xref:System.Windows.Forms.ListView.BeginUpdate%2A>-Methode verwenden, um zu verhindern, dass das Steuerelement jedes Mal, wenn ein Element hinzugefügt wird, das <xref:System.Windows.Forms.ListView> neu gezeichnet. Wenn Sie das Hinzufügen von Elementen zum Steuerelement abgeschlossen haben, können Sie die <xref:System.Windows.Forms.ListView.EndUpdate%2A>-Methode aufzurufen, um die <xref:System.Windows.Forms.ListView> neu zu zeichnen. Diese Methode zum Hinzufügen von Elementen kann das geflistete Zeichnen der <xref:System.Windows.Forms.ListView> verhindern, wenn dem Steuerelement viele Elemente hinzugefügt werden.  
  
 Wenn <xref:System.Windows.Forms.ListView.BeginUpdate%2A> mehrmals aufgerufen wird, muss <xref:System.Windows.Forms.ListView.EndUpdate%2A> so oft wie folgt aufgerufen werden. Bis zum letzten <xref:System.Windows.Forms.ListView.EndUpdate%2A> der <xref:System.Windows.Forms.ListView> wird der Vorgang nicht neu gezeichnet. Abgesehen davon haben mehrere Aufrufe von <xref:System.Windows.Forms.ListView.BeginUpdate%2A> keine Auswirkung.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Initialisierung eines <xref:System.Windows.Forms.ListView>-Steuer Elements mit Kontrollkästchen veranschaulicht. Außerdem wird veranschaulicht, wie die Methoden <xref:System.Windows.Forms.ListView.BeginUpdate%2A> und <xref:System.Windows.Forms.ListView.EndUpdate%2A> verwendet werden. Fügen Sie den folgenden Code in ein Formular ein, das eine <xref:System.Windows.Forms.ListView> mit dem Namen `ListView1`enthält, um dieses Beispiel auszuführen. Ruft die `InitializeListView`-Methode aus dem Konstruktor des Formulars oder `Load` Methode auf.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.EndUpdate" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Windows.Forms.BorderStyle with get, set" Usage="System.Windows.Forms.ListView.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Rahmenart des Steuerelements ab oder legt diese fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.BorderStyle" />-Werte. Der Standardwert lautet <see cref="F:System.Windows.Forms.BorderStyle.Fixed3D" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die <xref:System.Windows.Forms.ListView.BorderStyle%2A>-Eigenschaft verwenden, um die Rahmenart des <xref:System.Windows.Forms.ListView> Steuer Elements so zu ändern, dass es den Einstellungen der Rahmenart anderer Steuerelemente im Formular entspricht. Wenn z. b. keines der anderen Steuerelemente auf dem Formular einen Rahmen anzeigt, können Sie die <xref:System.Windows.Forms.ListView.BorderStyle%2A>-Eigenschaft des <xref:System.Windows.Forms.ListView>-Steuer Elements auf <xref:System.Windows.Forms.BorderStyle.None> festlegen, um die anderen Steuerelemente abzugleichen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der angegebene Wert ist keiner der <see cref="T:System.Windows.Forms.BorderStyle" />-Werte.</exception>
        <altmember cref="T:System.Windows.Forms.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="CacheVirtualItems">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.CacheVirtualItemsEventHandler CacheVirtualItems;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.CacheVirtualItemsEventHandler CacheVirtualItems" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.CacheVirtualItems" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CacheVirtualItems As CacheVirtualItemsEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::CacheVirtualItemsEventHandler ^ CacheVirtualItems;" />
      <MemberSignature Language="F#" Value="member this.CacheVirtualItems : System.Windows.Forms.CacheVirtualItemsEventHandler " Usage="member this.CacheVirtualItems : System.Windows.Forms.CacheVirtualItemsEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CacheVirtualItemsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich die Inhalte des Anzeigebereichs für eine <see cref="T:System.Windows.Forms.ListView" /> im virtuellen Modus geändert haben und die <see cref="T:System.Windows.Forms.ListView" /> bestimmt, dass ein neuer Bereich von Elementen erforderlich ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt nur auf, wenn <xref:System.Windows.Forms.ListView.VirtualMode%2A> `true`ist. Durch die Behandlung dieses Ereignisses können die <xref:System.Windows.Forms.ListView> die im Cache gespeicherten Element Informationen aktualisieren, damit Sie sofort verfügbar sind. Dadurch kann die Leistung bei umfangreichen Listen oder Listen, deren Elemente zu berechnen sind, verbessert werden.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel prüft der Ereignishandler, ob eine Cache Aktualisierung wirklich notwendig ist, und erstellt dann den Cache neu. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Windows.Forms.ListView.VirtualMode%2A>-Eigenschaft bereitgestellt wird.  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#3)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxes">
      <MemberSignature Language="C#" Value="public bool CheckBoxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckBoxes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckBoxes" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckBoxes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckBoxes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckBoxes : bool with get, set" Usage="System.Windows.Forms.ListView.CheckBoxes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob neben jedem Element im Steuerelement ein Kontrollkästchen angezeigt wird, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn neben jedem Element im <see cref="T:System.Windows.Forms.ListView" />-Steuerelement ein Kontrollkästchen angezeigt wird, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der <xref:System.Windows.Forms.ListView.CheckBoxes%2A>-Eigenschaft können Sie ein Kontrollkästchen neben jedem Element in der Liste anzeigen. Dadurch kann Ihre Anwendung eine Liste von Elementen (und unter Elemente, wenn die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft auf `View.Details`festgelegt ist) anzeigen, die der Benutzer durch Klicken auf das Kontrollkästchen auswählen kann. Die <xref:System.Windows.Forms.ListView.CheckBoxes%2A>-Eigenschaft bietet eine Möglichkeit, mehrere Elemente im <xref:System.Windows.Forms.ListView>-Steuerelement auszuwählen, ohne die STRG-Taste zu verwenden. Abhängig von Ihrer Anwendung ist es möglicherweise einfacher, die Kontrollkästchen für die Auswahl von Elementen anstelle der Standardauswahl Methode mehrfach auszuwählen. Auch wenn die <xref:System.Windows.Forms.ListView.MultiSelect%2A>-Eigenschaft des <xref:System.Windows.Forms.ListView>-Steuer Elements auf `false`festgelegt ist, können Sie weiterhin Kontrollkästchen anzeigen und dem Benutzer mehrere Auswahlmöglichkeiten bereitstellen. Diese Funktion kann nützlich sein, wenn Sie nicht möchten, dass mehrere Elemente ausgewählt werden, damit der Benutzer mehrere Elemente aus der Liste auswählen kann, um einen Vorgang innerhalb der Anwendung auszuführen.  
  
 Erstellen Sie einen Ereignishandler für das <xref:System.Windows.Forms.ListView.ItemCheck>-Ereignis, um zu bestimmen, wann ein Element aktiviert wurde. Um alle Elemente zu erhalten, die in der <xref:System.Windows.Forms.ListView>geprüft werden, verwenden Sie die <xref:System.Windows.Forms.ListView.CheckedItems%2A>-Eigenschaft, um auf die <xref:System.Windows.Forms.ListView.CheckedIndexCollection> für das-Steuerelement zuzugreifen. Um die Indizes aller im <xref:System.Windows.Forms.ListView>aktivierten Elemente zu erhalten, verwenden Sie die <xref:System.Windows.Forms.ListView.CheckedIndices%2A>-Eigenschaft.  
  
 Wenn ein <xref:System.Windows.Forms.ImageList> in der <xref:System.Windows.Forms.ListView.StateImageList%2A>-Eigenschaft angegeben wird, werden die Bilder an den Index Positionen 0 und 1 im <xref:System.Windows.Forms.ImageList> anstelle des Kontrollkästchens angezeigt. Das Bild an Indexposition 0 wird anstelle des Kontrollkästchens angezeigt, und das Bild an Indexposition 1 wird anstelle des aktivierten Kontrollkästchens angezeigt.  
  
> [!NOTE]
>  Wenn Sie diese Eigenschaft auf `true`festlegen, tritt das <xref:System.Windows.Forms.ListView.ItemCheck>-Ereignis auf.  
>   
>  Kontrollkästchen werden nicht angezeigt, wenn die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft auf <xref:System.Windows.Forms.View.Tile>festgelegt ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.ListView>-Steuerelement mit drei <xref:System.Windows.Forms.ListViewItem> angegebenen Objekten und drei <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>-Objekten erstellt, die für jedes Element angegeben wurden. Im Beispiel werden auch <xref:System.Windows.Forms.ColumnHeader> Objekte erstellt, um die unter Elemente in der Detailansicht anzuzeigen. Zwei <xref:System.Windows.Forms.ImageList> Objekte werden auch im Codebeispiel erstellt, um Bilder für die <xref:System.Windows.Forms.ListViewItem> Objekte bereitzustellen. Diese <xref:System.Windows.Forms.ImageList> Objekte werden den Eigenschaften <xref:System.Windows.Forms.ListView.LargeImageList%2A> und <xref:System.Windows.Forms.ListView.SmallImageList%2A> hinzugefügt. Das Beispiel verwendet die folgenden Eigenschaften, um das <xref:System.Windows.Forms.ListView>-Steuerelement zu erstellen.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Dieses Beispiel erfordert, dass Sie den Code zu einem <xref:System.Windows.Forms.Form> hinzugefügt und die im Beispiel erstellte Methode aus dem Konstruktor oder einer anderen Methode im Formular aufgerufen haben. Das Beispiel setzt auch voraus, dass Images mit dem Namen `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`und `MyLargeImage2` sich im Stammverzeichnis des Laufwerks C befinden.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.StateImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="P:System.Windows.Forms.ListView.MultiSelect" />
      </Docs>
    </Member>
    <Member MemberName="CheckedIndices">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.CheckedIndexCollection CheckedIndices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/CheckedIndexCollection CheckedIndices" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedIndices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckedIndices As ListView.CheckedIndexCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::CheckedIndexCollection ^ CheckedIndices { System::Windows::Forms::ListView::CheckedIndexCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckedIndices : System.Windows.Forms.ListView.CheckedIndexCollection" Usage="System.Windows.Forms.ListView.CheckedIndices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+CheckedIndexCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Indizes der gegenwärtig im Steuerelement aktivierten Elemente ab.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" />, die die Indizes der gegenwärtig aktivierten Elemente enthält. Wenn gegenwärtig keine Elemente aktiviert sind, wird eine leere <see cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" /> zurückgegeben.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist nur nützlich, wenn die <xref:System.Windows.Forms.ListView.CheckBoxes%2A>-Eigenschaft des <xref:System.Windows.Forms.ListView>-Steuer Elements auf `true`festgelegt ist. Die <xref:System.Windows.Forms.ListView.CheckedIndices%2A>-Eigenschaft gibt eine Auflistung zurück, die die Index Positionen in der <xref:System.Windows.Forms.ListView.ListViewItemCollection> aller im Steuerelement aktivierten Elemente enthält. Weitere Informationen zum Bearbeiten der Elemente in der Auflistung finden Sie unter <xref:System.Windows.Forms.ListView.CheckedIndexCollection>.  
  
 Wenn Sie eine Auflistung der im <xref:System.Windows.Forms.ListView> Steuerelement aktivierten Elemente abrufen möchten, anstelle der Index Positionen der Elemente, die geprüft werden, verwenden Sie die <xref:System.Windows.Forms.ListView.CheckedItems%2A>-Eigenschaft.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckedItems" />
      </Docs>
    </Member>
    <Member MemberName="CheckedItems">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.CheckedListViewItemCollection CheckedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/CheckedListViewItemCollection CheckedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckedItems As ListView.CheckedListViewItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::CheckedListViewItemCollection ^ CheckedItems { System::Windows::Forms::ListView::CheckedListViewItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckedItems : System.Windows.Forms.ListView.CheckedListViewItemCollection" Usage="System.Windows.Forms.ListView.CheckedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+CheckedListViewItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die gegenwärtig im Steuerelement aktivierten Elemente ab.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" />, die die gegenwärtig aktivierten Elemente enthält. Wenn gegenwärtig keine Elemente aktiviert sind, wird eine leere <see cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" /> zurückgegeben.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist nur nützlich, wenn die <xref:System.Windows.Forms.ListView.CheckBoxes%2A>-Eigenschaft des <xref:System.Windows.Forms.ListView>-Steuer Elements auf `true`festgelegt ist. Die <xref:System.Windows.Forms.ListView.CheckedItems%2A>-Eigenschaft gibt eine Auflistung zurück, die alle im Steuerelement aktivierten Elemente enthält. Weitere Informationen zum Bearbeiten der Elemente in der Auflistung finden Sie unter <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection>.  
  
 Wenn Sie eine Auflistung der Index Positionen innerhalb der <xref:System.Windows.Forms.ListView.ListViewItemCollection> der im <xref:System.Windows.Forms.ListView> Steuerelement aktivierten Elemente abrufen möchten, anstatt die Elemente zu überprüfen, die aktiviert sind, verwenden Sie die Eigenschaft <xref:System.Windows.Forms.ListView.CheckedIndices%2A>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine aktivierte <xref:System.Windows.Forms.ListView> veranschaulicht, die das <xref:System.Windows.Forms.ListView.ItemChecked>-Ereignis behandelt. Im Beispiel wird die <xref:System.Windows.Forms.ListView.CheckedItems%2A>-Eigenschaft verwendet, um einen neuen Preis jedes Mal zu abonnieren, wenn ein Element aktiviert oder deaktiviert wird. Fügen Sie zum Ausführen dieses Beispiels den folgenden Code in ein Formular ein, das eine <xref:System.Windows.Forms.ListView> mit dem Namen `ListView1` und eine <xref:System.Windows.Forms.TextBox> namens `Textbox1`enthält. Ruft die `InitializeListView`-Methode aus dem Konstruktor des Formulars oder `Load` Methode auf.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#3)]
[!code-csharp[System.Windows.Forms.ListView2#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#3)]
[!code-vb[System.Windows.Forms.ListView2#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckedIndices" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="listView.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt alle Elemente und Spalten aus dem Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Methode können Sie alle Elemente und Spalten aus dem <xref:System.Windows.Forms.ListView>-Steuerelement entfernen, ohne die einzelnen `Clear` Methoden aus den Klassen <xref:System.Windows.Forms.ListView.ColumnHeaderCollection> und <xref:System.Windows.Forms.ListView.ListViewItemCollection> aufrufen zu müssen.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.ListView.Clear%2A>-Methode löscht <xref:System.Windows.Forms.ListView.Groups%2A>, der für das <xref:System.Windows.Forms.ListView>-Steuerelement angegeben wurde. , Um <xref:System.Windows.Forms.ListView.Groups%2A> Aufruf<xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A?displayProperty=nameWithType>zu löschen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung von <xref:System.Windows.Forms.ListView.Clear%2A> und <xref:System.Windows.Forms.ListViewItem.Selected%2A?displayProperty=nameWithType> Membern veranschaulicht. Fügen Sie zum Ausführen dieses Beispiels den folgenden Code in ein Formular ein, das eine <xref:System.Windows.Forms.ListView> mit dem Namen `ListView1` und eine Schaltfläche enthält, die sich am unteren Rand des Formulars mit dem Namen `Button1`befindet. Ruft die `InitializeListView`-Methode aus dem Konstruktor des Formulars oder `Load` Methode auf.  
  
 [!code-cpp[System.Windows.Forms.ListView4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView4/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView4/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView4/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="ColumnClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnClickEventHandler ColumnClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnClickEventHandler ColumnClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnClick As ColumnClickEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnClickEventHandler ^ ColumnClick;" />
      <MemberSignature Language="F#" Value="member this.ColumnClick : System.Windows.Forms.ColumnClickEventHandler " Usage="member this.ColumnClick : System.Windows.Forms.ColumnClickEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn Benutzer im Listenansicht-Steuerelement auf einen Spaltenkopf klicken.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.ListView.ColumnClick> Ereignis tritt auf, wenn der Benutzer auf einen der Spaltenüberschriften in der Detailansicht der Elemente in einem <xref:System.Windows.Forms.ListView>-Steuerelement klickt (wenn die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft auf <xref:System.Windows.Forms.View.Details>festgelegt ist). Das <xref:System.Windows.Forms.ListView.ColumnClick> Ereignis wird in der Regel behandelt, um die Elemente in der <xref:System.Windows.Forms.ListView> mithilfe der Spalte, auf die geklickt wird, als Spalte zu sortieren.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein Formular erstellt, das ein <xref:System.Windows.Forms.ListView> Steuerelement enthält, das Elemente manuell sortiert, wenn auf eine Spalte im <xref:System.Windows.Forms.ListView>-Steuerelement geklickt wird. Das Beispiel definiert eine Klasse mit dem Namen `ListViewItemComparer`, die die <xref:System.Collections.IComparer?displayProperty=nameWithType>-Schnittstelle implementiert, die den <xref:System.Windows.Forms.ListViewItem>-Vergleich ausführt. Im Beispiel wird eine Instanz von `ListViewItemComparer` erstellt und verwendet, um die <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A>-Eigenschaft des <xref:System.Windows.Forms.ListView>-Steuer Elements festzulegen. Der <xref:System.Windows.Forms.ListView.Sort%2A>-Methodenaufrufe im <xref:System.Windows.Forms.ListView.ColumnClick>-Ereignishandler verwendet die in `ListViewItemComparer` definierten Methoden, um die Art der Elemente basierend auf der Spalte, auf die geklickt wird, auszuführen.  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ColumnReordered">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnReorderedEventHandler ColumnReordered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnReorderedEventHandler ColumnReordered" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnReordered" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnReordered As ColumnReorderedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnReorderedEventHandler ^ ColumnReordered;" />
      <MemberSignature Language="F#" Value="member this.ColumnReordered : System.Windows.Forms.ColumnReorderedEventHandler " Usage="member this.ColumnReordered : System.Windows.Forms.ColumnReorderedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnReorderedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn die Reihenfolge der Spaltenheader geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.ListView.ColumnReordered> Ereignis ist ein abbrechbares Ereignis und kann abgebrochen werden, indem das-Ereignis behandelt und die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>-Eigenschaft auf `true`festgelegt wird. Wenn das Ereignis jedoch abgebrochen wird, wird der <xref:System.Windows.Forms.ColumnReorderedEventArgs.NewDisplayIndex%2A> des <xref:System.Windows.Forms.ColumnReorderedEventArgs> nicht in den <xref:System.Windows.Forms.ColumnReorderedEventArgs.OldDisplayIndex%2A> Wert geändert.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.ListView.ColumnReordered> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, können Sie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> durch <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ersetzen oder die Nachricht an eine mehrzeilige <xref:System.Windows.Forms.TextBox>anhängen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz des Typs <xref:System.Windows.Forms.ListView> mit dem Namen `ListView1`enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.ListView.ColumnReordered>-Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#467](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#467)]
 [!code-vb[System.Windows.Forms.EventExamples#467](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#467)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.ColumnHeaderCollection Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/ColumnHeaderCollection Columns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As ListView.ColumnHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::ColumnHeaderCollection ^ Columns { System::Windows::Forms::ListView::ColumnHeaderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Columns : System.Windows.Forms.ListView.ColumnHeaderCollection" Usage="System.Windows.Forms.ListView.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ColumnHeaderCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ColumnHeaderCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+ColumnHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung aller Spaltenköpfe ab, die im Steuerelement angezeigt werden.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />, die die Spaltenheader darstellt, die angezeigt werden, wenn die <see cref="P:System.Windows.Forms.ListView.View" />-Eigenschaft auf <see cref="F:System.Windows.Forms.View.Details" /> festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.Columns%2A>-Eigenschaft gibt eine Auflistung zurück, die die <xref:System.Windows.Forms.ColumnHeader>-Objekte enthält, die im <xref:System.Windows.Forms.ListView>-Steuerelement angezeigt werden. <xref:System.Windows.Forms.ColumnHeader> Objekte definieren die Spalten, die im <xref:System.Windows.Forms.ListView>-Steuerelement angezeigt werden, wenn die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft auf <xref:System.Windows.Forms.View.Details>festgelegt ist. Jede Spalte wird verwendet, um untergeordnete Informationen für jedes Element in der <xref:System.Windows.Forms.ListView>anzuzeigen. Weitere Informationen zum Bearbeiten der Elemente in der Auflistung finden Sie unter <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
> [!NOTE]
>  Wenn für das <xref:System.Windows.Forms.ListView> Steuerelement keine Spaltenüberschriften angegeben sind und Sie die Eigenschaft <xref:System.Windows.Forms.ListView.View%2A> auf <xref:System.Windows.Forms.View.Details>festlegen, werden im <xref:System.Windows.Forms.ListView> Steuerelement keine Elemente angezeigt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.ListView>-Steuerelement mit drei <xref:System.Windows.Forms.ListViewItem> angegebenen Objekten und drei <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>-Objekten erstellt, die für jedes Element angegeben wurden. Im Beispiel werden auch <xref:System.Windows.Forms.ColumnHeader> Objekte erstellt, um die unter Elemente in der Detailansicht anzuzeigen. Zwei <xref:System.Windows.Forms.ImageList> Objekte werden auch im Codebeispiel erstellt, um Bilder für die <xref:System.Windows.Forms.ListViewItem> Objekte bereitzustellen. Diese <xref:System.Windows.Forms.ImageList> Objekte werden den Eigenschaften <xref:System.Windows.Forms.ListView.LargeImageList%2A> und <xref:System.Windows.Forms.ListView.SmallImageList%2A> hinzugefügt. Das Beispiel verwendet die folgenden Eigenschaften, um das <xref:System.Windows.Forms.ListView>-Steuerelement zu erstellen.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Dieses Beispiel erfordert, dass Sie den Code zu einem <xref:System.Windows.Forms.Form> hinzugefügt und die im Beispiel erstellte Methode aus dem Konstruktor oder einer anderen Methode im Formular aufgerufen haben. Das Beispiel setzt auch voraus, dass Images mit dem Namen `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`und `MyLargeImage2` sich im Stammverzeichnis des Laufwerks C befinden.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
      </Docs>
    </Member>
    <Member MemberName="ColumnWidthChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnWidthChangedEventHandler ColumnWidthChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnWidthChangedEventHandler ColumnWidthChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnWidthChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnWidthChanged As ColumnWidthChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnWidthChangedEventHandler ^ ColumnWidthChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnWidthChanged : System.Windows.Forms.ColumnWidthChangedEventHandler " Usage="member this.ColumnWidthChanged : System.Windows.Forms.ColumnWidthChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnWidthChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, nachdem die Breite einer Spalte erfolgreich geändert wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt nicht auf, wenn die Änderung der Spaltenbreite im <xref:System.Windows.Forms.ListView.ColumnWidthChanging> Ereignis abgebrochen wird.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.ListView.ColumnWidthChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, können Sie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> durch <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ersetzen oder die Nachricht an eine mehrzeilige <xref:System.Windows.Forms.TextBox>anhängen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz des Typs <xref:System.Windows.Forms.ListView> mit dem Namen `ListView1`enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.ListView.ColumnWidthChanged>-Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#468](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#468)]
 [!code-vb[System.Windows.Forms.EventExamples#468](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#468)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnWidthChanging">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnWidthChangingEventHandler ColumnWidthChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnWidthChangingEventHandler ColumnWidthChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnWidthChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnWidthChanging As ColumnWidthChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnWidthChangingEventHandler ^ ColumnWidthChanging;" />
      <MemberSignature Language="F#" Value="member this.ColumnWidthChanging : System.Windows.Forms.ColumnWidthChangingEventHandler " Usage="member this.ColumnWidthChanging : System.Windows.Forms.ColumnWidthChangingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnWidthChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich die Breite einer Spalte ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis ermöglicht es Ihnen, die neue Spaltenbreite mit der <xref:System.Windows.Forms.ColumnWidthChangingEventArgs.NewWidth%2A?displayProperty=nameWithType>-Eigenschaft zu überprüfen und das Ereignis abzubrechen, wenn Sie wählen, indem Sie die Eigenschaft <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> auf `true`festlegen.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Behandlung des <xref:System.Windows.Forms.ListView.ColumnWidthChanging> Ereignisses veranschaulicht. Außerdem werden die <xref:System.Windows.Forms.ColumnWidthChangingEventArgs.NewWidth%2A?displayProperty=nameWithType>-und <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>-Member veranschaulicht. Fügen Sie den Code in ein Windows Form ein, um dieses Beispiel auszuführen. Ruft `InitializeListView1` aus dem Konstruktor des Formulars oder <xref:System.Windows.Forms.Form.Load> Ereignis Handlers ab.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="listView.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine neue Instanz des Zugriffsobjekts für das <see cref="T:System.Windows.Forms.ListView" />-Steuerelement.</summary>
        <returns>Der <see cref="T:System.Windows.Forms.Control.ControlAccessibleObject" /> für dieses <see cref="T:System.Windows.Forms.ListView" />-Steuerelement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberSignature Language="F#" Value="override this.CreateHandle : unit -&gt; unit" Usage="listView.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein Handle für das Steuerelement.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.ListView.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft ist für diese Klasse nicht relevant.</summary>
        <value><see langword="null" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist für diese Klasse nicht relevant.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.ListView.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Standardgröße des Steuerelements ab.</summary>
        <value>Die Standard-<see cref="T:System.Drawing.Size" /> des Steuerelements.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="listView.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
        <summary>Gibt die von <see cref="T:System.Windows.Forms.ListView" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ruft die <xref:System.Windows.Forms.ListView.Dispose%2A>-Methode auf, wenn die Komponente nicht mehr benötigt wird. Diese Methode entfernt die Komponente aus dem Container (wenn die Komponente über einen Standort verfügt) und löst das Lösch Ereignis aus.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffered">
      <MemberSignature Language="C#" Value="protected override bool DoubleBuffered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleBuffered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.DoubleBuffered" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DoubleBuffered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DoubleBuffered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoubleBuffered : bool with get, set" Usage="System.Windows.Forms.ListView.DoubleBuffered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Steuerelement seine Oberfläche unter Verwendung eines sekundären Puffers neu zeichnen soll, um Flackern zu verringern oder zu vermeiden, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn die Oberfläche des Steuerelements mit Doppelpufferung gezeichnet werden soll, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawColumnHeader">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawListViewColumnHeaderEventHandler DrawColumnHeader;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawListViewColumnHeaderEventHandler DrawColumnHeader" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.DrawColumnHeader" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawColumnHeader As DrawListViewColumnHeaderEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawListViewColumnHeaderEventHandler ^ DrawColumnHeader;" />
      <MemberSignature Language="F#" Value="member this.DrawColumnHeader : System.Windows.Forms.DrawListViewColumnHeaderEventHandler " Usage="member this.DrawColumnHeader : System.Windows.Forms.DrawListViewColumnHeaderEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawListViewColumnHeaderEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn die Detailansicht einer <see cref="T:System.Windows.Forms.ListView" /> gezeichnet wird und die <see cref="P:System.Windows.Forms.ListView.OwnerDraw" />-Eigenschaft auf <see langword="true" /> festgelegt ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis ermöglicht Ihnen die Anpassung der Darstellung eines <xref:System.Windows.Forms.ListView>-Steuer Elements mithilfe der Besitzer Zeichnung. Sie wird nur ausgelöst, wenn die <xref:System.Windows.Forms.ListView.OwnerDraw%2A>-Eigenschaft auf `true` festgelegt ist und die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft auf <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>festgelegt ist. Dieses Ereignis kann für jeden Spaltenheader im-Steuerelement auftreten. Weitere Informationen zum Erstellen von Besitzern finden Sie im <xref:System.Windows.Forms.ListView.OwnerDraw%2A>-Eigenschafts Referenz Thema.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Implementierung eines <xref:System.Windows.Forms.ListView.DrawColumnHeader> Ereignis Handlers bereitstellt. Das gesamte Beispiel, einschließlich der Implementierung des <xref:System.Windows.Forms.ListView.DrawSubItem> Ereignis Handlers, finden Sie im <xref:System.Windows.Forms.ListView.OwnerDraw%2A> Referenz Thema.  
  
 [!code-csharp[ListViewOwnerDraw#5](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#5)]
 [!code-vb[ListViewOwnerDraw#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="T:System.Windows.Forms.DrawListViewColumnHeaderEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="DrawItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawListViewItemEventHandler DrawItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawListViewItemEventHandler DrawItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.DrawItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawItem As DrawListViewItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawListViewItemEventHandler ^ DrawItem;" />
      <MemberSignature Language="F#" Value="member this.DrawItem : System.Windows.Forms.DrawListViewItemEventHandler " Usage="member this.DrawItem : System.Windows.Forms.DrawListViewItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawListViewItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn eine <see cref="T:System.Windows.Forms.ListView" /> gezeichnet wird und die <see cref="P:System.Windows.Forms.ListView.OwnerDraw" />-Eigenschaft auf <see langword="true" /> festgelegt ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis ermöglicht Ihnen die Anpassung der Darstellung eines <xref:System.Windows.Forms.ListView>-Steuer Elements mithilfe der Besitzer Zeichnung. Sie wird nur ausgelöst, wenn die <xref:System.Windows.Forms.ListView.OwnerDraw%2A>-Eigenschaft auf `true`festgelegt ist. Weitere Informationen zum Erstellen von Besitzern finden Sie im <xref:System.Windows.Forms.ListView.OwnerDraw%2A>-Eigenschafts Referenz Thema.  
  
 Das <xref:System.Windows.Forms.ListView.DrawItem> Ereignis kann für jedes <xref:System.Windows.Forms.ListView> Element auftreten. Wenn die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft auf <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>festgelegt ist, treten auch die Ereignisse <xref:System.Windows.Forms.ListView.DrawSubItem> und <xref:System.Windows.Forms.ListView.DrawColumnHeader> auf. In diesem Fall können Sie das <xref:System.Windows.Forms.ListView.DrawItem>-Ereignis behandeln, um Elemente zu zeichnen, die allen Elementen, z. b. dem Hintergrund, gemeinsam sind, und das <xref:System.Windows.Forms.ListView.DrawSubItem>-Ereignis behandeln, um Elemente für einzelne unter Elemente, wie z. b. Textwerte, zu zeichnen. Sie können auch alle Elemente im <xref:System.Windows.Forms.ListView> Steuerelement mit nur einem der beiden Ereignisse zeichnen, obwohl dies weniger praktisch sein kann. Um Spaltenüberschriften in der Detailansicht zu zeichnen, müssen Sie das <xref:System.Windows.Forms.ListView.DrawColumnHeader>-Ereignis behandeln.  
  
> [!NOTE]
>  Aufgrund eines Fehlers im zugrunde liegenden Win32-Steuerelement tritt das <xref:System.Windows.Forms.ListView.DrawItem>-Ereignis auf, ohne dass <xref:System.Windows.Forms.ListView.DrawSubItem> Ereignisse einmal pro Zeile in der Detailansicht begleitet werden, wenn der Mauszeiger über die Zeile bewegt wird. Dadurch wird alles, was in einem <xref:System.Windows.Forms.ListView.DrawSubItem> Ereignishandler gezeichnet wird, durch einen benutzerdefinierten Hintergrund gezeichnet, der in einem <xref:System.Windows.Forms.ListView.DrawItem> Ereignishandler gezeichnet wird. Im Beispiel des <xref:System.Windows.Forms.ListView.OwnerDraw%2A> Referenz Themas finden Sie eine Problem Umgehung, die jede Zeile für ungültig erklärt, wenn das zusätzliche Ereignis auftritt. Eine alternative Lösung besteht darin, den gesamten benutzerdefinierten Zeichnungs Code in einem <xref:System.Windows.Forms.ListView.DrawSubItem>-Ereignishandler abzulegen und den Hintergrund für das gesamte Element (einschließlich der unter Elemente) nur dann zu zeichnen, wenn der <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.ColumnIndex%2A?displayProperty=nameWithType> Wert 0 ist.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Implementierung eines <xref:System.Windows.Forms.ListView.DrawItem> Ereignis Handlers bereitstellt. Das komplette Beispiel finden Sie im <xref:System.Windows.Forms.ListView.OwnerDraw%2A> Referenz Thema.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="T:System.Windows.Forms.DrawListViewItemEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawColumnHeader" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="DrawSubItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawListViewSubItemEventHandler DrawSubItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawListViewSubItemEventHandler DrawSubItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.DrawSubItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawSubItem As DrawListViewSubItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawListViewSubItemEventHandler ^ DrawSubItem;" />
      <MemberSignature Language="F#" Value="member this.DrawSubItem : System.Windows.Forms.DrawListViewSubItemEventHandler " Usage="member this.DrawSubItem : System.Windows.Forms.DrawListViewSubItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawListViewSubItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn die Detailansicht einer <see cref="T:System.Windows.Forms.ListView" /> gezeichnet wird und die <see cref="P:System.Windows.Forms.ListView.OwnerDraw" />-Eigenschaft auf <see langword="true" /> festgelegt ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis ermöglicht Ihnen die Anpassung der Darstellung eines <xref:System.Windows.Forms.ListView>-Steuer Elements mithilfe der Besitzer Zeichnung. Sie wird nur ausgelöst, wenn die <xref:System.Windows.Forms.ListView.OwnerDraw%2A>-Eigenschaft auf `true` festgelegt ist und die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft auf <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>festgelegt ist. Weitere Informationen zum Erstellen von Besitzern finden Sie im <xref:System.Windows.Forms.ListView.OwnerDraw%2A>-Eigenschafts Referenz Thema.  
  
> [!NOTE]
>  Unterelement Informationen werden in der Regel in der Kachel Ansicht und in der Detailansicht angezeigt, aber in der Kachel Ansicht muss Sie in einem Handler für das Ereignis <xref:System.Windows.Forms.ListView.DrawItem> gezeichnet werden.  
  
 Das <xref:System.Windows.Forms.ListView.DrawSubItem> Ereignis kann für jedes <xref:System.Windows.Forms.ListView> Unterelement auftreten. Sie können das <xref:System.Windows.Forms.ListView.DrawItem>-Ereignis behandeln, um Elemente zu zeichnen, die allen unter Elementen, z. b. dem Hintergrund, gemeinsam sind, und das <xref:System.Windows.Forms.ListView.DrawSubItem>-Ereignis behandeln, um Elemente für einzelne unter Elemente (z. b. Textwerte) zu zeichnen. Sie können auch alle Elemente im <xref:System.Windows.Forms.ListView> Steuerelement mit nur einem der beiden Ereignisse zeichnen, obwohl dies weniger praktisch sein kann. Um Spaltenüberschriften in der Detailansicht zu zeichnen, müssen Sie das <xref:System.Windows.Forms.ListView.DrawColumnHeader>-Ereignis behandeln.  
  
> [!NOTE]
>  Das <xref:System.Windows.Forms.ListView.DrawSubItem>-Ereignis tritt nicht für unter Elemente auf, für die der <xref:System.Windows.Forms.ListView.Columns%2A> Auflistung kein <xref:System.Windows.Forms.ColumnHeader> Objekt hinzugefügt wurde. Beachten Sie auch, dass das erste Unterelement jedes <xref:System.Windows.Forms.ListViewItem> Objekts das übergeordnete Element selbst darstellt und in der ersten Spalte angezeigt wird.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Implementierung eines <xref:System.Windows.Forms.ListView.DrawSubItem> Ereignis Handlers bereitstellt. Das komplette Beispiel finden Sie im <xref:System.Windows.Forms.ListView.OwnerDraw%2A> Referenz Thema.  
  
 [!code-csharp[ListViewOwnerDraw#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#4)]
 [!code-vb[ListViewOwnerDraw#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="T:System.Windows.Forms.DrawListViewSubItemEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawColumnHeader" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="EndUpdate">
      <MemberSignature Language="C#" Value="public void EndUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.EndUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndUpdate();" />
      <MemberSignature Language="F#" Value="member this.EndUpdate : unit -&gt; unit" Usage="listView.EndUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Nimmt das Zeichnen des Listenfeld-Steuerelements wieder auf, nachdem es durch die <see cref="M:System.Windows.Forms.ListView.BeginUpdate" />-Methode angehalten wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die bevorzugte Methode zum Hinzufügen mehrerer Elemente zu einem <xref:System.Windows.Forms.ListView> ist die Verwendung der <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A>-Methode des <xref:System.Windows.Forms.ListView.ListViewItemCollection> (der über die <xref:System.Windows.Forms.ListView.Items%2A>-Eigenschaft des <xref:System.Windows.Forms.ListView>aufgerufen wird). Dies ermöglicht es Ihnen, der Liste in einem einzelnen Vorgang ein Array von Elementen hinzuzufügen. Wenn Sie jedoch Elemente einzeln mithilfe der <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A>-Methode der <xref:System.Windows.Forms.ListView.ListViewItemCollection>-Klasse hinzufügen möchten, können Sie die <xref:System.Windows.Forms.ListView.BeginUpdate%2A>-Methode verwenden, um zu verhindern, dass das Steuerelement jedes Mal, wenn ein Element hinzugefügt wird, das <xref:System.Windows.Forms.ListView> neu gezeichnet. Nachdem Sie das Hinzufügen von Elementen zum Steuerelement abgeschlossen haben, können Sie die <xref:System.Windows.Forms.ListView.EndUpdate%2A>-Methode aufzurufen, um die <xref:System.Windows.Forms.ListView> neu zu zeichnen. Diese Methode zum Hinzufügen von Elementen kann das geflistete Zeichnen der <xref:System.Windows.Forms.ListView> verhindern, wenn dem Steuerelement eine große Anzahl von Elementen hinzugefügt wird.  
  
 Wenn <xref:System.Windows.Forms.ListView.BeginUpdate%2A> mehrmals aufgerufen wird, muss <xref:System.Windows.Forms.ListView.EndUpdate%2A> so oft wie folgt aufgerufen werden. Bis zum letzten <xref:System.Windows.Forms.ListView.EndUpdate%2A> der <xref:System.Windows.Forms.ListView> wird der Vorgang nicht neu gezeichnet. Abgesehen davon haben mehrere Aufrufe von <xref:System.Windows.Forms.ListView.BeginUpdate%2A> keine Auswirkung.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Initialisierung eines <xref:System.Windows.Forms.ListView>-Steuer Elements mit Kontrollkästchen veranschaulicht. Außerdem wird die Verwendung der Methoden <xref:System.Windows.Forms.ListView.BeginUpdate%2A> und <xref:System.Windows.Forms.ListView.EndUpdate%2A> veranschaulicht. Fügen Sie zum Ausführen dieses Beispiels den folgenden Code in ein Formular ein, das eine <xref:System.Windows.Forms.ListView> mit dem Namen `ListView1`enthält. Ruft die `InitializeListView`-Methode aus dem Konstruktor des Formulars oder `Load` Methode auf.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.BeginUpdate" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="EnsureVisible">
      <MemberSignature Language="C#" Value="public void EnsureVisible (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnsureVisible(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.EnsureVisible(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnsureVisible (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnsureVisible(int index);" />
      <MemberSignature Language="F#" Value="member this.EnsureVisible : int -&gt; unit" Usage="listView.EnsureVisible index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des Elements, das durch einen Bildlauf sichtbar gemacht werden soll.</param>
        <summary>Gewährleistet, dass das angegebene Element im Steuerelement angezeigt wird und führt ggf. einen Bildlauf durch den Inhalt des Steuerelements durch.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Methode können Sie sicherstellen, dass ein bestimmtes Element im <xref:System.Windows.Forms.ListView> Steuerelement sichtbar ist. Wenn Sie die Elemente in einer <xref:System.Windows.Forms.ListView>validieren, können Sie die <xref:System.Windows.Forms.ListView.EnsureVisible%2A>-Methode aufzurufen, um sicherzustellen, dass ein Element, bei dem die Validierung fehlgeschlagen ist, im <xref:System.Windows.Forms.ListView>-Steuerelement angezeigt wird, damit der Benutzer Änderungen am Element ausführen kann. Wenn sich das Element, das Sie sicherstellen möchten, über dem sichtbaren Bereich des <xref:System.Windows.Forms.ListView> Steuer Elements befindet, wird durch den Aufruf der <xref:System.Windows.Forms.ListView.EnsureVisible%2A>-Methode der Inhalt des Steuer Elements bis zum ersten Element im sichtbaren Bereich des Steuer Elements durchlaufen. Wenn sich das Element unter dem sichtbaren Bereich des <xref:System.Windows.Forms.ListView> Steuer Elements befindet, wird beim Aufrufen der <xref:System.Windows.Forms.ListView.EnsureVisible%2A>-Methode der Inhalt des <xref:System.Windows.Forms.ListView>-Steuer Elements so lange durchlaufen, bis das Element das letzte Element im sichtbaren Bereich des Steuer Elements ist.  
  
 Um zu ermitteln, ob sich ein Element am oberen Rand des Anzeige Bereichs eines <xref:System.Windows.Forms.ListView> Steuer Elements befindet, verwenden Sie die <xref:System.Windows.Forms.ListView.TopItem%2A>-Eigenschaft.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.TopItem" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindItemWithText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sucht das erste <see cref="T:System.Windows.Forms.ListViewItem" />, das mit dem angegebenen Textwert beginnt.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindItemWithText">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindItemWithText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindItemWithText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindItemWithText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItemWithText (text As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindItemWithText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.FindItemWithText : string -&gt; System.Windows.Forms.ListViewItem" Usage="listView.FindItemWithText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">Der Text, nach dem gesucht werden soll.</param>
        <summary>Sucht das erste <see cref="T:System.Windows.Forms.ListViewItem" />, das mit dem angegebenen Textwert beginnt.</summary>
        <returns>Das erste <see cref="T:System.Windows.Forms.ListViewItem" />, das mit dem angegebenen Textwert beginnt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Groß- und Kleinschreibung wird bei der Suche nicht berücksichtigt.  
  
 Der `text`-Parameter kann eine Teil Zeichenfolge des gewünschten übereinstimmenden Texts angeben. Außerdem gibt diese Methode das erste Element zurück, das mit dem angegebenen Text beginnt. Wenn z. b. ein <xref:System.Windows.Forms.ListView> zwei Listenelemente enthält, wird der Text des ersten Elements auf "Spitze Klammer" und der Text des zweiten Elements auf "eckige Klammer" festgelegt. bei einem <xref:System.Windows.Forms.ListView.FindItemWithText%2A> Übergabe `brack` als Parameter wird das Element mit dem Text "eckige Klammer" zurückgegeben.  
  
 Die <xref:System.Windows.Forms.ListView.FindItemWithText%2A>-Methode gibt `null` zurück, wenn die Liste leer ist oder kein übereinstimmendes Element vorhanden ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Windows.Forms.ListView.FindItemWithText%2A>-Methode veranschaulicht. Fügen Sie zum Ausführen dieses Beispiels den folgenden Code in ein Windows Form ein, und nennen Sie die `InitializeFindListView`-Methode aus dem Konstruktor des Formulars oder <xref:System.Windows.Forms.Form.Load>-Ereignis Handlers. Klicken Sie auf die Schaltfläche, um die Ergebnisse des Methoden Aufrufes anzuzeigen.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindItemWithText">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindItemWithText (string text, bool includeSubItemsInSearch, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindItemWithText(string text, bool includeSubItemsInSearch, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindItemWithText(System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItemWithText (text As String, includeSubItemsInSearch As Boolean, startIndex As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindItemWithText(System::String ^ text, bool includeSubItemsInSearch, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindItemWithText : string * bool * int -&gt; System.Windows.Forms.ListViewItem" Usage="listView.FindItemWithText (text, includeSubItemsInSearch, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="includeSubItemsInSearch" Type="System.Boolean" Index="1" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="startIndex" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">Der Text, nach dem gesucht werden soll.</param>
        <param name="includeSubItemsInSearch"><see langword="true" />, wenn Unterelemente in der Suche enthalten sein sollen, andernfalls <see langword="false" />.</param>
        <param name="startIndex">Der Index des Elements, bei dem mit der Suche begonnen werden soll.</param>
        <summary>Sucht das erste <see cref="T:System.Windows.Forms.ListViewItem" /> oder, sofern angegeben, das erste <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />, das mit dem angegebenen Textwert beginnt. Die Suche beginnt am angegebenen Index.</summary>
        <returns>Das erste <see cref="T:System.Windows.Forms.ListViewItem" />, das mit dem angegebenen Textwert beginnt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Groß- und Kleinschreibung wird bei der Suche nicht berücksichtigt.  
  
 Der `text`-Parameter kann eine Teil Zeichenfolge des gewünschten übereinstimmenden Texts angeben. Außerdem gibt diese Methode das erste Element zurück, das mit dem angegebenen Text beginnt. Wenn z. b. ein <xref:System.Windows.Forms.ListView> zwei Listenelemente enthält, wird der Text des ersten Elements auf "Spitze Klammer" und der Text des zweiten Elements auf "eckige Klammer" festgelegt. bei einem Aufrufen von <xref:System.Windows.Forms.ListView.FindItemWithText%2A> übergeben von "Brack" als Parameter wird das Element mit dem Text "eckige Klammer" zurückgegeben.  
  
 Die <xref:System.Windows.Forms.ListView.FindItemWithText%2A>-Methode gibt `null` zurück, wenn die Liste leer ist oder kein übereinstimmendes Element vorhanden ist.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Anzahl der Elemente in <see cref="T:System.Windows.Forms.ListView" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindItemWithText">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindItemWithText (string text, bool includeSubItemsInSearch, int startIndex, bool isPrefixSearch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindItemWithText(string text, bool includeSubItemsInSearch, int32 startIndex, bool isPrefixSearch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindItemWithText(System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItemWithText (text As String, includeSubItemsInSearch As Boolean, startIndex As Integer, isPrefixSearch As Boolean) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindItemWithText(System::String ^ text, bool includeSubItemsInSearch, int startIndex, bool isPrefixSearch);" />
      <MemberSignature Language="F#" Value="member this.FindItemWithText : string * bool * int * bool -&gt; System.Windows.Forms.ListViewItem" Usage="listView.FindItemWithText (text, includeSubItemsInSearch, startIndex, isPrefixSearch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="includeSubItemsInSearch" Type="System.Boolean" Index="1" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="startIndex" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="isPrefixSearch" Type="System.Boolean" Index="3" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">Der Text, nach dem gesucht werden soll.</param>
        <param name="includeSubItemsInSearch"><see langword="true" />, wenn Unterelemente in der Suche enthalten sein sollen, andernfalls <see langword="false" />.</param>
        <param name="startIndex">Der Index des Elements, bei dem mit der Suche begonnen werden soll.</param>
        <param name="isPrefixSearch"><see langword="true" />, wenn Teilübereinstimmungen zulässig sind, andernfalls <see langword="false" />.</param>
        <summary>Sucht das erste <see cref="T:System.Windows.Forms.ListViewItem" /> oder, sofern angegeben, das erste <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />, das mit dem angegebenen Textwert beginnt. Die Suche beginnt am angegebenen Index.</summary>
        <returns>Das erste <see cref="T:System.Windows.Forms.ListViewItem" />, das mit dem angegebenen Textwert beginnt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.FindItemWithText%2A>-Methode gibt `null` zurück, wenn die Liste leer ist oder kein übereinstimmendes Element vorhanden ist.  
  
 Die Groß- und Kleinschreibung wird bei der Suche nicht berücksichtigt.  
  
 Der `text`-Parameter kann eine Teil Zeichenfolge des gewünschten übereinstimmenden Texts angeben. Diese Methode gibt das erste Element zurück, das mit dem angegebenen Text beginnt, es sei denn, `false` `isPrefixSearch`an. Wenn z. b. ein <xref:System.Windows.Forms.ListView> zwei Listenelemente enthält, wird der Text des ersten Elements auf "Spitze Klammer" und der Text des zweiten Elements auf "eckige Klammer" festgelegt. bei einem aufzurufenden <xref:System.Windows.Forms.ListView.FindItemWithText%2A> "Brack" als Suchtext wird das Element mit dem Text "eckige Klammer" zurückgegeben. Wenn `isPrefixSearch` auf `false`festgelegt ist, gibt dieser Befehl `null`zurück.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Anzahl der Elemente in der <see cref="T:System.Windows.Forms.ListView" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindNearestItem">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sucht von einem angegebenen Punkt aus in der angegebenen Richtung nach dem nächsten Element.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindNearestItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindNearestItem (System.Windows.Forms.SearchDirectionHint dir, System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindNearestItem(valuetype System.Windows.Forms.SearchDirectionHint dir, valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindNearestItem(System.Windows.Forms.SearchDirectionHint,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNearestItem (dir As SearchDirectionHint, point As Point) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindNearestItem(System::Windows::Forms::SearchDirectionHint dir, System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.FindNearestItem : System.Windows.Forms.SearchDirectionHint * System.Drawing.Point -&gt; System.Windows.Forms.ListViewItem" Usage="listView.FindNearestItem (dir, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dir" Type="System.Windows.Forms.SearchDirectionHint" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="point" Type="System.Drawing.Point" Index="1" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dir">Einer der <see cref="T:System.Windows.Forms.SearchDirectionHint" />-Werte.</param>
        <param name="point">Der Punkt, an dem die Suche beginnen soll.</param>
        <summary>Sucht vom angegebenen Punkt aus in der angegebenen Richtung nach dem nächsten Element.</summary>
        <returns>Das <see cref="T:System.Windows.Forms.ListViewItem" />, das dem angegebenen Punkt in der angegebenen Richtung am nächsten ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.FindNearestItem%2A>-Methode gibt `null` zurück, wenn kein Element in der angegebenen Richtung gefunden wird. Die Identifizierung des nächsten Elements kann abhängig vom Betriebssystem, auf dem die Anwendung ausgeführt wird, variieren und wirkt sich auf die Ergebnisse <xref:System.Windows.Forms.ListView.FindNearestItem%2A>aus.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.ListView.View" /> ist auf einen anderen Wert als <see cref="F:System.Windows.Forms.View.SmallIcon" /> oder <see cref="F:System.Windows.Forms.View.LargeIcon" /> festgelegt.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindNearestItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindNearestItem (System.Windows.Forms.SearchDirectionHint searchDirection, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindNearestItem(valuetype System.Windows.Forms.SearchDirectionHint searchDirection, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindNearestItem(System.Windows.Forms.SearchDirectionHint,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNearestItem (searchDirection As SearchDirectionHint, x As Integer, y As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindNearestItem(System::Windows::Forms::SearchDirectionHint searchDirection, int x, int y);" />
      <MemberSignature Language="F#" Value="member this.FindNearestItem : System.Windows.Forms.SearchDirectionHint * int * int -&gt; System.Windows.Forms.ListViewItem" Usage="listView.FindNearestItem (searchDirection, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchDirection" Type="System.Windows.Forms.SearchDirectionHint" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="x" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="y" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="searchDirection">Einer der <see cref="T:System.Windows.Forms.SearchDirectionHint" />-Werte.</param>
        <param name="x">Die x-Koordinate für den Punkt, an dem die Suche beginnen soll.</param>
        <param name="y">Die y-Koordinate für den Punkt, an dem die Suche beginnen soll.</param>
        <summary>Sucht von den angegebenen x- und y-Koordinaten ausgehend in der angegebenen Richtung nach dem nächsten Element.</summary>
        <returns>Das <see cref="T:System.Windows.Forms.ListViewItem" />, das den angegebenen Koordinaten in der angegebenen Richtung am nächsten ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.FindNearestItem%2A>-Methode gibt `null` zurück, wenn kein Element in der angegebenen Richtung gefunden wird. Die Identifizierung des nächsten Elements kann abhängig vom Betriebssystem, auf dem die Anwendung ausgeführt wird, variieren und wirkt sich auf die Ergebnisse <xref:System.Windows.Forms.ListView.FindNearestItem%2A>aus.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.ListView.View" /> ist auf einen anderen Wert als <see cref="F:System.Windows.Forms.View.SmallIcon" /> oder <see cref="F:System.Windows.Forms.View.LargeIcon" /> festgelegt.</exception>
      </Docs>
    </Member>
    <Member MemberName="FocusedItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FocusedItem { get; set; }" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem FocusedItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.FocusedItem" />
      <MemberSignature Language="VB.NET" Value="Public Property FocusedItem As ListViewItem" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem ^ FocusedItem { System::Windows::Forms::ListViewItem ^ get(); void set(System::Windows::Forms::ListViewItem ^ value); };" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.FocusedItem : System.Windows.Forms.ListViewItem with get, set" Usage="System.Windows.Forms.ListView.FocusedItem" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FocusedItem { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FocusedItem As ListViewItem" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem ^ FocusedItem { System::Windows::Forms::ListViewItem ^ get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.FocusedItem : System.Windows.Forms.ListViewItem" Usage="System.Windows.Forms.ListView.FocusedItem" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Element im Steuerelement ab, das gegenwärtig den Fokus besitzt, oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.ListViewItem" />, das das Element mit dem Fokus darstellt, oder <see langword="null" />, wenn kein Element in der <see cref="T:System.Windows.Forms.ListView" /> den Fokus besitzt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.FocusedItem%2A>-Eigenschaft gibt das <xref:System.Windows.Forms.ListViewItem> zurück, das das Element darstellt, das momentan das Fokus Rechteck für das <xref:System.Windows.Forms.ListView>-Steuerelement anzeigt. Da ein <xref:System.Windows.Forms.ListView> Steuerelement nicht direkt bearbeitbare Bereiche enthält, die nicht von den angezeigten Elementen abweicht, zeigt ein Element innerhalb des <xref:System.Windows.Forms.ListView> den Fokus in den Element Text, wenn das <xref:System.Windows.Forms.ListView> Steuerelement den Fokus besitzt. In der Regel ist das letzte ausgewählte Element im <xref:System.Windows.Forms.ListView> Steuerelement das Element mit dem Fokus. Obwohl es sich bei einem Element um das Element handelt, das das Fokus-Reticle anzeigt, ist es möglicherweise kein ausgewähltes Element in der <xref:System.Windows.Forms.ListView>. Verwenden Sie die Eigenschaften <xref:System.Windows.Forms.ListView.SelectedItems%2A> oder <xref:System.Windows.Forms.ListView.SelectedIndices%2A>, um die ausgewählten Elemente im <xref:System.Windows.Forms.ListView>-Steuerelement abzurufen. die <xref:System.Windows.Forms.ListView.FocusedItem%2A> Eigenschaft ist nicht unbedingt ausgewählt. Sie können die <xref:System.Windows.Forms.ListView.FocusedItem%2A>-Eigenschaft verwenden, um zu bestimmen, auf welches Element zuletzt im <xref:System.Windows.Forms.ListView>-Steuerelement geklickt wurde, unabhängig vom Auswahl Zustand.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ListView.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Vordergrundfarbe ab oder legt sie fest.</summary>
        <value>Die <see cref="T:System.Drawing.Color" />, die die Vordergrundfarbe darstellt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullRowSelect">
      <MemberSignature Language="C#" Value="public bool FullRowSelect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FullRowSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.FullRowSelect" />
      <MemberSignature Language="VB.NET" Value="Public Property FullRowSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FullRowSelect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FullRowSelect : bool with get, set" Usage="System.Windows.Forms.ListView.FullRowSelect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob beim Klicken auf ein Element alle seine Unterelemente ausgewählt werden, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn beim Klicken auf ein Element das Element und alle seine Unterelemente ausgewählt werden, <see langword="false" />, wenn beim Klicken auf ein Element nur das Element selbst ausgewählt wird. Der Standardwert lautet <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.FullRowSelect%2A>-Eigenschaft hat nur dann Auswirkungen, wenn die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft des <xref:System.Windows.Forms.ListView>-Steuer Elements auf <xref:System.Windows.Forms.View.Details>festgelegt ist. Die <xref:System.Windows.Forms.ListView.FullRowSelect%2A>-Eigenschaft wird in der Regel verwendet, wenn ein <xref:System.Windows.Forms.ListView> Elemente mit vielen unter Elementen anzeigt, und es wichtig ist, dass Sie ausgewählte Elemente sehen können, wenn der Element Text aufgrund eines horizontalen Bildlaufs für den Inhalt des Steuer Elements nicht sichtbar ist.  
  
> [!NOTE]
>  Wenn <xref:System.Windows.Forms.ListView.FullRowSelect%2A> auf `true`festgelegt ist, werden Quick Infos für eine <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> nicht angezeigt. nur die QuickInfo für das übergeordnete <xref:System.Windows.Forms.ListViewItem> wird angezeigt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.ListView>-Steuerelement mit drei <xref:System.Windows.Forms.ListViewItem> angegebenen Objekten und drei <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>-Objekten erstellt, die für jedes Element angegeben wurden. Im Beispiel werden auch <xref:System.Windows.Forms.ColumnHeader> Objekte erstellt, um die unter Elemente in der Detailansicht anzuzeigen. Zwei <xref:System.Windows.Forms.ImageList> Objekte werden auch im Codebeispiel erstellt, um Bilder für die <xref:System.Windows.Forms.ListViewItem> Objekte bereitzustellen. Diese <xref:System.Windows.Forms.ImageList> Objekte werden den Eigenschaften <xref:System.Windows.Forms.ListView.LargeImageList%2A> und <xref:System.Windows.Forms.ListView.SmallImageList%2A> hinzugefügt. Das Beispiel verwendet die folgenden Eigenschaften, um das <xref:System.Windows.Forms.ListView>-Steuerelement zu erstellen.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Dieses Beispiel erfordert, dass Sie den Code zu einem <xref:System.Windows.Forms.Form> hinzugefügt und die im Beispiel erstellte Methode aus dem Konstruktor oder einer anderen Methode im Formular aufgerufen haben. Das Beispiel setzt auch voraus, dass Images mit dem Namen `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`und `MyLargeImage2` sich im Stammverzeichnis des Laufwerks C befinden.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="F:System.Windows.Forms.View.Details" />
      </Docs>
    </Member>
    <Member MemberName="GetItemAt">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem GetItemAt (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem GetItemAt(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.GetItemAt(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemAt (x As Integer, y As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ GetItemAt(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.GetItemAt : int * int -&gt; System.Windows.Forms.ListViewItem" Usage="listView.GetItemAt (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Die x-Koordinate der Position für die Suche nach einem Element (ausgedrückt in Clientkoordinaten).</param>
        <param name="y">Die y-Koordinate der Position für die Suche nach einem Element (ausgedrückt in Clientkoordinaten).</param>
        <summary>Ruft das Element an der angegebenen Position ab.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.ListViewItem" />, das das Element an der angegebenen Position darstellt. Wenn sich an der angegebenen Position kein Element befindet, gibt die Methode <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der <xref:System.Windows.Forms.ListView.GetItemAt%2A>-Methode können Sie bestimmen, welches Element sich an einer bestimmten Position im Client Bereich des <xref:System.Windows.Forms.ListView> Steuer Elements befindet. Sie können diese Methode verwenden, wenn der Benutzer auf ein Unterelement klickt oder mit der rechten Maustaste klickt (wenn die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft auf `View.Details`festgelegt ist) und Sie bestimmen möchten, welches Element das Unterelement besitzt, auf das auf der Grundlage der Maus Koordinaten zu dem Zeitpunkt geklickt wurde, als der Benutzer auf die Maus geklickt hat.  
  
> [!NOTE]
>  Wenn der <xref:System.Windows.Forms.ListView.FullRowSelect%2A>-Eigenschafts Wert `false`ist, gibt diese Methode nur dann ein Element zurück, wenn die angegebene Position innerhalb der Begrenzungen des übergeordneten Elements liegt (das in der ersten Spalte angezeigt wird, wenn sich das Steuerelement im Detail Modus befindet). Sie müssen die <xref:System.Windows.Forms.ListView.FullRowSelect%2A>-Eigenschaft auf `true` festlegen, um ein Element mit dieser Methode abzurufen, wenn eine Position innerhalb der Begrenzungen eines unter Elements angegeben ist. Sie können auch die <xref:System.Windows.Forms.ListView.HitTest%2A>-Methode verwenden, um ausführliche Informationen über das Element an einem bestimmten Speicherort abzurufen.  
  
 Um die Neupositionierung von Elementen innerhalb einer <xref:System.Windows.Forms.ListView>per Drag & Drop durchzuführen, können Sie die <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A?displayProperty=nameWithType>-Methode anstelle der <xref:System.Windows.Forms.ListView.GetItemAt%2A>-Methode verwenden. Die <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A?displayProperty=nameWithType>-Methode findet das nächstgelegene Element, unabhängig davon, wo sich der Mauszeiger befindet. Die <xref:System.Windows.Forms.ListView.GetItemAt%2A>-Methode hingegen gibt `null` zurück, wenn kein Element an der angegebenen Position vorhanden ist.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.ListViewInsertionMark>-Klasse wird nur unter Windows XP und Windows Server 2003 unterstützt, wenn die Anwendung die <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType>-Methode aufruft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der Steuerelemente <xref:System.Windows.Forms.PictureBox> und <xref:System.Windows.Forms.ListView> veranschaulicht. Die <xref:System.Windows.Forms.PictureBox> wird initialisiert, indem die <xref:System.Windows.Forms.PictureBox.BorderStyle%2A?displayProperty=nameWithType> und <xref:System.Windows.Forms.PictureBox.SizeMode%2A?displayProperty=nameWithType> Eigenschaften mithilfe der <xref:System.Windows.Forms.BorderStyle> und <xref:System.Windows.Forms.PictureBoxSizeMode> Enumerationen, bzw. Der <xref:System.Windows.Forms.ListView> wird mit Bildern aus dem Beispiel Verzeichnis aufgefüllt. Die <xref:System.Windows.Forms.ListView.GetItemAt%2A>-Methode wird in verwendet, wenn das <xref:System.Windows.Forms.Control.MouseDown> Ereignis des <xref:System.Windows.Forms.ListView> Steuer Elements behandelt wird, um zu bestimmen, ob ein Element ausgewählt ist. Wenn ein Element ausgewählt ist, zeigt der Ereignishandler die ausgewählte Datei an, indem die <xref:System.Windows.Forms.PictureBox.Image%2A?displayProperty=nameWithType>-Eigenschaft festgelegt wird. Das Beispiel setzt voraus, dass die JPG-Dateien im Verzeichnis "c:\Dokumente und Einstellungen\Alle Benutzer\Dokumente\Eigene Pictures\Sample Pictures" vorhanden sind. Fügen Sie zum Ausführen dieses Beispiels den Code in ein Formular ein, und nennen Sie die Methoden `InitializePictureBox` und `PopulateListView` im Konstruktor des Formulars oder `Load`-Methode. Stellen Sie sicher, dass alle Ereignisse ihren Ereignis Handlern zugeordnet sind.  
  
 [!code-cpp[System.Windows.Forms.ListViewAndPictureBox#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewAndPictureBox/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListViewAndPictureBox#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewAndPictureBox/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ListViewAndPictureBox#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewAndPictureBox/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)" />
        <altmember cref="T:System.Windows.Forms.ListViewInsertionMark" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetItemRect">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft das umschließende Rechteck für ein Element im Steuerelement ab.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetItemRect">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetItemRect (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetItemRect(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.GetItemRect(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemRect (index As Integer) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetItemRect(int index);" />
      <MemberSignature Language="F#" Value="member this.GetItemRect : int -&gt; System.Drawing.Rectangle" Usage="listView.GetItemRect index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des Elements in der <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />, dessen umschließendes Rechteck zurückgegeben werden soll.</param>
        <summary>Ruft das umschließende Rechteck für ein bestimmtes Element im Listenansicht-Steuerelement ab.</summary>
        <returns>Ein <see cref="T:System.Drawing.Rectangle" />, das das umschließende Rechteck des angegebenen <see cref="T:System.Windows.Forms.ListViewItem" /> darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das umgebende Rechteck, das von dieser Version der <xref:System.Windows.Forms.ListView.GetItemRect%2A>-Methode zurückgegeben wird, stellt das gesamte Element dar, einschließlich Symbol, Element Text und Unterelement Text. Um einen bestimmten Teil des umgebenden Rechtecks des Elements anzugeben, verwenden Sie die andere Version der <xref:System.Windows.Forms.ListView.GetItemRect%2A>-Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="GetItemRect">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetItemRect (int index, System.Windows.Forms.ItemBoundsPortion portion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetItemRect(int32 index, valuetype System.Windows.Forms.ItemBoundsPortion portion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.GetItemRect(System.Int32,System.Windows.Forms.ItemBoundsPortion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemRect (index As Integer, portion As ItemBoundsPortion) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetItemRect(int index, System::Windows::Forms::ItemBoundsPortion portion);" />
      <MemberSignature Language="F#" Value="member this.GetItemRect : int * System.Windows.Forms.ItemBoundsPortion -&gt; System.Drawing.Rectangle" Usage="listView.GetItemRect (index, portion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="portion" Type="System.Windows.Forms.ItemBoundsPortion" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des Elements in der <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />, dessen umschließendes Rechteck zurückgegeben werden soll.</param>
        <param name="portion">Einer der <see cref="T:System.Windows.Forms.ItemBoundsPortion" />-Werte, der den Teil des <see cref="T:System.Windows.Forms.ListViewItem" /> darstellt, für den das umschließende Rechteck abgerufen werden soll.</param>
        <summary>Ruft den angegebenen Teil des umschließenden Rechtecks für ein bestimmtes Element im Listenansicht-Steuerelement ab.</summary>
        <returns>Ein <see cref="T:System.Drawing.Rectangle" />, das das umschließende Rechteck für den angegebenen Teil des angegebenen <see cref="T:System.Windows.Forms.ListViewItem" /> darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das umgebende Rechteck, das von dieser Version der <xref:System.Windows.Forms.ListView.GetItemRect%2A>-Methode zurückgegeben wird, stellt nur den Abschnitt des im `portion`-Parameter angegebenen Elements dar. Um das umgebende Rechteck des gesamten Elements zurückzugeben, verwenden Sie die andere Version der <xref:System.Windows.Forms.ListView.GetItemRect%2A>-Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="T:System.Windows.Forms.ItemBoundsPortion" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public bool GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Property GridLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GridLines { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.GridLines : bool with get, set" Usage="System.Windows.Forms.ListView.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Datenblattlinien zwischen den Zeilen und Spalten mit den Elementen und Unterelementen im Steuerelement angezeigt werden, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn Datenblattlinien zwischen Elementen und Unterelementen gezeichnet werden, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.GridLines%2A>-Eigenschaft hat nur dann Auswirkungen, wenn die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft des <xref:System.Windows.Forms.ListView>-Steuer Elements auf <xref:System.Windows.Forms.View.Details>festgelegt ist. Die <xref:System.Windows.Forms.ListView.GridLines%2A>-Eigenschaft ermöglicht es Ihnen, Zeilen anzuzeigen, um die Zeilen und Spalten zu identifizieren, die im <xref:System.Windows.Forms.ListView>-Steuerelement angezeigt werden, wenn Elemente und deren unter Elemente angezeigt werden. Die angezeigten Rasterlinien bieten keine Möglichkeit, Zeilen und Spalten in einer Anwendung wie Microsoft Excel zu ändern. Wenn Spaltenüberschriften angezeigt werden, können Sie nur die Größe der Spalten ändern, indem Sie den Mauszeiger auf die Rechte Seite der Spalte bewegen, um die Größe zu ändern und dann auf die gewünschte Größe zu klicken. Die Rasterlinien Funktion wird verwendet, um dem Benutzer des Steuer Elements sichtbare Begrenzungen für Elemente und unter Elemente bereitzustellen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.ListView>-Steuerelement mit drei <xref:System.Windows.Forms.ListViewItem> angegebenen Objekten und drei <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>-Objekten erstellt, die für jedes Element angegeben wurden. Im Beispiel werden auch <xref:System.Windows.Forms.ColumnHeader> Objekte erstellt, um die unter Elemente in der Detailansicht anzuzeigen. Zwei <xref:System.Windows.Forms.ImageList> Objekte werden auch im Codebeispiel erstellt, um Bilder für die <xref:System.Windows.Forms.ListViewItem> Objekte bereitzustellen. Diese <xref:System.Windows.Forms.ImageList> Objekte werden den Eigenschaften <xref:System.Windows.Forms.ListView.LargeImageList%2A> und <xref:System.Windows.Forms.ListView.SmallImageList%2A> hinzugefügt. Das Beispiel verwendet die folgenden Eigenschaften, um das <xref:System.Windows.Forms.ListView>-Steuerelement zu erstellen.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Dieses Beispiel erfordert, dass Sie den Code zu einem <xref:System.Windows.Forms.Form> hinzugefügt und die im Beispiel erstellte Methode aus dem Konstruktor oder einer anderen Methode im Formular aufgerufen haben. Das Beispiel setzt auch voraus, dass Images mit dem Namen `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`und `MyLargeImage2` sich im Stammverzeichnis des Laufwerks C befinden.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
      </Docs>
    </Member>
    <Member MemberName="Groups">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroupCollection Groups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroupCollection Groups" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Groups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Groups As ListViewGroupCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroupCollection ^ Groups { System::Windows::Forms::ListViewGroupCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Groups : System.Windows.Forms.ListViewGroupCollection" Usage="System.Windows.Forms.ListView.Groups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewGroupCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewGroupCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung von <see cref="T:System.Windows.Forms.ListViewGroup" />-Objekten ab, die dem Steuerelement zugeordnet sind.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.ListViewGroupCollection" />, die alle Gruppen im <see cref="T:System.Windows.Forms.ListView" />-Steuerelement enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der <xref:System.Windows.Forms.ListView> Gruppierungs Funktion können Sie visuelle Gruppen von logisch verknüpften <xref:System.Windows.Forms.ListView> Elementen erstellen. Jede Gruppe besteht aus einem Text Header, gefolgt von einer horizontalen Linie und den Elementen, die dieser Gruppe zugewiesen sind. Sie können den Header Text Links, rechts oder zentriert im Steuerelement ausrichten. Alle einer <xref:System.Windows.Forms.ListView> Steuerung zugewiesenen Gruppen werden immer dann angezeigt, wenn die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft auf einen anderen Wert als <xref:System.Windows.Forms.View.List?displayProperty=nameWithType>festgelegt ist.  
  
 <xref:System.Windows.Forms.ListView> Gruppen unterstützen Ihre Benutzer bei der Suche nach den gesuchten Elementen, indem Sie die Elemente in nützliche Kategorien aufteilen. Sie können alle benötigten Kategorien erstellen. Eine typische Vorgehensweise besteht darin, die Elemente basierend auf der Sortierreihenfolge der Liste zu gruppieren. Beispielsweise können Sie die Elemente nach dem ersten Buchstaben des Element namens gruppieren, wenn die Liste alphabetisch oder durch unter Elemente wie Typ oder Datum sortiert wird, wenn die Liste sortiert wird, indem Sie in der Detailansicht auf einen Spaltenheader klicken. Windows-Explorer verwendet diesen Gruppierungstyp.  
  
 Um die Gruppierungs Funktion zu verwenden, fügen Sie der <xref:System.Windows.Forms.ListView.Groups%2A> Auflistung eines <xref:System.Windows.Forms.ListView> Steuer Elements ein oder mehrere <xref:System.Windows.Forms.ListViewGroup> Objekte hinzu. Legen Sie den Gruppen Header Text und die Header Ausrichtung im <xref:System.Windows.Forms.ListViewGroup.%23ctor%2A>-Konstruktor fest, oder legen Sie diese mithilfe der Eigenschaften <xref:System.Windows.Forms.ListViewGroup.Header%2A?displayProperty=nameWithType> und <xref:System.Windows.Forms.ListViewGroup.HeaderAlignment%2A?displayProperty=nameWithType> fest.  
  
 Um die Gruppierungs Funktion temporär zu deaktivieren, legen Sie die <xref:System.Windows.Forms.ListView.ShowGroups%2A>-Eigenschaft auf `false`fest.  
  
 Sie können einer Gruppe ein Element zuweisen, indem Sie die Gruppe im <xref:System.Windows.Forms.ListViewItem.%23ctor%2A>-Konstruktor angeben, indem Sie die Eigenschaft <xref:System.Windows.Forms.ListViewItem.Group%2A?displayProperty=nameWithType> festlegen oder das Element direkt der <xref:System.Windows.Forms.ListViewGroup.Items%2A?displayProperty=nameWithType>-Auflistung einer Gruppe hinzufügen. Alle Elemente sollten Gruppen zugewiesen werden, bevor Sie angezeigt werden. Alle Elemente, die keiner Gruppe zugewiesen sind, werden in der Standardgruppe mit der Header Bezeichnung "DefaultGroup{0}" angezeigt. Die Standardgruppe ist nicht in der <xref:System.Windows.Forms.ListView.Groups%2A> Auflistung enthalten und kann nicht geändert werden. Dies ist in erster Linie hilfreich beim Debuggen, um sicherzustellen, dass alle Elemente ordnungsgemäß zu Gruppen hinzugefügt wurden  
  
 Ein Element kann jeweils nur in einer Gruppe gleichzeitig sein. Sie können die Gruppe, zu der ein Element gehört, ändern, indem Sie die <xref:System.Windows.Forms.ListViewItem.Group%2A?displayProperty=nameWithType>-Eigenschaft zur Laufzeit festlegen oder Sie der <xref:System.Windows.Forms.ListViewGroup.Items%2A?displayProperty=nameWithType> Auflistung einer anderen Gruppe hinzufügen, die Sie automatisch aus der vorherigen Gruppe entfernt.  
  
 Die Funktion "Einfügemarke" ist beim Verwenden von Gruppen deaktiviert. Dies liegt daran, dass die Gruppierungs Funktion Elemente nach Gruppenmitgliedschaften sortiert, während die Funktion "Einfügemarke" mit Drag & Drop-Neupositionierung in einem <xref:System.Windows.Forms.ListView> Steuerelement verwendet wird, das die Elemente nicht bereits sortiert.  
  
 <xref:System.Windows.Forms.ListView> Gruppen sind nur unter Windows XP und Windows Server 2003 verfügbar, wenn die Anwendung die <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType>-Methode aufruft. Unter früheren Betriebssystemen hat Code in Bezug auf Gruppen keine Auswirkung, und die Gruppen werden nicht angezeigt. Folglich funktioniert jeglicher Code, der von der Gruppierungs Funktion abhängt, möglicherweise nicht ordnungsgemäß.  
  
 Möglicherweise möchten Sie Code einschließen, der bestimmt, ob die Gruppierungs Funktion verfügbar ist, und alternative Funktionen bereitstellen, wenn Sie nicht verfügbar sind. Sie können z. b. bei der Ausführung unter Betriebssystemen, die keine Sortierung nach Gruppe unterstützen, eine alternative Sortierung bereitstellen.  
  
 Die Gruppierungs Funktion wird von derselben Bibliothek bereitgestellt, die das Feature "Betriebssystem Designs" bereitstellt. Um die Verfügbarkeit dieser Bibliothek zu überprüfen, müssen Sie die <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType>-Methoden Überladung aufrufen und den <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType>-Wert übergeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.ListView> Gruppierungs Funktion verwendet wird, um Elemente nach Unterelement-Wert in der Detailansicht zu organisieren. Diese Form der Gruppierung ähnelt der im Windows-Explorer verwendeten Gruppierung. Im Beispiel werden die Gruppen dynamisch erstellt. Für jede Unterelement Spalte wird eine Gruppe für jeden eindeutigen Unterelement Wert erstellt. Für die übergeordnete Element Spalte wird eine Gruppe für jeden eindeutigen Anfangsbuchstaben erstellt. Wenn Sie auf den Header einer Spalte klicken, werden die Elemente in die für diese Spalte erstellten Gruppen sortiert. Wenn Sie erneut auf denselben Spaltenheader klicken, wird die Reihenfolge der Gruppen umgekehrt.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
        <altmember cref="T:System.Windows.Forms.ListViewGroupCollection" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListView.ShowGroups" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ColumnHeaderStyle HeaderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ColumnHeaderStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderStyle As ColumnHeaderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ColumnHeaderStyle HeaderStyle { System::Windows::Forms::ColumnHeaderStyle get(); void set(System::Windows::Forms::ColumnHeaderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderStyle : System.Windows.Forms.ColumnHeaderStyle with get, set" Usage="System.Windows.Forms.ListView.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnHeaderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Spaltenkopfstil ab oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.ColumnHeaderStyle" />-Werte. Der Standardwert lautet <see cref="F:System.Windows.Forms.ColumnHeaderStyle.Clickable" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der <xref:System.Windows.Forms.ListView.HeaderStyle%2A>-Eigenschaft können Sie den Typ der Spaltenheader angeben, die angezeigt werden sollen, wenn die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft des <xref:System.Windows.Forms.ListView>-Steuer Elements auf <xref:System.Windows.Forms.View.Details> festgelegt ist und für das <xref:System.Windows.Forms.ListView>-Steuerelement <xref:System.Windows.Forms.ColumnHeader> Objekte im <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>festgelegt sind. <xref:System.Windows.Forms.ColumnHeader> Objekte definieren die Spalten, die im <xref:System.Windows.Forms.ListView>-Steuerelement angezeigt werden. Jede Spalte wird verwendet, um untergeordnete Informationen für jedes Element in der <xref:System.Windows.Forms.ListView>anzuzeigen.  
  
 Mit der <xref:System.Windows.Forms.ListView.HeaderStyle%2A>-Eigenschaft können Sie angeben, ob die Spaltenüberschriften sichtbar sind oder ob Sie sichtbar sind, wenn Sie sichtbar sind. Wenn die <xref:System.Windows.Forms.ListView.HeaderStyle%2A>-Eigenschaft auf <xref:System.Windows.Forms.ColumnHeaderStyle.None?displayProperty=nameWithType>festgelegt ist, werden die Spaltenheader nicht angezeigt, obwohl die Elemente und unter Elemente des Steuer Elements <xref:System.Windows.Forms.ListView> noch in Spalten angeordnet sind. Wenn die <xref:System.Windows.Forms.ListView.HeaderStyle%2A>-Eigenschaft auf <xref:System.Windows.Forms.ColumnHeaderStyle.Clickable?displayProperty=nameWithType>festgelegt ist, fungieren die Spaltenheader wie Schaltflächen, auf die Benutzer klicken können, um eine Aktion auszuführen, z. b. das Sortieren der Elemente im <xref:System.Windows.Forms.ListView> Steuerelement mithilfe der Elemente in der Spalte, auf die geklickt wird, als Schlüssel. Sie können dieses Verhalten in einem Handler für das <xref:System.Windows.Forms.ListView.ColumnClick>-Ereignis implementieren. Wenn die <xref:System.Windows.Forms.ListView.HeaderStyle%2A>-Eigenschaft auf <xref:System.Windows.Forms.ColumnHeaderStyle.Nonclickable?displayProperty=nameWithType>festgelegt ist, werden die Spaltenheader angezeigt, Sie können jedoch nicht darauf geklickt werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine <xref:System.Windows.Forms.ListView> veranschaulicht, die die Auswahl mehrerer Elemente ermöglicht. Das Beispiel veranschaulicht das Festlegen der Eigenschaften <xref:System.Windows.Forms.ListView.HideSelection%2A> und <xref:System.Windows.Forms.ListView.HeaderStyle%2A>. Außerdem werden die Eigenschaften <xref:System.Windows.Forms.ColumnHeader.Text%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.ColumnHeader.TextAlign%2A?displayProperty=nameWithType> und <xref:System.Windows.Forms.ColumnHeader.Width%2A?displayProperty=nameWithType> veranschaulicht. Fügen Sie zum Ausführen dieses Beispiels den folgenden Code in ein Formular ein, das ein <xref:System.Windows.Forms.ListView> Objekt mit dem Namen `ListView1` und eine <xref:System.Windows.Forms.TextBox> namens `TextBox1`enthält. Ruft die `InitializeListView`-Methode aus dem Konstruktor des Formulars oder <xref:System.Windows.Forms.Form.Load> Ereignis Handlers auf.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der angegebene Wert ist keiner der <see cref="T:System.Windows.Forms.ColumnHeaderStyle" />-Werte.</exception>
        <altmember cref="E:System.Windows.Forms.ListView.ColumnClick" />
        <altmember cref="T:System.Windows.Forms.ColumnHeaderStyle" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="HideSelection">
      <MemberSignature Language="C#" Value="public bool HideSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HideSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HideSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HideSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HideSelection : bool with get, set" Usage="System.Windows.Forms.ListView.HideSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das ausgewählte Element im Steuerelement hervorgehoben bleibt, wenn das Steuerelement den Fokus verloren hat, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn das Steuerelement den Fokus nicht mehr besitzt und das ausgewählte Element nicht mehr hervorgehoben ist, <see langword="false" />, wenn das Steuerelement den Fokus nicht mehr besitzt und das ausgewählte Element weiterhin hervorgehoben ist. Der Standardwert lautet <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft auf `false`festgelegt ist, bleiben ausgewählte Elemente im <xref:System.Windows.Forms.ListView> Steuerelement in einer anderen Farbe als die aktuelle Auswahl Farbe, die vom Betriebssystem angegeben wird, wenn das <xref:System.Windows.Forms.ListView> Steuerelement den Fokus verliert. Sie können diese Eigenschaft verwenden, um vom Benutzer ausgewählte Elemente sichtbar zu machen, wenn der Benutzer auf ein anderes Steuerelement im Formular klickt oder zu einem anderen Fenster wechselt.  
  
> [!NOTE]
>  Wenn Sie sich mit der Barrierefreiheit Ihrer Anwendungen beschäftigen, empfiehlt es sich, die <xref:System.Windows.Forms.ListView.HideSelection%2A>-Eigenschaft auf `false`festzulegen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine <xref:System.Windows.Forms.ListView> veranschaulicht, die die Auswahl mehrerer Elemente ermöglicht. Das Beispiel veranschaulicht das Festlegen der Eigenschaften <xref:System.Windows.Forms.ListView.HideSelection%2A> und <xref:System.Windows.Forms.ListView.HeaderStyle%2A>. Außerdem werden die Eigenschaften <xref:System.Windows.Forms.ColumnHeader.Text%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.ColumnHeader.TextAlign%2A?displayProperty=nameWithType>und <xref:System.Windows.Forms.ColumnHeader.Width%2A?displayProperty=nameWithType> veranschaulicht. Fügen Sie zum Ausführen dieses Beispiels den folgenden Code in ein Formular ein, das ein <xref:System.Windows.Forms.ListView> Objekt mit dem Namen `ListView1` und eine <xref:System.Windows.Forms.TextBox> namens `TextBox1`enthält. Ruft die `InitializeListView`-Methode aus dem Konstruktor des Formulars oder <xref:System.Windows.Forms.Form.Load> Ereignis Handlers auf.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTest">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Stellt Elementinformationen bereit, wenn eine x- und eine y-Koordinate angegeben sind.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewHitTestInfo HitTest (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewHitTestInfo HitTest(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.HitTest(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (point As Point) As ListViewHitTestInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewHitTestInfo ^ HitTest(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.HitTest : System.Drawing.Point -&gt; System.Windows.Forms.ListViewHitTestInfo" Usage="listView.HitTest point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewHitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="point">Der <see cref="T:System.Drawing.Point" />, an dem die Elementinformationen abgerufen werden sollen. Die Koordinaten sind relativ zur linken oberen Ecke des Steuerelements.</param>
        <summary>Stellt Elementinformationen bereit, wenn ein Punkt angegeben ist.</summary>
        <returns>Elementinformationen, wenn ein Punkt angegeben ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um zu bestimmen, ob sich ein Punkt in einem Element oder Unterelement befindet und wo sich der Punkt in dem Element befindet, z. b. in der Bezeichnung oder im Bildbereich. Wenn sich die Koordinaten außerhalb des Steuer Elements befinden, hat das zurückgegebene <xref:System.Windows.Forms.ListViewHitTestInfo> Objekt die <xref:System.Windows.Forms.ListViewHitTestInfo.Location%2A>-Eigenschaft "None". die Eigenschaften <xref:System.Windows.Forms.ListViewHitTestInfo.Item%2A> und <xref:System.Windows.Forms.ListViewHitTestInfo.SubItem%2A> werden auf `null`festgelegt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Punkt enthält Koordinaten, die kleiner als 0 (null) sind.</exception>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewHitTestInfo HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewHitTestInfo HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer) As ListViewHitTestInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewHitTestInfo ^ HitTest(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.HitTest : int * int -&gt; System.Windows.Forms.ListViewHitTestInfo" Usage="listView.HitTest (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewHitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="y" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="x">Die x-Koordinate, an der die Elementinformationen abgerufen werden sollen. Die Koordinate ist relativ zur linken oberen Ecke des Steuerelements.</param>
        <param name="y">Die y-Koordinate, an der die Elementinformationen abgerufen werden sollen. Die Koordinate ist relativ zur linken oberen Ecke des Steuerelements.</param>
        <summary>Stellt Elementinformationen bereit, wenn x- und y-Koordinaten angegeben sind.</summary>
        <returns>Elementinformationen, wenn x- und y-Koordinaten angegeben sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um zu bestimmen, ob sich ein Punkt in einem Element oder Unterelement befindet und wo sich der Punkt befindet, z. b. im Bezeichnungs-oder Bildbereich. Wenn sich die Koordinaten außerhalb des Steuer Elements befinden, hat das zurückgegebene <xref:System.Windows.Forms.ListViewHitTestInfo> Objekt die <xref:System.Windows.Forms.ListViewHitTestInfo.Location%2A>-Eigenschaft "None". die Eigenschaften <xref:System.Windows.Forms.ListViewHitTestInfo.Item%2A> und <xref:System.Windows.Forms.ListViewHitTestInfo.SubItem%2A> werden auf `null`festgelegt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.ListView.HitTest%2A>-Methode verwendet wird, um die Position eines Maus Ereignisses in einem <xref:System.Windows.Forms.ListView>zu bestimmen. Um dieses Beispiel auszuführen, fügen Sie es in ein Windows Form ein, das eine <xref:System.Windows.Forms.ListView> mit dem Namen `listView1` enthält, die mit Elementen aufgefüllt ist. Ordnen Sie das <xref:System.Windows.Forms.Control.MouseDown>-Ereignis für `listView1` mit der `listView1_MouseDown`-Methode in diesem Beispiel zu.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die x- oder y-Koordinate ist kleiner als 0 (null).</exception>
      </Docs>
    </Member>
    <Member MemberName="HotTracking">
      <MemberSignature Language="C#" Value="public bool HotTracking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HotTracking" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HotTracking" />
      <MemberSignature Language="VB.NET" Value="Public Property HotTracking As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HotTracking { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HotTracking : bool with get, set" Usage="System.Windows.Forms.ListView.HotTracking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Text eines Elements oder Unterelements als Link dargestellt wird, wenn der Mauszeiger darüber bewegt wird.</summary>
        <value><see langword="true" />, wenn der Elementtext als Link dargestellt wird, wenn der Mauszeiger darüber bewegt wird, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Aktivieren der Hot-Nachverfolgung bewirkt, dass die <xref:System.Windows.Forms.ListView.Activation%2A>-Eigenschaft auf <xref:System.Windows.Forms.ItemActivation.OneClick> und die <xref:System.Windows.Forms.ListView.HoverSelection%2A>-Eigenschaft auf `true`festgelegt wird. Außerdem ist die Bearbeitung der Lauf zeitbezeichnung nicht zulässig, wenn die Hot-Nachverfolgung aktiviert ist.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht eine <xref:System.Windows.Forms.ListView>, bei der die Hot-Nachverfolgung aktiviert ist. Fügen Sie zum Ausführen dieses Beispiels den folgenden Code in ein Windows Form ein, und nennen Sie die `InitializeHotTrackingListView`-Methode aus dem Konstruktor des Formulars oder <xref:System.Windows.Forms.Form.Load>-Ereignis Handlers.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HoverSelection">
      <MemberSignature Language="C#" Value="public bool HoverSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HoverSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HoverSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HoverSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HoverSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HoverSelection : bool with get, set" Usage="System.Windows.Forms.ListView.HoverSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob ein Element automatisch ausgewählt wird, wenn der Mauszeiger einige Sekunden auf dem betreffenden Element ruht, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn beim Zeigen mit dem Mauszeiger auf ein bestimmtes Element dieses automatisch ausgewählt wird, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft auf `true`festgelegt ist, kann der Benutzer auf ein Element im <xref:System.Windows.Forms.ListView> Steuerelement zeigen, um das Element auszuwählen. Wenn die <xref:System.Windows.Forms.ListView.MultiSelect%2A>-Eigenschaft auf true festgelegt ist, können mehrere Elemente ausgewählt werden, indem die STRG-Taste gedrückt gehalten wird, während auf die einzelnen Elemente verwiesen wird. Sie können diese Funktion verwenden, um eine einfachere Methode bereitzustellen, mit der der Benutzer Ihrer Anwendung Elemente im <xref:System.Windows.Forms.ListView> Steuerelement auswählen kann.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertionMark">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewInsertionMark InsertionMark { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewInsertionMark InsertionMark" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.InsertionMark" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertionMark As ListViewInsertionMark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewInsertionMark ^ InsertionMark { System::Windows::Forms::ListViewInsertionMark ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertionMark : System.Windows.Forms.ListViewInsertionMark" Usage="System.Windows.Forms.ListView.InsertionMark" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewInsertionMark</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt zum Anzeigen der erwarteten Position für das Ablegen ab, wenn ein Element innerhalb eines <see cref="T:System.Windows.Forms.ListView" />-Steuerelements gezogen wird.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.ListViewInsertionMark" />-Objekt, das die Einfügemarke darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dem Feature <xref:System.Windows.Forms.ListView> Einfügemarke können Sie die erwartete Ablage Position in einem Drag & Drop-Vorgang visuell angeben, wenn ein Element an eine neue Position gezogen wird. Diese Funktion kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListView.AutoArrange%2A>-Eigenschaft auf `true` festgelegt ist und die Elemente von <xref:System.Windows.Forms.ListView> Steuerelement nicht automatisch sortiert werden. Um die automatische Sortierung zu verhindern, muss die <xref:System.Windows.Forms.ListView.Sorting%2A>-Eigenschaft auf <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> festgelegt werden, und die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft muss auf <xref:System.Windows.Forms.View.LargeIcon?displayProperty=nameWithType>, <xref:System.Windows.Forms.View.SmallIcon?displayProperty=nameWithType>oder <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType>festgelegt werden. Darüber hinaus ist die Funktion "Einfügemarke" möglicherweise nicht mit der <xref:System.Windows.Forms.ListView> Gruppierungs Funktion sichtbar, da die Gruppierungs Funktion die Elemente nach Gruppenmitgliedschaft anordnet.  
  
 Die <xref:System.Windows.Forms.ListViewInsertionMark>-Klasse wird in der Regel in einem Handler für das <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> oder <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> Ereignis verwendet, um die Position der Einfügemarke zu aktualisieren, wenn ein Element gezogen wird. Sie wird auch in einem Handler für die <xref:System.Windows.Forms.Control.DragDrop?displayProperty=nameWithType> oder <xref:System.Windows.Forms.Control.MouseUp?displayProperty=nameWithType> Ereignis verwendet, um ein gezogene Element an der richtigen Position einzufügen. Weitere Informationen finden Sie unter <xref:System.Windows.Forms.ListViewInsertionMark> und Gewusst [wie: Anzeigen einer Einfügemarke in einem Windows Forms ListView-Steuer](~/docs/framework/winforms/controls/how-to-display-an-insertion-mark-in-a-windows-forms-listview-control.md)Element.  
  
> [!NOTE]
>  Die Funktion "Einfügemarke" ist nur unter Windows XP und Windows Server 2003 verfügbar, wenn die Anwendung die <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType>-Methode aufruft. Unter früheren Betriebssystemen hat Code in Zusammenhang mit der Einfügemarke keine Auswirkungen, und die Einfügemarke wird daher nicht angezeigt. Der Code, der von der Einfügemarke abhängt, funktioniert daher möglicherweise nicht ordnungsgemäß. Möglicherweise möchten Sie Code einschließen, der bestimmt, ob diese Funktion verfügbar ist, und alternative Funktionen bereitstellen, wenn Sie nicht verfügbar sind. Beispielsweise können Sie den gesamten Code umgehen, der die Neupositionierung von Drag & Drop-Elementen implementiert, wenn diese auf Betriebssystemen ausgeführt werden, die keine Einfügemarkierungen unterstützen.  
>   
>  Die Funktion "Einfügemarke" wird von derselben Bibliothek bereitgestellt, die das Feature "Betriebssystem Designs" enthält. Um die Verfügbarkeit dieser Bibliothek zu überprüfen, müssen Sie die <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType>-Methoden Überladung aufrufen und den <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType>-Wert übergeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die Funktion <xref:System.Windows.Forms.ListView> Einfügemarke verwendet wird. In diesem Beispiel wird die Neuanordnen von Drag & Drop-Elementen mithilfe der Standard Zieh Ereignisse implementiert. Die Position der Einfügemarke wird in einem Handler für das <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType>-Ereignis aktualisiert. In diesem Handler wird die Position des Mauszeigers mit dem Mittelpunkt des nächsten Elements verglichen, und das Ergebnis wird verwendet, um zu bestimmen, ob die Einfügemarke links oder rechts vom Element angezeigt wird.  
  
 [!code-cpp[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewInsertionMark" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="listView.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Einer der <see cref="T:System.Windows.Forms.Keys" />-Werte.</param>
        <summary>Bestimmt, ob der angegebene Schlüssel ein regulärer Eingabeschlüssel oder ein besonderer Schlüssel ist, der eine Vorverarbeitung erfordert.</summary>
        <returns><see langword="true" />, wenn die angegebene Taste eine normale Taste ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemActivate">
      <MemberSignature Language="C#" Value="public event EventHandler ItemActivate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ItemActivate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemActivate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemActivate As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ItemActivate;" />
      <MemberSignature Language="F#" Value="member this.ItemActivate : EventHandler " Usage="member this.ItemActivate : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Element aktiviert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.ListView.ItemActivate>-Ereignis tritt auf, wenn der Benutzer ein oder mehrere Elemente im <xref:System.Windows.Forms.ListView> Steuerelement aktiviert. Der Benutzer kann ein Element entweder mit einem Mausklick oder mit einem Doppelklick aktivieren, je nach Wert der <xref:System.Windows.Forms.ListView.Activation%2A>-Eigenschaft oder mit der Tastatur. Innerhalb des Ereignis Handlers für das <xref:System.Windows.Forms.ListView.ItemActivate>-Ereignis können Sie auf die Eigenschaften <xref:System.Windows.Forms.ListView.SelectedItems%2A> oder <xref:System.Windows.Forms.ListView.SelectedIndices%2A> verweisen, um auf die Auflistung der im <xref:System.Windows.Forms.ListView> ausgewählten Elemente zuzugreifen und zu bestimmen, welche Elemente aktiviert werden.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.ListView.ItemActivate> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, können Sie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> durch <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ersetzen oder die Nachricht an eine mehrzeilige <xref:System.Windows.Forms.TextBox>anhängen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz des Typs <xref:System.Windows.Forms.ListView> mit dem Namen `ListView1`enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.ListView.ItemActivate>-Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#473](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#473)]
 [!code-vb[System.Windows.Forms.EventExamples#473](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#473)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.Activation" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
      </Docs>
    </Member>
    <Member MemberName="ItemCheck">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemCheckEventHandler ItemCheck;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemCheckEventHandler ItemCheck" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemCheck" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCheck As ItemCheckEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemCheckEventHandler ^ ItemCheck;" />
      <MemberSignature Language="F#" Value="member this.ItemCheck : System.Windows.Forms.ItemCheckEventHandler " Usage="member this.ItemCheck : System.Windows.Forms.ItemCheckEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemCheckEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Aktivierungszustand eines Elements geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.CheckBoxes%2A>-Eigenschaft muss auf true festgelegt werden, damit Kontrollkästchen neben jedem Element im <xref:System.Windows.Forms.ListView> Steuerelement angezeigt werden. Das <xref:System.Windows.Forms.ListView.ItemCheck>-Ereignis tritt auf, wenn sich der Prüf Zustand eines Elements ändert oder wenn die <xref:System.Windows.Forms.ListView.CheckBoxes%2A>-Eigenschaft auf `true`festgelegt ist. Sie können einen Ereignishandler für das <xref:System.Windows.Forms.ListView.ItemCheck> Ereignis erstellen, um Aufgaben auszuführen, z. b. das Ändern des Status eines Element Symbols oder eines anderen anwendungsspezifischen Tasks, wenn ein Element im <xref:System.Windows.Forms.ListView> Steuerelement eingeglichen wird.  
  
> [!NOTE]
>  Wenn das Fenster Handle nicht erstellt wurde, wenn das <xref:System.Windows.Forms.ListView.ItemCheck>-Ereignis ausgelöst wird, wird das Ereignis verzögert. Nachdem das Fenster Handle erstellt wurde (wenn das Formular angezeigt wird), werden alle verzögerten <xref:System.Windows.Forms.ListView.ItemCheck> Ereignisse ausgelöst. Weitere Informationen finden Sie unter <xref:System.Windows.Forms.Control.HandleCreated>.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein aktiviertes <xref:System.Windows.Forms.ListView> Steuerelement veranschaulicht, das das <xref:System.Windows.Forms.ListView.ItemCheck>-Ereignis behandelt. Die-Methode verwendet die Eigenschaften "<xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A?displayProperty=nameWithType>" und "<xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A?displayProperty=nameWithType>", um den Preis der ausgewählten Menü Elemente abzurufen und abzugleichen. Fügen Sie zum Ausführen dieses Beispiels den folgenden Code in ein Formular ein, das eine `ListView` mit dem Namen `ListView1` und eine `TextBox` mit dem Namen `Textbox1`enthält. Ruft die `InitializeListView`-Methode aus dem Konstruktor des Formulars oder `Load` Methode auf. Stellen Sie sicher, dass das <xref:System.Windows.Forms.ListView.ItemCheck>-Ereignis mit dem Ereignishandler in diesem Beispiel verknüpft ist.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" />
        <altmember cref="T:System.Windows.Forms.ItemCheckEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ItemChecked">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemCheckedEventHandler ItemChecked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemCheckedEventHandler ItemChecked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemChecked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemChecked As ItemCheckedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemCheckedEventHandler ^ ItemChecked;" />
      <MemberSignature Language="F#" Value="member this.ItemChecked : System.Windows.Forms.ItemCheckedEventHandler " Usage="member this.ItemChecked : System.Windows.Forms.ItemCheckedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemCheckedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Aktivierungszustand eines Elements geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis ähnelt dem <xref:System.Windows.Forms.ListView.ItemCheck>-Ereignis, wird aber ausgelöst, nachdem das Element aktiviert wurde.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.ListView.ItemChecked> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, können Sie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> durch <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ersetzen oder die Nachricht an eine mehrzeilige <xref:System.Windows.Forms.TextBox>anhängen.  
  
 Ein weiteres Beispiel finden Sie unter dem <xref:System.Windows.Forms.ListView.ItemCheck>-Ereignis. Der Code funktioniert gleichermaßen gut, wenn der Ereignishandler an das <xref:System.Windows.Forms.ListView.ItemChecked>-Ereignis angefügt wird.  
  
 Um diesen Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz des Typs <xref:System.Windows.Forms.ListView> mit dem Namen `ListView1`enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.ListView.ItemChecked>-Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#475](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#475)]
 [!code-vb[System.Windows.Forms.EventExamples#475](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#475)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemDragEventHandler ItemDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemDragEventHandler ItemDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDrag As ItemDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemDragEventHandler ^ ItemDrag;" />
      <MemberSignature Language="F#" Value="member this.ItemDrag : System.Windows.Forms.ItemDragEventHandler " Usage="member this.ItemDrag : System.Windows.Forms.ItemDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Benutzer beginnt, ein Element zu ziehen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.ListView.ItemDrag> Ereignis tritt auf, wenn der Benutzer mit dem Ziehen eines Elements beginnt. In der Regel führt der Ereignishandler für das <xref:System.Windows.Forms.ListView.ItemDrag> Ereignis den Zieh Vorgang durch Aufrufen der <xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=nameWithType>-Methode aus. Sie können dieses Ereignis verwenden, um die Aufgaben auszuführen, die zum Ziehen von Elementen in und aus dem <xref:System.Windows.Forms.ListView> Steuerelement ihrer Anwendung erforderlich sind.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.ListView.ItemDrag> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, können Sie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> durch <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ersetzen oder die Nachricht an eine mehrzeilige <xref:System.Windows.Forms.TextBox>anhängen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz des Typs <xref:System.Windows.Forms.ListView> mit dem Namen `ListView1`enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.ListView.ItemDrag>-Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#476](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#476)]
 [!code-vb[System.Windows.Forms.EventExamples#476](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#476)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" />
        <altmember cref="T:System.Windows.Forms.ItemDragEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ItemMouseHover">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ListViewItemMouseHoverEventHandler ItemMouseHover;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ListViewItemMouseHoverEventHandler ItemMouseHover" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemMouseHover" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemMouseHover As ListViewItemMouseHoverEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ListViewItemMouseHoverEventHandler ^ ItemMouseHover;" />
      <MemberSignature Language="F#" Value="member this.ItemMouseHover : System.Windows.Forms.ListViewItemMouseHoverEventHandler " Usage="member this.ItemMouseHover : System.Windows.Forms.ListViewItemMouseHoverEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItemMouseHoverEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn die Maus über ein Element bewegt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.ListView.ItemMouseHover> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, können Sie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> durch <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ersetzen oder die Nachricht an eine mehrzeilige <xref:System.Windows.Forms.TextBox>anhängen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz des Typs <xref:System.Windows.Forms.ListView> mit dem Namen `ListView1`enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.ListView.ItemMouseHover>-Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#477](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#477)]
 [!code-vb[System.Windows.Forms.EventExamples#477](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#477)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.ListViewItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/ListViewItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ListView.ListViewItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::ListViewItemCollection ^ Items { System::Windows::Forms::ListView::ListViewItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Windows.Forms.ListView.ListViewItemCollection" Usage="System.Windows.Forms.ListView.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewItemCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewItemCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+ListViewItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung mit allen Elementen im Steuerelement ab.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />, die alle Elemente im <see cref="T:System.Windows.Forms.ListView" />-Steuerelement enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mithilfe der <xref:System.Windows.Forms.ListView.ListViewItemCollection>, die von dieser Eigenschaft zurückgegeben wird, können Sie Elemente hinzufügen, Elemente entfernen und eine Anzahl von Elementen abrufen. Weitere Informationen zu den Aufgaben, die mit den Elementen in der Auflistung ausgeführt werden können, finden Sie in den <xref:System.Windows.Forms.ListView.ListViewItemCollection>-Klassenreferenz Themen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.ListView>-Steuerelement mit drei <xref:System.Windows.Forms.ListViewItem> angegebenen Objekten und drei <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>-Objekten erstellt, die für jedes Element angegeben wurden. Im Beispiel werden auch <xref:System.Windows.Forms.ColumnHeader> Objekte erstellt, um die unter Elemente in der Detailansicht anzuzeigen. Zwei <xref:System.Windows.Forms.ImageList> Objekte werden auch im Codebeispiel erstellt, um Bilder für die <xref:System.Windows.Forms.ListViewItem> Objekte bereitzustellen. Diese <xref:System.Windows.Forms.ImageList> Objekte werden den Eigenschaften <xref:System.Windows.Forms.ListView.LargeImageList%2A> und <xref:System.Windows.Forms.ListView.SmallImageList%2A> hinzugefügt. Das Beispiel verwendet die folgenden Eigenschaften, um das <xref:System.Windows.Forms.ListView>-Steuerelement zu erstellen.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Dieses Beispiel erfordert, dass Sie den Code zu einem <xref:System.Windows.Forms.Form> hinzugefügt und die im Beispiel erstellte Methode aus dem Konstruktor oder einer anderen Methode im Formular aufgerufen haben. Das Beispiel setzt auch voraus, dass Images mit dem Namen `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`und `MyLargeImage2` sich im Stammverzeichnis des Laufwerks C befinden.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="ItemSelectionChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ListViewItemSelectionChangedEventHandler ItemSelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ListViewItemSelectionChangedEventHandler ItemSelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemSelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemSelectionChanged As ListViewItemSelectionChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ListViewItemSelectionChangedEventHandler ^ ItemSelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.ItemSelectionChanged : System.Windows.Forms.ListViewItemSelectionChangedEventHandler " Usage="member this.ItemSelectionChanged : System.Windows.Forms.ListViewItemSelectionChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItemSelectionChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Auswahlzustand eines Elements geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Im virtuellen Modus tritt das <xref:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged>-Ereignis auf, wenn sich der Auswahl Status mehrerer Elemente ändert.  
  
 Das <xref:System.Windows.Forms.ListView.ItemSelectionChanged> Ereignis tritt auf, unabhängig davon, ob sich der Element Zustand von ausgewählt in ausgewählt ändert oder deaktiviert wird.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.ListView.ItemSelectionChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, können Sie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> durch <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ersetzen oder die Nachricht an eine mehrzeilige <xref:System.Windows.Forms.TextBox>anhängen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz des Typs <xref:System.Windows.Forms.ListView> mit dem Namen `ListView1`enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.ListView.ItemSelectionChanged>-Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#478](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#478)]
 [!code-vb[System.Windows.Forms.EventExamples#478](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#478)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged" />
      </Docs>
    </Member>
    <Member MemberName="LabelEdit">
      <MemberSignature Language="C#" Value="public bool LabelEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LabelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.LabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LabelEdit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LabelEdit : bool with get, set" Usage="System.Windows.Forms.ListView.LabelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Benutzer die Bezeichnungen von Elementen im Steuerelement bearbeiten können, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn der Benutzer die Bezeichnungen von Elementen zur Laufzeit bearbeiten kann, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.ListView.LabelEdit%2A>-Eigenschaft auf `true`festgelegt ist, kann der Benutzer den Text eines Elements ändern, indem er auf den Element Text klickt, um ihn auszuwählen, und dann erneut auf den Element Text klicken, um den Beschriftungs Text in den Bearbeitungsmodus zu versetzen. Der Benutzer kann dann die Text Bezeichnung des Elements ändern oder ersetzen. Mit den <xref:System.Windows.Forms.ListView.BeforeLabelEdit>-und <xref:System.Windows.Forms.ListView.AfterLabelEdit> Ereignissen können Sie Aufgaben ausführen, bevor und nachdem der Benutzer den Text eines Elements bearbeitet hat. Der Text des unter Elements kann nicht geändert werden, wenn diese Eigenschaft auf `true`festgelegt ist. Wenn Sie den Text der unter Elemente ändern möchten, können Sie Benutzern ein Dialogfeld anzeigen, wenn Sie auf ein Unterelement im-Steuerelement doppelklicken.  
  
> [!NOTE]
>  Wenn die <xref:System.Windows.Forms.ListView.Activation%2A>-Eigenschaft auf <xref:System.Windows.Forms.ItemActivation.OneClick> oder <xref:System.Windows.Forms.ItemActivation.TwoClick>festgelegt ist, ist die Bezeichnungs Bearbeitung unabhängig vom Wert der <xref:System.Windows.Forms.ListView.LabelEdit%2A>-Eigenschaft nicht zulässig.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.ListView>-Steuerelement mit drei <xref:System.Windows.Forms.ListViewItem> angegebenen Objekten und drei <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>-Objekten erstellt, die für jedes Element angegeben wurden. Im Beispiel werden auch <xref:System.Windows.Forms.ColumnHeader> Objekte erstellt, um die unter Elemente in der Detailansicht anzuzeigen. Zwei <xref:System.Windows.Forms.ImageList> Objekte werden auch im Codebeispiel erstellt, um Bilder für die <xref:System.Windows.Forms.ListViewItem> Objekte bereitzustellen. Diese <xref:System.Windows.Forms.ImageList> Objekte werden den Eigenschaften <xref:System.Windows.Forms.ListView.LargeImageList%2A> und <xref:System.Windows.Forms.ListView.SmallImageList%2A> hinzugefügt. Das Beispiel verwendet die folgenden Eigenschaften, um das <xref:System.Windows.Forms.ListView>-Steuerelement zu erstellen.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Dieses Beispiel erfordert, dass Sie den Code zu einem <xref:System.Windows.Forms.Form> hinzugefügt und die im Beispiel erstellte Methode aus dem Konstruktor oder einer anderen Methode im Formular aufgerufen haben. Das Beispiel setzt auch voraus, dass Images mit dem Namen `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`und `MyLargeImage2` sich im Stammverzeichnis des Laufwerks C befinden.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
        <altmember cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />
      </Docs>
    </Member>
    <Member MemberName="LabelWrap">
      <MemberSignature Language="C#" Value="public bool LabelWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LabelWrap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.LabelWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LabelWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LabelWrap : bool with get, set" Usage="System.Windows.Forms.ListView.LabelWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Elementbezeichnungen umbrochen werden, wenn Elemente im Steuerelement als Symbole angezeigt werden, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn Elementbezeichnungen bei der Anzeige von Elementen als Symbole umbrochen werden, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.ListView.LabelWrap%2A>-Eigenschaft auf `true`festgelegt ist, wird der Element Text bei Bedarf mit der nächsten Textzeile umschließt. Wenn der Text länger als zwei Textzeilen ist, wird der Text verkürzt. Wenn der Benutzer das Element auswählt, wird der gesamte Element Text angezeigt. Wenn die <xref:System.Windows.Forms.ListView.LabelWrap%2A>-Eigenschaft auf `false`festgelegt ist, wird der gesamte Element Text in einer einzelnen Zeile angezeigt. Der gesamte Element Text wird angezeigt, wenn die <xref:System.Windows.Forms.ListView.LabelWrap%2A> auf `false`festgelegt ist. Diese Eigenschaft wird nur verwendet, wenn die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft auf <xref:System.Windows.Forms.View.LargeIcon> oder <xref:System.Windows.Forms.View.SmallIcon>festgelegt ist.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
      </Docs>
    </Member>
    <Member MemberName="LargeImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList LargeImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList LargeImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.LargeImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property LargeImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ LargeImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LargeImageList : System.Windows.Forms.ImageList with get, set" Usage="System.Windows.Forms.ListView.LargeImageList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Windows.Forms.ImageList" /> ab, die verwendet werden soll, wenn die Elemente im Steuerelement als große Symbole angezeigt werden, oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.ImageList" /> mit den Symbolen, die verwendet werden sollen, wenn die <see cref="P:System.Windows.Forms.ListView.View" />-Eigenschaft auf <see cref="F:System.Windows.Forms.View.LargeIcon" /> festgelegt ist. Der Standardwert lautet <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.LargeImageList%2A>-Eigenschaft ermöglicht es Ihnen, ein <xref:System.Windows.Forms.ImageList> Objekt anzugeben, das Symbole enthält, die beim Anzeigen von Elementen mit großen Symbolen verwendet werden (wenn die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft auf <xref:System.Windows.Forms.View.LargeIcon>festgelegt ist). Das <xref:System.Windows.Forms.ListView> Steuerelement kann jedes Grafikformat akzeptieren, das vom <xref:System.Windows.Forms.ImageList>-Steuerelement beim Anzeigen von Symbolen unterstützt wird. Das <xref:System.Windows.Forms.ListView>-Steuerelement ist nicht auf ICO-Dateien beschränkt. Nachdem ein <xref:System.Windows.Forms.ImageList> der <xref:System.Windows.Forms.ListView.LargeImageList%2A>-Eigenschaft zugewiesen wurde, können Sie die Eigenschaft <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> jedes <xref:System.Windows.Forms.ListViewItem> im <xref:System.Windows.Forms.ListView>-Steuerelement auf die Indexposition des entsprechenden Bilds im <xref:System.Windows.Forms.ImageList>festlegen. Die Größe der Symbole für die <xref:System.Windows.Forms.ListView.LargeImageList%2A> wird vom <xref:System.Windows.Forms.ImageList.ImageSize%2A>angegeben.  
  
 Da nur ein Index für die <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A?displayProperty=nameWithType>-Eigenschaft angegeben werden kann, sollten die <xref:System.Windows.Forms.ImageList> Objekte, die in den Eigenschaften <xref:System.Windows.Forms.ListView.LargeImageList%2A> und <xref:System.Windows.Forms.ListView.SmallImageList%2A> angegeben werden, die gleichen Index Positionen für die anzuzeigenden Bilder aufweisen. Wenn die <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A>-Eigenschaft eines <xref:System.Windows.Forms.ListViewItem> beispielsweise auf 0 festgelegt ist, sollten sich die Bilder, die für kleine und große Symbole verwendet werden sollen, an derselben Indexposition in den <xref:System.Windows.Forms.ImageList> Objekten befinden, die in den Eigenschaften <xref:System.Windows.Forms.ListView.LargeImageList%2A> und <xref:System.Windows.Forms.ListView.SmallImageList%2A> angegeben sind.  
  
> [!NOTE]
>  Wenn die Images mit Schlüsseln angegeben werden, müssen Sie weiterhin kleine und große Versionen des Bilds an derselben Indexposition in den jeweiligen Bildlisten platzieren. Beim Wechseln zwischen Sichten wird die Indexposition des Bilds in einer Liste verwendet, um das Bild in der anderen Liste zu finden, unabhängig vom angegebenen Schlüsselwert.  
  
 Wenn Sie die <xref:System.Windows.Forms.ImageList> festlegen möchten, die beim Anzeigen von Elementen mit kleinen Symbolen verwendet werden soll (Alle Ansichtsmodi außer <xref:System.Windows.Forms.View.LargeIcon>), verwenden Sie die Eigenschaft <xref:System.Windows.Forms.ListView.SmallImageList%2A>. Wenn Sie zum Anzeigen des Element Zustands Bilder verwenden möchten, verwenden Sie die <xref:System.Windows.Forms.ListView.StateImageList%2A>-Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.ListView>-Steuerelement mit drei <xref:System.Windows.Forms.ListViewItem> angegebenen Objekten und drei <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>-Objekten erstellt, die für jedes Element angegeben wurden. Im Beispiel werden auch <xref:System.Windows.Forms.ColumnHeader> Objekte erstellt, um die unter Elemente in der Detailansicht anzuzeigen. Zwei <xref:System.Windows.Forms.ImageList> Objekte werden auch im Codebeispiel erstellt, um Bilder für die <xref:System.Windows.Forms.ListViewItem> Objekte bereitzustellen. Diese <xref:System.Windows.Forms.ImageList> Objekte werden den Eigenschaften <xref:System.Windows.Forms.ListView.LargeImageList%2A> und <xref:System.Windows.Forms.ListView.SmallImageList%2A> hinzugefügt. Das Beispiel verwendet die folgenden Eigenschaften, um das <xref:System.Windows.Forms.ListView>-Steuerelement zu erstellen.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Dieses Beispiel erfordert, dass Sie den Code zu einem <xref:System.Windows.Forms.Form> hinzugefügt und die im Beispiel erstellte Methode aus dem Konstruktor oder einer anderen Methode im Formular aufgerufen haben. Das Beispiel setzt auch voraus, dass Images mit dem Namen `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`und `MyLargeImage2` sich im Stammverzeichnis des Laufwerks C befinden.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.SmallImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.StateImageList" />
      </Docs>
    </Member>
    <Member MemberName="ListViewItemSorter">
      <MemberSignature Language="C#" Value="public System.Collections.IComparer ListViewItemSorter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IComparer ListViewItemSorter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemSorter" />
      <MemberSignature Language="VB.NET" Value="Public Property ListViewItemSorter As IComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IComparer ^ ListViewItemSorter { System::Collections::IComparer ^ get(); void set(System::Collections::IComparer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ListViewItemSorter : System.Collections.IComparer with get, set" Usage="System.Windows.Forms.ListView.ListViewItemSorter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Sortiervergleich für das Steuerelement ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Collections.IComparer" />, der den Sortiervergleich für das Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A>-Eigenschaft können Sie das Objekt angeben, das die Sortierung von Elementen in einem <xref:System.Windows.Forms.ListView>-Steuerelement ausführt, wenn die <xref:System.Windows.Forms.ListView.Sort%2A>-Methode aufgerufen wird oder wenn der Liste Elemente hinzugefügt werden. Beachten Sie, dass Elemente nicht automatisch sortiert werden, wenn Ihr Bezeichnungs Text geändert wird.  
  
 Das angegebene Objekt muss eine Instanz einer Klasse sein, die die <xref:System.Collections.IComparer>-Schnittstelle implementiert, die über eine einzige Methode namens <xref:System.Collections.Comparer.Compare%2A?displayProperty=nameWithType>verfügt.  
  
 Sie können diese Eigenschaft verwenden, um eine benutzerdefinierte Sortierung bereitzustellen, z. b. Wenn in der Detailansicht auf einen Spaltenheader geklickt wird. Zu diesem Zweck erstellen Sie eine Klasse, die die <xref:System.Collections.IComparer>-Schnittstelle implementiert und einen Konstruktor bereitstellt, der den Index einer Spalte annimmt, nach der sortiert werden soll. Anschließend können Sie einen Handler für das <xref:System.Windows.Forms.ListView.ColumnClick> Ereignis implementieren, das eine Instanz dieser Klasse mit dem Index der Spalte erstellt, auf die geklickt wurde. Wenn Sie die <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A>-Eigenschaft auf die neue-Instanz festlegen, wird das <xref:System.Windows.Forms.ListView> Steuerelement automatisch mithilfe des angegebenen-Objekts sortiert. Nachfolgende Aufrufe der <xref:System.Windows.Forms.ListView.Sort%2A>-Methode verwenden dasselbe-Objekt.  
  
> [!NOTE]
>  Wenn Sie den Wert der <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A>-Eigenschaft festlegen, wird die <xref:System.Windows.Forms.ListView.Sort%2A>-Methode automatisch aufgerufen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein Formular erstellt, das ein <xref:System.Windows.Forms.ListView> Steuerelement enthält, das Elemente manuell sortiert, wenn auf eine Spalte im <xref:System.Windows.Forms.ListView>-Steuerelement geklickt wird. Das Beispiel definiert eine Klasse mit dem Namen `ListViewItemComparer`, die die <xref:System.Collections.IComparer?displayProperty=nameWithType>-Schnittstelle implementiert, die den <xref:System.Windows.Forms.ListViewItem>-Vergleich ausführt. Im Beispiel wird eine Instanz von `ListViewItemComparer` erstellt und verwendet, um die <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A>-Eigenschaft des <xref:System.Windows.Forms.ListView>-Steuer Elements festzulegen. Der <xref:System.Windows.Forms.ListView.Sort%2A>-Methodenaufrufe im <xref:System.Windows.Forms.ListView.ColumnClick>-Ereignishandler verwendet die in `ListViewItemComparer` definierten Methoden, um die Art der Elemente basierend auf der Spalte, auf die geklickt wird, auszuführen.  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="E:System.Windows.Forms.ListView.ColumnClick" />
      </Docs>
    </Member>
    <Member MemberName="MultiSelect">
      <MemberSignature Language="C#" Value="public bool MultiSelect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MultiSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.MultiSelect" />
      <MemberSignature Language="VB.NET" Value="Public Property MultiSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MultiSelect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MultiSelect : bool with get, set" Usage="System.Windows.Forms.ListView.MultiSelect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob mehrere Elemente ausgewählt werden können, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn mehrere Elemente im Steuerelement gleichzeitig ausgewählt werden können, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.ListView.MultiSelect%2A>-Eigenschaft auf `true`festgelegt ist, können im <xref:System.Windows.Forms.ListView>-Steuerelement mehrere Elemente ausgewählt werden. Wenn Sie mehrere Elemente auswählen möchten, muss der Benutzer die STRG-Taste gedrückt halten, während Sie auf die Elemente klicken, um Sie auszuwählen. Aufeinander folgende Elemente können ausgewählt werden, indem Sie auf das erste Element klicken, das ausgewählt werden soll. Wenn Sie die UMSCHALTTASTE gedrückt halten, klicken Sie auf das letzte auszuwählende Element. Sie können die Mehrfachauswahl verwenden, um mehrere Elemente im <xref:System.Windows.Forms.ListView> Steuerelement auszuwählen und einen Vorgang für alle ausgewählten Elemente auszuführen. Beispielsweise kann der Benutzer mehrere Elemente auswählen und dann mit der rechten Maustaste auf ein ausgewähltes Element klicken, um ein Kontextmenü anzuzeigen, in dem eine Reihe von Aufgaben angezeigt wird, die für die ausgewählten Elemente ausgeführt werden können.  
  
 Verwenden Sie die <xref:System.Windows.Forms.ListView.SelectedItems%2A>-Eigenschaft, um zu bestimmen, welche Elemente im <xref:System.Windows.Forms.ListView> Steuerelement ausgewählt sind. Mit der <xref:System.Windows.Forms.ListView.SelectedItems%2A>-Eigenschaft können Sie auf die <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection> zugreifen, die eine Liste der ausgewählten Elemente enthält. Wenn Sie die Index Positionen im <xref:System.Windows.Forms.ListView.ListViewItemCollection> anstelle der Elemente verwenden möchten, können Sie die <xref:System.Windows.Forms.ListView.SelectedIndices%2A>-Eigenschaft verwenden, um auf die <xref:System.Windows.Forms.ListView.SelectedIndexCollection>zuzugreifen.  
  
 Wenn Sie im <xref:System.Windows.Forms.ListView>keine Mehrfachauswahl zulassen möchten, aber dennoch dem Benutzer eine Möglichkeit zur Auswahl mehrerer Elemente bieten möchten, können Sie die Kontrollkästchen anzeigen, indem Sie die Eigenschaft <xref:System.Windows.Forms.ListView.CheckBoxes%2A> auf `true`festlegen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine <xref:System.Windows.Forms.ListView> veranschaulicht, die die Auswahl mehrerer Elemente ermöglicht. Das Beispiel veranschaulicht das Festlegen der Eigenschaften <xref:System.Windows.Forms.ListView.HideSelection%2A> und <xref:System.Windows.Forms.ListView.HeaderStyle%2A>. Fügen Sie zum Ausführen dieses Beispiels den folgenden Code in ein Formular ein, das ein <xref:System.Windows.Forms.ListView> Objekt mit dem Namen `ListView1` und eine <xref:System.Windows.Forms.TextBox> namens `TextBox1`enthält. Ruft die `InitializeListView`-Methode aus dem Konstruktor des Formulars oder `Load` Methode auf.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
        <altmember cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />
        <altmember cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="OnAfterLabelEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterLabelEdit (System.Windows.Forms.LabelEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterLabelEdit(class System.Windows.Forms.LabelEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterLabelEdit (e As LabelEditEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterLabelEdit(System::Windows::Forms::LabelEditEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterLabelEdit : System.Windows.Forms.LabelEditEventArgs -&gt; unit&#xA;override this.OnAfterLabelEdit : System.Windows.Forms.LabelEditEventArgs -&gt; unit" Usage="listView.OnAfterLabelEdit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LabelEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.LabelEditEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnAfterLabelEdit%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie mit dem <xref:System.Windows.Forms.ListView.AfterLabelEdit>-Ereignis eine neu bearbeitete Bezeichnung auf Zeichen im Alphabet beschränkt wird. Im Beispiel wird die <xref:System.Text.ASCIIEncoding>-Klasse verwendet, um den ASCII-Zeichencode jedes Zeichens der neuen Bezeichnung abzurufen. Wenn das Zeichen zwischen den ASCII-Codes liegt, die Zahlen darstellen, kann die neue Bezeichnung nicht auf das Element angewendet werden. Für dieses Beispiel ist es erforderlich, dass Sie ein <xref:System.Windows.Forms.ListView>-Steuerelement auf einem Formular erstellt und ihm Elemente hinzugefügt haben. Das Beispiel erfordert auch, dass Sie das <xref:System.Windows.Forms.ListView.AfterLabelEdit>-Ereignis mit dem im Beispielcode definierten Ereignishandler verbunden haben. Um die <xref:System.Text.ASCIIEncoding>-Klasse verwenden zu können, muss die Datei den <xref:System.Text>-Namespace enthalten.  
  
 [!code-cpp[ListView.AfterLabelEdit#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CPP/form1.cpp#1)]
 [!code-csharp[ListView.AfterLabelEdit#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CS/form1.cs#1)]
 [!code-vb[ListView.AfterLabelEdit#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.AfterLabelEdit/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundImageChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackgroundImageChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackgroundImageChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnBackgroundImageChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackgroundImageChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackgroundImageChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBackgroundImageChanged : EventArgs -&gt; unit" Usage="listView.OnBackgroundImageChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnBackgroundImageChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnBackgroundImageChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnBackgroundImageChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnBeforeLabelEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeLabelEdit (System.Windows.Forms.LabelEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeLabelEdit(class System.Windows.Forms.LabelEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeLabelEdit (e As LabelEditEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeLabelEdit(System::Windows::Forms::LabelEditEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeLabelEdit : System.Windows.Forms.LabelEditEventArgs -&gt; unit&#xA;override this.OnBeforeLabelEdit : System.Windows.Forms.LabelEditEventArgs -&gt; unit" Usage="listView.OnBeforeLabelEdit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LabelEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.LabelEditEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnBeforeLabelEdit%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnCacheVirtualItems">
      <MemberSignature Language="C#" Value="protected virtual void OnCacheVirtualItems (System.Windows.Forms.CacheVirtualItemsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCacheVirtualItems(class System.Windows.Forms.CacheVirtualItemsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnCacheVirtualItems(System.Windows.Forms.CacheVirtualItemsEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCacheVirtualItems (e As CacheVirtualItemsEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCacheVirtualItems(System::Windows::Forms::CacheVirtualItemsEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCacheVirtualItems : System.Windows.Forms.CacheVirtualItemsEventArgs -&gt; unit&#xA;override this.OnCacheVirtualItems : System.Windows.Forms.CacheVirtualItemsEventArgs -&gt; unit" Usage="listView.OnCacheVirtualItems e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.CacheVirtualItemsEventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.CacheVirtualItemsEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.CacheVirtualItems" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnCacheVirtualItems%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnCacheVirtualItems(System.Windows.Forms.CacheVirtualItemsEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnCacheVirtualItems(System.Windows.Forms.CacheVirtualItemsEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnClick (System.Windows.Forms.ColumnClickEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnClick(class System.Windows.Forms.ColumnClickEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnClick (e As ColumnClickEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnClick(System::Windows::Forms::ColumnClickEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnClick : System.Windows.Forms.ColumnClickEventArgs -&gt; unit&#xA;override this.OnColumnClick : System.Windows.Forms.ColumnClickEventArgs -&gt; unit" Usage="listView.OnColumnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnClickEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.ColumnClickEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.ColumnClick" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnColumnClick%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein Formular erstellt, das ein <xref:System.Windows.Forms.ListView> Steuerelement enthält, das Elemente manuell sortiert, wenn auf eine Spalte im <xref:System.Windows.Forms.ListView>-Steuerelement geklickt wird. Das Beispiel definiert eine Klasse mit dem Namen `ListViewItemComparer`, die die <xref:System.Collections.IComparer?displayProperty=nameWithType>-Schnittstelle implementiert, die den <xref:System.Windows.Forms.ListViewItem>-Vergleich ausführt. Im Beispiel wird eine Instanz von `ListViewItemComparer` erstellt und verwendet, um die <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A>-Eigenschaft des <xref:System.Windows.Forms.ListView>-Steuer Elements festzulegen. Der <xref:System.Windows.Forms.ListView.Sort%2A>-Methodenaufrufe im <xref:System.Windows.Forms.ListView.ColumnClick>-Ereignishandler verwendet die in `ListViewItemComparer` definierten Methoden, um die Art der Elemente basierend auf der Spalte, auf die geklickt wird, auszuführen.  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.ColumnClick" />
        <altmember cref="T:System.Windows.Forms.ColumnClickEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnColumnReordered">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnReordered (System.Windows.Forms.ColumnReorderedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnReordered(class System.Windows.Forms.ColumnReorderedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnReordered(System.Windows.Forms.ColumnReorderedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnReordered (e As ColumnReorderedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnReordered(System::Windows::Forms::ColumnReorderedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnReordered : System.Windows.Forms.ColumnReorderedEventArgs -&gt; unit&#xA;override this.OnColumnReordered : System.Windows.Forms.ColumnReorderedEventArgs -&gt; unit" Usage="listView.OnColumnReordered e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnReorderedEventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Forms.ColumnReorderedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.ColumnReordered" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnColumnReordered%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnColumnReordered(System.Windows.Forms.ColumnReorderedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnColumnReordered(System.Windows.Forms.ColumnReorderedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnWidthChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnWidthChanged (System.Windows.Forms.ColumnWidthChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnWidthChanged(class System.Windows.Forms.ColumnWidthChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnWidthChanged(System.Windows.Forms.ColumnWidthChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnWidthChanged (e As ColumnWidthChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnWidthChanged(System::Windows::Forms::ColumnWidthChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnWidthChanged : System.Windows.Forms.ColumnWidthChangedEventArgs -&gt; unit&#xA;override this.OnColumnWidthChanged : System.Windows.Forms.ColumnWidthChangedEventArgs -&gt; unit" Usage="listView.OnColumnWidthChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnWidthChangedEventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.ColumnWidthChangedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.ColumnWidthChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnColumnWidthChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanged(System.Windows.Forms.ColumnWidthChangedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanged(System.Windows.Forms.ColumnWidthChangedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnWidthChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnWidthChanging (System.Windows.Forms.ColumnWidthChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnWidthChanging(class System.Windows.Forms.ColumnWidthChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnWidthChanging(System.Windows.Forms.ColumnWidthChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnWidthChanging (e As ColumnWidthChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnWidthChanging(System::Windows::Forms::ColumnWidthChangingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnWidthChanging : System.Windows.Forms.ColumnWidthChangingEventArgs -&gt; unit&#xA;override this.OnColumnWidthChanging : System.Windows.Forms.ColumnWidthChangingEventArgs -&gt; unit" Usage="listView.OnColumnWidthChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnWidthChangingEventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.ColumnWidthChangingEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.ColumnWidthChanging" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.ListView.ColumnWidthChanging> Ereignis tritt nicht auf, wenn die Option "Fensterinhalt beim Ziehen anzeigen" des Fensters deaktiviert ist.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnColumnWidthChanging%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanging(System.Windows.Forms.ColumnWidthChangingEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanging(System.Windows.Forms.ColumnWidthChangingEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDrawColumnHeader">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawColumnHeader (System.Windows.Forms.DrawListViewColumnHeaderEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawColumnHeader(class System.Windows.Forms.DrawListViewColumnHeaderEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawColumnHeader (e As DrawListViewColumnHeaderEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawColumnHeader(System::Windows::Forms::DrawListViewColumnHeaderEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawColumnHeader : System.Windows.Forms.DrawListViewColumnHeaderEventArgs -&gt; unit&#xA;override this.OnDrawColumnHeader : System.Windows.Forms.DrawListViewColumnHeaderEventArgs -&gt; unit" Usage="listView.OnDrawColumnHeader e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawListViewColumnHeaderEventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DrawListViewColumnHeaderEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.DrawColumnHeader" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnDrawColumnHeader%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDrawItem">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawItem (System.Windows.Forms.DrawListViewItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawItem(class System.Windows.Forms.DrawListViewItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawItem (e As DrawListViewItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawItem(System::Windows::Forms::DrawListViewItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawItem : System.Windows.Forms.DrawListViewItemEventArgs -&gt; unit&#xA;override this.OnDrawItem : System.Windows.Forms.DrawListViewItemEventArgs -&gt; unit" Usage="listView.OnDrawItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawListViewItemEventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DrawListViewItemEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.DrawItem" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnDrawItem%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.DrawListViewItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnDrawSubItem">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawSubItem (System.Windows.Forms.DrawListViewSubItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawSubItem(class System.Windows.Forms.DrawListViewSubItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawSubItem (e As DrawListViewSubItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawSubItem(System::Windows::Forms::DrawListViewSubItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawSubItem : System.Windows.Forms.DrawListViewSubItemEventArgs -&gt; unit&#xA;override this.OnDrawSubItem : System.Windows.Forms.DrawListViewSubItemEventArgs -&gt; unit" Usage="listView.OnDrawSubItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawListViewSubItemEventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DrawListViewSubItemEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.DrawSubItem" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnDrawSubItem%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="T:System.Windows.Forms.DrawListViewSubItemEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
      </Docs>
    </Member>
    <Member MemberName="OnEnabledChanged">
      <MemberSignature Language="C#" Value="protected override void OnEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnEnabledChanged : EventArgs -&gt; unit" Usage="listView.OnEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="e">Ein Objekt, das Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.EnabledChanged" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="listView.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see langword="FontChanged" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="listView.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.HandleCreated" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="listView.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.HandleDestroyed" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemActivate">
      <MemberSignature Language="C#" Value="protected virtual void OnItemActivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemActivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemActivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemActivate(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemActivate : EventArgs -&gt; unit&#xA;override this.OnItemActivate : EventArgs -&gt; unit" Usage="listView.OnItemActivate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.ItemActivate" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnItemActivate%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.ItemActivate" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCheck">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCheck (System.Windows.Forms.ItemCheckEventArgs ice);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCheck(class System.Windows.Forms.ItemCheckEventArgs ice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCheck (ice As ItemCheckEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCheck(System::Windows::Forms::ItemCheckEventArgs ^ ice);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCheck : System.Windows.Forms.ItemCheckEventArgs -&gt; unit&#xA;override this.OnItemCheck : System.Windows.Forms.ItemCheckEventArgs -&gt; unit" Usage="listView.OnItemCheck ice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ice" Type="System.Windows.Forms.ItemCheckEventArgs" />
      </Parameters>
      <Docs>
        <param name="ice">Ein <see cref="T:System.Windows.Forms.ItemCheckEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.ItemCheck" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnItemCheck%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.ItemCheck" />
        <altmember cref="T:System.Windows.Forms.ItemCheckEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemChecked">
      <MemberSignature Language="C#" Value="protected virtual void OnItemChecked (System.Windows.Forms.ItemCheckedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemChecked(class System.Windows.Forms.ItemCheckedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemChecked(System.Windows.Forms.ItemCheckedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemChecked (e As ItemCheckedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemChecked(System::Windows::Forms::ItemCheckedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemChecked : System.Windows.Forms.ItemCheckedEventArgs -&gt; unit&#xA;override this.OnItemChecked : System.Windows.Forms.ItemCheckedEventArgs -&gt; unit" Usage="listView.OnItemChecked e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ItemCheckedEventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.ItemCheckedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.ItemChecked" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnItemChecked%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnItemChecked(System.Windows.Forms.ItemCheckedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnItemChecked(System.Windows.Forms.ItemCheckedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnItemDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDrag (System.Windows.Forms.ItemDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDrag(class System.Windows.Forms.ItemDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDrag (e As ItemDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDrag(System::Windows::Forms::ItemDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDrag : System.Windows.Forms.ItemDragEventArgs -&gt; unit&#xA;override this.OnItemDrag : System.Windows.Forms.ItemDragEventArgs -&gt; unit" Usage="listView.OnItemDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ItemDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.ItemDragEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.ItemDrag" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnItemDrag%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.ItemDrag" />
        <altmember cref="T:System.Windows.Forms.ItemDragEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemMouseHover">
      <MemberSignature Language="C#" Value="protected virtual void OnItemMouseHover (System.Windows.Forms.ListViewItemMouseHoverEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemMouseHover(class System.Windows.Forms.ListViewItemMouseHoverEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemMouseHover(System.Windows.Forms.ListViewItemMouseHoverEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemMouseHover (e As ListViewItemMouseHoverEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemMouseHover(System::Windows::Forms::ListViewItemMouseHoverEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemMouseHover : System.Windows.Forms.ListViewItemMouseHoverEventArgs -&gt; unit&#xA;override this.OnItemMouseHover : System.Windows.Forms.ListViewItemMouseHoverEventArgs -&gt; unit" Usage="listView.OnItemMouseHover e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ListViewItemMouseHoverEventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.ListViewItemMouseHoverEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.ItemMouseHover" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnItemMouseHover%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnItemMouseHover(System.Windows.Forms.ListViewItemMouseHoverEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnItemMouseHover(System.Windows.Forms.ListViewItemMouseHoverEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnItemSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemSelectionChanged (System.Windows.Forms.ListViewItemSelectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemSelectionChanged(class System.Windows.Forms.ListViewItemSelectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemSelectionChanged(System.Windows.Forms.ListViewItemSelectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemSelectionChanged (e As ListViewItemSelectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemSelectionChanged(System::Windows::Forms::ListViewItemSelectionChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemSelectionChanged : System.Windows.Forms.ListViewItemSelectionChangedEventArgs -&gt; unit&#xA;override this.OnItemSelectionChanged : System.Windows.Forms.ListViewItemSelectionChangedEventArgs -&gt; unit" Usage="listView.OnItemSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ListViewItemSelectionChangedEventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.ListViewItemSelectionChangedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.ItemSelectionChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnItemSelectionChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnItemSelectionChanged(System.Windows.Forms.ListViewItemSelectionChangedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnItemSelectionChanged(System.Windows.Forms.ListViewItemSelectionChangedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected override void OnMouseHover (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseHover(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnMouseHover(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseHover (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseHover(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseHover : EventArgs -&gt; unit" Usage="listView.OnMouseHover e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.MouseHover" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.ListView.OnMouseHover%2A>-Methode aufgerufen wird, wenn der Mauszeiger über eine <xref:System.Windows.Forms.ListViewItem>bewegt wird, löst die Methode das <xref:System.Windows.Forms.ListView.ItemMouseHover>-Ereignis aus.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnMouseHover%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnMouseHover(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnMouseHover(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : EventArgs -&gt; unit" Usage="listView.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.MouseLeave" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnParentChanged">
      <MemberSignature Language="C#" Value="protected override void OnParentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnParentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnParentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnParentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnParentChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnParentChanged : EventArgs -&gt; unit" Usage="listView.OnParentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.ParentChanged" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected override void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnResize(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnResize : EventArgs -&gt; unit" Usage="listView.OnResize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.Resize" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRetrieveVirtualItem">
      <MemberSignature Language="C#" Value="protected virtual void OnRetrieveVirtualItem (System.Windows.Forms.RetrieveVirtualItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRetrieveVirtualItem(class System.Windows.Forms.RetrieveVirtualItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnRetrieveVirtualItem(System.Windows.Forms.RetrieveVirtualItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRetrieveVirtualItem (e As RetrieveVirtualItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRetrieveVirtualItem(System::Windows::Forms::RetrieveVirtualItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRetrieveVirtualItem : System.Windows.Forms.RetrieveVirtualItemEventArgs -&gt; unit&#xA;override this.OnRetrieveVirtualItem : System.Windows.Forms.RetrieveVirtualItemEventArgs -&gt; unit" Usage="listView.OnRetrieveVirtualItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.RetrieveVirtualItemEventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.RetrieveVirtualItemEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnRetrieveVirtualItem%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnRetrieveVirtualItem(System.Windows.Forms.RetrieveVirtualItemEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnRetrieveVirtualItem(System.Windows.Forms.RetrieveVirtualItemEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRightToLeftLayoutChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRightToLeftLayoutChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRightToLeftLayoutChanged : EventArgs -&gt; unit&#xA;override this.OnRightToLeftLayoutChanged : EventArgs -&gt; unit" Usage="listView.OnRightToLeftLayoutChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.RightToLeftLayoutChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSearchForVirtualItem">
      <MemberSignature Language="C#" Value="protected virtual void OnSearchForVirtualItem (System.Windows.Forms.SearchForVirtualItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSearchForVirtualItem(class System.Windows.Forms.SearchForVirtualItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnSearchForVirtualItem(System.Windows.Forms.SearchForVirtualItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSearchForVirtualItem (e As SearchForVirtualItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSearchForVirtualItem(System::Windows::Forms::SearchForVirtualItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSearchForVirtualItem : System.Windows.Forms.SearchForVirtualItemEventArgs -&gt; unit&#xA;override this.OnSearchForVirtualItem : System.Windows.Forms.SearchForVirtualItemEventArgs -&gt; unit" Usage="listView.OnSearchForVirtualItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.SearchForVirtualItemEventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.SearchForVirtualItemEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.SearchForVirtualItem" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnSearchForVirtualItem%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnSearchForVirtualItem(System.Windows.Forms.SearchForVirtualItemEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnSearchForVirtualItem(System.Windows.Forms.SearchForVirtualItemEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedIndexChanged : EventArgs -&gt; unit&#xA;override this.OnSelectedIndexChanged : EventArgs -&gt; unit" Usage="listView.OnSelectedIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.SelectedIndexChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnSelectedIndexChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.SelectedIndexChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnSystemColorsChanged">
      <MemberSignature Language="C#" Value="protected override void OnSystemColorsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSystemColorsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnSystemColorsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSystemColorsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSystemColorsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSystemColorsChanged : EventArgs -&gt; unit" Usage="listView.OnSystemColorsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.SystemColorsChanged" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVirtualItemsSelectionRangeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnVirtualItemsSelectionRangeChanged (System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnVirtualItemsSelectionRangeChanged(class System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged(System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnVirtualItemsSelectionRangeChanged (e As ListViewVirtualItemsSelectionRangeChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnVirtualItemsSelectionRangeChanged(System::Windows::Forms::ListViewVirtualItemsSelectionRangeChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnVirtualItemsSelectionRangeChanged : System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs -&gt; unit&#xA;override this.OnVirtualItemsSelectionRangeChanged : System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs -&gt; unit" Usage="listView.OnVirtualItemsSelectionRangeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged(System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged(System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OwnerDraw">
      <MemberSignature Language="C#" Value="public bool OwnerDraw { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OwnerDraw" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.OwnerDraw" />
      <MemberSignature Language="VB.NET" Value="Public Property OwnerDraw As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OwnerDraw { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OwnerDraw : bool with get, set" Usage="System.Windows.Forms.ListView.OwnerDraw" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob das <see cref="T:System.Windows.Forms.ListView" />-Steuerelement vom Betriebssystem oder durch selbst bereitgestellten Code gezeichnet wird.</summary>
        <value><see langword="true" />, wenn das <see cref="T:System.Windows.Forms.ListView" />-Steuerelement von Code gezeichnet wird, den Sie bereitstellen; <see langword="false" />, wenn das <see cref="T:System.Windows.Forms.ListView" />-Steuerelement vom Betriebssystem gezeichnet wird. Der Standardwert lautet <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Windows.Forms.ListView>-Steuerelement wird normalerweise vom Betriebssystem gezeichnet. Um die Darstellung von <xref:System.Windows.Forms.ListView> Elementen, unter Elementen und Spalten Headern anzupassen, legen Sie die Eigenschaft <xref:System.Windows.Forms.ListView.OwnerDraw%2A> auf `true` fest, und stellen Sie einen Handler für eines oder mehrere der folgenden Ereignisse bereit: <xref:System.Windows.Forms.ListView.DrawItem>, <xref:System.Windows.Forms.ListView.DrawSubItem>, <xref:System.Windows.Forms.ListView.DrawColumnHeader>. Dies wird als Besitzer Zeichnung bezeichnet. Wenn die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft auf <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>festgelegt ist, treten alle drei Ereignisse auf. Andernfalls tritt nur das <xref:System.Windows.Forms.ListView.DrawItem>-Ereignis auf.  
  
> [!NOTE]
>  Unterelement Informationen werden in der Regel in der Kachel Ansicht und in der Detailansicht angezeigt, aber in der Kachel Ansicht muss Sie in einem Handler für das Ereignis <xref:System.Windows.Forms.ListView.DrawItem> gezeichnet werden. Das <xref:System.Windows.Forms.ListView.DrawSubItem>-Ereignis tritt nicht für unter Elemente auf, für die der <xref:System.Windows.Forms.ListView.Columns%2A> Auflistung kein <xref:System.Windows.Forms.ColumnHeader> Objekt hinzugefügt wurde. Beachten Sie auch, dass das erste Unterelement jedes <xref:System.Windows.Forms.ListViewItem> Objekts das übergeordnete Element selbst darstellt und in der ersten Spalte angezeigt wird.  
  
 In der Detailansicht können Sie das <xref:System.Windows.Forms.ListView.DrawItem>-Ereignis behandeln, um Elemente zu zeichnen, die für alle unter Elemente (z. b. den Hintergrund) gemeinsam sind, und das <xref:System.Windows.Forms.ListView.DrawSubItem>-Ereignis behandeln, um Elemente für einzelne unter Elemente, wie z. b. Textwerte, zu zeichnen. Sie können auch alle Elemente im <xref:System.Windows.Forms.ListView> Steuerelement mit nur einem der beiden Ereignisse zeichnen, obwohl dies weniger praktisch sein kann. Um Spaltenüberschriften in der Detailansicht zu zeichnen, müssen Sie das <xref:System.Windows.Forms.ListView.DrawColumnHeader>-Ereignis behandeln.  
  
> [!NOTE]
>  Um Probleme beim Zeichnen von Grafiken beim Zeichnen von Besitzern zu vermeiden, überschreiben Sie das <xref:System.Windows.Forms.ListView> Steuerelement, und legen Sie die <xref:System.Windows.Forms.ListView.DoubleBuffered%2A>-Eigenschaft auf `true`fest.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine benutzerdefinierte Zeichnung für ein <xref:System.Windows.Forms.ListView>-Steuerelement bereitgestellt wird. Das <xref:System.Windows.Forms.ListView>-Steuerelement im Beispiel verfügt über einen Farbverlaufs Hintergrund. Unter Elemente mit negativen Werten haben einen roten Vordergrund und einen schwarzen Hintergrund.  
  
 Ein Handler für das <xref:System.Windows.Forms.ListView.DrawItem>-Ereignis zeichnet den Hintergrund für ganze Elemente. Ein Handler für das <xref:System.Windows.Forms.ListView.DrawSubItem>-Ereignis zeichnet die Textwerte und sowohl den Text als auch den Hintergrund für unter Elemente, die negative Werte aufweisen. Ein Handler für das <xref:System.Windows.Forms.ListView.DrawColumnHeader>-Ereignis zeichnet jeden Spaltenheader.  
  
 Eine <xref:System.Windows.Forms.ContextMenu> Komponente bietet eine Möglichkeit, zwischen der Detailansicht und der Listenansicht zu wechseln. In der Listenansicht wird nur das <xref:System.Windows.Forms.ListView.DrawItem>-Ereignis ausgelöst. In diesem Fall werden der Text und der Hintergrund im <xref:System.Windows.Forms.ListView.DrawItem> Ereignishandler gezeichnet.  
  
 [!code-csharp[ListViewOwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#1)]
 [!code-vb[ListViewOwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawColumnHeader" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.ListView.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Abstand zwischen dem <see cref="T:System.Windows.Forms.ListView" />-Steuerelement und seinem Inhalt ab oder legt diesen fest.</summary>
        <value>Der <see cref="T:System.Windows.Forms.Padding" />, der den Abstand zwischen dem <see cref="T:System.Windows.Forms.ListView" />-Steuerelement und seinem Inhalt angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist für diese Klasse nicht relevant.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.ListView.Padding" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberSignature Language="F#" Value="member this.Paint : System.Windows.Forms.PaintEventHandler " Usage="member this.Paint : System.Windows.Forms.PaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn das <see cref="T:System.Windows.Forms.ListView" />-Steuerelement gezeichnet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.ListView> Steuerelement wird vom Betriebssystem gezeichnet oder als Besitzer gezeichnet, sodass das <xref:System.Windows.Forms.ListView.Paint> Ereignis nie ausgelöst wird. Weitere Informationen zum Erstellen von Besitzern finden Sie in der <xref:System.Windows.Forms.ListView.OwnerDraw%2A>-Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RealizeProperties">
      <MemberSignature Language="C#" Value="protected void RealizeProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RealizeProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.RealizeProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RealizeProperties ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RealizeProperties();" />
      <MemberSignature Language="F#" Value="member this.RealizeProperties : unit -&gt; unit" Usage="listView.RealizeProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initialisiert die Eigenschaften des <see cref="T:System.Windows.Forms.ListView" />-Steuerelements, die die Darstellung des Steuerelements verwalten.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedrawItems">
      <MemberSignature Language="C#" Value="public void RedrawItems (int startIndex, int endIndex, bool invalidateOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedrawItems(int32 startIndex, int32 endIndex, bool invalidateOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.RedrawItems(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedrawItems (startIndex As Integer, endIndex As Integer, invalidateOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedrawItems(int startIndex, int endIndex, bool invalidateOnly);" />
      <MemberSignature Language="F#" Value="member this.RedrawItems : int * int * bool -&gt; unit" Usage="listView.RedrawItems (startIndex, endIndex, invalidateOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="endIndex" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="invalidateOnly" Type="System.Boolean" Index="2" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="startIndex">Der Index für das erste Element im neu zu zeichnenden Bereich.</param>
        <param name="endIndex">Der Index für das letzte Element des neu zu zeichnenden Bereichs.</param>
        <param name="invalidateOnly"><see langword="true" />, um den Bereich von Elementen ungültig zu machen, <see langword="false" />, um die Elemente ungültig zu machen und neu zu zeichnen.</param>
        <summary>Erzwingt das Neuzeichnen eines Bereichs von <see cref="T:System.Windows.Forms.ListViewItem" />-Objekten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.RedrawItems%2A>-Methode kann verwendet werden, unabhängig davon, ob sich die <xref:System.Windows.Forms.ListView> im virtuellen oder regulären Modus befindet.  
  
 Wenn die <xref:System.Windows.Forms.ListView.BeginUpdate%2A>-Methode vor dem Aufruf von <xref:System.Windows.Forms.ListView.RedrawItems%2A>aufgerufen wurde, tritt das erneute zeichnen nicht auf.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> oder <paramref name="endIndex" /> ist kleiner als 0 (null), größer oder gleich der Anzahl von Elementen in der <see cref="T:System.Windows.Forms.ListView" /> bzw. im virtuellen Modus größer als der Wert von <see cref="P:System.Windows.Forms.ListView.VirtualListSize" />.  
  
Oder 
Der angegebene <paramref name="startIndex" /> ist größer als der <paramref name="endIndex." />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RetrieveVirtualItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.RetrieveVirtualItemEventHandler RetrieveVirtualItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.RetrieveVirtualItemEventHandler RetrieveVirtualItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.RetrieveVirtualItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RetrieveVirtualItem As RetrieveVirtualItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::RetrieveVirtualItemEventHandler ^ RetrieveVirtualItem;" />
      <MemberSignature Language="F#" Value="member this.RetrieveVirtualItem : System.Windows.Forms.RetrieveVirtualItemEventHandler " Usage="member this.RetrieveVirtualItem : System.Windows.Forms.RetrieveVirtualItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RetrieveVirtualItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich <see cref="T:System.Windows.Forms.ListView" /> im virtuellen Modus befindet und ein <see cref="T:System.Windows.Forms.ListViewItem" /> erforderlich ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein <xref:System.Windows.Forms.ListView>-Objekt im virtuellen Modus ist, werden <xref:System.Windows.Forms.ListViewItem> Objekte dynamisch erstellt, anstatt die <xref:System.Windows.Forms.ListView.Items%2A>-Auflistung zu verwenden. Dieses Ereignis wird ausgelöst, wenn das Objekt ein <xref:System.Windows.Forms.ListViewItem> Objekt erstellen muss. Ein Handler für dieses Ereignis sollte die entsprechende <xref:System.Windows.Forms.ListViewItem> erstellen oder aus dem Cache abrufen und mithilfe der Eigenschaft <xref:System.Windows.Forms.RetrieveVirtualItemEventArgs.Item%2A> zurückgeben.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein Handler für dieses Ereignis veranschaulicht. In diesem Beispiel benötigt listView1 jedes <xref:System.Windows.Forms.ListViewItem>, um das Quadrat seines Indexes anzuzeigen. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Windows.Forms.ListView.VirtualMode%2A>-Eigenschaft bereitgestellt wird.  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Windows.Forms.RetrieveVirtualItemEventArgs.Item" />-Eigenschaft ist nicht auf ein Element festgelegt, wenn das <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" />-Ereignis behandelt wird.</exception>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayout">
      <MemberSignature Language="C#" Value="public virtual bool RightToLeftLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeftLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.RightToLeftLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeftLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RightToLeftLayout { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeftLayout : bool with get, set" Usage="System.Windows.Forms.ListView.RightToLeftLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Layout des Steuerelements von rechts nach links erfolgt, oder legt diesen fest.</summary>
        <value><see langword="true" />, um anzugeben, dass das Layout des <see cref="T:System.Windows.Forms.ListView" />-Steuerelements von rechts nach links erfolgt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView>-Eigenschaft ist für die Verwendung mit internationalen Anwendungen vorgesehen, in denen die Sprache von rechts nach links gelesen wird. Wenn Sie <xref:System.Windows.Forms.ListView> und <xref:System.Windows.Forms.RightToLeft> auf true festgelegt haben, werden Inhalt und Text des Steuer Elements von rechts nach links angeordnet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.RightToLeftLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RightToLeftLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RightToLeftLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.RightToLeftLayoutChanged : EventHandler " Usage="member this.RightToLeftLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.ListView.RightToLeftLayout" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.ListView.RightToLeftLayoutChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, können Sie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> durch <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ersetzen oder die Nachricht an eine mehrzeilige <xref:System.Windows.Forms.TextBox>anhängen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz des Typs <xref:System.Windows.Forms.ListView> mit dem Namen `ListView1`enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.ListView.RightToLeftLayoutChanged>-Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#462](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#462)]
 [!code-vb[System.Windows.Forms.EventExamples#462](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#462)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scrollable">
      <MemberSignature Language="C#" Value="public bool Scrollable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Scrollable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Scrollable" />
      <MemberSignature Language="VB.NET" Value="Public Property Scrollable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Scrollable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Scrollable : bool with get, set" Usage="System.Windows.Forms.ListView.Scrollable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob dem Steuerelement eine Bildlaufleiste hinzugefügt wird, wenn nicht genügend Platz für die Anzeige aller Elemente vorhanden ist, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn dem Steuerelement eine Bildlaufleiste hinzugefügt wird, um ggf. alle Elemente anzeigen zu können, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft auf `true`festgelegt ist, zeigt die <xref:System.Windows.Forms.ListView> eine vertikale Schiebe Leiste an, die verwendet werden soll, wenn die Anzahl der Elemente die Größe des Client Bereichs des Steuer Elements überschreitet. Mit dieser Eigenschaft können Sie sicherstellen, dass der Benutzer auf alle Elemente zugreifen kann, die im <xref:System.Windows.Forms.ListView> Steuerelement verfügbar sind.  
  
> [!NOTE]
>  In Versionen der [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] vor Version 2,0 wurden die Spaltenheader nicht ordnungsgemäß gezeichnet, wenn diese Eigenschaft auf `false` festgelegt wurde und die Größe des Steuer Elements geändert wird, um es zu vergrößern. Um dieses Problem zu umgehen, legen Sie diese Eigenschaft auf `true` in einem <xref:System.Windows.Forms.Form.ResizeBegin>-Ereignishandler fest, und legen Sie ihn auf `false` in einem <xref:System.Windows.Forms.Form.ResizeEnd> Ereignishandler zurück.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchForVirtualItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.SearchForVirtualItemEventHandler SearchForVirtualItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.SearchForVirtualItemEventHandler SearchForVirtualItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.SearchForVirtualItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SearchForVirtualItem As SearchForVirtualItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::SearchForVirtualItemEventHandler ^ SearchForVirtualItem;" />
      <MemberSignature Language="F#" Value="member this.SearchForVirtualItem : System.Windows.Forms.SearchForVirtualItemEventHandler " Usage="member this.SearchForVirtualItem : System.Windows.Forms.SearchForVirtualItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SearchForVirtualItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich <see cref="T:System.Windows.Forms.ListView" /> im virtuellen Modus befindet und eine Suche ausgeführt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt auf, wenn sich ein <xref:System.Windows.Forms.ListView> im virtuellen Modus befindet und die Methode <xref:System.Windows.Forms.ListView.FindNearestItem%2A> oder <xref:System.Windows.Forms.ListView.FindItemWithText%2A> aufgerufen wird. Wenn Sie dieses Ereignis behandeln, sollten Sie berechnen, welches Element aus der Liste der von der <xref:System.Windows.Forms.ListView.Items%2A>-Eigenschaft bereitgestellten Elemente mit den Suchkriterien übereinstimmt, und die <xref:System.Windows.Forms.SearchForVirtualItemEventArgs.Index%2A?displayProperty=nameWithType>-Eigenschaft auf den Index der <xref:System.Windows.Forms.ListViewItem>festlegen. Wenn ein Element nicht angegeben wird, wird <xref:System.Windows.Forms.ListView.FindNearestItem%2A> und <xref:System.Windows.Forms.ListView.FindItemWithText%2A> `null`zurückgeben.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel gibt eine Suche die nächste Entsprechung zu einer angegebenen Ganzzahl in einer Liste der ersten 10000 Quadrate zurück. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Windows.Forms.ListView.VirtualMode%2A>-Eigenschaft bereitgestellt wird.  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#4)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.SelectedIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedIndexChanged : EventHandler " Usage="member this.SelectedIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn die <see cref="P:System.Windows.Forms.ListView.SelectedIndices" />-Auflistung geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.SelectedIndices%2A> Auflistung ändert sich, wenn die <xref:System.Windows.Forms.ListViewItem.Selected%2A>-Eigenschaft eines <xref:System.Windows.Forms.ListViewItem> geändert wird. Die Eigenschaften Änderung kann Programm gesteuert erfolgen, oder wenn der Benutzer ein Element auswählt oder die Auswahl eines Elements löscht. Wenn der Benutzer ein Element auswählt, ohne STRG zum Durchführen einer Mehrfachauswahl zu drücken, löscht das Steuerelement zuerst die vorherige Auswahl. In diesem Fall tritt dieses Ereignis einmal für jedes Element ein, das zuvor ausgewählt wurde, und ein Mal für das neu ausgewählte Element.  
  
 Um zu ermitteln, welche Elemente im <xref:System.Windows.Forms.ListView> Steuerelement ausgewählt sind, verwenden Sie die <xref:System.Windows.Forms.ListView.SelectedItems%2A>-Eigenschaft, um auf die <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection>zuzugreifen. Sie können einen Ereignishandler für dieses Ereignis erstellen, um Aufgaben auszuführen, wenn die ausgewählten Elemente im <xref:System.Windows.Forms.ListView> Steuerelement geändert werden.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.ListView.SelectedItems%2A>-Eigenschaft, <xref:System.Windows.Forms.ListView.SelectedIndexChanged>-Ereignis, <xref:System.Windows.Forms.ListView.HeaderStyle%2A>-Member und die <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection>-Klasse verwendet werden. Fügen Sie zum Ausführen dieses Beispiels den folgenden Code in ein Formular ein, das ein <xref:System.Windows.Forms.ListView> Objekt mit dem Namen `ListView1` und eine <xref:System.Windows.Forms.TextBox> namens `TextBox1`enthält. Ruft die `InitializeListView`-Methode aus dem Konstruktor des Formulars oder `Load` Methode auf. Für dieses Beispiel ist es erforderlich, dass der Ereignishandler ordnungsgemäß dem <xref:System.Windows.Forms.ListView.SelectedIndexChanged>-Ereignis zugeordnet ist.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.ItemSelectionChanged" />
        <altmember cref="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndices">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.SelectedIndexCollection SelectedIndices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/SelectedIndexCollection SelectedIndices" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SelectedIndices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedIndices As ListView.SelectedIndexCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::SelectedIndexCollection ^ SelectedIndices { System::Windows::Forms::ListView::SelectedIndexCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedIndices : System.Windows.Forms.ListView.SelectedIndexCollection" Usage="System.Windows.Forms.ListView.SelectedIndices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+SelectedIndexCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Indizes der ausgewählten Elemente im Steuerelement ab.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />, die die Indizes der ausgewählten Elemente enthält. Wenn gegenwärtig keine Elemente ausgewählt sind, wird eine leere <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" /> zurückgegeben.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.SelectedIndices%2A>-Eigenschaft enthält keine Indizes, wenn auf die Eigenschaft zugegriffen wird, bevor das <xref:System.Windows.Forms.ListView> Handle erstellt wird. Dies tritt normalerweise auf, wenn die <xref:System.Windows.Forms.ListView> zum Anzeigen im Formular anfänglich geladen wird. Sie können überprüfen, ob das Handle mit der <xref:System.Windows.Forms.Control.IsHandleCreated%2A>-Eigenschaft erstellt wird. Wenn die <xref:System.Windows.Forms.ListView.MultiSelect%2A>-Eigenschaft auf `true`festgelegt ist, gibt diese Eigenschaft eine Auflistung zurück, die die Indizes aller im <xref:System.Windows.Forms.ListView>ausgewählten Elemente enthält. Bei einer <xref:System.Windows.Forms.ListView>mit einer einzelnen Auswahl gibt diese Eigenschaft eine Auflistung zurück, die ein einzelnes Element enthält, das den Index des einzigen im <xref:System.Windows.Forms.ListView>ausgewählten Elements enthält. Weitere Informationen zu den Aufgaben, die mit den Elementen in der Sammlung ausgeführt werden können, finden Sie unter <xref:System.Windows.Forms.ListView.SelectedIndexCollection>.  
  
 Wenn Sie anstelle der Index Positionen der ausgewählten Elemente eine Auflistung der im <xref:System.Windows.Forms.ListView> Steuerelement ausgewählten Elemente abrufen möchten, verwenden Sie die <xref:System.Windows.Forms.ListView.SelectedItems%2A>-Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Windows.Forms.ListView.SelectedIndices%2A>-, <xref:System.Windows.Forms.ListView.SelectedIndexChanged>-und <xref:System.Windows.Forms.ListView.HeaderStyle%2A>-Member und der <xref:System.Windows.Forms.ListView.SelectedIndexCollection>-Klasse veranschaulicht. Fügen Sie zum Ausführen dieses Beispiels den folgenden Code in ein Formular ein, das ein <xref:System.Windows.Forms.ListView> Objekt mit dem Namen `ListView1` und eine <xref:System.Windows.Forms.TextBox> namens `TextBox1`enthält. Ruft die `InitializeListView`-Methode aus dem Konstruktor des Formulars oder `Load` Methode auf. Dieses Beispiel erfordert, dass der Ereignishandler ordnungsgemäß dem <xref:System.Windows.Forms.ListView.SelectedIndexChanged>-Ereignis zugeordnet ist.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView1#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#3)]
[!code-csharp[System.Windows.Forms.ListView1#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#3)]
[!code-vb[System.Windows.Forms.ListView1#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItems">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.SelectedListViewItemCollection SelectedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/SelectedListViewItemCollection SelectedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SelectedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedItems As ListView.SelectedListViewItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::SelectedListViewItemCollection ^ SelectedItems { System::Windows::Forms::ListView::SelectedListViewItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItems : System.Windows.Forms.ListView.SelectedListViewItemCollection" Usage="System.Windows.Forms.ListView.SelectedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+SelectedListViewItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die im Steuerelement ausgewählten Elemente ab.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" />, die die im Steuerelement ausgewählten Elemente enthält. Wenn gegenwärtig keine Elemente ausgewählt sind, wird eine leere <see cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" /> zurückgegeben.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.SelectedItems%2A>-Eigenschaft enthält keine Elemente, wenn auf die Eigenschaft zugegriffen wird, bevor das <xref:System.Windows.Forms.ListView> Handle erstellt wird. Dies tritt normalerweise auf, wenn <xref:System.Windows.Forms.ListView> zum Anzeigen im Formular anfänglich geladen wird. Sie können überprüfen, ob das Handle mit der <xref:System.Windows.Forms.Control.IsHandleCreated%2A>-Eigenschaft erstellt wird. Wenn die <xref:System.Windows.Forms.ListView.MultiSelect%2A>-Eigenschaft auf `true`festgelegt ist, gibt diese Eigenschaft eine Auflistung mit den Elementen zurück, die in der <xref:System.Windows.Forms.ListView>ausgewählt sind. Bei einer <xref:System.Windows.Forms.ListView>mit einer einzelnen Auswahl gibt diese Eigenschaft eine Auflistung zurück, die das einzige ausgewählte Element in der <xref:System.Windows.Forms.ListView>enthält. Weitere Informationen zu den Aufgaben, die mit den Elementen in der Sammlung ausgeführt werden können, finden Sie unter <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection>.  
  
 Wenn Sie eine Auflistung der Index Positionen innerhalb des <xref:System.Windows.Forms.ListView.ListViewItemCollection> der im Steuerelement <xref:System.Windows.Forms.ListView> ausgewählten Elemente abrufen möchten, anstatt der Elemente, die ausgewählt werden, verwenden Sie die Eigenschaft <xref:System.Windows.Forms.ListView.SelectedIndices%2A>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Windows.Forms.ListView.SelectedItems%2A>, <xref:System.Windows.Forms.ListView.SelectedIndexChanged>-Ereignis und <xref:System.Windows.Forms.ListView.HeaderStyle%2A>-Member und der <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection>-Klasse veranschaulicht. Fügen Sie zum Ausführen dieses Beispiels den folgenden Code in ein Formular ein, das ein <xref:System.Windows.Forms.ListView> Objekt mit dem Namen `ListView1` und eine <xref:System.Windows.Forms.TextBox> namens `TextBox1`enthält. Ruft die `InitializeListView`-Methode aus dem Konstruktor des Formulars oder `Load` Methode auf. Dieses Beispiel erfordert, dass der Ereignishandler ordnungsgemäß dem <xref:System.Windows.Forms.ListView.SelectedIndexChanged>-Ereignis zugeordnet ist.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
      </Docs>
    </Member>
    <Member MemberName="ShowGroups">
      <MemberSignature Language="C#" Value="public bool ShowGroups { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowGroups" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ShowGroups" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowGroups As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowGroups { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowGroups : bool with get, set" Usage="System.Windows.Forms.ListView.ShowGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Elemente in Gruppen angezeigt werden, oder legt diesen fest.</summary>
        <value><see langword="true" />, um Elemente in Gruppen anzuzeigen, andernfalls <see langword="false" />. Standardwert: <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alle einer <xref:System.Windows.Forms.ListView> Steuerung zugewiesenen Gruppen werden immer dann angezeigt, wenn die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft auf einen anderen Wert als <xref:System.Windows.Forms.View.List>festgelegt ist. Mit der <xref:System.Windows.Forms.ListView> Gruppierungs Funktion können Sie visuelle Gruppen logisch verwandter <xref:System.Windows.Forms.ListView> Elemente unter Windows XP und Windows Server 2003 erstellen. Um dieses Feature zu aktivieren, muss die Anwendung die <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType>-Methode abrufen. Weitere Informationen finden Sie unter den Ausführungen zur Eigenschaft <xref:System.Windows.Forms.ListView.Groups%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Groups" />
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
        <altmember cref="T:System.Windows.Forms.ListViewGroupCollection" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="ShowItemToolTips">
      <MemberSignature Language="C#" Value="public bool ShowItemToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowItemToolTips" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ShowItemToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowItemToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowItemToolTips { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowItemToolTips : bool with get, set" Usage="System.Windows.Forms.ListView.ShowItemToolTips" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob für die in <see cref="T:System.Windows.Forms.ListViewItem" /> enthaltenen <see cref="T:System.Windows.Forms.ListView" />-Objekte die QuickInfo angezeigt wird, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn die <see cref="T:System.Windows.Forms.ListViewItem" />-QuickInfo angezeigt werden soll, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.ListView.ShowItemToolTips%2A>-Eigenschaft auf `true`festgelegt ist, werden alle <xref:System.Windows.Forms.ListViewItem>, die eine QuickInfo aufweisen, angezeigt. Andernfalls wird nichts angezeigt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die Eigenschaften <xref:System.Windows.Forms.ListView.ShowItemToolTips%2A> und <xref:System.Windows.Forms.ListViewItem.ToolTipText%2A?displayProperty=nameWithType> verwendet werden. Fügen Sie zum Ausführen dieses Beispiels den Code in ein Windows Form ein, und nennen Sie `InitializeItemsWithToolTips` aus dem Konstruktor des Formulars oder <xref:System.Windows.Forms.Form.Load> Ereignishandler.  
  
 [!code-csharp[System.Windows.Forms.ListViewItemWhidbeyMembers#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ListViewItemWhidbeyMembers#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmallImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList SmallImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList SmallImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SmallImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property SmallImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ SmallImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SmallImageList : System.Windows.Forms.ImageList with get, set" Usage="System.Windows.Forms.ListView.SmallImageList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Windows.Forms.ImageList" /> ab, die verwendet werden soll, wenn die Elemente im Steuerelement als kleine Symbole angezeigt werden, oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.ImageList" /> mit den Symbolen, die verwendet werden sollen, wenn die <see cref="P:System.Windows.Forms.ListView.View" />-Eigenschaft auf <see cref="F:System.Windows.Forms.View.SmallIcon" /> festgelegt ist. Der Standardwert lautet <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.SmallImageList%2A>-Eigenschaft ermöglicht es Ihnen, ein <xref:System.Windows.Forms.ImageList> Objekt anzugeben, das beim Anzeigen von Elementen mit kleinen Symbolen zu verwendende Symbole enthält (wenn die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft auf einen anderen Wert als <xref:System.Windows.Forms.View.LargeIcon>festgelegt ist). Das <xref:System.Windows.Forms.ListView> Steuerelement kann jedes Grafikformat akzeptieren, das vom <xref:System.Windows.Forms.ImageList>-Steuerelement beim Anzeigen von Symbolen unterstützt wird. Das <xref:System.Windows.Forms.ListView>-Steuerelement ist nicht auf ICO-Dateien beschränkt. Nachdem ein <xref:System.Windows.Forms.ImageList> der <xref:System.Windows.Forms.ListView.SmallImageList%2A>-Eigenschaft zugewiesen wurde, können Sie die Eigenschaft <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> jedes <xref:System.Windows.Forms.ListViewItem> im <xref:System.Windows.Forms.ListView>-Steuerelement auf die Indexposition des entsprechenden Bilds im <xref:System.Windows.Forms.ImageList>festlegen. Die Größe der Symbole für die <xref:System.Windows.Forms.ListView.SmallImageList%2A> wird durch die <xref:System.Windows.Forms.ImageList.ImageSize%2A>-Eigenschaft angegeben.  
  
 Da nur ein Index für die <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A?displayProperty=nameWithType>-Eigenschaft angegeben werden kann, sollten die <xref:System.Windows.Forms.ImageList> Objekte, die in den Eigenschaften <xref:System.Windows.Forms.ListView.LargeImageList%2A> und <xref:System.Windows.Forms.ListView.SmallImageList%2A> angegeben werden, die gleichen Index Positionen für die anzuzeigenden Bilder aufweisen. Wenn die <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A>-Eigenschaft eines <xref:System.Windows.Forms.ListViewItem> beispielsweise auf 0 festgelegt ist, sollten sich die Bilder, die für kleine und große Symbole verwendet werden sollen, an derselben Indexposition in den <xref:System.Windows.Forms.ImageList> Objekten befinden, die in den Eigenschaften <xref:System.Windows.Forms.ListView.LargeImageList%2A> und <xref:System.Windows.Forms.ListView.SmallImageList%2A> angegeben sind.  
  
> [!NOTE]
>  Wenn die Images mit Schlüsseln angegeben werden, müssen Sie weiterhin kleine und große Versionen des Bilds an derselben Indexposition in den jeweiligen Bildlisten platzieren. Beim Wechseln zwischen Sichten wird die Indexposition des Bilds in einer Liste verwendet, um das Bild in der anderen Liste zu finden, unabhängig vom angegebenen Schlüsselwert.  
  
 Um die <xref:System.Windows.Forms.ImageList> festzulegen, die beim Anzeigen von Elementen mit großen Symbolen verwendet werden sollen (wenn die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft auf <xref:System.Windows.Forms.View.LargeIcon>festgelegt ist), verwenden Sie die <xref:System.Windows.Forms.ListView.LargeImageList%2A>-Eigenschaft. Wenn Sie zum Anzeigen des Element Zustands Bilder verwenden möchten, verwenden Sie die <xref:System.Windows.Forms.ListView.StateImageList%2A>-Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.ListView>-Steuerelement mit drei <xref:System.Windows.Forms.ListViewItem> angegebenen Objekten und drei <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>-Objekten erstellt, die für jedes Element angegeben wurden. Im Beispiel werden auch <xref:System.Windows.Forms.ColumnHeader> Objekte erstellt, um die unter Elemente in der Detailansicht anzuzeigen. Zwei <xref:System.Windows.Forms.ImageList> Objekte werden auch im Codebeispiel erstellt, um Bilder für die <xref:System.Windows.Forms.ListViewItem> Objekte bereitzustellen. Diese <xref:System.Windows.Forms.ImageList> Objekte werden den Eigenschaften <xref:System.Windows.Forms.ListView.LargeImageList%2A> und <xref:System.Windows.Forms.ListView.SmallImageList%2A> hinzugefügt. Das Beispiel verwendet die folgenden Eigenschaften, um das <xref:System.Windows.Forms.ListView>-Steuerelement zu erstellen.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Dieses Beispiel erfordert, dass Sie den Code zu einem <xref:System.Windows.Forms.Form> hinzugefügt und die im Beispiel erstellte Methode aus dem Konstruktor oder einer anderen Methode im Formular aufgerufen haben. Das Beispiel setzt auch voraus, dass Images mit dem Namen `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`und `MyLargeImage2` sich im Stammverzeichnis des Laufwerks C befinden.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="P:System.Windows.Forms.ListView.LargeImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.StateImageList" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort();" />
      <MemberSignature Language="F#" Value="member this.Sort : unit -&gt; unit" Usage="listView.Sort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sortiert die Elemente der Listenansicht.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel werden Elemente mithilfe der <xref:System.Windows.Forms.ListView.Sorting%2A>-Eigenschaft sortiert, die Elemente basierend auf dem Element Text sortiert. Um die Sortierreihenfolge anzupassen, müssen Sie eine Klasse schreiben, die die <xref:System.Collections.IComparer>-Schnittstelle implementiert, und die <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A>-Eigenschaft auf ein Objekt dieser Klasse festlegen. Dies ist beispielsweise hilfreich, wenn Sie Elemente nach Unterelement Text sortieren möchten. Weitere Informationen zum manuellen Sortieren von Elementen finden Sie im Beispiel für die <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A>-Eigenschaft.  
  
 Wenn die <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType>-Eigenschaft auf einen anderen Wert als <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> festgelegt ist oder wenn die <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A>-Eigenschaft festgelegt ist, wird die Liste automatisch sortiert, wenn Elemente hinzugefügt werden. Elemente werden nicht automatisch sortiert, wenn der Bezeichnungs Text geändert wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.ListViewItemSorter" />
      </Docs>
    </Member>
    <Member MemberName="Sorting">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.SortOrder Sorting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.SortOrder Sorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Sorting" />
      <MemberSignature Language="VB.NET" Value="Public Property Sorting As SortOrder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::SortOrder Sorting { System::Windows::Forms::SortOrder get(); void set(System::Windows::Forms::SortOrder value); };" />
      <MemberSignature Language="F#" Value="member this.Sorting : System.Windows.Forms.SortOrder with get, set" Usage="System.Windows.Forms.ListView.Sorting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SortOrder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Sortierreihenfolge für Elemente im Steuerelement ab oder legt diese fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.SortOrder" />-Werte. Der Standardwert lautet <see cref="F:System.Windows.Forms.SortOrder.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der <xref:System.Windows.Forms.ListView.Sorting%2A>-Eigenschaft können Sie angeben, ob Elemente im <xref:System.Windows.Forms.ListView> Steuerelement sortiert werden. Standardmäßig wird keine Sortierung durchgeführt. Wenn die <xref:System.Windows.Forms.ListView.Sorting%2A>-Eigenschaft auf <xref:System.Windows.Forms.SortOrder.Ascending> oder <xref:System.Windows.Forms.SortOrder.Descending>festgelegt ist, werden die Elemente in der <xref:System.Windows.Forms.ListView> automatisch in aufsteigender alphabetischer Reihenfolge (bei Festlegung der-Eigenschaft auf <xref:System.Windows.Forms.SortOrder.Ascending>) oder absteigender alphabetischer Reihenfolge (wenn die-Eigenschaft auf <xref:System.Windows.Forms.SortOrder.Descending>festgelegt ist) sortiert. Sie können diese Eigenschaft verwenden, um Elemente, die im <xref:System.Windows.Forms.ListView> Steuerelement angezeigt werden, automatisch zu sortieren, damit Benutzer Elemente leichter finden können, wenn eine große Anzahl von Elementen verfügbar ist.  
  
 Wenn Sie eine eigene Element Sortierung statt der <xref:System.Windows.Forms.ListView.Sorting%2A>-Eigenschaft ausführen möchten, verwenden Sie die <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A>-Eigenschaft in Kombination mit der <xref:System.Windows.Forms.ListView.Sort%2A>-Methode.  
  
 Wenn die <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType>-Eigenschaft auf einen anderen Wert als <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> festgelegt ist oder wenn die <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A>-Eigenschaft festgelegt ist, wird die Liste automatisch sortiert, wenn Elemente hinzugefügt werden. Elemente werden nicht automatisch sortiert, wenn der Bezeichnungs Text geändert wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.ListView>-Steuerelement mit drei <xref:System.Windows.Forms.ListViewItem> angegebenen Objekten und drei <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>-Objekten erstellt, die für jedes Element angegeben wurden. Im Beispiel werden auch <xref:System.Windows.Forms.ColumnHeader> Objekte erstellt, um die unter Elemente in der Detailansicht anzuzeigen. Zwei <xref:System.Windows.Forms.ImageList> Objekte werden auch im Codebeispiel erstellt, um Bilder für die <xref:System.Windows.Forms.ListViewItem> Objekte bereitzustellen. Diese <xref:System.Windows.Forms.ImageList> Objekte werden den Eigenschaften <xref:System.Windows.Forms.ListView.LargeImageList%2A> und <xref:System.Windows.Forms.ListView.SmallImageList%2A> hinzugefügt. Das Beispiel verwendet die folgenden Eigenschaften, um das <xref:System.Windows.Forms.ListView>-Steuerelement zu erstellen.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Dieses Beispiel erfordert, dass Sie den Code zu einem <xref:System.Windows.Forms.Form> hinzugefügt und die im Beispiel erstellte Methode aus dem Konstruktor oder einer anderen Methode im Formular aufgerufen haben. Das Beispiel setzt auch voraus, dass Images mit dem Namen `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`und `MyLargeImage2` sich im Stammverzeichnis des Laufwerks C befinden.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der angegebene Wert ist keiner der <see cref="T:System.Windows.Forms.SortOrder" />-Werte.</exception>
        <altmember cref="T:System.Windows.Forms.SortOrder" />
      </Docs>
    </Member>
    <Member MemberName="StateImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList StateImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList StateImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.StateImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property StateImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ StateImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StateImageList : System.Windows.Forms.ImageList with get, set" Usage="System.Windows.Forms.ListView.StateImageList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Windows.Forms.ImageList" /> ab, die den von der Anwendung definierten Zuständen im Steuerelement zugeordnet ist, oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.ImageList" />, die eine Gruppe von Zustandsgrafiken enthält, mit denen der von der Anwendung definierte Zustand eines Elements angegeben werden kann. Der Standardwert lautet <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der <xref:System.Windows.Forms.ListView.StateImageList%2A>-Eigenschaft können Sie eine <xref:System.Windows.Forms.ImageList> angeben, die Bilder enthält, die zum Darstellen eines anwendungsspezifischen Zustands eines Elements in einem <xref:System.Windows.Forms.ListView> Steuerelement verwendet werden sollen. Zustands Bilder werden links neben einem Symbol für das Element angezeigt. Sie können Zustands Bilder, wie z. b. aktivierte und deaktivierte Kontrollkästchen, verwenden, um Anwendungs definierte Element Zustände anzugeben. Zustands Bilder sind in allen Ansichten des <xref:System.Windows.Forms.ListView> Steuer Elements sichtbar.  
  
 Wenn ein <xref:System.Windows.Forms.ImageList> in der <xref:System.Windows.Forms.ListView.StateImageList%2A>-Eigenschaft angegeben wird und die <xref:System.Windows.Forms.ListView.CheckBoxes%2A>-Eigenschaft auf `true`festgelegt ist, werden die Bilder an den Index Positionen 0 und 1 im <xref:System.Windows.Forms.ImageList> anstelle des Kontrollkästchens angezeigt. Das Bild an Indexposition 0 wird anstelle des Kontrollkästchens angezeigt, und das Bild an Indexposition 1 wird anstelle des aktivierten Kontrollkästchens angezeigt.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.LargeImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.SmallImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.ListView.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft ist für diese Klasse nicht relevant.</summary>
        <value>Der im <see cref="T:System.Windows.Forms.ListView" />-Steuerelement anzuzeigende Text.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist für diese Klasse nicht relevant.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberSignature Language="F#" Value="member this.TextChanged : EventHandler " Usage="member this.TextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich die <see cref="P:System.Windows.Forms.ListView.Text" />-Eigenschaft ändert.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TileSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size TileSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size TileSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.TileSize" />
      <MemberSignature Language="VB.NET" Value="Public Property TileSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size TileSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.TileSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.ListView.TileSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Größe der in der Kachelansicht angezeigten Fenster ab oder legt die Größe fest.</summary>
        <value>Eine <see cref="T:System.Drawing.Size" />, die die neue Fenstergröße enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft steuert die Größe der Kacheln, wenn die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft auf <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType>festgelegt ist. Das Festlegen dieser Eigenschaft ist hilfreich, um Zeilenumbrüchen zu verhindern, wenn der untergeordnete Text zu lang ist, um in einer einzelnen Zeile angezeigt zu werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Windows.Forms.ListView> tiult-Funktion veranschaulicht. In diesem Beispiel werden in der Kachel Ansicht Elemente angezeigt, die Bücher darstellen. Jedes Element wird als Kachel angezeigt, die ein Symbol eines Buchs, den Titel, den Autor und das Veröffentlichungsjahr enthält. Damit der Beispielcode funktioniert, müssen Sie eine Symbol Datei mit dem Namen Book. ico in dasselbe Verzeichnis wie das Beispiel einschließen. Um die Kachel Ansicht ohne Symbole anzuzeigen, kommentieren Sie die Zeilen aus, die sich auf das <xref:System.Windows.Forms.ImageList> Objekt beziehen.  
  
 [!code-cpp[System.Windows.Forms.ListView.Tiling#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Tiling/CPP/listviewtilingexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.Tiling#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Tiling/CS/listviewtilingexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.Tiling#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Tiling/VB/listviewtilingexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="TopItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem TopItem { get; set; }" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem TopItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.TopItem" />
      <MemberSignature Language="VB.NET" Value="Public Property TopItem As ListViewItem" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem ^ TopItem { System::Windows::Forms::ListViewItem ^ get(); void set(System::Windows::Forms::ListViewItem ^ value); };" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.TopItem : System.Windows.Forms.ListViewItem with get, set" Usage="System.Windows.Forms.ListView.TopItem" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem TopItem { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopItem As ListViewItem" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem ^ TopItem { System::Windows::Forms::ListViewItem ^ get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.TopItem : System.Windows.Forms.ListViewItem" Usage="System.Windows.Forms.ListView.TopItem" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das erste sichtbare Element im Steuerelement ab oder legt das Element fest.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.ListViewItem" />, das das erste sichtbare Element im Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anfänglich befindet sich das Element mit der Indexposition 0 (null) am oberen Rand des <xref:System.Windows.Forms.ListView> Steuer Elements. Wenn für den Inhalt des <xref:System.Windows.Forms.ListView>-Steuer Elements ein Rollup durchgeführt wird, kann sich ein anderes Element oben im Steuerelement befinden. Sie können diese Eigenschaft verwenden, um anzugeben oder zu bestimmen, welches Element am oberen Rand des <xref:System.Windows.Forms.ListView> Steuer Elements sichtbar ist. Der Wert der <xref:System.Windows.Forms.ListView.TopItem%2A>-Eigenschaft wird nicht immer beibehalten, je nachdem, wo sich das gewünschte oberste Element in der Listenansicht befindet.  
  
 Die Anzahl der Elemente, die in einem <xref:System.Windows.Forms.ListView>-Steuerelement jederzeit sichtbar sind, hängt von der Höhe der Listenansicht und der Größe der enthaltenen Elemente ab. Wenn die Elemente die Höhe der Listenansicht überschreiten, werden die Elemente auf mehreren Seiten fortgesetzt, durch die der Benutzer einen Bildlauf durchführen kann. Wenn Sie die <xref:System.Windows.Forms.ListView.TopItem%2A>-Eigenschaft auf ein Element auf der letzten Seite des <xref:System.Windows.Forms.ListView>festlegen, wird das Element automatisch in die Ansicht gescrollt. <xref:System.Windows.Forms.ListView.TopItem%2A> wird jedoch auf das tatsächliche oberste Element der letzten Seite festgelegt.  
  
 Verwenden Sie die <xref:System.Windows.Forms.ListView.EnsureVisible%2A>-Methode, um sicherzustellen, dass sich ein bestimmtes Element im sichtbaren Bereich des Steuer Elements befindet (aber nicht unbedingt in der obersten Position).  
  
> [!NOTE]
>  Das Festlegen dieser Eigenschaft hat keine Auswirkungen, wenn der Wert der <xref:System.Windows.Forms.ListView.Scrollable%2A>-Eigenschaft `false`ist.  
>   
>  Das Festlegen dieser Eigenschaft wird in Versionen der [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] vor Version 2,0 nicht unterstützt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das Zurücksetzen des Stils der unter Elemente eines <xref:System.Windows.Forms.ListViewItem> Objekts durch die Verwendung der <xref:System.Windows.Forms.ListView.TopItem%2A>-Eigenschaft und der <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ResetStyle%2A?displayProperty=nameWithType>-Methode veranschaulicht. Um das Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular ein, das eine Schaltfläche mit dem Namen `Button1` enthält, und nennen Sie die `InitializeListView`-Methode im Konstruktor des Formulars oder <xref:System.Windows.Forms.Form.Load> Ereignis Handlers.  
  
 [!code-cpp[System.Windows.Forms.ListViewItemStyle#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListViewItemStyle#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ListViewItemStyle#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Windows.Forms.ListView.View" />-Eigenschaft ist auf <see cref="F:System.Windows.Forms.View.LargeIcon" />, <see cref="F:System.Windows.Forms.View.SmallIcon" /> oder <see cref="F:System.Windows.Forms.View.Tile" /> festgelegt.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="M:System.Windows.Forms.ListView.EnsureVisible(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="listView.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Zeichenfolgendarstellung des <see cref="T:System.Windows.Forms.ListView" />-Steuerelements zurück.</summary>
        <returns>Eine Zeichenfolge, die den Steuerelementtyp, die Anzahl der Elemente im <see cref="T:System.Windows.Forms.ListView" />-Steuerelement sowie den Typ des ersten Elements in der <see cref="T:System.Windows.Forms.ListView" /> angibt, wenn die Anzahl nicht 0 (null) ist.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateExtendedStyles">
      <MemberSignature Language="C#" Value="protected void UpdateExtendedStyles ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateExtendedStyles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.UpdateExtendedStyles" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UpdateExtendedStyles ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UpdateExtendedStyles();" />
      <MemberSignature Language="F#" Value="member this.UpdateExtendedStyles : unit -&gt; unit" Usage="listView.UpdateExtendedStyles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktualisiert die erweiterten Stile, die auf das Listenansicht-Steuerelement angewendet werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die <xref:System.Windows.Forms.ListView.UpdateExtendedStyles%2A>-Methode in der abgeleiteten Klasse verwenden, um die erweiterten Stile zu überschreiben, die vom <xref:System.Windows.Forms.ListView> Steuerelement verwendet werden. Wenn Sie diese Methode aufzurufen, sollten Sie sicherstellen, dass die erweiterten Stile, die durch Eigenschaften des <xref:System.Windows.Forms.ListView>-Steuer Elements festgelegt werden, in der abgeleiteten Version des Steuer Elements verwendet werden.  
  
 Im folgenden sind die Eigenschaften zum Anwenden eines erweiterten Stils auf das <xref:System.Windows.Forms.ListView> Steuerelement zu finden.  
  
-   <xref:System.Windows.Forms.ListView.Activation%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.HoverSelection%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Activation" />
        <altmember cref="P:System.Windows.Forms.ListView.AllowColumnReorder" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckBoxes" />
        <altmember cref="P:System.Windows.Forms.ListView.FullRowSelect" />
        <altmember cref="P:System.Windows.Forms.ListView.GridLines" />
        <altmember cref="P:System.Windows.Forms.ListView.HoverSelection" />
      </Docs>
    </Member>
    <Member MemberName="UseCompatibleStateImageBehavior">
      <MemberSignature Language="C#" Value="public bool UseCompatibleStateImageBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCompatibleStateImageBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCompatibleStateImageBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCompatibleStateImageBehavior { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseCompatibleStateImageBehavior : bool with get, set" Usage="System.Windows.Forms.ListView.UseCompatibleStateImageBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, mit dem angegeben wird, ob für die <see cref="T:System.Windows.Forms.ListView" /> ein Verhalten der Zustandsgrafik verwendet wird, das mit [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], Version 1.1, oder [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], Version 2.0, kompatibel ist, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn das Verhalten der Zustandsgrafik mit [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], Version 1.1 kompatibel ist; <see langword="false" />, wenn das Verhalten mit [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], Version 2.0 kompatibel ist. Der Standardwert lautet <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Änderungen am <xref:System.Windows.Forms.ListView>-Steuerelement in der [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2,0 ermöglichen die Festlegung von benutzerdefinierten Zustands Bildern, um anzugeben, ob ein Element aktiviert oder deaktiviert ist oder sich in einem unbestimmten Zustand befindet. Durch das Hinzufügen dieses Features hat das [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2,0 ein anderes Verhalten als das .NET Framework 1,1. Wenn Sie Anwendungen erstellt haben, die vom Verhalten in der [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 1,1 abhängen, stellen Sie sicher, dass die Eigenschaft <xref:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior%2A> auf `true`festgelegt ist. Dies ist der Standardwert. Um benutzerdefinierte Zustands Images vollständig nutzen zu können, legen Sie <xref:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior%2A> auf `false`fest.  
  
> [!NOTE]
>  Wenn Sie den [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)]-Designer verwenden, wird die Eigenschaft <xref:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior%2A> auf `false`festgelegt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.View View { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.View View" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.View" />
      <MemberSignature Language="VB.NET" Value="Public Property View As View" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::View View { System::Windows::Forms::View get(); void set(System::Windows::Forms::View value); };" />
      <MemberSignature Language="F#" Value="member this.View : System.Windows.Forms.View with get, set" Usage="System.Windows.Forms.ListView.View" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.View</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab, wie Elemente im Steuerelement angezeigt werden, oder legt dieses fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.View" />-Werte. Der Standardwert lautet <see cref="F:System.Windows.Forms.View.LargeIcon" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft ermöglicht es Ihnen, den Typ der Anzeige anzugeben, die vom <xref:System.Windows.Forms.ListView>-Steuerelement zum Anzeigen von Elementen verwendet wird. Sie können die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft festlegen, um jedes Element mit großen oder kleinen Symbolen anzuzeigen oder Elemente in einer vertikalen Liste anzuzeigen. Die reichste Option ist die Detailansicht, mit der Sie nicht nur die Elemente, sondern alle unter Elemente anzeigen können, die für jedes Element angegeben wurden. Jedes Element wird in einem Raster angezeigt, wobei jedes Element vertikal aufgeführt ist, und die unter Elemente für jedes Element, das in einer Spalte angezeigt wird, mit Spaltenüberschriften. Die Detailansicht ist eine perfekte Möglichkeit zum Anzeigen von Datenbankinformationen für einen Benutzer. Mit Windows XP und Windows Server 2003 können Sie Elemente auch als Kacheln anzeigen, die grafische und Textinformationen ausgleichen, indem Sie ein großes Symbol zusammen mit den untergeordneten Informationen Ihrer Wahl anzeigen. Um die Kachel Ansicht zu aktivieren, muss die Anwendung die <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType>-Methode aufzurufen. In der Ansicht mit kleinen Bildern werden alle Elemente mit einem Symbol und Textinformationen rechts neben dem Symbol angezeigt. In der Ansicht für große Bilder werden alle Elemente mit einem Symbol und Textinformationen unterhalb des Symbols angezeigt. Die Größe der Symbole für die Bildliste wird durch die <xref:System.Windows.Forms.ImageList.ImageSize%2A>-Eigenschaft des <xref:System.Windows.Forms.ImageList> für die Eigenschaften <xref:System.Windows.Forms.ListView.SmallImageList%2A> oder <xref:System.Windows.Forms.ListView.LargeImageList%2A> angegeben.  
  
> [!NOTE]
>  Wenn Sie mehrere Bildlisten verwenden, sollten Sie bei einer kleinen und großen Symbol Ansicht mit einem <xref:System.Windows.Forms.ListView>-Steuerelement kleine und große Versionen des Bilds in den entsprechenden Bildlisten an derselben Indexposition platzieren. Beim Wechseln zwischen Sichten wird die Indexposition des Bilds in einer Liste verwendet, um das Bild in der anderen Liste zu finden, unabhängig vom angegebenen Schlüsselwert.  
  
 Die meisten Eigenschaften im <xref:System.Windows.Forms.ListView> Steuerelement beeinflussen, wie sich die verschiedenen Sichten Verhalten oder angezeigt werden. Einige Eigenschaften, die sich auf die Sichten der Elemente auswirken, sind nur nützlich, wenn die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft auf einen bestimmten Wert festgelegt ist, während andere in allen Ansichten nützlich sind. Eigenschaften wie <xref:System.Windows.Forms.ListView.GridLines%2A> und <xref:System.Windows.Forms.ListView.FullRowSelect%2A> sind z. b. nur nützlich, wenn die Eigenschaft <xref:System.Windows.Forms.ListView.View%2A> auf <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>festgelegt ist, während die Eigenschaften <xref:System.Windows.Forms.ListView.MultiSelect%2A> und <xref:System.Windows.Forms.ListView.CheckBoxes%2A> in allen Ansichten nützlich sind.  
  
 In der folgenden Tabelle werden einige der <xref:System.Windows.Forms.ListView> Member und die Ansichten angezeigt, in denen Sie gültig sind.  
  
|ListView-Member|Sicht|  
|---------------------|----------|  
|<xref:System.Windows.Forms.ListView.Alignment%2A>-Eigenschaft|<xref:System.Windows.Forms.View.SmallIcon> oder <xref:System.Windows.Forms.View.LargeIcon>|  
|<xref:System.Windows.Forms.ListView.AutoArrange%2A>-Eigenschaft|<xref:System.Windows.Forms.View.SmallIcon> oder <xref:System.Windows.Forms.View.LargeIcon>|  
|<xref:System.Windows.Forms.ListView.AutoResizeColumn%2A> -Methode|<xref:System.Windows.Forms.View.Details>|  
|<xref:System.Windows.Forms.ListView.CheckBoxes%2A>|Alle Sichten außer <xref:System.Windows.Forms.View.Tile>|  
|<xref:System.Windows.Forms.ListView.Columns%2A>-Eigenschaft|<xref:System.Windows.Forms.View.Details> oder <xref:System.Windows.Forms.View.Tile>|  
|<xref:System.Windows.Forms.ListView.DrawSubItem> -Ereignis|<xref:System.Windows.Forms.View.Details>|  
|<xref:System.Windows.Forms.ListView.FindItemWithText%2A> -Methode|<xref:System.Windows.Forms.View.Details>, <xref:System.Windows.Forms.View.List> oder <xref:System.Windows.Forms.View.Tile>|  
|<xref:System.Windows.Forms.ListView.FindNearestItem%2A> -Methode|<xref:System.Windows.Forms.View.SmallIcon> oder <xref:System.Windows.Forms.View.LargeIcon>|  
|<xref:System.Windows.Forms.ListView.GetItemAt%2A> -Methode|<xref:System.Windows.Forms.View.Details> oder <xref:System.Windows.Forms.View.Tile>|  
|<xref:System.Windows.Forms.ListView.Groups%2A>-Eigenschaft|Alle Sichten außer <xref:System.Windows.Forms.View.List>|  
|<xref:System.Windows.Forms.ListView.HeaderStyle%2A>-Eigenschaft|<xref:System.Windows.Forms.View.Details>|  
|<xref:System.Windows.Forms.ListView.InsertionMark%2A>-Eigenschaft|<xref:System.Windows.Forms.View.LargeIcon>, <xref:System.Windows.Forms.View.SmallIcon> oder <xref:System.Windows.Forms.View.Tile>|  
  
 Sie können die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft verwenden, um unterschiedliche Ansichten der Daten in der Anwendung bereitzustellen oder um eine bestimmte Ansicht zu sperren und die Vorteile dieser Ansicht zu nutzen. Beispielsweise wird die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft häufig auf <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType> festgelegt, da die Detailansicht eine Reihe von Anzeigeoptionen enthält, die in den anderen Ansichten nicht verfügbar sind.  
  
> [!NOTE]
>  Wenn für das <xref:System.Windows.Forms.ListView> Steuerelement keine Spaltenüberschriften angegeben sind und Sie die Eigenschaft <xref:System.Windows.Forms.ListView.View%2A> auf <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>festlegen, werden im <xref:System.Windows.Forms.ListView> Steuerelement keine Elemente angezeigt. Wenn für das <xref:System.Windows.Forms.ListView> Steuerelement keine Spaltenüberschriften angegeben sind und Sie die Eigenschaft <xref:System.Windows.Forms.ListView.View%2A> auf <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType>festlegen, zeigt das <xref:System.Windows.Forms.ListView> Steuerelement keine unter Elemente an.  
  
 Die Kachel Ansicht zeigt alle Elemente mit einem großen Symbol auf der linken Seite und die Textinformationen auf der rechten Seite an. Die Textinformationen bestehen aus der Element Bezeichnung, gefolgt von unter Elementen. Standardmäßig wird nur das erste Unterelement angezeigt, das der Element Bezeichnung entspricht. Um zusätzliche unter Elemente anzuzeigen, müssen Sie der <xref:System.Windows.Forms.ListView.Columns%2A> Auflistung <xref:System.Windows.Forms.ColumnHeader> Objekte hinzufügen. Jedes Unterelement in der Kachel entspricht einem Spaltenheader. Um zu steuern, welche unter Elemente angezeigt werden und in welcher Reihenfolge Sie angezeigt werden, müssen Sie die <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A?displayProperty=nameWithType>-Eigenschaft für jedes Element und die <xref:System.Windows.Forms.ColumnHeader.Name%2A?displayProperty=nameWithType>-Eigenschaft für jeden Header festlegen. Sie können dann Header in der <xref:System.Windows.Forms.ListView.Columns%2A> Auflistung hinzufügen, entfernen und neu anordnen, um das gewünschte Ergebnis zu erzielen.  
  
 Legen Sie die <xref:System.Windows.Forms.ListView.TileSize%2A>-Eigenschaft fest, um die Größe der Kacheln in der Kachel Ansicht zu steuern. Dies ist hilfreich, um Zeilenumbrüchen zu verhindern, wenn der untergeordnete Text für eine einzelne Zeile zu lang ist.  
  
 Ein Beispiel für die Kachel Ansicht finden Sie in der <xref:System.Windows.Forms.ListView.TileSize%2A>-Eigenschaft.  
  
> [!NOTE]
>  Obwohl Spalten nur in der Detailansicht angezeigt werden, werden unter Elemente ohne Spaltenüberschriften weder in der Detailansicht noch in der Kachel Ansicht angezeigt.  
  
 Die Kachel Ansicht ist nur unter Windows XP und Windows Server 2003 verfügbar, wenn die Anwendung die <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType>-Methode aufruft. Unter älteren Betriebssystemen hat Code in Bezug auf die Ansicht "Nebeneinander" keine Auswirkungen, und das <xref:System.Windows.Forms.ListView>-Steuerelement wird in der Ansicht "Große Symbole" angezeigt. Der Code, der von der Kachel Ansicht abhängt, funktioniert daher möglicherweise nicht ordnungsgemäß.  
  
 Möglicherweise möchten Sie Code einschließen, der bestimmt, ob die Kachel Ansicht verfügbar ist, und alternative Funktionen bereitstellen, wenn Sie nicht verfügbar sind. Wenn Sie z. b. die Besitzer Zeichnung verwenden, um die Darstellung <xref:System.Windows.Forms.ListView> Elemente in der Kachel Ansicht anzupassen, empfiehlt es sich, den Zeichencode zu verwenden, der für die große Symbol Ansicht geeignet ist, wenn er unter Betriebssystemen ausgeführt wird, die die Kachel Ansicht nicht unterstützen.  
  
 Die Kachel Ansicht wird von derselben Bibliothek bereitgestellt, in der das Feature "Betriebssystem Designs" bereitgestellt wird. Um die Verfügbarkeit dieser Bibliothek zu überprüfen, müssen Sie die <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType>-Methoden Überladung aufrufen und den <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType>-Wert übergeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.ListView>-Steuerelement mit drei <xref:System.Windows.Forms.ListViewItem> angegebenen Objekten und drei <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>-Objekten erstellt, die für jedes Element angegeben wurden. Im Beispiel werden auch <xref:System.Windows.Forms.ColumnHeader> Objekte erstellt, um die unter Elemente in der Detailansicht anzuzeigen. Zwei <xref:System.Windows.Forms.ImageList> Objekte werden auch im Codebeispiel erstellt, um Bilder für die <xref:System.Windows.Forms.ListViewItem> Objekte bereitzustellen. Diese <xref:System.Windows.Forms.ImageList> Objekte werden den Eigenschaften <xref:System.Windows.Forms.ListView.LargeImageList%2A> und <xref:System.Windows.Forms.ListView.SmallImageList%2A> hinzugefügt. Das Beispiel verwendet die folgenden Eigenschaften, um das <xref:System.Windows.Forms.ListView>-Steuerelement zu erstellen.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Dieses Beispiel erfordert, dass Sie den Code zu einem <xref:System.Windows.Forms.Form> hinzugefügt und die im Beispiel erstellte Methode aus dem Konstruktor oder einer anderen Methode im Formular aufgerufen haben. Das Beispiel setzt auch voraus, dass Images mit dem Namen `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`und `MyLargeImage2` sich im Stammverzeichnis des Laufwerks C befinden.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der angegebene Wert ist keiner der <see cref="T:System.Windows.Forms.View" />-Werte.</exception>
        <altmember cref="T:System.Windows.Forms.View" />
        <altmember cref="P:System.Windows.Forms.ListView.TileSize" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="VirtualItemsSelectionRangeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler VirtualItemsSelectionRangeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler VirtualItemsSelectionRangeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VirtualItemsSelectionRangeChanged As ListViewVirtualItemsSelectionRangeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ListViewVirtualItemsSelectionRangeChangedEventHandler ^ VirtualItemsSelectionRangeChanged;" />
      <MemberSignature Language="F#" Value="member this.VirtualItemsSelectionRangeChanged : System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler " Usage="member this.VirtualItemsSelectionRangeChanged : System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich eine <see cref="T:System.Windows.Forms.ListView" /> im virtuellen Modus befindet und der Auswahlzustand eines Bereichs von Elementen geändert wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn sich die <xref:System.Windows.Forms.ListView> nicht im virtuellen Modus befindet, tritt das <xref:System.Windows.Forms.ListView.ItemSelectionChanged>-Ereignis auf.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, können Sie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> durch <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ersetzen oder die Nachricht an eine mehrzeilige <xref:System.Windows.Forms.TextBox>anhängen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz des Typs <xref:System.Windows.Forms.ListView> mit dem Namen `ListView1`enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged>-Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#482](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#482)]
 [!code-vb[System.Windows.Forms.EventExamples#482](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#482)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.ItemSelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="VirtualListSize">
      <MemberSignature Language="C#" Value="public int VirtualListSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VirtualListSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.VirtualListSize" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualListSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int VirtualListSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.VirtualListSize : int with get, set" Usage="System.Windows.Forms.ListView.VirtualListSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl von <see cref="T:System.Windows.Forms.ListViewItem" />-Objekten in einer Liste im virtuellen Modus ab, oder legt diese fest.</summary>
        <value>Die Anzahl von <see cref="T:System.Windows.Forms.ListViewItem" />-Objekten, die im virtuellen Modus in der <see cref="T:System.Windows.Forms.ListView" /> enthalten sind.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Festlegen oder Festlegen der <xref:System.Windows.Forms.ListView.VirtualListSize%2A> Eigenschaft, wenn <xref:System.Windows.Forms.ListView.VirtualMode%2A> auf `false` festgelegt ist, hat keine Auswirkung auf die <xref:System.Windows.Forms.ListView>.  
  
 Wenn <xref:System.Windows.Forms.ListView.VirtualMode%2A> auf `true`festgelegt ist und die <xref:System.Windows.Forms.ListView.VirtualListSize%2A>-Eigenschaft größer als 0 ist, müssen Sie das <xref:System.Windows.Forms.ListView.RetrieveVirtualItem> Ereignis behandeln und einen gültigen <xref:System.Windows.Forms.ListViewItem>bereitstellen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Windows.Forms.ListView.VirtualListSize" /> ist auf einen Wert unter 0 (null) festgelegt.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.ListView.VirtualMode" /> ist auf <see langword="true" /> festgelegt, <see cref="P:System.Windows.Forms.ListView.VirtualListSize" /> ist größer als 0 (null), und <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> wird nicht behandelt.</exception>
        <altmember cref="P:System.Windows.Forms.ListView.VirtualMode" />
      </Docs>
    </Member>
    <Member MemberName="VirtualMode">
      <MemberSignature Language="C#" Value="public bool VirtualMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VirtualMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.VirtualMode" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VirtualMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.VirtualMode : bool with get, set" Usage="System.Windows.Forms.ListView.VirtualMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob für das <see cref="T:System.Windows.Forms.ListView" />-Steuerelement eigene Operationen zur Datenverwaltung bereitgestellt wurden.</summary>
        <value><see langword="true" />, wenn <see cref="T:System.Windows.Forms.ListView" /> Datenverwaltungsvorgänge verwendet, die Sie bereitstellen; andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie die <xref:System.Windows.Forms.ListView.VirtualMode%2A>-Eigenschaft auf `true` festlegen, wird die <xref:System.Windows.Forms.ListView> in den virtuellen Modus versetzt. Im virtuellen Modus wird die normale <xref:System.Windows.Forms.ListView.Items%2A> Sammlung nicht verwendet. Stattdessen werden <xref:System.Windows.Forms.ListViewItem> Objekte dynamisch erstellt, da Sie von der <xref:System.Windows.Forms.ListView> benötigt werden.  
  
 Der virtuelle Modus kann unter vielen Umständen nützlich sein. Wenn ein <xref:System.Windows.Forms.ListView> Objekt aus einer sehr großen Auflistung aufgefüllt werden muss, die bereits im Arbeitsspeicher vorhanden ist, kann das Erstellen eines <xref:System.Windows.Forms.ListViewItem> Objekts für jeden Eintrag verschwendet werden. Im virtuellen Modus werden nur die erforderlichen Elemente erstellt. In anderen Fällen müssen die Werte der <xref:System.Windows.Forms.ListViewItem> Objekte möglicherweise häufig neu berechnet werden, sodass dies für die gesamte Sammlung zu einer unzulässigen Leistung führen würde. Im virtuellen Modus werden nur die erforderlichen Elemente berechnet.  
  
 Um den virtuellen Modus zu verwenden, müssen Sie das <xref:System.Windows.Forms.ListView.RetrieveVirtualItem>-Ereignis behandeln, das jedes Mal ausgelöst wird, wenn für die <xref:System.Windows.Forms.ListView> ein Element erforderlich ist. Dieser Ereignishandler sollte das <xref:System.Windows.Forms.ListViewItem> Objekt erstellen, das zum angegebenen Index gehört. Außerdem muss die <xref:System.Windows.Forms.ListView.VirtualListSize%2A>-Eigenschaft auf die Größe der virtuellen Liste festgelegt werden.  
  
 Die Behandlung des <xref:System.Windows.Forms.ListView.SearchForVirtualItem> Ereignisses ermöglicht die Suche im virtuellen Modus. Wenn dieses Ereignis nicht behandelt wird, geben die Methoden <xref:System.Windows.Forms.ListView.FindItemWithText%2A> und <xref:System.Windows.Forms.ListView.FindNearestItem%2A> `null`zurück.  
  
 Sie können das <xref:System.Windows.Forms.ListView.CacheVirtualItems>-Ereignis behandeln, um einen Cache mit <xref:System.Windows.Forms.ListViewItem> Objekten zu verwalten. Wenn die Berechnung oder Suche zum Erstellen eines <xref:System.Windows.Forms.ListViewItem> Objekts teuer ist, kann die Leistung durch die Beibehaltung eines Caches verbessert werden.  
  
 Wenn die <xref:System.Windows.Forms.ListView.View%2A>-Eigenschaft auf <xref:System.Windows.Forms.View.Tile>festgelegt ist, wird der Wert automatisch in <xref:System.Windows.Forms.View.LargeIcon> geändert, wenn <xref:System.Windows.Forms.ListView.VirtualMode%2A> auf `true`festgelegt ist.  
  
 Im virtuellen Modus ist die <xref:System.Windows.Forms.ListView.Items%2A> Sammlung deaktiviert. Der Versuch, darauf zuzugreifen, führt zu einer <xref:System.InvalidOperationException>. Das gleiche gilt für die <xref:System.Windows.Forms.ListView.CheckedItems%2A> Auflistung und die <xref:System.Windows.Forms.ListView.SelectedItems%2A> Auflistung. Wenn Sie die ausgewählten oder aktivierten Elemente abrufen möchten, verwenden Sie stattdessen die <xref:System.Windows.Forms.ListView.SelectedIndices%2A>-und <xref:System.Windows.Forms.ListView.CheckedIndices%2A>-Auflistungen.  
  
   
  
## Examples  
 Dieses Beispiel veranschaulicht eine einfache <xref:System.Windows.Forms.ListView>, deren Inhalt die ersten 10000 Quadrate ist. Sie behandelt die Suche und verwendet einen Cache, um die Leistung zu erhöhen.  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.ListView.VirtualMode" /> ist auf <see langword="true" /> festgelegt, und eine der folgenden Voraussetzungen ist erfüllt: 
-   <see cref="P:System.Windows.Forms.ListView.VirtualListSize" /> ist größer als 0 (null), und <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> wird nicht behandelt.  
  
Oder 
-   <see cref="P:System.Windows.Forms.ListView.Items" />, <see cref="P:System.Windows.Forms.ListView.CheckedItems" /> oder <see cref="P:System.Windows.Forms.ListView.SelectedItems" /> enthält Elemente.  
  
Oder 
–   <see cref="P:System.Windows.Forms.ListView.Items" /> wird bearbeitet.</exception>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc : Message -&gt; unit" Usage="listView.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">Die zu verarbeitende Windows-<see cref="T:System.Windows.Forms.Message" />.</param>
        <summary>Überschreibt <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
