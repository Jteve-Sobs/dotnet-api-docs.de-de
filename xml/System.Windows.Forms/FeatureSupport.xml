<Type Name="FeatureSupport" FullName="System.Windows.Forms.FeatureSupport">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b487f69e02f8aed6a71ff5081399d22d18b7bab2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36522081" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class FeatureSupport : System.Windows.Forms.IFeatureSupport" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FeatureSupport extends System.Object implements class System.Windows.Forms.IFeatureSupport" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.FeatureSupport" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FeatureSupport&#xA;Implements IFeatureSupport" />
  <TypeSignature Language="C++ CLI" Value="public ref class FeatureSupport abstract : System::Windows::Forms::IFeatureSupport" />
  <TypeSignature Language="F#" Value="type FeatureSupport = class&#xA;    interface IFeatureSupport" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Forms.IFeatureSupport</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt <see langword="static" />-Methoden zum Abrufen von Featureinformationen aus dem aktuellen System bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der `static` Methoden dieser Klasse, wenn die Klassen, die Sie für Abfragen Informationen Funktion implementieren die <xref:System.Windows.Forms.IFeatureSupport> Schnittstelle. Andernfalls Vererben <xref:System.Windows.Forms.FeatureSupport> und eine eigene Implementierung bereitzustellen. Eine Implementierung dieser Klasse finden Sie <xref:System.Windows.Forms.OSFeature>.  
  
 Rufen Sie zum Abrufen der Versionsnummer einer Funktion <xref:System.Windows.Forms.FeatureSupport.GetVersionPresent%2A>. Rufen Sie <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> zu bestimmen, ob eine bestimmte Funktion oder eine Version einer Funktion installiert ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Windows.Forms.OSFeature> Implementierung von <xref:System.Windows.Forms.FeatureSupport> und fragt nach der <xref:System.Windows.Forms.OSFeature.LayeredWindows> Funktion. Die Version wird überprüft, um festzustellen, ob es `null`, um zu bestimmen, ob die Funktion vorhanden ist. Das Ergebnis wird in einem Textfeld angezeigt. Dieser Code geht davon aus `textBox1` erstellt und in einem Formular platziert wurde.  
  
 [!code-cpp[Classic OSFeature Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Beim Erben von <see cref="T:System.Windows.Forms.FeatureSupport" />, müssen Sie überschreiben die <see cref="M:System.Windows.Forms.FeatureSupport.GetVersionPresent(System.String,System.String)" /> Methode. Wenn Sie diese Methode überschreiben, überprüfen Sie, ob die Klasse, mit denen Sie für die <paramref name="feature" /> -Parameter ist identisch mit der Klasse für diesen Parameter im verwendet die <see cref="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" /> Methode. Wenn die beiden <paramref name="feature" /> Parameter unterscheiden sich, Sie müssen auch überschreiben <see cref="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" />.</para>
    </block>
    <altmember cref="T:System.Windows.Forms.OSFeature" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FeatureSupport ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FeatureSupport.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FeatureSupport();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.FeatureSupport" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetVersionPresent">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft die im System verfügbare Version des angegebenen Features ab.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetVersionPresent">
      <MemberSignature Language="C#" Value="public abstract Version GetVersionPresent (object feature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Version GetVersionPresent(object feature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FeatureSupport.GetVersionPresent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetVersionPresent (feature As Object) As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Version ^ GetVersionPresent(System::Object ^ feature);" />
      <MemberSignature Language="F#" Value="abstract member GetVersionPresent : obj -&gt; Version" Usage="featureSupport.GetVersionPresent feature" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IFeatureSupport.GetVersionPresent(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="feature">Das Feature, dessen Version angefordert wird.</param>
        <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse die im System verfügbare Version des angegebenen Features ab.</summary>
        <returns>Eine <see cref="T:System.Version" />, die die im System verfügbare Versionsnummer des angegebenen Features darstellt, oder <see langword="null" />, wenn das Feature nicht installiert ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Versionsnummern bestehen aus drei Teilen: Hauptversion, kleinere und erstellen. In der Regel wird eine Versionsnummer als "wichtige number.minor wird Number" angezeigt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird mit der <xref:System.Windows.Forms.OSFeature> Implementierung von <xref:System.Windows.Forms.FeatureSupport> und fragt nach der <xref:System.Windows.Forms.OSFeature.LayeredWindows> Funktion. Die Version wird überprüft, um festzustellen, ob es `null`, um zu bestimmen, ob die Funktion vorhanden ist. Das Ergebnis wird in einem Textfeld angezeigt. Dieser Code erfordert, dass `textBox1` erstellt und in einem Formular platziert wurde.  
  
 [!code-cpp[Classic OSFeature Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erben von <see cref="T:System.Windows.Forms.FeatureSupport" />, müssen Sie diese Methode überschreiben. Wenn Sie diese Methode überschreiben, überprüfen Sie, ob die Klasse, mit denen Sie für die <paramref name="feature" /> -Parameter ist identisch mit der Klasse für diesen Parameter im verwendet die <see cref="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" /> Methode. Wenn die beiden <paramref name="feature" /> Parameter unterscheiden, müssen Sie auch überschreiben <see cref="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" />.  Finden Sie unter <see cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" /> für eine Implementierung dieser Methode.</para>
        </block>
        <altmember cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetVersionPresent">
      <MemberSignature Language="C#" Value="public static Version GetVersionPresent (string featureClassName, string featureConstName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Version GetVersionPresent(string featureClassName, string featureConstName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FeatureSupport.GetVersionPresent(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetVersionPresent (featureClassName As String, featureConstName As String) As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Version ^ GetVersionPresent(System::String ^ featureClassName, System::String ^ featureConstName);" />
      <MemberSignature Language="F#" Value="static member GetVersionPresent : string * string -&gt; Version" Usage="System.Windows.Forms.FeatureSupport.GetVersionPresent (featureClassName, featureConstName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureClassName" Type="System.String" />
        <Parameter Name="featureConstName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="featureClassName">Der vollqualifizierte Name der Klasse, deren Informationen über das angegebene Feature abgefragt werden. Diese Klasse muss die <see cref="T:System.Windows.Forms.IFeatureSupport" />-Schnittstelle implementieren oder von einer Klasse erben, die diese Schnittstelle implementiert.</param>
        <param name="featureConstName">Der vollqualifizierte Name des zu suchenden Features.</param>
        <summary>Ruft die im System verfügbare Version des angegebenen Features ab.</summary>
        <returns>Eine <see cref="T:System.Version" /> mit der im System verfügbaren Versionsnummer des angegebenen Features, oder <see langword="null" />, wenn das Feature nicht installiert ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Versionsnummern bestehen aus drei Teilen: Hauptversion, kleinere und erstellen. In der Regel wird eine Versionsnummer als "wichtige number.minor wird Number" angezeigt.  
  
 Finden Sie in der Dokumentation für das Produkt mit der Funktion, um zu bestimmen, die Namen für die Übergabe an die `featureClassName` und `featureConstName` Parameter.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
        <altmember cref="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsPresent">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Bestimmt, ob das angegebene Feature im System installiert ist.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsPresent">
      <MemberSignature Language="C#" Value="public virtual bool IsPresent (object feature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPresent(object feature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FeatureSupport.IsPresent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsPresent (feature As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsPresent(System::Object ^ feature);" />
      <MemberSignature Language="F#" Value="abstract member IsPresent : obj -&gt; bool&#xA;override this.IsPresent : obj -&gt; bool" Usage="featureSupport.IsPresent feature" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IFeatureSupport.IsPresent(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="feature">Das zu suchende Feature.</param>
        <summary>Bestimmt, ob eine Version des angegebenen Features im System installiert ist.</summary>
        <returns>
          <see langword="true" />, wenn das Feature vorhanden ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird mit der <xref:System.Windows.Forms.OSFeature> Implementierung von <xref:System.Windows.Forms.FeatureSupport> und fragt nach der <xref:System.Windows.Forms.OSFeature.LayeredWindows> Funktion. Die Version wird überprüft, um festzustellen, ob es `null`, um zu bestimmen, ob die Funktion vorhanden ist. Das Ergebnis wird in einem Textfeld angezeigt. Dieser Code erfordert, dass `textBox1` erstellt und in einem Formular platziert wurde.  
  
 [!code-cpp[Classic OSFeature Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erben von <see cref="T:System.Windows.Forms.FeatureSupport" />, müssen Sie überschreiben die <see cref="M:System.Windows.Forms.FeatureSupport.GetVersionPresent(System.String,System.String)" /> Methode. Wenn Sie diese Methode überschreiben, überprüfen Sie, ob die Klasse, mit denen Sie für die <paramref name="feature" /> -Parameter ist identisch mit der Klasse für diesen Parameter im verwendet die <see cref="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" /> Methode. Wenn die beiden <paramref name="feature" /> Parameter unterscheiden, müssen Sie auch überschreiben <see cref="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsPresent">
      <MemberSignature Language="C#" Value="public virtual bool IsPresent (object feature, Version minimumVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPresent(object feature, class System.Version minimumVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FeatureSupport.IsPresent(System.Object,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsPresent (feature As Object, minimumVersion As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsPresent(System::Object ^ feature, Version ^ minimumVersion);" />
      <MemberSignature Language="F#" Value="abstract member IsPresent : obj * Version -&gt; bool&#xA;override this.IsPresent : obj * Version -&gt; bool" Usage="featureSupport.IsPresent (feature, minimumVersion)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IFeatureSupport.IsPresent(System.Object,System.Version)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="System.Object" />
        <Parameter Name="minimumVersion" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="feature">Das zu suchende Feature.</param>
        <param name="minimumVersion">
          <see cref="T:System.Version" /> stellt die kleinstmögliche Versionsnummer des zu suchenden Features dar.</param>
        <summary>Bestimmt, ob die angegebene oder eine neuere Version des angegebenen Features im System installiert ist.</summary>
        <returns>
          <see langword="true" />, wenn das Feature vorhanden und die Versionsnummer größer oder gleich der angegebenen kleinstmöglichen Versionsnummer ist. <see langword="false" />, wenn das Feature nicht installiert oder die Versionsnummer kleiner als die angegebene kleinstmögliche Versionsnummer ist.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Beim Erben von <see cref="T:System.Windows.Forms.FeatureSupport" />, müssen Sie überschreiben die <see cref="M:System.Windows.Forms.FeatureSupport.GetVersionPresent(System.String,System.String)" /> Methode. Wenn Sie diese Methode überschreiben, überprüfen Sie, ob die Klasse, mit denen Sie für die <paramref name="feature" /> -Parameter ist identisch mit der Klasse für diesen Parameter im verwendet die <see cref="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" /> Methode. Wenn die beiden <paramref name="feature" /> Parameter unterscheiden, müssen Sie auch überschreiben <see cref="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsPresent">
      <MemberSignature Language="C#" Value="public static bool IsPresent (string featureClassName, string featureConstName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPresent(string featureClassName, string featureConstName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPresent (featureClassName As String, featureConstName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPresent(System::String ^ featureClassName, System::String ^ featureConstName);" />
      <MemberSignature Language="F#" Value="static member IsPresent : string * string -&gt; bool" Usage="System.Windows.Forms.FeatureSupport.IsPresent (featureClassName, featureConstName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureClassName" Type="System.String" />
        <Parameter Name="featureConstName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="featureClassName">Der vollqualifizierte Name der Klasse, deren Informationen über das angegebene Feature abgefragt werden. Diese Klasse muss die <see cref="T:System.Windows.Forms.IFeatureSupport" />-Schnittstelle implementieren oder von einer Klasse erben, die diese Schnittstelle implementiert.</param>
        <param name="featureConstName">Der vollqualifizierte Name des zu suchenden Features.</param>
        <summary>Bestimmt, ob eine Version des angegebenen Features im System installiert ist. Diese Methode ist <see langword="static" />.</summary>
        <returns>
          <see langword="true" />, wenn das angegebene Feature vorhanden ist. <see langword="false" />, wenn das angegebene Feature nicht vorhanden oder das Produkt, das das Feature enthält, nicht installiert ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Finden Sie in der Dokumentation für das Produkt mit der Funktion, um zu bestimmen, die Namen für die Übergabe an die `featureClassName` und `featureConstName` Parameter.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.FeatureSupport.GetVersionPresent(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsPresent">
      <MemberSignature Language="C#" Value="public static bool IsPresent (string featureClassName, string featureConstName, Version minimumVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPresent(string featureClassName, string featureConstName, class System.Version minimumVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPresent (featureClassName As String, featureConstName As String, minimumVersion As Version) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPresent(System::String ^ featureClassName, System::String ^ featureConstName, Version ^ minimumVersion);" />
      <MemberSignature Language="F#" Value="static member IsPresent : string * string * Version -&gt; bool" Usage="System.Windows.Forms.FeatureSupport.IsPresent (featureClassName, featureConstName, minimumVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureClassName" Type="System.String" />
        <Parameter Name="featureConstName" Type="System.String" />
        <Parameter Name="minimumVersion" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="featureClassName">Der vollqualifizierte Name der Klasse, deren Informationen über das angegebene Feature abgefragt werden. Diese Klasse muss die <see cref="T:System.Windows.Forms.IFeatureSupport" />-Schnittstelle implementieren oder von einer Klasse erben, die diese Schnittstelle implementiert.</param>
        <param name="featureConstName">Der vollqualifizierte Name des zu suchenden Features.</param>
        <param name="minimumVersion">
          <see cref="T:System.Version" /> stellt die kleinstmögliche Versionsnummer des Features dar.</param>
        <summary>Bestimmt, ob die angegebene oder eine neuere Version des angegebenen Features im System installiert ist. Diese Methode ist <see langword="static" />.</summary>
        <returns>
          <see langword="true" />, wenn das Feature vorhanden und die Versionsnummer größer oder gleich der angegebenen kleinstmöglichen Versionsnummer ist. <see langword="false" />, wenn das Feature nicht installiert oder die Versionsnummer kleiner als die angegebene kleinstmögliche Versionsnummer ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Finden Sie in der Dokumentation für das Produkt mit der Funktion, um zu bestimmen, die Namen für die Übergabe an die `featureClassName` und `featureConstName` Parameter.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.FeatureSupport.GetVersionPresent(System.String,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>