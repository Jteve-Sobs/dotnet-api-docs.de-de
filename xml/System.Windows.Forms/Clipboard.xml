<Type Name="Clipboard" FullName="System.Windows.Forms.Clipboard">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f0b968a5970f2411ff65143b62e6c7ea9cc94340" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86597599" /></Metadata><TypeSignature Language="C#" Value="public static class Clipboard" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Clipboard extends System.Object" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Clipboard" />
  <TypeSignature Language="VB.NET" Value="Public Class Clipboard" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class Clipboard abstract sealed" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="F#" Value="type Clipboard = class" />
  <TypeSignature Language="C#" Value="public sealed class Clipboard" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Clipboard extends System.Object" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Clipboard" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class Clipboard sealed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Methoden bereit, mit denen Daten in der Zwischenablage des Systems abgelegt bzw. aus dieser abgerufen werden. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Liste der mit der-Klasse zu verwendenden vordefinierten Formate <xref:System.Windows.Forms.Clipboard> finden Sie unter der- <xref:System.Windows.Forms.DataFormats> Klasse.  
  
 Ruft <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> auf, um Daten in die Zwischenablage einzufügen und deren aktuellen Inhalt zu ersetzen. Legen Sie den-Parameter auf fest, um eine persistente Kopie der Daten in der Zwischenablage zu platzieren `copy` `true` .  
  
> [!NOTE]
>  Zum Platzieren von Daten in der Zwischenablage in mehreren Formaten verwenden Sie die- <xref:System.Windows.Forms.DataObject> Klasse oder eine- <xref:System.Windows.Forms.IDataObject> Implementierung. Platzieren Sie Daten in mehreren Formaten in der Zwischenablage, um die Möglichkeit zu maximieren, dass eine Zielanwendung, deren Formatanforderungen Sie möglicherweise nicht kennen, die Daten erfolgreich abrufen kann.  
  
 Rufen <xref:System.Windows.Forms.Clipboard.GetDataObject%2A> Sie auf, um Daten aus der Zwischenablage abzurufen. Die Daten werden als ein Objekt zurückgegeben, das die- <xref:System.Windows.Forms.IDataObject> Schnittstelle implementiert. Verwenden Sie die Methoden, die durch <xref:System.Windows.Forms.IDataObject> und Felder in angegeben werden <xref:System.Windows.Forms.DataFormats> , um die Daten aus dem-Objekt zu extrahieren. Wenn Sie das Format der Daten, die Sie abgerufen haben, nicht kennen, können Sie die- <xref:System.Windows.Forms.IDataObject.GetFormats%2A> Methode der- <xref:System.Windows.Forms.IDataObject> Schnittstelle verwenden, um eine Liste aller Formate abzurufen, in denen Daten gespeichert werden. Anschließend wird die <xref:System.Windows.Forms.IDataObject.GetData%2A> -Methode der <xref:System.Windows.Forms.IDataObject> -Schnittstelle aufgerufen und ein Format angegeben, das von der Anwendung verwendet werden kann.  
  
 In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] stellt die- <xref:System.Windows.Forms.Clipboard> Klasse zusätzliche Methoden bereit, die das Arbeiten mit der System Zwischenablage vereinfachen. Ruft die- <xref:System.Windows.Forms.Clipboard.Clear%2A> Methode auf, um alle Daten aus der Zwischenablage zu entfernen. Um der Zwischenablage Daten eines bestimmten Formats hinzuzufügen und die vorhandenen Daten zu ersetzen, müssen Sie die entsprechende Format Methode (z. b.) oder die- `Set` *Format* <xref:System.Windows.Forms.Clipboard.SetText%2A> <xref:System.Windows.Forms.Clipboard.SetData%2A> Methode zum Angeben des Formats aufzurufen. Rufen Sie zum Abrufen von Daten eines bestimmten Formats aus der Zwischenablage zuerst die entsprechende `Contains` *Format* Methode (z. b. <xref:System.Windows.Forms.Clipboard.ContainsText%2A> ) auf, um zu bestimmen, ob die Zwischenablage Daten in diesem Format enthält, und rufen Sie dann die entsprechende `Get` *Format* Methode (z <xref:System.Windows.Forms.Clipboard.GetText%2A> . b.) auf, um die Daten abzurufen, wenn die Zwischenablage Sie enthält. Um das Format in diesen Vorgängen anzugeben, müssen <xref:System.Windows.Forms.Clipboard.ContainsData%2A> Sie <xref:System.Windows.Forms.Clipboard.GetData%2A> stattdessen die Methoden und verwenden.  
  
> [!NOTE]
>  Alle Windows-basierten Anwendungen verwenden die Zwischenablage des Systems gemeinsam, sodass der Inhalt geändert werden kann, wenn Sie zu einer anderen Anwendung wechseln.  
>   
>  Ein Objekt muss serialisierbar sein, damit es in die Zwischenablage eingefügt werden kann. Wenn Sie ein nicht serialisierbares Objekt an eine Zwischenablage Methode übergeben, schlägt die Methode fehl, ohne dass eine Ausnahme ausgelöst wird. <xref:System.Runtime.Serialization>Weitere Informationen zur Serialisierung finden Sie unter. Wenn die Zielanwendung ein sehr spezifisches Datenformat erfordert, können die von den Daten im Serialisierungsprozess hinzugefügten Header das Erkennen Ihrer Daten durch die Anwendung verhindern. Um das Datenformat beizubehalten, fügen Sie die Daten als <xref:System.Byte> -Array zu hinzu, <xref:System.IO.MemoryStream> und übergeben Sie <xref:System.IO.MemoryStream> an die- <xref:System.Windows.Forms.DataObject.SetData%2A> Methode.  
>   
>  Die- <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads verwendet werden, die auf den STA-Modus (Single Thread Apartment) festgelegt sind. Um diese Klasse zu verwenden, stellen Sie sicher, dass `Main` die-Methode mit dem-Attribut gekennzeichnet ist <xref:System.STAThreadAttribute> .  
>   
>  Besondere Überlegungen sind möglicherweise erforderlich, wenn das Metadatei-Format mit der Zwischenablage verwendet wird. Aufgrund einer Einschränkung in der aktuellen Implementierung der- <xref:System.Windows.Forms.DataObject> Klasse wird das vom .NET Framework verwendete Metadateiformat möglicherweise nicht von Anwendungen erkannt, die ein älteres Metadatei-Format verwenden. In diesem Fall müssen Sie mit den Win32-Zwischenablage-APIs (Application Programming Interfaces) interagieren.
  
   
  
## Examples  
 Im folgenden Codebeispiel werden <xref:System.Windows.Forms.Clipboard> -Methoden verwendet, um Daten zu platzieren und aus der Zwischenablage des Systems abzurufen. Bei diesem Code wird davon ausgegangen, dass, `button1` `button2` , `textBox1` und `textBox2` erstellt und auf dem Formular abgelegt wurden.  
  
 Die `button1_Click` -Methode ruft <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> auf, um den ausgewählten Text aus dem Textfeld zu übernehmen und in der Zwischenablage des Systems zu platzieren.  
  
 Die- `button2_Click` Methode ruft <xref:System.Windows.Forms.Clipboard.GetDataObject%2A> auf, um Daten aus der Zwischenablage des Systems abzurufen. Der Code verwendet <xref:System.Windows.Forms.IDataObject> und <xref:System.Windows.Forms.DataFormats> , um die zurückgegebenen Daten zu extrahieren, und zeigt die Daten in an `textBox2` .  
  
 [!code-cpp[Classic Clipboard Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataObject" />
    <altmember cref="T:System.Windows.Forms.DataFormats" />
    <altmember cref="T:System.Windows.Forms.IDataObject" />
    <related type="Article" href="/dotnet/framework/winforms/additional-security-considerations-in-windows-forms">Weitere Überlegungen zur Sicherheit in Windows Forms</related>
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public static void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Clear();" />
      <MemberSignature Language="F#" Value="static member Clear : unit -&gt; unit" Usage="System.Windows.Forms.Clipboard.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt alle Daten aus der Zwischenablage.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da die Zwischenablage von mehreren Prozessen gemeinsam verwendet wird, hat das Aufrufen dieser Methode möglicherweise Auswirkungen auf diese Prozesse.  
  
> [!NOTE]
>  Die- <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads verwendet werden, die auf den STA-Modus (Single Thread Apartment) festgelegt sind. Um diese Klasse zu verwenden, stellen Sie sicher, dass `Main` die-Methode mit dem-Attribut gekennzeichnet ist <xref:System.STAThreadAttribute> .  
  
   
  
## Examples  
 Im folgenden Beispiel wird dieser Member veranschaulicht.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Clipboard#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
      </Docs>
    </Member>
    <Member MemberName="ContainsAudio">
      <MemberSignature Language="C#" Value="public static bool ContainsAudio ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsAudio() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsAudio" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsAudio () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsAudio();" />
      <MemberSignature Language="F#" Value="static member ContainsAudio : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsAudio " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt an, ob in der Zwischenablage Daten im <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />-Format vorhanden sind.</summary>
        <returns><see langword="true" />, wenn Audiodaten in der Zwischenablage gespeichert sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um zu bestimmen, ob die Zwischenablage Audiodaten enthält, bevor Sie mit der-Methode abgerufen werden <xref:System.Windows.Forms.Clipboard.GetAudioStream%2A> .  
  
> [!NOTE]
>  Die- <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads verwendet werden, die auf den STA-Modus (Single Thread Apartment) festgelegt sind. Um diese Klasse zu verwenden, stellen Sie sicher, dass `Main` die-Methode mit dem-Attribut gekennzeichnet ist <xref:System.STAThreadAttribute> .  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetAudio" />
      </Docs>
    </Member>
    <Member MemberName="ContainsData">
      <MemberSignature Language="C#" Value="public static bool ContainsData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsData (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member ContainsData : string -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format">Das Format der zu suchenden Daten. Vordefinierte Formate finden Sie unter <see cref="T:System.Windows.Forms.DataFormats" />.</param>
        <summary>Gibt an, ob sich in der Zwischenablage Daten befinden, die dem angegebenen Format entsprechen oder in dieses konvertiert werden können.</summary>
        <returns><see langword="true" />, wenn in der Zwischenablage Daten im angegebenen <paramref name="format" /> oder Daten vorhanden sind, die in dieses Format konvertiert werden können. Andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Windows.Forms.DataFormats> Klasse enthält vordefinierte Format Namen, die Sie mit dieser Methode verwenden können.  
  
 Verwenden Sie diese Methode, um zu bestimmen, ob die Zwischenablage Daten im angegebenen Format oder in einem kompatiblen Format enthält, bevor Sie mit der-Methode abgerufen werden <xref:System.Windows.Forms.Clipboard.GetData%2A> .  
  
> [!NOTE]
>  Daten können in ein anderes Format konvertiert werden, wenn Sie gespeichert wurden und angeben, dass die Konvertierung zulässig ist, und wenn das angeforderte Format mit dem gespeicherten Format kompatibel ist. Beispielsweise können Daten, die als Unicode gespeichert werden, in Text konvertiert werden.  
>   
>  Die- <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads verwendet werden, die auf den STA-Modus (Single Thread Apartment) festgelegt sind. Um diese Klasse zu verwenden, stellen Sie sicher, dass `Main` die-Methode mit dem-Attribut gekennzeichnet ist <xref:System.STAThreadAttribute> .  
  
   
  
## Examples  
 Im folgenden Beispiel wird dieser Member veranschaulicht.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.Clipboard#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsFileDropList">
      <MemberSignature Language="C#" Value="public static bool ContainsFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsFileDropList () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsFileDropList();" />
      <MemberSignature Language="F#" Value="static member ContainsFileDropList : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt an, ob sich in der Zwischenablage Daten im <see cref="F:System.Windows.Forms.DataFormats.FileDrop" />-Format oder Daten befinden, die in dieses Format konvertiert werden können.</summary>
        <returns><see langword="true" />, wenn eine Dateiablageliste in der Zwischenablage vorhanden ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Datei Ablage Liste ist eine Auflistung von Zeichen folgen, die Pfadinformationen für Dateien enthalten.  
  
 Verwenden Sie diese Methode, um zu bestimmen, ob die Zwischenablage eine Datei Ablage Liste enthält, bevor Sie mit der-Methode abgerufen wird <xref:System.Windows.Forms.Clipboard.GetFileDropList%2A> .  
  
> [!NOTE]
>  Die- <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads verwendet werden, die auf den STA-Modus (Single Thread Apartment) festgelegt sind. Um diese Klasse zu verwenden, stellen Sie sicher, dass `Main` die-Methode mit dem-Attribut gekennzeichnet ist <xref:System.STAThreadAttribute> .  
  
   
  
## Examples  
 Im folgenden Beispiel wird dieser Member veranschaulicht.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.Clipboard#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetFileDropList" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsImage">
      <MemberSignature Language="C#" Value="public static bool ContainsImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsImage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsImage () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsImage();" />
      <MemberSignature Language="F#" Value="static member ContainsImage : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt an, ob sich in der Zwischenablage Daten im <see cref="F:System.Windows.Forms.DataFormats.Bitmap" />-Format oder Daten befinden, die in dieses Format konvertiert werden können.</summary>
        <returns><see langword="true" />, wenn Bilddaten in der Zwischenablage gespeichert sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um zu bestimmen, ob die Zwischenablage Bilddaten enthält, bevor Sie mit der-Methode abgerufen werden <xref:System.Windows.Forms.Clipboard.GetImage%2A> .  
  
> [!NOTE]
>  Die- <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads verwendet werden, die auf den STA-Modus (Single Thread Apartment) festgelegt sind. Um diese Klasse zu verwenden, stellen Sie sicher, dass `Main` die-Methode mit dem-Attribut gekennzeichnet ist <xref:System.STAThreadAttribute> .  
  
   
  
## Examples  
 Im folgenden Beispiel wird dieser Member veranschaulicht.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.Clipboard#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetImage" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ContainsText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt an, ob die Zwischenablage Textdaten enthält.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public static bool ContainsText ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsText" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsText () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsText();" />
      <MemberSignature Language="F#" Value="static member ContainsText : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt an, ob die Zwischenablage Daten im <see cref="F:System.Windows.Forms.TextDataFormat.Text" />-Format oder <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />-Format enthält, je nach Betriebssystem.</summary>
        <returns><see langword="true" />, wenn Textdaten in der Zwischenablage gespeichert sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode überprüft das vorhanden sein von Daten im <xref:System.Windows.Forms.TextDataFormat.UnicodeText> -Format unter [!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)] und [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)] . Andernfalls prüft diese Methode, ob Daten im- <xref:System.Windows.Forms.TextDataFormat.Text> Format vorliegen.  
  
 Verwenden Sie diese Methode, um zu bestimmen, ob die Zwischenablage Textdaten enthält, bevor Sie mit der-Methode abgerufen werden <xref:System.Windows.Forms.Clipboard.GetText%2A> .  
  
> [!NOTE]
>  Die- <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads verwendet werden, die auf den STA-Modus (Single Thread Apartment) festgelegt sind. Um diese Klasse zu verwenden, stellen Sie sicher, dass `Main` die-Methode mit dem-Attribut gekennzeichnet ist <xref:System.STAThreadAttribute> .  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Überladung der- <xref:System.Windows.Forms.Clipboard.ContainsText%2A> Methode veranschaulicht, die dieser Überladung ähnelt.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="F:System.Windows.Forms.TextDataFormat.Text" />
        <altmember cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public static bool ContainsText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsText (format As TextDataFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="static member ContainsText : System.Windows.Forms.TextDataFormat -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format">Einer der <see cref="T:System.Windows.Forms.TextDataFormat" />-Werte.</param>
        <summary>Gibt an, ob die Zwischenablage Textdaten im vom angegebenen <see cref="T:System.Windows.Forms.TextDataFormat" />-Wert definierten Format enthält.</summary>
        <returns><see langword="true" />, wenn in der Zwischenablage Textdaten mit dem für <paramref name="format" /> angegebenen Wert vorhanden sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um zu bestimmen, ob die Zwischenablage Textdaten enthält, bevor Sie mit der-Methode abgerufen werden <xref:System.Windows.Forms.Clipboard.GetText%2A> .  
  
> [!NOTE]
>  Die- <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads verwendet werden, die auf den STA-Modus (Single Thread Apartment) festgelegt sind. Um diese Klasse zu verwenden, stellen Sie sicher, dass `Main` die-Methode mit dem-Attribut gekennzeichnet ist <xref:System.STAThreadAttribute> .  
  
   
  
## Examples  
 Im folgenden Beispiel wird dieser Member veranschaulicht.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="format" /> ist kein gültiger <see cref="T:System.Windows.Forms.TextDataFormat" /> -Wert.</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetAudioStream">
      <MemberSignature Language="C#" Value="public static System.IO.Stream GetAudioStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream GetAudioStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAudioStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ GetAudioStream();" />
      <MemberSignature Language="F#" Value="static member GetAudioStream : unit -&gt; System.IO.Stream" Usage="System.Windows.Forms.Clipboard.GetAudioStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft einen Audiostream aus der Zwischenablage ab.</summary>
        <returns>Ein <see cref="T:System.IO.Stream" /> mit Audiodaten oder <see langword="null" />, wenn die Zwischenablage keine Daten im <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />-Format enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden <xref:System.Windows.Forms.Clipboard.ContainsAudio%2A> Sie die-Methode, um zu bestimmen, ob die Zwischenablage Audiodaten enthält, bevor Sie Sie mit dieser Methode abrufen.  
  
 Verwenden Sie die <xref:System.Windows.Forms.Clipboard.SetAudio%2A> -Methode, um der Zwischenablage Audiodaten hinzuzufügen.  
  
> [!NOTE]
>  Die- <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads verwendet werden, die auf den STA-Modus (Single Thread Apartment) festgelegt sind. Um diese Klasse zu verwenden, stellen Sie sicher, dass `Main` die-Methode mit dem-Attribut gekennzeichnet ist <xref:System.STAThreadAttribute> .  
  
   
  
## Examples  
 Im folgenden Beispiel wird dieser Member veranschaulicht.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetAudio" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public static object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member GetData : string -&gt; obj" Usage="System.Windows.Forms.Clipboard.GetData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format">Das Format der abzurufenden Daten. Vordefinierte Formate finden Sie unter <see cref="T:System.Windows.Forms.DataFormats" />.</param>
        <summary>Ruft Daten im angegebenen Format aus der Zwischenablage ab.</summary>
        <returns>Ein <see cref="T:System.Object" />, das die Daten in der Zwischenablage darstellt, oder <see langword="null" />, wenn die Zwischenablage keine Daten im angegebenen <paramref name="format" /> oder keine Daten enthält, die in dieses Format konvertiert werden können.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die- <xref:System.Windows.Forms.Clipboard.ContainsData%2A> Methode, um zu bestimmen, ob die Zwischenablage Daten im angegebenen Format oder in einem kompatiblen Format enthält, bevor Sie mit dieser Methode abgerufen werden.  
  
 Wenn diese Methode keine Daten im angegebenen Format finden kann, wird versucht, die Daten in das-Format zu konvertieren. Wenn die Daten nicht in das angegebene Format konvertiert werden können oder wenn die Daten mit der automatischen Konvertierung auf gespeichert wurden `false` , gibt diese Methode zurück `null` .  
  
> [!NOTE]
>  Daten können in ein anderes Format konvertiert werden, wenn Sie gespeichert wurden und angeben, dass die Konvertierung zulässig ist, und wenn das angeforderte Format mit dem gespeicherten Format kompatibel ist. Beispielsweise können Daten, die als Unicode gespeichert werden, in Text konvertiert werden.  
>   
>  Die- <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads verwendet werden, die auf den STA-Modus (Single Thread Apartment) festgelegt sind. Um diese Klasse zu verwenden, stellen Sie sicher, dass `Main` die-Methode mit dem-Attribut gekennzeichnet ist <xref:System.STAThreadAttribute> .  
  
 Verwenden Sie die- <xref:System.Windows.Forms.Clipboard.SetData%2A> Methode, um der Zwischenablage Daten in einem bestimmten Format hinzuzufügen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird dieser Member veranschaulicht.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.Clipboard#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataObject">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.IDataObject GetDataObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.IDataObject GetDataObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetDataObject" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataObject () As IDataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::IDataObject ^ GetDataObject();" />
      <MemberSignature Language="F#" Value="static member GetDataObject : unit -&gt; System.Windows.Forms.IDataObject" Usage="System.Windows.Forms.Clipboard.GetDataObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IDataObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die Daten ab, die sich gegenwärtig in der Zwischenablage des Systems befinden.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.IDataObject" />, das die aktuell in der Zwischenablage vorhandenen Daten darstellt, oder <see langword="null" />, wenn sich keine Daten in der Zwischenablage befinden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da der Datentyp des Objekts, das aus der Zwischenablage zurückgegeben wurde, variieren kann, gibt diese Methode die Daten in einer zurück <xref:System.Windows.Forms.IDataObject> . Anschließend können Sie die Methoden der- <xref:System.Windows.Forms.IDataObject> Schnittstelle verwenden, um die Daten in Ihrem entsprechenden Datentyp zu extrahieren.  
  
 Diese Methode versucht, die Daten zehnmal in 100-Millisekunden-Intervallen abzurufen, und löst eine aus, <xref:System.Runtime.InteropServices.ExternalException> Wenn alle Versuche nicht erfolgreich sind.  
  
> [!NOTE]
>  Die- <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads verwendet werden, die auf den STA-Modus (Single Thread Apartment) festgelegt sind. Um diese Klasse zu verwenden, stellen Sie sicher, dass `Main` die-Methode mit dem-Attribut gekennzeichnet ist <xref:System.STAThreadAttribute> .  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden <xref:System.Windows.Forms.Clipboard> -Methoden verwendet, um Daten zu platzieren und aus der Zwischenablage des Systems abzurufen. Bei diesem Code wird davon ausgegangen, dass, `button1` `button2` , `textBox1` und `textBox2` auf dem Formular abgelegt wurden.  
  
 Die `button1_Click` -Methode ruft <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> auf, um den ausgewählten Text aus dem Textfeld zu übernehmen und in der Zwischenablage des Systems zu platzieren.  
  
 Die- `button2_Click` Methode ruft <xref:System.Windows.Forms.Clipboard.GetDataObject%2A> auf, um Daten aus der Zwischenablage des Systems abzurufen. Der Code verwendet <xref:System.Windows.Forms.IDataObject> und <xref:System.Windows.Forms.DataFormats> , um die zurückgegebenen Daten zu extrahieren. Die Daten werden in angezeigt `textBox2` .  
  
 [!code-cpp[Classic Clipboard Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Es konnten keine Daten aus der Zwischenablage abgerufen werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment), und der <see cref="P:System.Windows.Forms.Application.MessageLoop" />-Eigenschaftswert lautet <see langword="true" />. Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object)" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="GetFileDropList">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.StringCollection GetFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Specialized.StringCollection GetFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileDropList () As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Specialized::StringCollection ^ GetFileDropList();" />
      <MemberSignature Language="F#" Value="static member GetFileDropList : unit -&gt; System.Collections.Specialized.StringCollection" Usage="System.Windows.Forms.Clipboard.GetFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft eine Auflistung von Dateinamen aus der Zwischenablage ab.</summary>
        <returns>Eine <see cref="T:System.Collections.Specialized.StringCollection" /> mit Dateinamen oder <see langword="null" />, wenn die Zwischenablage keine Daten im <see cref="F:System.Windows.Forms.DataFormats.FileDrop" />-Format oder Daten enthält, die in dieses Format konvertiert werden können.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Datei Ablage Liste ist eine Auflistung von Zeichen folgen, die Pfadinformationen für Dateien enthalten.  
  
 Eine Datei Ablage Liste wird als-Array in der Zwischenablage gespeichert <xref:System.String> . Diese Methode konvertiert dieses Array in einen <xref:System.Collections.Specialized.StringCollection> und gibt die-Auflistung zurück.  
  
 Verwenden Sie die- <xref:System.Windows.Forms.Clipboard.ContainsFileDropList%2A> Methode, um zu bestimmen, ob die Zwischenablage eine Datei Ablage Liste enthält, bevor Sie mit dieser Methode abgerufen wird.  
  
 Verwenden Sie die- <xref:System.Windows.Forms.Clipboard.SetFileDropList%2A> Methode, um der Zwischenablage eine Datei Ablage Liste hinzuzufügen.  
  
> [!NOTE]
>  Die- <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads verwendet werden, die auf den STA-Modus (Single Thread Apartment) festgelegt sind. Um diese Klasse zu verwenden, stellen Sie sicher, dass `Main` die-Methode mit dem-Attribut gekennzeichnet ist <xref:System.STAThreadAttribute> .  
  
   
  
## Examples  
 Im folgenden Beispiel wird dieser Member veranschaulicht.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.Clipboard#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <altmember cref="T:System.Collections.Specialized.StringCollection" />
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image GetImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Image GetImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetImage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetImage () As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ GetImage();" />
      <MemberSignature Language="F#" Value="static member GetImage : unit -&gt; System.Drawing.Image" Usage="System.Windows.Forms.Clipboard.GetImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft ein Bild aus der Zwischenablage ab.</summary>
        <returns>Ein <see cref="T:System.Drawing.Image" />, das die Bilddaten in der Zwischenablage darstellt, oder <see langword="null" />, wenn die Zwischenablage keine Daten im <see cref="F:System.Windows.Forms.DataFormats.Bitmap" />-Format oder keine Daten enthält, die in dieses Format konvertiert werden können.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die- <xref:System.Windows.Forms.Clipboard.ContainsImage%2A> Methode, um zu bestimmen, ob die Zwischenablage Bilddaten enthält, bevor Sie mit dieser Methode abgerufen werden.  
  
 Verwenden Sie die- <xref:System.Windows.Forms.Clipboard.SetImage%2A> Methode, um der Zwischenablage Bilddaten hinzuzufügen.  
  
> [!NOTE]
>  Die- <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads verwendet werden, die auf den STA-Modus (Single Thread Apartment) festgelegt sind. Um diese Klasse zu verwenden, stellen Sie sicher, dass `Main` die-Methode mit dem-Attribut gekennzeichnet ist <xref:System.STAThreadAttribute> .  
  
   
  
## Examples  
 Im folgenden Beispiel wird dieser Member veranschaulicht.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.Clipboard#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft Textdaten aus der Zwischenablage ab.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public static string GetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetText" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetText();" />
      <MemberSignature Language="F#" Value="static member GetText : unit -&gt; string" Usage="System.Windows.Forms.Clipboard.GetText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft Textdaten im <see cref="F:System.Windows.Forms.TextDataFormat.Text" />-Format oder im <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />-Format aus der Zwischenablage ab, je nach Betriebssystem.</summary>
        <returns>Die Textdaten in der Zwischenablage oder <see cref="F:System.String.Empty" />, wenn die Zwischenablage keine Daten im <see cref="F:System.Windows.Forms.TextDataFormat.Text" />-Format oder im <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />-Format enthält, je nach Betriebssystem.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt Textdaten im <xref:System.Windows.Forms.TextDataFormat.UnicodeText> Format von [!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)] und zurück [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)] . Andernfalls gibt diese Methode Textdaten im- <xref:System.Windows.Forms.TextDataFormat.Text> Format zurück.  
  
 Verwenden Sie die- <xref:System.Windows.Forms.Clipboard.ContainsText%2A> Methode, um zu bestimmen, ob die Zwischenablage Textdaten enthält, bevor Sie mit dieser Methode abgerufen werden.  
  
 Verwenden Sie die- <xref:System.Windows.Forms.Clipboard.SetText%2A> Methode, um der Zwischenablage Textdaten hinzuzufügen.  
  
> [!NOTE]
>  Die- <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads verwendet werden, die auf den STA-Modus (Single Thread Apartment) festgelegt sind. Um diese Klasse zu verwenden, stellen Sie sicher, dass `Main` die-Methode mit dem-Attribut gekennzeichnet ist <xref:System.STAThreadAttribute> .  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Überladung der- <xref:System.Windows.Forms.Clipboard.GetText%2A> Methode veranschaulicht, die dieser Überladung ähnelt.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public static string GetText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetText (format As TextDataFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="static member GetText : System.Windows.Forms.TextDataFormat -&gt; string" Usage="System.Windows.Forms.Clipboard.GetText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format">Einer der <see cref="T:System.Windows.Forms.TextDataFormat" />-Werte.</param>
        <summary>Ruft Textdaten im vom angegebenen <see cref="T:System.Windows.Forms.TextDataFormat" />-Wert definierten Format aus der Zwischenablage ab.</summary>
        <returns>Die Textdaten in der Zwischenablage oder <see cref="F:System.String.Empty" />, wenn die Zwischenablage keine Daten im angegebenen Format enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die- <xref:System.Windows.Forms.Clipboard.ContainsText%2A> Methode, um zu bestimmen, ob die Zwischenablage Textdaten enthält, bevor Sie mit dieser Methode abgerufen werden.  
  
 Verwenden Sie die- <xref:System.Windows.Forms.Clipboard.SetText%2A> Methode, um der Zwischenablage Textdaten hinzuzufügen.  
  
> [!NOTE]
>  Die- <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads verwendet werden, die auf den STA-Modus (Single Thread Apartment) festgelegt sind. Um diese Klasse zu verwenden, stellen Sie sicher, dass `Main` die-Methode mit dem-Attribut gekennzeichnet ist <xref:System.STAThreadAttribute> .  
  
   
  
## Examples  
 Im folgenden Beispiel wird dieser Member veranschaulicht.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="format" /> ist kein gültiger <see cref="T:System.Windows.Forms.TextDataFormat" /> -Wert.</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAudio">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Löscht die Zwischenablage und fügt dann Daten im <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />-Format hinzu und ersetzt die vorhandenen Daten.</summary>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public static void SetAudio (byte[] audioBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAudio(unsigned int8[] audioBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetAudio(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAudio (audioBytes As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAudio(cli::array &lt;System::Byte&gt; ^ audioBytes);" />
      <MemberSignature Language="F#" Value="static member SetAudio : byte[] -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetAudio audioBytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBytes" Type="System.Byte[]" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="audioBytes">Ein <see cref="T:System.Byte" />-Array, das die Audiodaten enthält.</param>
        <summary>Löscht die Zwischenablage und fügt dann ein <see cref="T:System.Byte" />-Array im <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />-Format hinzu, nachdem es in einen <see cref="T:System.IO.Stream" /> konvertiert wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zum Abrufen von Audiodaten aus der Zwischenablage verwenden Sie zunächst die <xref:System.Windows.Forms.Clipboard.ContainsAudio%2A> -Methode, um zu bestimmen, ob die Zwischenablage Audiodaten enthält, bevor Sie mit der-Methode abgerufen werden <xref:System.Windows.Forms.Clipboard.GetAudioStream%2A> .  
  
> [!NOTE]
>  Die- <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads verwendet werden, die auf den STA-Modus (Single Thread Apartment) festgelegt sind. Um diese Klasse zu verwenden, stellen Sie sicher, dass `Main` die-Methode mit dem-Attribut gekennzeichnet ist <xref:System.STAThreadAttribute> .  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Überladung der- <xref:System.Windows.Forms.Clipboard.SetAudio%2A> Methode veranschaulicht, die dieser Überladung ähnelt.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="audioBytes" /> ist <see langword="null" />.</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      </Docs>
    </Member>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public static void SetAudio (System.IO.Stream audioStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAudio(class System.IO.Stream audioStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetAudio(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAudio (audioStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAudio(System::IO::Stream ^ audioStream);" />
      <MemberSignature Language="F#" Value="static member SetAudio : System.IO.Stream -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetAudio audioStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="System.IO.Stream" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="audioStream">Ein <see cref="T:System.IO.Stream" />, der die Audiodaten enthält.</param>
        <summary>Löscht die Zwischenablage und fügt dann einen <see cref="T:System.IO.Stream" /> im <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />-Format hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zum Abrufen von Audiodaten aus der Zwischenablage verwenden Sie zunächst die <xref:System.Windows.Forms.Clipboard.ContainsAudio%2A> -Methode, um zu bestimmen, ob die Zwischenablage Audiodaten enthält, bevor Sie mit der-Methode abgerufen werden <xref:System.Windows.Forms.Clipboard.GetAudioStream%2A> .  
  
> [!NOTE]
>  Die- <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads verwendet werden, die auf den STA-Modus (Single Thread Apartment) festgelegt sind. Um diese Klasse zu verwenden, stellen Sie sicher, dass `Main` die-Methode mit dem-Attribut gekennzeichnet ist <xref:System.STAThreadAttribute> .  
  
   
  
## Examples  
 Im folgenden Beispiel wird dieser Member veranschaulicht.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="audioStream" /> ist <see langword="null" />.</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public static void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="static member SetData : string * obj -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="data" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format">Das Format der festzulegenden Daten. Vordefinierte Formate finden Sie unter <see cref="T:System.Windows.Forms.DataFormats" />.</param>
        <param name="data">Ein <see cref="T:System.Object" />, das die hinzuzufügenden Daten darstellt.</param>
        <summary>Löscht die Zwischenablage und fügt dann Daten im angegebenen Format hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie das Format der Zielanwendung nicht kennen, können Sie mit dieser Methode Daten in mehreren Formaten speichern.  
  
 Daten, die mit dieser Methode gespeichert werden, können beim Abrufen in ein kompatibles Format konvertiert werden.  
  
 Zum Abrufen von Daten aus der Zwischenablage in einem bestimmten Format verwenden Sie zunächst die- <xref:System.Windows.Forms.Clipboard.ContainsData%2A> Methode, um zu bestimmen, ob die Zwischenablage Daten in diesem Format enthält, bevor Sie mit der-Methode abgerufen werden <xref:System.Windows.Forms.Clipboard.GetData%2A> .  
  
> [!NOTE]
>  Die- <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads verwendet werden, die auf den STA-Modus (Single Thread Apartment) festgelegt sind. Um diese Klasse zu verwenden, stellen Sie sicher, dass `Main` die-Methode mit dem-Attribut gekennzeichnet ist <xref:System.STAThreadAttribute> .  
  
   
  
## Examples  
 Im folgenden Beispiel wird dieser Member veranschaulicht.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.Clipboard#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="data" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetDataObject">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Löscht die Zwischenablage und fügt ihm dann Daten hinzu.</summary>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDataObject (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDataObject(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="static member SetDataObject : obj -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetDataObject data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Die in der Zwischenablage abzulegenden Daten.</param>
        <summary>Löscht die Zwischenablage und platziert dann nicht beständige Daten darin.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Daten werden aus der System Zwischenablage gelöscht, wenn die Anwendung beendet wird.  
  
 Diese Methode versucht, die Daten zehnmal in 100-Millisekunden-Intervallen festzulegen, und löst eine aus, <xref:System.Runtime.InteropServices.ExternalException> Wenn alle Versuche nicht erfolgreich sind.  
  
> [!NOTE]
>  Ein Objekt muss serialisierbar sein, damit es in die Zwischenablage eingefügt werden kann. Wenn Sie ein nicht serialisierbares Objekt an diese Methode übergeben, schlägt es fehl, ohne dass eine Ausnahme ausgelöst wird. <xref:System.Runtime.Serialization>Weitere Informationen zur Serialisierung finden Sie unter.  
>   
>  Die- <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads verwendet werden, die auf den STA-Modus (Single Thread Apartment) festgelegt sind. Um diese Klasse zu verwenden, stellen Sie sicher, dass `Main` die-Methode mit dem-Attribut gekennzeichnet ist <xref:System.STAThreadAttribute> .  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird verwendet <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> , um nicht persistente Textdaten in der Zwischenablage des Systems zu platzieren. In der `button1_Click` -Methode wird der ausgewählte Text aus `textBox1` der Zwischenablage kopiert und in die Zwischenablage eingefügt. In der `button2_Click` -Methode werden die Informationen aus der Zwischenablage abgerufen und in angezeigt `textBox2` . In diesem Code wird davon ausgegangen, dass, `button1` `button2` , `textBox1` und `textBox2` erstellt und in einem Formular abgelegt wurden.  
  
 [!code-cpp[Classic Clipboard Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Es konnten keine Daten in der Zwischenablage abgelegt werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <exception cref="T:System.ArgumentNullException">Der Wert von <paramref name="data" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </Member>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data, bool copy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data, bool copy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDataObject (data As Object, copy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDataObject(System::Object ^ data, bool copy);" />
      <MemberSignature Language="F#" Value="static member SetDataObject : obj * bool -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetDataObject (data, copy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="copy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="data">Die in der Zwischenablage abzulegenden Daten.</param>
        <param name="copy"><see langword="true" />, wenn die Daten nach dem Beenden dieser Anwendung in der Zwischenablage beibehalten werden sollen, andernfalls <see langword="false" />.</param>
        <summary>Löscht die Zwischenablage und platziert dann Daten darin und gibt an, ob die Daten nach Beenden der Anwendung in der Zwischenablage beibehalten werden sollen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der- `copy` Parameter ist `false` , werden die Daten aus der System Zwischenablage gelöscht, wenn die Anwendung beendet wird.  
  
 Diese Methode versucht, die Daten zehnmal in 100-Millisekunden-Intervallen festzulegen, und löst eine aus, <xref:System.Runtime.InteropServices.ExternalException> Wenn alle Versuche nicht erfolgreich sind.  
  
> [!NOTE]
>  Ein Objekt muss serialisierbar sein, damit es in die Zwischenablage eingefügt werden kann. Wenn Sie ein nicht serialisierbares Objekt an diese Methode übergeben, schlägt es fehl, ohne dass eine Ausnahme ausgelöst wird. <xref:System.Runtime.Serialization>Weitere Informationen zur Serialisierung finden Sie unter.  
>   
>  Die- <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads verwendet werden, die auf den STA-Modus (Single Thread Apartment) festgelegt sind. Um diese Klasse zu verwenden, stellen Sie sicher, dass `Main` die-Methode mit dem-Attribut gekennzeichnet ist <xref:System.STAThreadAttribute> .  
  
   
  
## Examples  
 Die folgende Methode wird in einer-Anwendung ausgeführt. Es wird eine persistente Kopie der ausgewählten Textdaten in das Textfeld in der System Zwischenablage eingefügt. In diesem Code `button1` wird davon ausgegangen, dass, `textBox1` und `textBox2` erstellt und in einem Formular abgelegt wurden.  
  
 [!code-cpp[Classic Clipboard.SetDataObject1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard.SetDataObject1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard.SetDataObject1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/VB/source.vb#1)]  
  
 In einer anderen Anwendung ruft die folgende Methode den Text aus der Zwischenablage des Systems ab und fügt den Text in ein `textBox2` . Dieser Code geht davon aus, dass er `button2` `textBox2` erstellt und in einem Formular abgelegt wurde.  
  
 [!code-cpp[Classic Clipboard.SetDataObject1 Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Clipboard.SetDataObject1 Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CS/source.cs#2)]
 [!code-vb[Classic Clipboard.SetDataObject1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Es konnten keine Daten in der Zwischenablage abgelegt werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <exception cref="T:System.ArgumentNullException">Der Wert von <paramref name="data" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </Member>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data, bool copy, int retryTimes, int retryDelay);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data, bool copy, int32 retryTimes, int32 retryDelay) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDataObject (data As Object, copy As Boolean, retryTimes As Integer, retryDelay As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDataObject(System::Object ^ data, bool copy, int retryTimes, int retryDelay);" />
      <MemberSignature Language="F#" Value="static member SetDataObject : obj * bool * int * int -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetDataObject (data, copy, retryTimes, retryDelay)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="copy" Type="System.Boolean" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="retryTimes" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="retryDelay" Type="System.Int32" Index="3" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="data">Die in der Zwischenablage abzulegenden Daten.</param>
        <param name="copy"><see langword="true" />, wenn die Daten nach dem Beenden dieser Anwendung in der Zwischenablage beibehalten werden sollen, andernfalls <see langword="false" />.</param>
        <param name="retryTimes">Die Häufigkeit, mit der versucht wird, die Daten in der Zwischenablage abzulegen.</param>
        <param name="retryDelay">Die Dauer in Millisekunden, die zwischen den Versuchen gewartet wird.</param>
        <summary>Löscht die Zwischenablage und versucht dann, die Daten in der angegebenen Häufigkeit und mit dem angegebenen zeitlichen Abstand zwischen den Versuchen abzulegen. Die Daten werden dabei optional nach dem Beenden der Anwendung in der Zwischenablage belassen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Hinzufügen von Daten zur Zwischenablage schlägt gelegentlich fehl, wenn die Zwischenablage mit einem anderen Thread oder einer anderen Anwendung ausgelastet ist. Diese Methode ist hilfreich, um dieses Problem in Umgebungen mit starker Zwischenablage zu umgehen.  
  
 Wenn der- `copy` Parameter ist `false` , werden die Daten aus der System Zwischenablage gelöscht, wenn die Anwendung beendet wird.  
  
> [!NOTE]
>  Ein Objekt muss serialisierbar sein, damit es in die Zwischenablage eingefügt werden kann. Wenn Sie ein nicht serialisierbares Objekt an diese Methode übergeben, schlägt es fehl, ohne dass eine Ausnahme ausgelöst wird. <xref:System.Runtime.Serialization>Weitere Informationen zur Serialisierung finden Sie unter.  
>   
>  Die- <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads verwendet werden, die auf den STA-Modus (Single Thread Apartment) festgelegt sind. Um diese Klasse zu verwenden, stellen Sie sicher, dass `Main` die-Methode mit dem-Attribut gekennzeichnet ist <xref:System.STAThreadAttribute> .  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="data" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="retryTimes" /> ist kleiner als Null.  
  
- oder - 
 <paramref name="retryDelay" /> ist kleiner als Null.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Es konnten keine Daten in der Zwischenablage abgelegt werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </Member>
    <Member MemberName="SetFileDropList">
      <MemberSignature Language="C#" Value="public static void SetFileDropList (System.Collections.Specialized.StringCollection filePaths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFileDropList(class System.Collections.Specialized.StringCollection filePaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFileDropList (filePaths As StringCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFileDropList(System::Collections::Specialized::StringCollection ^ filePaths);" />
      <MemberSignature Language="F#" Value="static member SetFileDropList : System.Collections.Specialized.StringCollection -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetFileDropList filePaths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePaths" Type="System.Collections.Specialized.StringCollection" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="filePaths">Eine <see cref="T:System.Collections.Specialized.StringCollection" />, die die Dateinamen enthält.</param>
        <summary>Löscht die Zwischenablage und fügt dann im <see cref="F:System.Windows.Forms.DataFormats.FileDrop" />-Format eine Auflistung von Dateinamen hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Datei Ablage Liste ist eine Auflistung von Zeichen folgen, die Pfadinformationen für Dateien enthalten.  
  
 Eine Datei Ablage Liste wird als-Array in der Zwischenablage gespeichert <xref:System.String> . Diese Methode wird `filePaths` in ein-Array konvertiert, <xref:System.String> bevor Sie der Zwischenablage hinzugefügt wird.  
  
 Zum Abrufen einer Datei Ablage Liste aus der Zwischenablage verwenden Sie zunächst die- <xref:System.Windows.Forms.Clipboard.ContainsFileDropList%2A> Methode, um zu bestimmen, ob die Zwischenablage Daten in diesem Format enthält, bevor Sie mit der-Methode abgerufen werden <xref:System.Windows.Forms.Clipboard.GetFileDropList%2A> .  
  
> [!NOTE]
>  Die- <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads verwendet werden, die auf den STA-Modus (Single Thread Apartment) festgelegt sind. Um diese Klasse zu verwenden, stellen Sie sicher, dass `Main` die-Methode mit dem-Attribut gekennzeichnet ist <xref:System.STAThreadAttribute> .  
  
   
  
## Examples  
 Im folgenden Beispiel wird dieser Member veranschaulicht.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.Clipboard#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="filePaths" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="filePaths" /> enthält keine Zeichenfolgen.  
  
- oder - 
Mindestens eine der Zeichenfolgen in <paramref name="filePaths" /> ist <see cref="F:System.String.Empty" />, enthält nur Leerraum, enthält ein oder mehrere ungültige Zeichen wie in <see cref="F:System.IO.Path.InvalidPathChars" /> definiert, ist <see langword="null" />, enthält einen Doppelpunkt (:) oder überschreitet die systemdefinierte maximale Länge.  
  
Weitere Informationen finden Sie unter der <see cref="P:System.Exception.InnerException" />-Eigenschaft der <see cref="T:System.ArgumentException" />.</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetFileDropList" />
      </Docs>
    </Member>
    <Member MemberName="SetImage">
      <MemberSignature Language="C#" Value="public static void SetImage (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetImage(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetImage (image As Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetImage(System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="static member SetImage : System.Drawing.Image -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetImage image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="image">Das <see cref="T:System.Drawing.Image" />, das der Zwischenablage hinzugefügt werden soll.</param>
        <summary>Löscht die Zwischenablage und fügt dann ein <see cref="T:System.Drawing.Image" /> im <see cref="F:System.Windows.Forms.DataFormats.Bitmap" />-Format hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zum Abrufen von Bilddaten aus der Zwischenablage verwenden Sie zunächst die- <xref:System.Windows.Forms.Clipboard.ContainsImage%2A> Methode, um zu bestimmen, ob die Zwischenablage Bilddaten enthält, bevor Sie mit der-Methode abgerufen werden <xref:System.Windows.Forms.Clipboard.GetImage%2A> .  
  
> [!NOTE]
>  Die- <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads verwendet werden, die auf den STA-Modus (Single Thread Apartment) festgelegt sind. Um diese Klasse zu verwenden, stellen Sie sicher, dass `Main` die-Methode mit dem-Attribut gekennzeichnet ist <xref:System.STAThreadAttribute> .  
  
   
  
## Examples  
 Im folgenden Beispiel wird dieser Member veranschaulicht.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.Clipboard#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="image" /> ist <see langword="null" />.</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetImage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Löscht die Zwischenablage und fügt ihm dann Textdaten hinzu.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public static void SetText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member SetText : string -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">Der Text, der der Zwischenablage hinzugefügt werden soll.</param>
        <summary>Löscht die Zwischenablage und fügt dann im <see cref="F:System.Windows.Forms.TextDataFormat.Text" />-Format oder <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />-Format Textdaten hinzu, je nach Betriebssystem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode fügt Textdaten im <xref:System.Windows.Forms.TextDataFormat.UnicodeText> -Format für [!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)] und hinzu [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)] . Andernfalls fügt diese Methode Textdaten im- <xref:System.Windows.Forms.TextDataFormat.Text> Format hinzu.  
  
 Zum Abrufen von Textdaten aus der Zwischenablage verwenden Sie zunächst die- <xref:System.Windows.Forms.Clipboard.ContainsText%2A> Methode, um zu bestimmen, ob die Zwischenablage Textdaten enthält, bevor Sie mit der-Methode abgerufen werden <xref:System.Windows.Forms.Clipboard.GetText%2A> .  
  
> [!NOTE]
>  Die- <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads verwendet werden, die auf den STA-Modus (Single Thread Apartment) festgelegt sind. Um diese Klasse zu verwenden, stellen Sie sicher, dass `Main` die-Methode mit dem-Attribut gekennzeichnet ist <xref:System.STAThreadAttribute> .  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Überladung der- <xref:System.Windows.Forms.Clipboard.SetText%2A> Methode veranschaulicht, die dieser Überladung ähnelt.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="text" /> ist <see langword="null" /> oder <see cref="F:System.String.Empty" />.</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public static void SetText (string text, System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetText(string text, valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetText(System.String,System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetText (text As String, format As TextDataFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetText(System::String ^ text, System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="static member SetText : string * System.Windows.Forms.TextDataFormat -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetText (text, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">Der Text, der der Zwischenablage hinzugefügt werden soll.</param>
        <param name="format">Einer der <see cref="T:System.Windows.Forms.TextDataFormat" />-Werte.</param>
        <summary>Löscht die Zwischenablage und fügt dann Textdaten im Format hinzu, das vom angegebenen <see cref="T:System.Windows.Forms.TextDataFormat" />-Wert definiert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zum Abrufen von Textdaten aus der Zwischenablage verwenden Sie zunächst die- <xref:System.Windows.Forms.Clipboard.ContainsText%2A> Methode, um zu bestimmen, ob die Zwischenablage Textdaten enthält, bevor Sie mit der-Methode abgerufen werden <xref:System.Windows.Forms.Clipboard.GetText%2A> .  
  
> [!NOTE]
>  Die- <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads verwendet werden, die auf den STA-Modus (Single Thread Apartment) festgelegt sind. Um diese Klasse zu verwenden, stellen Sie sicher, dass `Main` die-Methode mit dem-Attribut gekennzeichnet ist <xref:System.STAThreadAttribute> .  
  
   
  
## Examples  
 Im folgenden Beispiel wird dieser Member veranschaulicht.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="text" /> ist <see langword="null" /> oder <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="format" /> ist kein gültiger <see cref="T:System.Windows.Forms.TextDataFormat" /> -Wert.</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
      </Docs>
    </Member>
  </Members>
</Type>
