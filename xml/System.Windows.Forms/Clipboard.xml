<Type Name="Clipboard" FullName="System.Windows.Forms.Clipboard">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9a0253ce7e086b0c41b9f6d80a5019b00fa3afc0" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51919595" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Clipboard" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Clipboard extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Clipboard" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Clipboard" />
  <TypeSignature Language="C++ CLI" Value="public ref class Clipboard sealed" />
  <TypeSignature Language="F#" Value="type Clipboard = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Methoden bereit, mit denen Daten in der Zwischenablage des Systems abgelegt bzw. aus dieser abgerufen werden. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Liste der vordefinierten Formate für die Verwendung mit der <xref:System.Windows.Forms.Clipboard> Klasse, finden Sie unter den <xref:System.Windows.Forms.DataFormats> Klasse.  
  
 Rufen Sie <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> zum Einfügen von Daten in die Zwischenablage, und Ersetzen Sie dabei den aktuellen Inhalt. Um eine dauerhafte Kopie der Daten in der Zwischenablage abzulegen, legen die `copy` Parameter `true`.  
  
> [!NOTE]
>  Um Daten in der Zwischenablage in verschiedenen Formaten zu speichern, verwenden Sie die <xref:System.Windows.Forms.DataObject> Klasse oder ein <xref:System.Windows.Forms.IDataObject> Implementierung. Hinzufügen von Daten in der Zwischenablage in verschiedenen Formaten, die Möglichkeit zu maximieren, dass eine Zielanwendung, deren formatanforderungen, die Sie nicht wissen können, die Daten erfolgreich abgerufen werden.  
  
 Rufen Sie <xref:System.Windows.Forms.Clipboard.GetDataObject%2A> zum Abrufen von Daten aus der Zwischenablage. Die Daten werden zurückgegeben, als ein Objekt, implementiert die <xref:System.Windows.Forms.IDataObject> Schnittstelle. Verwenden Sie die Methoden, die anhand des <xref:System.Windows.Forms.IDataObject> und Feldern in <xref:System.Windows.Forms.DataFormats> zum Extrahieren der Daten aus dem Objekt. Wenn Sie nicht kennen, das Format der Daten Sie abgerufen haben, rufen Sie die <xref:System.Windows.Forms.IDataObject.GetFormats%2A> -Methode der der <xref:System.Windows.Forms.IDataObject> Schnittstelle zum Abrufen von Daten in einer Liste aller Formate befindet sich in. Rufen Sie dann die <xref:System.Windows.Forms.IDataObject.GetData%2A> Methode der <xref:System.Windows.Forms.IDataObject> Schnittstelle, und geben Sie ein Format, das Ihre Anwendung verwenden können.  
  
 In [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], <xref:System.Windows.Forms.Clipboard> -Klasse stellt zusätzliche Methoden, die Arbeit mit der Zwischenablage des Systems erleichtern. Rufen Sie die <xref:System.Windows.Forms.Clipboard.Clear%2A> Methode, um alle Daten aus der Zwischenablage entfernen. Um Daten eines bestimmten Formats in die Zwischenablage hinzuzufügen, und Ersetzen Sie dabei die vorhandenen Daten anzuzeigen, rufen Sie die entsprechende `Set` *Format* -Methode, wie z. B. <xref:System.Windows.Forms.Clipboard.SetText%2A>, oder rufen Sie die <xref:System.Windows.Forms.Clipboard.SetData%2A> Methode zum Angeben des Formats. Um Daten von einem bestimmten Format aus der Zwischenablage abzurufen, rufen Sie zuerst die entsprechende `Contains` *Format* Methode (z. B. <xref:System.Windows.Forms.Clipboard.ContainsText%2A>) Methode zu bestimmen, ob die Zwischenablage Daten im enthält, die formatiert werden soll, und rufen dann die entsprechende `Get` *Format* Methode (z. B. <xref:System.Windows.Forms.Clipboard.GetText%2A>) zum Abrufen der Daten, wenn die Zwischenablage, die es enthält. Rufen Sie zum Angeben des Formats bei diesen Vorgängen die <xref:System.Windows.Forms.Clipboard.ContainsData%2A> und <xref:System.Windows.Forms.Clipboard.GetData%2A> Methoden stattdessen.  
  
> [!NOTE]
>  Alle Windows-basierten Anwendungen freigeben die Systemzwischenablage, damit der Inhalt vorbehalten ist, wenn Sie in einer anderen Anwendung wechseln.  
>   
>  Ein Objekt müssen Sie in der Zwischenablage abgelegt werden serialisierbar sein. Wenn Sie ein nicht serialisierbares Objekt an eine Zwischenablage-Methode übergeben, wird die Methode fehlschlagen, ohne eine Ausnahme auszulösen. Finden Sie unter <xref:System.Runtime.Serialization> für Weitere Informationen zur Serialisierung. Wenn Ihre Anwendung ein sehr spezifischen Format erforderlich ist, können die Header hinzugefügt, die Daten in den Serialisierungsprozess zu verhindern, dass die Anwendung über Ihre Daten zu erkennen. Um Ihrem Datenformat zu erhalten, fügen Sie Ihre Daten als eine <xref:System.Byte> array an eine <xref:System.IO.MemoryStream> und übergeben Sie die <xref:System.IO.MemoryStream> auf die <xref:System.Windows.Forms.DataObject.SetData%2A> Methode.  
>   
>  Die <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads auf Singlethread-Apartment (STA) Modus verwendet werden. Um diese Klasse verwenden zu können, stellen sicher, dass Ihre `Main` Methode ist mit markiert die <xref:System.STAThreadAttribute> Attribut.  
>   
>  Besondere Überlegungen können erforderlich sein, wenn Sie das Metadateiformat von mit der Zwischenablage zu verwenden. Aufgrund einer Einschränkung in der aktuellen Implementierung von der <xref:System.Windows.Forms.DataObject> das Metadateiformat von verwendet werden, die von .NET Framework-Klasse kann von Anwendungen, die ein älteren Metafile-Format verwenden nicht erkannt werden. In diesem Fall müssen Sie mit der Win32-Zwischenablage-Anwendungsprogrammierschnittstellen (APIs) zusammenarbeiten. Weitere Informationen finden Sie im Artikel 323530, "Metadateien für Zwischenablage sind nicht sichtbar für alle Anwendungen," in der Microsoft Knowledge Base unter http://support.microsoft.com.  
  
   
  
## Examples  
 Das folgende Codebeispiel verwendet <xref:System.Windows.Forms.Clipboard> Methoden, um Daten in und aus der Zwischenablage des Systems abrufen. Dieser Code setzt voraus `button1`, `button2`, `textBox1`, und `textBox2` erstellt und auf dem Formular platziert wurden.  
  
 Die `button1_Click` Methodenaufrufe <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> markierten Text aus dem Textfeld und platzieren Sie es in der Systemzwischenablage.  
  
 Die `button2_Click` Methodenaufrufe <xref:System.Windows.Forms.Clipboard.GetDataObject%2A> zum Abrufen von Daten aus der Zwischenablage des Systems. Der Code verwendet <xref:System.Windows.Forms.IDataObject> und <xref:System.Windows.Forms.DataFormats> um die zurückgegebenen Daten zu extrahieren und zeigt die Daten in `textBox2`.  
  
 [!code-cpp[Classic Clipboard Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataObject" />
    <altmember cref="T:System.Windows.Forms.DataFormats" />
    <altmember cref="T:System.Windows.Forms.IDataObject" />
    <related type="Article" href="https://msdn.microsoft.com/library/15abda8b-0527-47c7-aedb-77ab595f2bf1">Weitere Überlegungen zur Sicherheit in Windows Forms</related>
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public static void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Clear();" />
      <MemberSignature Language="F#" Value="static member Clear : unit -&gt; unit" Usage="System.Windows.Forms.Clipboard.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt alle Daten aus der Zwischenablage.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da die Zwischenablage von mehreren Prozessen gemeinsam genutzt wird, kann das Aufrufen dieser Methode für diese Prozesse auswirken.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads auf Singlethread-Apartment (STA) Modus verwendet werden. Um diese Klasse verwenden zu können, stellen sicher, dass Ihre `Main` Methode ist mit markiert die <xref:System.STAThreadAttribute> Attribut.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt dieses Members.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Clipboard#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">zum Löschen der Zwischenablage des Systems an. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ContainsAudio">
      <MemberSignature Language="C#" Value="public static bool ContainsAudio ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsAudio() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsAudio" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsAudio () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsAudio();" />
      <MemberSignature Language="F#" Value="static member ContainsAudio : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsAudio " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt an, ob in der Zwischenablage Daten im <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />-Format vorhanden sind.</summary>
        <returns>
          <see langword="true" />, wenn Audiodaten in der Zwischenablage gespeichert sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um festzustellen, ob die Zwischenablage Audiodaten enthält, bevor Sie es mit Abrufen der <xref:System.Windows.Forms.Clipboard.GetAudioStream%2A> Methode.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads auf Singlethread-Apartment (STA) Modus verwendet werden. Um diese Klasse verwenden zu können, stellen sicher, dass Ihre `Main` Methode ist mit markiert die <xref:System.STAThreadAttribute> Attribut.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung des neuen Elements.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">für den Zugriff auf die Zwischenablage des Systems. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetAudio" />
      </Docs>
    </Member>
    <Member MemberName="ContainsData">
      <MemberSignature Language="C#" Value="public static bool ContainsData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsData (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member ContainsData : string -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Das Format der zu suchenden Daten. Vordefinierte Formate finden Sie unter <see cref="T:System.Windows.Forms.DataFormats" />.</param>
        <summary>Gibt an, ob sich in der Zwischenablage Daten befinden, die dem angegebenen Format entsprechen oder in dieses konvertiert werden können.</summary>
        <returns>
          <see langword="true" />, wenn in der Zwischenablage Daten im angegebenen <paramref name="format" /> oder Daten vorhanden sind, die in dieses Format konvertiert werden können. Andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataFormats> -Klasse enthält vordefinierte Formatnamen, die Sie mit dieser Methode verwenden können.  
  
 Verwenden Sie diese Methode, um festzustellen, ob die Zwischenablage Daten im angegebenen Format oder ein kompatibles Format enthält, bevor Sie es mit Abrufen der <xref:System.Windows.Forms.Clipboard.GetData%2A> Methode.  
  
> [!NOTE]
>  Daten können in ein anderes Format konvertiert werden, wenn es gespeichert wurde, gibt an, dass die Konvertierung zulässig ist, und das angeforderte Format mit dem gespeicherten Format kompatibel ist. Z. B. Daten gespeichert werden, wenn Unicode in Text konvertiert werden kann.  
>   
>  Die <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads auf Singlethread-Apartment (STA) Modus verwendet werden. Um diese Klasse verwenden zu können, stellen sicher, dass Ihre `Main` Methode ist mit markiert die <xref:System.STAThreadAttribute> Attribut.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt dieses Members.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.Clipboard#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">für den Zugriff auf die Zwischenablage des Systems. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsFileDropList">
      <MemberSignature Language="C#" Value="public static bool ContainsFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsFileDropList () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsFileDropList();" />
      <MemberSignature Language="F#" Value="static member ContainsFileDropList : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt an, ob sich in der Zwischenablage Daten im <see cref="F:System.Windows.Forms.DataFormats.FileDrop" />-Format oder Daten befinden, die in dieses Format konvertiert werden können.</summary>
        <returns>
          <see langword="true" />, wenn eine Dateiablageliste in der Zwischenablage vorhanden ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Dateiablageliste ist eine Auflistung von Zeichenfolgen, die Pfadinformationen für die Dateien enthält.  
  
 Verwenden Sie diese Methode, um festzustellen, ob die Zwischenablage eine Dateiablageliste enthält, bevor Sie es mit Abrufen der <xref:System.Windows.Forms.Clipboard.GetFileDropList%2A> Methode.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads auf Singlethread-Apartment (STA) Modus verwendet werden. Um diese Klasse verwenden zu können, stellen sicher, dass Ihre `Main` Methode ist mit markiert die <xref:System.STAThreadAttribute> Attribut.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt dieses Members.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.Clipboard#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">für den Zugriff auf die Zwischenablage des Systems. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetFileDropList" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsImage">
      <MemberSignature Language="C#" Value="public static bool ContainsImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsImage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsImage () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsImage();" />
      <MemberSignature Language="F#" Value="static member ContainsImage : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt an, ob sich in der Zwischenablage Daten im <see cref="F:System.Windows.Forms.DataFormats.Bitmap" />-Format oder Daten befinden, die in dieses Format konvertiert werden können.</summary>
        <returns>
          <see langword="true" />, wenn Bilddaten in der Zwischenablage gespeichert sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um festzustellen, ob die Zwischenablage Bilddaten enthält, bevor Sie es mit Abrufen der <xref:System.Windows.Forms.Clipboard.GetImage%2A> Methode.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads auf Singlethread-Apartment (STA) Modus verwendet werden. Um diese Klasse verwenden zu können, stellen sicher, dass Ihre `Main` Methode ist mit markiert die <xref:System.STAThreadAttribute> Attribut.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt dieses Members.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.Clipboard#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">für den Zugriff auf die Zwischenablage des Systems. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetImage" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ContainsText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt an, ob die Zwischenablage Textdaten enthält.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public static bool ContainsText ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsText" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsText () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsText();" />
      <MemberSignature Language="F#" Value="static member ContainsText : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt an, ob die Zwischenablage Daten im <see cref="F:System.Windows.Forms.TextDataFormat.Text" />-Format oder <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />-Format enthält, je nach Betriebssystem.</summary>
        <returns>
          <see langword="true" />, wenn Textdaten in der Zwischenablage gespeichert sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode überprüft das Vorhandensein von Daten in die <xref:System.Windows.Forms.TextDataFormat.UnicodeText> formatieren [!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)] und [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]. Hingegen diese Methode überprüft das Vorhandensein von Daten in die <xref:System.Windows.Forms.TextDataFormat.Text> Format.  
  
 Verwenden Sie diese Methode, um zu bestimmen, ob die Zwischenablage Textdaten enthält, bevor Sie es mit Abrufen der <xref:System.Windows.Forms.Clipboard.GetText%2A> Methode.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads auf Singlethread-Apartment (STA) Modus verwendet werden. Um diese Klasse verwenden zu können, stellen sicher, dass Ihre `Main` Methode ist mit markiert die <xref:System.STAThreadAttribute> Attribut.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt eine Überladung von der <xref:System.Windows.Forms.Clipboard.ContainsText%2A> -Methode, die für diese Überladung ähnlich ist.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">für den Zugriff auf die Zwischenablage des Systems. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="F:System.Windows.Forms.TextDataFormat.Text" />
        <altmember cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public static bool ContainsText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsText (format As TextDataFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="static member ContainsText : System.Windows.Forms.TextDataFormat -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">Einer der <see cref="T:System.Windows.Forms.TextDataFormat" />-Werte.</param>
        <summary>Gibt an, ob die Zwischenablage Textdaten im vom angegebenen <see cref="T:System.Windows.Forms.TextDataFormat" />-Wert definierten Format enthält.</summary>
        <returns>
          <see langword="true" />, wenn in der Zwischenablage Textdaten mit dem für <paramref name="format" /> angegebenen Wert vorhanden sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um zu bestimmen, ob die Zwischenablage Textdaten enthält, bevor Sie es mit Abrufen der <xref:System.Windows.Forms.Clipboard.GetText%2A> Methode.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads auf Singlethread-Apartment (STA) Modus verwendet werden. Um diese Klasse verwenden zu können, stellen sicher, dass Ihre `Main` Methode ist mit markiert die <xref:System.STAThreadAttribute> Attribut.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt dieses Members.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" /> ist kein gültiger <see cref="T:System.Windows.Forms.TextDataFormat" />-Wert.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">für den Zugriff auf die Zwischenablage des Systems. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetAudioStream">
      <MemberSignature Language="C#" Value="public static System.IO.Stream GetAudioStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream GetAudioStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAudioStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ GetAudioStream();" />
      <MemberSignature Language="F#" Value="static member GetAudioStream : unit -&gt; System.IO.Stream" Usage="System.Windows.Forms.Clipboard.GetAudioStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft einen Audiostream aus der Zwischenablage ab.</summary>
        <returns>Ein <see cref="T:System.IO.Stream" /> mit Audiodaten oder <see langword="null" />, wenn die Zwischenablage keine Daten im <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />-Format enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Windows.Forms.Clipboard.ContainsAudio%2A> Methode, um zu bestimmen, ob die Zwischenablage Audiodaten enthält, bevor Sie sie mit dieser Methode abrufen.  
  
 Verwenden der <xref:System.Windows.Forms.Clipboard.SetAudio%2A> Methode, um Audiodaten in die Zwischenablage hinzuzufügen.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads auf Singlethread-Apartment (STA) Modus verwendet werden. Um diese Klasse verwenden zu können, stellen sicher, dass Ihre `Main` Methode ist mit markiert die <xref:System.STAThreadAttribute> Attribut.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt dieses Members.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">für den Zugriff auf die Zwischenablage des Systems. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetAudio" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public static object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member GetData : string -&gt; obj" Usage="System.Windows.Forms.Clipboard.GetData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Das Format der abzurufenden Daten. Vordefinierte Formate finden Sie unter <see cref="T:System.Windows.Forms.DataFormats" />.</param>
        <summary>Ruft Daten im angegebenen Format aus der Zwischenablage ab.</summary>
        <returns>Ein <see cref="T:System.Object" />, das die Daten in der Zwischenablage darstellt, oder <see langword="null" />, wenn die Zwischenablage keine Daten im angegebenen <paramref name="format" /> oder keine Daten enthält, die in dieses Format konvertiert werden können.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Windows.Forms.Clipboard.ContainsData%2A> Methode, um zu bestimmen, ob die Zwischenablage Daten im angegebenen Format oder ein kompatibles Format enthält, bevor Sie sie mit dieser Methode abrufen.  
  
 Wenn diese Methode die Daten im angegebenen Format nicht finden kann, versucht es, die Daten in das Format zu konvertieren. Wenn die Daten in das angegebene Format konvertiert werden können, oder, wenn die Daten gespeichert wurde, festgelegt auf `false`, gibt diese Methode `null`.  
  
> [!NOTE]
>  Daten können in ein anderes Format konvertiert werden, wenn es gespeichert wurde, gibt an, dass die Konvertierung zulässig ist, und das angeforderte Format mit dem gespeicherten Format kompatibel ist. Z. B. Daten gespeichert werden, wenn Unicode in Text konvertiert werden kann.  
>   
>  Die <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads auf Singlethread-Apartment (STA) Modus verwendet werden. Um diese Klasse verwenden zu können, stellen sicher, dass Ihre `Main` Methode ist mit markiert die <xref:System.STAThreadAttribute> Attribut.  
  
 Verwenden der <xref:System.Windows.Forms.Clipboard.SetData%2A> Methode zum Hinzufügen von Daten in die Zwischenablage in einem bestimmten Format.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt dieses Members.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.Clipboard#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">für den Zugriff auf die Zwischenablage des Systems. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataObject">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.IDataObject GetDataObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.IDataObject GetDataObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetDataObject" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataObject () As IDataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::IDataObject ^ GetDataObject();" />
      <MemberSignature Language="F#" Value="static member GetDataObject : unit -&gt; System.Windows.Forms.IDataObject" Usage="System.Windows.Forms.Clipboard.GetDataObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IDataObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die Daten ab, die sich gegenwärtig in der Zwischenablage des Systems befinden.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.IDataObject" />, das die aktuell in der Zwischenablage vorhandenen Daten darstellt, oder <see langword="null" />, wenn sich keine Daten in der Zwischenablage befinden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da der Datentyp des Objekts zurückgegeben wird, aus der Zwischenablage variieren kann, gibt diese Methode die Daten in eine <xref:System.Windows.Forms.IDataObject>. Anschließend können Sie Methoden der <xref:System.Windows.Forms.IDataObject> Schnittstelle zum Extrahieren der Daten in den richtigen Datentyp.  
  
 Diese Methode versucht, die zum Abrufen der Daten zehnmal in Intervallen von 100 Millisekunden und löst eine <xref:System.Runtime.InteropServices.ExternalException> , wenn alle Versuche nicht erfolgreich sind.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads auf Singlethread-Apartment (STA) Modus verwendet werden. Um diese Klasse verwenden zu können, stellen sicher, dass Ihre `Main` Methode ist mit markiert die <xref:System.STAThreadAttribute> Attribut.  
  
   
  
## Examples  
 Das folgende Codebeispiel verwendet <xref:System.Windows.Forms.Clipboard> Methoden, um Daten in und aus der Zwischenablage des Systems abrufen. Dieser Code setzt voraus `button1`, `button2`, `textBox1`, und `textBox2` auf dem Formular platziert wurden.  
  
 Die `button1_Click` Methodenaufrufe <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> markierten Text aus dem Textfeld und platzieren Sie es in der Systemzwischenablage.  
  
 Die `button2_Click` Methodenaufrufe <xref:System.Windows.Forms.Clipboard.GetDataObject%2A> zum Abrufen von Daten aus der Zwischenablage des Systems. Der Code verwendet <xref:System.Windows.Forms.IDataObject> und <xref:System.Windows.Forms.DataFormats> um die zurückgegebenen Daten zu extrahieren. Die Daten werden angezeigt, `textBox2`.  
  
 [!code-cpp[Classic Clipboard Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Es konnten keine Daten aus der Zwischenablage abgerufen werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment), und der <see cref="P:System.Windows.Forms.Application.MessageLoop" />-Eigenschaftswert lautet <see langword="true" />. Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">für den Zugriff auf die Zwischenablage des Systems. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object)" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="GetFileDropList">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.StringCollection GetFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Specialized.StringCollection GetFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileDropList () As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Specialized::StringCollection ^ GetFileDropList();" />
      <MemberSignature Language="F#" Value="static member GetFileDropList : unit -&gt; System.Collections.Specialized.StringCollection" Usage="System.Windows.Forms.Clipboard.GetFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft eine Auflistung von Dateinamen aus der Zwischenablage ab.</summary>
        <returns>Eine <see cref="T:System.Collections.Specialized.StringCollection" /> mit Dateinamen oder <see langword="null" />, wenn die Zwischenablage keine Daten im <see cref="F:System.Windows.Forms.DataFormats.FileDrop" />-Format oder Daten enthält, die in dieses Format konvertiert werden können.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Dateiablageliste ist eine Auflistung von Zeichenfolgen, die Pfadinformationen für die Dateien enthält.  
  
 Befindet sich eine Dateiablageliste in der Zwischenablage als eine <xref:System.String> Array. Diese Methode konvertiert das Array in eine <xref:System.Collections.Specialized.StringCollection> und gibt die Auflistung zurück.  
  
 Verwenden der <xref:System.Windows.Forms.Clipboard.ContainsFileDropList%2A> Methode, um zu bestimmen, ob die Zwischenablage eine Dateiablageliste enthält, bevor Sie sie mit dieser Methode abrufen.  
  
 Verwenden der <xref:System.Windows.Forms.Clipboard.SetFileDropList%2A> Methode, um eine Dateiablageliste in die Zwischenablage hinzuzufügen.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads auf Singlethread-Apartment (STA) Modus verwendet werden. Um diese Klasse verwenden zu können, stellen sicher, dass Ihre `Main` Methode ist mit markiert die <xref:System.STAThreadAttribute> Attribut.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt dieses Members.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.Clipboard#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">für den Zugriff auf die Zwischenablage des Systems. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Collections.Specialized.StringCollection" />
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image GetImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Image GetImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetImage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetImage () As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ GetImage();" />
      <MemberSignature Language="F#" Value="static member GetImage : unit -&gt; System.Drawing.Image" Usage="System.Windows.Forms.Clipboard.GetImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft ein Bild aus der Zwischenablage ab.</summary>
        <returns>Ein <see cref="T:System.Drawing.Image" />, das die Bilddaten in der Zwischenablage darstellt, oder <see langword="null" />, wenn die Zwischenablage keine Daten im <see cref="F:System.Windows.Forms.DataFormats.Bitmap" />-Format oder keine Daten enthält, die in dieses Format konvertiert werden können.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Windows.Forms.Clipboard.ContainsImage%2A> Methode, um zu bestimmen, ob die Zwischenablage Bilddaten enthält, bevor Sie sie mit dieser Methode abrufen.  
  
 Verwenden der <xref:System.Windows.Forms.Clipboard.SetImage%2A> Methode zum Hinzufügen von imagedaten in die Zwischenablage.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads auf Singlethread-Apartment (STA) Modus verwendet werden. Um diese Klasse verwenden zu können, stellen sicher, dass Ihre `Main` Methode ist mit markiert die <xref:System.STAThreadAttribute> Attribut.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt dieses Members.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.Clipboard#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">für den Zugriff auf die Zwischenablage des Systems. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft Textdaten aus der Zwischenablage ab.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public static string GetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetText" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetText();" />
      <MemberSignature Language="F#" Value="static member GetText : unit -&gt; string" Usage="System.Windows.Forms.Clipboard.GetText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft Textdaten im <see cref="F:System.Windows.Forms.TextDataFormat.Text" />-Format oder im <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />-Format aus der Zwischenablage ab, je nach Betriebssystem.</summary>
        <returns>Die Textdaten in der Zwischenablage oder <see cref="F:System.String.Empty" />, wenn die Zwischenablage keine Daten im <see cref="F:System.Windows.Forms.TextDataFormat.Text" />-Format oder im <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />-Format enthält, je nach Betriebssystem.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt zurück, die Textdaten in der <xref:System.Windows.Forms.TextDataFormat.UnicodeText> formatieren [!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)] und [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]. Andernfalls gibt diese Methode Textdaten in der <xref:System.Windows.Forms.TextDataFormat.Text> Format.  
  
 Verwenden der <xref:System.Windows.Forms.Clipboard.ContainsText%2A> Methode, um zu bestimmen, ob die Zwischenablage Textdaten enthält, bevor Sie sie mit dieser Methode abrufen.  
  
 Verwenden der <xref:System.Windows.Forms.Clipboard.SetText%2A> Methode zum Hinzufügen von Textdaten in die Zwischenablage.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads auf Singlethread-Apartment (STA) Modus verwendet werden. Um diese Klasse verwenden zu können, stellen sicher, dass Ihre `Main` Methode ist mit markiert die <xref:System.STAThreadAttribute> Attribut.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt eine Überladung von der <xref:System.Windows.Forms.Clipboard.GetText%2A> -Methode, die für diese Überladung ähnlich ist.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">für den Zugriff auf die Zwischenablage des Systems. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public static string GetText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetText (format As TextDataFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="static member GetText : System.Windows.Forms.TextDataFormat -&gt; string" Usage="System.Windows.Forms.Clipboard.GetText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">Einer der <see cref="T:System.Windows.Forms.TextDataFormat" />-Werte.</param>
        <summary>Ruft Textdaten im vom angegebenen <see cref="T:System.Windows.Forms.TextDataFormat" />-Wert definierten Format aus der Zwischenablage ab.</summary>
        <returns>Die Textdaten in der Zwischenablage oder <see cref="F:System.String.Empty" />, wenn die Zwischenablage keine Daten im angegebenen Format enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Windows.Forms.Clipboard.ContainsText%2A> Methode, um zu bestimmen, ob die Zwischenablage Textdaten enthält, bevor Sie sie mit dieser Methode abrufen.  
  
 Verwenden der <xref:System.Windows.Forms.Clipboard.SetText%2A> Methode zum Hinzufügen von Textdaten in die Zwischenablage.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads auf Singlethread-Apartment (STA) Modus verwendet werden. Um diese Klasse verwenden zu können, stellen sicher, dass Ihre `Main` Methode ist mit markiert die <xref:System.STAThreadAttribute> Attribut.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt dieses Members.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" /> ist kein gültiger <see cref="T:System.Windows.Forms.TextDataFormat" />-Wert.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">für den Zugriff auf die Zwischenablage des Systems. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAudio">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Löscht die Zwischenablage und fügt dann Daten im <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />-Format hinzu und ersetzt die vorhandenen Daten.</summary>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public static void SetAudio (byte[] audioBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAudio(unsigned int8[] audioBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetAudio(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAudio (audioBytes As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAudio(cli::array &lt;System::Byte&gt; ^ audioBytes);" />
      <MemberSignature Language="F#" Value="static member SetAudio : byte[] -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetAudio audioBytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="audioBytes">Ein <see cref="T:System.Byte" />-Array, das die Audiodaten enthält.</param>
        <summary>Löscht die Zwischenablage und fügt dann ein <see cref="T:System.Byte" />-Array im <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />-Format hinzu, nachdem es in einen <see cref="T:System.IO.Stream" /> konvertiert wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um Audiodaten aus der Zwischenablage abzurufen, verwenden Sie zuerst die <xref:System.Windows.Forms.Clipboard.ContainsAudio%2A> Methode, um zu bestimmen, ob die Zwischenablage Audiodaten enthält, bevor Sie es mit Abrufen der <xref:System.Windows.Forms.Clipboard.GetAudioStream%2A> Methode.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads auf Singlethread-Apartment (STA) Modus verwendet werden. Um diese Klasse verwenden zu können, stellen sicher, dass Ihre `Main` Methode ist mit markiert die <xref:System.STAThreadAttribute> Attribut.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt eine Überladung von der <xref:System.Windows.Forms.Clipboard.SetAudio%2A> -Methode, die für diese Überladung ähnlich ist.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="audioBytes" /> ist <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">zum Hinzufügen von Audiodaten in die Zwischenablage des Systems. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      </Docs>
    </Member>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public static void SetAudio (System.IO.Stream audioStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAudio(class System.IO.Stream audioStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetAudio(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAudio (audioStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAudio(System::IO::Stream ^ audioStream);" />
      <MemberSignature Language="F#" Value="static member SetAudio : System.IO.Stream -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetAudio audioStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioStream">Ein <see cref="T:System.IO.Stream" />, der die Audiodaten enthält.</param>
        <summary>Löscht die Zwischenablage und fügt dann einen <see cref="T:System.IO.Stream" /> im <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />-Format hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um Audiodaten aus der Zwischenablage abzurufen, verwenden Sie zuerst die <xref:System.Windows.Forms.Clipboard.ContainsAudio%2A> Methode, um zu bestimmen, ob die Zwischenablage Audiodaten enthält, bevor Sie es mit Abrufen der <xref:System.Windows.Forms.Clipboard.GetAudioStream%2A> Methode.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads auf Singlethread-Apartment (STA) Modus verwendet werden. Um diese Klasse verwenden zu können, stellen sicher, dass Ihre `Main` Methode ist mit markiert die <xref:System.STAThreadAttribute> Attribut.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt dieses Members.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="audioStream" /> ist <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">zum Hinzufügen von Audiodaten in die Zwischenablage des Systems. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public static void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="static member SetData : string * obj -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Das Format der festzulegenden Daten. Vordefinierte Formate finden Sie unter <see cref="T:System.Windows.Forms.DataFormats" />.</param>
        <param name="data">Ein <see cref="T:System.Object" />, das die hinzuzufügenden Daten darstellt.</param>
        <summary>Löscht die Zwischenablage und fügt dann Daten im angegebenen Format hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie nicht über das Format der Zielanwendung kennen, können Sie Daten in verschiedenen Formaten, die mit dieser Methode speichern.  
  
 Daten, die mit dieser Methode können in ein kompatibles Format konvertiert werden, wenn sie abgerufen werden.  
  
 Um Daten aus der Zwischenablage in einem bestimmten Format abzurufen, verwenden Sie zuerst die <xref:System.Windows.Forms.Clipboard.ContainsData%2A> Methode, um zu bestimmen, ob die Zwischenablage Daten in diesem Format enthält, bevor Sie es mit Abrufen der <xref:System.Windows.Forms.Clipboard.GetData%2A> Methode.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads auf Singlethread-Apartment (STA) Modus verwendet werden. Um diese Klasse verwenden zu können, stellen sicher, dass Ihre `Main` Methode ist mit markiert die <xref:System.STAThreadAttribute> Attribut.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt dieses Members.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.Clipboard#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> ist <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">zum Hinzufügen von Daten von einem beliebigen Typ oder Format in die Zwischenablage des Systems. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetDataObject">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Löscht die Zwischenablage und fügt ihm dann Daten hinzu.</summary>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDataObject (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDataObject(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="static member SetDataObject : obj -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetDataObject data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Die in der Zwischenablage abzulegenden Daten.</param>
        <summary>Löscht die Zwischenablage und platziert dann nicht beständige Daten darin.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Daten werden beim Beenden der Anwendung aus der Zwischenablage des Systems gelöscht.  
  
 Diese Methode versucht, den Datensatz zehnmal in Intervallen von 100 Millisekunden und löst eine <xref:System.Runtime.InteropServices.ExternalException> , wenn alle Versuche nicht erfolgreich sind.  
  
> [!NOTE]
>  Ein Objekt müssen Sie in der Zwischenablage abgelegt werden serialisierbar sein. Wenn Sie ein nicht serialisierbares Objekt an diese Methode übergeben, schlägt es fehl, ohne eine Ausnahme auszulösen. Finden Sie unter <xref:System.Runtime.Serialization> für Weitere Informationen zur Serialisierung.  
>   
>  Die <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads auf Singlethread-Apartment (STA) Modus verwendet werden. Um diese Klasse verwenden zu können, stellen sicher, dass Ihre `Main` Methode ist mit markiert die <xref:System.STAThreadAttribute> Attribut.  
  
   
  
## Examples  
 Das folgende Codebeispiel verwendet <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> nicht beständige Textdaten in der Zwischenablage des Systems zu platzieren. In der `button1_Click` -Methode, der markierte Text aus kopiert `textBox1` und in die Zwischenablage eingefügt. In der `button2_Click` -Methode, die Informationen aus der Zwischenablage abgerufen und im angezeigten `textBox2`. Dieser Code setzt voraus `button1`, `button2`, `textBox1`, und `textBox2` erstellt und in einem Formular platziert wurden.  
  
 [!code-cpp[Classic Clipboard Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Es konnten keine Daten in der Zwischenablage abgelegt werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <exception cref="T:System.ArgumentNullException">Der Wert von <paramref name="data" /> ist <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">zum Hinzufügen von Daten von einem beliebigen Typ oder Format in die Zwischenablage des Systems. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </Member>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data, bool copy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data, bool copy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDataObject (data As Object, copy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDataObject(System::Object ^ data, bool copy);" />
      <MemberSignature Language="F#" Value="static member SetDataObject : obj * bool -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetDataObject (data, copy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="copy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="data">Die in der Zwischenablage abzulegenden Daten.</param>
        <param name="copy">
          <see langword="true" />, wenn die Daten nach dem Beenden dieser Anwendung in der Zwischenablage beibehalten werden sollen, andernfalls <see langword="false" />.</param>
        <summary>Löscht die Zwischenablage und platziert dann Daten darin und gibt an, ob die Daten nach Beenden der Anwendung in der Zwischenablage beibehalten werden sollen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die `copy` Parameter `false`, die Daten werden aus Zwischenablage des Systems gelöscht werden, wenn die Anwendung beendet wird.  
  
 Diese Methode versucht, den Datensatz zehnmal in Intervallen von 100 Millisekunden und löst eine <xref:System.Runtime.InteropServices.ExternalException> , wenn alle Versuche nicht erfolgreich sind.  
  
> [!NOTE]
>  Ein Objekt müssen Sie in der Zwischenablage abgelegt werden serialisierbar sein. Wenn Sie ein nicht serialisierbares Objekt an diese Methode übergeben, schlägt es fehl, ohne eine Ausnahme auszulösen. Finden Sie unter <xref:System.Runtime.Serialization> für Weitere Informationen zur Serialisierung.  
>   
>  Die <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads auf Singlethread-Apartment (STA) Modus verwendet werden. Um diese Klasse verwenden zu können, stellen sicher, dass Ihre `Main` Methode ist mit markiert die <xref:System.STAThreadAttribute> Attribut.  
  
   
  
## Examples  
 Die folgende Methode, die in einer Anwendung ausgeführt wird. Es wird eine dauerhafte Kopie der ausgewählten Text-Daten in das Textfeld in die Zwischenablage des Systems. Dieser Code setzt voraus `button1`, `textBox1`, und `textBox2` erstellt und in einem Formular platziert wurden.  
  
 [!code-cpp[Classic Clipboard.SetDataObject1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard.SetDataObject1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard.SetDataObject1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/VB/source.vb#1)]  
  
 In einer anderen Anwendung, die folgende Methode ruft den Text aus der Zwischenablage ab und fügt den Text in `textBox2`. Dieser Code setzt voraus `button2` und `textBox2` erstellt und in einem Formular platziert wurden.  
  
 [!code-cpp[Classic Clipboard.SetDataObject1 Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Clipboard.SetDataObject1 Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CS/source.cs#2)]
 [!code-vb[Classic Clipboard.SetDataObject1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Es konnten keine Daten in der Zwischenablage abgelegt werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <exception cref="T:System.ArgumentNullException">Der Wert von <paramref name="data" /> ist <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">zum Hinzufügen von Daten von einem beliebigen Typ oder Format in die Zwischenablage des Systems. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </Member>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data, bool copy, int retryTimes, int retryDelay);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data, bool copy, int32 retryTimes, int32 retryDelay) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDataObject (data As Object, copy As Boolean, retryTimes As Integer, retryDelay As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDataObject(System::Object ^ data, bool copy, int retryTimes, int retryDelay);" />
      <MemberSignature Language="F#" Value="static member SetDataObject : obj * bool * int * int -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetDataObject (data, copy, retryTimes, retryDelay)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="copy" Type="System.Boolean" />
        <Parameter Name="retryTimes" Type="System.Int32" />
        <Parameter Name="retryDelay" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">Die in der Zwischenablage abzulegenden Daten.</param>
        <param name="copy">
          <see langword="true" />, wenn die Daten nach dem Beenden dieser Anwendung in der Zwischenablage beibehalten werden sollen, andernfalls <see langword="false" />.</param>
        <param name="retryTimes">Die Häufigkeit, mit der versucht wird, die Daten in der Zwischenablage abzulegen.</param>
        <param name="retryDelay">Die Dauer in Millisekunden, die zwischen den Versuchen gewartet wird.</param>
        <summary>Löscht die Zwischenablage und versucht dann, die Daten in der angegebenen Häufigkeit und mit dem angegebenen zeitlichen Abstand zwischen den Versuchen abzulegen. Die Daten werden dabei optional nach dem Beenden der Anwendung in der Zwischenablage belassen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Hinzufügen von Daten in die Zwischenablage kann gelegentlich fehl, wenn die Zwischenablage mit einem anderen Thread oder Anwendung ausgelastet ist. Diese Methode ist nützlich zum Umgehen dieses Problems in Umgebungen mit hoher Nutzung der Zwischenablage.  
  
 Wenn die `copy` Parameter `false`, die Daten werden aus Zwischenablage des Systems gelöscht werden, wenn die Anwendung beendet wird.  
  
> [!NOTE]
>  Ein Objekt müssen Sie in der Zwischenablage abgelegt werden serialisierbar sein. Wenn Sie ein nicht serialisierbares Objekt an diese Methode übergeben, schlägt es fehl, ohne eine Ausnahme auszulösen. Finden Sie unter <xref:System.Runtime.Serialization> für Weitere Informationen zur Serialisierung.  
>   
>  Die <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads auf Singlethread-Apartment (STA) Modus verwendet werden. Um diese Klasse verwenden zu können, stellen sicher, dass Ihre `Main` Methode ist mit markiert die <xref:System.STAThreadAttribute> Attribut.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="retryTimes" /> ist kleiner als Null.  
  
- oder -  
 <paramref name="retryDelay" /> ist kleiner als Null.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Es konnten keine Daten in der Zwischenablage abgelegt werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">zum Hinzufügen von Daten von einem beliebigen Typ oder Format in die Zwischenablage des Systems. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </Member>
    <Member MemberName="SetFileDropList">
      <MemberSignature Language="C#" Value="public static void SetFileDropList (System.Collections.Specialized.StringCollection filePaths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFileDropList(class System.Collections.Specialized.StringCollection filePaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFileDropList (filePaths As StringCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFileDropList(System::Collections::Specialized::StringCollection ^ filePaths);" />
      <MemberSignature Language="F#" Value="static member SetFileDropList : System.Collections.Specialized.StringCollection -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetFileDropList filePaths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePaths" Type="System.Collections.Specialized.StringCollection" />
      </Parameters>
      <Docs>
        <param name="filePaths">Eine <see cref="T:System.Collections.Specialized.StringCollection" />, die die Dateinamen enthält.</param>
        <summary>Löscht die Zwischenablage und fügt dann im <see cref="F:System.Windows.Forms.DataFormats.FileDrop" />-Format eine Auflistung von Dateinamen hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Dateiablageliste ist eine Auflistung von Zeichenfolgen, die Pfadinformationen für die Dateien enthält.  
  
 Befindet sich eine Dateiablageliste in der Zwischenablage als eine <xref:System.String> Array. Diese Methode konvertiert `filePaths` zu einem <xref:System.String> Array, bevor Sie sie in die Zwischenablage hinzufügen.  
  
 Um aus der Zwischenablage eine Dateiablageliste abzurufen, verwenden Sie zuerst die <xref:System.Windows.Forms.Clipboard.ContainsFileDropList%2A> Methode, um zu bestimmen, ob die Zwischenablage Daten in diesem Format enthält, bevor Sie es mit Abrufen der <xref:System.Windows.Forms.Clipboard.GetFileDropList%2A> Methode.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads auf Singlethread-Apartment (STA) Modus verwendet werden. Um diese Klasse verwenden zu können, stellen sicher, dass Ihre `Main` Methode ist mit markiert die <xref:System.STAThreadAttribute> Attribut.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt dieses Members.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.Clipboard#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filePaths" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="filePaths" /> enthält keine Zeichenfolgen.  
  
- oder -  
Mindestens eine der Zeichenfolgen in <paramref name="filePaths" /> ist <see cref="F:System.String.Empty" />, enthält nur Leerraum, enthält ein oder mehrere ungültige Zeichen wie in <see cref="F:System.IO.Path.InvalidPathChars" /> definiert, ist <see langword="null" />, enthält einen Doppelpunkt (:) oder überschreitet die systemdefinierte maximale Länge.  
  
Weitere Informationen finden Sie unter der <see cref="P:System.Exception.InnerException" />-Eigenschaft der <see cref="T:System.ArgumentException" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">zum Hinzufügen von Daten in die <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> Format in die Zwischenablage des Systems. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">für den Zugriff auf das Dateisystem. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetFileDropList" />
      </Docs>
    </Member>
    <Member MemberName="SetImage">
      <MemberSignature Language="C#" Value="public static void SetImage (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetImage(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetImage(System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="static member SetImage : System.Drawing.Image -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetImage image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="image">Das <see cref="T:System.Drawing.Image" />, das der Zwischenablage hinzugefügt werden soll.</param>
        <summary>Löscht die Zwischenablage und fügt dann ein <see cref="T:System.Drawing.Image" /> im <see cref="F:System.Windows.Forms.DataFormats.Bitmap" />-Format hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um Image-Daten aus der Zwischenablage abzurufen, verwenden Sie zuerst die <xref:System.Windows.Forms.Clipboard.ContainsImage%2A> Methode, um zu bestimmen, ob die Zwischenablage Bilddaten enthält, bevor Sie es mit Abrufen der <xref:System.Windows.Forms.Clipboard.GetImage%2A> Methode.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads auf Singlethread-Apartment (STA) Modus verwendet werden. Um diese Klasse verwenden zu können, stellen sicher, dass Ihre `Main` Methode ist mit markiert die <xref:System.STAThreadAttribute> Attribut.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt dieses Members.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.Clipboard#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="image" /> ist <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">zum Hinzufügen von Daten in die <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> Format in die Zwischenablage des Systems. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetImage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Löscht die Zwischenablage und fügt ihm dann Textdaten hinzu.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public static void SetText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member SetText : string -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Der Text, der der Zwischenablage hinzugefügt werden soll.</param>
        <summary>Löscht die Zwischenablage und fügt dann im <see cref="F:System.Windows.Forms.TextDataFormat.Text" />-Format oder <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />-Format Textdaten hinzu, je nach Betriebssystem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode fügt Textdaten in der <xref:System.Windows.Forms.TextDataFormat.UnicodeText> formatieren [!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)] und [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]. Diese Methode fügt andernfalls Textdaten in der <xref:System.Windows.Forms.TextDataFormat.Text> Format.  
  
 Um Text-Daten aus der Zwischenablage abzurufen, verwenden Sie zuerst die <xref:System.Windows.Forms.Clipboard.ContainsText%2A> Methode, um zu bestimmen, ob die Zwischenablage Textdaten enthält, bevor Sie es mit Abrufen der <xref:System.Windows.Forms.Clipboard.GetText%2A> Methode.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads auf Singlethread-Apartment (STA) Modus verwendet werden. Um diese Klasse verwenden zu können, stellen sicher, dass Ihre `Main` Methode ist mit markiert die <xref:System.STAThreadAttribute> Attribut.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt eine Überladung von der <xref:System.Windows.Forms.Clipboard.SetText%2A> -Methode, die für diese Überladung ähnlich ist.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="text" /> ist <see langword="null" /> oder <see cref="F:System.String.Empty" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">zum Hinzufügen von Text-Daten in die Zwischenablage des Systems. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public static void SetText (string text, System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetText(string text, valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetText(System.String,System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetText (text As String, format As TextDataFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetText(System::String ^ text, System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="static member SetText : string * System.Windows.Forms.TextDataFormat -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetText (text, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="text">Der Text, der der Zwischenablage hinzugefügt werden soll.</param>
        <param name="format">Einer der <see cref="T:System.Windows.Forms.TextDataFormat" />-Werte.</param>
        <summary>Löscht die Zwischenablage und fügt dann Textdaten im Format hinzu, das vom angegebenen <see cref="T:System.Windows.Forms.TextDataFormat" />-Wert definiert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um Text-Daten aus der Zwischenablage abzurufen, verwenden Sie zuerst die <xref:System.Windows.Forms.Clipboard.ContainsText%2A> Methode, um zu bestimmen, ob die Zwischenablage Textdaten enthält, bevor Sie es mit Abrufen der <xref:System.Windows.Forms.Clipboard.GetText%2A> Methode.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.Clipboard> Klasse kann nur in Threads auf Singlethread-Apartment (STA) Modus verwendet werden. Um diese Klasse verwenden zu können, stellen sicher, dass Ihre `Main` Methode ist mit markiert die <xref:System.STAThreadAttribute> Attribut.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt dieses Members.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Die Zwischenablage konnte nicht gelöscht werden. Dies tritt i. d. R. auf, wenn die Zwischenablage von einem anderen Prozess verwendet wird.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Der aktuelle Thread befindet sich nicht im STA-Modus (Singlethread-Apartment). Fügen Sie der <see langword="Main" />-Methode der Anwendung das <see cref="T:System.STAThreadAttribute" /> hinzu.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="text" /> ist <see langword="null" /> oder <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" /> ist kein gültiger <see cref="T:System.Windows.Forms.TextDataFormat" />-Wert.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">zum Hinzufügen von Text-Daten in die Zwischenablage des Systems. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
      </Docs>
    </Member>
  </Members>
</Type>