<Type Name="OpenFileDialog" FullName="System.Windows.Forms.OpenFileDialog">
  <TypeSignature Language="C#" Value="public sealed class OpenFileDialog : System.Windows.Forms.FileDialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OpenFileDialog extends System.Windows.Forms.FileDialog" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.OpenFileDialog" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OpenFileDialog&#xA;Inherits FileDialog" />
  <TypeSignature Language="C++ CLI" Value="public ref class OpenFileDialog sealed : System::Windows::Forms::FileDialog" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.FileDialog</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6d28d-101">Zeigt ein Standarddialogfeld an, das den Benutzer zum Öffnen einer Datei auffordert.</span><span class="sxs-lookup"><span data-stu-id="6d28d-101">Displays a standard dialog box that prompts the user to open a file.</span></span> <span data-ttu-id="6d28d-102">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="6d28d-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d28d-103">Diese Klasse ermöglicht es Ihnen zu überprüfen, ob eine Datei vorhanden ist und um ihn zu öffnen.</span><span class="sxs-lookup"><span data-stu-id="6d28d-103">This class allows you to check whether a file exists and to open it.</span></span> <span data-ttu-id="6d28d-104">Die <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> -Eigenschaft bestimmt, ob ein Kontrollkästchen schreibgeschützt sind und im Dialogfeld angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="6d28d-104">The <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property determines whether a read-only check box appears in the dialog box.</span></span> <span data-ttu-id="6d28d-105">Die <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> Eigenschaft gibt an, ob das Kontrollkästchen "schreibgeschützt" aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="6d28d-105">The <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property indicates whether the read-only check box is checked.</span></span>  
  
 <span data-ttu-id="6d28d-106">Großteil der Kernfunktionalität für diese Klasse sich in befindet der <xref:System.Windows.Forms.FileDialog> Klasse.</span><span class="sxs-lookup"><span data-stu-id="6d28d-106">Most of the core functionality for this class is found in the <xref:System.Windows.Forms.FileDialog> class.</span></span>  

<span data-ttu-id="6d28d-107">Auf einem Betriebssystem rechts-nach-links-Einstellung des enthaltenden Formulars <xref:System.Windows.Forms.Control.RightToLeft> Eigenschaft <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType> zur Lokalisierung des Dialogs **Dateiname**, **öffnen**, und **Abbrechen** Schaltflächen.</span><span class="sxs-lookup"><span data-stu-id="6d28d-107">On a right-to-left operating system, setting the containing form's <xref:System.Windows.Forms.Control.RightToLeft> property to <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType> localizes the dialog's **File Name**, **Open**, and **Cancel** buttons.</span></span> <span data-ttu-id="6d28d-108">Wenn die Eigenschaft nicht, um festgelegt ist <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType>, englischem Text wird stattdessen verwendet.</span><span class="sxs-lookup"><span data-stu-id="6d28d-108">If the property is not set to <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType>, English text is used instead.</span></span>  

 <span data-ttu-id="6d28d-109">Wenn Sie dem Benutzer ermöglichen, wählen Sie einen Ordner anstelle einer Datei, verwenden Sie möchten <xref:System.Windows.Forms.FolderBrowserDialog> stattdessen.</span><span class="sxs-lookup"><span data-stu-id="6d28d-109">If you want to give the user the ability to select a folder instead of a file, use <xref:System.Windows.Forms.FolderBrowserDialog> instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d28d-110">Das folgende Codebeispiel erstellt eine <xref:System.Windows.Forms.OpenFileDialog>verschiedener Eigenschaften zum Definieren von Datei Dialogfeld und Filter des Verhaltens der Erweiterung festlegt und zeigt das Dialogfeld mithilfe der <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="6d28d-110">The following code example creates an <xref:System.Windows.Forms.OpenFileDialog>, sets several properties to define the file extension filter and dialog behavior, and displays the dialog box using the <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="6d28d-111">Das Beispiel benötigen Sie ein Formular mit einer <xref:System.Windows.Forms.Button> platziert und einen Verweis auf die <xref:System.IO> -Namespace hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="6d28d-111">The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and a reference to the <xref:System.IO> namespace added to it.</span></span>  
  
 [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]
 [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.FileDialog" />
    <altmember cref="T:System.Windows.Forms.CommonDialog" />
    <altmember cref="T:System.Windows.Forms.SaveFileDialog" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpenFileDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OpenFileDialog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d28d-112">Initialisiert eine Instanz der <see cref="T:System.Windows.Forms.OpenFileDialog" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="6d28d-112">Initializes an instance of the <see cref="T:System.Windows.Forms.OpenFileDialog" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d28d-113">Dies ist die vom Compiler bereitgestellte Standardkonstruktor für die <xref:System.Windows.Forms.OpenFileDialog> Klasse.</span><span class="sxs-lookup"><span data-stu-id="6d28d-113">This is the default, compiler-supplied constructor for the <xref:System.Windows.Forms.OpenFileDialog> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckFileExists">
      <MemberSignature Language="C#" Value="public override bool CheckFileExists { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckFileExists" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.CheckFileExists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CheckFileExists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CheckFileExists { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d28d-114">Ruft einen Wert ab, der angibt, ob im Dialogfeld eine Warnung angezeigt wird, wenn der Benutzer den Namen einer nicht vorhandenen Datei angibt, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="6d28d-114">Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a file name that does not exist.</span></span></summary>
        <value>
          <span data-ttu-id="6d28d-115"><see langword="true" />, wenn im Dialogfeld bei Angabe eines nicht vorhandenen Dateinamens durch den Benutzer eine Warnung angezeigt wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6d28d-115"><see langword="true" /> if the dialog box displays a warning when the user specifies a file name that does not exist; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6d28d-116">Der Standardwert ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="6d28d-116">The default value is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.OpenFileDialog.OpenFile" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
    <Member MemberName="Multiselect">
      <MemberSignature Language="C#" Value="public bool Multiselect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiselect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.Multiselect" />
      <MemberSignature Language="VB.NET" Value="Public Property Multiselect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Multiselect { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d28d-117">Ruft einen Wert ab, der angibt, ob im Dialogfeld mehrere Dateien ausgewählt werden können, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="6d28d-117">Gets or sets a value indicating whether the dialog box allows multiple files to be selected.</span></span></summary>
        <value>
          <span data-ttu-id="6d28d-118"><see langword="true" />, wenn im Dialogfeld mehrere Dateien zusammen oder gleichzeitig ausgewählt werden können, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6d28d-118"><see langword="true" /> if the dialog box allows multiple files to be selected together or concurrently; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6d28d-119">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6d28d-119">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d28d-120">Verwenden der <xref:System.Windows.Forms.FileDialog.FileNames%2A> Eigenschaft Zugriff auf die vollständige Liste der ausgewählten Dateinamen.</span><span class="sxs-lookup"><span data-stu-id="6d28d-120">Use the <xref:System.Windows.Forms.FileDialog.FileNames%2A> property to access the full list of selected file names.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d28d-121">Das folgende Codebeispiel kann der Benutzer zum Wählen einer Reihe von Bildern und zeigen diese im <xref:System.Windows.Forms.PictureBox> Steuerelemente in einem Formular.</span><span class="sxs-lookup"><span data-stu-id="6d28d-121">The following code example allows the user to select a number of images and display them in <xref:System.Windows.Forms.PictureBox> controls on a Form.</span></span> <span data-ttu-id="6d28d-122">Es veranschaulicht das Initialisieren einer <xref:System.Windows.Forms.OpenFileDialog>wird durch das Festlegen der <xref:System.Windows.Forms.FileDialog.Title%2A> und <xref:System.Windows.Forms.FileDialog.Filter%2A> Eigenschaften und der Benutzer zum Auswählen mehrerer Dateien durch Festlegen der <xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A> Eigenschaft auf "true".</span><span class="sxs-lookup"><span data-stu-id="6d28d-122">It demonstrates initializing an <xref:System.Windows.Forms.OpenFileDialog>, setting the <xref:System.Windows.Forms.FileDialog.Title%2A> and <xref:System.Windows.Forms.FileDialog.Filter%2A> properties, and allowing the user to select multiple files by setting the <xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A> property to true.</span></span> <span data-ttu-id="6d28d-123">Dieses Codebeispiel wird davon ausgegangen, dass das Formular bereits über ein <xref:System.Windows.Forms.OpenFileDialog> Steuerelement namens `openFileDialog1`, eine <xref:System.Windows.Forms.Button> mit dem Namen `SelectFileButton`, und ein <xref:System.Windows.Forms.FlowLayoutPanel> mit dem Namen `flowLayoutPanel1`.</span><span class="sxs-lookup"><span data-stu-id="6d28d-123">This code example assumes that your form already has an <xref:System.Windows.Forms.OpenFileDialog> control named `openFileDialog1`, a <xref:System.Windows.Forms.Button> named `SelectFileButton`, and a <xref:System.Windows.Forms.FlowLayoutPanel> named `flowLayoutPanel1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.OpenFileDialog.MultiSelect/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.OpenFileDialog.MultiSelect/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FileDialog.FileNames" />
        <altmember cref="P:System.Windows.Forms.FileDialog.Filter" />
      </Docs>
    </Member>
    <Member MemberName="OpenFile">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenFile() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.OpenFile" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenFile () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d28d-124">Öffnet die vom Benutzer ausgewählte Datei schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="6d28d-124">Opens the file selected by the user, with read-only permission.</span></span> <span data-ttu-id="6d28d-125">Die Datei wird durch die <see cref="P:System.Windows.Forms.FileDialog.FileName" />-Eigenschaft angegeben.</span><span class="sxs-lookup"><span data-stu-id="6d28d-125">The file is specified by the <see cref="P:System.Windows.Forms.FileDialog.FileName" /> property.</span></span></summary>
        <returns><span data-ttu-id="6d28d-126">Ein <see cref="T:System.IO.Stream" />, durch den die vom Benutzer ausgewählte schreibgeschützte Datei angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="6d28d-126">A <see cref="T:System.IO.Stream" /> that specifies the read-only file selected by the user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d28d-127">Die <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> Methode wird verwendet, um eine Möglichkeit, schnell eine Datei aus dem Dialogfeld Öffnen bereit.</span><span class="sxs-lookup"><span data-stu-id="6d28d-127">The <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to provide a facility to quickly open a file from the dialog box.</span></span> <span data-ttu-id="6d28d-128">Die Datei wird im Nur-Lese-Modus aus Sicherheitsgründen geöffnet.</span><span class="sxs-lookup"><span data-stu-id="6d28d-128">The file is opened in read-only mode for security purposes.</span></span> <span data-ttu-id="6d28d-129">Um eine Datei im Lese-/Schreibmodus öffnen zu können, müssen Sie z. B. eine andere Methode verwenden <xref:System.IO.FileStream>.</span><span class="sxs-lookup"><span data-stu-id="6d28d-129">To open a file in read/write mode, you must use another method, such as <xref:System.IO.FileStream>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d28d-130">Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A>-Methode verwenden.</span><span class="sxs-lookup"><span data-stu-id="6d28d-130">The following code example demonstrates how to use the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method.</span></span>  
  
 [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]
 [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6d28d-131">Der Dateiname lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6d28d-131">The file name is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileDialogPermission"><span data-ttu-id="6d28d-132">Um eine Datei zu öffnen.</span><span class="sxs-lookup"><span data-stu-id="6d28d-132">to open a file.</span></span> <span data-ttu-id="6d28d-133">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.FileDialogPermissionAccess.Open" /></span><span class="sxs-lookup"><span data-stu-id="6d28d-133">Associated enumeration: <see cref="F:System.Security.Permissions.FileDialogPermissionAccess.Open" />.</span></span></permission>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.CheckFileExists" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChecked">
      <MemberSignature Language="C#" Value="public bool ReadOnlyChecked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnlyChecked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnlyChecked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnlyChecked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d28d-134">Ruft einen Wert ab, der angibt, ob das Kontrollkästchen für den Schreibschutz aktiviert ist, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="6d28d-134">Gets or sets a value indicating whether the read-only check box is selected.</span></span></summary>
        <value>
          <span data-ttu-id="6d28d-135"><see langword="true" />, wenn das Kontrollkästchen für den Schreibschutz aktiviert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6d28d-135"><see langword="true" /> if the read-only check box is selected; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6d28d-136">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6d28d-136">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d28d-137">Die <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> Zustand wirkt sich nicht auf den Lese-/Schreibmodus, <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A?displayProperty=nameWithType> verwendet, um im Dialogfeld ausgewählte Datei zu öffnen.</span><span class="sxs-lookup"><span data-stu-id="6d28d-137">The <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> state does not affect the read/write mode that <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A?displayProperty=nameWithType> uses to open a file selected in the dialog box.</span></span> <span data-ttu-id="6d28d-138"><xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> die Datei wird immer im Nur-Lese-Modus geöffnet werden.</span><span class="sxs-lookup"><span data-stu-id="6d28d-138"><xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> will always open the file in read-only mode.</span></span>  
  
 <span data-ttu-id="6d28d-139">Die <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> Eigenschaft muss festgelegt werden, bevor in der Reihenfolge für das schreibgeschützte Kontrollkästchen im Dialogfeld angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="6d28d-139">The <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property must be set before in order for the read-only check box to appear in the dialog box.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d28d-140">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="6d28d-140">The following code example demonstrates the use of the <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property.</span></span> <span data-ttu-id="6d28d-141">In diesem Beispiel werden die <xref:System.Windows.Forms.OpenFileDialog> Feld mit der <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> -Eigenschaftensatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="6d28d-141">This example displays the <xref:System.Windows.Forms.OpenFileDialog> box with the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property set to `true`.</span></span> <span data-ttu-id="6d28d-142">Wenn der Benutzer die Option zum Öffnen der Datei im schreibgeschützten Modus, klickt der <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> -Eigenschaft ergibt `true`, und die <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> Methode wird verwendet, um die Datei zu öffnen.</span><span class="sxs-lookup"><span data-stu-id="6d28d-142">If the user clicks the option to open the file in read-only mode, the <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property evaluates to `true`, and the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to open the file.</span></span> <span data-ttu-id="6d28d-143">Andernfalls die <xref:System.IO.FileStream> Klasse wird verwendet, um die Datei im Lese-/Schreibmodus öffnen.</span><span class="sxs-lookup"><span data-stu-id="6d28d-143">Otherwise, the <xref:System.IO.FileStream> class is used to open the file in read/write mode.</span></span>  
  
 [!code-cpp[DlgOpenFileReadOnly#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CPP/form1.cpp#1)]
 [!code-csharp[DlgOpenFileReadOnly#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CS/form1.cs#1)]
 [!code-vb[DlgOpenFileReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DlgOpenFileReadOnly/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ShowReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d28d-144">Setzt alle Eigenschaften auf die Standardwerte zurück.</span><span class="sxs-lookup"><span data-stu-id="6d28d-144">Resets all properties to their default values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeFileName">
      <MemberSignature Language="C#" Value="public string SafeFileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SafeFileName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.SafeFileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SafeFileName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d28d-145">Ruft den Dateinamen und die Erweiterung für die im Dialogfeld ausgewählte Datei ab.</span><span class="sxs-lookup"><span data-stu-id="6d28d-145">Gets the file name and extension for the file selected in the dialog box.</span></span> <span data-ttu-id="6d28d-146">Der Dateiname enthält keine Pfadangabe.</span><span class="sxs-lookup"><span data-stu-id="6d28d-146">The file name does not include the path.</span></span></summary>
        <value><span data-ttu-id="6d28d-147">Der Dateiname und die Erweiterung für die im Dialogfeld ausgewählte Datei.</span><span class="sxs-lookup"><span data-stu-id="6d28d-147">The file name and extension for the file selected in the dialog box.</span></span> <span data-ttu-id="6d28d-148">Der Dateiname enthält keine Pfadangabe.</span><span class="sxs-lookup"><span data-stu-id="6d28d-148">The file name does not include the path.</span></span> <span data-ttu-id="6d28d-149">Der Standardwert ist eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="6d28d-149">The default value is an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d28d-150">Ein sicheren Dateinamen (nur den Dateinamen und eine Erweiterung ohne Pfad) dienen zur Verbesserung der Sicherheit für Anwendungen, da es keine Pfadinformationen verfügbar macht.</span><span class="sxs-lookup"><span data-stu-id="6d28d-150">A safe file name (just the file name and extension without a path) can be used to improve security for applications because it does not expose path information.</span></span> <span data-ttu-id="6d28d-151">Diese Eigenschaft sollte für Code mit eingeschränkter Vertrauenswürdigkeit ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="6d28d-151">This property should be accessible to code running with limited trust.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeFileNames">
      <MemberSignature Language="C#" Value="public string[] SafeFileNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] SafeFileNames" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.SafeFileNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeFileNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ SafeFileNames { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d28d-152">Ruft ein Array von Dateinamen und Erweiterungen für alle ausgewählten Dateien im Dialogfeld ab.</span><span class="sxs-lookup"><span data-stu-id="6d28d-152">Gets an array of file names and extensions for all the selected files in the dialog box.</span></span> <span data-ttu-id="6d28d-153">Die Dateinamen enthalten keine Pfadangaben.</span><span class="sxs-lookup"><span data-stu-id="6d28d-153">The file names do not include the path.</span></span></summary>
        <value><span data-ttu-id="6d28d-154">Ein Array von Dateinamen und Erweiterungen für alle ausgewählten Dateien im Dialogfeld.</span><span class="sxs-lookup"><span data-stu-id="6d28d-154">An array of file names and extensions for all the selected files in the dialog box.</span></span> <span data-ttu-id="6d28d-155">Die Dateinamen enthalten keine Pfadangaben.</span><span class="sxs-lookup"><span data-stu-id="6d28d-155">The file names do not include the path.</span></span> <span data-ttu-id="6d28d-156">Wenn keine Dateien ausgewählt sind, wird ein leeres Array zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="6d28d-156">If no files are selected, an empty array is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d28d-157">Ein sicheren Dateinamen (nur den Dateinamen und eine Erweiterung ohne Pfad) dienen zur Verbesserung der Sicherheit für Anwendungen, da es keine Pfadinformationen verfügbar macht.</span><span class="sxs-lookup"><span data-stu-id="6d28d-157">A safe file name (just the file name and extension without a path) can be used to improve security for applications because it does not expose path information.</span></span> <span data-ttu-id="6d28d-158">Diese Eigenschaft sollte für Code mit eingeschränkter Vertrauenswürdigkeit ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="6d28d-158">This property should be accessible to code running with limited trust.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowReadOnly">
      <MemberSignature Language="C#" Value="public bool ShowReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.ShowReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d28d-159">Ruft einen Wert ab, der angibt, ob das Dialogfeld ein schreibgeschütztes Kontrollkästchen enthält, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="6d28d-159">Gets or sets a value indicating whether the dialog box contains a read-only check box.</span></span></summary>
        <value>
          <span data-ttu-id="6d28d-160"><see langword="true" />, wenn das Dialogfeld ein Kontrollkästchen für den Schreibschutz enthält, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6d28d-160"><see langword="true" /> if the dialog box contains a read-only check box; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6d28d-161">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6d28d-161">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6d28d-162">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="6d28d-162">The following code example demonstrates the use of the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property.</span></span> <span data-ttu-id="6d28d-163">In diesem Beispiel werden die <xref:System.Windows.Forms.OpenFileDialog> Feld mit der <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> -Eigenschaftensatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="6d28d-163">This example displays the <xref:System.Windows.Forms.OpenFileDialog> box with the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property set to `true`.</span></span> <span data-ttu-id="6d28d-164">Wenn der Benutzer die Option zum Öffnen der Datei im schreibgeschützten Modus, klickt der <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> Methode wird verwendet, um die Datei zu öffnen.</span><span class="sxs-lookup"><span data-stu-id="6d28d-164">If the user clicks the option to open the file in read-only mode, the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to open the file.</span></span> <span data-ttu-id="6d28d-165">Andernfalls die <xref:System.IO.FileStream> Klasse wird verwendet, um die Datei im Lese-/Schreibmodus öffnen.</span><span class="sxs-lookup"><span data-stu-id="6d28d-165">Otherwise, the <xref:System.IO.FileStream> class is used to open the file in read/write mode.</span></span>  
  
 [!code-cpp[DlgOpenFileReadOnly#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CPP/form1.cpp#1)]
 [!code-csharp[DlgOpenFileReadOnly#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CS/form1.cs#1)]
 [!code-vb[DlgOpenFileReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DlgOpenFileReadOnly/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
  </Members>
</Type>