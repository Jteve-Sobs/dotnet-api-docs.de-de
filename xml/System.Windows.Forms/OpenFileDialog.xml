<Type Name="OpenFileDialog" FullName="System.Windows.Forms.OpenFileDialog">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bec38ebe7f27b06dba0ed682e3757f640478944c" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86727447" /></Metadata><TypeSignature Language="C#" Value="public sealed class OpenFileDialog : System.Windows.Forms.FileDialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OpenFileDialog extends System.Windows.Forms.FileDialog" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.OpenFileDialog" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OpenFileDialog&#xA;Inherits FileDialog" />
  <TypeSignature Language="C++ CLI" Value="public ref class OpenFileDialog sealed : System::Windows::Forms::FileDialog" />
  <TypeSignature Language="F#" Value="type OpenFileDialog = class&#xA;    inherit FileDialog" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.FileDialog</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Windows.Forms.Design.OpenFileDialogDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Windows.Forms.Design.OpenFileDialogDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="69e1b-101">Zeigt ein Standarddialogfeld an, das den Benutzer zum Öffnen einer Datei auffordert.</span><span class="sxs-lookup"><span data-stu-id="69e1b-101">Displays a standard dialog box that prompts the user to open a file.</span></span> <span data-ttu-id="69e1b-102">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="69e1b-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69e1b-103">Mit dieser Klasse können Sie überprüfen, ob eine Datei vorhanden ist, und Sie öffnen.</span><span class="sxs-lookup"><span data-stu-id="69e1b-103">This class allows you to check whether a file exists and to open it.</span></span> <span data-ttu-id="69e1b-104">Die- <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> Eigenschaft bestimmt, ob im Dialogfeld ein Schreib geschütztes Kontrollkästchen angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="69e1b-104">The <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property determines whether a read-only check box appears in the dialog box.</span></span> <span data-ttu-id="69e1b-105">Die- <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> Eigenschaft gibt an, ob das Kontrollkästchen Schreibgeschützt aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="69e1b-105">The <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property indicates whether the read-only check box is checked.</span></span>  
  
 <span data-ttu-id="69e1b-106">Die meisten grundlegenden Funktionen für diese Klasse finden Sie in der- <xref:System.Windows.Forms.FileDialog> Klasse.</span><span class="sxs-lookup"><span data-stu-id="69e1b-106">Most of the core functionality for this class is found in the <xref:System.Windows.Forms.FileDialog> class.</span></span>  

<span data-ttu-id="69e1b-107">Wenn das Betriebssystem von rechts nach links festgelegt wird, werden die-Eigenschaft des enthaltenden Formulars <xref:System.Windows.Forms.Control.RightToLeft> auf lokalisiert, um <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType> die Schaltflächen **Dateiname**, **Öffnen**und **Abbrechen** des Dialog Felds zu lokalisieren.</span><span class="sxs-lookup"><span data-stu-id="69e1b-107">On a right-to-left operating system, setting the containing form's <xref:System.Windows.Forms.Control.RightToLeft> property to <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType> localizes the dialog's **File Name**, **Open**, and **Cancel** buttons.</span></span> <span data-ttu-id="69e1b-108">Wenn die-Eigenschaft nicht auf festgelegt ist <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType> , wird stattdessen der englische Text verwendet.</span><span class="sxs-lookup"><span data-stu-id="69e1b-108">If the property is not set to <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType>, English text is used instead.</span></span>  

 <span data-ttu-id="69e1b-109">Wenn Sie es dem Benutzer ermöglichen möchten, anstelle einer Datei einen Ordner auszuwählen, verwenden Sie <xref:System.Windows.Forms.FolderBrowserDialog> stattdessen.</span><span class="sxs-lookup"><span data-stu-id="69e1b-109">If you want to give the user the ability to select a folder instead of a file, use <xref:System.Windows.Forms.FolderBrowserDialog> instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69e1b-110">Im folgenden Codebeispiel wird ein erstellt. es <xref:System.Windows.Forms.OpenFileDialog> werden mehrere Eigenschaften zum Definieren des Datei Erweiterungs Filters und Dialog Felds festgelegt, und das Dialogfeld wird mit der- <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A?displayProperty=nameWithType> Methode angezeigt.</span><span class="sxs-lookup"><span data-stu-id="69e1b-110">The following code example creates an <xref:System.Windows.Forms.OpenFileDialog>, sets several properties to define the file extension filter and dialog behavior, and displays the dialog box using the <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="69e1b-111">Für das Beispiel ist ein Formular mit einem <xref:System.Windows.Forms.Button> abgelegt und ein Verweis auf den <xref:System.IO> hinzugefügten Namespace erforderlich.</span><span class="sxs-lookup"><span data-stu-id="69e1b-111">The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and a reference to the <xref:System.IO> namespace added to it.</span></span>  
  
 [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]
 [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.FileDialog" />
    <altmember cref="T:System.Windows.Forms.CommonDialog" />
    <altmember cref="T:System.Windows.Forms.SaveFileDialog" />
    <related type="Article" href="/dotnet/standard/io/how-to-read-text-from-a-file"><span data-ttu-id="69e1b-112">Vorgehensweise: Lesen von Text aus einer Datei</span><span class="sxs-lookup"><span data-stu-id="69e1b-112">How to: Read Text from a File</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpenFileDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OpenFileDialog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69e1b-113">Initialisiert eine Instanz der <see cref="T:System.Windows.Forms.OpenFileDialog" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="69e1b-113">Initializes an instance of the <see cref="T:System.Windows.Forms.OpenFileDialog" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69e1b-114">Dies ist der vom Compiler angegebene Standard Konstruktor für die- <xref:System.Windows.Forms.OpenFileDialog> Klasse.</span><span class="sxs-lookup"><span data-stu-id="69e1b-114">This is the default, compiler-supplied constructor for the <xref:System.Windows.Forms.OpenFileDialog> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckFileExists">
      <MemberSignature Language="C#" Value="public override bool CheckFileExists { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckFileExists" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.CheckFileExists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CheckFileExists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CheckFileExists { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckFileExists : bool with get, set" Usage="System.Windows.Forms.OpenFileDialog.CheckFileExists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69e1b-115">Ruft einen Wert ab, der angibt, ob im Dialogfeld eine Warnung angezeigt wird, wenn der Benutzer den Namen einer nicht vorhandenen Datei angibt, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="69e1b-115">Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a file name that does not exist.</span></span></summary>
        <value><span data-ttu-id="69e1b-116"><see langword="true" />, wenn im Dialogfeld bei Angabe eines nicht vorhandenen Dateinamens durch den Benutzer eine Warnung angezeigt wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="69e1b-116"><see langword="true" /> if the dialog box displays a warning when the user specifies a file name that does not exist; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="69e1b-117">Der Standardwert ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="69e1b-117">The default value is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.OpenFileDialog.OpenFile" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
    <Member MemberName="Multiselect">
      <MemberSignature Language="C#" Value="public bool Multiselect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiselect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.Multiselect" />
      <MemberSignature Language="VB.NET" Value="Public Property Multiselect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Multiselect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Multiselect : bool with get, set" Usage="System.Windows.Forms.OpenFileDialog.Multiselect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69e1b-118">Ruft einen Wert ab, der angibt, ob im Dialogfeld mehrere Dateien ausgewählt werden können, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="69e1b-118">Gets or sets a value indicating whether the dialog box allows multiple files to be selected.</span></span></summary>
        <value><span data-ttu-id="69e1b-119"><see langword="true" />, wenn im Dialogfeld mehrere Dateien zusammen oder gleichzeitig ausgewählt werden können, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="69e1b-119"><see langword="true" /> if the dialog box allows multiple files to be selected together or concurrently; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="69e1b-120">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="69e1b-120">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69e1b-121">Verwenden Sie die- <xref:System.Windows.Forms.FileDialog.FileNames%2A> Eigenschaft, um auf die vollständige Liste der ausgewählten Dateinamen zuzugreifen.</span><span class="sxs-lookup"><span data-stu-id="69e1b-121">Use the <xref:System.Windows.Forms.FileDialog.FileNames%2A> property to access the full list of selected file names.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69e1b-122">Im folgenden Codebeispiel kann der Benutzer eine Reihe von Bildern auswählen und in Steuer <xref:System.Windows.Forms.PictureBox> Elementen auf einem Formular anzeigen.</span><span class="sxs-lookup"><span data-stu-id="69e1b-122">The following code example allows the user to select a number of images and display them in <xref:System.Windows.Forms.PictureBox> controls on a Form.</span></span> <span data-ttu-id="69e1b-123">Es veranschaulicht die Initialisierung eines <xref:System.Windows.Forms.OpenFileDialog> , das Festlegen der <xref:System.Windows.Forms.FileDialog.Title%2A> <xref:System.Windows.Forms.FileDialog.Filter%2A> Eigenschaften und und das Festlegen mehrerer Dateien durch Festlegen der- <xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A> Eigenschaft auf true.</span><span class="sxs-lookup"><span data-stu-id="69e1b-123">It demonstrates initializing an <xref:System.Windows.Forms.OpenFileDialog>, setting the <xref:System.Windows.Forms.FileDialog.Title%2A> and <xref:System.Windows.Forms.FileDialog.Filter%2A> properties, and allowing the user to select multiple files by setting the <xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A> property to true.</span></span> <span data-ttu-id="69e1b-124">In diesem Codebeispiel wird davon ausgegangen, dass das Formular bereits über ein-Steuerelement mit dem Namen, ein mit dem Namen <xref:System.Windows.Forms.OpenFileDialog> `openFileDialog1` <xref:System.Windows.Forms.Button> `SelectFileButton` und ein <xref:System.Windows.Forms.FlowLayoutPanel> `flowLayoutPanel1` mit</span><span class="sxs-lookup"><span data-stu-id="69e1b-124">This code example assumes that your form already has an <xref:System.Windows.Forms.OpenFileDialog> control named `openFileDialog1`, a <xref:System.Windows.Forms.Button> named `SelectFileButton`, and a <xref:System.Windows.Forms.FlowLayoutPanel> named `flowLayoutPanel1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.OpenFileDialog.MultiSelect/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.OpenFileDialog.MultiSelect/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FileDialog.FileNames" />
        <altmember cref="P:System.Windows.Forms.FileDialog.Filter" />
      </Docs>
    </Member>
    <Member MemberName="OpenFile">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenFile() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.OpenFile" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenFile () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenFile();" />
      <MemberSignature Language="F#" Value="member this.OpenFile : unit -&gt; System.IO.Stream" Usage="openFileDialog.OpenFile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69e1b-125">Öffnet die vom Benutzer ausgewählte Datei schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="69e1b-125">Opens the file selected by the user, with read-only permission.</span></span> <span data-ttu-id="69e1b-126">Die Datei wird durch die <see cref="P:System.Windows.Forms.FileDialog.FileName" />-Eigenschaft angegeben.</span><span class="sxs-lookup"><span data-stu-id="69e1b-126">The file is specified by the <see cref="P:System.Windows.Forms.FileDialog.FileName" /> property.</span></span></summary>
        <returns><span data-ttu-id="69e1b-127">Ein <see cref="T:System.IO.Stream" />, durch den die vom Benutzer ausgewählte schreibgeschützte Datei angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="69e1b-127">A <see cref="T:System.IO.Stream" /> that specifies the read-only file selected by the user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69e1b-128">Die- <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> Methode wird verwendet, um eine Möglichkeit bereitzustellen, um schnell eine Datei aus dem Dialogfeld zu öffnen.</span><span class="sxs-lookup"><span data-stu-id="69e1b-128">The <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to provide a facility to quickly open a file from the dialog box.</span></span> <span data-ttu-id="69e1b-129">Die Datei wird aus Sicherheitsgründen im schreibgeschützten Modus geöffnet.</span><span class="sxs-lookup"><span data-stu-id="69e1b-129">The file is opened in read-only mode for security purposes.</span></span> <span data-ttu-id="69e1b-130">Zum Öffnen einer Datei im Lese-/Schreibmodus müssen Sie eine andere Methode verwenden, z <xref:System.IO.FileStream> . b..</span><span class="sxs-lookup"><span data-stu-id="69e1b-130">To open a file in read/write mode, you must use another method, such as <xref:System.IO.FileStream>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69e1b-131">Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A>-Methode verwenden.</span><span class="sxs-lookup"><span data-stu-id="69e1b-131">The following code example demonstrates how to use the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method.</span></span>  
  
 [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]
 [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="69e1b-132">Der Dateiname lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="69e1b-132">The file name is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.CheckFileExists" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChecked">
      <MemberSignature Language="C#" Value="public bool ReadOnlyChecked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnlyChecked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnlyChecked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnlyChecked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnlyChecked : bool with get, set" Usage="System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69e1b-133">Ruft einen Wert ab, der angibt, ob das Kontrollkästchen für den Schreibschutz aktiviert ist, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="69e1b-133">Gets or sets a value indicating whether the read-only check box is selected.</span></span></summary>
        <value><span data-ttu-id="69e1b-134"><see langword="true" />, wenn das Kontrollkästchen für den Schreibschutz aktiviert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="69e1b-134"><see langword="true" /> if the read-only check box is selected; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="69e1b-135">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="69e1b-135">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69e1b-136">Der <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> Zustand wirkt sich nicht auf den Lese-/Schreibmodus aus, der <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A?displayProperty=nameWithType> von zum Öffnen einer im Dialogfeld ausgewählten Datei verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="69e1b-136">The <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> state does not affect the read/write mode that <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A?displayProperty=nameWithType> uses to open a file selected in the dialog box.</span></span> <span data-ttu-id="69e1b-137"><xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> die Datei wird immer im schreibgeschützten Modus geöffnet.</span><span class="sxs-lookup"><span data-stu-id="69e1b-137"><xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> will always open the file in read-only mode.</span></span>  
  
 <span data-ttu-id="69e1b-138">Die- <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> Eigenschaft muss festgelegt werden, damit das Kontrollkästchen schreibgeschützt im Dialogfeld angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="69e1b-138">The <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property must be set before in order for the read-only check box to appear in the dialog box.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69e1b-139">Im folgenden Codebeispiel wird die Verwendung des <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A>-Attributs veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="69e1b-139">The following code example demonstrates the use of the <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property.</span></span> <span data-ttu-id="69e1b-140">In diesem Beispiel wird das <xref:System.Windows.Forms.OpenFileDialog> Feld mit der- <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> Eigenschaft auf festgelegt `true` .</span><span class="sxs-lookup"><span data-stu-id="69e1b-140">This example displays the <xref:System.Windows.Forms.OpenFileDialog> box with the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property set to `true`.</span></span> <span data-ttu-id="69e1b-141">Wenn der Benutzer auf die Option klickt, um die Datei im schreibgeschützten Modus zu öffnen, <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> wird die-Eigenschaft als ausgewertet `true` , und die- <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> Methode wird verwendet, um die Datei zu öffnen.</span><span class="sxs-lookup"><span data-stu-id="69e1b-141">If the user clicks the option to open the file in read-only mode, the <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property evaluates to `true`, and the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to open the file.</span></span> <span data-ttu-id="69e1b-142">Andernfalls wird die- <xref:System.IO.FileStream> Klasse verwendet, um die Datei im Lese-/Schreibmodus zu öffnen.</span><span class="sxs-lookup"><span data-stu-id="69e1b-142">Otherwise, the <xref:System.IO.FileStream> class is used to open the file in read/write mode.</span></span>  
  
 [!code-cpp[DlgOpenFileReadOnly#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CPP/form1.cpp#1)]
 [!code-csharp[DlgOpenFileReadOnly#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CS/form1.cs#1)]
 [!code-vb[DlgOpenFileReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DlgOpenFileReadOnly/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ShowReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="openFileDialog.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69e1b-143">Setzt alle Eigenschaften auf die Standardwerte zurück.</span><span class="sxs-lookup"><span data-stu-id="69e1b-143">Resets all properties to their default values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeFileName">
      <MemberSignature Language="C#" Value="public string SafeFileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SafeFileName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.SafeFileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SafeFileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SafeFileName : string" Usage="System.Windows.Forms.OpenFileDialog.SafeFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69e1b-144">Ruft den Dateinamen und die Erweiterung für die im Dialogfeld ausgewählte Datei ab.</span><span class="sxs-lookup"><span data-stu-id="69e1b-144">Gets the file name and extension for the file selected in the dialog box.</span></span> <span data-ttu-id="69e1b-145">Der Dateiname enthält keine Pfadangabe.</span><span class="sxs-lookup"><span data-stu-id="69e1b-145">The file name does not include the path.</span></span></summary>
        <value><span data-ttu-id="69e1b-146">Der Dateiname und die Erweiterung für die im Dialogfeld ausgewählte Datei.</span><span class="sxs-lookup"><span data-stu-id="69e1b-146">The file name and extension for the file selected in the dialog box.</span></span> <span data-ttu-id="69e1b-147">Der Dateiname enthält keine Pfadangabe.</span><span class="sxs-lookup"><span data-stu-id="69e1b-147">The file name does not include the path.</span></span> <span data-ttu-id="69e1b-148">Der Standardwert ist eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="69e1b-148">The default value is an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69e1b-149">Ein sicherer Dateiname (nur der Dateiname und die Erweiterung ohne Pfad) kann verwendet werden, um die Sicherheit für Anwendungen zu verbessern, da er keine Pfadinformationen verfügbar macht.</span><span class="sxs-lookup"><span data-stu-id="69e1b-149">A safe file name (just the file name and extension without a path) can be used to improve security for applications because it does not expose path information.</span></span> <span data-ttu-id="69e1b-150">Diese Eigenschaft sollte für Code verfügbar sein, der mit eingeschränkter Vertrauenswürdigkeit ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="69e1b-150">This property should be accessible to code running with limited trust.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeFileNames">
      <MemberSignature Language="C#" Value="public string[] SafeFileNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] SafeFileNames" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.SafeFileNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeFileNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ SafeFileNames { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SafeFileNames : string[]" Usage="System.Windows.Forms.OpenFileDialog.SafeFileNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69e1b-151">Ruft ein Array von Dateinamen und Erweiterungen für alle ausgewählten Dateien im Dialogfeld ab.</span><span class="sxs-lookup"><span data-stu-id="69e1b-151">Gets an array of file names and extensions for all the selected files in the dialog box.</span></span> <span data-ttu-id="69e1b-152">Die Dateinamen enthalten keine Pfadangaben.</span><span class="sxs-lookup"><span data-stu-id="69e1b-152">The file names do not include the path.</span></span></summary>
        <value><span data-ttu-id="69e1b-153">Ein Array von Dateinamen und Erweiterungen für alle ausgewählten Dateien im Dialogfeld.</span><span class="sxs-lookup"><span data-stu-id="69e1b-153">An array of file names and extensions for all the selected files in the dialog box.</span></span> <span data-ttu-id="69e1b-154">Die Dateinamen enthalten keine Pfadangaben.</span><span class="sxs-lookup"><span data-stu-id="69e1b-154">The file names do not include the path.</span></span> <span data-ttu-id="69e1b-155">Wenn keine Dateien ausgewählt sind, wird ein leeres Array zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="69e1b-155">If no files are selected, an empty array is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69e1b-156">Ein sicherer Dateiname (nur der Dateiname und die Erweiterung ohne Pfad) kann verwendet werden, um die Sicherheit für Anwendungen zu verbessern, da er keine Pfadinformationen verfügbar macht.</span><span class="sxs-lookup"><span data-stu-id="69e1b-156">A safe file name (just the file name and extension without a path) can be used to improve security for applications because it does not expose path information.</span></span> <span data-ttu-id="69e1b-157">Diese Eigenschaft sollte für Code verfügbar sein, der mit eingeschränkter Vertrauenswürdigkeit ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="69e1b-157">This property should be accessible to code running with limited trust.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowReadOnly">
      <MemberSignature Language="C#" Value="public bool ShowReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.ShowReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowReadOnly : bool with get, set" Usage="System.Windows.Forms.OpenFileDialog.ShowReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69e1b-158">Ruft einen Wert ab, der angibt, ob das Dialogfeld ein schreibgeschütztes Kontrollkästchen enthält, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="69e1b-158">Gets or sets a value indicating whether the dialog box contains a read-only check box.</span></span></summary>
        <value><span data-ttu-id="69e1b-159"><see langword="true" />, wenn das Dialogfeld ein Kontrollkästchen für den Schreibschutz enthält, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="69e1b-159"><see langword="true" /> if the dialog box contains a read-only check box; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="69e1b-160">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="69e1b-160">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69e1b-161">Im folgenden Codebeispiel wird die Verwendung des <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A>-Attributs veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="69e1b-161">The following code example demonstrates the use of the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property.</span></span> <span data-ttu-id="69e1b-162">In diesem Beispiel wird das <xref:System.Windows.Forms.OpenFileDialog> Feld mit der- <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> Eigenschaft auf festgelegt `true` .</span><span class="sxs-lookup"><span data-stu-id="69e1b-162">This example displays the <xref:System.Windows.Forms.OpenFileDialog> box with the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property set to `true`.</span></span> <span data-ttu-id="69e1b-163">Wenn der Benutzer auf die Option klickt, um die Datei im schreibgeschützten Modus zu öffnen, wird die- <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> Methode verwendet, um die Datei zu öffnen.</span><span class="sxs-lookup"><span data-stu-id="69e1b-163">If the user clicks the option to open the file in read-only mode, the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to open the file.</span></span> <span data-ttu-id="69e1b-164">Andernfalls wird die- <xref:System.IO.FileStream> Klasse verwendet, um die Datei im Lese-/Schreibmodus zu öffnen.</span><span class="sxs-lookup"><span data-stu-id="69e1b-164">Otherwise, the <xref:System.IO.FileStream> class is used to open the file in read/write mode.</span></span>  
  
 [!code-cpp[DlgOpenFileReadOnly#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CPP/form1.cpp#1)]
 [!code-csharp[DlgOpenFileReadOnly#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CS/form1.cs#1)]
 [!code-vb[DlgOpenFileReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DlgOpenFileReadOnly/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
  </Members>
</Type>
