<Type Name="KeyEventArgs" FullName="System.Windows.Forms.KeyEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f7677a8abed6de6921dd7137d79eb3ed66213093" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class KeyEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.KeyEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d9d17-101">Stellt Daten für das <see cref="E:System.Windows.Forms.Control.KeyDown" />-Ereignis oder das <see cref="E:System.Windows.Forms.Control.KeyUp" />-Ereignis bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d9d17-101">Provides data for the <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9d17-102">Ein <xref:System.Windows.Forms.KeyEventArgs>, dem gibt den Schlüssel an der Benutzer gedrückt, und ob alle (STRG, ALT und UMSCHALT) zur gleichen Zeit Modifizierertasten wurden übergeben wird, mit jedem <xref:System.Windows.Forms.Control.KeyDown> oder <xref:System.Windows.Forms.Control.KeyUp> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d9d17-102">A <xref:System.Windows.Forms.KeyEventArgs>, which specifies the key the user pressed and whether any modifier keys (CTRL, ALT, and SHIFT) were pressed at the same time, is passed with each <xref:System.Windows.Forms.Control.KeyDown> or <xref:System.Windows.Forms.Control.KeyUp> event.</span></span>  
  
 <span data-ttu-id="d9d17-103">Die <xref:System.Windows.Forms.Control.KeyDown> Ereignis tritt auf, wenn der Benutzer eine beliebige Taste drückt.</span><span class="sxs-lookup"><span data-stu-id="d9d17-103">The <xref:System.Windows.Forms.Control.KeyDown> event occurs when the user presses any key.</span></span> <span data-ttu-id="d9d17-104">Die <xref:System.Windows.Forms.Control.KeyUp> Ereignis tritt auf, wenn der Benutzer die Taste loslässt.</span><span class="sxs-lookup"><span data-stu-id="d9d17-104">The <xref:System.Windows.Forms.Control.KeyUp> event occurs when the user releases the key.</span></span> <span data-ttu-id="d9d17-105">Doppelte <xref:System.Windows.Forms.Control.KeyDown> Ereignisse auftreten jedes Mal wiederholt auf der Schlüssel, wenn der Schlüssel, aber nur ein aufrechterhalten wird <xref:System.Windows.Forms.Control.KeyUp> Ereignis wird generiert, wenn der Benutzer die Taste loslässt.</span><span class="sxs-lookup"><span data-stu-id="d9d17-105">Duplicate <xref:System.Windows.Forms.Control.KeyDown> events occur each time the key repeats, if the key is held down, but only one <xref:System.Windows.Forms.Control.KeyUp> event is generated when the user releases the key.</span></span>  
  
 <span data-ttu-id="d9d17-106">Die <xref:System.Windows.Forms.Control.KeyPress> Ereignis tritt auch auf, wenn eine Taste gedrückt wird.</span><span class="sxs-lookup"><span data-stu-id="d9d17-106">The <xref:System.Windows.Forms.Control.KeyPress> event also occurs when a key is pressed.</span></span> <span data-ttu-id="d9d17-107">Ein <xref:System.Windows.Forms.KeyPressEventArgs> wird mit jedem übergeben <xref:System.Windows.Forms.Control.KeyPress> Ereignis, und gibt das Zeichen an, die als Ergebnis der einzelnen Tastendruck erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="d9d17-107">A <xref:System.Windows.Forms.KeyPressEventArgs> is passed with each <xref:System.Windows.Forms.Control.KeyPress> event, and specifies the character that was composed as a result of each key press.</span></span>  
  
 <span data-ttu-id="d9d17-108">Informationen über das Ereignismodell finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d9d17-108">For information about the event model, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9d17-109">Die folgenden Codebeispiele veranschaulichen, wie den Status der Drücken einer Taste erkennen.</span><span class="sxs-lookup"><span data-stu-id="d9d17-109">The following code examples demonstrate how to detect the state of a key press.</span></span>  
  
 <span data-ttu-id="d9d17-110">**Beispiel 1**</span><span class="sxs-lookup"><span data-stu-id="d9d17-110">**Example 1**</span></span>  
  
 <span data-ttu-id="d9d17-111">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.Control.KeyDown> Ereignis mit der <xref:System.Windows.Forms.Help> zum Anzeigen der Popup-Hilfe für den Benutzer der Anwendung.</span><span class="sxs-lookup"><span data-stu-id="d9d17-111">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="d9d17-112">Im Beispiel wird die <xref:System.Windows.Forms.KeyEventArgs> Eigenschaften an die Ereignishandlermethode zum Filtern nach allen Varianten des Drücken der Taste F1 mit Modifizierertaste übergeben.</span><span class="sxs-lookup"><span data-stu-id="d9d17-112">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="d9d17-113">Wenn der Benutzer eine Variante von F1 drückt, die Modifizierer Tastatur enthält die <xref:System.Windows.Forms.Help> Klasse wird ein Popupfenster, der ähnlich wie eine <xref:System.Windows.Forms.ToolTip>, in der Nähe des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="d9d17-113">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="d9d17-114">Wenn der Benutzer ALT + F2 drückt, wird eine andere kontextbezogene Hilfe mit zusätzlichen Informationen angezeigt.</span><span class="sxs-lookup"><span data-stu-id="d9d17-114">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 <span data-ttu-id="d9d17-115">**Beispiel 2**</span><span class="sxs-lookup"><span data-stu-id="d9d17-115">**Example 2**</span></span>  
  
 <span data-ttu-id="d9d17-116">Im folgenden Beispiel wird bestimmt, ob der Benutzer ALT + E gedrückt, und wenn der Mauszeiger über ein <xref:System.Windows.Forms.TreeNode>, ermöglicht es dem Benutzer, die bearbeiten <xref:System.Windows.Forms.TreeNode>.</span><span class="sxs-lookup"><span data-stu-id="d9d17-116">The following example determines whether the user pressed ALT+E, and if the mouse pointer is over a <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 <span data-ttu-id="d9d17-117">**Beispiel 3**</span><span class="sxs-lookup"><span data-stu-id="d9d17-117">**Example 3**</span></span>  
  
 <span data-ttu-id="d9d17-118">Im folgenden Beispiel wird bestimmt, ob der Benutzer einen nicht numerischen, gedrückt, und wenn dies der Fall ist, bricht der <xref:System.Windows.Forms.Control.KeyPress> Ereignis mithilfe der <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="d9d17-118">The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
    <altmember cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
    <altmember cref="T:System.Windows.Forms.KeyPressEventArgs" />
    <altmember cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyEventArgs (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeyEventArgs.#ctor(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyData As Keys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyEventArgs(System::Windows::Forms::Keys keyData);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="d9d17-119">Eine <see cref="T:System.Windows.Forms.Keys" />-Enumeration, die die gedrückte Taste darstellt, zusammen mit allen Modifiziererflags, die angeben, welche der Tasten STRG, UMSCHALTTASTE und ALT gleichzeitig gedrückt wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d17-119">A <see cref="T:System.Windows.Forms.Keys" /> representing the key that was pressed, combined with any modifier flags that indicate which CTRL, SHIFT, and ALT keys were pressed at the same time.</span>
          </span>
          <span data-ttu-id="d9d17-120">Mögliche Werte werden abgerufen, indem der bitweise Operator OR (|) auf Konstanten aus der <see cref="T:System.Windows.Forms.Keys" />-Enumeration angewendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d17-120">Possible values are obtained be applying the bitwise OR (|) operator to constants from the <see cref="T:System.Windows.Forms.Keys" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9d17-121">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.KeyEventArgs" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d17-121">Initializes a new instance of the <see cref="T:System.Windows.Forms.KeyEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.KeyPressEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Alt">
      <MemberSignature Language="C#" Value="public virtual bool Alt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Alt" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Alt" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Alt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Alt { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9d17-122">Ruft einen Wert ab, der angibt, ob ALT gedrückt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d17-122">Gets a value indicating whether the ALT key was pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9d17-123">
            <see langword="true" />, wenn ALT gedrückt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d17-123">
              <see langword="true" /> if the ALT key was pressed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d9d17-124">**Beispiel 1**</span><span class="sxs-lookup"><span data-stu-id="d9d17-124">**Example 1**</span></span>  
  
 <span data-ttu-id="d9d17-125">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.Control.KeyDown> Ereignis mit der <xref:System.Windows.Forms.Help> zum Anzeigen der Popup-Hilfe für den Benutzer der Anwendung.</span><span class="sxs-lookup"><span data-stu-id="d9d17-125">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="d9d17-126">Im Beispiel wird die <xref:System.Windows.Forms.KeyEventArgs> Eigenschaften an die Ereignishandlermethode zum Filtern nach allen Varianten des Drücken der Taste F1 mit Modifizierertaste übergeben.</span><span class="sxs-lookup"><span data-stu-id="d9d17-126">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="d9d17-127">Wenn der Benutzer eine Variante von F1 drückt, die Modifizierer Tastatur enthält die <xref:System.Windows.Forms.Help> Klasse wird ein Popupfenster, der ähnlich wie eine <xref:System.Windows.Forms.ToolTip>, in der Nähe des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="d9d17-127">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="d9d17-128">Wenn der Benutzer ALT + F2 drückt, wird eine andere kontextbezogene Hilfe mit zusätzlichen Informationen angezeigt.</span><span class="sxs-lookup"><span data-stu-id="d9d17-128">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 <span data-ttu-id="d9d17-129">**Beispiel 2**</span><span class="sxs-lookup"><span data-stu-id="d9d17-129">**Example 2**</span></span>  
  
 <span data-ttu-id="d9d17-130">Im folgenden Beispiel wird bestimmt, ob der Benutzer ALT + E gedrückt, und wenn der Mauszeiger über <xref:System.Windows.Forms.TreeNode>, ermöglicht es dem Benutzer, die bearbeiten <xref:System.Windows.Forms.TreeNode>.</span><span class="sxs-lookup"><span data-stu-id="d9d17-130">The following example determines whether the user pressed ALT+E, and if the mouse pointer is over <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Control" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Shift" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="public bool Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Control" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Control" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Control As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Control { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9d17-131">Ruft einen Wert ab, der angibt, ob STRG gedrückt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d17-131">Gets a value indicating whether the CTRL key was pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9d17-132">
            <see langword="true" />, wenn STRG gedrückt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d17-132">
              <see langword="true" /> if the CTRL key was pressed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d9d17-133">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.Control.KeyDown> Ereignis mit der <xref:System.Windows.Forms.Help> zum Anzeigen der Popup-Hilfe für den Benutzer der Anwendung.</span><span class="sxs-lookup"><span data-stu-id="d9d17-133">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="d9d17-134">Im Beispiel wird die <xref:System.Windows.Forms.KeyEventArgs> Eigenschaften an die Ereignishandlermethode zum Filtern nach allen Varianten des Drücken der Taste F1 mit Modifizierertaste übergeben.</span><span class="sxs-lookup"><span data-stu-id="d9d17-134">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="d9d17-135">Wenn der Benutzer eine Variante von F1 drückt, die Modifizierer Tastatur enthält die <xref:System.Windows.Forms.Help> Klasse wird ein Popupfenster, der ähnlich wie eine <xref:System.Windows.Forms.ToolTip>, in der Nähe des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="d9d17-135">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="d9d17-136">Wenn der Benutzer ALT + F2 drückt, wird eine andere kontextbezogene Hilfe mit zusätzlichen Informationen angezeigt.</span><span class="sxs-lookup"><span data-stu-id="d9d17-136">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Alt" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Shift" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9d17-137">Ruft einen Wert ab, der angibt, ob das Ereignis behandelt wurde, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d17-137">Gets or sets a value indicating whether the event was handled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9d17-138">
            <see langword="true" />, um die Standardbehandlung des Steuerelements zu umgehen, andernfalls <see langword="false" />, um auch das Ereignis an den Standardsteuerelementhandler zu übergeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d17-138">
              <see langword="true" /> to bypass the control's default handling; otherwise, <see langword="false" /> to also pass the event along to the default control handler.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9d17-139"><xref:System.Windows.Forms.KeyEventArgs.Handled%2A> von den verschiedenen Steuerelementen in Windows Forms wird anders implementiert werden.</span><span class="sxs-lookup"><span data-stu-id="d9d17-139"><xref:System.Windows.Forms.KeyEventArgs.Handled%2A> is implemented differently by different controls within Windows Forms.</span></span> <span data-ttu-id="d9d17-140">Für Steuerelemente wie <xref:System.Windows.Forms.TextBox> die Unterklasse systemeigenes Win32 gesteuert, es wird interpretiert, dass die Hauptnachricht nicht an das zugrunde liegende systemeigene Steuerelement übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="d9d17-140">For controls like <xref:System.Windows.Forms.TextBox> which subclass native Win32 controls, it is interpreted to mean that the key message should not be passed to the underlying native control.</span></span> <span data-ttu-id="d9d17-141">Wenn Sie festlegen, `Handled` auf "true", auf eine <xref:System.Windows.Forms.TextBox>, dass das Drücken das Taste die Steuerung nicht übergeben wird `events` an das zugrunde liegende Win32-Textfeld-Steuerelement, sondern zeigt weiterhin die Zeichen, die der Benutzer eingegeben.</span><span class="sxs-lookup"><span data-stu-id="d9d17-141">If you set `Handled` to true on a <xref:System.Windows.Forms.TextBox>, that control will not pass the key press `events` to the underlying Win32 text box control, but it will still display the characters that the user typed.</span></span>  
  
 <span data-ttu-id="d9d17-142">Wenn Sie verhindern, dass das aktuelle Steuerelement ein Tastendruck verwenden empfangen möchten die <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="d9d17-142">If you want to prevent the current control from receiving a key press, use the <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9d17-143">Im folgenden Beispiel wird bestimmt, ob der Benutzer einen nicht numerischen, gedrückt, und wenn dies der Fall ist, bricht der <xref:System.Windows.Forms.Control.KeyPress> Ereignis mithilfe der <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="d9d17-143">The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.SuppressKeyPress" />
      </Docs>
    </Member>
    <Member MemberName="KeyCode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Keys KeyCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Keys KeyCode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.KeyCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyCode As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Keys KeyCode { System::Windows::Forms::Keys get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9d17-144">Ruft den Tastaturcode für ein <see cref="E:System.Windows.Forms.Control.KeyDown" />-Ereignis oder ein <see cref="E:System.Windows.Forms.Control.KeyUp" />-Ereignis ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d17-144">Gets the keyboard code for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9d17-145">Ein <see cref="T:System.Windows.Forms.Keys" />-Wert, der den Tastencode für das Ereignis darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d17-145">A <see cref="T:System.Windows.Forms.Keys" /> value that is the key code for the event.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d9d17-146">Die folgenden Codebeispiele zeigen, wie mithilfe der <xref:System.Windows.Forms.KeyEventArgs.KeyCode%2A> -Eigenschaft können Sie bestimmen, welche-Taste gedrückt wurde.</span><span class="sxs-lookup"><span data-stu-id="d9d17-146">The following code examples show how to use the <xref:System.Windows.Forms.KeyEventArgs.KeyCode%2A> property to determine which key was pressed.</span></span>  
  
 <span data-ttu-id="d9d17-147">**Beispiel 1**</span><span class="sxs-lookup"><span data-stu-id="d9d17-147">**Example 1**</span></span>  
  
 <span data-ttu-id="d9d17-148">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.Control.KeyDown> Ereignis mit der <xref:System.Windows.Forms.Help> zum Anzeigen der Popup-Hilfe für den Benutzer der Anwendung.</span><span class="sxs-lookup"><span data-stu-id="d9d17-148">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="d9d17-149">Im Beispiel wird die <xref:System.Windows.Forms.KeyEventArgs> Eigenschaften an die Ereignishandlermethode zum Filtern nach allen Varianten des Drücken der Taste F1 mit Modifizierertaste übergeben.</span><span class="sxs-lookup"><span data-stu-id="d9d17-149">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="d9d17-150">Wenn der Benutzer eine Variante von F1 drückt, die Modifizierer Tastatur enthält die <xref:System.Windows.Forms.Help> Klasse wird ein Popupfenster, der ähnlich wie eine <xref:System.Windows.Forms.ToolTip>, in der Nähe des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="d9d17-150">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="d9d17-151">Wenn der Benutzer ALT + F2 drückt, wird eine andere kontextbezogene Hilfe mit zusätzlichen Informationen angezeigt.</span><span class="sxs-lookup"><span data-stu-id="d9d17-151">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 <span data-ttu-id="d9d17-152">**Beispiel 2**</span><span class="sxs-lookup"><span data-stu-id="d9d17-152">**Example 2**</span></span>  
  
 <span data-ttu-id="d9d17-153">Im folgenden Beispiel wird bestimmt, ob der Benutzer ALT + E gedrückt, und wenn der Mauszeiger über ein <xref:System.Windows.Forms.TreeNode>, ermöglicht es dem Benutzer, die bearbeiten <xref:System.Windows.Forms.TreeNode>.</span><span class="sxs-lookup"><span data-stu-id="d9d17-153">The following example determines whether the user pressed ALT+E, and if the mouse pointer is over a <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 <span data-ttu-id="d9d17-154">**Beispiel 3**</span><span class="sxs-lookup"><span data-stu-id="d9d17-154">**Example 3**</span></span>  
  
 <span data-ttu-id="d9d17-155">Im folgenden Beispiel wird bestimmt, ob der Benutzer einen nicht numerischen, gedrückt, und wenn dies der Fall ist, bricht der <xref:System.Windows.Forms.Control.KeyPress> Ereignis mithilfe der <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="d9d17-155">The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyData" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyValue" />
      </Docs>
    </Member>
    <Member MemberName="KeyData">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Keys KeyData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Keys KeyData" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.KeyData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyData As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Keys KeyData { System::Windows::Forms::Keys get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9d17-156">Ruft die Tastendaten für ein <see cref="E:System.Windows.Forms.Control.KeyDown" />-Ereignis oder ein <see cref="E:System.Windows.Forms.Control.KeyUp" />-Ereignis ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d17-156">Gets the key data for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9d17-157">Eine <see cref="T:System.Windows.Forms.Keys" />-Enumeration, die den Tastencode für die gedrückte Taste darstellt, zusammen mit Modifiziererflags, die angeben, welche der Tasten STRG, UMSCHALTTASTE und ALT gleichzeitig gedrückt wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d17-157">A <see cref="T:System.Windows.Forms.Keys" /> representing the key code for the key that was pressed, combined with modifier flags that indicate which combination of CTRL, SHIFT, and ALT keys was pressed at the same time.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9d17-158">Konstanten können <xref:System.Windows.Forms.Keys> zum Extrahieren von Informationen aus der <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="d9d17-158">You can use constants from <xref:System.Windows.Forms.Keys> to extract information from the <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> property.</span></span> <span data-ttu-id="d9d17-159">Verwenden Sie den bitweisen AND-Operator zurückgegebene Daten vergleichen <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> in Konstanten <xref:System.Windows.Forms.Keys> zum Abrufen von Informationen über die Schlüssel der Benutzer geklickt hat.</span><span class="sxs-lookup"><span data-stu-id="d9d17-159">Use the bitwise AND operator to compare data returned by <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> with constants in <xref:System.Windows.Forms.Keys> to obtain information about which keys the user pressed.</span></span> <span data-ttu-id="d9d17-160">Um zu bestimmen, ob eine bestimmte Taste gedrückt wurde, verwenden die <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, und <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="d9d17-160">To determine whether a specific modifier key was pressed, use the <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, and <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9d17-161">Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="d9d17-161">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="d9d17-162">Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d9d17-162">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="d9d17-163">Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen.</span><span class="sxs-lookup"><span data-stu-id="d9d17-163">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="d9d17-164">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d9d17-164">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="d9d17-165">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz eines Typs, die enthält von erben <xref:System.Windows.Forms.Control>, z. B. eine <xref:System.Windows.Forms.Button> oder <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="d9d17-165">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="d9d17-166">Geben Sie den Namen der Instanz `Control1` und stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d9d17-166">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#48](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#48)]
 [!code-vb[System.Windows.Forms.EventExamples#48](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#48)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyValue" />
      </Docs>
    </Member>
    <Member MemberName="KeyValue">
      <MemberSignature Language="C#" Value="public int KeyValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.KeyValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyValue As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyValue { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9d17-167">Ruft den Tastaturwert für ein <see cref="E:System.Windows.Forms.Control.KeyDown" />-Ereignis oder ein <see cref="E:System.Windows.Forms.Control.KeyUp" />-Ereignis ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d17-167">Gets the keyboard value for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9d17-168">Die Darstellung der <see cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" />-Eigenschaft als Ganzzahl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d17-168">The integer representation of the <see cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d9d17-169">Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="d9d17-169">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="d9d17-170">Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d9d17-170">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="d9d17-171">Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen.</span><span class="sxs-lookup"><span data-stu-id="d9d17-171">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="d9d17-172">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d9d17-172">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="d9d17-173">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz eines Typs, die enthält von erben <xref:System.Windows.Forms.Control>, z. B. eine <xref:System.Windows.Forms.Button> oder <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="d9d17-173">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="d9d17-174">Geben Sie den Namen der Instanz `Control1` und stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d9d17-174">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#48](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#48)]
 [!code-vb[System.Windows.Forms.EventExamples#48](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#48)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyData" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" />
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Keys Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Keys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modifiers As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Keys Modifiers { System::Windows::Forms::Keys get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9d17-175">Ruft die Modifiziererflags für ein <see cref="E:System.Windows.Forms.Control.KeyDown" />-Ereignis oder ein <see cref="E:System.Windows.Forms.Control.KeyUp" />-Ereignis ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d17-175">Gets the modifier flags for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
          </span>
          <span data-ttu-id="d9d17-176">Die Flags geben an, welche Kombination aus STRG, UMSCHALTTASTE und ALT gedrückt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d17-176">The flags indicate which combination of CTRL, SHIFT, and ALT keys was pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9d17-177">Ein <see cref="T:System.Windows.Forms.Keys" />-Wert, der mindestens ein Modifiziererflag darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d17-177">A <see cref="T:System.Windows.Forms.Keys" /> value representing one or more modifier flags.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9d17-178">Um zu bestimmen, ob eine bestimmte Taste gedrückt wurde, verwenden die <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, und <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="d9d17-178">To determine whether a specific modifier key was pressed, use the <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, and <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> properties.</span></span> <span data-ttu-id="d9d17-179">Modifiziererflags können zusammen mit bitweisen OR-Operator.</span><span class="sxs-lookup"><span data-stu-id="d9d17-179">Modifier flags can be combined with bitwise OR.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9d17-180">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.KeyEventArgs.Modifiers%2A> -Eigenschaft können Sie bestimmen, welche Modifizierertasten zusammen mit dem primären Schlüssel wurden.</span><span class="sxs-lookup"><span data-stu-id="d9d17-180">The following code example shows how to use the <xref:System.Windows.Forms.KeyEventArgs.Modifiers%2A> property to determine which modifier keys were pressed along with the primary key.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Alt" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Control" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Shift" />
        <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
      </Docs>
    </Member>
    <Member MemberName="Shift">
      <MemberSignature Language="C#" Value="public virtual bool Shift { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shift" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Shift" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Shift As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Shift { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9d17-181">Ruft einen Wert ab, der angibt, ob die UMSCHALTTASTE gedrückt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d17-181">Gets a value indicating whether the SHIFT key was pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9d17-182">
            <see langword="true" />, wenn die UMSCHALTTASTE gedrückt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d17-182">
              <see langword="true" /> if the SHIFT key was pressed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d9d17-183">Im folgenden Beispiel wird bestimmt, ob der Benutzer die UMSCHALT-Taste mit der F1-Taste gedrückt, und zeigt daher die Hilfe an.</span><span class="sxs-lookup"><span data-stu-id="d9d17-183">The following example determines whether the user pressed the Shift key with the F1 key, and if so, displays help.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Alt" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Control" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      </Docs>
    </Member>
    <Member MemberName="SuppressKeyPress">
      <MemberSignature Language="C#" Value="public bool SuppressKeyPress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressKeyPress" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.SuppressKeyPress" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressKeyPress As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressKeyPress { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9d17-184">Ruft einen Wert ab, der angibt, ob das Key-Ereignis an das zugrunde liegende Steuerelement übergeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d17-184">Gets or sets a value indicating whether the key event should be passed on to the underlying control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9d17-185">
            <see langword="true" />, wenn das Key-Ereignis nicht an das Steuerelement gesendet werden soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9d17-185">
              <see langword="true" /> if the key event should not be sent to the control; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9d17-186">Sie zuweisen können `true` für diese Eigenschaft in einem Ereignishandler, wie z. B. <xref:System.Windows.Forms.Control.KeyDown> um Benutzereingaben zu vermeiden.</span><span class="sxs-lookup"><span data-stu-id="d9d17-186">You can assign `true` to this property in an event handler such as <xref:System.Windows.Forms.Control.KeyDown> in order to prevent user input.</span></span>  
  
 <span data-ttu-id="d9d17-187">Festlegen von <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> auf `true` setzt auch <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> auf `true`.</span><span class="sxs-lookup"><span data-stu-id="d9d17-187">Setting <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> to `true` also sets <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9d17-188">Im folgenden Codebeispiel wird verhindert, dass numerische Tastatureingaben erreichen der <xref:System.Windows.Forms.TextBox> Steuerelement namens `textBox1`.</span><span class="sxs-lookup"><span data-stu-id="d9d17-188">The following code example prevents numeric keystrokes from reaching the <xref:System.Windows.Forms.TextBox> control named `textBox1`.</span></span>  
  
 [!code-csharp[KeyEventArgs.SuppressKeyPress#1](~/samples/snippets/csharp/VS_Snippets_Winforms/keyeventargs.suppresskeypress/cs/form1.cs#1)]
 [!code-vb[KeyEventArgs.SuppressKeyPress#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/keyeventargs.suppresskeypress/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Handled" />
      </Docs>
    </Member>
  </Members>
</Type>