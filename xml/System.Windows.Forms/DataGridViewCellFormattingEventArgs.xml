<Type Name="DataGridViewCellFormattingEventArgs" FullName="System.Windows.Forms.DataGridViewCellFormattingEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ec69552484999504fe0bc017b2dea2f392ee5b7a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69192954" /></Metadata><TypeSignature Language="C#" Value="public class DataGridViewCellFormattingEventArgs : System.Windows.Forms.ConvertEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewCellFormattingEventArgs extends System.Windows.Forms.ConvertEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewCellFormattingEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewCellFormattingEventArgs&#xA;Inherits ConvertEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewCellFormattingEventArgs : System::Windows::Forms::ConvertEventArgs" />
  <TypeSignature Language="F#" Value="type DataGridViewCellFormattingEventArgs = class&#xA;    inherit ConvertEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ConvertEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Daten für das <see cref="E:System.Windows.Forms.DataGridView.CellFormatting" />-Ereignis eines <see cref="T:System.Windows.Forms.DataGridView" /> bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln Sie <xref:System.Windows.Forms.DataGridView.CellFormatting> das-Ereignis, um die Konvertierung eines Zellwerts in ein für die Anzeige geeignetes Format anzupassen oder um die Darstellung einer Zelle abhängig von Ihrem Zustand oder Wert anzupassen.  
  
 Das <xref:System.Windows.Forms.DataGridView.CellFormatting> Ereignis tritt jedes Mal auf, wenn jede Zelle gezeichnet wird, sodass Sie bei der Behandlung dieses Ereignisses eine lange Verarbeitung vermeiden sollten. Dieses Ereignis tritt auch auf, wenn <xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A> die Zelle abgerufen wird <xref:System.Windows.Forms.DataGridViewCell.GetFormattedValue%2A> oder die zugehörige-Methode aufgerufen wird.  
  
 Wenn Sie das <xref:System.Windows.Forms.DataGridView.CellFormatting> -Ereignis behandeln, <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType> wird die-Eigenschaft mit dem Zellwert initialisiert. Wenn Sie eine benutzerdefinierte Konvertierung vom Zellwert in den Anzeige Wert bereitstellen, <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType> legen Sie die-Eigenschaft auf den konvertierten Wert fest, um sicherzustellen, dass der neue <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> Wert dem von der Cell-Eigenschaft angegebenen Typ entspricht. Um anzugeben, dass keine weitere Wert Formatierung erforderlich ist, legen <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType> Sie die `true`-Eigenschaft auf fest.  
  
 Wenn der-Ereignishandler abgeschlossen wird, <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType> Wenn `null` der oder der nicht der richtige Typ ist oder die <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A>-Eigenschaft `false` <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>ist, <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> wird der mit,, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>und formatiert. Eigenschaften des Zellstils, der von der <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A?displayProperty=nameWithType> -Eigenschaft zurückgegeben wird, die mithilfe der <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> Cell-Eigenschaft initialisiert wird. <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>  
  
 Unabhängig vom Wert <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType> der-Eigenschaft werden die Anzeigeeigenschaften des-Objekts, das von der <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A?displayProperty=nameWithType> -Eigenschaft zurückgegeben wird, verwendet, um die Zelle zu Rendering.  
  
 Weitere Informationen zur benutzerdefinierten Formatierung mithilfe des <xref:System.Windows.Forms.DataGridView.CellFormatting> -Ereignisses finden [Sie unter Gewusst wie: Passen Sie die Datenformatierung im Windows Forms DataGridView](~/docs/framework/winforms/controls/how-to-customize-data-formatting-in-the-windows-forms-datagridview-control.md)-Steuerelement an.  
  
 Um bei der Behandlung dieses Ereignisses Leistungseinbußen zu vermeiden, greifen Sie auf die Zelle durch die Parameter des Ereignis Handlers zu, anstatt direkt auf die Zelle zuzugreifen.  
  
 Behandeln Sie das <xref:System.Windows.Forms.DataGridView.CellParsing> -Ereignis, um die Konvertierung eines formatierten, benutzerdefinierten Werts in einen tatsächlichen Zellwert anzupassen.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das behandeln <xref:System.Windows.Forms.DataGridView.CellFormatting>von veranschaulicht.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
    <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
    <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
    <altmember cref="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.Format" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.FormatProvider" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.NullValue" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" />
    <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetFormattedValue(System.Object,System.Int32,System.Windows.Forms.DataGridViewCellStyle@,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter,System.Windows.Forms.DataGridViewDataErrorContexts)" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCellFormattingEventHandler" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle" />
    <altmember cref="P:System.Windows.Forms.ConvertEventArgs.Value" />
    <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
    <related type="Article" href="~/docs/framework/winforms/controls/how-to-customize-data-formatting-in-the-windows-forms-datagridview-control.md">Gewusst wie: Anpassen der Datenformatierung im DataGridView-Steuerelement in Windows Forms</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewCellFormattingEventArgs (int columnIndex, int rowIndex, object value, Type desiredType, System.Windows.Forms.DataGridViewCellStyle cellStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 columnIndex, int32 rowIndex, object value, class System.Type desiredType, class System.Windows.Forms.DataGridViewCellStyle cellStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellFormattingEventArgs.#ctor(System.Int32,System.Int32,System.Object,System.Type,System.Windows.Forms.DataGridViewCellStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnIndex As Integer, rowIndex As Integer, value As Object, desiredType As Type, cellStyle As DataGridViewCellStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewCellFormattingEventArgs(int columnIndex, int rowIndex, System::Object ^ value, Type ^ desiredType, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataGridViewCellFormattingEventArgs : int * int * obj * Type * System.Windows.Forms.DataGridViewCellStyle -&gt; System.Windows.Forms.DataGridViewCellFormattingEventArgs" Usage="new System.Windows.Forms.DataGridViewCellFormattingEventArgs (columnIndex, rowIndex, value, desiredType, cellStyle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="desiredType" Type="System.Type" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Der Spaltenindex der Zelle, die das Ereignis ausgelöst hat.</param>
        <param name="rowIndex">Der Zeilenindex der Zelle, die das Ereignis ausgelöst hat.</param>
        <param name="value">Der Inhalt der Zelle.</param>
        <param name="desiredType">Der Typ, in den <paramref name="value" /> konvertiert werden soll.</param>
        <param name="cellStyle">Das Format der Zelle, die das Ereignis verursacht hat.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.DataGridViewCellFormattingEventArgs" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der `desiredType` -Parameter stellt den Typ dar `value` , in den der-Parameter konvertiert `desiredType` werden soll, und die <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> -Eigenschaft der Zelle wird zugewiesen. Wenn eine Zelle z. b. Bildnamen als Bitmaps formatiert `value` , ist <xref:System.String> der, der den Bildnamen enthält `desiredType` , und <xref:System.Type> ist ein <xref:System.Drawing.Bitmap> , der den Typ darstellt.  
  
 Wenn der <xref:System.Windows.Forms.DataGridView.CellFormatting> Ereignishandler die <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> -Eigenschaft nicht auf einen Typ festgelegt, der von der Zelle angezeigt werden kann, wird der Zellen Inhalt mithilfe der <xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A>Eigenschaften <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, und <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> formatiert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs>von veranschaulicht.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> ist kleiner als -1. 
- oder - 
 <paramref name="rowIndex" /> ist kleiner als -1.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle" />
        <altmember cref="P:System.Windows.Forms.ConvertEventArgs.Value" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="CellStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle CellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle CellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property CellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ CellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Stil der formatierten Zelle ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />, der den Anzeigestil der formatierten Zelle darstellt. Der Standardwert ist der Wert der <see cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />-Eigenschaft der Zelle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch Festlegen der Eigenschaften des-Objekts, das <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A> von der-Eigenschaft zurückgegeben wird, wird die Anzeige der Zelle und ihres Inhalts geändert. Verwenden Sie diese Eigenschaft, um die Zellen Stile zu ändern, anstatt direkt auf die Zelle zuzugreifen, um Leistungseinbußen zu vermeiden.  
  
 Weitere Informationen zu Zell Formaten finden Sie unter [Zellen Stile im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md) Element.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A> -Eigenschaft verwendet wird, um den Hintergrund der Zellen zu färben, die die <xref:System.Drawing.Color.Pink%2A>Zeichenfolge "Rosa" in enthalten.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnIndex">
      <MemberSignature Language="C#" Value="public int ColumnIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.ColumnIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnIndex : int" Usage="System.Windows.Forms.DataGridViewCellFormattingEventArgs.ColumnIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Spaltenindex der Zelle ab, die formatiert wird.</summary>
        <value>Der Spaltenindex der Zelle, die formatiert wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.ColumnIndex%2A> die-Eigenschaft, um einen Index <xref:System.Windows.Forms.DataGridView.Columns%2A> in die- <xref:System.Windows.Forms.DataGridView>Eigenschaft eines abzurufen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.ColumnIndex%2A> -Eigenschaft zum Abrufen von Spalten Eigenschaften verwendet wird.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.Columns" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
      </Docs>
    </Member>
    <Member MemberName="FormattingApplied">
      <MemberSignature Language="C#" Value="public bool FormattingApplied { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FormattingApplied" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied" />
      <MemberSignature Language="VB.NET" Value="Public Property FormattingApplied As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FormattingApplied { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FormattingApplied : bool with get, set" Usage="System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Zellenwert erfolgreich formatiert wurde, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die Formatierung für den Zellenwert verarbeitet wurde, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie das <xref:System.Windows.Forms.DataGridView.CellFormatting> -Ereignis behandeln, <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A> legen Sie `true` die-Eigenschaft <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> nach dem Festlegen der-Eigenschaft auf fest, wenn keine weitere Wert Formatierung erforderlich ist. Wenn der <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A> -Eigenschafts `false` Wert ist, wenn der Ereignishandler beendet wird, wird die Formatierung auf den Wert angewendet, <xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A>der <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>durch die Eigenschaften <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> ,, <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>und <xref:System.Windows.Forms.DataGridViewCellStyle> des das von der <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A> -Eigenschaft zurückgegebene-Objekt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A> -Eigenschaft `true` auf festgelegt, um zu signalisieren, dass die Formatierung für diese Zelle abgeschlossen ist.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.Format" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.FormatProvider" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.NullValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle" />
      </Docs>
    </Member>
    <Member MemberName="RowIndex">
      <MemberSignature Language="C#" Value="public int RowIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.RowIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RowIndex : int" Usage="System.Windows.Forms.DataGridViewCellFormattingEventArgs.RowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Zeilenindex der Zelle ab, die formatiert wird.</summary>
        <value>Der Zeilenindex der Zelle, die formatiert wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.RowIndex%2A> die-Eigenschaft, um einen Index <xref:System.Windows.Forms.DataGridView.Rows%2A> in die- <xref:System.Windows.Forms.DataGridView>Eigenschaft eines abzurufen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.RowIndex%2A> -Eigenschaft verwendet wird, um die zu formatierende Zelle abzurufen. Der Zellen Verweis wird dann verwendet, um den QuickInfo-Text der Zelle festzulegen.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCell.ToolTipText/cpp/datagridviewcell.tooltiptext.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCell.ToolTipText/CS/datagridviewcell.tooltiptext.cs#1)]
 [!code-vb[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCell.ToolTipText/VB/datagridviewcell.tooltiptext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.Rows" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
      </Docs>
    </Member>
  </Members>
</Type>
